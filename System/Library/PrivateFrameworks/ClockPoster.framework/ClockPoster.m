double RadiusForRectAtAngleWithInset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7)
{
  float v12;
  float v13;
  double v14;
  double v15;
  double v16;
  CGFloat Height;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  unsigned int v24;
  double v25;
  __double2 v26;
  long double v27;
  long double v28;
  double v29;
  double v30;
  double v33;
  CGRect v35;
  CGRect v36;

  v12 = a6;
  v13 = fmodf(v12, 6.2832);
  v14 = v13;
  if (v13 < 0.0)
  {
    do
      v14 = v14 + 6.28318531;
    while (v14 < 0.0);
  }
  v15 = 1.57079633;
  if (v14 >= 1.57079633)
  {
    v16 = 3.14159265;
    if (v14 >= 3.14159265)
    {
      if (v14 < 4.71238898)
      {
        v14 = v14 + -3.14159265;
        goto LABEL_9;
      }
      v16 = 6.28318531;
    }
    v14 = v16 - v14;
  }
LABEL_9:
  v35.origin.x = a1;
  v35.origin.y = a2;
  v35.size.width = a3;
  v35.size.height = a4;
  Height = CGRectGetHeight(v35);
  v36.size.height = a4;
  v18 = Height + a7 * -2.0;
  v36.origin.x = a1;
  v36.origin.y = a2;
  v36.size.width = a3;
  v19 = CGRectGetWidth(v36) + a7 * -2.0;
  v20 = fmax((a5 - a7) * 1.52866, 0.0);
  v21 = v19 * 0.5;
  if (atan2(-(v20 - v18 * 0.5), v19 * 0.5) >= v14)
  {
    v22 = v21 * tan(v14);
LABEL_13:
    v23 = v22 * v22 + v21 * v21;
    return sqrt(v23);
  }
  v22 = v18 * 0.5;
  if (atan2(v22, v19 * 0.5 - v20) < v14)
  {
    v21 = v22 / tan(v14);
    goto LABEL_13;
  }
  v24 = 0;
  v33 = v22 - v20;
  v25 = 0.0;
  do
  {
    v26 = __sincos_stret((v25 + v15) * 0.5);
    v27 = v21 - v20 + v20 * pow(v26.__cosval, 0.622409222);
    v28 = v33 + v20 * pow(v26.__sinval, 0.622409222);
    v29 = v14 - atan2(v28, v27);
    if (v29 > 0.0) {
      v30 = (v25 + v15) * 0.5;
    }
    else {
      v30 = v25;
    }
    if (v29 < 0.0) {
      v15 = (v25 + v15) * 0.5;
    }
    else {
      v25 = v30;
    }
    if (fabs(v29) <= 0.01) {
      break;
    }
  }
  while (v24++ < 0x63);
  v23 = v28 * v28 + v27 * v27;
  return sqrt(v23);
}

char *sub_249F6491C()
{
  v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  MEMORY[0x270FA5388](v2 - 8);
  v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x270FA5388](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A0563F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TimeString(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v21(&v1[OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone], 1, 1, v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(&v1[OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__previousTimeString], 1, 1, v11);
  if (qword_26974F328 != -1) {
    swift_once();
  }
  sub_24A0563E8();
  uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(&v6[*(int *)(v4 + 20)], v10, v7);
  *(void *)v6 = 0;
  MEMORY[0x270FA5388](v15);
  *(&v21 - 2) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v6;
  *(&v21 - 1) = v16;
  sub_24A004350((uint64_t (*)(void))sub_249F6C530, (uint64_t)(&v21 - 4), (uint64_t)v14);
  sub_249F6E570((uint64_t)v6, type metadata accessor for TextClockDescriptor);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_249F6C538((uint64_t)v14, (uint64_t)&v1[OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString]);
  v17 = &v1[OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel_contentChanged];
  *(void *)v17 = 0;
  *((void *)v17 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver] = 0;
  sub_24A0564A8();
  uint64_t v18 = (uint64_t)v22;
  sub_24A0563E8();
  v21((char *)v18, 0, 1, v7);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v21 - 2) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v1;
  *(&v21 - 1) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18;
  v23 = v1;
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056468();
  swift_release();
  sub_249F6E790(v18, &qword_26974F440);
  return v1;
}

uint64_t sub_249F64D70()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v32 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_24A0563F8();
  uint64_t v5 = *(void *)(v31 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v30 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v29 - v8;
  swift_getKeyPath();
  uint64_t v10 = v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel___observationRegistrar;
  uint64_t v36 = v1;
  uint64_t v33 = sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  uint64_t v34 = v10;
  sub_24A056478();
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver))
  {
    swift_retain();
    sub_24A057688();
    swift_release();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v29[-2] = v1;
  v29[-1] = 0;
  uint64_t v36 = v1;
  sub_24A056468();
  v29[1] = 0;
  swift_release();
  swift_getKeyPath();
  uint64_t v36 = v1;
  sub_24A056478();
  swift_release();
  uint64_t v12 = v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  sub_249F6E6C8(v12, (uint64_t)v4, &qword_26974F440);
  uint64_t v13 = v5;
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v15 = v31;
  if (v14(v4, 1, v31) == 1)
  {
    sub_24A0563E8();
    sub_249F6E790((uint64_t)v4, &qword_26974F440);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v4, v15);
  }
  v29[0] = v9;
  uint64_t v16 = sub_24A057628();
  uint64_t v17 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v32, 1, 1, v16);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = v1;
  v20 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v30, v9, v15);
  sub_24A057608();
  swift_retain();
  uint64_t v21 = sub_24A0575F8();
  uint64_t v22 = v13;
  unint64_t v23 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8F500];
  *(void *)(v24 + 16) = v21;
  *(void *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v24 + v23, v20, v15);
  *(void *)(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_release();
  uint64_t v26 = sub_24A04CE18(v17, (uint64_t)&unk_26974F460, v24);
  uint64_t v27 = swift_getKeyPath();
  MEMORY[0x270FA5388](v27);
  v29[-2] = v19;
  v29[-1] = v26;
  uint64_t v35 = v19;
  sub_24A056468();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void, uint64_t))(v22 + 8))(v29[0], v15);
}

uint64_t sub_249F652C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = type metadata accessor for TimeString(0);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  v5[12] = swift_task_alloc();
  v5[13] = type metadata accessor for TextClockDescriptor(0);
  v5[14] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F468);
  v5[15] = v7;
  v5[16] = *(void *)(v7 - 8);
  v5[17] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F470);
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = sub_24A057608();
  v5[22] = sub_24A0575F8();
  uint64_t v10 = sub_24A0575D8();
  v5[23] = v10;
  v5[24] = v9;
  return MEMORY[0x270FA2498](sub_249F654E8, v10, v9);
}

uint64_t sub_249F654E8()
{
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = (double *)v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[6];
  uint64_t v6 = qword_269751340;
  uint64_t v7 = (char *)v4 + *(int *)(v0[13] + 20);
  uint64_t v8 = sub_24A0563F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v5, v8);
  *uint64_t v4 = 0.0;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v4;
  sub_249FCE794(v4, (void (*)(uint64_t))sub_249F6C970, v1);
  swift_task_dealloc();
  sub_249F6E570((uint64_t)v4, type metadata accessor for TextClockDescriptor);
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[25] = 0;
  uint64_t v10 = sub_24A0575F8();
  v0[26] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[27] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_249F65708;
  uint64_t v12 = v0[18];
  uint64_t v13 = v0[12];
  uint64_t v14 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v13, v10, v14, v12);
}

uint64_t sub_249F65708()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return MEMORY[0x270FA2498](sub_249F6584C, v3, v2);
}

uint64_t sub_249F6584C()
{
  uint64_t v1 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[9] + 48))(v1, 1, v0[8]) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  sub_249F6C538(v1, v0[11]);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v14 = v0[19];
    uint64_t v13 = v0[20];
    uint64_t v15 = v0[18];
    uint64_t v16 = v0[11];
    swift_release();
    sub_249F6E570(v16, type metadata accessor for TimeString);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = v0[25];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  sub_249F6E508(v5, v6, type metadata accessor for TimeString);
  swift_getKeyPath();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v6;
  v0[5] = v3;
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056468();
  swift_release();
  swift_task_dealloc();
  sub_249F6E570(v6, type metadata accessor for TimeString);
  swift_release();
  sub_249F6E570(v5, type metadata accessor for TimeString);
  v0[25] = v4;
  uint64_t v8 = sub_24A0575F8();
  v0[26] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[27] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_249F65708;
  uint64_t v10 = v0[18];
  uint64_t v11 = v0[12];
  uint64_t v12 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v11, v8, v12, v10);
}

uint64_t sub_249F65B70@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  return sub_249F6E6C8(v3, a1, &qword_26974F440);
}

uint64_t sub_249F65C44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  return sub_249F6E6C8(v4, a2, &qword_26974F440);
}

uint64_t sub_249F65D18(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F6E6C8(a1, (uint64_t)v6, &qword_26974F440);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v6, &qword_26974F440);
}

uint64_t sub_249F65E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a2, (uint64_t)v6, &qword_26974F440);
  uint64_t v7 = a1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  sub_249F6C5B8((uint64_t)v6, v7);
  swift_endAccess();
  sub_249F64D70();
  return sub_249F6E790((uint64_t)v6, &qword_26974F440);
}

uint64_t sub_249F65F40@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  return sub_249F6E508(v3, a1, type metadata accessor for TimeString);
}

uint64_t sub_249F66020(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  sub_249F6C29C(a2, v3);
  return swift_endAccess();
}

uint64_t sub_249F6608C()
{
  return swift_retain();
}

uint64_t sub_249F66138@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver);
  return swift_retain();
}

uint64_t sub_249F661EC()
{
  return swift_release();
}

uint64_t sub_249F662CC()
{
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone, &qword_26974F440);
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__previousTimeString, (uint64_t *)&unk_269751600);
  sub_249F6E570(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString, type metadata accessor for TimeString);
  sub_249F6C9E0(*(void *)(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel_contentChanged));
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel___observationRegistrar;
  uint64_t v2 = sub_24A0564B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_249F663E4()
{
  return type metadata accessor for RollingClockViewModel();
}

uint64_t type metadata accessor for RollingClockViewModel()
{
  uint64_t result = qword_26974F398;
  if (!qword_26974F398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249F66438()
{
  sub_249F665C4(319, &qword_26974F3A8, MEMORY[0x263F079C8]);
  if (v0 <= 0x3F)
  {
    sub_249F665C4(319, (unint64_t *)&qword_26974F3B0, (void (*)(uint64_t))type metadata accessor for TimeString);
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeString(319);
      if (v2 <= 0x3F)
      {
        sub_24A0564B8();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_249F665C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24A057968();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_249F66684(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_249F666A4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

BOOL sub_249F666E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_249F666F4()
{
  return sub_24A057E68();
}

uint64_t sub_249F6673C()
{
  return sub_24A057E38();
}

uint64_t sub_249F66768()
{
  return sub_24A057E68();
}

uint64_t sub_249F667AC(uint64_t a1, uint64_t a2, __n128 a3, __n128 a4)
{
  return sub_249F6EECC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24), a3, a4);
}

uint64_t sub_249F667D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v110 = a2;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7D0);
  MEMORY[0x270FA5388](v108);
  v109 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v79[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_24A056898();
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v102 = v4;
  MEMORY[0x270FA5388](v4);
  v100 = &v79[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v97 = sub_24A056C38();
  MEMORY[0x270FA5388](v97);
  v98 = &v79[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F640);
  MEMORY[0x270FA5388](v94);
  v99 = &v79[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7D8);
  uint64_t v8 = MEMORY[0x270FA5388](v92);
  v91 = (uint64_t *)&v79[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  v103 = (uint64_t *)&v79[-v10];
  uint64_t v90 = sub_24A056918();
  uint64_t v105 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  v104 = &v79[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F630);
  uint64_t v12 = MEMORY[0x270FA5388](v93);
  v96 = &v79[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v95 = &v79[-v15];
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v79[-v16];
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F620);
  MEMORY[0x270FA5388](v111);
  uint64_t v19 = &v79[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5E8);
  MEMORY[0x270FA5388](v20 - 8);
  v107 = &v79[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_24A055F08();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = &v79[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25);
  v28 = &v79[-v27];
  sub_249F6E324((unsigned char *)(a1 + 73), &v112);
  sub_249F67284((uint64_t)v28);
  v29 = (_OWORD *)swift_allocObject();
  long long v30 = *(_OWORD *)(a1 + 48);
  v29[3] = *(_OWORD *)(a1 + 32);
  v29[4] = v30;
  *(_OWORD *)((char *)v29 + 74) = *(_OWORD *)(a1 + 58);
  long long v31 = *(_OWORD *)(a1 + 16);
  v29[1] = *(_OWORD *)a1;
  void v29[2] = v31;
  sub_249F6E324(&v112, &v113);
  char v32 = v113;
  uint64_t v106 = v22;
  if (v113 == 3)
  {
    v84 = v17;
    v86 = v19;
    v87 = v29;
    v85 = v28;
    uint64_t v89 = v23;
    sub_249F6D774(a1);
    sub_249F6D774(a1);
    sub_249F67284((uint64_t)v26);
    uint64_t v33 = (uint64_t *)sub_24A056D88();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    int v83 = v38;
    int v80 = v38 & 1;
    v39 = *(void **)(a1 + 64);
    uint64_t v88 = a1;
    int v40 = *(unsigned __int8 *)(a1 + 72);
    v41 = v104;
    uint64_t v42 = sub_249F8B2F0((uint64_t)v104, v39, v40);
    uint64_t v43 = v92;
    v44 = (char *)v103 + *(int *)(v92 + 48);
    uint64_t *v103 = v42;
    v45 = *(void (**)(void))(v105 + 16);
    uint64_t v46 = v90;
    ((void (*)(char *, unsigned char *, uint64_t))v45)(v44, v41, v90);
    v47 = (char *)v91 + *(int *)(v43 + 48);
    uint64_t *v91 = v42;
    v81 = v47;
    uint64_t v48 = v46;
    v45();
    swift_retain_n();
    v91 = v33;
    uint64_t v49 = (uint64_t)v33;
    uint64_t v50 = v35;
    sub_249F6E4F8(v49, v35, v80);
    uint64_t v92 = v37;
    swift_bridgeObjectRetain();
    int v51 = sub_24A0568F8();
    int v52 = sub_24A056908();
    if (v51)
    {
      uint64_t v53 = (uint64_t)v98;
      uint64_t v54 = (uint64_t)v99;
      uint64_t v55 = v94;
      if ((v52 & ~v51) == 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v53 = (uint64_t)v98;
      uint64_t v54 = (uint64_t)v99;
      uint64_t v55 = v94;
      if (!v52)
      {
        int v51 = 0;
        goto LABEL_9;
      }
    }
    v51 |= v52;
LABEL_9:
    ((void (*)(uint64_t, char *, uint64_t))v45)(v53, v44, v48);
    uint64_t v62 = v97;
    *(void *)(v53 + *(int *)(v97 + 20)) = v42;
    *(_DWORD *)(v53 + *(int *)(v62 + 24)) = v51;
    sub_249F6E508(v53, v54 + *(int *)(v55 + 36), MEMORY[0x263F1A2F0]);
    *(void *)uint64_t v54 = v91;
    *(void *)(v54 + 8) = v50;
    uint64_t v82 = v50;
    LODWORD(v99) = v83 & 1;
    *(unsigned char *)(v54 + 16) = v83 & 1;
    *(void *)(v54 + 24) = v92;
    sub_249F6E570(v53, MEMORY[0x263F1A2F0]);
    uint64_t v105 = *(void *)(v105 + 8);
    ((void (*)(char *, uint64_t))v105)(v81, v48);
    uint64_t KeyPath = swift_getKeyPath();
    v64 = v100;
    sub_24A056888();
    uint64_t v65 = (uint64_t)v96;
    v66 = (uint64_t *)&v96[*(int *)(v93 + 36)];
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F660);
    uint64_t v69 = v101;
    uint64_t v68 = v102;
    (*(void (**)(char *, unsigned char *, uint64_t))(v101 + 16))((char *)v66 + *(int *)(v67 + 28), v64, v102);
    uint64_t *v66 = KeyPath;
    sub_249F6E6C8(v54, v65, &qword_26974F640);
    (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v64, v68);
    sub_249F6E790(v54, &qword_26974F640);
    sub_249F6E790((uint64_t)v103, &qword_26974F7D8);
    v70 = v95;
    sub_249F6E664(v65, (uint64_t)v95, &qword_26974F630);
    uint64_t v71 = (uint64_t)v70;
    uint64_t v72 = (uint64_t)v84;
    sub_249F6E664(v71, (uint64_t)v84, &qword_26974F630);
    swift_release();
    ((void (*)(unsigned char *, uint64_t))v105)(v104, v48);
    uint64_t v73 = (uint64_t)v86;
    sub_249F6E664(v72, (uint64_t)v86, &qword_26974F630);
    sub_249F6E5D0((uint64_t)v91, v82, (char)v99);
    swift_bridgeObjectRelease();
    uint64_t v74 = sub_24A0571F8();
    v75 = (uint64_t *)(v73 + *(int *)(v111 + 36));
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F670);
    uint64_t v23 = v89;
    v28 = v85;
    uint64_t v59 = v106;
    (*(void (**)(char *, unsigned char *, uint64_t))(v89 + 16))((char *)v75 + *(int *)(v76 + 36), v85, v106);
    uint64_t *v75 = v74;
    sub_249F6E6C8(v73, (uint64_t)v109, &qword_26974F620);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974F680);
    sub_249F6DB0C();
    sub_249F6EE60(&qword_26974F678, &qword_26974F680);
    v77 = v107;
    sub_24A056BE8();
    uint64_t v60 = (uint64_t)v77;
    sub_249F6E790(v73, &qword_26974F620);
    uint64_t v61 = v110;
    a1 = v88;
    goto LABEL_10;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v23 + 16))(v26, v28, v22);
  v56 = v109;
  unint64_t v57 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v58 = swift_allocObject();
  *(unsigned char *)(v58 + 16) = v32;
  *(void *)(v58 + 24) = sub_249F6E39C;
  *(void *)(v58 + 32) = v29;
  uint64_t v59 = v106;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v23 + 32))(v58 + v57, &v79[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)], v106);
  *v56 = sub_249F6E470;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v58;
  swift_storeEnumTagMultiPayload();
  sub_249F6D774(a1);
  sub_249F6D774(a1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F680);
  sub_249F6DB0C();
  sub_249F6EE60(&qword_26974F678, &qword_26974F680);
  uint64_t v60 = (uint64_t)v107;
  sub_24A056BE8();
  uint64_t v61 = v110;
LABEL_10:
  sub_249F6E664(v60, v61, &qword_26974F5E8);
  swift_release();
  sub_249F6D7FC(a1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v23 + 8))(v28, v59);
}

uint64_t sub_249F67284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v80 = (uint64_t)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_24A056538();
  uint64_t v83 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (uint64_t)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F820);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v88 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F828);
  os_log_t v86 = *(os_log_t *)(v87 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v87);
  uint64_t v81 = (uint64_t)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v82 = (uint64_t)v76 - v9;
  uint64_t v10 = sub_24A055F68();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for TimeString(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24A055F08();
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = (char *)v76 - v18;
  BOOL v19 = sub_249F687C4();
  uint64_t v91 = v1;
  int v20 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v21 = swift_retain();
  uint64_t v22 = sub_24A02FAD4(v21, v20);
  swift_release();
  swift_getKeyPath();
  if (v19)
  {
    v94[0] = v22;
    uint64_t v23 = sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
    uint64_t v89 = v14;
    uint64_t v24 = v23;
    sub_24A056478();
    swift_release();
    uint64_t v25 = v22 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
    swift_beginAccess();
    v79 = type metadata accessor for TimeString;
    sub_249F6E508(v25, (uint64_t)v13, type metadata accessor for TimeString);
    swift_release();
    swift_bridgeObjectRetain();
    v78 = type metadata accessor for TimeString;
    sub_249F6E570((uint64_t)v13, type metadata accessor for TimeString);
    sub_24A055F58();
    sub_24A055F18();
    uint64_t v26 = v92;
    LODWORD(v25) = v20;
    uint64_t v27 = v93;
    uint64_t v28 = v89;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v93, v17, v89);
    uint64_t v29 = swift_retain();
    int v77 = v25;
    uint64_t v30 = sub_24A02FAD4(v29, v25);
    swift_release();
    swift_getKeyPath();
    v94[0] = v30;
    v76[1] = v24;
    sub_24A056478();
    swift_release();
    uint64_t v31 = v30 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
    swift_beginAccess();
    sub_249F6E508(v31, (uint64_t)v13, v79);
    swift_release();
    sub_249F6E570((uint64_t)v13, v78);
    char v32 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    v32(v17, v27, v28);
    sub_249F6D038(&qword_26974F838, MEMORY[0x263F06828]);
    uint64_t v33 = (uint64_t)v88;
    sub_24A057788();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86[6].isa)(v33, 1, v87) == 1)
    {
      uint64_t v34 = v32;
      sub_249F6E790(v33, &qword_26974F820);
      if (qword_26B16F9B8 != -1) {
        swift_once();
      }
      uint64_t v35 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
      swift_beginAccess();
      uint64_t v36 = v35;
      uint64_t v37 = v80;
      sub_249F6E6C8(v36, v80, &qword_26B16FAA8);
      uint64_t v38 = v83;
      uint64_t v39 = v85;
      int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v37, 1, v85);
      uint64_t v41 = v84;
      if (v40 == 1)
      {
        sub_249FB8AA8(v84);
        sub_249F6E790(v37, &qword_26B16FAA8);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v84, v37, v39);
      }
      uint64_t v53 = v91;
      sub_249F6D774(v91);
      sub_249F6D774(v53);
      uint64_t v54 = sub_24A056518();
      os_log_type_t v55 = sub_24A0577B8();
      LODWORD(v88) = v55;
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        v95[0] = v87;
        *(_DWORD *)uint64_t v56 = 136315394;
        uint64_t v82 = v56 + 4;
        uint64_t v57 = swift_retain();
        uint64_t v58 = sub_24A02FAD4(v57, v77);
        swift_release();
        swift_getKeyPath();
        os_log_t v86 = v54;
        *(void *)&long long v98 = v58;
        sub_24A056478();
        swift_release();
        uint64_t v59 = v58 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
        swift_beginAccess();
        sub_249F6E508(v59, (uint64_t)v13, type metadata accessor for TimeString);
        swift_release();
        sub_249F6E570((uint64_t)v13, type metadata accessor for TimeString);
        uint64_t v60 = sub_24A057958();
        *(void *)&long long v97 = sub_249F782DC(v60, v61, v95);
        sub_24A057978();
        swift_bridgeObjectRelease();
        sub_249F6D7FC(v53);
        sub_249F6D7FC(v53);
        *(_WORD *)(v56 + 12) = 2080;
        uint64_t v82 = v56 + 14;
        v44 = v93;
        swift_beginAccess();
        uint64_t v62 = v38;
        uint64_t v14 = v89;
        v34(v17, v44, v89);
        sub_249F6D038(&qword_26974F840, MEMORY[0x263F06828]);
        uint64_t v63 = sub_24A057CF8();
        unint64_t v65 = v64;
        v66 = v17;
        uint64_t v47 = v92;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v66, v14);
        uint64_t v96 = sub_249F782DC(v63, v65, v95);
        sub_24A057978();
        swift_bridgeObjectRelease();
        os_log_t v67 = v86;
        _os_log_impl(&dword_249F61000, v86, (os_log_type_t)v88, "Cannot format time designator. Range of designator in NSAttributedString provided by CLKTimeFormatter is unknown when converted to AttributedString. \nRange: '%s' \nAttributedString '%s'.", (uint8_t *)v56, 0x16u);
        uint64_t v68 = v87;
        swift_arrayDestroy();
        MEMORY[0x24C5BA360](v68, -1, -1);
        MEMORY[0x24C5BA360](v56, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v84, v85);
        uint64_t v45 = v90;
        uint64_t v46 = v53;
      }
      else
      {
        sub_249F6D7FC(v53);
        sub_249F6D7FC(v53);

        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
        uint64_t v45 = v90;
        uint64_t v46 = v53;
        uint64_t v14 = v89;
        uint64_t v47 = v92;
        v44 = v93;
      }
    }
    else
    {
      uint64_t v48 = v82;
      sub_249F6E664(v33, v82, &qword_26974F828);
      uint64_t v49 = v81;
      sub_249F6E6C8(v48, v81, &qword_26974F828);
      uint64_t KeyPath = swift_getKeyPath();
      v76[-2] = MEMORY[0x270FA5388](KeyPath);
      swift_getKeyPath();
      uint64_t v46 = v91;
      id v51 = *(id *)(v91 + 16);
      *(void *)&long long v98 = sub_24A056CE8();
      sub_249F6EE60(&qword_26974F850, &qword_26974F828);
      v44 = v93;
      int v52 = (void (*)(void *, void))sub_24A055F28();
      sub_249F6E730();
      sub_24A055F78();
      v52(v94, 0);
      sub_249F6E790(v49, &qword_26974F828);
      sub_249F6E7EC((long long *)(v46 + 24), &v97);
      sub_249F6E7EC(&v97, &v98);
      if (v99)
      {
        sub_249F6E790(v48, &qword_26974F828);
        uint64_t v45 = v90;
        uint64_t v14 = v89;
      }
      else
      {
        uint64_t v69 = *((void *)&v98 + 1);
        uint64_t v14 = v89;
        if (*((void *)&v98 + 1))
        {
          sub_249F6E6C8(v48, v49, &qword_26974F828);
          uint64_t v70 = swift_getKeyPath();
          v76[-2] = MEMORY[0x270FA5388](v70);
          swift_getKeyPath();
          v95[0] = v69;
          swift_retain_n();
          uint64_t v71 = (void (*)(void *, void))sub_24A055F28();
          sub_249F6E80C();
          sub_24A055F78();
          v71(v94, 0);
          swift_release();
          sub_249F6E790(v49, &qword_26974F828);
        }
        sub_249F6E790(v48, &qword_26974F828);
        uint64_t v45 = v90;
      }
      uint64_t v47 = v92;
    }
  }
  else
  {
    v94[0] = v22;
    sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
    sub_24A056478();
    swift_release();
    uint64_t v42 = v22 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
    swift_beginAccess();
    sub_249F6E508(v42, (uint64_t)v13, type metadata accessor for TimeString);
    swift_release();
    swift_bridgeObjectRetain();
    sub_249F6E570((uint64_t)v13, type metadata accessor for TimeString);
    sub_24A055F58();
    sub_24A055F18();
    uint64_t v43 = v92;
    v44 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v93, v17, v14);
    uint64_t v45 = v90;
    uint64_t v46 = v91;
    uint64_t v47 = v43;
  }
  uint64_t v72 = swift_getKeyPath();
  v76[-2] = MEMORY[0x270FA5388](v72);
  swift_getKeyPath();
  uint64_t v96 = *(void *)(v46 + 56);
  uint64_t v73 = (void *)v96;
  swift_beginAccess();
  sub_249F6E5E4();
  id v74 = v73;
  sub_24A055ED8();
  swift_endAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v45, v44, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v44, v14);
}

uint64_t sub_249F681B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = sub_24A056898();
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v71 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_24A056C38();
  MEMORY[0x270FA5388](v64);
  unint64_t v65 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F640);
  MEMORY[0x270FA5388](v61);
  uint64_t v59 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7D8);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v76 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v55 - v11);
  uint64_t v73 = sub_24A056918();
  uint64_t v13 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F630);
  uint64_t v16 = MEMORY[0x270FA5388](v58);
  uint64_t v62 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v60 = (uint64_t)&v55 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v63 = (uint64_t)&v55 - v20;
  uint64_t v21 = sub_24A055F08();
  MEMORY[0x270FA5388](v21 - 8);
  sub_249F67284((uint64_t)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_24A056D88();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  int v55 = v28 & 1;
  int v56 = v28;
  uint64_t v29 = sub_249F8B2F0((uint64_t)v15, *(void **)(a1 + 64), *(unsigned __int8 *)(a1 + 72));
  uint64_t v30 = (char *)v12 + *(int *)(v8 + 56);
  os_log_t v67 = v12;
  uint64_t v68 = v13;
  *uint64_t v12 = v29;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v66 = v15;
  char v32 = v15;
  uint64_t v33 = v73;
  v31(v30, v32, v73);
  uint64_t v34 = *(int *)(v8 + 56);
  uint64_t v35 = v76;
  uint64_t v36 = (char *)v76 + v34;
  *uint64_t v76 = v29;
  uint64_t v37 = v33;
  v31((char *)v35 + v34, v30, v33);
  uint64_t v57 = v29;
  swift_retain_n();
  uint64_t v74 = v25;
  uint64_t v75 = v23;
  sub_249F6E4F8(v23, v25, v55);
  uint64_t v76 = v27;
  swift_bridgeObjectRetain();
  int v38 = sub_24A0568F8();
  int v39 = sub_24A056908();
  if (v38)
  {
    if ((v39 & ~v38) == 0) {
      goto LABEL_7;
    }
  }
  else if (!v39)
  {
    int v38 = 0;
    goto LABEL_7;
  }
  v38 |= v39;
LABEL_7:
  uint64_t v40 = (uint64_t)v65;
  v31(v65, v30, v37);
  uint64_t v41 = v64;
  *(void *)(v40 + *(int *)(v64 + 20)) = v57;
  *(_DWORD *)(v40 + *(int *)(v41 + 24)) = v38;
  uint64_t v42 = (uint64_t)v59;
  sub_249F6E508(v40, (uint64_t)&v59[*(int *)(v61 + 36)], MEMORY[0x263F1A2F0]);
  uint64_t v43 = v74;
  *(void *)uint64_t v42 = v75;
  *(void *)(v42 + 8) = v43;
  LODWORD(v64) = v56 & 1;
  *(unsigned char *)(v42 + 16) = v56 & 1;
  *(void *)(v42 + 24) = v76;
  sub_249F6E570(v40, MEMORY[0x263F1A2F0]);
  uint64_t v68 = *(void *)(v68 + 8);
  ((void (*)(char *, uint64_t))v68)(v36, v37);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = v69;
  sub_24A056888();
  uint64_t v46 = (uint64_t)v62;
  uint64_t v47 = (uint64_t *)&v62[*(int *)(v58 + 36)];
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F660);
  uint64_t v50 = v70;
  uint64_t v49 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v47 + *(int *)(v48 + 28), v45, v71);
  uint64_t *v47 = KeyPath;
  sub_249F6E6C8(v42, v46, &qword_26974F640);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v49);
  sub_249F6E790(v42, &qword_26974F640);
  sub_249F6E790((uint64_t)v67, &qword_26974F7D8);
  uint64_t v51 = v46;
  uint64_t v52 = v60;
  sub_249F6E664(v51, v60, &qword_26974F630);
  uint64_t v53 = v63;
  sub_249F6E664(v52, v63, &qword_26974F630);
  swift_release();
  ((void (*)(char *, uint64_t))v68)(v66, v73);
  sub_249F6E664(v53, v72, &qword_26974F630);
  sub_249F6E5D0(v75, v74, v64);
  return swift_bridgeObjectRelease();
}

BOOL sub_249F687C4()
{
  v22[0] = sub_24A056238();
  uint64_t v1 = *(void *)(v22[0] - 8);
  MEMORY[0x270FA5388](v22[0]);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A0563F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimeString(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(unsigned char *)(v0 + 8);
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_24A02FAD4(v13, v12);
  swift_release();
  swift_getKeyPath();
  v22[1] = v14;
  sub_249F6D038(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v15 = v14 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  sub_249F6E508(v15, (uint64_t)v11, type metadata accessor for TimeString);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v11[*(int *)(v9 + 44)], v4);
  sub_249F6E570((uint64_t)v11, type metadata accessor for TimeString);
  sub_24A056228();
  uint64_t v16 = sub_24A0563A8();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v18 = v22[0];
  v17(v3, v22[0]);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v7, v4);
  sub_24A0563E8();
  sub_24A056228();
  uint64_t v20 = sub_24A0563A8();
  v17(v3, v18);
  v19(v7, v4);
  return v16 != v20;
}

uint64_t sub_249F68AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249F68B58(a1, a2, a3, &qword_26974F860);
}

uint64_t sub_249F68AFC(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_26974F860);
}

void sub_249F68B08()
{
}

void sub_249F68B30()
{
}

uint64_t sub_249F68B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249F68B58(a1, a2, a3, &qword_26974F868);
}

uint64_t sub_249F68B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_24A057358() & 1;
}

uint64_t sub_249F68BB0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_26974F868);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_24A057328();
}

void sub_249F68C00()
{
}

void sub_249F68C28()
{
}

uint64_t sub_249F68C4C()
{
  return sub_24A056E18();
}

uint64_t sub_249F68C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F560);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F568);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = v1[3];
  long long v19 = v1[2];
  v20[0] = v10;
  *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v1 + 58);
  long long v11 = v1[1];
  v18[0] = *v1;
  v18[1] = v11;
  uint64_t v12 = *((void *)&v11 + 1);
  long long v13 = v19;
  uint64_t v14 = v10;
  sub_249F6D774((uint64_t)v18);
  sub_249F6D774((uint64_t)v18);
  sub_249F69254(v12, v13, *((uint64_t *)&v13 + 1), v14, v18, (uint64_t)v5);
  uint64_t v15 = sub_24A0571F8();
  sub_249F6E6C8((uint64_t)v5, (uint64_t)v9, &qword_26974F560);
  uint64_t v16 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v16 = v15;
  *((void *)v16 + 1) = v12;
  *((_OWORD *)v16 + 1) = v13;
  v16[32] = v14;
  sub_249F6CAA4(v12, v13, *((uint64_t *)&v13 + 1), v14);
  sub_249F6E790((uint64_t)v5, &qword_26974F560);
  sub_249F6E664((uint64_t)v9, a1, &qword_26974F568);
  return sub_249F6D7FC((uint64_t)v18);
}

uint64_t sub_249F68E04@<X0>(int a1@<W1>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7E0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v12 = sub_24A0571A8();
  v12[1] = v13;
  uint64_t v14 = (char *)v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974F7E8) + 44);
  *(void *)uint64_t v14 = sub_24A056A68();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7F0);
  sub_249F68FE0(a1, a2, a3, (uint64_t)&v14[*(int *)(v15 + 44)]);
  uint64_t v16 = sub_24A0571F8();
  uint64_t v17 = (uint64_t *)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974F7F8) + 36)];
  uint64_t v18 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974F670) + 36);
  uint64_t v19 = sub_24A055F08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, a4, v19);
  uint64_t *v17 = v16;
  sub_24A056748();
  sub_24A056748();
  sub_24A0571A8();
  sub_24A0566D8();
  sub_249F6E6C8((uint64_t)v12, a5, &qword_26974F7E0);
  uint64_t v20 = (_OWORD *)(a5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974F800) + 36));
  long long v21 = v23[1];
  _OWORD *v20 = v23[0];
  v20[1] = v21;
  _OWORD v20[2] = v23[2];
  return sub_249F6E790((uint64_t)v12, &qword_26974F7E0);
}

uint64_t sub_249F68FE0@<X0>(int a1@<W0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  int v28 = a1;
  int v5 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F630);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F808);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F810);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v24[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = &v24[-v19];
  BOOL v25 = (v5 - 1) > 1;
  v27(v18);
  sub_249F6E6C8((uint64_t)v8, (uint64_t)v12, &qword_26974F630);
  *(_WORD *)&v12[*(int *)(v10 + 44)] = 257;
  sub_249F6E790((uint64_t)v8, &qword_26974F630);
  sub_249F6E6C8((uint64_t)v12, (uint64_t)v17, &qword_26974F808);
  *(void *)&v17[*(int *)(v14 + 44)] = 0x3FF0000000000000;
  sub_249F6E790((uint64_t)v12, &qword_26974F808);
  sub_249F6E664((uint64_t)v17, (uint64_t)v20, &qword_26974F810);
  LOBYTE(v12) = (v28 & 0xFD) != 0;
  LOBYTE(v10) = (v28 & 0xFD) == 0;
  sub_249F6E6C8((uint64_t)v20, (uint64_t)v17, &qword_26974F810);
  *(void *)a4 = 0;
  *(unsigned char *)(a4 + 8) = (v5 - 1) < 2;
  *(unsigned char *)(a4 + 9) = v25;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F818);
  sub_249F6E6C8((uint64_t)v17, a4 + *(int *)(v21 + 48), &qword_26974F810);
  uint64_t v22 = a4 + *(int *)(v21 + 64);
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = v10;
  *(unsigned char *)(v22 + 9) = (_BYTE)v12;
  sub_249F6E790((uint64_t)v20, &qword_26974F810);
  return sub_249F6E790((uint64_t)v17, &qword_26974F810);
}

uint64_t sub_249F69254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v131 = a4;
  *((void *)&v122 + 1) = a3;
  *(void *)&long long v122 = a2;
  *(void *)&long long v132 = a1;
  uint64_t v124 = a6;
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F570);
  MEMORY[0x270FA5388](v118);
  v120 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F578);
  MEMORY[0x270FA5388](v109);
  uint64_t v111 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F580);
  MEMORY[0x270FA5388](v119);
  char v112 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F588);
  MEMORY[0x270FA5388](v130);
  v121 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F590);
  uint64_t v11 = MEMORY[0x270FA5388](v110);
  uint64_t v106 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v107 = (uint64_t)&v93 - v13;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F598);
  MEMORY[0x270FA5388](v104);
  uint64_t v96 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5A0);
  MEMORY[0x270FA5388](v102);
  uint64_t v103 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5A8);
  MEMORY[0x270FA5388](v117);
  uint64_t v105 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5B0);
  uint64_t v17 = MEMORY[0x270FA5388](v101);
  uint64_t v94 = (uint64_t)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v95 = (uint64_t)&v93 - v19;
  uint64_t v99 = sub_24A057198();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  long long v97 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5B8);
  uint64_t v21 = MEMORY[0x270FA5388](v108);
  uint64_t v23 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v100 = (char *)&v93 - v24;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5C0);
  MEMORY[0x270FA5388](v125);
  uint64_t v129 = (uint64_t)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5C8);
  MEMORY[0x270FA5388](v113);
  uint64_t v115 = (uint64_t)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5D0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5D8);
  MEMORY[0x270FA5388](v114);
  uint64_t v31 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5E0);
  MEMORY[0x270FA5388](v126);
  v116 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5E8);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)&v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5F0);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  int v39 = (char *)&v93 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v93 - v40;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F560);
  MEMORY[0x270FA5388](v42 - 8);
  v128 = (char *)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = (_OWORD *)swift_allocObject();
  long long v45 = a5[3];
  v44[3] = a5[2];
  v44[4] = v45;
  *(_OWORD *)((char *)v44 + 74) = *(_OWORD *)((char *)a5 + 58);
  long long v46 = a5[1];
  v44[1] = *a5;
  v44[2] = v46;
  v127 = v44;
  uint64_t v47 = (uint64_t)a5;
  v123 = a5;
  switch((char)v131)
  {
    case 1:
      sub_249F6D774((uint64_t)a5);
      sub_249F667D0((uint64_t)a5, (uint64_t)v35);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974F730);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_24A0593D0;
      uint64_t v55 = *(void *)(v132 + 16);
      if (!v55)
      {
        __break(1u);
        goto LABEL_21;
      }
      int v56 = (void *)v54;
      swift_retain();
      v56[4] = sub_24A057158();
      v56[5] = v57;
      if (v55 == 1)
      {
LABEL_21:
        __break(1u);
        JUMPOUT(0x249F6A82CLL);
      }
      swift_retain();
      v56[6] = sub_24A057158();
      v56[7] = v58;
      sub_24A057248();
      sub_24A057258();
      MEMORY[0x24C5B8980](v56);
      sub_24A0567A8();
      uint64_t v59 = *(void *)v135;
      long long v132 = *(_OWORD *)&v135[8];
      uint64_t v60 = *(void *)&v135[24];
      uint64_t v61 = v136;
      uint64_t v62 = v106;
      sub_249F6E6C8((uint64_t)v35, v106, &qword_26974F5E8);
      uint64_t v63 = v62 + *(int *)(v110 + 36);
      *(void *)uint64_t v63 = v59;
      *(_OWORD *)(v63 + 8) = v132;
      *(void *)(v63 + 24) = v60;
      *(void *)(v63 + 32) = v61;
      sub_249F6E790((uint64_t)v35, &qword_26974F5E8);
      uint64_t v64 = &qword_26974F590;
      uint64_t v65 = v107;
      sub_249F6E664(v62, v107, &qword_26974F590);
      sub_249F6E6C8(v65, (uint64_t)v111, &qword_26974F590);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974F6A0);
      sub_249F6D9CC();
      sub_249F6EE60(&qword_26974F698, &qword_26974F6A0);
      uint64_t v66 = (uint64_t)v112;
      sub_24A056BE8();
      sub_249F6E6C8(v66, (uint64_t)v120, &qword_26974F580);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5F8);
      sub_249F6D8E4();
      sub_249F6EE60(&qword_26974F6A8, &qword_26974F5F8);
      uint64_t v67 = (uint64_t)v121;
      sub_24A056BE8();
      sub_249F6E790(v66, &qword_26974F580);
      sub_249F6E6C8(v67, v129, &qword_26974F588);
      swift_storeEnumTagMultiPayload();
      sub_249F6DCE8();
      sub_249F6E0A4();
      uint64_t v53 = (uint64_t)v128;
      sub_24A056BE8();
      sub_249F6E790(v67, &qword_26974F588);
      uint64_t v68 = v65;
LABEL_17:
      uint64_t v90 = v64;
LABEL_18:
      sub_249F6E790(v68, v90);
LABEL_19:
      sub_249F6E664(v53, v124, &qword_26974F560);
      swift_release();
      return sub_249F6D7FC((uint64_t)v123);
    case 2:
      uint64_t v69 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
      uint64_t v70 = v127;
      *((void *)v69 + 2) = sub_249F6D88C;
      *((void *)v69 + 3) = v70;
      uint64_t v71 = v132;
      uint64_t v72 = v122;
      *((void *)v69 + 4) = v132;
      *((void *)v69 + 5) = v72;
      uint64_t v73 = v111;
      *uint64_t v111 = sub_249F6E184;
      v73[1] = v69;
      swift_storeEnumTagMultiPayload();
      sub_249F6D774(v47);
      sub_249F6CAA4(v71, v72, *((uint64_t *)&v122 + 1), 2);
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974F6A0);
      sub_249F6D9CC();
      sub_249F6EE60(&qword_26974F698, &qword_26974F6A0);
      uint64_t v74 = (uint64_t)v112;
      sub_24A056BE8();
      sub_249F6E6C8(v74, (uint64_t)v120, &qword_26974F580);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5F8);
      sub_249F6D8E4();
      sub_249F6EE60(&qword_26974F6A8, &qword_26974F5F8);
      uint64_t v75 = (uint64_t)v121;
      sub_24A056BE8();
      sub_249F6E790(v74, &qword_26974F580);
      sub_249F6E6C8(v75, v129, &qword_26974F588);
      swift_storeEnumTagMultiPayload();
      sub_249F6DCE8();
      sub_249F6E0A4();
      uint64_t v53 = (uint64_t)v128;
      sub_24A056BE8();
      uint64_t v76 = v75;
      goto LABEL_8;
    case 3:
      int v77 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
      v78 = v127;
      *((void *)v77 + 2) = sub_249F6D88C;
      *((void *)v77 + 3) = v78;
      uint64_t v79 = v132;
      uint64_t v80 = v122;
      *((void *)v77 + 4) = v132;
      *((void *)v77 + 5) = v80;
      uint64_t v81 = *((void *)&v122 + 1);
      *((void *)v77 + 6) = *((void *)&v122 + 1);
      uint64_t v82 = v120;
      *v120 = sub_249F6D8D4;
      v82[1] = v77;
      swift_storeEnumTagMultiPayload();
      sub_249F6D774(v47);
      sub_249F6CAA4(v79, v80, v81, 3);
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5F8);
      sub_249F6D8E4();
      sub_249F6EE60(&qword_26974F6A8, &qword_26974F5F8);
      uint64_t v83 = (uint64_t)v121;
      sub_24A056BE8();
      sub_249F6E6C8(v83, v129, &qword_26974F588);
      swift_storeEnumTagMultiPayload();
      sub_249F6DCE8();
      sub_249F6E0A4();
      uint64_t v53 = (uint64_t)v128;
      sub_24A056BE8();
      uint64_t v76 = v83;
LABEL_8:
      sub_249F6E790(v76, &qword_26974F588);
      swift_release();
      goto LABEL_19;
    case 4:
      if (*((void *)&v122 + 1) | (unint64_t)v122 | (unint64_t)v132)
      {
        if ((void)v132 == 1 && v122 == 0)
        {
          sub_249F6D774((uint64_t)a5);
          sub_249F667D0((uint64_t)a5, (uint64_t)v35);
          uint64_t v84 = v94;
          sub_249F6E6C8((uint64_t)v35, v94, &qword_26974F5E8);
          sub_249F6E790((uint64_t)v35, &qword_26974F5E8);
          uint64_t v64 = &qword_26974F5B0;
          uint64_t v85 = v95;
          sub_249F6E664(v84, v95, &qword_26974F5B0);
          sub_249F6E6C8(v85, v103, &qword_26974F5B0);
          swift_storeEnumTagMultiPayload();
          sub_249F6DF64();
          sub_249F6E004();
          uint64_t v86 = (uint64_t)v105;
        }
        else
        {
          sub_249F6D774((uint64_t)a5);
          uint64_t v85 = v96;
          sub_249F667D0((uint64_t)a5, v96);
          long long v133 = xmmword_24A059370;
          char v134 = 0;
          *(_OWORD *)v135 = xmmword_24A059380;
          *(_OWORD *)&v135[16] = xmmword_24A059390;
          long long v136 = xmmword_24A0593A0;
          long long v137 = xmmword_24A0593B0;
          long long v138 = xmmword_24A0593C0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26974F738);
          sub_249F6E194();
          sub_24A056E08();
          uint64_t v64 = &qword_26974F598;
          sub_249F6E6C8(v85, v103, &qword_26974F598);
          swift_storeEnumTagMultiPayload();
          sub_249F6DF64();
          sub_249F6E004();
          uint64_t v86 = (uint64_t)v105;
        }
        sub_24A056BE8();
        sub_249F6E6C8(v86, v115, &qword_26974F5A8);
        swift_storeEnumTagMultiPayload();
        sub_249F6DDAC();
        sub_249F6DF28();
        uint64_t v91 = (uint64_t)v116;
        sub_24A056BE8();
        sub_249F6E790(v86, &qword_26974F5A8);
        sub_249F6E6C8(v91, v129, &qword_26974F5E0);
        swift_storeEnumTagMultiPayload();
        sub_249F6DCE8();
        sub_249F6E0A4();
        uint64_t v53 = (uint64_t)v128;
        sub_24A056BE8();
        sub_249F6E790(v91, &qword_26974F5E0);
        uint64_t v68 = v85;
        goto LABEL_17;
      }
      sub_249F6D774((uint64_t)a5);
      sub_249F667D0((uint64_t)a5, (uint64_t)v35);
      uint64_t v87 = v97;
      sub_24A057188();
      uint64_t v88 = v98;
      uint64_t v89 = v99;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(&v23[*(int *)(v108 + 36)], v87, v99);
      sub_249F6E6C8((uint64_t)v35, (uint64_t)v23, &qword_26974F5E8);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
      sub_249F6E790((uint64_t)v35, &qword_26974F5E8);
      uint64_t v51 = &qword_26974F5B8;
      uint64_t v41 = v100;
      sub_249F6E664((uint64_t)v23, (uint64_t)v100, &qword_26974F5B8);
      sub_249F6E6C8((uint64_t)v41, (uint64_t)v29, &qword_26974F5B8);
      swift_storeEnumTagMultiPayload();
      sub_249F6DDE8();
      sub_249F6DE88();
      sub_24A056BE8();
      sub_249F6E6C8((uint64_t)v31, v115, &qword_26974F5D8);
      swift_storeEnumTagMultiPayload();
      sub_249F6DDAC();
      sub_249F6DF28();
      uint64_t v52 = (uint64_t)v116;
      sub_24A056BE8();
      sub_249F6E790((uint64_t)v31, &qword_26974F5D8);
      sub_249F6E6C8(v52, v129, &qword_26974F5E0);
      swift_storeEnumTagMultiPayload();
      sub_249F6DCE8();
      sub_249F6E0A4();
      uint64_t v53 = (uint64_t)v128;
      sub_24A056BE8();
LABEL_14:
      sub_249F6E790(v52, &qword_26974F5E0);
      uint64_t v68 = (uint64_t)v41;
      uint64_t v90 = v51;
      goto LABEL_18;
    default:
      sub_249F6D774((uint64_t)a5);
      uint64_t v48 = v132;
      swift_retain();
      sub_249F667D0((uint64_t)a5, (uint64_t)v35);
      uint64_t KeyPath = swift_getKeyPath();
      sub_249F6E6C8((uint64_t)v35, (uint64_t)v39, &qword_26974F5E8);
      uint64_t v50 = (uint64_t *)&v39[*(int *)(v36 + 36)];
      *uint64_t v50 = KeyPath;
      v50[1] = v48;
      swift_retain();
      sub_249F6E790((uint64_t)v35, &qword_26974F5E8);
      uint64_t v51 = &qword_26974F5F0;
      sub_249F6E664((uint64_t)v39, (uint64_t)v41, &qword_26974F5F0);
      sub_249F6E6C8((uint64_t)v41, (uint64_t)v29, &qword_26974F5F0);
      swift_storeEnumTagMultiPayload();
      sub_249F6DDE8();
      sub_249F6DE88();
      sub_24A056BE8();
      sub_249F6E6C8((uint64_t)v31, v115, &qword_26974F5D8);
      swift_storeEnumTagMultiPayload();
      sub_249F6DDAC();
      sub_249F6DF28();
      uint64_t v52 = (uint64_t)v116;
      sub_24A056BE8();
      sub_249F6E790((uint64_t)v31, &qword_26974F5D8);
      sub_249F6E6C8(v52, v129, &qword_26974F5E0);
      swift_storeEnumTagMultiPayload();
      sub_249F6DCE8();
      sub_249F6E0A4();
      uint64_t v53 = (uint64_t)v128;
      sub_24A056BE8();
      swift_release();
      goto LABEL_14;
  }
}

unint64_t sub_249F6A840()
{
  return 0xD000000000000018;
}

uint64_t sub_249F6A85C@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F758);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F760);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A056748();
  sub_24A056748();
  if (qword_26974F280 != -1) {
    swift_once();
  }
  uint64_t *v6 = sub_24A0571A8();
  v6[1] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F768);
  sub_249F6AA80(a1, (uint64_t)v6 + *(int *)(v11 + 44));
  sub_249F6E6C8((uint64_t)v6, (uint64_t)v9, &qword_26974F758);
  sub_249F6E790((uint64_t)v6, &qword_26974F758);
  sub_24A056748();
  sub_24A056748();
  sub_24A0571A8();
  sub_24A0566D8();
  sub_249F6E6C8((uint64_t)v9, a2, &qword_26974F760);
  uint64_t v12 = (_OWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974F770) + 36));
  long long v13 = v15[1];
  *uint64_t v12 = v15[0];
  v12[1] = v13;
  v12[2] = v15[2];
  return sub_249F6E790((uint64_t)v9, &qword_26974F760);
}

uint64_t sub_249F6AA80@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  long long v46 = a1;
  uint64_t v52 = a2;
  uint64_t v2 = sub_24A056818();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v50 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_24A057208();
  uint64_t v4 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  v44 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F778);
  MEMORY[0x270FA5388](v45);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F780);
  uint64_t v8 = MEMORY[0x270FA5388](v47);
  uint64_t v51 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v49 = (uint64_t)&v41 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5E8);
  MEMORY[0x270FA5388](v11 - 8);
  long long v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F788);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (void (*)(uint64_t))((char *)&v41 - v20);
  v46(v19);
  sub_249F6E6C8((uint64_t)v13, (uint64_t)v18, &qword_26974F5E8);
  *(void *)&v18[*(int *)(v15 + 44)] = 0x3FF0000000000000;
  sub_249F6E790((uint64_t)v13, &qword_26974F5E8);
  long long v46 = v21;
  sub_249F6E664((uint64_t)v18, (uint64_t)v21, &qword_26974F788);
  uint64_t v22 = swift_bridgeObjectRetain();
  MEMORY[0x24C5B8990](v22);
  sub_24A0567B8();
  uint64_t v43 = v53[0];
  uint64_t v23 = v53[1];
  uint64_t v24 = v53[2];
  uint64_t v25 = v53[3];
  uint64_t v26 = v53[4];
  if (qword_26974F280 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_269752318;
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v42 = v53[5];
  char v28 = v54;
  uint64_t v29 = v55;
  char v30 = v56;
  uint64_t v31 = v58;
  uint64_t v41 = v57;
  uint64_t v32 = v44;
  uint64_t v33 = v48;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v44, *MEMORY[0x263F1B960], v48);
  uint64_t v34 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v50, v32, v33);
  sub_249F6E508(v34, (uint64_t)&v7[*(int *)(v45 + 36)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v7 = v43;
  *((void *)v7 + 1) = v23;
  *((void *)v7 + 2) = v24;
  *((void *)v7 + 3) = v25;
  *((void *)v7 + 4) = v26;
  *((void *)v7 + 5) = v27;
  v7[48] = 0;
  *((void *)v7 + 7) = v42;
  v7[64] = v28;
  *((void *)v7 + 9) = v29;
  v7[80] = v30;
  *((void *)v7 + 11) = v41;
  *((void *)v7 + 12) = v31;
  swift_bridgeObjectRetain();
  sub_249F6E570(v34, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v32, v33);
  sub_249F6E2F8((uint64_t)v53);
  uint64_t v35 = v51;
  sub_249F6E6C8((uint64_t)v7, v51, &qword_26974F778);
  *(void *)(v35 + *(int *)(v47 + 36)) = 0xBFF0000000000000;
  sub_249F6E790((uint64_t)v7, &qword_26974F778);
  uint64_t v36 = v49;
  sub_249F6E664(v35, v49, &qword_26974F780);
  uint64_t v37 = v46;
  sub_249F6E6C8((uint64_t)v46, (uint64_t)v18, &qword_26974F788);
  sub_249F6E6C8(v36, v35, &qword_26974F780);
  uint64_t v38 = v52;
  sub_249F6E6C8((uint64_t)v18, v52, &qword_26974F788);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F790);
  sub_249F6E6C8(v35, v38 + *(int *)(v39 + 48), &qword_26974F780);
  sub_249F6E790(v36, &qword_26974F780);
  sub_249F6E790((uint64_t)v37, &qword_26974F788);
  sub_249F6E790(v35, &qword_26974F780);
  return sub_249F6E790((uint64_t)v18, &qword_26974F788);
}

uint64_t sub_249F6B050@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F798);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7A0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A056748();
  sub_24A056748();
  if (qword_26974F280 != -1) {
    swift_once();
  }
  *uint64_t v12 = sub_24A0571A8();
  v12[1] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7A8);
  sub_249F6B27C(a1, a2, a3, (uint64_t)v12 + *(int *)(v17 + 44), a5);
  sub_249F6E6C8((uint64_t)v12, (uint64_t)v15, &qword_26974F798);
  sub_249F6E790((uint64_t)v12, &qword_26974F798);
  sub_24A056748();
  sub_24A056748();
  sub_24A0571A8();
  sub_24A0566D8();
  sub_249F6E6C8((uint64_t)v15, a4, &qword_26974F7A0);
  uint64_t v18 = (_OWORD *)(a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974F7B0) + 36));
  long long v19 = v21[1];
  *uint64_t v18 = v21[0];
  v18[1] = v19;
  _OWORD v18[2] = v21[2];
  return sub_249F6E790((uint64_t)v15, &qword_26974F7A0);
}

uint64_t sub_249F6B27C@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D1>)
{
  v52[1] = a3;
  uint64_t v54 = a2;
  uint64_t v59 = a1;
  uint64_t v65 = a4;
  uint64_t v6 = sub_24A056818();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v63 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_24A057208();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v57 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_24A056FA8();
  uint64_t v9 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7B8);
  MEMORY[0x270FA5388](v55);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7C0);
  uint64_t v14 = MEMORY[0x270FA5388](v58);
  uint64_t v64 = (uint64_t)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v61 = (uint64_t)v52 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F5E8);
  MEMORY[0x270FA5388](v17 - 8);
  long long v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F788);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (void (*)(uint64_t))((char *)v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)v52 - v26;
  v59(v25);
  sub_249F6E6C8((uint64_t)v19, (uint64_t)v24, &qword_26974F5E8);
  *(void *)((char *)v24 + *(int *)(v21 + 44)) = 0x3FF0000000000000;
  sub_249F6E790((uint64_t)v19, &qword_26974F5E8);
  uint64_t v59 = v24;
  char v56 = v27;
  sub_249F6E664((uint64_t)v24, (uint64_t)v27, &qword_26974F788);
  uint64_t v28 = qword_26974F330;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  id v29 = (id)qword_269752438;
  sub_24A056FF8();
  uint64_t v30 = v53;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1B4B8], v53);
  uint64_t v31 = sub_24A056FE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v54 = v66;
  LODWORD(v53) = v67;
  uint64_t v32 = v68;
  char v33 = v69;
  uint64_t v34 = v70;
  uint64_t v35 = v71;
  uint64_t v36 = v60;
  uint64_t v37 = v57;
  uint64_t v38 = v62;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v57, *MEMORY[0x263F1B960], v62);
  uint64_t v39 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v63, v37, v38);
  sub_249F6E508(v39, (uint64_t)&v13[*(int *)(v55 + 36)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v13 = v31;
  *((void *)v13 + 1) = 0;
  *((_WORD *)v13 + 8) = 257;
  *((void *)v13 + 3) = v54;
  v13[32] = v53;
  *((void *)v13 + 5) = v32;
  v13[48] = v33;
  *((void *)v13 + 7) = v34;
  *((void *)v13 + 8) = v35;
  swift_retain();
  sub_249F6E570(v39, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  swift_release();
  sub_24A057268();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = v64;
  sub_249F6E6C8((uint64_t)v13, v64, &qword_26974F7B8);
  uint64_t v45 = v44 + *(int *)(v58 + 36);
  *(double *)uint64_t v45 = a5;
  *(void *)(v45 + 8) = v41;
  *(void *)(v45 + 16) = v43;
  sub_249F6E790((uint64_t)v13, &qword_26974F7B8);
  uint64_t v46 = v61;
  sub_249F6E664(v44, v61, &qword_26974F7C0);
  uint64_t v47 = (uint64_t)v56;
  uint64_t v48 = v59;
  sub_249F6E6C8((uint64_t)v56, (uint64_t)v59, &qword_26974F788);
  sub_249F6E6C8(v46, v44, &qword_26974F7C0);
  uint64_t v49 = v65;
  sub_249F6E6C8((uint64_t)v48, v65, &qword_26974F788);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7C8);
  sub_249F6E6C8(v44, v49 + *(int *)(v50 + 48), &qword_26974F7C0);
  sub_249F6E790(v46, &qword_26974F7C0);
  sub_249F6E790(v47, &qword_26974F788);
  sub_249F6E790(v44, &qword_26974F7C0);
  return sub_249F6E790((uint64_t)v48, &qword_26974F788);
}

__n128 sub_249F6B914@<Q0>(__n128 *a1@<X8>)
{
  sub_24A0571A8();
  sub_249F7CA68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v14, 0.0, 1, INFINITY, 0);
  unsigned __int8 v2 = BYTE8(v14);
  unint64_t v3 = v15;
  unsigned __int8 v4 = v16;
  unint64_t v5 = v17;
  unsigned __int8 v6 = v18;
  unint64_t v7 = v19;
  unsigned __int8 v8 = v20;
  unint64_t v9 = v21;
  unsigned __int8 v10 = v22;
  unint64_t v11 = v23;
  unsigned __int8 v12 = v24;
  __n128 result = v25;
  a1->n128_u64[0] = v14;
  a1->n128_u8[8] = v2;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u8[8] = v4;
  a1[2].n128_u64[0] = v5;
  a1[2].n128_u8[8] = v6;
  a1[3].n128_u64[0] = v7;
  a1[3].n128_u8[8] = v8;
  a1[4].n128_u64[0] = v9;
  a1[4].n128_u8[8] = v10;
  a1[5].n128_u64[0] = v11;
  a1[5].n128_u8[8] = v12;
  a1[6] = result;
  return result;
}

uint64_t sub_249F6B9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270EFEE50](a1, a2, a5, a3, a6, a4);
}

void sub_249F6BA0C()
{
}

id sub_249F6BA20()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F29D68]);

  return objc_msgSend(v0, sel_init);
}

uint64_t sub_249F6BA6C()
{
  return sub_24A056B48();
}

uint64_t sub_249F6BAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_249F6F458();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_249F6BB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_249F6F458();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_249F6BB78()
{
}

uint64_t sub_249F6BBA0()
{
  return sub_24A056998();
}

uint64_t sub_249F6BBC4(uint64_t a1)
{
  uint64_t v2 = sub_24A056898();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24A0569A8();
}

uint64_t sub_249F6BC8C()
{
  return sub_24A0564C8();
}

uint64_t sub_249F6BC94(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x24C5B7CF0](a1, &v6);
  char v4 = v7;
  uint64_t v5 = v6;
  if (v7) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_249F6BCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x24C5B7D00](a1, &v7);
  char v4 = v8;
  uint64_t v5 = v7;
  if (v8) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_249F6BD40(double *a1@<X8>)
{
  *a1 = MEMORY[0x24C5B7D10]();
}

uint64_t sub_249F6BD68(uint64_t a1, uint64_t a2)
{
  return sub_249F6D36C(a1, a2, MEMORY[0x263F07B58]);
}

void sub_249F6BD94(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_249F6BD9C(uint64_t a1, id *a2)
{
  uint64_t result = sub_24A057388();
  *a2 = 0;
  return result;
}

uint64_t sub_249F6BE14(uint64_t a1, id *a2)
{
  char v3 = sub_24A057398();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_249F6BE94@<X0>(uint64_t *a1@<X8>)
{
  sub_24A0573A8();
  uint64_t v2 = sub_24A057368();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_249F6BED8(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_249F6BEEC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_249F6BEF8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_249F6BF0C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_249F6BF3C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_249F6BF50(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_249F6BF6C()
{
  sub_249F6D038((unint64_t *)&qword_26974F8B8, type metadata accessor for AttributeName);
  sub_249F6D038(&qword_26974F8C0, type metadata accessor for AttributeName);

  return sub_24A057C28();
}

void sub_249F6C028(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_249F6C034@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_249F6C040@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_249F6C050@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_249F6C05C()
{
  return sub_24A057C28();
}

uint64_t sub_249F6C124()
{
  sub_249F6D038(&qword_26974F8C8, type metadata accessor for FeatureKey);
  sub_249F6D038(&qword_26974F8D0, type metadata accessor for FeatureKey);

  return sub_24A057C28();
}

uint64_t sub_249F6C1E0()
{
  sub_249F6D038((unint64_t *)&qword_26974F880, type metadata accessor for Key);
  sub_249F6D038(&qword_26974F888, type metadata accessor for Key);

  return sub_24A057C28();
}

uint64_t sub_249F6C29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F6C300()
{
  sub_249F6D038(&qword_26974F8A8, type metadata accessor for TraitKey);
  sub_249F6D038(&qword_26974F8B0, type metadata accessor for TraitKey);

  return sub_24A057C28();
}

uint64_t sub_249F6C3BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24A057368();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_249F6C404@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A0573A8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249F6C430()
{
  sub_249F6D038(&qword_26974F870, type metadata accessor for Name);
  sub_249F6D038(&qword_26974F878, type metadata accessor for Name);

  return sub_24A057C28();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

id sub_249F6C530@<X0>(char *a1@<X8>)
{
  return sub_24A00A9A8(*(double **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_249F6C538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F6C59C()
{
  return sub_249F65E58(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249F6C5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F6C620()
{
  return sub_249F6C99C();
}

uint64_t sub_249F6C638()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249F6C670()
{
  uint64_t v1 = sub_24A0563F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_249F6C758(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_24A0563F8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  unsigned __int8 v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_249F6C87C;
  return sub_249F652C0(a1, v6, v7, v8, v9);
}

uint64_t sub_249F6C87C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_249F6C970@<X0>(uint64_t a1@<X8>)
{
  return sub_24A008348(*(double **)(v1 + 24), a1);
}

uint64_t sub_249F6C980()
{
  return sub_249F66020(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249F6C99C()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_249F6C9E0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void type metadata accessor for CTFont(uint64_t a1)
{
}

void type metadata accessor for CTRun(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

uint64_t sub_249F6CAA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      swift_retain();
      uint64_t result = swift_retain();
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RollingClock(uint64_t a1)
{
  swift_release();

  sub_249F6CBB8(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t sub_249F6CBB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      swift_release();
      uint64_t result = swift_release();
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for RollingClock(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_retain();
  id v10 = v6;
  sub_249F6CAA4(v5, v7, v8, v9);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  unint64_t v11 = *(void **)(a2 + 56);
  uint64_t v12 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = v11;
  LOBYTE(v7) = *(unsigned char *)(a2 + 72);
  id v13 = v11;
  id v14 = v12;
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

uint64_t assignWithCopy for RollingClock(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  sub_249F6CAA4(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  char v15 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v11;
  sub_249F6CBB8(v12, v13, v14, v15);
  unsigned __int8 v16 = *(void **)(a2 + 56);
  unint64_t v17 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v16;
  id v18 = v16;

  unint64_t v19 = *(void **)(a2 + 64);
  LOBYTE(v9) = *(unsigned char *)(a2 + 72);
  id v20 = v19;
  unint64_t v21 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v19;
  *(unsigned char *)(a1 + 72) = v9;

  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RollingClock(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v6 = *(void *)(a2 + 40);
  char v7 = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v6;
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v7;
  sub_249F6CBB8(v8, v9, v10, v11);
  uint64_t v12 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  char v13 = *(unsigned char *)(a2 + 72);
  uint64_t v14 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = v13;

  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for RollingClock(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 74)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RollingClock(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 74) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 74) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RollingClock()
{
  return &type metadata for RollingClock;
}

uint64_t getEnumTagSinglePayload for WorldMap.DotFillSpec(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WorldMap.DotFillSpec(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_249F6CFF0()
{
  return sub_249F6D038(&qword_26974F4D0, type metadata accessor for FeatureKey);
}

uint64_t sub_249F6D038(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F6D080()
{
  return sub_249F6D038(&qword_26974F4D8, type metadata accessor for FeatureKey);
}

uint64_t sub_249F6D0C8()
{
  return sub_249F6D038(&qword_26974F4E0, type metadata accessor for FeatureKey);
}

uint64_t sub_249F6D110()
{
  return sub_249F6D038(&qword_26974F4E8, type metadata accessor for AttributeName);
}

uint64_t sub_249F6D158()
{
  return sub_249F6D038(&qword_26974F4F0, type metadata accessor for AttributeName);
}

uint64_t sub_249F6D1A0()
{
  return sub_249F6D038(&qword_26974F4F8, type metadata accessor for TraitKey);
}

uint64_t sub_249F6D1E8()
{
  return sub_249F6D038(&qword_26974F500, type metadata accessor for TraitKey);
}

uint64_t sub_249F6D230()
{
  return sub_249F6D038(&qword_26974F508, type metadata accessor for TraitKey);
}

uint64_t sub_249F6D278()
{
  return sub_249F6D038(&qword_26974F510, type metadata accessor for Weight);
}

uint64_t sub_249F6D2C0()
{
  return sub_249F6D038(&qword_26974F518, type metadata accessor for Weight);
}

uint64_t sub_249F6D308()
{
  return MEMORY[0x270F9DDC0](*v0);
}

uint64_t sub_249F6D310()
{
  return sub_24A057E58();
}

uint64_t sub_249F6D344(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return MEMORY[0x270F9FC40](a1, v2);
}

uint64_t sub_249F6D354(uint64_t a1, uint64_t a2)
{
  return sub_249F6D36C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_249F6D36C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24A0573A8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_249F6D3B0()
{
  sub_24A0573A8();
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249F6D404()
{
  sub_24A0573A8();
  sub_24A057E28();
  sub_24A057408();
  uint64_t v0 = sub_24A057E68();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_249F6D478(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_249F6D48C()
{
  return sub_249F6D038(&qword_26974F520, type metadata accessor for Weight);
}

uint64_t sub_249F6D4D4()
{
  return sub_249F6D038(&qword_26974F528, type metadata accessor for Key);
}

uint64_t sub_249F6D51C()
{
  return sub_249F6D038(&qword_26974F530, type metadata accessor for Key);
}

uint64_t sub_249F6D564()
{
  return sub_249F6D038(&qword_26974F538, type metadata accessor for Name);
}

uint64_t sub_249F6D5AC()
{
  return sub_249F6D038(&qword_26974F540, type metadata accessor for Name);
}

uint64_t sub_249F6D5F4()
{
  uint64_t v0 = sub_24A0573A8();
  uint64_t v2 = v1;
  if (v0 == sub_24A0573A8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24A057D48();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_249F6D680()
{
  return sub_249F6D038(&qword_26974F548, type metadata accessor for Name);
}

uint64_t sub_249F6D6C8()
{
  return sub_249F6D038(&qword_26974F550, type metadata accessor for Key);
}

uint64_t sub_249F6D710()
{
  return sub_249F6D038(&qword_26974F558, type metadata accessor for AttributeName);
}

uint64_t sub_249F6D758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249F6D774(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v7 = *(void **)(a1 + 56);
  uint64_t v6 = *(void **)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 48);
  swift_retain();
  id v9 = v3;
  sub_249F6CAA4(v2, v4, v5, v8);
  id v10 = v7;
  id v11 = v6;
  return a1;
}

uint64_t sub_249F6D7FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void **)(a1 + 56);
  uint64_t v5 = *(void **)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 48);

  swift_release();
  sub_249F6CBB8(v2, v3, v4, v7);

  return a1;
}

uint64_t sub_249F6D88C@<X0>(uint64_t a1@<X8>)
{
  return sub_249F667D0(v1 + 16, a1);
}

uint64_t sub_249F6D894()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_249F6D8D4@<X0>(uint64_t a1@<X8>)
{
  return sub_249F6B050(*(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), a1, *(double *)(v1 + 48));
}

unint64_t sub_249F6D8E4()
{
  unint64_t result = qword_26974F600;
  if (!qword_26974F600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F580);
    sub_249F6D9CC();
    sub_249F6EE60(&qword_26974F698, &qword_26974F6A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F600);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_249F6D9CC()
{
  unint64_t result = qword_26974F608;
  if (!qword_26974F608)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F590);
    sub_249F6DA6C();
    sub_249F6EE60(&qword_26974F688, &qword_26974F690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F608);
  }
  return result;
}

unint64_t sub_249F6DA6C()
{
  unint64_t result = qword_26974F610;
  if (!qword_26974F610)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F5E8);
    sub_249F6DB0C();
    sub_249F6EE60(&qword_26974F678, &qword_26974F680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F610);
  }
  return result;
}

unint64_t sub_249F6DB0C()
{
  unint64_t result = qword_26974F618;
  if (!qword_26974F618)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F620);
    sub_249F6DBAC();
    sub_249F6EE60(&qword_26974F668, &qword_26974F670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F618);
  }
  return result;
}

unint64_t sub_249F6DBAC()
{
  unint64_t result = qword_26974F628;
  if (!qword_26974F628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F630);
    sub_249F6DC4C();
    sub_249F6EE60(&qword_26974F658, &qword_26974F660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F628);
  }
  return result;
}

unint64_t sub_249F6DC4C()
{
  unint64_t result = qword_26974F638;
  if (!qword_26974F638)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F640);
    sub_249F6E230(&qword_26974F648, &qword_26974F650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F638);
  }
  return result;
}

uint64_t sub_249F6DCE8()
{
  return sub_249F6DD24(&qword_26974F6B0, &qword_26974F5E0, (void (*)(void))sub_249F6DDAC, (void (*)(void))sub_249F6DF28);
}

uint64_t sub_249F6DD24(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F6DDAC()
{
  return sub_249F6DD24(&qword_26974F6B8, &qword_26974F5D8, (void (*)(void))sub_249F6DDE8, (void (*)(void))sub_249F6DE88);
}

unint64_t sub_249F6DDE8()
{
  unint64_t result = qword_26974F6C0;
  if (!qword_26974F6C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F5F0);
    sub_249F6DA6C();
    sub_249F6EE60(&qword_26974F6C8, &qword_26974F6D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F6C0);
  }
  return result;
}

unint64_t sub_249F6DE88()
{
  unint64_t result = qword_26974F6D8;
  if (!qword_26974F6D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F5B8);
    sub_249F6DA6C();
    sub_249F6EE60(&qword_26974F6E0, &qword_26974F6E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F6D8);
  }
  return result;
}

uint64_t sub_249F6DF28()
{
  return sub_249F6DD24(&qword_26974F6F0, &qword_26974F5A8, (void (*)(void))sub_249F6DF64, (void (*)(void))sub_249F6E004);
}

unint64_t sub_249F6DF64()
{
  unint64_t result = qword_26974F6F8;
  if (!qword_26974F6F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F5B0);
    sub_249F6DA6C();
    sub_249F6EE60(&qword_26974F700, &qword_26974F708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F6F8);
  }
  return result;
}

unint64_t sub_249F6E004()
{
  unint64_t result = qword_26974F710;
  if (!qword_26974F710)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F598);
    sub_249F6DA6C();
    sub_249F6EE60(&qword_26974F718, &qword_26974F720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F710);
  }
  return result;
}

unint64_t sub_249F6E0A4()
{
  unint64_t result = qword_26974F728;
  if (!qword_26974F728)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F588);
    sub_249F6D8E4();
    sub_249F6EE60(&qword_26974F6A8, &qword_26974F5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F728);
  }
  return result;
}

uint64_t sub_249F6E144()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249F6E184@<X0>(uint64_t a1@<X8>)
{
  return sub_249F6A85C(*(void (**)(uint64_t))(v1 + 16), a1);
}

unint64_t sub_249F6E194()
{
  unint64_t result = qword_26974F740;
  if (!qword_26974F740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F738);
    sub_249F6E230(&qword_26974F748, &qword_26974F750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F740);
  }
  return result;
}

uint64_t sub_249F6E230(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F6E2A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A056958();
  *a1 = result;
  return result;
}

uint64_t sub_249F6E2CC()
{
  return sub_24A056968();
}

uint64_t sub_249F6E2F8(uint64_t a1)
{
  return a1;
}

unsigned char *sub_249F6E324(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t objectdestroy_107Tm()
{
  swift_release();

  sub_249F6CBB8(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return MEMORY[0x270FA0238](v0, 90, 7);
}

uint64_t sub_249F6E39C@<X0>(uint64_t a1@<X8>)
{
  return sub_249F681B8(v1 + 16, a1);
}

uint64_t sub_249F6E3A4()
{
  uint64_t v1 = sub_24A055F08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_249F6E470@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24A055F08() - 8);
  uint64_t v4 = *(void (**)(uint64_t))(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  int v7 = *(unsigned __int8 *)(v1 + 16);

  return sub_249F68E04(v7, v4, v5, v6, a1);
}

uint64_t sub_249F6E4F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_249F6E508(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F6E570(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249F6E5D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_249F6E5E4()
{
  unint64_t result = qword_26974F830;
  if (!qword_26974F830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F830);
  }
  return result;
}

uint64_t sub_249F6E638()
{
  return 8;
}

uint64_t sub_249F6E644()
{
  return swift_release();
}

uint64_t sub_249F6E64C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_249F6E658(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_249F6E664(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F6E6C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_249F6E730()
{
  unint64_t result = qword_26974F848;
  if (!qword_26974F848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F848);
  }
  return result;
}

uint64_t sub_249F6E784()
{
  return 8;
}

uint64_t sub_249F6E790(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_249F6E7EC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  *(_OWORD *)((char *)a2 + 9) = *(long long *)((char *)a1 + 9);
  *a2 = v2;
  return a2;
}

unint64_t sub_249F6E80C()
{
  unint64_t result = qword_26974F858;
  if (!qword_26974F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F858);
  }
  return result;
}

uint64_t sub_249F6E864()
{
  return 8;
}

unint64_t sub_249F6E878()
{
  unint64_t result = qword_26974F8A0;
  if (!qword_26974F8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F8A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for VibrancyViewMask()
{
  return &type metadata for VibrancyViewMask;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RollingClock.Layout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x249F6E994);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for RollingClock.Layout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x249F6EA7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_249F6EAA4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_249F6EAB8(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RollingClock.Layout()
{
  return &type metadata for RollingClock.Layout;
}

uint64_t initializeBufferWithCopyOfBuffer for RollingClock.Style(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RollingClock.Style(uint64_t a1)
{
  return sub_249F6CBB8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for RollingClock.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_249F6CAA4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for RollingClock.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_249F6CAA4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_249F6CBB8(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RollingClock.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_249F6CBB8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RollingClock.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RollingClock.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249F6ECE4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 3u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_249F6ECFC(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 4;
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 4;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RollingClock.Style()
{
  return &type metadata for RollingClock.Style;
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void sub_249F6ED3C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_249F6ED88()
{
  unint64_t result = qword_26974F8E0;
  if (!qword_26974F8E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F568);
    sub_249F6DD24(&qword_26974F8E8, &qword_26974F560, (void (*)(void))sub_249F6DCE8, (void (*)(void))sub_249F6E0A4);
    sub_249F6EE60(&qword_26974F8F0, &qword_26974F8F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F8E0);
  }
  return result;
}

uint64_t sub_249F6EE60(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F6EEA4()
{
  return MEMORY[0x263F1BB50];
}

uint64_t sub_249F6EEB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249F6EECC(uint64_t a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5, unint64_t a6, unint64_t a7, char a8, __n128 a9, __n128 a10)
{
  switch(a4)
  {
    case 1:
      if (a8 != 1) {
        return 0;
      }
      return sub_24A04CC28(a1, a5);
    case 2:
      if (a8 != 2 || (sub_24A04CC28(a1, a5) & 1) == 0) {
        return 0;
      }
      a9.n128_u64[0] = a2;
      a10.n128_u64[0] = a6;
      goto LABEL_20;
    case 3:
      if (a8 != 3) {
        return 0;
      }
      if (a1 == a5 && a2 == a6 || (char v16 = sub_24A057D48(), result = 0, (v16 & 1) != 0))
      {
        a9.n128_u64[0] = a3;
        a10.n128_u64[0] = a7;
LABEL_20:
        return MEMORY[0x270F04350](a9, a10);
      }
      return result;
    case 4:
      if (a3 | a2 | a1)
      {
        if (a1 != 1 || a3 | a2)
        {
          if (a8 != 4 || a5 != 2) {
            return 0;
          }
        }
        else if (a8 != 4 || a5 != 1)
        {
          return 0;
        }
        if (a7 | a6) {
          return 0;
        }
      }
      else if (a8 != 4 || a7 | a6 | a5)
      {
        return 0;
      }
      return 1;
    default:
      if (a8) {
        return 0;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (sub_24A056EB8())
      {
        if (a2)
        {
          if (a6)
          {
            swift_retain();
            swift_retain();
            char v14 = sub_24A056EB8();
            swift_release_n();
            swift_release();
            swift_release();
            swift_release_n();
            return (v14 & 1) != 0;
          }
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          if (!a6) {
            return 1;
          }
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
      }
      swift_release();
      return 0;
  }
}

ValueMetadata *type metadata accessor for VibrancyView()
{
  return &type metadata for VibrancyView;
}

uint64_t getEnumTagSinglePayload for RollingClock.Layout.Alignment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RollingClock.Layout.Alignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249F6F2D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_249F6F2FC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_249F6F304(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RollingClock.Layout.Alignment()
{
  return &type metadata for RollingClock.Layout.Alignment;
}

unint64_t sub_249F6F320()
{
  unint64_t result = qword_26974F900;
  if (!qword_26974F900)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974F908);
    sub_249F6F39C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F900);
  }
  return result;
}

unint64_t sub_249F6F39C()
{
  unint64_t result = qword_26974F910;
  if (!qword_26974F910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F910);
  }
  return result;
}

unint64_t sub_249F6F3F4()
{
  unint64_t result = qword_26974F918;
  if (!qword_26974F918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F918);
  }
  return result;
}

uint64_t sub_249F6F448()
{
  return MEMORY[0x263F1BB58];
}

unint64_t sub_249F6F458()
{
  unint64_t result = qword_26974F920;
  if (!qword_26974F920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F920);
  }
  return result;
}

uint64_t sub_249F6F4F0()
{
  return sub_249F6C59C();
}

void sub_249F6F518()
{
  qword_269752308 = 0x4049000000000000;
}

void sub_249F6F528()
{
  qword_269752310 = 0x4041000000000000;
}

void sub_249F6F538()
{
  qword_269752318 = 0x403E000000000000;
}

void sub_249F6F548()
{
  qword_269752320 = 0x403E000000000000;
}

void sub_249F6F558()
{
  qword_269752328 = 0x404B000000000000;
}

uint64_t sub_249F6F568()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F928);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A05A340;
  *(void *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.662745098, 0.462745098, 0.847058824, 1.0);
  *(void *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.952941176, 0.337254902, 0.576470588, 1.0);
  unsigned int v1 = self;
  *(void *)(v0 + 48) = objc_msgSend(v1, sel_systemOrangeColor);
  *(void *)(v0 + 56) = objc_msgSend(v1, sel_systemYellowColor);
  *(void *)(v0 + 64) = objc_msgSend(v1, sel_systemGreenColor);
  *(void *)(v0 + 72) = objc_msgSend(v1, sel_systemBlueColor);
  *(void *)(v0 + 80) = objc_msgSend(v1, sel_systemIndigoColor);
  *(void *)(v0 + 88) = objc_msgSend(v1, sel_systemPurpleColor);
  *(void *)(v0 + 96) = objc_msgSend(v1, sel_systemPinkColor);
  uint64_t result = sub_24A057588();
  qword_269752330 = v0;
  return result;
}

void sub_249F6F864(char a1)
{
  int v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_hostView);
  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x263F8EED0] & *v1) + 0xA8))(&v6);
  char v4 = *((unsigned char *)v1 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_canAnimateRedMode);
  id v5 = v3;
  sub_249F88C70(a1, (unsigned __int8 *)&v6, v4);
}

uint64_t (*sub_249F6F918(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + v2);
  return sub_249F6F94C;
}

uint64_t sub_249F6F94C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  int v4 = *((unsigned __int8 *)v2 + v1);
  *((unsigned char *)v2 + v1) = result;
  if (result != v4) {
    return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v2) + 0x88))();
  }
  return result;
}

void sub_249F6F9B4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

id sub_249F6FA7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClockFaceViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClockFaceViewController()
{
  return self;
}

uint64_t sub_249F6FAE4(char a1, uint64_t a2, uint64_t a3)
{
  return sub_249F6FB88(a1, a2, a3, (uint64_t (*)(void))sub_249F87824);
}

uint64_t (*sub_249F6FAFC(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_249F6F918((uint64_t)v2);
  return sub_249F6FB58;
}

uint64_t sub_249F6FB5C()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode);
}

uint64_t sub_249F6FB70(char a1, uint64_t a2, uint64_t a3)
{
  return sub_249F6FB88(a1, a2, a3, (uint64_t (*)(void))sub_24A02EDF4);
}

uint64_t sub_249F6FB88(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a1 & 1;
  uint64_t v7 = *v4;
  int v8 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode) = a1;
  if (v8 != result) {
    return a4();
  }
  return result;
}

void sub_249F6FBD0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PixelAlignedScaler(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PixelAlignedScaler(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PixelAlignedScaler()
{
  return &type metadata for PixelAlignedScaler;
}

BOOL static CLLocationCoordinate2D.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL sub_249F6FCA8(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t CLLocationCoordinate2D.hash(into:)()
{
  return sub_24A057E58();
}

uint64_t CLLocationCoordinate2D.hashValue.getter()
{
  return sub_24A057E68();
}

uint64_t sub_249F6FD80()
{
  return sub_24A057E68();
}

uint64_t sub_249F6FDD4()
{
  return CLLocationCoordinate2D.hash(into:)();
}

uint64_t sub_249F6FDDC()
{
  return sub_24A057E68();
}

unint64_t sub_249F6FE30()
{
  unint64_t result = qword_26974F948[0];
  if (!qword_26974F948[0])
  {
    type metadata accessor for CLLocationCoordinate2D(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26974F948);
  }
  return result;
}

uint64_t sub_249F6FE88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_249F6FF2C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t Atomic.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Atomic.init(wrappedValue:)(a1);
  return v2;
}

char *Atomic.init(wrappedValue:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  type metadata accessor for CPUnfairLock();
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *((void *)v1 + 2) = v4;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))(&v1[*(void *)(v3 + 96)], a1);
  return v1;
}

uint64_t type metadata accessor for CPUnfairLock()
{
  return self;
}

uint64_t sub_249F700DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v3);
  sub_249F6FE88(a1);
  os_unfair_lock_unlock(v3);
  return swift_endAccess();
}

uint64_t sub_249F70148(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_249F705B0(a1);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);

  return v4(a1);
}

void (*sub_249F701C4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  sub_249F700DC((uint64_t)v7);
  return sub_249F70298;
}

void sub_249F70298(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_249F705B0((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_249F705B0(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t *Atomic.deinit()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 96));
  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  Atomic.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_249F7044C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_249F7045C(uint64_t (*a1)(void), uint64_t a2)
{
  if (objc_msgSend(self, sel_isMainThread)) {
    return a1();
  }
  sub_249F7089C();
  uint64_t v5 = sub_24A057848();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_249F708EC;
  v8[5] = v6;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  v8[2] = sub_24A040C30;
  v8[3] = &block_descriptor_0;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v7);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_249F705B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (os_unfair_lock_s *)(v1[2] + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_249F6FF2C((uint64_t)v6);
  os_unfair_lock_unlock(v7);
  return swift_endAccess();
}

uint64_t sub_249F706BC@<X0>(uint64_t a1@<X8>)
{
  return sub_249F700DC(a1);
}

uint64_t sub_249F706E0(uint64_t a1)
{
  return sub_249F705B0(a1);
}

uint64_t sub_249F70704()
{
  return 8;
}

void *sub_249F70710(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_249F70720()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Atomic()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Atomic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Atomic);
}

uint64_t dispatch thunk of Atomic.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_249F70874(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249F70888(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t sub_249F7089C()
{
  unint64_t result = qword_2697515B0;
  if (!qword_2697515B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697515B0);
  }
  return result;
}

uint64_t sub_249F708DC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249F708EC()
{
  return sub_24A040C08(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

id sub_249F7093C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F9D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A05A4C0;
  *(_OWORD *)(inited + 32) = xmmword_24A05A4D0;
  *(_OWORD *)(inited + 48) = xmmword_24A05A4E0;
  *(_OWORD *)(inited + 64) = xmmword_24A05A4F0;
  *(_OWORD *)(inited + 80) = xmmword_24A05A500;
  objc_msgSend(v0, sel_pointSize);
  objc_msgSend(v0, sel_pointSize);
  if (v2 >= 0.0)
  {
    double v6 = *(double *)(inited + 48);
    double v5 = *(double *)(inited + 56);
    objc_msgSend(v0, sel_pointSize);
    if (v6 >= v7) {
      double v4 = 1.0;
    }
    else {
      double v4 = v5;
    }
    if (v6 >= v7) {
      double v3 = 0.0;
    }
    else {
      double v3 = v6;
    }
    objc_msgSend(v0, sel_pointSize);
    if (v8 >= v6)
    {
      double v6 = *(double *)(inited + 64);
      double v5 = *(double *)(inited + 72);
      objc_msgSend(v0, sel_pointSize);
      if (v6 < v9)
      {
        double v4 = v5;
        double v3 = v6;
      }
      objc_msgSend(v0, sel_pointSize);
      if (v10 >= v6)
      {
        objc_msgSend(v0, sel_pointSize);
        double v6 = 200.0;
        double v5 = 0.25;
        if (v11 > 200.0)
        {
          double v4 = 0.25;
          double v3 = 200.0;
        }
        objc_msgSend(v0, sel_pointSize);
      }
    }
  }
  else
  {
    double v3 = 0.0;
    double v4 = 1.0;
    double v5 = 1.0;
    double v6 = 0.0;
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_pointSize);
  double v13 = v4 + (v5 - v4) * ((v12 - v3) / (v6 - v3));
  objc_msgSend(v0, sel_pointSize);
  double v15 = floor(v14 * v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F9D8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A05A510;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F9E0);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A0593D0;
  id v18 = (void *)*MEMORY[0x263F83550];
  *(void *)(v17 + 32) = *MEMORY[0x263F83550];
  *(void *)(v17 + 40) = 38;
  unint64_t v19 = (void *)*MEMORY[0x263F83538];
  *(void *)(v17 + 48) = *MEMORY[0x263F83538];
  *(void *)(v17 + 56) = 1;
  id v20 = v18;
  id v21 = v19;
  *(void *)(v16 + 32) = sub_24A0129CC(v17);
  id v22 = objc_msgSend(v0, sel_fontDescriptor);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F9E8);
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_24A05A510;
  unsigned __int8 v24 = (void *)*MEMORY[0x263F81748];
  *(void *)(v23 + 32) = *MEMORY[0x263F81748];
  *(void *)(v23 + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F9F0);
  *(void *)(v23 + 40) = v16;
  id v25 = v24;
  sub_24A012ACC(v23);
  type metadata accessor for AttributeName(0);
  sub_249F70D24();
  uint64_t v26 = (void *)sub_24A0572E8();
  swift_bridgeObjectRelease();

  id v27 = objc_msgSend(self, sel_fontWithDescriptor_size_, v22, v15);
  return v27;
}

unint64_t sub_249F70C68(char a1)
{
  unint64_t result = 0xD000000000000021;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000026;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249F70D24()
{
  unint64_t result = qword_26974F8B8;
  if (!qword_26974F8B8)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F8B8);
  }
  return result;
}

uint64_t sub_249F70D7C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA08);
    uint64_t v2 = sub_24A057C08();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v31[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    *(void *)&v30[0] = v15;
    id v16 = *(id *)&v31[0];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA10);
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    sub_249F71780((_OWORD *)((char *)v31 + 8), v29);
    sub_249F71780(v29, v31);
    sub_249F71780(v31, v30);
    sub_24A0573A8();
    sub_24A057E28();
    sub_24A057408();
    uint64_t v18 = sub_24A057E68();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v17;
    uint64_t result = (uint64_t)sub_249F71780(v30, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_249F71790();
    return v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_249F71124(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA18);
    uint64_t v2 = sub_24A057C08();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    id v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    type metadata accessor for CTFont(0);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_249F71780((_OWORD *)((char *)v33 + 8), v31);
    sub_249F71780(v31, v33);
    sub_249F71780(v33, v32);
    sub_24A0573A8();
    sub_24A057E28();
    sub_24A057408();
    uint64_t v20 = sub_24A057E68();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_249F71780(v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_249F71790();
    return v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

CTFontRef sub_249F714C8(CGFloat a1, uint64_t a2, uint64_t a3, char a4)
{
  double v7 = (__CFString *)sub_24A057368();
  swift_bridgeObjectRelease();
  CTFontRef v8 = CTFontCreateWithNameAndOptions(v7, a1, 0, 0x20000uLL);

  if (a4) {
    return v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F9F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A05A510;
  unint64_t v10 = v8;
  *(_DWORD *)(inited + 32) = TextToFourCharCode();
  *(void *)(inited + 40) = a3;
  unint64_t v11 = sub_24A016B7C(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA00);
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A05A510;
  sub_24A0573A8();
  uint64_t v13 = sub_24A057368();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v11;
  unint64_t v14 = sub_24A012C10(v12);
  id v15 = [(__CTFont *)v10 fontDescriptor];

  sub_249F70D7C(v14);
  swift_bridgeObjectRelease();
  type metadata accessor for AttributeName(0);
  sub_249F70D24();
  id v16 = (void *)sub_24A0572E8();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_fontDescriptorByAddingAttributes_, v16);

  id v18 = objc_msgSend(self, sel_fontWithDescriptor_size_, v17, a1);
  return (CTFontRef)v18;
}

_OWORD *sub_249F71780(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_249F71790()
{
  return swift_release();
}

void sub_249F71798()
{
  qword_269752338 = 0xC024000000000000;
}

void sub_249F717A8()
{
  qword_269752340 = 0xC035000000000000;
}

void sub_249F717B8()
{
  qword_269752348 = 0x4008000000000000;
}

uint64_t sub_249F717C8(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0) {
      return 0;
    }
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_249F71804()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA20);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A05A4C0;
  *(void *)(v0 + 32) = 0;
  sub_24A056F28();
  uint64_t v1 = sub_24A056F48();
  swift_release();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = 0x3FA999999999999ALL;
  *(void *)(v0 + 56) = sub_24A056F28();
  *(void *)(v0 + 64) = 0x3FC999999999999ALL;
  *(void *)(v0 + 72) = sub_24A056F28();
  *(void *)(v0 + 80) = 0x3FE3333333333333;
  sub_24A056F28();
  uint64_t v2 = sub_24A056F48();
  swift_release();
  *(void *)(v0 + 88) = v2;
  return v0;
}

ValueMetadata *type metadata accessor for WorldConstants()
{
  return &type metadata for WorldConstants;
}

ValueMetadata *type metadata accessor for WorldConstants.Pins()
{
  return &type metadata for WorldConstants.Pins;
}

uint64_t getEnumTagSinglePayload for WorldConstants.Pins.SelectionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7F) {
    goto LABEL_17;
  }
  if (a2 + 129 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 129) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 129;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for WorldConstants.Pins.SelectionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *uint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249F71A70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_249F71A98(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_249F71AA4(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_249F71AB4(unsigned char *result, char a2)
{
  *uint64_t result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for WorldConstants.Pins.SelectionState()
{
  return &type metadata for WorldConstants.Pins.SelectionState;
}

void ClockFaceController.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_249F71AE4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void *)(v3 + 8);
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_unknownObjectRetain();
  v6(ObjectType, v5);
  uint64_t result = swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_249F71B8C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  if (v2) {
    swift_unknownObjectRetain();
  }
  return v2;
}

uint64_t sub_249F71C18()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t result = sub_249F84708();
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_24A05A510;
      sub_249FEA0D0(v2 + 32);
      goto LABEL_10;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_24A05A580;
      sub_249FE9DC0(v2 + 32);
      sub_249FE9AF8(186, 119, 186, 233, 137, 120, v2 + 136);
      sub_249FE9AF8(215, 126, 79, 255, 246, 170, v2 + 240);
      sub_249FE9AF8(223, 179, 103, 223, 254, 190, v2 + 344);
      sub_249FE9AF8(185, 207, 140, 217, 243, 255, v2 + 448);
      sub_249FE9AF8(161, 181, 211, 248, 223, 255, v2 + 552);
      sub_249FE9F44(v2 + 656);
LABEL_10:
      uint64_t result = v2;
      break;
    case 4:
      uint64_t result = sub_249F84F24();
      break;
    default:
      uint64_t result = sub_249F84A58();
      break;
  }
  return result;
}

uint64_t sub_249F71DD0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_unknownObjectRetain();
  v5(ObjectType, v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_249F71E64()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  swift_unknownObjectRetain();
  v4(ObjectType, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_249F71F00(uint64_t a1)
{
  sub_249F728E8();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA28);
  if (swift_dynamicCastClass())
  {
    uint64_t v4 = qword_26974F2B8;
    swift_unknownObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    sub_249F75DD8(a1, (uint64_t)v26);
    sub_249F77D98((uint64_t)v26, (uint64_t)v25);
    sub_249F77D98((uint64_t)v25, (uint64_t)v24);
    swift_retain();
    sub_249FD1720((uint64_t)v24);
    swift_release();
    sub_249F77DF4((uint64_t)v25);
    swift_unknownObjectRelease();
    sub_249F75BD8(a1);
    return sub_249F77DF4((uint64_t)v26);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA30);
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = qword_26974F2B8;
      swift_unknownObjectRetain();
      if (v8 != -1) {
        swift_once();
      }
      sub_249F76430(a1, (uint64_t)v26);
      sub_249F77CC4((uint64_t)v26, (uint64_t)v25);
      uint64_t v9 = *(void *)(v7 + 16);
      sub_249F77CC4((uint64_t)v25, (uint64_t)v24);
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      uint64_t v27 = v9;
      sub_249F7B284(&qword_26974FA58, 255, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
      swift_retain();
      sub_24A056468();
      swift_release();
      sub_249F77D44((uint64_t)v24);
      swift_release();
      sub_249F77D44((uint64_t)v25);
      swift_unknownObjectRelease();
      sub_249F75BD8(a1);
      return sub_249F77D44((uint64_t)v26);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA38);
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = qword_26974F2B8;
        swift_unknownObjectRetain();
        if (v13 != -1) {
          swift_once();
        }
        sub_249F76A24(a1, (uint64_t)v26);
        sub_249F77BF0((uint64_t)v26, (uint64_t)v25);
        uint64_t v14 = *(void *)(v12 + 16);
        sub_249F77BF0((uint64_t)v25, (uint64_t)v24);
        uint64_t v15 = swift_getKeyPath();
        MEMORY[0x270FA5388](v15);
        uint64_t v27 = v14;
        sub_249F7B284(&qword_26974FA50, 255, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
        swift_retain();
        sub_24A056468();
        swift_release();
        sub_249F77C70((uint64_t)v24);
        swift_release();
        sub_249F77C70((uint64_t)v25);
        swift_unknownObjectRelease();
        sub_249F75BD8(a1);
        return sub_249F77C70((uint64_t)v26);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA40);
        uint64_t v16 = swift_dynamicCastClass();
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v18 = qword_26974F2B8;
          swift_unknownObjectRetain();
          if (v18 != -1) {
            swift_once();
          }
          sub_249F770A0(a1, (uint64_t)v26);
          sub_249F77718((uint64_t)v26, (uint64_t)v25);
          uint64_t v19 = *(void *)(v17 + 16);
          sub_249F77718((uint64_t)v25, (uint64_t)v24);
          uint64_t v20 = swift_getKeyPath();
          MEMORY[0x270FA5388](v20);
          uint64_t v27 = v19;
          sub_249F7B284(&qword_26974FA48, 255, (void (*)(uint64_t))type metadata accessor for PlayViewModel);
          swift_retain();
          sub_24A056468();
          swift_release();
          sub_249F77B9C((uint64_t)v24);
          swift_release();
          sub_249F77B9C((uint64_t)v25);
          swift_unknownObjectRelease();
          sub_249F75BD8(a1);
          return sub_249F77B9C((uint64_t)v26);
        }
        else
        {
          uint64_t ObjectType = swift_getObjectType();
          sub_249F75B7C(a1, (uint64_t)v26);
          uint64_t v22 = *(void *)(v3 + 8);
          unint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v22 + 16);
          swift_unknownObjectRetain();
          v23(v26, ObjectType, v22);
          swift_unknownObjectRelease();
          return sub_249F75BD8(a1);
        }
      }
    }
  }
}

void (*sub_249F72534(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xF0uLL);
  *a1 = v3;
  v3[29] = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  swift_unknownObjectRetain();
  v7(ObjectType, v6);
  swift_unknownObjectRelease();
  return sub_249F725F8;
}

void sub_249F725F8(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_249F75B7C(*a1, (uint64_t)v2 + 104);
    sub_249F71F00((uint64_t)v2 + 104);
    sub_249F75BD8((uint64_t)v2);
  }
  else
  {
    sub_249F71F00(*a1);
  }

  free(v2);
}

uint64_t sub_249F7266C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  swift_unknownObjectRetain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

void sub_249F726FC()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32);
  swift_unknownObjectRetain();
  uint64_t v5 = (void *)v4(ObjectType, v2);
  swift_unknownObjectRelease();
  id v6 = objc_msgSend(v5, sel_view);

  if (v6)
  {
    objc_msgSend(v6, sel_removeFromSuperview);

    uint64_t v7 = *(void *)(v1 + 32);
    uint64_t v8 = swift_getObjectType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 32);
    swift_unknownObjectRetain();
    unint64_t v10 = (void *)v9(v8, v7);
    swift_unknownObjectRelease();
    objc_msgSend(v10, sel_removeFromParentViewController);

    if (qword_26974F328 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_269751340;
    sub_24A00A268();
    uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC11ClockPoster5Clock_textClockStreamObservers);
    uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12 + 16) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v13);
    swift_endAccess();
    swift_beginAccess();
    *(void *)(v12 + 24) = MEMORY[0x263F8EE80];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_unlock(v13);
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_249F728E8()
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void *__return_ptr, uint64_t, uint64_t);
  void v28[15];
  void v29[13];

  uint64_t v1 = v0;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA28);
  if (swift_dynamicCastClass())
  {
    uint64_t v2 = qword_26974F2B8;
    swift_unknownObjectRetain();
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_269752358;
    swift_retain();
    sub_249FD1E1C((uint64_t)v28);
    swift_release();
    uint64_t v4 = *(void *)(v0 + 32);
    unsigned __int8 v5 = *(unsigned char *)(v0 + 16);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8);
    swift_unknownObjectRetain();
    v8(v29, ObjectType, v7);
    swift_unknownObjectRelease();
    sub_249F78B74((uint64_t)v28, v5, (uint64_t)v29, v3);
    swift_unknownObjectRelease();
    sub_249F75BD8((uint64_t)v29);
    sub_249F77DF4((uint64_t)v28);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA30);
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    unint64_t v10 = v9;
    uint64_t v11 = qword_26974F2B8;
    swift_unknownObjectRetain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_269752358;
    uint64_t v13 = *(void *)(v10 + 16);
    swift_getKeyPath();
    v28[0] = v13;
    sub_249F7B284(&qword_26974FA58, 255, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
    swift_retain();
    sub_24A056478();
    swift_release();
    swift_beginAccess();
    sub_249F77CC4(v13 + 32, (uint64_t)v28);
    swift_release();
    uint64_t v14 = *(void *)(v1 + 32);
    LOBYTE(v13) = *(unsigned char *)(v1 + 16);
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 8);
    swift_unknownObjectRetain();
    v17(v29, v15, v16);
    swift_unknownObjectRelease();
    sub_249F79268((uint64_t)v28, v13, (uint64_t)v29, v12);
    swift_unknownObjectRelease();
    sub_249F75BD8((uint64_t)v29);
    sub_249F77D44((uint64_t)v28);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA38);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = qword_26974F2B8;
    swift_unknownObjectRetain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_269752358;
    uint64_t v22 = *(void *)(v19 + 16);
    swift_getKeyPath();
    v28[0] = v22;
    sub_249F7B284(&qword_26974FA50, 255, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
    swift_retain();
    sub_24A056478();
    swift_release();
    swift_beginAccess();
    sub_249F77BF0(v22 + 16, (uint64_t)v28);
    swift_release();
    unint64_t v23 = *(void *)(v1 + 32);
    char v24 = *(unsigned char *)(v1 + 16);
    unint64_t v25 = swift_getObjectType();
    BOOL v26 = *(void *)(v23 + 8);
    uint64_t v27 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 8);
    swift_unknownObjectRetain();
    v27(v29, v25, v26);
    swift_unknownObjectRelease();
    sub_249F7995C((uint64_t)v28, v24, (uint64_t)v29, v21, (uint64_t)&type metadata for WorldViewModelContext, (uint64_t (*)(uint64_t))sub_249F7B538, (uint64_t)&unk_26FDE6F80, (void (*)(uint64_t, uint64_t))sub_249F77BF0);
    swift_unknownObjectRelease();
    sub_249F75BD8((uint64_t)v29);
    return sub_249F77C70((uint64_t)v28);
  }
  return result;
}

uint64_t ClockFaceController.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ClockFaceController.init(with:)(a1);
  return v2;
}

uint64_t ClockFaceController.init(with:)(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = *(unsigned char *)(a1 + 97);
  uint64_t v3 = sub_249F7A698(a1);
  uint64_t v5 = v4;
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)v7(ObjectType, v5);
  swift_unknownObjectRelease();
  id v9 = objc_msgSend(v8, sel_view);

  if (!v9)
  {
    __break(1u);
    JUMPOUT(0x249F72F64);
  }
  strcpy((char *)v12, "clock-poster-");
  HIWORD(v12[1]) = -4864;
  sub_24A057438();
  swift_bridgeObjectRelease();
  unint64_t v10 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v12[0], v12[1]);

  sub_249F7AA40(a1);
  return v1;
}

void sub_249F72F78(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A056538();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 32);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 32);
    id v16 = a1;
    swift_unknownObjectRetain();
    id v17 = (id)v15(ObjectType, v13);
    swift_unknownObjectRelease();
    objc_msgSend(v16, sel_bs_addChildViewController_withSuperview_, v17, a2);

LABEL_13:
    return;
  }
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
  swift_beginAccess();
  sub_249F7AA94(v18, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_249FB8AA8((uint64_t)v12);
    sub_249F6E790((uint64_t)v8, &qword_26B16FAA8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  }
  swift_retain_n();
  uint64_t v19 = sub_24A056518();
  os_log_type_t v20 = sub_24A0577B8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v35[0] = v32;
    char v33 = a2;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v31 = v21 + 4;
    uint64_t v22 = swift_retain();
    uint64_t v23 = sub_249F73B08(v22, (uint64_t (*)(uint64_t))type metadata accessor for ClockFaceController);
    unint64_t v25 = v24;
    swift_release();
    uint64_t v34 = sub_249F782DC(v23, v25, v35);
    a2 = v33;
    sub_24A057978();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249F61000, v19, v20, "[%{public}s]: No parent view controller provided", v21, 0xCu);
    uint64_t v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x24C5BA360](v26, -1, -1);
    MEMORY[0x24C5BA360](v21, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  uint64_t v27 = *(void *)(v3 + 32);
  uint64_t v28 = swift_getObjectType();
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 32);
  swift_unknownObjectRetain();
  int64_t v30 = (void *)v29(v28, v27);
  swift_unknownObjectRelease();
  id v17 = objc_msgSend(v30, sel_view);

  if (v17)
  {
    objc_msgSend(a2, sel_addSubview_, v17);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_249F733E4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 24) + 8))(ObjectType);
  *a2 = result & 1;
  return result;
}

uint64_t sub_249F73460(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(v2, ObjectType, v7);
  *(void *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = v5;
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_249F73518()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 24) + 8))(ObjectType) & 1;
}

uint64_t sub_249F73580(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(a1, ObjectType, v7);
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v5;
  swift_endAccess();
  return swift_unknownObjectRelease();
}

void (*sub_249F7363C(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  *uint64_t v3 = v5;
  *((unsigned char *)v3 + 64) = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 24) + 8))(ObjectType) & 1;
  return sub_249F736DC;
}

void sub_249F736DC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(unsigned __int8 *)(*(void *)a1 + 64);
  uint64_t v3 = *(void *)(*(void *)a1 + 56);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  v1[6] = v4;
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(v2, ObjectType, v7);
  *(void *)(v3 + 24) = v1[6];
  *(void *)(v3 + 32) = v5;
  swift_endAccess();
  swift_unknownObjectRelease();

  free(v1);
}

uint64_t sub_249F737AC()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 24) + 32))(ObjectType);
}

uint64_t ClockFaceController.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ClockFaceController.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_249F73878()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 24) + 8))(ObjectType) & 1;
}

uint64_t sub_249F738E4(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(a1, ObjectType, v7);
  *(void *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = v5;
  swift_endAccess();
  return swift_unknownObjectRelease();
}

void (*sub_249F7399C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_249F7363C(v2);
  return sub_249F6FBD0;
}

uint64_t sub_249F739F8()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 24) + 32))(ObjectType);
}

uint64_t sub_249F73A70(uint64_t a1)
{
  swift_getWitnessTable();

  return CustomStringConvertibleViaMirror.description.getter(a1);
}

uint64_t sub_249F73AC4()
{
  return sub_249F73FDC((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_26FDE6FF8, (void (*)(uint64_t, uint64_t))sub_249F75B7C);
}

uint64_t sub_249F73AEC()
{
  return sub_249F73B08(0, (uint64_t (*)(uint64_t))type metadata accessor for WorldDataProvider);
}

uint64_t sub_249F73B08(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = sub_24A057E98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2(a1);
  uint64_t v12 = v2;
  swift_retain();
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = sub_24A057B68();
  swift_release();
  uint64_t v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v12 = 60;
  unint64_t v13 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v12;
}

uint64_t sub_249F73D7C(float a1)
{
  uint64_t v2 = sub_24A057E98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &type metadata for FixedColorChannel;
  *(float *)&uint64_t v9 = a1;
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = sub_24A057B68();
  swift_release();
  uint64_t v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v9 = 60;
  unint64_t v10 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v9;
}

uint64_t sub_249F73FB4()
{
  return sub_249F73FDC((uint64_t)&type metadata for WorldViewModelContext, (uint64_t)&unk_26FDE6F80, (void (*)(uint64_t, uint64_t))sub_249F77BF0);
}

uint64_t sub_249F73FDC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_24A057E98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1;
  uint64_t v13 = swift_allocObject();
  a3(v3, v13 + 16);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = sub_24A057B68();
  swift_release();
  uint64_t v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v13 = 60;
  unint64_t v14 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v13;
}

uint64_t sub_249F74238()
{
  return sub_249F74960(type metadata accessor for TextClockDescriptor, type metadata accessor for TextClockDescriptor);
}

uint64_t sub_249F74264()
{
  uint64_t v1 = sub_24A057E98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &type metadata for DigitalClockContext;
  uint64_t v8 = swift_allocObject();
  sub_249F77CC4(v0, v8 + 16);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v5 = sub_24A057B68();
  swift_release();
  uint64_t v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v8 = 60;
  unint64_t v9 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v8;
}

uint64_t sub_249F744B0(char a1)
{
  uint64_t v2 = sub_24A057E98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &type metadata for ClockTimeInterval;
  LOBYTE(v9) = a1;
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = sub_24A057B68();
  swift_release();
  uint64_t v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v9 = 60;
  unint64_t v10 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v9;
}

uint64_t sub_249F746E8()
{
  uint64_t v1 = sub_24A057E98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = &type metadata for ClockPosterConfiguration;
  uint64_t v8 = swift_allocObject();
  sub_249F7B05C(v0, v8 + 16);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v5 = sub_24A057B68();
  swift_release();
  uint64_t v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v8 = 60;
  unint64_t v9 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v8;
}

uint64_t sub_249F74934()
{
  return sub_249F74960(type metadata accessor for SolarCycle, type metadata accessor for SolarCycle);
}

uint64_t sub_249F74960(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_24A057E98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = a1(0);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  sub_249F7AEC8(v2, (uint64_t)boxed_opaque_existential_0, a2);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = sub_24A057B68();
  swift_release();
  v13[0] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  v13[0] = 60;
  v13[1] = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v13[0];
}

uint64_t sub_249F74BB4()
{
  return sub_249F74960(type metadata accessor for SolarEvent, type metadata accessor for SolarEvent);
}

uint64_t sub_249F74BE0()
{
  return sub_249F74C30((uint64_t)&type metadata for SolarContext, (uint64_t)&unk_26FDE6F30, (void (*)(uint64_t, uint64_t))sub_249F77D98);
}

uint64_t sub_249F74C08()
{
  return sub_249F74C30((uint64_t)&type metadata for ColorProvider, (uint64_t)&unk_26FDE7020, (void (*)(uint64_t, uint64_t))sub_249F7B6E0);
}

uint64_t sub_249F74C30(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_24A057E98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1;
  uint64_t v13 = swift_allocObject();
  a3(v3, v13 + 16);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = sub_24A057B68();
  swift_release();
  uint64_t v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v13 = 60;
  unint64_t v14 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v13;
}

uint64_t sub_249F74E8C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = sub_24A057E98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = &type metadata for LocationSource.Source;
  uint64_t v13 = a1;
  unint64_t v14 = a2;
  char v15 = a3 & 1;
  sub_249F7AE5C();
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = sub_24A057B68();
  swift_release();
  uint64_t v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v13 = 60;
  unint64_t v14 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v13;
}

uint64_t sub_249F750E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057E98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2;
  uint64_t v10 = (uint64_t)v1;
  swift_retain();
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v7 = sub_24A057B68();
  swift_release();
  uint64_t v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v10 = 60;
  unint64_t v11 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v10;
}

uint64_t sub_249F75364()
{
  return sub_249F73FDC((uint64_t)&type metadata for PlayViewModelContext, (uint64_t)&unk_26FDE6FA8, (void (*)(uint64_t, uint64_t))sub_249F77718);
}

uint64_t sub_249F7538C(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = sub_24A057E98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &type metadata for WorldMap.DotFillSpec;
  uint64_t v12 = (double *)swift_allocObject();
  uint64_t v16 = (uint64_t)v12;
  void v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = sub_24A057B68();
  swift_release();
  uint64_t v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v16 = 60;
  unint64_t v17 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v16;
}

uint64_t sub_249F755F4()
{
  uint64_t v1 = sub_24A057E98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = &type metadata for WorldMap;
  uint64_t v5 = swift_allocObject();
  uint64_t v13 = v5;
  long long v6 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_OWORD *)(v5 + 144) = *(_OWORD *)(v0 + 128);
  *(void *)(v5 + 160) = *(void *)(v0 + 144);
  long long v7 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  long long v8 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  long long v9 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v5 + 32) = v9;
  sub_249F7AF70(v0);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v10 = sub_24A057B68();
  swift_release();
  uint64_t v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  uint64_t v13 = 60;
  unint64_t v14 = 0xE100000000000000;
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v13;
}

uint64_t ClockFaceController.shouldRecieveTapEvents.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    swift_unknownObjectRetain();
    LOBYTE(v4) = v6(ObjectType, v3);
    swift_unknownObjectRelease();
  }
  return v4 & 1;
}

Swift::Void __swiftcall ClockFaceController.didReceive(tapAt:)(CGPoint tapAt)
{
  double y = tapAt.y;
  double x = tapAt.x;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  swift_getObjectType();
  uint64_t v5 = swift_conformsToProtocol2();
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v5) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    uint64_t ObjectType = swift_getObjectType();
    long long v9 = *(void (**)(uint64_t, uint64_t, double, double))(v6 + 16);
    swift_unknownObjectRetain();
    v9(ObjectType, v6, x, y);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_249F759F4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    swift_unknownObjectRetain();
    LOBYTE(v4) = v6(ObjectType, v3);
    swift_unknownObjectRelease();
  }
  return v4 & 1;
}

uint64_t sub_249F75AB0(double a1, double a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v7 = result;
  }
  else {
    uint64_t v7 = 0;
  }
  if (result) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, double, double))(v7 + 16);
    swift_unknownObjectRetain();
    v10(ObjectType, v7, a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_249F75B7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F75BD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F75C2C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F7B284(&qword_26974FA50, 255, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return sub_249F77BF0(v3 + 16, a2);
}

uint64_t sub_249F75CF4(uint64_t a1)
{
  sub_249F77BF0(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_249F7B284(&qword_26974FA50, 255, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F77C70((uint64_t)v2);
}

uint64_t sub_249F75DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24A056538();
  uint64_t v9 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_24A01541C(3u), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v52 = 0;
    long long v50 = 0u;
    long long v51 = 0u;
LABEL_7:
    sub_249F6E790((uint64_t)&v50, &qword_26974FB08);
LABEL_8:
    sub_249F75B7C(a1, (uint64_t)&v50);
    sub_249F75B7C((uint64_t)&v50, (uint64_t)v59);
    sub_249FD0020(0.0, 10000.0);
    int v21 = v20;
    sub_249FD0020(10001.0, 20000.0);
    int v23 = v22;
    sub_249F75BD8((uint64_t)&v50);
    sub_249F7B58C((uint64_t)v59, a2);
    *(void *)(a2 + 112) = 0;
    *(_DWORD *)(a2 + 100) = v21;
    *(_DWORD *)(a2 + 104) = v23;
    return sub_249F78B74(a2, 3u, a1, v3);
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_24A0153B0(a1), (v19 & 1) != 0))
  {
    sub_249F7B37C(*(void *)(v17 + 56) + 40 * v18, (uint64_t)&v50);
  }
  else
  {
    *(void *)&long long v52 = 0;
    long long v50 = 0u;
    long long v51 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v51 + 1)) {
    goto LABEL_7;
  }
  sub_249F7B5E8(&v50, (uint64_t)v59);
  sub_249F7B37C((uint64_t)v59, (uint64_t)v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB10);
  if (!swift_dynamicCast())
  {
    long long v54 = 0u;
    long long v55 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v57 = 0;
    long long v56 = 0xFFuLL;
    sub_249F6E790((uint64_t)&v50, &qword_26974FB18);
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F7AA94(v28, (uint64_t)v8);
    uint64_t v29 = v9;
    int64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v31 = v47;
    if (v30(v8, 1, v47) == 1)
    {
      sub_249FB8AA8((uint64_t)v11);
      sub_249F6E790((uint64_t)v8, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v11, v8, v31);
    }
    sub_249F75B7C(a1, (uint64_t)&v50);
    sub_249F7B37C((uint64_t)v59, (uint64_t)v58);
    uint64_t v32 = sub_24A056518();
    os_log_type_t v33 = sub_24A0577B8();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = v29;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v49[0] = v46;
      *(_DWORD *)uint64_t v36 = 136446722;
      os_log_t v45 = v32;
      uint64_t v48 = sub_249F782DC(0x72616C6F73, 0xE500000000000000, v49);
      sub_24A057978();
      *(_WORD *)(v36 + 12) = 2082;
      int v44 = v34;
      uint64_t v37 = sub_249F73FDC((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_26FDE6FF8, (void (*)(uint64_t, uint64_t))sub_249F75B7C);
      uint64_t v48 = sub_249F782DC(v37, v38, v49);
      sub_24A057978();
      swift_bridgeObjectRelease();
      sub_249F75BD8((uint64_t)&v50);
      *(_WORD *)(v36 + 22) = 2080;
      uint64_t v43 = v36 + 24;
      __swift_project_boxed_opaque_existential_1(v58, v58[3]);
      uint64_t v39 = sub_24A057CF8();
      uint64_t v48 = sub_249F782DC(v39, v40, v49);
      sub_24A057978();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
      os_log_t v41 = v45;
      _os_log_impl(&dword_249F61000, v45, (os_log_type_t)v44, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v36, 0x20u);
      uint64_t v42 = v46;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v42, -1, -1);
      MEMORY[0x24C5BA360](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v47);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
      sub_249F75BD8((uint64_t)&v50);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
    goto LABEL_8;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
  long long v25 = v55;
  *(_OWORD *)(a2 + 64) = v54;
  *(_OWORD *)(a2 + 80) = v25;
  *(_OWORD *)(a2 + 96) = v56;
  *(void *)(a2 + 112) = v57;
  long long v26 = v51;
  *(_OWORD *)a2 = v50;
  *(_OWORD *)(a2 + 16) = v26;
  long long v27 = v53;
  *(_OWORD *)(a2 + 32) = v52;
  *(_OWORD *)(a2 + 48) = v27;
  return result;
}

__n128 sub_249F76430@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24A056538();
  uint64_t v9 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  unint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_24A01541C(0), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v47 = 0;
    long long v45 = 0u;
    long long v46 = 0u;
LABEL_7:
    sub_249F6E790((uint64_t)&v45, &qword_26974FB08);
LABEL_8:
    sub_249F75B7C(a1, a2);
    *(void *)(a2 + 104) = 0;
    sub_249F79268(a2, 0, a1, v3);
    return result;
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_24A0153B0(a1), (v19 & 1) != 0))
  {
    sub_249F7B37C(*(void *)(v17 + 56) + 40 * v18, (uint64_t)&v45);
  }
  else
  {
    *(void *)&long long v47 = 0;
    long long v45 = 0u;
    long long v46 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v46 + 1)) {
    goto LABEL_7;
  }
  sub_249F7B5E8(&v45, (uint64_t)v53);
  sub_249F7B37C((uint64_t)v53, (uint64_t)v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB10);
  if (!swift_dynamicCast())
  {
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    __n128 v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v51 = xmmword_24A05A590;
    sub_249F6E790((uint64_t)&v45, &qword_26974FB20);
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F7AA94(v23, (uint64_t)v8);
    uint64_t v24 = v9;
    long long v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v26 = v42;
    if (v25(v8, 1, v42) == 1)
    {
      sub_249FB8AA8((uint64_t)v11);
      sub_249F6E790((uint64_t)v8, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v11, v8, v26);
    }
    sub_249F75B7C(a1, (uint64_t)&v45);
    sub_249F7B37C((uint64_t)v53, (uint64_t)v52);
    long long v27 = sub_24A056518();
    os_log_type_t v28 = sub_24A0577B8();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = v24;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v44[0] = v41;
      *(_DWORD *)uint64_t v31 = 136446722;
      os_log_t v40 = v27;
      uint64_t v43 = sub_249F782DC(0x6C617469676964, 0xE700000000000000, v44);
      sub_24A057978();
      *(_WORD *)(v31 + 12) = 2082;
      int v39 = v29;
      uint64_t v32 = sub_249F73FDC((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_26FDE6FF8, (void (*)(uint64_t, uint64_t))sub_249F75B7C);
      uint64_t v43 = sub_249F782DC(v32, v33, v44);
      sub_24A057978();
      swift_bridgeObjectRelease();
      sub_249F75BD8((uint64_t)&v45);
      *(_WORD *)(v31 + 22) = 2080;
      uint64_t v38 = v31 + 24;
      __swift_project_boxed_opaque_existential_1(v52, v52[3]);
      uint64_t v34 = sub_24A057CF8();
      uint64_t v43 = sub_249F782DC(v34, v35, v44);
      sub_24A057978();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
      os_log_t v36 = v40;
      _os_log_impl(&dword_249F61000, v40, (os_log_type_t)v39, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v31, 0x20u);
      uint64_t v37 = v41;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v37, -1, -1);
      MEMORY[0x24C5BA360](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v42);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
      sub_249F75BD8((uint64_t)&v45);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v26);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
  long long v21 = v50;
  *(_OWORD *)(a2 + 64) = v49;
  *(_OWORD *)(a2 + 80) = v21;
  *(_OWORD *)(a2 + 96) = v51;
  long long v22 = v46;
  *(_OWORD *)a2 = v45;
  *(_OWORD *)(a2 + 16) = v22;
  __n128 result = v48;
  *(_OWORD *)(a2 + 32) = v47;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

__n128 sub_249F76A24@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A056538();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v2 + 16);
  uint64_t v14 = (os_unfair_lock_s *)(*(void *)(v13 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v14);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  swift_release();
  if (!*(void *)(v15 + 16) || (unint64_t v16 = sub_24A01541C(2u), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v43 = 0;
    long long v42 = 0u;
    long long v41 = 0u;
LABEL_7:
    sub_249F6E790((uint64_t)&v41, &qword_26974FB08);
LABEL_8:
    sub_249F75B7C(a1, a2);
    sub_249F7995C(a2, 2u, a1, v3, (uint64_t)&type metadata for WorldViewModelContext, (uint64_t (*)(uint64_t))sub_249F7B538, (uint64_t)&unk_26FDE6F80, (void (*)(uint64_t, uint64_t))sub_249F77BF0);
    return result;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_24A0153B0(a1), (v20 & 1) != 0))
  {
    sub_249F7B37C(*(void *)(v18 + 56) + 40 * v19, (uint64_t)&v41);
  }
  else
  {
    *(void *)&long long v43 = 0;
    long long v42 = 0u;
    long long v41 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v42 + 1)) {
    goto LABEL_7;
  }
  sub_249F7B5E8(&v41, (uint64_t)v49);
  sub_249F7B37C((uint64_t)v49, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB10);
  if (!swift_dynamicCast())
  {
    long long v45 = 0u;
    long long v46 = 0u;
    __n128 v44 = 0u;
    long long v43 = 0u;
    long long v42 = 0u;
    long long v41 = 0u;
    char v47 = -1;
    sub_249F6E790((uint64_t)&v41, &qword_26974FB28);
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F7AA94(v24, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_249FB8AA8((uint64_t)v12);
      sub_249F6E790((uint64_t)v8, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    }
    sub_249F75B7C(a1, (uint64_t)&v41);
    sub_249F7B37C((uint64_t)v49, (uint64_t)v48);
    long long v25 = sub_24A056518();
    os_log_type_t v26 = sub_24A0577B8();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v40 = v38;
      *(_DWORD *)uint64_t v28 = 136446722;
      os_log_t v37 = v25;
      uint64_t v39 = sub_249F782DC(0x646C726F77, 0xE500000000000000, &v40);
      v35[1] = &v40;
      sub_24A057978();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v36 = v28 + 14;
      uint64_t v29 = sub_249F73FDC((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_26FDE6FF8, (void (*)(uint64_t, uint64_t))sub_249F75B7C);
      uint64_t v39 = sub_249F782DC(v29, v30, &v40);
      sub_24A057978();
      swift_bridgeObjectRelease();
      sub_249F75BD8((uint64_t)&v41);
      *(_WORD *)(v28 + 22) = 2080;
      LODWORD(v36) = v27;
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      uint64_t v31 = sub_24A057CF8();
      uint64_t v39 = sub_249F782DC(v31, v32, &v40);
      sub_24A057978();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      os_log_t v33 = v37;
      _os_log_impl(&dword_249F61000, v37, (os_log_type_t)v36, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v28, 0x20u);
      uint64_t v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v34, -1, -1);
      MEMORY[0x24C5BA360](v28, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_249F75BD8((uint64_t)&v41);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  long long v22 = v46;
  *(_OWORD *)(a2 + 64) = v45;
  *(_OWORD *)(a2 + 80) = v22;
  *(unsigned char *)(a2 + 96) = v47;
  long long v23 = v42;
  *(_OWORD *)a2 = v41;
  *(_OWORD *)(a2 + 16) = v23;
  __n128 result = v44;
  *(_OWORD *)(a2 + 32) = v43;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

__n128 sub_249F770A0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A056538();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v2 + 16);
  uint64_t v14 = (os_unfair_lock_s *)(*(void *)(v13 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v14);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  swift_release();
  if (!*(void *)(v15 + 16) || (unint64_t v16 = sub_24A01541C(4u), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v43 = 0;
    long long v42 = 0u;
    long long v41 = 0u;
LABEL_7:
    sub_249F6E790((uint64_t)&v41, &qword_26974FB08);
LABEL_8:
    sub_249F75B7C(a1, a2);
    sub_249F7995C(a2, 4u, a1, v3, (uint64_t)&type metadata for PlayViewModelContext, (uint64_t (*)(uint64_t))sub_249F7B644, (uint64_t)&unk_26FDE6FA8, (void (*)(uint64_t, uint64_t))sub_249F77718);
    return result;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_24A0153B0(a1), (v20 & 1) != 0))
  {
    sub_249F7B37C(*(void *)(v18 + 56) + 40 * v19, (uint64_t)&v41);
  }
  else
  {
    *(void *)&long long v43 = 0;
    long long v42 = 0u;
    long long v41 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v42 + 1)) {
    goto LABEL_7;
  }
  sub_249F7B5E8(&v41, (uint64_t)v49);
  sub_249F7B37C((uint64_t)v49, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB10);
  if (!swift_dynamicCast())
  {
    long long v45 = 0u;
    long long v46 = 0u;
    __n128 v44 = 0u;
    long long v43 = 0u;
    long long v42 = 0u;
    long long v41 = 0u;
    char v47 = -1;
    sub_249F6E790((uint64_t)&v41, &qword_26974FB30);
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F7AA94(v24, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_249FB8AA8((uint64_t)v12);
      sub_249F6E790((uint64_t)v8, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    }
    sub_249F75B7C(a1, (uint64_t)&v41);
    sub_249F7B37C((uint64_t)v49, (uint64_t)v48);
    long long v25 = sub_24A056518();
    os_log_type_t v26 = sub_24A0577B8();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v40 = v38;
      *(_DWORD *)uint64_t v28 = 136446722;
      os_log_t v37 = v25;
      uint64_t v39 = sub_249F782DC(2036427888, 0xE400000000000000, &v40);
      v35[1] = &v40;
      sub_24A057978();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v36 = v28 + 14;
      uint64_t v29 = sub_249F73FDC((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_26FDE6FF8, (void (*)(uint64_t, uint64_t))sub_249F75B7C);
      uint64_t v39 = sub_249F782DC(v29, v30, &v40);
      sub_24A057978();
      swift_bridgeObjectRelease();
      sub_249F75BD8((uint64_t)&v41);
      *(_WORD *)(v28 + 22) = 2080;
      LODWORD(v36) = v27;
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      uint64_t v31 = sub_24A057CF8();
      uint64_t v39 = sub_249F782DC(v31, v32, &v40);
      sub_24A057978();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      os_log_t v33 = v37;
      _os_log_impl(&dword_249F61000, v37, (os_log_type_t)v36, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v28, 0x20u);
      uint64_t v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v34, -1, -1);
      MEMORY[0x24C5BA360](v28, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_249F75BD8((uint64_t)&v41);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  long long v22 = v46;
  *(_OWORD *)(a2 + 64) = v45;
  *(_OWORD *)(a2 + 80) = v22;
  *(unsigned char *)(a2 + 96) = v47;
  long long v23 = v42;
  *(_OWORD *)a2 = v41;
  *(_OWORD *)(a2 + 16) = v23;
  __n128 result = v44;
  *(_OWORD *)(a2 + 32) = v43;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_249F77718(uint64_t a1, uint64_t a2)
{
  return a2;
}

void (*sub_249F77774(void *a1, unsigned __int8 a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_249F788DC(v4, a2);
  return sub_249F777D4;
}

void sub_249F777D4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_249F77820@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F7B284(&qword_26974FA58, 255, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return sub_249F77CC4(v3 + 32, a2);
}

uint64_t sub_249F778E8(uint64_t a1)
{
  sub_249F77CC4(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_249F7B284(&qword_26974FA58, 255, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F77D44((uint64_t)v2);
}

uint64_t sub_249F779CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F7B284(&qword_26974FA48, 255, (void (*)(uint64_t))type metadata accessor for PlayViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return sub_249F77718(v3 + 64, a2);
}

uint64_t sub_249F77A98(uint64_t a1)
{
  sub_249F77718(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_249F7B284(&qword_26974FA48, 255, (void (*)(uint64_t))type metadata accessor for PlayViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F77B9C((uint64_t)v2);
}

uint64_t sub_249F77B80()
{
  return sub_24A01E71C(*(void *)(v0 + 16), *(long long **)(v0 + 24));
}

uint64_t sub_249F77B9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F77BF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F77C54()
{
  return sub_249F90104(*(void *)(v0 + 16), *(long long **)(v0 + 24));
}

uint64_t sub_249F77C70(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F77CC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F77D28()
{
  return sub_249FDF9B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249F77D44(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F77D98(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F77DF4(uint64_t a1)
{
  return a1;
}

id sub_249F77E48()
{
  uint64_t v0 = (void *)sub_249F7A054();

  return v0;
}

id sub_249F77E74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WorldClockFace(0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v18[-v9 - 8];
  sub_249F77BF0(a1, (uint64_t)v18);
  type metadata accessor for WorldViewModel(0);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_249F8CB3C((uint64_t)v18);
  sub_249F7B284(&qword_26974FA50, 255, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  *(void *)uint64_t v8 = sub_24A056698();
  v8[8] = v11 & 1;
  uint64_t v12 = (uint64_t *)&v8[*(int *)(v5 + 28)];
  *uint64_t v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  swift_storeEnumTagMultiPayload();
  sub_249F7B220((uint64_t)v8, (uint64_t)v10);
  id v13 = objc_allocWithZone((Class)type metadata accessor for ClockHostingController());
  swift_retain();
  id v14 = sub_249F7A46C((uint64_t)v10);
  swift_release();
  *(void *)(v2 + 24) = v14;
  id result = objc_msgSend(v14, sel_view);
  if (result)
  {
    unint64_t v16 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    sub_249F77C70(a1);
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_249F78064(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_249F77D98(a1, (uint64_t)v12);
  type metadata accessor for SolarViewModel();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_249FD1304((uint64_t)v12);
  sub_249F7B284(&qword_26974FAB8, 255, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  uint64_t v4 = sub_24A056698();
  char v6 = v5;
  sub_24A057008();
  double v7 = *(double *)v12;
  uint64_t v8 = v12[1];
  objc_allocWithZone((Class)type metadata accessor for ClockHostingController());
  swift_retain();
  id v9 = sub_249F7A258(v4, v6 & 1, v8, v7);
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v2 + 24) = v9;
  id result = objc_msgSend(v9, sel_view);
  if (result)
  {
    char v11 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    sub_249F77DF4(a1);
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249F781F0(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_249F78200(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_249F7823C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_249F78264(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_249F782DC(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_24A057978();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_249F782DC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_249F783B0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_249F7B110((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_249F7B110((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_249F783B0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24A057988();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_249F7856C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24A057AA8();
  if (!v8)
  {
    sub_24A057BB8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24A057C18();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_249F7856C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_249F78604(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_249F7877C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_249F7877C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_249F78604(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24A02C4AC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24A057A88();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24A057BB8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24A057458();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24A057C18();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24A057BB8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_249F7877C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

unsigned char **sub_249F788CC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void (*sub_249F788DC(void *a1, unsigned __int8 a2))(uint64_t a1)
{
  unint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_249F78B38(v4);
  v4[9] = sub_249F789CC((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_249F7896C;
}

void sub_249F7896C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

unint64_t (*sub_249F789CC(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result)
{
  unint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24A01541C(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_249F78AF0;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24A00092C();
      goto LABEL_7;
    }
    sub_249FFB1A0(v13, a3 & 1);
    unint64_t v17 = sub_24A01541C(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t))sub_24A057D78();
  __break(1u);
  return result;
}

unint64_t sub_249F78AF0(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25)) {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else {
      return sub_249FFFF60(*(void *)(result + 16), *(unsigned char *)(result + 24), v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return sub_249FFDA3C(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

uint64_t (*sub_249F78B38(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_249F78B68;
}

uint64_t sub_249F78B68(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_249F78B74(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_24A056538();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[3] = &type metadata for SolarContext;
  v41[4] = sub_249F7B328();
  v41[0] = swift_allocObject();
  sub_249F77D98(a1, v41[0] + 16);
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v36 = v11;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_24A01541C(a2);
  char v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_5:
    uint64_t v18 = *(void *)(a4 + 16);
    unint64_t v19 = (os_unfair_lock_s *)(*(void *)(v18 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v19);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v18 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v19);
    swift_endAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38[0] = v20;
    sub_249FFEED0(MEMORY[0x263F8EE80], a2, isUniquelyReferenced_nonNull_native);
    uint64_t v22 = v38[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v19);
    *(void *)(v18 + 24) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v19);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  long long v23 = sub_249F9EBF4(v40);
  uint64_t v24 = sub_249F77774(v39, a2);
  if (*v25)
  {
    sub_249F75B7C(a3, (uint64_t)v38);
    sub_249F7B37C((uint64_t)v41, (uint64_t)v37);
    sub_249FEF000((uint64_t)v37, (uint64_t)v38);
  }
  ((void (*)(void *, void))v24)(v39, 0);
  ((void (*)(void *, void))v23)(v40, 0);
  sub_24A055FE8();
  swift_allocObject();
  sub_24A055FD8();
  sub_24A055FB8();
  v38[0] = sub_249F9E764();
  sub_249F7B3E0();
  uint64_t v26 = sub_24A055FC8();
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = self;
  sub_249F7B434(v26, v28);
  id v30 = objc_msgSend(v29, sel_standardUserDefaults, v34, v35, v36);
  uint64_t v31 = (void *)sub_24A056028();
  sub_249F7B48C(v26, v28);
  swift_bridgeObjectRetain();
  unint64_t v32 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setObject_forKey_, v31, v32);

  swift_release();
  sub_249F7B48C(v26, v28);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
}

uint64_t sub_249F79268(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_24A056538();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[3] = &type metadata for DigitalClockContext;
  v41[4] = sub_249F7B4E4();
  v41[0] = swift_allocObject();
  sub_249F77CC4(a1, v41[0] + 16);
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v36 = v11;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_24A01541C(a2);
  char v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_5:
    uint64_t v18 = *(void *)(a4 + 16);
    unint64_t v19 = (os_unfair_lock_s *)(*(void *)(v18 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v19);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v18 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v19);
    swift_endAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38[0] = v20;
    sub_249FFEED0(MEMORY[0x263F8EE80], a2, isUniquelyReferenced_nonNull_native);
    uint64_t v22 = v38[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v19);
    *(void *)(v18 + 24) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v19);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  long long v23 = sub_249F9EBF4(v40);
  uint64_t v24 = sub_249F77774(v39, a2);
  if (*v25)
  {
    sub_249F75B7C(a3, (uint64_t)v38);
    sub_249F7B37C((uint64_t)v41, (uint64_t)v37);
    sub_249FEF000((uint64_t)v37, (uint64_t)v38);
  }
  ((void (*)(void *, void))v24)(v39, 0);
  ((void (*)(void *, void))v23)(v40, 0);
  sub_24A055FE8();
  swift_allocObject();
  sub_24A055FD8();
  sub_24A055FB8();
  v38[0] = sub_249F9E764();
  sub_249F7B3E0();
  uint64_t v26 = sub_24A055FC8();
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = self;
  sub_249F7B434(v26, v28);
  id v30 = objc_msgSend(v29, sel_standardUserDefaults, v34, v35, v36);
  uint64_t v31 = (void *)sub_24A056028();
  sub_249F7B48C(v26, v28);
  swift_bridgeObjectRetain();
  unint64_t v32 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setObject_forKey_, v31, v32);

  swift_release();
  sub_249F7B48C(v26, v28);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
}

uint64_t sub_249F7995C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, void (*a8)(uint64_t, uint64_t))
{
  uint64_t v40 = a3;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = sub_24A056538();
  uint64_t v42 = *(void *)(v15 - 8);
  uint64_t v43 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  long long v41 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[3] = a5;
  void v48[4] = a6(v16);
  v48[0] = swift_allocObject();
  a8(a1, v48[0] + 16);
  uint64_t v18 = *(void *)(a4 + 16);
  unint64_t v19 = (os_unfair_lock_s *)(*(void *)(v18 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v19);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  swift_release();
  if (!*(void *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_24A01541C(a2);
  char v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_5:
    uint64_t v23 = *(void *)(a4 + 16);
    uint64_t v24 = (os_unfair_lock_s *)(*(void *)(v23 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v24);
    swift_beginAccess();
    uint64_t v25 = *(void *)(v23 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v24);
    swift_endAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45[0] = v25;
    sub_249FFEED0(MEMORY[0x263F8EE80], a2, isUniquelyReferenced_nonNull_native);
    uint64_t v27 = v45[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v24);
    *(void *)(v23 + 24) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v24);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  unint64_t v28 = sub_249F9EBF4(v47);
  uint64_t v29 = sub_249F77774(v46, a2);
  if (*v30)
  {
    sub_249F75B7C(v40, (uint64_t)v45);
    sub_249F7B37C((uint64_t)v48, (uint64_t)v44);
    sub_249FEF000((uint64_t)v44, (uint64_t)v45);
  }
  ((void (*)(void *, void))v29)(v46, 0);
  ((void (*)(void *, void))v28)(v47, 0);
  sub_24A055FE8();
  swift_allocObject();
  sub_24A055FD8();
  sub_24A055FB8();
  v45[0] = sub_249F9E764();
  sub_249F7B3E0();
  uint64_t v31 = sub_24A055FC8();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = self;
  sub_249F7B434(v31, v33);
  id v35 = objc_msgSend(v34, sel_standardUserDefaults);
  uint64_t v36 = (void *)sub_24A056028();
  sub_249F7B48C(v31, v33);
  swift_bridgeObjectRetain();
  os_log_t v37 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setObject_forKey_, v36, v37);

  swift_release();
  sub_249F7B48C(v31, v33);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
}

uint64_t sub_249F7A054()
{
  return v0;
}

id sub_249F7A05C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAA8);
  MEMORY[0x270FA5388](v6);
  uint64_t v15 = a1;
  LOBYTE(v16) = a2 & 1;
  *(unsigned char *)(v3 + qword_269752218) = 0;
  *(unsigned char *)(v3 + qword_269752220) = 0;
  uint64_t v7 = type metadata accessor for DigitalClockViewModel();
  unint64_t v8 = sub_249F7B170();
  uint64_t v9 = sub_249F7B284(&qword_26974FA58, 255, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056DF8();
  swift_getOpaqueTypeConformance2();
  uint64_t v14 = sub_24A0570F8();
  id v10 = (id)sub_24A056B18();
  id result = objc_msgSend(v10, sel_view, v14, v7, v8, v9, v15, v16);
  if (result)
  {
    uint64_t v12 = result;
    id v13 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_249F7A258(uint64_t a1, char a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAC0);
  MEMORY[0x270FA5388](v10);
  uint64_t v19 = a1;
  LOBYTE(v20) = a2 & 1;
  *(unsigned char *)(v5 + qword_269752218) = 0;
  *(unsigned char *)(v5 + qword_269752220) = 0;
  uint64_t v11 = type metadata accessor for SolarViewModel();
  unint64_t v12 = sub_249F7B1C4();
  uint64_t v13 = sub_249F7B284(&qword_26974FAB8, 255, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  sub_24A056DF8();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_24A0570F8();
  id v14 = (id)sub_24A056B18();
  id result = objc_msgSend(v14, sel_view, v18, v11, v12, v13, v19, v20, *(void *)&a4, a3);
  if (result)
  {
    uint64_t v16 = result;
    id v17 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v16, sel_setBackgroundColor_, v17);

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_249F7A46C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD8);
  MEMORY[0x270FA5388](v3);
  *(unsigned char *)(v1 + qword_269752218) = 0;
  *(unsigned char *)(v1 + qword_269752220) = 0;
  type metadata accessor for WorldClockFace(0);
  uint64_t v4 = type metadata accessor for WorldViewModel(0);
  uint64_t v5 = sub_249F7B284(&qword_26974FAE0, 255, (void (*)(uint64_t))type metadata accessor for WorldClockFace);
  uint64_t v6 = sub_249F7B284(&qword_26974FA50, 255, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056DF8();
  swift_getOpaqueTypeConformance2();
  uint64_t v11 = sub_24A0570F8();
  id v7 = (id)sub_24A056B18();
  id result = objc_msgSend(v7, sel_view, v11, v4, v5, v6);
  if (result)
  {
    uint64_t v9 = result;
    id v10 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v9, sel_setBackgroundColor_, v10);

    sub_249F7B2CC(a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249F7A698(uint64_t a1)
{
  if (qword_26974F2B8 != -1) {
    swift_once();
  }
  switch(*(unsigned char *)(a1 + 97))
  {
    case 1:
      sub_249F75B7C(a1, (uint64_t)v18);
      id v14 = objc_allocWithZone((Class)type metadata accessor for AnalogClockFaceViewController());
      uint64_t v2 = (uint64_t)sub_249F87128((uint64_t)v18);
      unint64_t v12 = (unint64_t *)&unk_26974FAA0;
      uint64_t v13 = type metadata accessor for AnalogClockFaceViewController;
      goto LABEL_11;
    case 2:
      sub_249F76A24(a1, (uint64_t)v18);
      sub_249F77BF0((uint64_t)v18, (uint64_t)v17);
      uint64_t v9 = &qword_26974FA38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA38);
      swift_allocObject();
      uint64_t v2 = (uint64_t)sub_249F77E74((uint64_t)v17);
      sub_249F77C70((uint64_t)v18);
      id v10 = (unint64_t *)&unk_26974FA88;
      goto LABEL_8;
    case 3:
      sub_249F75DD8(a1, (uint64_t)v18);
      sub_249F77D98((uint64_t)v18, (uint64_t)v17);
      uint64_t v9 = &qword_26974FA28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA28);
      swift_allocObject();
      uint64_t v2 = (uint64_t)sub_249F78064((uint64_t)v17);
      sub_249F77DF4((uint64_t)v18);
      id v10 = (unint64_t *)&unk_26974FA90;
LABEL_8:
      sub_249F6EE60(v10, v9);
      break;
    case 4:
      sub_249F75B7C(a1, (uint64_t)v18);
      id v11 = objc_allocWithZone((Class)type metadata accessor for PlayClockFaceViewController());
      uint64_t v2 = (uint64_t)sub_24A02D400((uint64_t)v18);
      unint64_t v12 = (unint64_t *)&unk_26974FA80;
      uint64_t v13 = type metadata accessor for PlayClockFaceViewController;
LABEL_11:
      sub_249F7B284(v12, 255, (void (*)(uint64_t))v13);
      break;
    default:
      sub_249F76430(a1, (uint64_t)v18);
      sub_249F77CC4((uint64_t)v18, (uint64_t)v17);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA30);
      uint64_t v2 = swift_allocObject();
      sub_249F77CC4((uint64_t)v17, (uint64_t)v16);
      type metadata accessor for DigitalClockViewModel();
      swift_allocObject();
      *(void *)(v2 + 16) = sub_249FDC704((uint64_t)v16);
      sub_249F7B284(&qword_26974FA58, 255, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
      uint64_t v3 = sub_24A056698();
      char v5 = v4 & 1;
      objc_allocWithZone((Class)type metadata accessor for ClockHostingController());
      swift_retain();
      id v6 = sub_249F7A05C(v3, v5);
      swift_release();
      swift_release();
      *(void *)(v2 + 24) = v6;
      id v7 = objc_msgSend(v6, sel_view);
      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x249F7AA2CLL);
      }
      unint64_t v8 = v7;
      objc_msgSend(v7, sel_setClipsToBounds_, 1);

      sub_249F77D44((uint64_t)v17);
      sub_249F77D44((uint64_t)v18);
      sub_249F6EE60(&qword_26974FA98, &qword_26974FA30);
      break;
  }
  return v2;
}

uint64_t sub_249F7AA40(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F7AA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F7AAFC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_249F7B284(&qword_26974FA60, a2, (void (*)(uint64_t))type metadata accessor for ClockFaceController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ClockFaceController()
{
  return self;
}

uint64_t sub_249F7AB7C(uint64_t a1)
{
  sub_249F75B7C(a1, (uint64_t)v2);
  return sub_249F71F00((uint64_t)v2);
}

uint64_t dispatch thunk of ClockFaceRemoteTapHandling.shouldRecieveTapEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ClockFaceRemoteTapHandling.didReceive(tapAt:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ClockFaceDebugUISupporting.isDebuggingHUDVisible.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ClockFaceDebugUISupporting.isDebuggingHUDVisible.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ClockFaceDebugUISupporting.isDebuggingHUDVisible.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ClockFaceController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ClockFaceController);
}

uint64_t dispatch thunk of ClockFaceController.updatedConfiguration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ClockFaceController.debugSupportingClockFace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ClockFaceController.suggestedLooks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ClockFaceController.look.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ClockFaceController.look.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ClockFaceController.look.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ClockFaceController.presentationViewController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ClockFaceController.cleanupViews()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ClockFaceController.saveViewState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ClockFaceController.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ClockFaceController.configure(withParent:superview:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ClockFaceController.isDisplayStyleRedMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ClockFaceController.isDisplayStyleRedMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ClockFaceController.isDisplayStyleRedMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ClockFaceController.redModeRenderingMethod.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t sub_249F7AE48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_249F7AE5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_249F7AEC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F7AF30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 168, 7);
}

uint64_t sub_249F7AF70(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F7AFA8()
{
  return objectdestroy_18Tm(136);
}

uint64_t sub_249F7AFB0()
{
  return objectdestroy_18Tm(128);
}

uint64_t objectdestroy_18Tm(uint64_t a1)
{
  uint64_t v3 = v1 + 16;
  int v4 = *(unsigned __int8 *)(v1 + 112);
  if (v4 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v3);
    __swift_destroy_boxed_opaque_existential_1Tm(v1 + 56);
  }
  else if (v4 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(unsigned char *)(v1 + 112)) {
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v3);
  }
  swift_bridgeObjectRelease();
LABEL_8:

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_249F7B044()
{
  return objectdestroy_18Tm(113);
}

uint64_t sub_249F7B04C()
{
  return objectdestroy_18Tm(113);
}

uint64_t sub_249F7B054()
{
  return objectdestroy_18Tm(114);
}

uint64_t sub_249F7B05C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F7B0B8()
{
  return objectdestroy_18Tm(113);
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_249F7B110(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_249F7B170()
{
  unint64_t result = qword_26974FAB0;
  if (!qword_26974FAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FAB0);
  }
  return result;
}

unint64_t sub_249F7B1C4()
{
  unint64_t result = qword_26974FAC8;
  if (!qword_26974FAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FAC8);
  }
  return result;
}

uint64_t sub_249F7B220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorldClockFace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F7B284(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F7B2CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorldClockFace(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249F7B328()
{
  unint64_t result = qword_26974FAE8;
  if (!qword_26974FAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FAE8);
  }
  return result;
}

uint64_t sub_249F7B37C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_249F7B3E0()
{
  unint64_t result = qword_26974FAF0;
  if (!qword_26974FAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FAF0);
  }
  return result;
}

uint64_t sub_249F7B434(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_249F7B48C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_249F7B4E4()
{
  unint64_t result = qword_26974FAF8;
  if (!qword_26974FAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FAF8);
  }
  return result;
}

unint64_t sub_249F7B538()
{
  unint64_t result = qword_26974FB00;
  if (!qword_26974FB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FB00);
  }
  return result;
}

uint64_t sub_249F7B58C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F7B5E8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_249F7B644()
{
  unint64_t result = qword_26974FB38;
  if (!qword_26974FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FB38);
  }
  return result;
}

uint64_t sub_249F7B698()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_249F7B6E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249F7B73C()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249F7B750()
{
  return sub_249F77D28();
}

uint64_t sub_249F7B768()
{
  return sub_249F77C54();
}

uint64_t sub_249F7B780()
{
  return sub_249F77B80();
}

id sub_249F7B798(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider];
  *(void *)uint64_t v9 = 0x4036000000000000;
  v9[8] = 0;
  uint64_t v10 = OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_timeFormatter;
  id v11 = objc_allocWithZone(MEMORY[0x263EFD220]);
  unint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_init);
  uint64_t v13 = OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmIconLayer;
  *(void *)&v12[v13] = sub_249F7BF1C();
  uint64_t v14 = OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmTextLayer;
  *(void *)&v12[v14] = sub_249F7C23C();

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for AlarmComplicationCurvedTextView();
  id v15 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  BOOL v16 = objc_msgSend(v15, sel_effectiveUserInterfaceLayoutDirection) == (id)1;
  *((unsigned char *)v15 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider + 8) = v16;
  return v15;
}

void sub_249F7B9A8()
{
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for AlarmComplicationCurvedTextView();
  objc_msgSendSuper2(&v27, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmIconLayer];
  id v2 = objc_msgSend(v1, sel_superlayer);

  if (!v2)
  {
    id v3 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v3, sel_addSublayer_, v1);
  }
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmTextLayer];
  id v5 = objc_msgSend(v4, sel_superlayer);

  if (!v5)
  {
    id v6 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v6, sel_addSublayer_, v4);
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.152941176, 0.0, 1.0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = 0x4069800000000000;
  id v9 = objc_allocWithZone(MEMORY[0x263F825C8]);
  uint64_t v25 = sub_249F7C490;
  uint64_t v26 = v8;
  uint64_t v21 = MEMORY[0x263EF8330];
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_249FDA198;
  uint64_t v24 = &block_descriptor_1;
  uint64_t v10 = _Block_copy(&v21);
  id v11 = v7;
  id v12 = objc_msgSend(v9, sel_initWithDynamicProvider_, v10);
  _Block_release(v10);

  swift_release();
  id v13 = objc_msgSend(v12, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v13);
  id v14 = objc_msgSend(self, sel_whiteColor);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = 0x4063200000000000;
  id v16 = objc_allocWithZone(MEMORY[0x263F825C8]);
  uint64_t v25 = sub_249F7C4E4;
  uint64_t v26 = v15;
  uint64_t v21 = MEMORY[0x263EF8330];
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_249FDA198;
  uint64_t v24 = &block_descriptor_11;
  id v17 = _Block_copy(&v21);
  id v18 = v14;
  id v19 = objc_msgSend(v16, sel_initWithDynamicProvider_, v17);
  _Block_release(v17);

  swift_release();
  id v20 = objc_msgSend(v19, sel_CGColor);

  objc_msgSend(v4, sel_setFillColor_, v20);
}

void sub_249F7BD50(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_timeFormatter), sel_timeAndDesignatorText);
  if (v4)
  {
    id v5 = v4;
    sub_24A0573A8();

    sub_24A057438();
    swift_bridgeObjectRelease();
    if (qword_26974F2E8 != -1) {
      swift_once();
    }
    sub_249F71124(qword_269752388);
    id v6 = objc_allocWithZone(MEMORY[0x263F086A0]);
    id v7 = (void *)sub_24A057368();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_249F7C400();
    uint64_t v8 = (void *)sub_24A0572E8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

    uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmTextLayer);
    id v11 = sub_249FAD198(v9, a1, *(void *)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmIconLayer), *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider + 8), *(double *)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider));
    objc_msgSend(v10, sel_setPath_, v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_249F7BF1C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  if (qword_26974F2E0 != -1) {
    swift_once();
  }
  id v2 = objc_msgSend(self, sel_configurationWithFont_scale_, qword_269752380, 1);
  id v3 = (void *)sub_24A057368();
  id v4 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v3, v2);

  if (!v4) {
    goto LABEL_7;
  }
  *(double *)&uint64_t v5 = COERCE_DOUBLE(sub_24A057908());
  if (v6)
  {

LABEL_7:
    return v0;
  }
  double v7 = *(double *)&v5;
  objc_msgSend(v4, sel_size);
  double v9 = v8;
  double v11 = v10;
  objc_msgSend(v1, sel_setBounds_, UIEdgeInsetsInsetRect(0.0));
  id v12 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v1, sel_setContents_, v12);

  objc_msgSend(v1, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v1, sel_setPosition_, 1.66666667, 1.66666667);
  objc_msgSend(v1, sel_setContentsGravity_, *MEMORY[0x263F15E18]);
  objc_msgSend(v0, sel_setBounds_, 0.0, 0.0, v9, v11);
  objc_msgSend(v0, sel_setMask_, v1);
  objc_msgSend(v0, sel_setAnchorPoint_, 0.5, v7 / v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A05A510;
  *(void *)(inited + 32) = 0x726F66736E617274;
  *(void *)(inited + 40) = 0xE90000000000006DLL;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
  sub_24A012AF4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB68);
  id v14 = (void *)sub_24A0572E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setActions_, v14);

  return v0;
}

id sub_249F7C23C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A05A510;
  *(void *)(inited + 32) = 0x726F66736E617274;
  *(void *)(inited + 40) = 0xE90000000000006DLL;
  id v2 = objc_allocWithZone(MEMORY[0x263EFF9D0]);
  id v3 = v0;
  *(void *)(inited + 48) = objc_msgSend(v2, sel_init);
  sub_24A012AF4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB68);
  id v4 = (void *)sub_24A0572E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setActions_, v4);

  return v3;
}

id sub_249F7C34C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlarmComplicationCurvedTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AlarmComplicationCurvedTextView()
{
  return self;
}

unint64_t sub_249F7C400()
{
  unint64_t result = qword_26974F880;
  if (!qword_26974F880)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974F880);
  }
  return result;
}

uint64_t sub_249F7C458()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_249F7C490(uint64_t a1)
{
  return sub_249F89594(*(double *)(v1 + 24), a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

double UIEdgeInsetsInsetRect(double a1)
{
  return a1 + 1.66666667;
}

void destroy for SolarOrbit(uint64_t a1)
{
}

uint64_t initializeWithCopy for SolarOrbit(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  id v6 = v3;
  return a1;
}

void *assignWithCopy for SolarOrbit(void *a1, void *a2)
{
  *a1 = *a2;
  long long v4 = (void *)a1[1];
  long long v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SolarOrbit(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarOrbit(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarOrbit(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarOrbit()
{
  return &type metadata for SolarOrbit;
}

uint64_t initializeBufferWithCopyOfBuffer for DigitalClockFace(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DigitalClockFace(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for DigitalClockFace(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalClockFace(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalClockFace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalClockFace()
{
  return &type metadata for DigitalClockFace;
}

uint64_t sub_249F7C888()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249F7C8A4(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  int v4 = (uint64_t *)TupleTypeMetadata;
  long long v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    double v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      double v10 = (long long *)(v5 + 2);
      double v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *double v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        id v16 = &v8[8 * v9];
        id v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)id v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  id v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_24A057228();
}

__n128 sub_249F7CA68@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A0577C8();
    unint64_t v22 = (void *)sub_24A056C68();
    sub_24A056508();
  }
  sub_24A056828();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

double sub_249F7CBF4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_249F7CC50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_26974FE60, &qword_26974FE68).n128_u64[0];
  return result;
}

__n128 sub_249F7CC50@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24A0577C8();
    long long v28 = (void *)sub_24A056C68();
    sub_24A056508();

    uint64_t v19 = a17;
  }
  sub_24A056828();
  sub_249F6E6C8(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  _OWORD v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  _OWORD *v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  void v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_249F7CE20@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  char v2 = a1 & 1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB70);
  MEMORY[0x270FA5388](v3 - 8);
  long long v5 = (double *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB78);
  MEMORY[0x270FA5388](v6);
  double v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB80);
  MEMORY[0x270FA5388](v9 - 8);
  double v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB88);
  MEMORY[0x270FA5388](v47);
  long long v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A056738();
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  uint64_t v22 = swift_retain();
  sub_24A02FAF0(v22, v2);
  swift_release();
  id v23 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v23, sel_bounds);
  double v25 = v24;

  CTFontRef v26 = sub_249FE3160(v25);
  swift_release();
  if (v15 > v19) {
    double v27 = v15;
  }
  else {
    double v27 = v19;
  }
  if (v21 > v17) {
    double v28 = v21;
  }
  else {
    double v28 = v17;
  }
  double v29 = v27 + 1.0;
  double v30 = v28 + 1.0;
  if (qword_26974F278 != -1) {
    swift_once();
  }
  double v31 = *(double *)&qword_269752310;
  if (*(double *)&qword_269752310 > v29) {
    double v32 = *(double *)&qword_269752310;
  }
  else {
    double v32 = v29;
  }
  *(void *)long long v5 = v26;
  if (v31 <= v30) {
    double v31 = v30;
  }
  v5[1] = v32;
  v5[2] = v31;
  v5[3] = v32;
  v5[4] = v31;
  long long v33 = (char *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974FB90) + 44);
  __n128 v34 = v26;
  sub_249F7D2B4(v2, v33);

  uint64_t v35 = sub_24A0567F8();
  LOBYTE(v33) = sub_24A056C88();
  sub_249F6E6C8((uint64_t)v5, (uint64_t)v8, &qword_26974FB70);
  long long v36 = &v8[*(int *)(v6 + 36)];
  *(void *)long long v36 = v35;
  v36[8] = (char)v33;
  sub_249F6E790((uint64_t)v5, &qword_26974FB70);
  uint64_t v37 = sub_24A0571A8();
  sub_249F7CC50(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v37, v38, &qword_26974FB78, &qword_26974FB80);
  sub_249F6E790((uint64_t)v8, &qword_26974FB78);
  uint64_t v39 = swift_retain();
  uint64_t v40 = sub_24A02FAF0(v39, v2);
  swift_release();
  swift_getKeyPath();
  uint64_t v49 = v40;
  sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  LODWORD(v33) = *(unsigned __int8 *)(v40 + 16);
  swift_release();
  if (v33 == 1) {
    uint64_t v41 = sub_24A056ED8();
  }
  else {
    uint64_t v41 = sub_24A056EF8();
  }
  uint64_t v42 = v41;
  char v43 = sub_24A056C88();
  sub_249F6E6C8((uint64_t)v11, (uint64_t)v13, &qword_26974FB80);
  __n128 v44 = &v13[*(int *)(v47 + 36)];
  *(void *)__n128 v44 = v42;
  v44[8] = v43;
  sub_249F6E790((uint64_t)v11, &qword_26974FB80);
  return sub_249F6E664((uint64_t)v13, v48, &qword_26974FB88);
}

uint64_t sub_249F7D2B4@<X0>(char a1@<W2>, char *a2@<X8>)
{
  long long v54 = a2;
  char v2 = a1 & 1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB98);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v53 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)&v49 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FBA0);
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  long long v50 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v49 - v10;
  type metadata accessor for DigitalClockViewModel();
  sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056698();
  sub_24A056748();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = sub_24A056698();
  char v18 = v17;
  swift_release();
  uint64_t v59 = v16;
  LOBYTE(v60) = v18 & 1;
  uint64_t v61 = v13;
  uint64_t v62 = v15;
  uint64_t v19 = swift_retain();
  char v20 = v2;
  sub_24A02FAF0(v19, v2);
  swift_release();
  sub_249F8179C();
  uint64_t v57 = v11;
  sub_24A056DF8();
  swift_release();
  swift_release();
  uint64_t v21 = sub_24A056698();
  char v23 = v22;
  LOBYTE(v65) = 1;
  sub_24A057008();
  char v24 = v59;
  uint64_t v25 = v60;
  CTFontRef v26 = self;
  if (qword_26974F288 != -1) {
    swift_once();
  }
  id v27 = objc_msgSend(v26, sel_systemFontOfSize_weight_, *(double *)&qword_269752320, *MEMORY[0x263F81828]);
  objc_msgSend(v27, sel_ascender);
  double v29 = v28;
  objc_msgSend(v27, sel_capHeight);
  double v31 = v30;

  double v65 = v29 - v31;
  sub_24A057008();
  uint64_t v32 = v59;
  uint64_t v33 = v60;
  uint64_t v59 = v21;
  LOBYTE(v60) = v23 & 1;
  LOBYTE(v61) = v24;
  uint64_t v62 = v25;
  uint64_t v63 = v32;
  uint64_t v64 = v33;
  uint64_t v34 = swift_retain();
  sub_24A02FAF0(v34, v20);
  swift_release();
  sub_249F817F0();
  uint64_t v35 = v58;
  sub_24A056DF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v36 = v50;
  uint64_t v37 = v51;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  uint64_t v39 = v52;
  v38(v50, v57, v52);
  uint64_t v40 = v55;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v41 = v53;
  uint64_t v42 = v35;
  uint64_t v43 = v56;
  v49(v53, v42, v56);
  __n128 v44 = v54;
  v38(v54, v36, v39);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FBB8);
  v49(&v44[*(int *)(v45 + 48)], v41, v43);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
  v46(v58, v43);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v37 + 8);
  v47(v57, v39);
  v46(v41, v43);
  return ((uint64_t (*)(char *, uint64_t))v47)(v36, v39);
}

uint64_t sub_249F7D7B0@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3 = *v1;
  char v4 = *((unsigned char *)v1 + 8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 24) = v4;
  *a1 = sub_249F7D884;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;

  return swift_retain();
}

unint64_t sub_249F7D824(uint64_t a1)
{
  unint64_t result = sub_249F7B170();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249F7D84C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_249F7D884@<X0>(uint64_t a1@<X8>)
{
  return sub_249F7CE20(*(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_249F7D890@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  int v2 = a1 & 1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC28);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  long long v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FBE8);
  MEMORY[0x270FA5388](v47);
  uint64_t v48 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_retain();
  sub_24A02FAF0(v6, v2);
  swift_release();
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_mainScreen);
  objc_msgSend(v8, sel_bounds);
  double v10 = v9;

  CTFontRef v45 = sub_249FE3160(v10);
  swift_release();
  uint64_t v11 = swift_retain();
  int v52 = v2;
  sub_24A02FAF0(v11, v2);
  swift_release();
  uint64_t v12 = sub_249FDFC78();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  uint64_t v19 = swift_retain();
  sub_24A02FAF0(v19, v2);
  swift_release();
  id v20 = objc_msgSend(v7, sel_mainScreen);
  objc_msgSend(v20, sel_bounds);
  double v22 = v21;

  CTFontRef v44 = sub_249FE3160(v22);
  swift_release();
  type metadata accessor for RollingClockViewModel();
  uint64_t v46 = sub_249F82B84(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  uint64_t v23 = sub_24A056698();
  LOBYTE(v2) = v24;
  uint64_t v25 = v45;
  sub_249F6CAA4(v12, v14, v16, v18);
  id v26 = sub_249F7093C();
  sub_249F6CBB8(v12, v14, v16, v18);

  uint64_t v55 = v23;
  char v56 = v2 & 1;
  id v57 = v26;
  uint64_t v58 = v12;
  uint64_t v59 = v14;
  uint64_t v60 = v16;
  char v61 = v18;
  uint64_t v62 = v25;
  CTFontRef v63 = v44;
  __int16 v64 = 384;
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_24A02FAF0(v27, v52);
  swift_release();
  swift_getKeyPath();
  uint64_t v54 = v28;
  sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  swift_retain();
  swift_release();
  sub_249F82128();
  sub_24A056DF8();
  swift_release();
  uint64_t v29 = v58;
  uint64_t v30 = v59;
  uint64_t v31 = v60;
  uint64_t v33 = v62;
  CTFontRef v32 = v63;
  LOBYTE(v23) = v61;

  swift_release();
  sub_249F6CBB8(v29, v30, v31, v23);

  uint64_t v34 = swift_retain();
  uint64_t v35 = sub_24A02FAF0(v34, v52);
  swift_release();
  swift_getKeyPath();
  uint64_t v55 = v35;
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  LODWORD(v12) = *(unsigned __int8 *)(v35 + 16);
  swift_release();
  if (v12 == 1)
  {
    sub_24A056F38();
    uint64_t v36 = sub_24A056F48();
    swift_release();
  }
  else
  {
    uint64_t v36 = sub_24A056F08();
  }
  char v37 = sub_24A056C88();
  uint64_t v39 = (uint64_t)v48;
  uint64_t v38 = v49;
  uint64_t v40 = v53;
  uint64_t v41 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v48, v53, v50);
  uint64_t v42 = v39 + *(int *)(v47 + 36);
  *(void *)uint64_t v42 = v36;
  *(unsigned char *)(v42 + 8) = v37;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v41);
  return sub_249F6E664(v39, v51, &qword_26974FBE8);
}

uint64_t sub_249F7DDCC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FBE0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FBE8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F7D890(*(unsigned char *)(v0 + 8), (uint64_t)v6);
  sub_249F6E6C8((uint64_t)v6, (uint64_t)v3, &qword_26974FBE8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FBF0);
  sub_249F81F14();
  sub_249F8200C();
  sub_24A056BE8();
  return sub_249F6E790((uint64_t)v6, &qword_26974FBE8);
}

uint64_t sub_249F7DF28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v44 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC30);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC38);
  MEMORY[0x270FA5388](v7);
  double v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC40);
  MEMORY[0x270FA5388](v43);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC48);
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC50);
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_24A056AE8();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC58);
  sub_249F7E4F4((uint64_t *)v1, &v6[*(int *)(v14 + 44)]);
  char v15 = *(unsigned char *)(v1 + 8);
  uint64_t v16 = swift_retain();
  uint64_t v17 = sub_24A02FAF0(v16, v15);
  swift_release();
  swift_getKeyPath();
  uint64_t v52 = v17;
  sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  int v18 = *(unsigned __int8 *)(v17 + 16);
  swift_release();
  if (v18 == 1) {
    uint64_t v19 = sub_24A056F18();
  }
  else {
    uint64_t v19 = sub_24A056F08();
  }
  uint64_t v20 = v19;
  char v21 = sub_24A056C88();
  sub_249F6E6C8((uint64_t)v6, (uint64_t)v9, &qword_26974FC30);
  double v22 = &v9[*(int *)(v7 + 36)];
  *(void *)double v22 = v20;
  v22[8] = v21;
  sub_249F6E790((uint64_t)v6, &qword_26974FC30);
  uint64_t v23 = sub_24A0571F8();
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_24A02FAF0(v24, v15);
  swift_release();
  swift_getKeyPath();
  uint64_t v51 = v25;
  sub_24A056478();
  swift_release();
  uint64_t v26 = v25 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  uint64_t v27 = v44;
  sub_249F6E6C8(v26, v44, &qword_2697515A0);
  swift_release();
  uint64_t v28 = (uint64_t *)&v11[*(int *)(v43 + 36)];
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC60);
  sub_249F6E6C8(v27, (uint64_t)v28 + *(int *)(v29 + 36), &qword_2697515A0);
  uint64_t *v28 = v23;
  sub_249F6E6C8((uint64_t)v9, (uint64_t)v11, &qword_26974FC38);
  sub_249F6E790(v27, &qword_2697515A0);
  sub_249F6E790((uint64_t)v9, &qword_26974FC38);
  uint64_t v30 = sub_24A0571F8();
  uint64_t v31 = swift_retain();
  uint64_t v32 = sub_24A02FAF0(v31, v15);
  swift_release();
  swift_getKeyPath();
  uint64_t v50 = v32;
  sub_24A056478();
  swift_release();
  uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  swift_retain();
  swift_release();
  uint64_t v34 = v46;
  sub_249F6E6C8((uint64_t)v11, v46, &qword_26974FC40);
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(v45 + 36));
  *uint64_t v35 = v30;
  v35[1] = v33;
  sub_249F6E790((uint64_t)v11, &qword_26974FC40);
  uint64_t v36 = sub_24A0571F8();
  uint64_t v37 = swift_retain();
  uint64_t v38 = sub_24A02FAF0(v37, v15);
  swift_release();
  swift_getKeyPath();
  uint64_t v50 = v38;
  sub_24A056478();
  swift_release();
  uint64_t v39 = *(void *)(v38 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  swift_retain();
  swift_release();
  uint64_t v40 = v47;
  sub_249F6E6C8(v34, v47, &qword_26974FC48);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(v48 + 36));
  uint64_t *v41 = v36;
  v41[1] = v39;
  sub_249F6E790(v34, &qword_26974FC48);
  return sub_249F6E664(v40, v49, &qword_26974FC50);
}

uint64_t sub_249F7E4F4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v311 = a2;
  uint64_t v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC68);
  MEMORY[0x270FA5388](v273);
  v274 = (char *)&v272 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC70);
  MEMORY[0x270FA5388](v276);
  uint64_t v277 = (uint64_t)&v272 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC78);
  uint64_t v301 = *(void *)(v302 - 8);
  MEMORY[0x270FA5388](v302);
  v275 = (char *)&v272 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v300 = (uint64_t)&v272 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC80);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v335 = (uint64_t)&v272 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v349 = (uint64_t)&v272 - v11;
  uint64_t v345 = sub_24A056C38();
  MEMORY[0x270FA5388](v345);
  v330 = (char *)&v272 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC88);
  MEMORY[0x270FA5388](v328);
  v307 = (char *)&v272 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v293 = (char *)&v272 - v15;
  uint64_t v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC90);
  MEMORY[0x270FA5388](v329);
  v305 = (char *)&v272 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v304 = (uint64_t)&v272 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v306 = (uint64_t)&v272 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v309 = (uint64_t)&v272 - v22;
  MEMORY[0x270FA5388](v23);
  v290 = (char *)&v272 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v289 = (uint64_t)&v272 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v291 = (uint64_t)&v272 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v294 = (uint64_t)&v272 - v30;
  uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC98);
  MEMORY[0x270FA5388](v331);
  uint64_t v308 = (uint64_t)&v272 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v295 = (uint64_t)&v272 - v33;
  uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCA0);
  uint64_t v333 = *(void *)(v334 - 8);
  MEMORY[0x270FA5388](v334);
  v310 = (char *)&v272 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  v347 = (char *)&v272 - v36;
  MEMORY[0x270FA5388](v37);
  v303 = (char *)&v272 - v38;
  MEMORY[0x270FA5388](v39);
  v332 = (char *)&v272 - v40;
  MEMORY[0x270FA5388](v41);
  v292 = (char *)&v272 - v42;
  MEMORY[0x270FA5388](v43);
  v346 = (char *)&v272 - v44;
  uint64_t v344 = sub_24A056898();
  uint64_t v351 = *(void *)(v344 - 8);
  MEMORY[0x270FA5388](v344);
  v343 = (char *)&v272 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCA8);
  MEMORY[0x270FA5388](v46 - 8);
  uint64_t v318 = (uint64_t)&v272 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v322 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCB0);
  MEMORY[0x270FA5388](v322);
  v287 = (char *)&v272 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F7D8);
  MEMORY[0x270FA5388](v340);
  v299 = (uint64_t *)((char *)&v272 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v50);
  v327 = (uint64_t *)((char *)&v272 - v51);
  MEMORY[0x270FA5388](v52);
  v313 = (uint64_t *)((char *)&v272 - v53);
  MEMORY[0x270FA5388](v54);
  v323 = (uint64_t *)((char *)&v272 - v55);
  MEMORY[0x270FA5388](v56);
  v352 = (void (*)(void))((char *)&v272 - v57);
  MEMORY[0x270FA5388](v58);
  v321 = (void (*)(uint64_t, uint64_t))((char *)&v272 - v59);
  uint64_t v353 = sub_24A056918();
  uint64_t v350 = *(void *)(v353 - 8);
  MEMORY[0x270FA5388](v353);
  uint64_t v324 = (uint64_t)&v272 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  uint64_t v320 = (uint64_t)&v272 - v62;
  MEMORY[0x270FA5388](v63);
  v336 = (char *)&v272 - v64;
  uint64_t v348 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCB8) - 8;
  MEMORY[0x270FA5388](v348);
  v337 = (uint64_t *)((char *)&v272 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCC0);
  MEMORY[0x270FA5388](v66 - 8);
  uint64_t v68 = (char *)&v272 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_24A055F08();
  uint64_t v70 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v72 = (char *)&v272 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCC8) - 8;
  MEMORY[0x270FA5388](v316);
  uint64_t v74 = (char *)&v272 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v319 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974FCD0) - 8);
  MEMORY[0x270FA5388](v319);
  v314 = (char *)&v272 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCD8);
  MEMORY[0x270FA5388](v317);
  v281 = (char *)&v272 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v77);
  uint64_t v280 = (uint64_t)&v272 - v78;
  MEMORY[0x270FA5388](v79);
  uint64_t v282 = (uint64_t)&v272 - v80;
  MEMORY[0x270FA5388](v81);
  uint64_t v284 = (uint64_t)&v272 - v82;
  uint64_t v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCE0);
  MEMORY[0x270FA5388](v285);
  uint64_t v286 = (uint64_t)&v272 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v342 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCE8);
  uint64_t v326 = *(void *)(v342 - 8);
  MEMORY[0x270FA5388](v342);
  v325 = (char *)&v272 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v85);
  v283 = (char *)&v272 - v86;
  MEMORY[0x270FA5388](v87);
  v341 = (char *)&v272 - v88;
  uint64_t v89 = *a1;
  v312 = a1;
  LODWORD(a1) = *((unsigned __int8 *)a1 + 8);
  uint64_t v90 = swift_retain();
  int v338 = (int)a1;
  uint64_t v91 = sub_24A02FAF0(v90, (char)a1);
  uint64_t v339 = v89;
  swift_release();
  swift_getKeyPath();
  uint64_t v358 = v91;
  uint64_t v92 = sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v93 = v91 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText;
  swift_beginAccess();
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  uint64_t v298 = v69;
  uint64_t v297 = v70 + 16;
  v288 = v94;
  v94(v72, v93, v69);
  swift_release();
  v296 = v72;
  uint64_t v95 = sub_24A056D88();
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  LOBYTE(v91) = v100 & 1;
  uint64_t v101 = *MEMORY[0x263F1A7B8];
  uint64_t v102 = sub_24A056D38();
  uint64_t v103 = *(void *)(v102 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 104))(v68, v101, v102);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v68, 0, 1, v102);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v105 = v337;
  sub_249F6E6C8((uint64_t)v68, (uint64_t)v337 + *(int *)(v348 + 36), &qword_26974FCC0);
  *uint64_t v105 = KeyPath;
  sub_249F6E6C8((uint64_t)v105, (uint64_t)&v74[*(int *)(v316 + 44)], &qword_26974FCB8);
  *(void *)uint64_t v74 = v95;
  *((void *)v74 + 1) = v97;
  v74[16] = v91;
  *((void *)v74 + 3) = v99;
  sub_249F6E4F8(v95, v97, v91);
  swift_bridgeObjectRetain();
  sub_249F6E790((uint64_t)v105, &qword_26974FCB8);
  sub_249F6E790((uint64_t)v68, &qword_26974FCC0);
  uint64_t v106 = v97;
  uint64_t v107 = v314;
  sub_249F6E5D0(v95, v106, v91);
  swift_bridgeObjectRelease();
  uint64_t v348 = type metadata accessor for DigitalClockViewModel();
  v337 = (uint64_t *)v92;
  *(void *)uint64_t v107 = sub_24A056698();
  v107[8] = v108 & 1;
  sub_249F6E664((uint64_t)v74, (uint64_t)&v107[v319[11]], &qword_26974FCC8);
  uint64_t v109 = (int *)self;
  if (qword_26974F288 != -1) {
    swift_once();
  }
  double v110 = *MEMORY[0x263F81828];
  v319 = v109;
  id v111 = objc_msgSend(v109, sel_systemFontOfSize_weight_, *(double *)&qword_269752320, v110);
  uint64_t v112 = (uint64_t)v336;
  id v279 = v111;
  uint64_t v113 = sub_249F8B2F0((uint64_t)v336, v111, 1);
  uint64_t v114 = v340;
  uint64_t v115 = (char *)v321 + *(int *)(v340 + 48);
  *(void *)v321 = v113;
  uint64_t v116 = v350;
  uint64_t v118 = v350 + 16;
  uint64_t v117 = *(void (**)(void))(v350 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v117)(v115, v112, v353);
  uint64_t v119 = v318;
  sub_249F6E6C8((uint64_t)v107, v318, &qword_26974FCD0);
  v120 = (char *)v352 + *(int *)(v114 + 48);
  *(void *)v352 = v113;
  v315 = v120;
  uint64_t v316 = (uint64_t)v115;
  v352 = v117;
  v117();
  swift_retain_n();
  int v121 = sub_24A0568F8();
  int v122 = sub_24A056908();
  if (!v121)
  {
    if (!v122)
    {
      int v121 = 0;
      goto LABEL_9;
    }
LABEL_7:
    v121 |= v122;
    goto LABEL_9;
  }
  if ((v122 & ~v121) != 0) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v123 = (uint64_t)v287;
  uint64_t v124 = &v287[*(int *)(v322 + 36)];
  uint64_t v125 = v353;
  ((void (*)(char *, uint64_t, uint64_t))v352)(v124, v316, v353);
  uint64_t v126 = v345;
  uint64_t v127 = *(int *)(v345 + 20);
  uint64_t v278 = v113;
  *(void *)&v124[v127] = v113;
  *(_DWORD *)&v124[*(int *)(v126 + 24)] = v121;
  sub_249F6E664(v119, v123, &qword_26974FCA8);
  v128 = *(void (**)(char *, uint64_t))(v116 + 8);
  uint64_t v129 = v125;
  v128(v315, v125);
  uint64_t v130 = swift_getKeyPath();
  uint64_t v322 = v118;
  uint64_t v131 = v343;
  sub_24A056888();
  uint64_t v132 = (uint64_t)v281;
  long long v133 = (uint64_t *)&v281[*(int *)(v317 + 36)];
  uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F660);
  char v134 = (char *)v133 + *(int *)(v316 + 28);
  uint64_t v135 = v351;
  long long v136 = *(void (**)(char *, char *, uint64_t))(v351 + 16);
  uint64_t v137 = v344;
  uint64_t v318 = v351 + 16;
  uint64_t v317 = (uint64_t)v136;
  v136(v134, v131, v344);
  *long long v133 = v130;
  sub_249F6E6C8(v123, v132, &qword_26974FCB0);
  long long v138 = *(char **)(v135 + 8);
  uint64_t v351 = v135 + 8;
  v315 = v138;
  ((void (*)(char *, uint64_t))v138)(v131, v137);
  sub_249F6E790(v123, &qword_26974FCB0);
  sub_249F6E790((uint64_t)v321, &qword_26974F7D8);
  uint64_t v139 = v132;
  uint64_t v140 = v280;
  sub_249F6E664(v139, v280, &qword_26974FCD8);
  uint64_t v141 = v140;
  uint64_t v142 = v282;
  sub_249F6E664(v141, v282, &qword_26974FCD8);
  swift_release();
  uint64_t v350 = v116 + 8;
  v321 = (void (*)(uint64_t, uint64_t))v128;
  v128(v336, v129);
  uint64_t v143 = v284;
  sub_249F6E664(v142, v284, &qword_26974FCD8);

  sub_249F6E790((uint64_t)v314, &qword_26974FCD0);
  long long v359 = *((_OWORD *)v312 + 2);
  long long v357 = *((_OWORD *)v312 + 2);
  v336 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26974FCF0);
  sub_24A057018();
  double v144 = -*(double *)&v356;
  uint64_t v145 = v286;
  sub_249F6E6C8(v143, v286, &qword_26974FCD8);
  uint64_t v146 = v145 + *(int *)(v285 + 36);
  *(void *)uint64_t v146 = 0;
  *(double *)(v146 + 8) = v144;
  sub_249F6E790(v143, &qword_26974FCD8);
  uint64_t v147 = swift_retain();
  LOBYTE(v129) = v338;
  sub_24A02FAF0(v147, v338);
  swift_release();
  sub_249F82288();
  v148 = v283;
  sub_24A056DF8();
  swift_release();
  sub_249F6E790(v145, &qword_26974FCE0);
  (*(void (**)(char *, char *, uint64_t))(v326 + 32))(v341, v148, v342);
  uint64_t v149 = swift_retain();
  uint64_t v150 = sub_24A02FAF0(v149, v129);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v357 = v150;
  sub_24A056478();
  swift_release();
  uint64_t v152 = *(void *)(v150 + 144);
  uint64_t v151 = *(void *)(v150 + 152);
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)&long long v357 = v152;
  *((void *)&v357 + 1) = v151;
  sub_249F823CC();
  uint64_t v153 = sub_24A056D98();
  v155 = v154;
  v157 = v156;
  LODWORD(v286) = v158;
  LODWORD(v281) = v158 & 1;
  uint64_t v159 = sub_24A056698();
  LODWORD(v285) = v160;
  v161 = (char *)objc_msgSend(v319, sel_systemFontOfSize_weight_, *(double *)&qword_269752320, v110);
  uint64_t v162 = v320;
  v287 = v161;
  uint64_t v163 = sub_249F8B2F0(v320, v161, 1);
  uint64_t v164 = v340;
  v165 = (char *)v323 + *(int *)(v340 + 48);
  uint64_t *v323 = v163;
  v166 = v352;
  ((void (*)(char *, uint64_t, uint64_t))v352)(v165, v162, v353);
  uint64_t v167 = (uint64_t)v313 + *(int *)(v164 + 48);
  void *v313 = v163;
  uint64_t v284 = v167;
  v166();
  v313 = (void *)v159;
  swift_retain();
  swift_retain_n();
  uint64_t v168 = v153;
  v314 = v155;
  sub_249F6E4F8(v153, (uint64_t)v155, (char)v281);
  v169 = v157;
  swift_bridgeObjectRetain();
  int v170 = sub_24A0568F8();
  int v171 = sub_24A056908();
  if (!v170)
  {
    if (!v171)
    {
      int v170 = 0;
      goto LABEL_15;
    }
LABEL_13:
    v170 |= v171;
    goto LABEL_15;
  }
  if ((v171 & ~v170) != 0) {
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v172 = (uint64_t)v330;
  uint64_t v173 = v353;
  ((void (*)(char *, char *, uint64_t))v352)(v330, v165, v353);
  uint64_t v174 = v345;
  *(void *)(v172 + *(int *)(v345 + 20)) = v163;
  *(_DWORD *)(v172 + *(int *)(v174 + 24)) = v170;
  uint64_t v175 = (uint64_t)v293;
  sub_249F82420(v172, (uint64_t)&v293[*(int *)(v328 + 36)]);
  *(void *)uint64_t v175 = v313;
  *(unsigned char *)(v175 + 8) = v285 & 1;
  uint64_t v282 = v168;
  v176 = (void (*)(void, void, void))v314;
  *(void *)(v175 + 16) = v168;
  *(void *)(v175 + 24) = v176;
  LODWORD(v286) = v286 & 1;
  *(unsigned char *)(v175 + 32) = v286;
  v283 = v169;
  *(void *)(v175 + 40) = v169;
  sub_249F82484(v172);
  v177 = v321;
  v321(v284, v173);
  uint64_t v178 = swift_getKeyPath();
  v179 = v343;
  sub_24A056888();
  uint64_t v180 = (uint64_t)v290;
  v181 = (uint64_t *)&v290[*(int *)(v329 + 36)];
  uint64_t v182 = v344;
  ((void (*)(char *, char *, uint64_t))v317)((char *)v181 + *(int *)(v316 + 28), v179, v344);
  uint64_t *v181 = v178;
  sub_249F6E6C8(v175, v180, &qword_26974FC88);
  ((void (*)(char *, uint64_t))v315)(v179, v182);
  sub_249F6E790(v175, &qword_26974FC88);
  sub_249F6E790((uint64_t)v323, &qword_26974F7D8);
  uint64_t v183 = v289;
  sub_249F6E664(v180, v289, &qword_26974FC90);
  uint64_t v184 = v183;
  uint64_t v185 = v291;
  sub_249F6E664(v184, v291, &qword_26974FC90);
  swift_release();
  v177(v320, v173);
  uint64_t v186 = v294;
  sub_249F6E664(v185, v294, &qword_26974FC90);
  swift_release();

  sub_249F6E5D0(v282, (uint64_t)v314, v286);
  swift_bridgeObjectRelease();
  long long v357 = v359;
  sub_24A057018();
  double v187 = -*(double *)&v356;
  uint64_t v188 = v295;
  sub_249F6E6C8(v186, v295, &qword_26974FC90);
  uint64_t v189 = v188 + *(int *)(v331 + 36);
  *(void *)uint64_t v189 = 0;
  *(double *)(v189 + 8) = v187;
  sub_249F6E790(v186, &qword_26974FC90);
  uint64_t v190 = swift_retain();
  char v191 = v338;
  sub_24A02FAF0(v190, v338);
  swift_release();
  v192 = (uint64_t *)sub_249F824E0();
  v193 = v292;
  v323 = v192;
  sub_24A056DF8();
  swift_release();
  sub_249F6E790(v188, &qword_26974FC98);
  v194 = *(unsigned char **)(v333 + 32);
  uint64_t v320 = v333 + 32;
  v314 = v194;
  ((void (*)(char *, char *, uint64_t))v194)(v346, v193, v334);
  uint64_t v195 = swift_retain();
  uint64_t v196 = sub_24A02FAF0(v195, v191);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v357 = v196;
  sub_24A056478();
  swift_release();
  uint64_t v197 = v196 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  uint64_t v198 = v300;
  sub_249F6E6C8(v197, v300, &qword_2697515A0);
  swift_release();
  uint64_t v199 = sub_24A056238();
  uint64_t v200 = 1;
  LODWORD(v197) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v199 - 8) + 48))(v198, 1, v199);
  sub_249F6E790(v198, &qword_2697515A0);
  uint64_t v201 = v302;
  uint64_t v202 = v301;
  if (v197 != 1)
  {
    uint64_t v203 = (uint64_t)v274;
    sub_249F8095C((uint64_t)&v274[*(int *)(v273 + 36)]);
    *(void *)uint64_t v203 = sub_24A056698();
    *(unsigned char *)(v203 + 8) = v204 & 1;
    long long v356 = v359;
    sub_24A057018();
    double v205 = *(double *)&v354 + -4.0;
    uint64_t v206 = v277;
    sub_249F6E6C8(v203, v277, &qword_26974FC68);
    uint64_t v207 = v206 + *(int *)(v276 + 36);
    *(void *)uint64_t v207 = 0;
    *(double *)(v207 + 8) = v205;
    sub_249F6E790(v203, &qword_26974FC68);
    uint64_t v208 = swift_retain();
    sub_24A02FAF0(v208, v191);
    swift_release();
    sub_249F82764();
    v209 = v275;
    sub_24A056DF8();
    swift_release();
    sub_249F6E790(v206, &qword_26974FC70);
    (*(void (**)(uint64_t, char *, uint64_t))(v202 + 32))(v349, v209, v201);
    uint64_t v200 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v202 + 56))(v349, v200, 1, v201);
  uint64_t v210 = swift_retain();
  uint64_t v211 = sub_24A02FAF0(v210, v191);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v356 = v211;
  sub_24A056478();
  swift_release();
  uint64_t v212 = v211 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText;
  swift_beginAccess();
  v288(v296, v212, v298);
  swift_release();
  uint64_t v213 = sub_24A056D88();
  uint64_t v215 = v214;
  uint64_t v217 = v216;
  LODWORD(v313) = v218;
  LODWORD(v297) = v218 & 1;
  uint64_t v219 = sub_24A056698();
  LODWORD(v312) = v220;
  v221 = (int *)objc_msgSend(v319, sel_systemFontOfSize_weight_, *(double *)&qword_269752320, v110);
  uint64_t v222 = v324;
  v319 = v221;
  uint64_t v223 = sub_249F8B2F0(v324, v221, 1);
  uint64_t v224 = v340;
  v225 = (char *)v327 + *(int *)(v340 + 48);
  uint64_t *v327 = v223;
  uint64_t v226 = v222;
  v228 = v352;
  uint64_t v227 = v353;
  ((void (*)(char *, uint64_t, uint64_t))v352)(v225, v226, v353);
  uint64_t v229 = (uint64_t)v299 + *(int *)(v224 + 48);
  uint64_t *v299 = v223;
  uint64_t v300 = v229;
  v228();
  uint64_t v340 = v219;
  swift_retain();
  swift_retain_n();
  uint64_t v230 = v213;
  uint64_t v231 = v213;
  uint64_t v232 = v215;
  sub_249F6E4F8(v231, v215, v297);
  swift_bridgeObjectRetain();
  int v233 = sub_24A0568F8();
  int v234 = sub_24A056908();
  if (v233)
  {
    if ((v234 & ~v233) == 0) {
      goto LABEL_23;
    }
  }
  else if (!v234)
  {
    int v233 = 0;
    goto LABEL_23;
  }
  v233 |= v234;
LABEL_23:
  uint64_t v235 = (uint64_t)v330;
  ((void (*)(char *, char *, uint64_t))v352)(v330, v225, v227);
  uint64_t v236 = v345;
  *(void *)(v235 + *(int *)(v345 + 20)) = v223;
  *(_DWORD *)(v235 + *(int *)(v236 + 24)) = v233;
  uint64_t v237 = (uint64_t)v307;
  sub_249F82420(v235, (uint64_t)&v307[*(int *)(v328 + 36)]);
  *(void *)uint64_t v237 = v340;
  *(unsigned char *)(v237 + 8) = v312 & 1;
  uint64_t v302 = v230;
  *(void *)(v237 + 16) = v230;
  *(void *)(v237 + 24) = v232;
  uint64_t v301 = v232;
  LODWORD(v352) = v313 & 1;
  *(unsigned char *)(v237 + 32) = v313 & 1;
  uint64_t v298 = v217;
  *(void *)(v237 + 40) = v217;
  sub_249F82484(v235);
  v238 = v321;
  v321(v300, v227);
  uint64_t v239 = swift_getKeyPath();
  v240 = v343;
  sub_24A056888();
  uint64_t v241 = (uint64_t)v305;
  v242 = (uint64_t *)&v305[*(int *)(v329 + 36)];
  uint64_t v243 = v227;
  uint64_t v244 = v344;
  ((void (*)(char *, char *, uint64_t))v317)((char *)v242 + *(int *)(v316 + 28), v240, v344);
  uint64_t *v242 = v239;
  sub_249F6E6C8(v237, v241, &qword_26974FC88);
  ((void (*)(char *, uint64_t))v315)(v240, v244);
  sub_249F6E790(v237, &qword_26974FC88);
  sub_249F6E790((uint64_t)v327, &qword_26974F7D8);
  uint64_t v245 = v304;
  sub_249F6E664(v241, v304, &qword_26974FC90);
  uint64_t v246 = v245;
  uint64_t v247 = v306;
  sub_249F6E664(v246, v306, &qword_26974FC90);
  swift_release();
  v238(v324, v243);
  uint64_t v248 = v247;
  uint64_t v249 = v309;
  sub_249F6E664(v248, v309, &qword_26974FC90);
  swift_release();

  sub_249F6E5D0(v302, v301, (char)v352);
  swift_bridgeObjectRelease();
  long long v354 = v359;
  sub_24A057018();
  uint64_t v250 = v355;
  uint64_t v251 = v308;
  sub_249F6E6C8(v249, v308, &qword_26974FC90);
  v252 = (void *)(v251 + *(int *)(v331 + 36));
  void *v252 = 0;
  v252[1] = v250;
  sub_249F6E790(v249, &qword_26974FC90);
  uint64_t v253 = swift_retain();
  sub_24A02FAF0(v253, v338);
  swift_release();
  v254 = v303;
  sub_24A056DF8();
  swift_release();
  sub_249F6E790(v251, &qword_26974FC98);
  v255 = v332;
  uint64_t v256 = v334;
  ((void (*)(char *, char *, uint64_t))v314)(v332, v254, v334);
  uint64_t v257 = v326;
  v258 = *(void (**)(char *, char *, uint64_t))(v326 + 16);
  v259 = v325;
  v258(v325, v341, v342);
  uint64_t v260 = v333;
  v261 = *(void (**)(char *, char *, uint64_t))(v333 + 16);
  v261(v347, v346, v256);
  sub_249F6E6C8(v349, v335, &qword_26974FC80);
  v262 = v310;
  v261(v310, v255, v256);
  v263 = v311;
  v264 = v259;
  uint64_t v265 = v342;
  v258(v311, v264, v342);
  v266 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26974FD58);
  v261(&v263[v266[12]], v347, v256);
  v267 = (uint64_t)&v263[v266[16]];
  *(void *)v267 = 0;
  *(unsigned char *)(v267 + 8) = 1;
  uint64_t v268 = v335;
  sub_249F6E6C8(v335, (uint64_t)&v263[v266[20]], &qword_26974FC80);
  v261(&v263[v266[24]], v262, v256);
  v269 = *(void (**)(char *, uint64_t))(v260 + 8);
  v269(v332, v256);
  sub_249F6E790(v349, &qword_26974FC80);
  v269(v346, v256);
  v270 = *(void (**)(char *, uint64_t))(v257 + 8);
  v270(v341, v265);
  v269(v262, v256);
  sub_249F6E790(v268, &qword_26974FC80);
  v269(v347, v256);
  return ((uint64_t (*)(char *, uint64_t))v270)(v325, v265);
}

uint64_t sub_249F8095C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FD70);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_24A056FD8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FD78);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24A056F98();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B538], v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  sub_249F6E6C8((uint64_t)v5, (uint64_t)v13 + *(int *)(v11 + 44), &qword_26974FD70);
  *uint64_t v13 = v14;
  swift_retain();
  sub_249F6E790((uint64_t)v5, &qword_26974FD70);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  char v16 = *(unsigned char *)(v1 + 8);
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_24A02FAF0(v17, v16);
  swift_release();
  swift_getKeyPath();
  uint64_t v25 = v18;
  sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor);
  swift_retain();
  swift_release();
  if (!v19)
  {
    uint64_t v20 = swift_retain();
    uint64_t v21 = sub_24A02FAF0(v20, v16);
    swift_release();
    swift_getKeyPath();
    uint64_t v25 = v21;
    sub_24A056478();
    swift_release();
    uint64_t v19 = *(void *)(v21 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
    swift_retain();
    swift_release();
  }
  uint64_t v22 = v24;
  sub_249F6E6C8((uint64_t)v13, v24, &qword_26974FD78);
  *(void *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26974FD80) + 36)) = v19;
  return sub_249F6E790((uint64_t)v13, &qword_26974FD78);
}

uint64_t sub_249F80CE8()
{
  char v1 = *(unsigned char *)(v0 + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_24A02FAF0(v2, v1);
  swift_release();
  return v3;
}

uint64_t sub_249F80D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_249F7DF28(a1);
}

uint64_t sub_249F80D68@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE70);
  sub_24A0567E8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE78);
  sub_24A0567E8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE58);
  sub_24A0567E8();
  swift_getTupleTypeMetadata2();
  sub_24A057218();
  swift_getWitnessTable();
  uint64_t v6 = sub_24A057078();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v17[-v11];
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v18 = v5;
  uint64_t v19 = v13;
  uint64_t v20 = v2;
  sub_24A056A68();
  sub_24A057068();
  swift_getWitnessTable();
  uint64_t v14 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16);
  v14(v12, v9, v6);
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  v14(a2, v12, v6);
  return ((uint64_t (*)(unsigned char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_249F80FC0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE70);
  uint64_t v3 = sub_24A0567E8();
  uint64_t v36 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v34 - v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE78);
  uint64_t v6 = v3;
  uint64_t v7 = sub_24A0567E8();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v34 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE58);
  uint64_t v38 = v7;
  uint64_t v10 = sub_24A0567E8();
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v39 = (char *)v34 - v13;
  uint64_t v14 = type metadata accessor for Complication();
  uint64_t v15 = self;
  if (qword_26974F288 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v15, sel_systemFontOfSize_weight_, *(double *)&qword_269752320, *MEMORY[0x263F81828]);
  sub_24A056CE8();
  sub_24A056E48();
  swift_release();
  uint64_t v17 = sub_249F80CE8();
  swift_getKeyPath();
  v34[1] = v14;
  v47[0] = v17;
  sub_249F82B84(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  swift_retain();
  swift_release();
  v47[0] = v18;
  uint64_t v19 = sub_249F6EE60(&qword_26974FE80, &qword_26974FE70);
  v47[6] = a1;
  v47[7] = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24A056E38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v6);
  sub_24A0571F8();
  uint64_t v21 = sub_249F80CE8();
  swift_getKeyPath();
  v47[0] = v21;
  sub_24A056478();
  swift_release();
  uint64_t v22 = *(void *)(v21 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  swift_retain();
  swift_release();
  v47[0] = v22;
  uint64_t v23 = sub_249F6EE60(&qword_26974FE88, &qword_26974FE78);
  void v47[4] = WitnessTable;
  v47[5] = v23;
  uint64_t v24 = v38;
  uint64_t v25 = swift_getWitnessTable();
  sub_249F837F4();
  uint64_t v26 = v35;
  sub_24A056E78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v24);
  uint64_t v27 = sub_249F6EE60(&qword_26974FE50, &qword_26974FE58);
  v47[2] = v25;
  v47[3] = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v30 = v39;
  uint64_t v29 = v40;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v31(v39, v26, v10);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v26, v10);
  v31(v26, v30, v10);
  uint64_t v45 = 0;
  char v46 = 1;
  v47[0] = v26;
  v47[1] = &v45;
  v44[0] = v10;
  v44[1] = MEMORY[0x263F1B6B0];
  uint64_t v42 = v28;
  uint64_t v43 = MEMORY[0x263F1B698];
  sub_249F7C8A4((uint64_t)v47, 2uLL, (uint64_t)v44);
  v32(v30, v10);
  return ((uint64_t (*)(char *, uint64_t))v32)(v26, v10);
}

double sub_249F81608(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 0.0;
  }
  return result;
}

uint64_t sub_249F81628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249F82814(a5);
}

uint64_t sub_249F8166C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_249F816DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B668]);
}

uint64_t sub_249F816A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_249F816DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B670]);
}

uint64_t sub_249F816DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_249F81720(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_24A056618();
  return sub_249F6FBD0;
}

unint64_t sub_249F8179C()
{
  unint64_t result = qword_26974FBA8;
  if (!qword_26974FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FBA8);
  }
  return result;
}

unint64_t sub_249F817F0()
{
  unint64_t result = qword_26974FBB0;
  if (!qword_26974FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FBB0);
  }
  return result;
}

uint64_t destroy for Complications()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Complications(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Complications(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Complications(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Complications(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Complications(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Complications()
{
  return &type metadata for Complications;
}

uint64_t destroy for GiantClock()
{
  return swift_release();
}

uint64_t initializeWithCopy for GiantClock(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GiantClock(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GiantClock(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GiantClock(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GiantClock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GiantClock()
{
  return &type metadata for GiantClock;
}

void destroy for ClockAndComplicationsLayout(id *a1)
{
}

uint64_t initializeWithCopy for ClockAndComplicationsLayout(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ClockAndComplicationsLayout(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ClockAndComplicationsLayout(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockAndComplicationsLayout(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockAndComplicationsLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockAndComplicationsLayout()
{
  return &type metadata for ClockAndComplicationsLayout;
}

uint64_t sub_249F81DF0()
{
  return sub_249F6EE60(&qword_26974FBC0, &qword_26974FBC8);
}

unint64_t sub_249F81E30()
{
  unint64_t result = qword_26974FBD0;
  if (!qword_26974FBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FBD0);
  }
  return result;
}

unint64_t sub_249F81E88()
{
  unint64_t result = qword_26974FBD8;
  if (!qword_26974FBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FBD8);
  }
  return result;
}

uint64_t sub_249F81EDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249F81EF8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_249F81F14()
{
  unint64_t result = qword_26974FBF8;
  if (!qword_26974FBF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FBF0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FBE8);
    sub_24A056238();
    sub_249F8200C();
    sub_249F82B84(&qword_26974FC20, MEMORY[0x263F07490]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FBF8);
  }
  return result;
}

unint64_t sub_249F8200C()
{
  unint64_t result = qword_26974FC00;
  if (!qword_26974FC00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FBE8);
    type metadata accessor for RollingClockViewModel();
    sub_249F82128();
    sub_249F82B84(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
    swift_getOpaqueTypeConformance2();
    sub_249F6EE60(&qword_26974FC10, &qword_26974FC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FC00);
  }
  return result;
}

unint64_t sub_249F82128()
{
  unint64_t result = qword_26974FC08;
  if (!qword_26974FC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FC08);
  }
  return result;
}

uint64_t sub_249F821C4()
{
  return sub_24A056A18();
}

uint64_t sub_249F821E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FCC0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_249F6E6C8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26974FCC0);
  return sub_24A056A28();
}

unint64_t sub_249F82288()
{
  unint64_t result = qword_26974FCF8;
  if (!qword_26974FCF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FCE0);
    sub_249F82580(&qword_26974FD00, &qword_26974FCD8, (void (*)(void))sub_249F82328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FCF8);
  }
  return result;
}

unint64_t sub_249F82328()
{
  unint64_t result = qword_26974FD08;
  if (!qword_26974FD08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FCB0);
    sub_249F826C0(&qword_26974FD10, &qword_26974FCA8, &qword_26974FD18, &qword_26974FCD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FD08);
  }
  return result;
}

unint64_t sub_249F823CC()
{
  unint64_t result = qword_26B16FAB8;
  if (!qword_26B16FAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FAB8);
  }
  return result;
}

uint64_t sub_249F82420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A056C38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F82484(uint64_t a1)
{
  uint64_t v2 = sub_24A056C38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249F824E0()
{
  unint64_t result = qword_26974FD20;
  if (!qword_26974FD20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC98);
    sub_249F82580(&qword_26974FD28, &qword_26974FC90, (void (*)(void))sub_249F82624);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FD20);
  }
  return result;
}

uint64_t sub_249F82580(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_249F6EE60(&qword_26974F658, &qword_26974F660);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249F82624()
{
  unint64_t result = qword_26974FD30;
  if (!qword_26974FD30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC88);
    sub_249F826C0(&qword_26974FD38, &qword_26974FD40, &qword_26974FD48, &qword_26974FD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FD30);
  }
  return result;
}

uint64_t sub_249F826C0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_249F6EE60(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249F82764()
{
  unint64_t result = qword_26974FD60;
  if (!qword_26974FD60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC70);
    sub_249F6EE60(&qword_26974FD68, &qword_26974FC68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FD60);
  }
  return result;
}

uint64_t sub_249F82814(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A056778();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24A056788();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  sub_249F82B84(qword_26974FD88, MEMORY[0x263F18AB8]);
  sub_24A057728();
  sub_24A057758();
  uint64_t v13 = sub_24A057748();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  if (v13 != 2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_26974F270 != -1) {
LABEL_5:
  }
    swift_once();
  sub_24A056798();
  sub_24A057238();
  char v17 = 0;
  v16[0] = 0;
  sub_24A056768();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  objc_msgSend(*v2, sel_capHeight);
  sub_24A056798();
  sub_24A057238();
  char v17 = 0;
  v16[0] = 0;
  sub_24A056768();
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v7, v4);
}

uint64_t sub_249F82B84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F82BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_249F82BD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_249F82C70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 9) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    char v10 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v10;
    uint64_t v11 = (a1 + v6 + 9) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 9) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return v3;
}

uint64_t sub_249F82D84(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_249F82DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = (v7 + 9 + a1) & ~v7;
  uint64_t v9 = (v7 + 9 + a2) & ~v7;
  swift_retain();
  v6(v8, v9, v5);
  return a1;
}

uint64_t sub_249F82E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(unsigned __int8 *)(v7 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_249F82F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_249F82FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_249F83030(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 9) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 9) & ~v6);
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + 8);
      if (v15 > 1) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_249F831D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 9) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x249F8343CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 9] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 0xFE)
        {
          a1[8] = 0;
          *(void *)a1 = a2 - 255;
        }
        else
        {
          a1[8] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for Complication()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_249F83480()
{
  unint64_t result = qword_26974FE10;
  if (!qword_26974FE10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE18);
    sub_249F81F14();
    sub_249F8200C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FE10);
  }
  return result;
}

unint64_t sub_249F83500()
{
  unint64_t result = qword_26974FE20;
  if (!qword_26974FE20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC50);
    sub_249F835A0();
    sub_249F6EE60(&qword_26974FE50, &qword_26974FE58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FE20);
  }
  return result;
}

unint64_t sub_249F835A0()
{
  unint64_t result = qword_26974FE28;
  if (!qword_26974FE28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC48);
    sub_249F83640();
    sub_249F6EE60(&qword_26974FE50, &qword_26974FE58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FE28);
  }
  return result;
}

unint64_t sub_249F83640()
{
  unint64_t result = qword_26974FE30;
  if (!qword_26974FE30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC40);
    sub_249F836E0();
    sub_249F6EE60(&qword_26974FE48, &qword_26974FC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FE30);
  }
  return result;
}

unint64_t sub_249F836E0()
{
  unint64_t result = qword_26974FE38;
  if (!qword_26974FE38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FC38);
    sub_249F6EE60(&qword_26974FE40, &qword_26974FC30);
    sub_249F6EE60(&qword_26974FC10, &qword_26974FC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FE38);
  }
  return result;
}

uint64_t sub_249F837A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249F837E8@<X0>(uint64_t a1@<X8>)
{
  return sub_249F80FC0(*(void *)(v1 + 24), a1);
}

unint64_t sub_249F837F4()
{
  unint64_t result = qword_26974FE90;
  if (!qword_26974FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FE90);
  }
  return result;
}

uint64_t sub_249F83848()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE70);
  sub_24A0567E8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE78);
  sub_24A0567E8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE58);
  sub_24A0567E8();
  swift_getTupleTypeMetadata2();
  sub_24A057218();
  swift_getWitnessTable();
  sub_24A057078();

  return swift_getWitnessTable();
}

id sub_249F8394C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for ClockLabel();
  v11.receiver = v0;
  v11.super_class = v4;
  id result = objc_msgSendSuper2(&v11, sel_layoutSubviews);
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC11ClockPoster10ClockLabel_observingOverrideDate) & 1) == 0)
  {
    *((unsigned char *)v0 + OBJC_IVAR____TtC11ClockPoster10ClockLabel_observingOverrideDate) = 1;
    uint64_t v6 = sub_24A057628();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_24A057608();
    swift_retain();
    uint64_t v8 = sub_24A0575F8();
    uint64_t v9 = (void *)swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8F500];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v7;
    swift_release();
    sub_24A04CE18((uint64_t)v3, (uint64_t)&unk_26974FEA8, (uint64_t)v9);
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_249F83AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEB0);
  v4[10] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697516A0);
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEB8);
  v4[14] = v7;
  v4[15] = *(void *)(v7 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_24A057608();
  v4[18] = sub_24A0575F8();
  uint64_t v9 = sub_24A0575D8();
  v4[19] = v9;
  v4[20] = v8;
  return MEMORY[0x270FA2498](sub_249F83CC0, v9, v8);
}

uint64_t sub_249F83CC0()
{
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = qword_269751340;
  uint64_t v5 = *(void *)(qword_269751340 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideDateStream);
  swift_retain();
  sub_249FEFFF8(v5, v4, v1);
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  uint64_t v6 = sub_24A0575F8();
  v0[21] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[22] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_249F83E44;
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[10];
  uint64_t v10 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v9, v6, v10, v8);
}

uint64_t sub_249F83E44()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_249F83F88, v3, v2);
}

uint64_t sub_249F83F88()
{
  uint64_t v1 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[7] + 48))(v1, 1, v0[6]) == 1)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    swift_release();
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  uint64_t v2 = v0[5] + 16;
  sub_249F845D8(v1, v0[9]);
  uint64_t v3 = (void *)MEMORY[0x24C5BA430](v2);
  if (!v3)
  {
    uint64_t v20 = v0[15];
    uint64_t v19 = v0[16];
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[9];
    swift_release();
    sub_249F84640(v22);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    goto LABEL_11;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_timeFormatter);
  if (v5)
  {
    uint64_t v9 = v5;
    uint64_t v10 = v0[8];
    sub_249F846A0(v0[9], v10);
    uint64_t v11 = sub_24A056238();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    unsigned int v14 = 0;
    if (v13 != 1)
    {
      uint64_t v15 = v0[8];
      unsigned int v14 = (void *)sub_24A056198();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
    }
    uint64_t v16 = v0[9];
    objc_msgSend(v9, sel_setOverrideDate_, v14);

    sub_249F84640(v16);
    uint64_t v17 = sub_24A0575F8();
    v0[21] = v17;
    unint64_t v18 = (void *)swift_task_alloc();
    v0[22] = v18;
    *unint64_t v18 = v0;
    v18[1] = sub_249F83E44;
    uint64_t v8 = v0[14];
    id v5 = (id)v0[10];
    uint64_t v7 = MEMORY[0x263F8F500];
    uint64_t v6 = v17;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA1F68](v5, v6, v7, v8);
}

id sub_249F843F8(unsigned char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  a1[OBJC_IVAR____TtC11ClockPoster10ClockLabel_observingOverrideDate] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for ClockLabel();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id sub_249F84454()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClockLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClockLabel()
{
  return self;
}

uint64_t sub_249F844AC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249F844E4()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_249F84524(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  objc_super v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *objc_super v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249F83AC4(a1, v4, v5, v6);
}

uint64_t sub_249F845D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F84640(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249F846A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F84708()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A05ACB0;
  _OWORD v21[3] = &type metadata for SolidClockFaceColor;
  unint64_t v1 = sub_249F849F4();
  v21[4] = v1;
  uint64_t v2 = swift_allocObject();
  v21[0] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_24A05ACC0;
  *(_OWORD *)(v2 + 32) = xmmword_24A05ACD0;
  char v23 = 0;
  long long v22 = 0u;
  v18[3] = &type metadata for SolidClockFaceColor;
  v18[4] = v1;
  uint64_t v3 = swift_allocObject();
  v18[0] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_24A05ACE0;
  *(_OWORD *)(v3 + 32) = xmmword_24A05ACF0;
  char v20 = 0;
  long long v19 = 0u;
  sub_249FE9A00((uint64_t)v21, (uint64_t)v18, v0 + 32);
  sub_249F75BD8((uint64_t)v18);
  sub_249F75BD8((uint64_t)v21);
  *(void *)(v0 + 160) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 168) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 136) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_24A05AD00;
  *(_OWORD *)(v4 + 32) = xmmword_24A05AD10;
  *(unsigned char *)(v0 + 232) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 264) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 272) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 240) = v5;
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)(v5 + 16) = xmmword_24A05AD20;
  *(_OWORD *)(v5 + 32) = _Q1;
  *(unsigned char *)(v0 + 336) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(void *)(v0 + 368) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 376) = v1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 344) = v11;
  *(_OWORD *)(v11 + 16) = xmmword_24A05AD30;
  *(_OWORD *)(v11 + 32) = xmmword_24A05AD40;
  *(unsigned char *)(v0 + 440) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(void *)(v0 + 472) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 480) = v1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 448) = v12;
  *(_OWORD *)(v12 + 16) = xmmword_24A05AD50;
  *(_OWORD *)(v12 + 32) = xmmword_24A05AD60;
  *(unsigned char *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(void *)(v0 + 576) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 584) = v1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 552) = v13;
  *(_OWORD *)(v13 + 16) = xmmword_24A05AD70;
  *(_OWORD *)(v13 + 32) = xmmword_24A05AD80;
  *(unsigned char *)(v0 + 648) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(void *)(v0 + 680) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 688) = v1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v0 + 656) = v14;
  *(_OWORD *)(v14 + 16) = xmmword_24A05AD90;
  *(_OWORD *)(v14 + 32) = xmmword_24A05ADA0;
  *(unsigned char *)(v0 + 752) = 0;
  *(_OWORD *)(v0 + 696) = 0u;
  *(void *)(v0 + 784) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 792) = v1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 760) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_24A05ADB0;
  *(_OWORD *)(v15 + 32) = xmmword_24A05ADC0;
  *(unsigned char *)(v0 + 856) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(void *)(v0 + 888) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 896) = v1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v0 + 864) = v16;
  *(_OWORD *)(v16 + 16) = xmmword_24A05ADD0;
  *(_OWORD *)(v16 + 32) = xmmword_24A05ADE0;
  *(unsigned char *)(v0 + 960) = 0;
  *(_OWORD *)(v0 + 904) = 0u;
  return v0;
}

unint64_t sub_249F849F4()
{
  unint64_t result = qword_26B16FA18;
  if (!qword_26B16FA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA18);
  }
  return result;
}

uint64_t sub_249F84A48()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249F84A58()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A05ADF0;
  *(void *)(v0 + 56) = &type metadata for SolidClockFaceColor;
  unint64_t v1 = sub_249F849F4();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 32) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_24A05AE00;
  *(_OWORD *)(v2 + 32) = xmmword_24A05AE10;
  *(unsigned char *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 160) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 168) = v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 136) = v3;
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)(v3 + 16) = xmmword_24A05AE20;
  *(_OWORD *)(v3 + 32) = _Q1;
  *(unsigned char *)(v0 + 232) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 264) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 272) = v1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 240) = v9;
  *(_OWORD *)(v9 + 16) = xmmword_24A05AE30;
  *(_OWORD *)(v9 + 32) = xmmword_24A05AE40;
  *(unsigned char *)(v0 + 336) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(void *)(v0 + 368) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 376) = v1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 344) = v10;
  *(_OWORD *)(v10 + 16) = xmmword_24A05AE50;
  *(_OWORD *)(v10 + 32) = xmmword_24A05AE60;
  *(unsigned char *)(v0 + 440) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(void *)(v0 + 472) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 480) = v1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 448) = v11;
  *(_OWORD *)(v11 + 16) = xmmword_24A05AE70;
  *(_OWORD *)(v11 + 32) = xmmword_24A05AE80;
  *(unsigned char *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(void *)(v0 + 576) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 584) = v1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 552) = v12;
  *(_OWORD *)(v12 + 16) = xmmword_24A05AE90;
  *(_OWORD *)(v12 + 32) = xmmword_24A05AEA0;
  *(unsigned char *)(v0 + 648) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(void *)(v0 + 680) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 688) = v1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 656) = v13;
  *(_OWORD *)(v13 + 16) = xmmword_24A05AEB0;
  *(_OWORD *)(v13 + 32) = xmmword_24A05AEC0;
  *(unsigned char *)(v0 + 752) = 0;
  *(_OWORD *)(v0 + 696) = 0u;
  *(void *)(v0 + 784) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 792) = v1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v0 + 760) = v14;
  *(_OWORD *)(v14 + 16) = xmmword_24A05AED0;
  *(_OWORD *)(v14 + 32) = xmmword_24A05AEE0;
  *(unsigned char *)(v0 + 856) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(void *)(v0 + 888) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 896) = v1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 864) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_24A05AEF0;
  *(_OWORD *)(v15 + 32) = xmmword_24A05AF00;
  *(unsigned char *)(v0 + 960) = 0;
  *(_OWORD *)(v0 + 904) = 0u;
  *(void *)(v0 + 992) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 1000) = v1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v0 + 968) = v16;
  *(_OWORD *)(v16 + 16) = xmmword_24A05AF10;
  *(_OWORD *)(v16 + 32) = xmmword_24A05AF20;
  *(unsigned char *)(v0 + 1064) = 0;
  *(_OWORD *)(v0 + 1008) = 0u;
  *(void *)(v0 + 1096) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 1104) = v1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v0 + 1072) = v17;
  *(_OWORD *)(v17 + 16) = xmmword_24A05AF30;
  *(_OWORD *)(v17 + 32) = xmmword_24A05AF40;
  *(unsigned char *)(v0 + 1168) = 0;
  *(_OWORD *)(v0 + 1112) = 0u;
  *(void *)(v0 + 1200) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 1208) = v1;
  uint64_t v18 = swift_allocObject();
  *(void *)(v0 + 1176) = v18;
  *(_OWORD *)(v18 + 16) = xmmword_24A05AF50;
  *(_OWORD *)(v18 + 32) = xmmword_24A05AF60;
  *(unsigned char *)(v0 + 1272) = 0;
  *(_OWORD *)(v0 + 1216) = 0u;
  *(void *)(v0 + 1304) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 1312) = v1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v0 + 1280) = v19;
  *(_OWORD *)(v19 + 16) = xmmword_24A05AF70;
  *(_OWORD *)(v19 + 32) = xmmword_24A05AF80;
  *(unsigned char *)(v0 + 1376) = 0;
  *(_OWORD *)(v0 + 1320) = 0u;
  *(void *)(v0 + 1408) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 1416) = v1;
  uint64_t v20 = swift_allocObject();
  *(void *)(v0 + 1384) = v20;
  *(_OWORD *)(v20 + 16) = xmmword_24A05AF90;
  *(_OWORD *)(v20 + 32) = xmmword_24A05AFA0;
  *(unsigned char *)(v0 + 1480) = 0;
  *(_OWORD *)(v0 + 1424) = 0u;
  *(void *)(v0 + 1512) = &type metadata for SolidClockFaceColor;
  *(void *)(v0 + 1520) = v1;
  uint64_t v21 = swift_allocObject();
  *(void *)(v0 + 1488) = v21;
  *(_OWORD *)(v21 + 16) = xmmword_24A05AFB0;
  *(_OWORD *)(v21 + 32) = xmmword_24A05AFC0;
  *(unsigned char *)(v0 + 1584) = 0;
  *(_OWORD *)(v0 + 1528) = 0u;
  sub_249FE9AF8(180, 140, 236, 128, 131, 255, v0 + 1592);
  sub_249FE9AF8(255, 127, 112, 230, 131, 189, v0 + 1696);
  sub_249FE9AF8(255, 139, 121, 255, 175, 109, v0 + 1800);
  sub_249FE9AF8(244, 224, 132, 255, 196, 113, v0 + 1904);
  sub_249FE9AF8(125, 196, 201, 148, 215, 139, v0 + 2008);
  sub_249FE9AF8(140, 211, 217, 118, 157, 255, v0 + 2112);
  sub_249FE9C4C((uint64_t)&unk_26FDE5BA0, v0 + 2216);
  return v0;
}

uint64_t sub_249F84F24()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A05AFD0;
  *(void *)(v0 + 56) = &type metadata for DynamicClockFaceColor;
  unint64_t v1 = sub_249F85608();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 32) = v2;
  v2[1] = xmmword_24A05AD00;
  v2[2] = xmmword_24A05AD10;
  v2[3] = xmmword_24A05AFE0;
  v2[4] = xmmword_24A05AFF0;
  *(unsigned char *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 160) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 168) = v1;
  uint64_t v3 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 136) = v3;
  __asm { FMOV            V1.2D, #1.0 }
  long long v27 = _Q1;
  v3[1] = xmmword_24A05AD20;
  v3[2] = _Q1;
  v3[3] = xmmword_24A05B000;
  v3[4] = xmmword_24A05B010;
  *(unsigned char *)(v0 + 232) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 264) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 272) = v1;
  uint64_t v9 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 240) = v9;
  v9[1] = xmmword_24A05AD30;
  v9[2] = xmmword_24A05AD40;
  v9[3] = xmmword_24A05B020;
  v9[4] = xmmword_24A05B030;
  *(unsigned char *)(v0 + 336) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(void *)(v0 + 368) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 376) = v1;
  uint64_t v10 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 344) = v10;
  v10[1] = xmmword_24A05AD50;
  v10[2] = xmmword_24A05AD60;
  v10[3] = xmmword_24A05B040;
  v10[4] = xmmword_24A05B050;
  *(unsigned char *)(v0 + 440) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(void *)(v0 + 472) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 480) = v1;
  uint64_t v11 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 448) = v11;
  v11[1] = xmmword_24A05AD70;
  v11[2] = xmmword_24A05AD80;
  v11[3] = xmmword_24A05B060;
  v11[4] = xmmword_24A05B070;
  *(unsigned char *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(void *)(v0 + 576) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 584) = v1;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 552) = v12;
  v12[1] = xmmword_24A05AD90;
  void v12[2] = xmmword_24A05ADA0;
  uint64_t v12[3] = xmmword_24A05B080;
  v12[4] = xmmword_24A05B090;
  *(unsigned char *)(v0 + 648) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(void *)(v0 + 680) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 688) = v1;
  uint64_t v13 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 656) = v13;
  v13[1] = xmmword_24A05ADB0;
  v13[2] = xmmword_24A05ADC0;
  v13[3] = xmmword_24A05B0A0;
  uint64_t v13[4] = xmmword_24A05B0B0;
  *(unsigned char *)(v0 + 752) = 0;
  *(_OWORD *)(v0 + 696) = 0u;
  *(void *)(v0 + 784) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 792) = v1;
  uint64_t v14 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 760) = v14;
  v14[1] = xmmword_24A05ADD0;
  v14[2] = xmmword_24A05ADE0;
  v14[3] = xmmword_24A05B0C0;
  v14[4] = xmmword_24A05B0D0;
  *(unsigned char *)(v0 + 856) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(void *)(v0 + 888) = &type metadata for DynamicClockFaceColor;
  *(void *)(v0 + 896) = v1;
  uint64_t v15 = (_OWORD *)swift_allocObject();
  *(void *)(v0 + 864) = v15;
  v15[1] = xmmword_24A05B0E0;
  v15[2] = xmmword_24A05B0F0;
  _OWORD v15[3] = xmmword_24A05B100;
  v15[4] = xmmword_24A05AE60;
  *(unsigned char *)(v0 + 960) = 0;
  *(_OWORD *)(v0 + 904) = 0u;
  uint64_t v35 = &type metadata for DynamicClockFaceColor;
  unint64_t v36 = v1;
  uint64_t v16 = (_OWORD *)swift_allocObject();
  v16[1] = xmmword_24A05AD00;
  v16[2] = xmmword_24A05AD10;
  v16[3] = xmmword_24A05AFE0;
  v16[4] = xmmword_24A05AFF0;
  char v39 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  v34[0] = v16;
  uint64_t v29 = &type metadata for DynamicClockFaceColor;
  unint64_t v30 = v1;
  uint64_t v17 = (_OWORD *)swift_allocObject();
  v17[1] = xmmword_24A05ADD0;
  v17[2] = xmmword_24A05ADE0;
  v17[3] = xmmword_24A05B0C0;
  v17[4] = xmmword_24A05B0D0;
  char v33 = 0;
  uint64_t v32 = 0;
  v28[0] = v17;
  uint64_t v31 = 0;
  sub_249FE9A00((uint64_t)v34, (uint64_t)v28, v0 + 968);
  sub_249F75BD8((uint64_t)v28);
  sub_249F75BD8((uint64_t)v34);
  uint64_t v35 = &type metadata for DynamicClockFaceColor;
  unint64_t v36 = v1;
  uint64_t v18 = (_OWORD *)swift_allocObject();
  v18[1] = xmmword_24A05AFE0;
  _OWORD v18[2] = xmmword_24A05AFF0;
  v18[3] = xmmword_24A05AD00;
  v18[4] = xmmword_24A05AD10;
  char v39 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  v34[0] = v18;
  uint64_t v29 = &type metadata for DynamicClockFaceColor;
  unint64_t v30 = v1;
  uint64_t v19 = (_OWORD *)swift_allocObject();
  v19[1] = xmmword_24A05ADB0;
  v19[2] = xmmword_24A05ADC0;
  v19[3] = xmmword_24A05B0A0;
  v19[4] = xmmword_24A05B0B0;
  char v33 = 0;
  uint64_t v32 = 0;
  v28[0] = v19;
  uint64_t v31 = 0;
  sub_249FE9A00((uint64_t)v34, (uint64_t)v28, v0 + 1072);
  sub_249F75BD8((uint64_t)v28);
  sub_249F75BD8((uint64_t)v34);
  uint64_t v35 = &type metadata for DynamicClockFaceColor;
  unint64_t v36 = v1;
  uint64_t v20 = (_OWORD *)swift_allocObject();
  v20[1] = xmmword_24A05B000;
  _OWORD v20[2] = xmmword_24A05B010;
  v20[3] = xmmword_24A05AD20;
  v20[4] = v27;
  char v39 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  v34[0] = v20;
  uint64_t v29 = &type metadata for DynamicClockFaceColor;
  unint64_t v30 = v1;
  uint64_t v21 = (_OWORD *)swift_allocObject();
  v21[1] = xmmword_24A05AD50;
  v21[2] = xmmword_24A05AD60;
  _OWORD v21[3] = xmmword_24A05B040;
  v21[4] = xmmword_24A05B050;
  char v33 = 0;
  uint64_t v32 = 0;
  v28[0] = v21;
  uint64_t v31 = 0;
  sub_249FE9A00((uint64_t)v34, (uint64_t)v28, v0 + 1176);
  sub_249F75BD8((uint64_t)v28);
  sub_249F75BD8((uint64_t)v34);
  uint64_t v35 = &type metadata for DynamicClockFaceColor;
  unint64_t v36 = v1;
  long long v22 = (_OWORD *)swift_allocObject();
  v22[1] = xmmword_24A05AD90;
  v22[2] = xmmword_24A05ADA0;
  v22[3] = xmmword_24A05B080;
  void v22[4] = xmmword_24A05B090;
  char v39 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  v34[0] = v22;
  uint64_t v29 = &type metadata for DynamicClockFaceColor;
  unint64_t v30 = v1;
  char v23 = (_OWORD *)swift_allocObject();
  v23[1] = xmmword_24A05AD70;
  v23[2] = xmmword_24A05AD80;
  _OWORD v23[3] = xmmword_24A05B060;
  v23[4] = xmmword_24A05B070;
  char v33 = 0;
  uint64_t v32 = 0;
  v28[0] = v23;
  uint64_t v31 = 0;
  sub_249FE9A00((uint64_t)v34, (uint64_t)v28, v0 + 1280);
  sub_249F75BD8((uint64_t)v28);
  sub_249F75BD8((uint64_t)v34);
  uint64_t v35 = &type metadata for DynamicClockFaceColor;
  unint64_t v36 = v1;
  uint64_t v24 = (_OWORD *)swift_allocObject();
  v24[1] = xmmword_24A05AD30;
  v24[2] = xmmword_24A05AD40;
  v24[3] = xmmword_24A05B020;
  unsigned char v24[4] = xmmword_24A05B030;
  char v39 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  v34[0] = v24;
  uint64_t v29 = &type metadata for DynamicClockFaceColor;
  unint64_t v30 = v1;
  uint64_t v25 = (_OWORD *)swift_allocObject();
  v25[1] = xmmword_24A05B0E0;
  v25[2] = xmmword_24A05B0F0;
  v25[3] = xmmword_24A05B100;
  v25[4] = xmmword_24A05AE60;
  char v33 = 0;
  uint64_t v32 = 0;
  v28[0] = v25;
  uint64_t v31 = 0;
  sub_249FE9A00((uint64_t)v34, (uint64_t)v28, v0 + 1384);
  sub_249F75BD8((uint64_t)v28);
  sub_249F75BD8((uint64_t)v34);
  return v0;
}

unint64_t sub_249F85608()
{
  unint64_t result = qword_26B16FA40;
  if (!qword_26B16FA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA40);
  }
  return result;
}

uint64_t sub_249F8565C()
{
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_249F8566C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249F85680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_249F85694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v30 = a1;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v16((char *)&v28 - v17, v6, a2, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FED0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
  }
  sub_249F6E6C8((uint64_t)v36, (uint64_t)&v31, &qword_26974FED8);
  uint64_t v18 = v32;
  if (v32)
  {
    uint64_t v29 = v11;
    uint64_t v19 = v13;
    uint64_t v20 = v16;
    uint64_t v21 = v6;
    long long v22 = a5;
    uint64_t v23 = a4;
    uint64_t v24 = v33;
    __swift_project_boxed_opaque_existential_1(&v31, v32);
    uint64_t v25 = v24;
    a4 = v23;
    a5 = v22;
    uint64_t v6 = v21;
    uint64_t v16 = v20;
    uint64_t v13 = v19;
    uint64_t v11 = v29;
    sub_249F85930(v30, v18, a3, v25, (uint64_t *)v34);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
  }
  else
  {
    sub_249F6E790((uint64_t)&v31, &qword_26974FED8);
    memset(v34, 0, sizeof(v34));
    uint64_t v35 = 0;
  }
  sub_249F6E6C8((uint64_t)v34, (uint64_t)&v31, &qword_26974FEE0);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v13, v6, a2);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
    sub_249F6E790((uint64_t)v34, &qword_26974FEE0);
    sub_249F7B5E8(&v31, (uint64_t)a5);
  }
  else
  {
    a5[3] = a2;
    a5[4] = a4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a5);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(boxed_opaque_existential_0, v13, a2);
    sub_249F6E790((uint64_t)v34, &qword_26974FEE0);
    sub_249F6E790((uint64_t)&v31, &qword_26974FEE0);
  }
  return sub_249F6E790((uint64_t)v36, &qword_26974FED8);
}

uint64_t sub_249F85930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v31 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_24A057968();
  uint64_t v10 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v12 = (char *)&v29 - v11;
  MEMORY[0x270FA5388](v13);
  __n128 v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v29 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))(v15, v31, a3, v18);
  int v22 = swift_dynamicCast();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v22)
  {
    v23(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v12, AssociatedTypeWitness);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(a4 + 24);
    uint64_t v25 = *(void *)(a4 + 8);
    a5[3] = a2;
    a5[4] = v25;
    __swift_allocate_boxed_opaque_existential_0(a5);
    v24(v20, a2, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, AssociatedTypeWitness);
  }
  else
  {
    v23(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
    uint64_t v27 = *(void *)(a4 + 8);
    a5[3] = a2;
    a5[4] = v27;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a5);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_0, v32, a2);
  }
}

float sub_249F85C3C()
{
  return *(float *)v0;
}

uint64_t sub_249F85C44()
{
  return sub_249F73D7C(*v0);
}

float sub_249F85C4C()
{
  unint64_t v1 = (float *)__swift_project_boxed_opaque_existential_1(v0, v0[3]);
  float v2 = v1[3];
  float v3 = v1[4];
  float v4 = v1[5];
  float v5 = v1[6];
  noise2();
  if (v4 < fabsf(v6))
  {
    if (v6 < (float)-v4) {
      float v6 = -v4;
    }
    if (v6 >= v4) {
      float v6 = v4;
    }
  }
  float v7 = v2 + (float)((float)(v3 - v2) * (float)(1.0 - (float)((float)(v4 - v6) / (float)(v4 + v4))));

  return fmodf(v7, v5);
}

float sub_249F85CE8@<S0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  long long v9 = *(_OWORD *)(v2 + 3);
  float v5 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_OWORD *)(a2 + 24) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  float result = *((float *)v5 + 6);
  long long v8 = *(_OWORD *)(v5 + 1);
  uint64_t *boxed_opaque_existential_0 = v4;
  *(_OWORD *)(boxed_opaque_existential_0 + 1) = v8;
  *((float *)boxed_opaque_existential_0 + 6) = result;
  return result;
}

void sub_249F85D5C(uint64_t a1, float a2)
{
  if (*(void *)(a1 + 16) > 1uLL)
  {
    sub_249F85E38(a1, (uint64_t)&v8, a2);
    uint64_t v4 = v9;
    id v5 = v11;
    float v6 = (float)(a2 - v8) + 1.0;
    if (v8 <= a2) {
      float v6 = a2 - v8;
    }
    if (v10 <= v8) {
      *(float *)&double v3 = v6;
    }
    else {
      *(float *)&double v3 = a2 - v8;
    }
    if (v10 <= v8) {
      float v7 = (float)(v10 - v8) + 1.0;
    }
    else {
      float v7 = v10 - v8;
    }
    *(float *)&double v3 = *(float *)&v3 / v7;
    objc_msgSend(v11, sel__solveForInput_, v3);
  }
}

void sub_249F85E38(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = v4 - 1;
  if (v4 == 1)
  {
LABEL_15:
    __break(1u);
    return;
  }
  float v7 = *(float *)(a1 + 32);
  int v8 = *(_DWORD *)(a1 + 36);
  long long v9 = (void **)(a1 + 56);
  float v10 = *(void **)(a1 + 56);
  float v11 = *(float *)(a1 + 48);
  int v12 = *(_DWORD *)(a1 + 52);
  id v13 = *(id *)(a1 + 40);
  id v14 = v10;
  float v15 = v7;
  int v16 = v8;
  uint64_t v17 = v13;
  while (1)
  {
    float v21 = *((float *)v9 - 6);
    int v22 = *(v9 - 2);
    float v23 = *((float *)v9 - 2);
    int v24 = *((_DWORD *)v9 - 1);
    uint64_t v25 = *v9;
    if (v21 <= a3 && v23 >= a3) {
      break;
    }
    if (v5 == 1)
    {
      id v18 = v22;
      id v19 = v25;

      id v20 = v13;
      float v11 = v7;
      int v12 = v8;
      id v14 = v20;
      uint64_t v17 = v19;
      float v15 = v23;
      int v16 = v24;
    }
    else
    {
      float v23 = v15;
      int v24 = v16;
    }
    v9 += 2;
    if (!--v5) {
      goto LABEL_13;
    }
  }
  int v27 = *((_DWORD *)v9 - 5);
  id v28 = v22;
  id v29 = v25;

  float v11 = v23;
  int v12 = v24;
  id v14 = v29;
  float v23 = v21;
  int v24 = v27;
  uint64_t v17 = v28;
LABEL_13:
  *(float *)a2 = v23;
  *(_DWORD *)(a2 + 4) = v24;
  *(void *)(a2 + 8) = v17;
  *(float *)(a2 + 16) = v11;
  *(_DWORD *)(a2 + 20) = v12;
  *(void *)(a2 + 24) = v14;
}

uint64_t sub_249F85F9C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = *(void *)(v2 + 8);
  *(_DWORD *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  return swift_bridgeObjectRetain();
}

void sub_249F85FB0()
{
  sub_249F85D5C(*(void *)(v0 + 8), *(float *)v0);
}

uint64_t sub_249F85FBC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24A021030(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_249F86028(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249F86028(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24A057CE8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v82 = *a1;
      uint64_t v83 = -1;
      uint64_t v84 = 1;
      uint64_t v85 = *a1;
      do
      {
        float v86 = *(float *)(v82 + 8 * v84);
        uint64_t v87 = v83;
        uint64_t v88 = v85;
        do
        {
          if (v86 >= *(float *)v88) {
            break;
          }
          if (!v82) {
            goto LABEL_141;
          }
          int v89 = *(_DWORD *)(v88 + 12);
          *(void *)(v88 + 8) = *(void *)v88;
          *(float *)uint64_t v88 = v86;
          *(_DWORD *)(v88 + 4) = v89;
          v88 -= 8;
        }
        while (!__CFADD__(v87++, 1));
        ++v84;
        v85 += 8;
        --v83;
      }
      while (v84 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (float *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v91 = v12;
      uint64_t v102 = v9;
      if (v13 >= 2)
      {
        uint64_t v92 = *v99;
        do
        {
          unint64_t v93 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v92) {
            goto LABEL_145;
          }
          uint64_t v94 = v91;
          uint64_t v95 = *(void *)&v91[16 * v93 + 32];
          uint64_t v96 = *(void *)&v91[16 * v13 + 24];
          sub_249F866F4((float *)(v92 + 8 * v95), (float *)(v92 + 8 * *(void *)&v91[16 * v13 + 16]), v92 + 8 * v96, __dst);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v94 = sub_249F9A14C((uint64_t)v94);
          }
          if (v93 >= *((void *)v94 + 2)) {
            goto LABEL_134;
          }
          uint64_t v97 = &v94[16 * v93 + 32];
          *(void *)uint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v94 + 2);
          if (v13 > v98) {
            goto LABEL_135;
          }
          memmove(&v94[16 * v13 + 16], &v94[16 * v13 + 32], 16 * (v98 - v13));
          uint64_t v91 = v94;
          *((void *)v94 + 2) = v98 - 1;
          unint64_t v13 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v102 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v102 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEC0);
    uint64_t v8 = sub_24A0575A8();
    *(void *)(v8 + 16) = v7;
    uint64_t v102 = v8;
    __dst = (float *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  int v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v103 = v6;
  uint64_t v104 = v3;
  uint64_t v105 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v11 + 8 * v10);
      float v16 = *(float *)(v11 + 8 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (float *)(v101 + 8 * v14);
        float v18 = v15;
        while (1)
        {
          float v19 = v18;
          float v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          id v20 = (uint64_t *)(v100 + 8 * v10);
          uint64_t v21 = v10;
          uint64_t v22 = v14;
          float v23 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v22 != --v21)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = *v23;
              uint64_t *v23 = *v20;
              uint64_t *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v25 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v25 >= v3) {
      uint64_t v25 = v3;
    }
    if (v25 < v14) {
      break;
    }
    if (v10 != v25)
    {
      uint64_t v26 = v100 + 8 * v10;
      do
      {
        float v27 = *(float *)(v11 + 8 * v10);
        uint64_t v28 = v14;
        uint64_t v29 = v26;
        do
        {
          if (v27 >= *(float *)v29) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          int v30 = *(_DWORD *)(v29 + 12);
          *(void *)(v29 + 8) = *(void *)v29;
          *(float *)uint64_t v29 = v27;
          *(_DWORD *)(v29 + 4) = v30;
          v29 -= 8;
          ++v28;
        }
        while (v10 != v28);
        ++v10;
        v26 += 8;
      }
      while (v10 != v25);
      uint64_t v10 = v25;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v12 = sub_249F99D84(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v32 = *((void *)v12 + 2);
    unint64_t v31 = *((void *)v12 + 3);
    unint64_t v13 = v32 + 1;
    uint64_t v11 = v105;
    if (v32 >= v31 >> 1)
    {
      uint64_t v81 = sub_249F99D84((char *)(v31 > 1), v32 + 1, 1, v12);
      uint64_t v11 = v105;
      int v12 = v81;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v33 = v12 + 32;
    uint64_t v34 = &v12[16 * v32 + 32];
    *(void *)uint64_t v34 = v14;
    *((void *)v34 + 1) = v10;
    if (v32)
    {
      while (1)
      {
        unint64_t v35 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v40 = &v33[16 * v13];
          uint64_t v41 = *((void *)v40 - 8);
          uint64_t v42 = *((void *)v40 - 7);
          BOOL v46 = __OFSUB__(v42, v41);
          uint64_t v43 = v42 - v41;
          if (v46) {
            goto LABEL_120;
          }
          uint64_t v45 = *((void *)v40 - 6);
          uint64_t v44 = *((void *)v40 - 5);
          BOOL v46 = __OFSUB__(v44, v45);
          uint64_t v38 = v44 - v45;
          char v39 = v46;
          if (v46) {
            goto LABEL_121;
          }
          unint64_t v47 = v13 - 2;
          uint64_t v48 = &v33[16 * v13 - 32];
          uint64_t v50 = *(void *)v48;
          uint64_t v49 = *((void *)v48 + 1);
          BOOL v46 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          if (v46) {
            goto LABEL_123;
          }
          BOOL v46 = __OFADD__(v38, v51);
          uint64_t v52 = v38 + v51;
          if (v46) {
            goto LABEL_126;
          }
          if (v52 >= v43)
          {
            uint64_t v70 = &v33[16 * v35];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            BOOL v46 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v46) {
              goto LABEL_130;
            }
            BOOL v63 = v38 < v73;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v64 = *((void *)v12 + 4);
            uint64_t v65 = *((void *)v12 + 5);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
            goto LABEL_77;
          }
          uint64_t v37 = *((void *)v12 + 4);
          uint64_t v36 = *((void *)v12 + 5);
          BOOL v46 = __OFSUB__(v36, v37);
          uint64_t v38 = v36 - v37;
          char v39 = v46;
        }
        if (v39) {
          goto LABEL_122;
        }
        unint64_t v47 = v13 - 2;
        uint64_t v53 = &v33[16 * v13 - 32];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v56 = __OFSUB__(v54, v55);
        uint64_t v57 = v54 - v55;
        char v58 = v56;
        if (v56) {
          goto LABEL_125;
        }
        uint64_t v59 = &v33[16 * v35];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v46 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v46) {
          goto LABEL_128;
        }
        if (__OFADD__(v57, v62)) {
          goto LABEL_129;
        }
        if (v57 + v62 >= v38)
        {
          BOOL v63 = v38 < v62;
LABEL_83:
          if (v63) {
            unint64_t v35 = v47;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v58) {
          goto LABEL_124;
        }
        uint64_t v66 = &v33[16 * v35];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v46 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v46) {
          goto LABEL_127;
        }
        if (v69 < v57) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v74 = v35 - 1;
        if (v35 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v75 = v12;
        uint64_t v76 = &v33[16 * v74];
        uint64_t v77 = *(void *)v76;
        uint64_t v78 = &v33[16 * v35];
        uint64_t v79 = *((void *)v78 + 1);
        sub_249F866F4((float *)(v11 + 8 * *(void *)v76), (float *)(v11 + 8 * *(void *)v78), v11 + 8 * v79, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v79 < v77) {
          goto LABEL_117;
        }
        if (v35 > *((void *)v75 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v76 = v77;
        *(void *)&v33[16 * v74 + 8] = v79;
        unint64_t v80 = *((void *)v75 + 2);
        if (v35 >= v80) {
          goto LABEL_119;
        }
        int v12 = v75;
        unint64_t v13 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((void *)v75 + 2) = v80 - 1;
        uint64_t v11 = v105;
        if (v80 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v103;
    uint64_t v3 = v104;
    if (v10 >= v104)
    {
      uint64_t v9 = v102;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_24A057BB8();
  __break(1u);
  return result;
}

uint64_t sub_249F866F4(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  float v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      float v16 = &v4[2 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (float *)(a3 - 8);
        float v18 = v6;
        while (1)
        {
          float v19 = v17 + 2;
          float v20 = *(v18 - 2);
          v18 -= 2;
          if (*(v16 - 2) >= v20)
          {
            uint64_t v22 = v16 - 2;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            float v18 = v6;
            v16 -= 2;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = *(void *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 2;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 2;
          float v23 = v4;
          float v15 = v6;
        }
        else
        {
          float v15 = v6 + 2;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 2;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_249F99F50((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t sub_249F86970(uint64_t a1)
{
  uint64_t v13 = a1;
  swift_bridgeObjectRetain();
  sub_249F85FBC(&v13);
  swift_bridgeObjectRelease();
  uint64_t v1 = v13;
  int64_t v2 = *(void *)(v13 + 16);
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_249FBADC8(0, v2, 0);
    uint64_t v3 = v13;
    uint64_t v4 = *MEMORY[0x263F15EB8];
    uint64_t v5 = self;
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(v1 + 8 * v6 + 32);
      id v8 = objc_msgSend(v5, sel_functionWithName_, v4);
      uint64_t v13 = v3;
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_249FBADC8(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v13;
      }
      ++v6;
      *(void *)(v3 + 16) = v10 + 1;
      uint64_t v11 = v3 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
    }
    while (v2 != v6);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

void *initializeBufferWithCopyOfBuffer for ColorCurveChannelProvider.Element(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ColorCurveChannelProvider.Element(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v3 = *(void **)(a2 + 8);
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for ColorCurveChannelProvider.Element(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for ColorCurveChannelProvider.Element()
{
  return &type metadata for ColorCurveChannelProvider.Element;
}

uint64_t initializeBufferWithCopyOfBuffer for ColorCurveChannelProvider(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ColorCurveChannelProvider()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ColorCurveChannelProvider(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ColorCurveChannelProvider(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorCurve(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorCurve(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorCurveChannelProvider()
{
  return &type metadata for ColorCurveChannelProvider;
}

ValueMetadata *type metadata accessor for FixedColorChannel()
{
  return &type metadata for FixedColorChannel;
}

uint64_t initializeWithCopy for NoiseColorChannelGenerator(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for NoiseColorChannelGenerator(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for NoiseColorChannelGenerator(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoiseColorChannelGenerator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoiseColorChannelGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoiseColorChannelGenerator()
{
  return &type metadata for NoiseColorChannelGenerator;
}

unint64_t sub_249F870A4(uint64_t a1)
{
  unint64_t result = sub_249F870CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249F870CC()
{
  unint64_t result = qword_26974FEC8;
  if (!qword_26974FEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FEC8);
  }
  return result;
}

id sub_249F87128(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace;
  type metadata accessor for AnalogClockFaceView();
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)&v1[v3] = v4;
  sub_249F75B7C(a1, (uint64_t)&v1[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look]);
  v1[OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode] = 0;
  v1[OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_canAnimateRedMode] = 0;
  objc_allocWithZone((Class)type metadata accessor for ClockFaceHostView());
  id v5 = v4;
  uint64_t v6 = v1;
  *(void *)&v6[OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_hostView] = sub_249FC8D90(v5);

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for ClockFaceViewController();
  id v7 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);

  sub_249F75B7C(a1, (uint64_t)v11);
  uint64_t v8 = (uint64_t)v7 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look;
  swift_beginAccess();
  id v9 = v7;
  sub_249F88840((uint64_t)v11, v8);
  swift_endAccess();
  sub_249F8728C();
  sub_249F75BD8((uint64_t)v11);

  sub_249F75BD8(a1);
  return v9;
}

uint64_t sub_249F8728C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056538();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look];
  swift_beginAccess();
  sub_249F75B7C(v9, (uint64_t)v49);
  if (v51 == 2)
  {
    swift_bridgeObjectRelease();
    sub_249F7B5E8(v49, (uint64_t)v45);
    sub_249F7B5E8(v50, (uint64_t)v42);
    float v15 = *(char **)&v0[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
    uint64_t v16 = v46;
    uint64_t v17 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    float v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
    objc_msgSend(v15, sel_setTintColor_, v18);

    uint64_t v19 = v43;
    uint64_t v20 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    uint64_t v22 = *(void **)&v15[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor];
    *(void *)&v15[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor] = v21;
    id v23 = v21;

    sub_24A017F50();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
  }
  if (!v51)
  {
    swift_bridgeObjectRelease();
    sub_249F7B5E8(v49, (uint64_t)v45);
    uint64_t v10 = v46;
    uint64_t v11 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    objc_super v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace], sel_setTintColor_, v12);
    uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor);
    *(void *)(v13 + OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor) = 0;

    sub_24A017F50();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
  }
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
  swift_beginAccess();
  sub_249F6E6C8(v25, (uint64_t)v4, &qword_26B16FAA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_249FB8AA8((uint64_t)v8);
    sub_249F6E790((uint64_t)v4, &qword_26B16FAA8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  uint64_t v26 = v0;
  float v27 = sub_24A056518();
  os_log_type_t v28 = sub_24A0577B8();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v48 = v41;
    *(_DWORD *)uint64_t v30 = 136446466;
    int v39 = v29;
    sub_249F75B7C(v9, (uint64_t)v45);
    os_log_t v38 = v27;
    uint64_t v31 = sub_249F73AC4();
    unint64_t v33 = v32;
    sub_249F75BD8((uint64_t)v45);
    v45[0] = sub_249F782DC(v31, v33, &v48);
    sub_24A057978();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2114;
    v45[0] = v26;
    uint64_t v34 = v26;
    sub_24A057978();
    unint64_t v35 = v40;
    *uint64_t v40 = v26;

    os_log_t v36 = v38;
    _os_log_impl(&dword_249F61000, v38, (os_log_type_t)v39, "Unsupported look. Look: '%{public}s' for '%{public}@'", (uint8_t *)v30, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697520B0);
    swift_arrayDestroy();
    MEMORY[0x24C5BA360](v35, -1, -1);
    uint64_t v37 = v41;
    swift_arrayDestroy();
    MEMORY[0x24C5BA360](v37, -1, -1);
    MEMORY[0x24C5BA360](v30, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_249F75BD8((uint64_t)v49);
}

void sub_249F87818(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

id sub_249F87824(char a1)
{
  uint64_t v2 = v1;
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_hostView);
  unsigned __int8 v9 = 2;
  char v5 = *(unsigned char *)(v2 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_canAnimateRedMode);
  id v6 = v4;
  sub_249F88C70(a1, &v9, v5);

  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace);

  return objc_msgSend(v7, sel_setNeedsLayout);
}

uint64_t sub_249F87964()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (objc_class *)type metadata accessor for AnalogClockFaceViewController();
  v12.receiver = v0;
  v12.super_class = v4;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AnalogClockFaceDateComplicationView()), sel_initWithFrame_options_, 0, 0.0, 0.0, 0.0, 0.0);
  sub_249F8889C(v5);

  uint64_t v6 = sub_24A057628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_24A057608();
  swift_retain();
  uint64_t v8 = sub_24A0575F8();
  unsigned __int8 v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8F500];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  swift_release();
  sub_24A04CE18((uint64_t)v3, (uint64_t)&unk_26974FF10, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_249F87B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_24A056238();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Alarm();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  v4[12] = v7;
  v4[13] = *(void *)(v7 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF20);
  v4[16] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF28);
  v4[17] = v8;
  v4[18] = *(void *)(v8 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF30);
  v4[20] = v9;
  v4[21] = *(void *)(v9 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = sub_24A057608();
  v4[24] = sub_24A0575F8();
  uint64_t v11 = sub_24A0575D8();
  v4[25] = v11;
  v4[26] = v10;
  return MEMORY[0x270FA2498](sub_249F87DC4, v11, v10);
}

uint64_t sub_249F87DC4()
{
  if (qword_26974F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752360;
  *(void *)(v0 + 216) = qword_269752360;
  return MEMORY[0x270FA2498](sub_249F87E5C, v1, 0);
}

uint64_t sub_249F87E5C()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[19];
  uint64_t v3 = *(void *)(v1 + 112);
  swift_retain();
  sub_249FF09F4(v3, v1, v2);
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[26];
  return MEMORY[0x270FA2498](sub_249F87EE4, v4, v5);
}

uint64_t sub_249F87EE4()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  uint64_t v4 = sub_24A0575F8();
  v0[28] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[29] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249F87FFC;
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[16];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_249F87FFC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 208);
  uint64_t v3 = *(void *)(v1 + 200);
  return MEMORY[0x270FA2498](sub_249F88140, v3, v2);
}

uint64_t sub_249F88140()
{
  uint64_t v1 = v0[16];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[13] + 48))(v1, 1, v0[12]) == 1)
  {
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_release();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  uint64_t v2 = v0[5] + 16;
  sub_249F88B08(v1, v0[15]);
  uint64_t v3 = MEMORY[0x24C5BA430](v2);
  if (!v3)
  {
    uint64_t v17 = v0[21];
    uint64_t v16 = v0[22];
    uint64_t v18 = v0[20];
    uint64_t v19 = v0[15];
    swift_release();
    sub_249F6E790(v19, &qword_26974FF18);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_10;
  }
  uint64_t v4 = (char *)v3;
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  sub_249F6E6C8(v0[15], v5, &qword_26974FF18);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  uint64_t v9 = v0[14];
  if (v8 == 1)
  {
    sub_249F6E790(v9, &qword_26974FF18);
    uint64_t v10 = *(char **)&v4[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
    uint64_t v11 = OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView;
    objc_super v12 = *(void **)&v10[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView];
    if (v12)
    {
      objc_msgSend(v12, sel_removeFromSuperview);
      uint64_t v13 = *(void **)&v10[v11];
      *(void *)&v10[v11] = 0;

      uint64_t v14 = *(void **)&v10[v11];
      if (v14)
      {
        id v15 = v14;
        objc_msgSend(v10, sel_addSubview_, v15);
        sub_24A017F50();
      }
      objc_msgSend(v10, sel_setNeedsLayout);
    }
    else
    {
    }
    goto LABEL_24;
  }
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[8];
  uint64_t v24 = v0[9];
  uint64_t v25 = v0[6];
  uint64_t v26 = v0[7];
  sub_249F88B70(v9, v22);
  LOBYTE(v24) = *(unsigned char *)(v22 + *(int *)(v24 + 20));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v23, v22, v25);
  id v27 = objc_allocWithZone((Class)type metadata accessor for AnalogClockFaceAlarmComplicationView());
  sub_24A04A540(v23, (id)((v24 & 1) == 0), 0.0, 0.0, 0.0, 0.0);
  id v29 = v28;
  uint64_t v30 = *(char **)&v4[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
  uint64_t v31 = OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView;
  unint64_t v32 = *(void **)&v30[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView];
  if (!v32) {
    goto LABEL_19;
  }
  sub_249F88C30();
  id v33 = v32;
  char v34 = sub_24A057938();

  if ((v34 & 1) == 0)
  {
    os_log_t v36 = *(void **)&v30[v31];
    if (v36)
    {
      id v37 = v29;
      objc_msgSend(v36, sel_removeFromSuperview);
      os_log_t v38 = *(void **)&v30[v31];
LABEL_20:
      *(void *)&v30[v31] = v29;
      id v29 = v29;

      uint64_t v40 = *(void **)&v30[v31];
      if (v40)
      {
        id v41 = v40;
        objc_msgSend(v30, sel_addSubview_, v41);
        sub_24A017F50();
      }
      uint64_t v35 = v0[11];
      objc_msgSend(v30, sel_setNeedsLayout);

      goto LABEL_23;
    }
LABEL_19:
    id v39 = v29;
    os_log_t v38 = 0;
    goto LABEL_20;
  }
  uint64_t v35 = v0[11];
LABEL_23:

  sub_249F88BD4(v35);
LABEL_24:
  sub_249F6E790(v0[15], &qword_26974FF18);
  uint64_t v42 = sub_24A0575F8();
  v0[28] = v42;
  uint64_t v43 = (void *)swift_task_alloc();
  v0[29] = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_249F87FFC;
  uint64_t v44 = v0[20];
  uint64_t v45 = v0[16];
  uint64_t v46 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v45, v42, v46, v44);
}

void sub_249F885D0()
{
  sub_249F75BD8(v0 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace);
}

id sub_249F88610()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalogClockFaceViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AnalogClockFaceViewController()
{
  return self;
}

uint64_t sub_249F886B4(uint64_t a1)
{
  uint64_t result = sub_249F88800(&qword_26974FEF8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249F886F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look;
  swift_beginAccess();
  return sub_249F75B7C(v3, a1);
}

uint64_t sub_249F8874C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look;
  swift_beginAccess();
  sub_249F88840(a1, v3);
  swift_endAccess();
  sub_249F8728C();
  return sub_249F75BD8(a1);
}

uint64_t sub_249F887BC(uint64_t a1)
{
  uint64_t result = sub_249F88800(&qword_26974FF00);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_249F88800(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AnalogClockFaceViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F88840(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_249F8889C(void *a1)
{
  uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace);
  uint64_t v4 = OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_trailingComplicationView;
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_trailingComplicationView];
  if (!a1)
  {
    if (!v5) {
      return;
    }

    int v8 = *(void **)&v3[v4];
    if (v8) {
      goto LABEL_5;
    }
LABEL_8:
    id v11 = a1;
    uint64_t v10 = 0;
    goto LABEL_9;
  }
  if (!v5) {
    goto LABEL_8;
  }
  sub_249F88C30();
  id v6 = v5;
  char v7 = sub_24A057938();

  if (v7) {
    return;
  }
  int v8 = *(void **)&v3[v4];
  if (!v8) {
    goto LABEL_8;
  }
LABEL_5:
  id v9 = a1;
  objc_msgSend(v8, sel_removeFromSuperview);
  uint64_t v10 = *(void **)&v3[v4];
LABEL_9:
  *(void *)&v3[v4] = a1;
  id v14 = a1;

  objc_super v12 = *(void **)&v3[v4];
  if (v12)
  {
    id v13 = v12;
    objc_msgSend(v3, sel_addSubview_, v13);
    sub_24A017F50();
  }
  objc_msgSend(v3, sel_setNeedsLayout);
}

uint64_t sub_249F889DC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249F88A14()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_249F88A54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249F87B10(a1, v4, v5, v6);
}

uint64_t sub_249F88B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F88B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Alarm();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F88BD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Alarm();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249F88C30()
{
  unint64_t result = qword_26974FF38;
  if (!qword_26974FF38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26974FF38);
  }
  return result;
}

void sub_249F88C70(char a1, unsigned __int8 *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24A056548();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *a2;
  if (v11 == 2)
  {
    if (a3)
    {
      id v17 = objc_msgSend(v4, sel_window);

      if (v17)
      {
        id v18 = objc_msgSend(v4, sel_superview);

        if (v18)
        {
          id v14 = self;
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v4;
          *(unsigned char *)(v19 + 24) = a1 & 1;
          id v29 = sub_249F896C0;
          uint64_t v30 = v19;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v26 = 1107296256;
          uint64_t v16 = &block_descriptor_2;
          goto LABEL_11;
        }
      }
    }
    type metadata accessor for RedModeCustomColorTrait();
    MEMORY[0x24C5B9100]();
    uint64_t v23 = &qword_26974FF48;
    uint64_t v24 = type metadata accessor for RedModeCustomColorTrait;
    goto LABEL_16;
  }
  if (v11 == 1)
  {
    if (a3)
    {
      id v12 = objc_msgSend(v4, sel_window);

      if (v12)
      {
        id v13 = objc_msgSend(v4, sel_superview);

        if (v13)
        {
          id v14 = self;
          uint64_t v15 = swift_allocObject();
          *(void *)(v15 + 16) = v4;
          *(unsigned char *)(v15 + 24) = a1 & 1;
          id v29 = sub_249F89780;
          uint64_t v30 = v15;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v26 = 1107296256;
          uint64_t v16 = &block_descriptor_16;
LABEL_11:
          id v27 = sub_249F892E0;
          os_log_type_t v28 = v16;
          uint64_t v20 = _Block_copy(&aBlock);
          id v21 = v4;
          swift_release();
          objc_msgSend(v14, sel_transitionWithView_duration_options_animations_completion_, v21, 5242882, v20, 0, 1.2, aBlock, v26);
          _Block_release(v20);
          return;
        }
      }
    }
    type metadata accessor for RedModeTrait();
    MEMORY[0x24C5B9100]();
    uint64_t v23 = &qword_26974FF50;
    uint64_t v24 = type metadata accessor for RedModeTrait;
LABEL_16:
    sub_249F8973C(v23, (void (*)(void))v24);
    sub_24A056558();
    MEMORY[0x24C5B9110](v10);
    return;
  }
  if (a1) {
    uint64_t v22 = sel_amui_applyRedModeFilterAnimated_withCompletion_;
  }
  else {
    uint64_t v22 = sel_amui_clearRedModeFilterAnimated_withCompletion_;
  }

  objc_msgSend(v4, v22, a3 & 1, 0);
}

uint64_t RedModeRenderingMethod.hash(into:)()
{
  return sub_24A057E38();
}

BOOL static RedModeRenderingMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RedModeRenderingMethod.hashValue.getter()
{
  return sub_24A057E68();
}

unint64_t sub_249F89098()
{
  unint64_t result = qword_26974FF40;
  if (!qword_26974FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FF40);
  }
  return result;
}

uint64_t dispatch thunk of RedModeSupporting.isDisplayStyleRedMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RedModeSupporting.isDisplayStyleRedMode.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RedModeSupporting.isDisplayStyleRedMode.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RedModeSupporting.redModeRenderingMethod.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unsigned char *storeEnumTagSinglePayload for RedModeRenderingMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249F89208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RedModeRenderingMethod()
{
  return &type metadata for RedModeRenderingMethod;
}

uint64_t sub_249F89240()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RedModeTrait()
{
  return self;
}

unint64_t sub_249F89274()
{
  return 0xD000000000000022;
}

uint64_t type metadata accessor for RedModeCustomColorTrait()
{
  return self;
}

unint64_t sub_249F892C4()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_249F892E0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_249F89324(void *a1, uint64_t a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(void))
{
  uint64_t v9 = sub_24A056548();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v10);
  MEMORY[0x24C5B9100]();
  sub_249F8973C(a4, a5);
  sub_24A056558();
  MEMORY[0x24C5B9110](v12);
  objc_msgSend(a1, sel_updateTraitsIfNeeded);
  return objc_msgSend(a1, sel_layoutIfNeeded);
}

id sub_249F89424(uint64_t a1, void *a2)
{
  type metadata accessor for RedModeTrait();
  sub_249F8973C(&qword_26974FF50, (void (*)(void))type metadata accessor for RedModeTrait);
  if (sub_24A057888()) {
    return sub_249F894CC();
  }

  return a2;
}

id sub_249F894CC()
{
  v5[1] = *(double *)MEMORY[0x263EF8340];
  double v4 = 0.0;
  v5[0] = 0.0;
  objc_msgSend(v0, sel_getHue_saturation_brightness_alpha_, 0, 0, v5, &v4);
  double v1 = v4 * v5[0] * 0.5 + 0.5;
  if (v1 > 1.0) {
    double v1 = 1.0;
  }
  if (v1 < 0.0) {
    double v2 = 0.0;
  }
  else {
    double v2 = v1;
  }
  return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, v2, 0.0, 0.0, 1.0);
}

id sub_249F89594(double a1, uint64_t a2, void *a3)
{
  type metadata accessor for RedModeCustomColorTrait();
  sub_249F8973C(&qword_26974FF48, (void (*)(void))type metadata accessor for RedModeCustomColorTrait);
  if (sub_24A057888())
  {
    id v4 = objc_allocWithZone(MEMORY[0x263F825C8]);
    return objc_msgSend(v4, sel_initWithRed_green_blue_alpha_, a1 / 255.0, 0.0, 0.0, 1.0);
  }
  else
  {
    return a3;
  }
}

uint64_t sub_249F89688()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

id sub_249F896C0()
{
  return sub_249F89324(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (void (*)(uint64_t))type metadata accessor for RedModeCustomColorTrait, &qword_26974FF48, (void (*)(void))type metadata accessor for RedModeCustomColorTrait);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_249F8973C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_249F89780()
{
  return sub_249F89324(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (void (*)(uint64_t))type metadata accessor for RedModeTrait, &qword_26974FF50, (void (*)(void))type metadata accessor for RedModeTrait);
}

uint64_t sub_249F897E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A056EA8();
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 0:
      (*(void (**)(char *, void, __n128))(v5 + 104))(v8, *MEMORY[0x263F1B388], v6);
      v9.n128_u64[0] = 0x3FD999999999999ALL;
      goto LABEL_6;
    case 1:
      (*(void (**)(char *, void, __n128))(v5 + 104))(v8, *MEMORY[0x263F1B388], v6);
      v9.n128_u64[0] = 0x3FE3333333333333;
      goto LABEL_6;
    case 2:
      (*(void (**)(char *, void, __n128))(v5 + 104))(v8, *MEMORY[0x263F1B388], v6);
      v9.n128_u64[0] = 0x3FE999999999999ALL;
      goto LABEL_6;
    case 3:
      (*(void (**)(char *, void, __n128))(v5 + 104))(v8, *MEMORY[0x263F1B388], v6);
      v9.n128_u64[0] = 1.0;
LABEL_6:
      MEMORY[0x24C5B8780](v8, v9, 0.0, 0.0, 1.0);
      break;
    default:
      return a1;
  }
  return a1;
}

uint64_t *sub_249F899A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    __n128 v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    __n128 v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24A0563F8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    id v12 = v6;
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_249F89A98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24A0563F8();
  __n128 v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_249F89B18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24A0563F8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  id v11 = v5;
  v10(v7, v8, v9);
  return a1;
}

void *sub_249F89BBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = sub_24A0563F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_249F89C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_249F89CF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24A0563F8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_249F89D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249F89DA0);
}

uint64_t sub_249F89DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24A0563F8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_249F89E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249F89E64);
}

uint64_t sub_249F89E64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24A0563F8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for City()
{
  uint64_t result = qword_26974FF58;
  if (!qword_26974FF58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249F89F58()
{
  uint64_t result = sub_24A0563F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249F89FFC()
{
  return sub_249F8A3B8(&qword_26974FF68, (void (*)(uint64_t))type metadata accessor for City);
}

uint64_t sub_249F8A048()
{
  sub_24A057E28();
  swift_bridgeObjectRetain();
  sub_24A057408();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_24A057948();

  sub_24A0563F8();
  sub_249F8A3B8((unint64_t *)&unk_269751570, MEMORY[0x263F079C8]);
  sub_24A057318();
  return sub_24A057E68();
}

uint64_t sub_249F8A128()
{
  swift_bridgeObjectRetain();
  sub_24A057408();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_24A057948();

  sub_24A0563F8();
  sub_249F8A3B8((unint64_t *)&unk_269751570, MEMORY[0x263F079C8]);
  return sub_24A057318();
}

uint64_t sub_249F8A1F8()
{
  sub_24A057E28();
  swift_bridgeObjectRetain();
  sub_24A057408();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_24A057948();

  sub_24A0563F8();
  sub_249F8A3B8((unint64_t *)&unk_269751570, MEMORY[0x263F079C8]);
  sub_24A057318();
  return sub_24A057E68();
}

uint64_t sub_249F8A2D4(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_24A057D48() & 1) != 0)
  {
    sub_249F8A378();
    if (sub_24A057938())
    {
      type metadata accessor for City();
      JUMPOUT(0x24C5B7BF0);
    }
  }
  return 0;
}

unint64_t sub_249F8A378()
{
  unint64_t result = qword_269752090;
  if (!qword_269752090)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269752090);
  }
  return result;
}

uint64_t sub_249F8A3B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ClockFaceKind.suggestedLooks.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_249F84708();
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_24A05A510;
      sub_249FEA0D0(v2 + 32);
      goto LABEL_10;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C0);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_24A05A580;
      sub_249FE9DC0(v2 + 32);
      sub_249FE9AF8(186, 119, 186, 233, 137, 120, v2 + 136);
      sub_249FE9AF8(215, 126, 79, 255, 246, 170, v2 + 240);
      sub_249FE9AF8(223, 179, 103, 223, 254, 190, v2 + 344);
      sub_249FE9AF8(185, 207, 140, 217, 243, 255, v2 + 448);
      sub_249FE9AF8(161, 181, 211, 248, 223, 255, v2 + 552);
      sub_249FE9F44(v2 + 656);
LABEL_10:
      uint64_t result = v2;
      break;
    case 4:
      uint64_t result = sub_249F84F24();
      break;
    default:
      uint64_t result = sub_249F84A58();
      break;
  }
  return result;
}

uint64_t ClockFaceKind.rawValue.getter()
{
  uint64_t result = 0x6C617469676964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676F6C616E61;
      break;
    case 2:
      uint64_t result = 0x646C726F77;
      break;
    case 3:
      uint64_t result = 0x72616C6F73;
      break;
    case 4:
      uint64_t result = 2036427888;
      break;
    default:
      return result;
  }
  return result;
}

void *static ClockFaceKind.orderedStockKinds.getter()
{
  return &unk_26FDE5CF8;
}

uint64_t ClockFaceKind.newConfiguration()@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 97) = *v1;
  uint64_t result = ClockFaceKind.suggestedLooks.getter();
  if (*(void *)(result + 16))
  {
    sub_249F75B7C(result + 32, a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

ClockPoster::ClockFaceKind_optional __swiftcall ClockFaceKind.init(rawValue:)(Swift::String rawValue)
{
  return (ClockPoster::ClockFaceKind_optional)sub_249F8AAFC(v1);
}

void *static ClockFaceKind.allCases.getter()
{
  return &unk_26FDE5DB8;
}

ClockPoster::ClockFaceKind_optional sub_249F8A6E0(Swift::String *a1)
{
  return ClockFaceKind.init(rawValue:)(*a1);
}

void sub_249F8A6EC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6C617469676964;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x676F6C616E61;
      goto LABEL_3;
    case 2:
      *a1 = 0x646C726F77;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x72616C6F73;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 2036427888;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_249F8A794()
{
  return sub_24A057E68();
}

uint64_t sub_249F8A878()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249F8A944()
{
  return sub_24A057E68();
}

uint64_t sub_249F8AA24(unsigned __int8 *a1, char *a2)
{
  return sub_24A012094(*a1, *a2);
}

uint64_t sub_249F8AA30()
{
  return sub_24A057528();
}

uint64_t sub_249F8AA90()
{
  return sub_24A057518();
}

void sub_249F8AAE0(void *a1@<X8>)
{
  *a1 = &unk_26FDE5DE0;
}

ClockPoster::ClockFaceKind::DescriptorLocalizedStringKey_optional __swiftcall ClockFaceKind.DescriptorLocalizedStringKey.init(rawValue:)(Swift::String rawValue)
{
  return (ClockPoster::ClockFaceKind::DescriptorLocalizedStringKey_optional)sub_249F8AAFC(v1);
}

uint64_t sub_249F8AAFC@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_24A057C38();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t ClockFaceKind.DescriptorLocalizedStringKey.rawValue.getter()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
    case 3:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249F8ABF4(char *a1, char *a2)
{
  return sub_24A0123D4(*a1, *a2);
}

uint64_t sub_249F8AC00()
{
  return sub_24A004954();
}

uint64_t sub_249F8AC08()
{
  return sub_249FEEDE8();
}

uint64_t sub_249F8AC10()
{
  return sub_249FEEF10();
}

ClockPoster::ClockFaceKind::DescriptorLocalizedStringKey_optional sub_249F8AC18(Swift::String *a1)
{
  return ClockFaceKind.DescriptorLocalizedStringKey.init(rawValue:)(*a1);
}

unint64_t sub_249F8AC24@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ClockFaceKind.DescriptorLocalizedStringKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void ClockFaceKind.displayNameLocalizedStringKey.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x402030001uLL >> (8 * *v1);
}

unint64_t sub_249F8AC70()
{
  unint64_t result = qword_26974FF70;
  if (!qword_26974FF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FF70);
  }
  return result;
}

unint64_t sub_249F8ACC8()
{
  unint64_t result = qword_26974FF78;
  if (!qword_26974FF78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FF78);
  }
  return result;
}

unint64_t sub_249F8AD28()
{
  unint64_t result = qword_26974FF88;
  if (!qword_26974FF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FF88);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceKind()
{
  return &type metadata for ClockFaceKind;
}

uint64_t getEnumTagSinglePayload for LocationStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11ClockPoster13ClockFaceKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249F8AEF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceKind.DescriptorLocalizedStringKey()
{
  return &type metadata for ClockFaceKind.DescriptorLocalizedStringKey;
}

unint64_t sub_249F8AF28()
{
  unint64_t result = qword_26974FF90;
  if (!qword_26974FF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FF90);
  }
  return result;
}

id sub_249F8AF84(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, double a7, double a8)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  uint64_t v16 = result;
  if ((a1 & 1) == 0) {
    a8 = 0.0;
  }
  uint64_t v17 = *(void *)(a2 + 16);
  if (v17)
  {
    uint64_t v33 = a3;
    sub_249F7AF70(a5);
    uint64_t v18 = qword_26974F368;
    swift_bridgeObjectRetain();
    if (v18 != -1) {
LABEL_35:
    }
      swift_once();
    uint64_t v19 = 0;
    uint64_t v20 = (double *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      UIPointRoundToScale();
      double v24 = v23;
      uint64_t v26 = v25;
      if ((a6 & 1) != 0 || (v23 > 4.0 ? (BOOL v27 = v23 < a7 + -4.0) : (BOOL v27 = 0), v27))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = (double *)sub_249FBA3E4(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v29 = *((void *)v20 + 2);
        unint64_t v28 = *((void *)v20 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v20 = (double *)sub_249FBA3E4((void *)(v28 > 1), v29 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v29 + 1;
        id v21 = &v20[2 * v29];
        v21[4] = v24;
        *((void *)v21 + 5) = v26;
      }
      ++v19;
    }
    while (v22 != v17);
    sub_249F8B2B8(a5);
    id result = (id)swift_bridgeObjectRelease();
    a3 = v33;
    if ((a4 & 1) == 0) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v20 = (double *)MEMORY[0x263F8EE78];
    if ((a4 & 1) == 0)
    {
LABEL_20:
      uint64_t v30 = (double *)sub_249FC9AE8((uint64_t)v20, a3);
      id result = (id)swift_bridgeObjectRelease();
      uint64_t v20 = v30;
    }
  }
  if (a6)
  {
    objc_msgSend(v16, sel_moveToPoint_, 0.0, a8);
  }
  else
  {
    if (!*((void *)v20 + 2))
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v16, sel_moveToPoint_, v20[4], v20[5]);
  }
  uint64_t v31 = *((void *)v20 + 2);
  if (v31)
  {
    swift_bridgeObjectRetain();
    unint64_t v32 = v20 + 5;
    do
    {
      objc_msgSend(v16, sel_addLineToPoint_, *(v32 - 1), *v32);
      v32 += 2;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a6)
  {
    objc_msgSend(v16, sel_addLineToPoint_, a7, a8);
    objc_msgSend(v16, sel_addLineToPoint_, 0.0, a8);
  }
  return v16;
}

uint64_t sub_249F8B2B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_249F8B2F0(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = sub_24A0568D8();
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A056878();
  MEMORY[0x270FA5388](v8 - 8);
  objc_msgSend(a2, sel_capHeight);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF98);
  sub_24A0568A8();
  if ((a3 & 0x80) != 0)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A05A4C0;
    sub_24A056868();
    sub_24A0568B8();
    sub_24A056838();
    sub_24A0568B8();
    sub_24A056868();
    sub_24A0568B8();
    sub_24A056838();
  }
  else
  {
    int v13 = a3;
    uint64_t v12 = a2;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A05B7A0;
    sub_24A056838();
    sub_24A0568B8();
    v11[1] = v7;
    sub_24A056858();
    sub_24A0568B8();
    sub_24A056848();
    sub_24A0568B8();
    sub_24A056868();
    sub_24A0568B8();
    sub_24A056838();
    sub_24A0568B8();
    sub_24A056858();
    sub_24A0568B8();
    sub_24A056848();
    sub_24A0568B8();
    sub_24A056868();
    a2 = v12;
  }
  sub_24A0568B8();
  uint64_t v9 = sub_24A0571B8();
  sub_24A0568C8();
  sub_24A0568E8();

  return v9;
}

uint64_t initializeBufferWithCopyOfBuffer for TimeTransition(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for TimeTransition(id *a1)
{
}

uint64_t assignWithCopy for TimeTransition(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for TimeTransition(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for TimeTransition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 8) & 0x7E | (*(unsigned __int8 *)(a1 + 8) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TimeTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)id result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)id result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_249F8B99C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 7;
}

uint64_t sub_249F8B9A8(uint64_t result)
{
  *(unsigned char *)(result + 8) &= ~0x80u;
  return result;
}

uint64_t sub_249F8B9B8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TimeTransition()
{
  return &type metadata for TimeTransition;
}

uint64_t sub_249F8B9E0()
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v0 = 5;
  do
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    MEMORY[0x24C5B8D50]();
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_24A057598();
    }
    sub_24A0575B8();
    sub_24A057588();
    --v0;
  }
  while (v0);
  return v2;
}

void sub_249F8BAA0()
{
  uint64_t v3 = *(void *)(v0 + 32);
  if (v3)
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v3 >> 62) {
      goto LABEL_30;
    }
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v5)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x24C5B92B0](0, v3);
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_37;
        }
        id v6 = *(id *)(v3 + 32);
      }
      id v1 = v6;
      uint64_t v0 = *(void *)(v0 + 16);
      unint64_t v2 = (unint64_t)v0 >> 62;
      if (!((unint64_t)v0 >> 62))
      {
        if (*(uint64_t *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
          goto LABEL_38;
        }
        goto LABEL_9;
      }
LABEL_37:
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24A057BD8();
      swift_bridgeObjectRelease();
      if (v15 < 1)
      {
LABEL_38:

        break;
      }
LABEL_9:
      unint64_t v7 = 0;
      if (v0 < 0) {
        uint64_t v8 = v0;
      }
      else {
        uint64_t v8 = v0 & 0xFFFFFFFFFFFFFF8;
      }
      uint64_t v16 = v8;
      uint64_t v9 = v5 - 1;
      while (1)
      {
        if ((v0 & 0xC000000000000001) != 0)
        {
          id v11 = (id)MEMORY[0x24C5B92B0](v7, v0);
        }
        else
        {
          if (v7 >= *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_28;
          }
          id v11 = *(id *)(v0 + 8 * v7 + 32);
        }
        uint64_t v12 = v11;
        objc_msgSend(v11, sel_setTextColor_, v1, v16);

        if (v9 == v7) {
          goto LABEL_39;
        }
        unint64_t v13 = v7 + 1;
        if ((v3 & 0xC000000000000001) != 0)
        {
          id v14 = (id)MEMORY[0x24C5B92B0](v7 + 1, v3);
        }
        else
        {
          if (v13 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_29;
          }
          id v14 = *(id *)(v3 + 8 * v7 + 40);
        }
        id v1 = v14;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v2)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = sub_24A057BD8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v10 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if ((uint64_t)++v7 >= v10) {
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      if (v3 >= 0) {
        id v1 = (void *)v4;
      }
      else {
        id v1 = (void *)v3;
      }
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_24A057BD8();
    }
LABEL_39:
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_249F8BCB8()
{
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TimeString(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (void *)((char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = v1 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_249F8C268(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_249F8C2D0((uint64_t)v4);
    unint64_t v1 = *(void *)(v1 + 16);
    if (!(v1 >> 62))
    {
      uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v10) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_249F6C538((uint64_t)v4, (uint64_t)v8);
    uint64_t v15 = sub_24A057418();
    uint64_t v16 = *v8;
    unint64_t v17 = v8[1];
    if (v15 == 2)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v28 = 9142498;
      unint64_t v29 = 0xA300000000000000;
      sub_24A057438();
      uint64_t v16 = v28;
      unint64_t v17 = v29;
    }
    uint64_t v18 = HIBYTE(v17) & 0xF;
    uint64_t v28 = v16;
    unint64_t v29 = v17;
    if ((v17 & 0x2000000000000000) == 0) {
      uint64_t v18 = v16 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 0;
    uint64_t v31 = v18;
    sub_24A057448();
    if (!v19)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      return sub_249F8C330((uint64_t)v8);
    }
    uint64_t v20 = 0;
    while (!__OFADD__(v20, 1))
    {
      unint64_t v21 = *(void *)(v1 + 16);
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_24A057BD8();
        swift_bridgeObjectRelease();
        if (v20 >= v26)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
      else if (v20 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      if ((v21 & 0xC000000000000001) != 0)
      {
        id v22 = (id)MEMORY[0x24C5B92B0](v20, v21);
      }
      else
      {
        if ((unint64_t)v20 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_31;
        }
        id v22 = *(id *)(v21 + 8 * v20 + 32);
      }
      double v23 = v22;
      v27[1] = 0;
      v27[2] = 0xE000000000000000;
      sub_24A057338();
      swift_bridgeObjectRelease();
      double v24 = (void *)sub_24A057368();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_setText_, v24);

      objc_msgSend(v23, sel_sizeToFit);
      sub_24A057448();
      ++v20;
      if (!v25) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24A057BD8();
  uint64_t v10 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_4:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x24C5B92B0](i, v1);
      }
      else {
        id v13 = *(id *)(v1 + 8 * i + 32);
      }
      id v14 = v13;
      objc_msgSend(v13, sel_setText_, 0);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_249F8C094()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_249F8C2D0(v0 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString);

  return swift_deallocClassInstance();
}

uint64_t sub_249F8C110()
{
  return type metadata accessor for RollingTimeLabel();
}

uint64_t type metadata accessor for RollingTimeLabel()
{
  uint64_t result = qword_26974FFA0;
  if (!qword_26974FFA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249F8C164()
{
  sub_249F8C210();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_249F8C210()
{
  if (!qword_26974F3B0)
  {
    type metadata accessor for TimeString(255);
    unint64_t v0 = sub_24A057968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26974F3B0);
    }
  }
}

uint64_t sub_249F8C268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F8C2D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249F8C330(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249F8C38C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a1;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500A0);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v26 - v8);
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v27 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_5:
    uint64_t v18 = *(void *)(a3 + 56);
    uint64_t v19 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = type metadata accessor for WorldViewModel.Pin(0);
    sub_249F9C310(v18 + *(void *)(*(void *)(v22 - 8) + 72) * v17, (uint64_t)v9 + *(int *)(v29 + 48), type metadata accessor for WorldViewModel.Pin);
    *uint64_t v9 = v20;
    v9[1] = v21;
    sub_249F6E664((uint64_t)v9, (uint64_t)v6, &qword_2697500A0);
    v30(v6);
    uint64_t result = sub_249F6E790((uint64_t)v6, &qword_2697500A0);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v15++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v15 >= v28) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v15);
  if (v24)
  {
LABEL_19:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v17 = __clz(__rbit64(v24)) + (v15 << 6);
    goto LABEL_5;
  }
  int64_t v25 = v15 + 1;
  if (v15 + 1 >= v28) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v15 + 2;
  if (v15 + 2 >= v28) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v15 + 3;
  if (v15 + 3 >= v28) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v15 + 4;
  if (v15 + 4 >= v28) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
LABEL_18:
    int64_t v15 = v25;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v28) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v27 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_249F8C634()
{
  return 1;
}

uint64_t sub_249F8C63C()
{
  return sub_24A057E68();
}

uint64_t sub_249F8C680()
{
  return sub_24A057E38();
}

uint64_t sub_249F8C6A8()
{
  return sub_24A057E68();
}

uint64_t sub_249F8C6E8()
{
  return 1802465132;
}

uint64_t sub_249F8C6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1802465132 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24A057D48();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249F8C780()
{
  return 0;
}

void sub_249F8C78C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_249F8C798(uint64_t a1)
{
  unint64_t v2 = sub_249F9AB14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249F8C7D4(uint64_t a1)
{
  unint64_t v2 = sub_249F9AB14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249F8C810@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750060);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249F9AB14();
  sub_24A057EB8();
  if (!v2)
  {
    sub_249F9AB68();
    sub_24A057C88();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_249F7B58C((uint64_t)v14, (uint64_t)v15);
    long long v9 = v15[5];
    *(_OWORD *)(a2 + 64) = v15[4];
    *(_OWORD *)(a2 + 80) = v9;
    *(unsigned char *)(a2 + 96) = v16;
    long long v10 = v15[1];
    *(_OWORD *)a2 = v15[0];
    *(_OWORD *)(a2 + 16) = v10;
    long long v11 = v15[3];
    *(_OWORD *)(a2 + 32) = v15[2];
    *(_OWORD *)(a2 + 48) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_249F8C9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249F7B58C(a1, a2);
}

uint64_t sub_249F8C9AC@<X0>(uint64_t a1@<X8>)
{
  return sub_249F75B7C(v1, a1);
}

uint64_t sub_249F8C9B8(uint64_t a1)
{
  return sub_249F9AAB8(a1, v1);
}

uint64_t (*sub_249F8C9C0())()
{
  return CGSizeMake;
}

uint64_t sub_249F8C9E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249F8C810(a1, a2);
}

uint64_t sub_249F8C9F8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750078);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249F9AB14();
  sub_24A057EC8();
  sub_249F9ABBC();
  sub_24A057CD8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249F8CB3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RollingClockViewModel();
  swift_allocObject();
  *(void *)(v1 + 120) = sub_249F6491C();
  swift_allocObject();
  *(void *)(v1 + 128) = sub_249F6491C();
  *(_WORD *)(v1 + 176) = 256;
  *(void *)(v1 + 336) = MEMORY[0x263F8EE78];
  uint64_t v7 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  uint64_t v8 = type metadata accessor for WorldViewModel.Pin(0);
  long long v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin, 1, 1, v8);
  *(void *)(v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate) = MEMORY[0x263F8EE80];
  uint64_t v10 = v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 24) = 0;
  uint64_t v11 = v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  uint64_t v12 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask) = 0;
  sub_24A0564A8();
  sub_249F77BF0(a1, v2 + 16);
  uint64_t v56 = a1;
  uint64_t v13 = ClockFaceLook.identifier.getter();
  sub_249F9B030(v13, v14, (uint64_t)&v59);
  swift_bridgeObjectRelease();
  int64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_mainScreen);
  objc_msgSend(v16, sel_bounds);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  id v25 = objc_msgSend(v15, sel_mainScreen);
  id v26 = objc_msgSend(v25, sel_traitCollection);

  objc_msgSend(v26, sel_displayScale);
  sub_24A0537E4(v57, v18, v20, v22, v24, 40.666, 95.0, 44.667, 41.0);
  long long v27 = v57[1];
  *(_OWORD *)(v2 + 144) = v57[0];
  *(_OWORD *)(v2 + 160) = v27;
  long long v28 = v65;
  long long v29 = v67;
  *(_OWORD *)(v2 + 296) = v66;
  *(_OWORD *)(v2 + 312) = v29;
  long long v30 = v62;
  *(_OWORD *)(v2 + 216) = v61;
  *(_OWORD *)(v2 + 232) = v30;
  long long v31 = v64;
  *(_OWORD *)(v2 + 248) = v63;
  uint64_t v32 = v58;
  *(void *)(v2 + 328) = v68;
  *(_OWORD *)(v2 + 264) = v31;
  *(_OWORD *)(v2 + 280) = v28;
  long long v33 = v60;
  *(_OWORD *)(v2 + 184) = v59;
  *(_OWORD *)(v2 + 200) = v33;
  *(unsigned char *)(v2 + 136) = v32 == 1;
  uint64_t v34 = sub_24A057628();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  v35(v6, 1, 1, v34);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  sub_24A057608();
  sub_249F7AF70((uint64_t)&v59);
  swift_retain();
  uint64_t v37 = sub_24A0575F8();
  os_log_t v38 = (void *)swift_allocObject();
  uint64_t v39 = MEMORY[0x263F8F500];
  v38[2] = v37;
  v38[3] = v39;
  v38[4] = v36;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_2697500B8, (uint64_t)v38);
  swift_release();
  v35(v6, 1, 1, v34);
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v41 = sub_24A0575F8();
  uint64_t v42 = (void *)swift_allocObject();
  v42[2] = v41;
  void v42[3] = MEMORY[0x263F8F500];
  v42[4] = v40;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_2697500C8, (uint64_t)v42);
  swift_release();
  v35(v6, 1, 1, v34);
  uint64_t v43 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v44 = sub_24A0575F8();
  uint64_t v45 = (void *)swift_allocObject();
  v45[2] = v44;
  uint64_t v46 = MEMORY[0x263F8F500];
  void v45[3] = MEMORY[0x263F8F500];
  v45[4] = v43;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_2697500D8, (uint64_t)v45);
  swift_release();
  v35(v6, 1, 1, v34);
  uint64_t v47 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v48 = sub_24A0575F8();
  uint64_t v49 = swift_allocObject();
  long long v50 = v66;
  *(_OWORD *)(v49 + 136) = v65;
  *(_OWORD *)(v49 + 152) = v50;
  *(_OWORD *)(v49 + 168) = v67;
  long long v51 = v62;
  *(_OWORD *)(v49 + 72) = v61;
  *(_OWORD *)(v49 + 88) = v51;
  long long v52 = v64;
  *(_OWORD *)(v49 + 104) = v63;
  *(_OWORD *)(v49 + 120) = v52;
  long long v53 = v60;
  *(_OWORD *)(v49 + 40) = v59;
  *(void *)(v49 + 16) = v48;
  *(void *)(v49 + 24) = v46;
  *(void *)(v49 + 32) = v47;
  *(void *)(v49 + 184) = v68;
  *(_OWORD *)(v49 + 56) = v53;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_2697500E8, v49);
  swift_release();
  if (qword_26974F338 != -1) {
    swift_once();
  }
  sub_24A022ABC();
  sub_249F77C70(v56);
  return v2;
}

uint64_t sub_249F8D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750120);
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750128);
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_24A057608();
  v4[18] = sub_24A0575F8();
  uint64_t v8 = sub_24A0575D8();
  v4[19] = v8;
  v4[20] = v7;
  return MEMORY[0x270FA2498](sub_249F8D3A0, v8, v7);
}

uint64_t sub_249F8D3A0()
{
  if (qword_26974F2C8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752368;
  *(void *)(v0 + 168) = qword_269752368;
  return MEMORY[0x270FA2498](sub_249F8D438, v1, 0);
}

uint64_t sub_249F8D438()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[13];
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream);
  swift_retain();
  sub_249FF0EFC(v3, v1, v2);
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[20];
  return MEMORY[0x270FA2498](sub_249F8D4C8, v4, v5);
}

uint64_t sub_249F8D4C8()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  uint64_t v4 = sub_24A0575F8();
  v0[23] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249F8D5E8;
  uint64_t v6 = v0[14];
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 2, v4, v7, v6);
}

uint64_t sub_249F8D5E8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_249F8D72C, v3, v2);
}

uint64_t sub_249F8D72C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 40);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    swift_release();
    sub_249F9C378(v2, v1);
    goto LABEL_8;
  }
  uint64_t v6 = Strong;
  uint64_t v7 = v3;
  uint64_t v8 = *(void *)(v0 + 176);
  swift_getKeyPath();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v2;
  *(void *)(v9 + 32) = v1;
  *(void *)(v9 + 40) = v7;
  *(unsigned char *)(v9 + 48) = v4;
  *(void *)(v0 + 72) = v6;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  sub_249F9C378(v2, v1);
  swift_release();
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 176) = v8;
  uint64_t v10 = sub_24A0575F8();
  *(void *)(v0 + 184) = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_249F8D5E8;
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v13 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 16, v10, v13, v12);
}

uint64_t sub_249F8D9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750110);
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750118);
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_24A057608();
  v4[19] = sub_24A0575F8();
  uint64_t v8 = sub_24A0575D8();
  v4[20] = v8;
  v4[21] = v7;
  return MEMORY[0x270FA2498](sub_249F8DB28, v8, v7);
}

uint64_t sub_249F8DB28()
{
  if (qword_26974F338 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = qword_269752440;
  swift_retain();
  uint64_t v5 = swift_retain();
  sub_249FF14D8(v5, v4, v1);
  swift_release();
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  uint64_t v6 = sub_24A0575F8();
  v0[23] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[24] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_249F8DCBC;
  uint64_t v8 = v0[15];
  uint64_t v9 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 8, v6, v9, v8);
}

uint64_t sub_249F8DCBC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_249F8DE00, v3, v2);
}

uint64_t sub_249F8DE00()
{
  uint64_t v1 = v0[8];
  if (v1 == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_release();
    sub_249F9BA08(v1);
    goto LABEL_7;
  }
  uint64_t v3 = Strong;
  swift_getKeyPath();
  v0[10] = v3;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  v0[9] = sub_249F8E0C8(v4);
  uint64_t v5 = v0[22];
  if (v1)
  {
    swift_retain();
    sub_249F9BA18(v1, (uint64_t)(v0 + 9), v3);
    swift_release();
    sub_249F9BA08(v1);
  }
  swift_retain();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_249F9BCC4(v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_249F935AC();
  sub_249F939C8();
  swift_release();
  swift_bridgeObjectRelease();
  v0[22] = v5;
  uint64_t v9 = sub_24A0575F8();
  v0[23] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[24] = v10;
  void *v10 = v0;
  v10[1] = sub_249F8DCBC;
  uint64_t v11 = v0[15];
  uint64_t v12 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 8, v9, v12, v11);
}

uint64_t sub_249F8E0C8(uint64_t a1)
{
  type metadata accessor for CLLocationCoordinate2D(0);
  sub_249F968DC(&qword_269750040, type metadata accessor for CLLocationCoordinate2D);
  uint64_t result = sub_24A057708();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_249F9A160(&v14, *(double *)(*(void *)(a1 + 48) + 16 * v10), *(double *)(*(void *)(a1 + 48) + 16 * v10 + 8));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_249F8E27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v41 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v7 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v40 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  int64_t v11 = &v38[-v10];
  *(void *)&double v13 = MEMORY[0x270FA5388](v12).n128_u64[0];
  uint64_t v15 = &v38[-v14];
  uint64_t v16 = *(void **)(a1 + 16);
  objc_msgSend(v16, sel_coordinate, v13);
  sub_249F9A3E0(v17, v18);
  sub_249F94BC0((uint64_t *)a1, (uint64_t)v15);
  objc_msgSend(v16, sel_coordinate);
  double v20 = v19;
  double v22 = v21;
  swift_getKeyPath();
  uint64_t v43 = a3;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  double v23 = (uint64_t *)(a3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  uint64_t v24 = *v23;
  if (*(void *)(*v23 + 16))
  {
    unint64_t v25 = sub_24A0155B8(v20, v22);
    if (v26)
    {
      uint64_t v27 = *(void *)(v24 + 56) + *(void *)(v7 + 72) * v25;
      long long v28 = v40;
      sub_249F9C310(v27, (uint64_t)v40, type metadata accessor for WorldViewModel.Pin);
      sub_249F9B914((uint64_t)v28, (uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
      v15[17] = v11[17];
      uint64_t v29 = v44;
      long long v30 = &v11[*(int *)(v44 + 36)];
      uint64_t v40 = *(unsigned char **)v30;
      int v39 = v30[8];
      sub_249F9B97C((uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
      long long v31 = &v15[*(int *)(v29 + 36)];
      *(void *)long long v31 = v40;
      v31[8] = v39;
    }
  }
  objc_msgSend(*(id *)(a1 + 16), sel_coordinate);
  double v33 = v32;
  double v35 = v34;
  uint64_t v36 = v41;
  sub_249F9C310((uint64_t)v15, (uint64_t)v41, type metadata accessor for WorldViewModel.Pin);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v36, 0, 1, v44);
  swift_getKeyPath();
  uint64_t v42 = a3;
  sub_24A056478();
  swift_release();
  uint64_t v42 = a3;
  swift_getKeyPath();
  sub_24A056498();
  swift_release();
  swift_beginAccess();
  sub_249FEF304((uint64_t)v36, v33, v35);
  swift_endAccess();
  uint64_t v42 = a3;
  swift_getKeyPath();
  sub_24A056488();
  swift_release();
  return sub_249F9B97C((uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
}

uint64_t sub_249F8E6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  v4[7] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF20);
  v4[12] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF28);
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF30);
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = sub_24A057608();
  v4[20] = sub_24A0575F8();
  uint64_t v9 = sub_24A0575D8();
  v4[21] = v9;
  v4[22] = v8;
  return MEMORY[0x270FA2498](sub_249F8E8D0, v9, v8);
}

uint64_t sub_249F8E8D0()
{
  if (qword_26974F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752360;
  *(void *)(v0 + 184) = qword_269752360;
  return MEMORY[0x270FA2498](sub_249F8E968, v1, 0);
}

uint64_t sub_249F8E968()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[15];
  uint64_t v3 = *(void *)(v1 + 112);
  swift_retain();
  sub_249FF09F4(v3, v1, v2);
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[22];
  return MEMORY[0x270FA2498](sub_249F8E9F0, v4, v5);
}

uint64_t sub_249F8E9F0()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[24] = 0;
  uint64_t v4 = sub_24A0575F8();
  v0[25] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249F8EB0C;
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[12];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_249F8EB0C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_249F8EC50, v3, v2);
}

uint64_t sub_249F8EC50()
{
  uint64_t v1 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[9] + 48))(v1, 1, v0[8]) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  sub_249F6E664(v1, v0[11], &qword_26974FF18);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v11 = v0[17];
    uint64_t v10 = v0[18];
    uint64_t v12 = v0[16];
    uint64_t v13 = v0[11];
    swift_release();
    sub_249F6E790(v13, &qword_26974FF18);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_7;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = v0[10];
  sub_249F6E6C8(v0[11], v4, &qword_26974FF18);
  uint64_t v5 = type metadata accessor for Alarm();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[7];
  if (v6 == 1)
  {
    sub_249F6E790(v0[10], &qword_26974FF18);
    uint64_t v9 = sub_24A056238();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    uint64_t v16 = sub_24A056238();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v8, v7, v16);
    sub_249F9B97C(v7, (uint64_t (*)(void))type metadata accessor for Alarm);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
  }
  uint64_t v18 = v0[24];
  uint64_t v19 = v0[11];
  uint64_t v20 = v0[7];
  swift_getKeyPath();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v21 + 16) = v3;
  *(void *)(v21 + 24) = v20;
  v0[5] = v3;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  swift_release();
  swift_task_dealloc();
  sub_249F6E790(v20, &qword_2697515A0);
  swift_release();
  sub_249F6E790(v19, &qword_26974FF18);
  v0[24] = v18;
  uint64_t v22 = sub_24A0575F8();
  v0[25] = v22;
  double v23 = (void *)swift_task_alloc();
  v0[26] = v23;
  void *v23 = v0;
  v23[1] = sub_249F8EB0C;
  uint64_t v24 = v0[16];
  uint64_t v25 = v0[12];
  uint64_t v26 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v25, v22, v26, v24);
}

uint64_t sub_249F8F0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  uint64_t v6 = sub_24A0563F8();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for WorldViewModel.Pin(0);
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  v5[33] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CurrentLocationResult(0);
  v5[34] = v8;
  v5[35] = *(void *)(v8 - 8);
  v5[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697520E0);
  v5[37] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F8);
  v5[38] = v9;
  v5[39] = *(void *)(v9 - 8);
  v5[40] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750100);
  v5[41] = v10;
  v5[42] = *(void *)(v10 - 8);
  v5[43] = swift_task_alloc();
  v5[44] = sub_24A057608();
  v5[45] = sub_24A0575F8();
  uint64_t v12 = sub_24A0575D8();
  v5[46] = v12;
  v5[47] = v11;
  return MEMORY[0x270FA2498](sub_249F8F3C4, v12, v11);
}

uint64_t sub_249F8F3C4()
{
  if (qword_26974F348 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752450;
  *(void *)(v0 + 384) = qword_269752450;
  return MEMORY[0x270FA2498](sub_249F8F45C, v1, 0);
}

uint64_t sub_249F8F45C()
{
  uint64_t v1 = v0[40];
  id v2 = sub_24A0414EC(0);
  sub_24A0423C0(v1);

  uint64_t v3 = v0[46];
  uint64_t v4 = v0[47];
  return MEMORY[0x270FA2498](sub_249F8F4D8, v3, v4);
}

uint64_t sub_249F8F4D8()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = v0[40];
  uint64_t v3 = v0[38];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[49] = 0;
  uint64_t v4 = sub_24A0575F8();
  v0[50] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[51] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249F8F5F4;
  uint64_t v6 = v0[41];
  uint64_t v7 = v0[37];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_249F8F5F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 376);
  uint64_t v3 = *(void *)(v1 + 368);
  return MEMORY[0x270FA2498](sub_249F8F738, v3, v2);
}

uint64_t sub_249F8F738()
{
  uint64_t v1 = v0[37];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[35] + 48))(v1, 1, v0[34]) == 1)
  {
    (*(void (**)(void, void))(v0[42] + 8))(v0[43], v0[41]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  sub_249F9B914(v1, v0[36], type metadata accessor for CurrentLocationResult);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v15 = v0[42];
    uint64_t v14 = v0[43];
    uint64_t v16 = v0[41];
    uint64_t v17 = v0[36];
    swift_release();
    sub_249F9B97C(v17, type metadata accessor for CurrentLocationResult);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    goto LABEL_7;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = v0[33];
  sub_249F6E6C8(v0[36], v4, &qword_2697500F0);
  uint64_t v5 = type metadata accessor for CurrentLocation(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    uint64_t v6 = v0[49];
    uint64_t v7 = v0[36];
    uint64_t v8 = v0[32];
    uint64_t v10 = v0[27];
    uint64_t v9 = v0[28];
    sub_249F6E790(v0[33], &qword_2697500F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v10);
    swift_getKeyPath();
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v8;
    v0[20] = v3;
    sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
    sub_24A056468();
    swift_release();
    swift_task_dealloc();
    sub_249F6E790(v8, &qword_269750050);
    swift_release();
    uint64_t v12 = type metadata accessor for CurrentLocationResult;
    uint64_t v13 = v7;
  }
  else
  {
    uint64_t v20 = (id *)v0[33];
    uint64_t v21 = v0[23];
    id v22 = *v20;
    sub_249F9B97C((uint64_t)v20, type metadata accessor for CurrentLocation);
    objc_msgSend(v22, sel_coordinate);
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    sub_24A0563E8();
    id v69 = v22;
    objc_msgSend(v22, sel_coordinate);
    swift_getKeyPath();
    v0[18] = v3;
    sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
    sub_24A056478();
    swift_release();
    sub_249F6E664(v21 + 80, (uint64_t)(v0 + 7), &qword_269750108);
    sub_249F6E664((uint64_t)(v0 + 7), (uint64_t)(v0 + 2), &qword_269750108);
    if (qword_26974F368 != -1) {
      swift_once();
    }
    uint64_t v27 = v0[30];
    uint64_t v68 = v0[31];
    uint64_t v29 = (int *)v0[27];
    uint64_t v28 = v0[28];
    uint64_t v30 = v0[25];
    uint64_t v31 = v0[26];
    uint64_t v32 = v0[24];
    UIPointRoundToScale();
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    *(unsigned char *)(v27 + 17) = 0;
    uint64_t v37 = v27 + v29[9];
    *(void *)uint64_t v37 = 0;
    uint64_t v67 = v37;
    *(unsigned char *)(v37 + 8) = 1;
    os_log_t v38 = (void *)(v27 + v29[10]);
    *(void *)uint64_t v27 = v24;
    *(void *)(v27 + 8) = v26;
    *(unsigned char *)(v27 + 16) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v27 + v29[7], v31, v32);
    int v39 = (void *)(v27 + v29[8]);
    void *v39 = v34;
    v39[1] = v36;
    *os_log_t v38 = 0;
    v38[1] = 0;
    swift_getKeyPath();
    v0[19] = v3;
    sub_24A056478();
    swift_release();
    uint64_t v40 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
    swift_beginAccess();
    sub_249F6E6C8(v40, v68, &qword_269750050);
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v28 + 48))(v68, 1, v29);
    uint64_t v42 = v0[31];
    if (v41 == 1)
    {
      sub_249F6E790(v42, &qword_269750050);
    }
    else
    {
      uint64_t v43 = (double *)v0[29];
      sub_249F9B914(v42, (uint64_t)v43, type metadata accessor for WorldViewModel.Pin);
      double v45 = *v43;
      double v44 = v43[1];
      objc_msgSend(v69, sel_coordinate);
      if (v45 == v47 && v44 == v46)
      {
        uint64_t v48 = v0[29];
        uint64_t v49 = v0[30];
        uint64_t v50 = v0[27];
        long long v51 = (uint64_t *)(v48 + *(int *)(v50 + 40));
        uint64_t v52 = *v51;
        uint64_t v53 = v51[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *os_log_t v38 = v52;
        v38[1] = v53;
        uint64_t v54 = v48 + *(int *)(v50 + 36);
        uint64_t v55 = *(void *)v54;
        LOBYTE(v54) = *(unsigned char *)(v54 + 8);
        *(void *)uint64_t v67 = v55;
        *(unsigned char *)(v67 + 8) = v54;
        LOBYTE(v50) = *(unsigned char *)(v48 + 17);
        sub_249F9B97C(v48, type metadata accessor for WorldViewModel.Pin);
        *(unsigned char *)(v49 + 17) = v50;
      }
      else
      {
        sub_249F9B97C(v0[29], type metadata accessor for WorldViewModel.Pin);
      }
    }
    uint64_t v6 = v0[49];
    uint64_t v56 = v0[36];
    uint64_t v57 = v0[32];
    uint64_t v58 = v0[30];
    uint64_t v60 = v0[27];
    uint64_t v59 = v0[28];
    sub_249F9C310(v58, v57, type metadata accessor for WorldViewModel.Pin);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v57, 0, 1, v60);
    swift_getKeyPath();
    uint64_t v61 = swift_task_alloc();
    *(void *)(v61 + 16) = v3;
    *(void *)(v61 + 24) = v57;
    v0[21] = v3;
    sub_24A056468();
    swift_release();
    swift_task_dealloc();
    sub_249F6E790(v57, &qword_269750050);
    sub_249F94E7C(v69);
    swift_release();

    sub_249F9B97C(v56, type metadata accessor for CurrentLocationResult);
    uint64_t v12 = type metadata accessor for WorldViewModel.Pin;
    uint64_t v13 = v58;
  }
  sub_249F9B97C(v13, v12);
  v0[49] = v6;
  uint64_t v62 = sub_24A0575F8();
  v0[50] = v62;
  long long v63 = (void *)swift_task_alloc();
  v0[51] = v63;
  *long long v63 = v0;
  v63[1] = sub_249F8F5F4;
  uint64_t v64 = v0[41];
  uint64_t v65 = v0[37];
  uint64_t v66 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v65, v62, v66, v64);
}

uint64_t sub_249F90040@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return sub_249F77BF0(v1 + 16, a1);
}

uint64_t sub_249F90104(uint64_t a1, long long *a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  sub_249F9C3F0(a2, v3);
  return swift_endAccess();
}

uint64_t sub_249F90168()
{
  return swift_retain();
}

uint64_t sub_249F9020C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 120) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_249F90248()
{
  return swift_retain();
}

uint64_t sub_249F902EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + 128);
  return swift_retain();
}

uint64_t sub_249F90398()
{
  return swift_release();
}

uint64_t sub_249F90478()
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_249F90518@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 136);
  return result;
}

uint64_t sub_249F905C0()
{
  return swift_release();
}

double sub_249F90690()
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  return *(double *)(v0 + 144);
}

__n128 sub_249F90734@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  __n128 result = *(__n128 *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 160);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_249F907DC()
{
  return swift_release();
}

uint64_t sub_249F908C4()
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t sub_249F90964@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 176);
  return result;
}

uint64_t sub_249F90A0C()
{
  return swift_release();
}

uint64_t (*sub_249F90ADC())()
{
  return j__swift_endAccess;
}

uint64_t sub_249F90B34()
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t sub_249F90BE8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 177);
  return result;
}

uint64_t sub_249F90CA4()
{
  return swift_release();
}

void (*sub_249F90D74(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24A056498();
  swift_release();
  v3[7] = sub_249F90ADC();
  return sub_249F90E90;
}

void sub_249F90E90(void *a1)
{
}

double sub_249F90E9C@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  *(void *)&long long v13 = v1;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  long long v3 = *(_OWORD *)(v1 + 296);
  long long v4 = *(_OWORD *)(v1 + 312);
  long long v5 = *(_OWORD *)(v1 + 264);
  long long v19 = *(_OWORD *)(v1 + 280);
  long long v20 = v3;
  long long v21 = v4;
  uint64_t v22 = *(void *)(v1 + 328);
  long long v6 = *(_OWORD *)(v1 + 232);
  long long v15 = *(_OWORD *)(v1 + 216);
  long long v16 = v6;
  long long v17 = *(_OWORD *)(v1 + 248);
  long long v18 = v5;
  long long v7 = *(_OWORD *)(v1 + 200);
  long long v13 = *(_OWORD *)(v1 + 184);
  long long v14 = v7;
  sub_249F7AF70((uint64_t)&v13);
  long long v8 = v20;
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = v21;
  *(void *)(a1 + 144) = v22;
  long long v9 = v16;
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v9;
  long long v10 = v18;
  *(_OWORD *)(a1 + 64) = v17;
  *(_OWORD *)(a1 + 80) = v10;
  double result = *(double *)&v13;
  long long v12 = v14;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  return result;
}

uint64_t sub_249F90FB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  *(void *)&v13[0] = v3;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  long long v4 = *(_OWORD *)(v3 + 296);
  long long v5 = *(_OWORD *)(v3 + 264);
  long long v14 = *(_OWORD *)(v3 + 280);
  long long v15 = v4;
  long long v6 = *(_OWORD *)(v3 + 296);
  long long v16 = *(_OWORD *)(v3 + 312);
  long long v7 = *(_OWORD *)(v3 + 232);
  v13[2] = *(_OWORD *)(v3 + 216);
  v13[3] = v7;
  long long v8 = *(_OWORD *)(v3 + 264);
  uint64_t v13[4] = *(_OWORD *)(v3 + 248);
  v13[5] = v8;
  long long v9 = *(_OWORD *)(v3 + 200);
  v13[0] = *(_OWORD *)(v3 + 184);
  v13[1] = v9;
  uint64_t v17 = *(void *)(v3 + 328);
  *(_OWORD *)(a2 + 96) = v14;
  *(_OWORD *)(a2 + 112) = v6;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v3 + 312);
  *(void *)(a2 + 144) = *(void *)(v3 + 328);
  long long v10 = *(_OWORD *)(v3 + 232);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v3 + 216);
  *(_OWORD *)(a2 + 48) = v10;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v3 + 248);
  *(_OWORD *)(a2 + 80) = v5;
  long long v11 = *(_OWORD *)(v3 + 200);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 184);
  *(_OWORD *)(a2 + 16) = v11;
  return sub_249F7AF70((uint64_t)v13);
}

uint64_t sub_249F910D0(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 112);
  v6[6] = *(_OWORD *)(a1 + 96);
  v6[7] = v1;
  v6[8] = *(_OWORD *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 144);
  long long v2 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v2;
  long long v3 = *(_OWORD *)(a1 + 80);
  v6[4] = *(_OWORD *)(a1 + 64);
  v6[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  swift_getKeyPath();
  sub_249F7AF70((uint64_t)v6);
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  sub_249F8B2B8((uint64_t)v6);
  return swift_release();
}

uint64_t sub_249F911DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F91294@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 336);
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F91354()
{
  return swift_release();
}

uint64_t sub_249F91434(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 336) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249F9149C@<X0>(uint64_t a1@<X8>)
{
  return sub_249F929E4(&OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted, &qword_269750050, a1);
}

uint64_t sub_249F914B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  return sub_249F6E6C8(v4, a2, &qword_269750050);
}

uint64_t sub_249F9158C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F6E6C8(a1, (uint64_t)v6, &qword_269750050);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  long long v11 = v6;
  uint64_t v12 = v7;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v6, &qword_269750050);
}

uint64_t (*sub_249F916CC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_249F9172C;
}

uint64_t sub_249F9172C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_249F935AC();
    return sub_249F939C8();
  }
  return result;
}

uint64_t sub_249F91764@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  return sub_249F6E6C8(v3, a1, &qword_269750050);
}

uint64_t sub_249F91838@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  return sub_249F6E6C8(v4, a2, &qword_269750050);
}

uint64_t sub_249F9190C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F6E6C8(a1, (uint64_t)v6, &qword_269750050);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  long long v11 = v6;
  uint64_t v12 = v7;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v6, &qword_269750050);
}

uint64_t sub_249F91A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a2, (uint64_t)v6, &qword_269750050);
  uint64_t v7 = a1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  sub_249F9AC10((uint64_t)v6, v7, &qword_269750050);
  swift_endAccess();
  sub_249F935AC();
  sub_249F939C8();
  return sub_249F6E790((uint64_t)v6, &qword_269750050);
}

void (*sub_249F91B38(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24A056498();
  swift_release();
  v3[7] = sub_249F916CC((uint64_t)v3);
  return sub_249F91C54;
}

void sub_249F91C54(void *a1)
{
}

void sub_249F91C60(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  void *v1 = v1[4];
  swift_getKeyPath();
  sub_24A056488();
  swift_release();

  free(v1);
}

uint64_t sub_249F91CEC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F91DB0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F91E7C()
{
  return swift_release();
}

uint64_t sub_249F91F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249F91FCC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v43 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24A056538();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v42 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A0563F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A056238();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v39 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v37 - v12;
  MEMORY[0x270FA5388](v14);
  long long v16 = (char *)&v37 - v15;
  if (qword_26974F328 != -1) {
    swift_once();
  }
  sub_24A006BDC((uint64_t)v16);
  type metadata accessor for WorldViewModel.Pin(0);
  sub_24A056228();
  uint64_t v17 = sub_24A0563A8();
  uint64_t v38 = v9;
  long long v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v13, v8);
  sub_24A0563E8();
  sub_24A056228();
  uint64_t v19 = sub_24A0563A8();
  v18(v13, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v20 = v17 - v19;
  if (__OFSUB__(v17, v19))
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v21 = v17 - v19;
  uint64_t v4 = (uint64_t)v43;
  if (v20 < 0)
  {
    uint64_t v21 = v19 - v17;
    if (__OFSUB__(0, v20)) {
      goto LABEL_19;
    }
  }
  if (v21 < 1)
  {
LABEL_16:
    v18(v16, v8);
    return 0;
  }
  uint64_t v22 = self;
  uint64_t v23 = (void *)sub_24A056198();
  id v24 = objc_msgSend(v22, sel_dayAndTimeZoneOffsetStringFromDate_withTimeZoneOffset_timeZoneAbbreviation_spaceBeforeTimeDesignator_hoursOnly_numericOnly_, v23, v20, 0, 1, 0, 0);

  if (!v24)
  {
    if (qword_26B16F9B8 == -1)
    {
LABEL_10:
      uint64_t v26 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
      swift_beginAccess();
      sub_249F6E6C8(v26, v4, &qword_26B16FAA8);
      uint64_t v28 = v40;
      uint64_t v27 = v41;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v4, 1, v41) == 1)
      {
        sub_249FB8AA8(v42);
        sub_249F6E790(v4, &qword_26B16FAA8);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v42, v4, v27);
      }
      uint64_t v29 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v39, v16, v8);
      uint64_t v30 = sub_24A056518();
      os_log_type_t v31 = sub_24A0577B8();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = (char *)swift_slowAlloc();
        double v45 = v43;
        *(_DWORD *)uint64_t v32 = 136446210;
        int v39 = (char *)(v32 + 4);
        sub_249F968DC((unint64_t *)&qword_269750148, MEMORY[0x263F07490]);
        uint64_t v33 = sub_24A057CF8();
        uint64_t v44 = sub_249F782DC(v33, v34, (uint64_t *)&v45);
        sub_24A057978();
        swift_bridgeObjectRelease();
        v18(v29, v8);
        _os_log_impl(&dword_249F61000, v30, v31, "Cannot convert %{public}s to an offset string", v32, 0xCu);
        uint64_t v35 = v43;
        swift_arrayDestroy();
        MEMORY[0x24C5BA360](v35, -1, -1);
        MEMORY[0x24C5BA360](v32, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
      }
      else
      {

        v18(v29, v8);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v42, v27);
      }
      goto LABEL_16;
    }
LABEL_20:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v25 = sub_24A0573A8();

  v18(v16, v8);
  return v25;
}

uint64_t sub_249F92648()
{
  return sub_24A057E68();
}

uint64_t sub_249F9268C()
{
  return sub_24A057E68();
}

__n128 sub_249F926CC@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

BOOL sub_249F926DC(double *a1, double *a2)
{
  return (sub_249F9A8C0(a2, a1) & 1) == 0;
}

BOOL sub_249F92708(double *a1, double *a2)
{
  return (sub_249F9A8C0(a1, a2) & 1) == 0;
}

uint64_t sub_249F92728(double *a1, double *a2)
{
  return sub_249F9A8C0(a2, a1);
}

uint64_t sub_249F92738()
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249F92804@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath;
  char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 24);
  *(void *)a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v4 + 8);
  *(unsigned char *)(a2 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F928D0()
{
  return swift_release();
}

uint64_t sub_249F929C8@<X0>(uint64_t a1@<X8>)
{
  return sub_249F929E4(&OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_2697515A0, a1);
}

uint64_t sub_249F929E4@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_249F6E6C8(v7, a3, a2);
}

uint64_t sub_249F92AB8(uint64_t a1, uint64_t a2)
{
  return sub_249F92AE0(a1, a2, &OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_2697515A0);
}

uint64_t sub_249F92AE0(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v6 = a1 + *a3;
  swift_beginAccess();
  sub_249F9AC10(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_249F92B50(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v26 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v25 = (double *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  long long v13 = (double *)((char *)&v24 - v12);
  swift_getKeyPath();
  uint64_t v32 = v1;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v27 = a1;
  uint64_t v29 = a1;
  uint64_t v30 = v1;
  swift_bridgeObjectRetain();
  sub_249F8C38C((void (*)(char *))sub_249F9AFCC, (uint64_t)v28, v15);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v31 = v1;
  sub_24A056478();
  swift_release();
  uint64_t v16 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  sub_249F6E6C8(v16, (uint64_t)v7, &qword_269750050);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v17((uint64_t)v7, 1, v8) == 1)
  {
    sub_249F6E790((uint64_t)v7, &qword_269750050);
  }
  else
  {
    sub_249F9B914((uint64_t)v7, (uint64_t)v13, type metadata accessor for WorldViewModel.Pin);
    uint64_t v18 = v26;
    sub_249F6E6C8(v27, v26, &qword_269750050);
    if (v17(v18, 1, v8) == 1)
    {
      sub_249F6E790(v18, &qword_269750050);
      BOOL v19 = 0;
    }
    else
    {
      uint64_t v20 = v25;
      sub_249F9B914(v18, (uint64_t)v25, type metadata accessor for WorldViewModel.Pin);
      double v21 = *v20;
      double v22 = v20[1];
      sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
      BOOL v19 = v21 == *v13;
      if (v22 != v13[1]) {
        BOOL v19 = 0;
      }
    }
    *((unsigned char *)v13 + 17) = v19;
    sub_249F9B97C((uint64_t)v13, type metadata accessor for WorldViewModel.Pin);
  }
  sub_249F935AC();
  return sub_249F939C8();
}

uint64_t sub_249F92F04(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v33 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (double *)((char *)&v32 - v8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500A0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (double *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(int *)(v14 + 56);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v32 = a1;
  sub_249F9C310((uint64_t)a1 + v21, (uint64_t)&v16[v21], type metadata accessor for WorldViewModel.Pin);
  sub_249F9B914(v22, (uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v22) = v23(a2, 1, v17);
  sub_249F6E6C8(a2, (uint64_t)v12, &qword_269750050);
  if (v22 == 1)
  {
    sub_249F6E790((uint64_t)v12, &qword_269750050);
    if (*((unsigned char *)v20 + 17) != 1) {
      return sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
    }
    LOBYTE(v24) = 0;
LABEL_8:
    *((unsigned char *)v20 + 17) = v24;
    uint64_t v28 = v33;
    double v29 = *v32;
    double v30 = v32[1];
    sub_249F9C310((uint64_t)v20, v33, type metadata accessor for WorldViewModel.Pin);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v28, 0, 1, v17);
    swift_getKeyPath();
    uint64_t v31 = v34;
    uint64_t v35 = v34;
    sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
    sub_24A056478();
    swift_release();
    uint64_t v35 = v31;
    swift_getKeyPath();
    sub_24A056498();
    swift_release();
    swift_beginAccess();
    sub_249FEF304(v28, v29, v30);
    swift_endAccess();
    uint64_t v35 = v31;
    swift_getKeyPath();
    sub_24A056488();
    swift_release();
    return sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
  }
  sub_249F6E6C8((uint64_t)v12, (uint64_t)v9, &qword_269750050);
  uint64_t result = v23((uint64_t)v9, 1, v17);
  if (result != 1)
  {
    sub_249F6E790((uint64_t)v12, &qword_269750050);
    double v26 = *v9;
    double v27 = v9[1];
    sub_249F9B97C((uint64_t)v9, type metadata accessor for WorldViewModel.Pin);
    int v24 = v26 == *v20;
    if (v27 != v20[1]) {
      int v24 = 0;
    }
    if (*((unsigned __int8 *)v20 + 17) == v24) {
      return sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_249F9336C()
{
  return swift_retain();
}

uint64_t sub_249F93418@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask);
  return swift_retain();
}

uint64_t sub_249F934CC()
{
  return swift_release();
}

uint64_t sub_249F935AC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - v9;
  swift_getKeyPath();
  uint64_t v22 = v0;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_24A01F51C(v11);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v21 = v0;
  sub_24A056478();
  swift_release();
  uint64_t v13 = (uint64_t)v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  sub_249F6E6C8(v13, (uint64_t)v3, &qword_269750050);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_249F6E790((uint64_t)v3, &qword_269750050);
  }
  else
  {
    sub_249F9B914((uint64_t)v3, (uint64_t)v10, type metadata accessor for WorldViewModel.Pin);
    sub_249F9C310((uint64_t)v10, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = (void *)sub_249FBA27C(0, v12[2] + 1, 1, (unint64_t)v12);
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1) {
      uint64_t v12 = (void *)sub_249FBA27C(v14 > 1, v15 + 1, 1, (unint64_t)v12);
    }
    void v12[2] = v15 + 1;
    sub_249F9B914((uint64_t)v7, (uint64_t)v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, type metadata accessor for WorldViewModel.Pin);
    sub_249F9B97C((uint64_t)v10, type metadata accessor for WorldViewModel.Pin);
  }
  uint64_t v20 = v12;
  swift_bridgeObjectRetain_n();
  sub_249F97D98(&v20);
  swift_bridgeObjectRelease_n();
  uint64_t v16 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v19 - 2) = (uint64_t)v0;
  *(&v19 - 1) = (uint64_t)v16;
  uint64_t v20 = v0;
  sub_24A056468();
  swift_release();
  return swift_release();
}

uint64_t sub_249F939C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v87 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_24A0563F8();
  uint64_t v92 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v104 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_24A056238();
  uint64_t v109 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v102 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v7 = *(void **)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v86 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v83 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v101 = (uint64_t)&v83 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750098);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v90 = (uint64_t)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v88 = (uint64_t)&v83 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t)&v83 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v83 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v83 - v27;
  MEMORY[0x270FA5388](v29);
  uint64_t v96 = (uint64_t)&v83 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v83 - v32;
  swift_getKeyPath();
  uint64_t v34 = v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  uint64_t v112 = v1;
  uint64_t v94 = sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  uint64_t v95 = v34;
  sub_24A056478();
  swift_release();
  int64_t v35 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate;
  swift_beginAccess();
  int64_t v108 = v35;
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_249F94848(v36, (uint64_t)v16);
  uint64_t v89 = 0;
  swift_bridgeObjectRelease();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v16, 1, v37) == 1)
  {
    sub_249F6E790((uint64_t)v16, &qword_269750098);
    uint64_t v38 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7];
    v38(v33, 1, 1, v6);
  }
  else
  {
    sub_249F9B914((uint64_t)&v16[*(int *)(v37 + 48)], (uint64_t)v33, type metadata accessor for WorldViewModel.Pin);
    uint64_t v38 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7];
    v38(v33, 0, 1, v6);
  }
  sub_249F6E6C8((uint64_t)v33, (uint64_t)v28, &qword_269750050);
  int v39 = v7 + 6;
  uint64_t v106 = (unsigned int (*)(char *, uint64_t, uint64_t))v7[6];
  unsigned int v40 = v106(v28, 1, v6);
  uint64_t v41 = v96;
  uint64_t v91 = v33;
  unint64_t v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v38;
  if (v40 == 1)
  {
    swift_getKeyPath();
    uint64_t v111 = v1;
    sub_24A056478();
    swift_release();
    uint64_t v42 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
    swift_beginAccess();
    sub_249F6E6C8(v42, v41, &qword_269750050);
    int v39 = v7 + 6;
    sub_249F6E790((uint64_t)v28, &qword_269750050);
  }
  else
  {
    sub_249F9B914((uint64_t)v28, v96, type metadata accessor for WorldViewModel.Pin);
    v38((char *)v41, 0, 1, v6);
  }
  uint64_t v43 = v6;
  sub_249F6E6C8(v41, (uint64_t)v25, &qword_269750050);
  uint64_t v44 = v6;
  double v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v106;
  double v46 = v39;
  unsigned int v47 = v106(v25, 1, v44);
  sub_249F6E790((uint64_t)v25, &qword_269750050);
  if (v47 != 1)
  {
LABEL_36:
    uint64_t v72 = v88;
    sub_249F6E6C8(v41, v88, &qword_269750050);
    if (v45(v72, 1, v43) == 1)
    {
      sub_249F6E790(v72, &qword_269750050);
      uint64_t v73 = v90;
      v93(v90, 1, 1, v43);
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v83 - 2) = (void *)v1;
      *(&v83 - 1) = (void *)v73;
      uint64_t v110 = v1;
      sub_24A056468();
      swift_release();
      sub_249F6E790(v73, &qword_269750050);
    }
    else
    {
      uint64_t v75 = v86;
      sub_249F9B914(v72, v86, type metadata accessor for WorldViewModel.Pin);
      uint64_t v76 = (uint64_t)v87;
      uint64_t v77 = v90;
      sub_249F9C310(v75, v90, type metadata accessor for WorldViewModel.Pin);
      v93(v77, 0, 1, v43);
      uint64_t v78 = swift_getKeyPath();
      MEMORY[0x270FA5388](v78);
      *(&v83 - 2) = (void *)v1;
      *(&v83 - 1) = (void *)v77;
      uint64_t v110 = v1;
      uint64_t v109 = MEMORY[0x263F8EE60] + 8;
      sub_24A056468();
      swift_release();
      sub_249F6E790(v77, &qword_269750050);
      swift_getKeyPath();
      uint64_t v110 = v1;
      sub_24A056478();
      swift_release();
      uint64_t v79 = *(void *)(v1 + 128);
      uint64_t v80 = v92;
      uint64_t v81 = v105;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v76, v75 + *(int *)(v43 + 28), v105);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v76, 0, 1, v81);
      uint64_t v82 = swift_getKeyPath();
      MEMORY[0x270FA5388](v82);
      *(&v83 - 2) = (void *)v79;
      *(&v83 - 1) = (void *)v76;
      uint64_t v110 = v79;
      sub_249F968DC(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
      swift_retain();
      sub_24A056468();
      swift_release();
      sub_249F6E790(v76, &qword_26974F440);
      swift_release();
      sub_249F9B97C(v75, type metadata accessor for WorldViewModel.Pin);
    }
    sub_249F6E790(v96, &qword_269750050);
    return sub_249F6E790((uint64_t)v91, &qword_269750050);
  }
  uint64_t v83 = v46;
  swift_getKeyPath();
  uint64_t v84 = v1;
  uint64_t v110 = v1;
  sub_24A056478();
  swift_release();
  uint64_t v48 = *(void *)v108;
  uint64_t v49 = *(void *)(*(void *)v108 + 64);
  uint64_t v97 = *(void *)v108 + 64;
  uint64_t v50 = 1 << *(unsigned char *)(v48 + 32);
  uint64_t v51 = -1;
  if (v50 < 64) {
    uint64_t v51 = ~(-1 << v50);
  }
  unint64_t v52 = v51 & v49;
  int64_t v98 = (unint64_t)(v50 + 63) >> 6;
  uint64_t v100 = (void (**)(char *, uint64_t))(v109 + 8);
  uint64_t v99 = (void (**)(char *, uint64_t))(v92 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v54 = 0;
  if (!v52) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v107 = (v52 - 1) & v52;
  int64_t v108 = v54;
  for (unint64_t i = __clz(__rbit64(v52)) | (v54 << 6); ; unint64_t i = __clz(__rbit64(v57)) + (v58 << 6))
  {
    uint64_t v60 = v48;
    uint64_t v61 = v7;
    uint64_t v62 = *(void *)(v48 + 56) + v7[9] * i;
    uint64_t v63 = v101;
    sub_249F9C310(v62, v101, type metadata accessor for WorldViewModel.Pin);
    sub_249F9B914(v63, (uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
    uint64_t v64 = v43;
    uint64_t v65 = v102;
    sub_24A056228();
    uint64_t v109 = sub_24A0563A8();
    uint64_t v66 = *v100;
    uint64_t v67 = (uint64_t)v11;
    uint64_t v68 = v103;
    (*v100)(v65, v103);
    id v69 = v104;
    sub_24A0563E8();
    sub_24A056228();
    uint64_t v70 = sub_24A0563A8();
    v66(v65, v68);
    (*v99)(v69, v105);
    if (v109 == v70)
    {
      swift_release();
      uint64_t v71 = v85;
      sub_249F9B914(v67, v85, type metadata accessor for WorldViewModel.Pin);
      uint64_t v43 = v64;
      v93(v71, 0, 1, v64);
      double v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v106;
LABEL_35:
      swift_bridgeObjectRelease();
      uint64_t v41 = v96;
      sub_249F6E790(v96, &qword_269750050);
      sub_249F6E664(v71, v41, &qword_269750050);
      uint64_t v1 = v84;
      goto LABEL_36;
    }
    uint64_t result = sub_249F9B97C(v67, type metadata accessor for WorldViewModel.Pin);
    uint64_t v43 = v64;
    uint64_t v7 = v61;
    uint64_t v11 = (char *)v67;
    double v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v106;
    unint64_t v52 = v107;
    uint64_t v48 = v60;
    int64_t v54 = v108;
    if (v107) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v56 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v56 >= v98) {
      goto LABEL_34;
    }
    unint64_t v57 = *(void *)(v97 + 8 * v56);
    int64_t v58 = v54 + 1;
    if (!v57)
    {
      int64_t v58 = v54 + 2;
      if (v54 + 2 >= v98) {
        goto LABEL_34;
      }
      unint64_t v57 = *(void *)(v97 + 8 * v58);
      if (!v57)
      {
        int64_t v58 = v54 + 3;
        if (v54 + 3 >= v98) {
          goto LABEL_34;
        }
        unint64_t v57 = *(void *)(v97 + 8 * v58);
        if (!v57)
        {
          int64_t v58 = v54 + 4;
          if (v54 + 4 >= v98) {
            goto LABEL_34;
          }
          unint64_t v57 = *(void *)(v97 + 8 * v58);
          if (!v57)
          {
            int64_t v58 = v54 + 5;
            if (v54 + 5 >= v98) {
              goto LABEL_34;
            }
            unint64_t v57 = *(void *)(v97 + 8 * v58);
            if (!v57) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v107 = (v57 - 1) & v57;
    int64_t v108 = v58;
  }
  uint64_t v59 = v54 + 6;
  if (v54 + 6 >= v98)
  {
LABEL_34:
    swift_release();
    uint64_t v71 = v85;
    v93(v85, 1, 1, v43);
    goto LABEL_35;
  }
  unint64_t v57 = *(void *)(v97 + 8 * v59);
  if (v57)
  {
    int64_t v58 = v54 + 6;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v58 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      break;
    }
    if (v58 >= v98) {
      goto LABEL_34;
    }
    unint64_t v57 = *(void *)(v97 + 8 * v58);
    ++v59;
    if (v57) {
      goto LABEL_29;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249F94848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500A0);
  uint64_t v33 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v4 = (_OWORD *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (_OWORD *)((char *)&v32 - v6);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v32 - v9);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v26 = v22 + *(void *)(*(void *)(type metadata accessor for WorldViewModel.Pin(0) - 8) + 72) * i;
    uint64_t v27 = v37;
    sub_249F9C310(v26, (uint64_t)v10 + *(int *)(v37 + 48), type metadata accessor for WorldViewModel.Pin);
    void *v10 = v24;
    v10[1] = v25;
    sub_249F6E664((uint64_t)v10, (uint64_t)v7, &qword_2697500A0);
    uint64_t v28 = *(int *)(v27 + 48);
    uint64_t v29 = (uint64_t)v4 + v28;
    *uint64_t v4 = *v7;
    sub_249F9C310((uint64_t)v7 + v28, (uint64_t)v4 + v28, type metadata accessor for WorldViewModel.Pin);
    int v30 = *(unsigned __int8 *)(v29 + 17);
    sub_249F9B97C(v29, type metadata accessor for WorldViewModel.Pin);
    if (v30 == 1)
    {
      swift_release();
      uint64_t v31 = v34;
      sub_249F6E664((uint64_t)v7, v34, &qword_2697500A0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v37);
    }
    uint64_t result = sub_249F6E790((uint64_t)v7, &qword_2697500A0);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v36) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_25;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20)
        {
          int64_t v16 = v19 + 3;
          if (v19 + 3 >= v36) {
            goto LABEL_25;
          }
          unint64_t v20 = *(void *)(v35 + 8 * v16);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v36)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v34, 1, 1, v37);
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249F94BC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24A0563F8();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x270FA5388](v5).n128_u64[0];
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend((id)a1[2], sel_coordinate, v7);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for City();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, (uint64_t)a1 + *(int *)(v14 + 24), v5);
  swift_getKeyPath();
  *(void *)&v34[0] = v2;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  long long v15 = *(_OWORD *)(v2 + 296);
  long long v16 = *(_OWORD *)(v2 + 312);
  long long v17 = *(_OWORD *)(v2 + 264);
  v34[6] = *(_OWORD *)(v2 + 280);
  v34[7] = v15;
  v34[8] = v16;
  uint64_t v35 = *(void *)(v2 + 328);
  long long v18 = *(_OWORD *)(v2 + 232);
  _OWORD v34[2] = *(_OWORD *)(v2 + 216);
  void v34[3] = v18;
  v34[4] = *(_OWORD *)(v2 + 248);
  v34[5] = v17;
  long long v19 = *(_OWORD *)(v2 + 200);
  v34[0] = *(_OWORD *)(v2 + 184);
  v34[1] = v19;
  unint64_t v20 = (void *)a1[2];
  sub_249F7AF70((uint64_t)v34);
  objc_msgSend(v20, sel_coordinate);
  swift_getKeyPath();
  uint64_t v33 = v2;
  sub_24A056478();
  swift_release();
  sub_24A0536D8(1);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_249F8B2B8((uint64_t)v34);
  uint64_t v26 = *a1;
  uint64_t v25 = a1[1];
  *(unsigned char *)(a2 + 17) = 0;
  uint64_t v27 = (int *)type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v28 = a2 + v27[9];
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = (void *)(a2 + v27[10]);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + v27[7], v9, v5);
  int v30 = (void *)(a2 + v27[8]);
  void *v30 = v22;
  v30[1] = v24;
  void *v29 = v26;
  v29[1] = v25;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249F94E7C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = v1;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697520C0);
    sub_24A057688();
    swift_release();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v17 - 2) = v1;
  *(&v17 - 1) = 0;
  uint64_t v18 = v1;
  sub_24A056468();
  swift_release();
  uint64_t v8 = sub_24A057628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  sub_24A057608();
  id v10 = a1;
  swift_retain();
  uint64_t v11 = sub_24A0575F8();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = MEMORY[0x263F8F500];
  void v12[2] = v11;
  uint64_t v12[3] = v13;
  v12[4] = v10;
  v12[5] = v9;
  swift_release();
  uint64_t v14 = sub_24A039A1C((uint64_t)v6, (uint64_t)&unk_269750090, (uint64_t)v12);
  uint64_t v15 = swift_getKeyPath();
  MEMORY[0x270FA5388](v15);
  *(&v17 - 2) = v2;
  *(&v17 - 1) = v14;
  uint64_t v18 = v2;
  sub_24A056468();
  swift_release();
  return swift_release();
}

uint64_t sub_249F951A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  sub_24A057608();
  v5[11] = sub_24A0575F8();
  uint64_t v7 = sub_24A0575D8();
  v5[12] = v7;
  v5[13] = v6;
  return MEMORY[0x270FA2498](sub_249F9523C, v7, v6);
}

uint64_t sub_249F9523C()
{
  if (qword_26974F350 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  void *v1 = v0;
  v1[1] = sub_249F95308;
  uint64_t v2 = *(void *)(v0 + 72);
  return sub_24A0460E0(v2);
}

uint64_t sub_249F95308(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = a2;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 104);
  uint64_t v6 = *(void *)(v3 + 96);
  return MEMORY[0x270FA2498](sub_249F95430, v6, v5);
}

uint64_t sub_249F95430()
{
  swift_release();
  sub_24A0576A8();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v1 = sub_249F91B38(v0 + 2);
    uint64_t v3 = v2;
    uint64_t v4 = type metadata accessor for WorldViewModel.Pin(0);
    int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
    uint64_t v6 = v0[16];
    if (!v5)
    {
      uint64_t v7 = (void *)(v3 + *(int *)(v4 + 40));
      *uint64_t v7 = v0[15];
      v7[1] = v6;
    }
    swift_bridgeObjectRelease();
    ((void (*)(void *, void))v1)(v0 + 2, 0);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_249F95598()
{
  sub_249F77C70(v0 + 16);
  swift_release();
  swift_release();
  long long v1 = *(_OWORD *)(v0 + 296);
  long long v2 = *(_OWORD *)(v0 + 312);
  long long v3 = *(_OWORD *)(v0 + 264);
  v9[6] = *(_OWORD *)(v0 + 280);
  v9[7] = v1;
  v9[8] = v2;
  uint64_t v10 = *(void *)(v0 + 328);
  long long v4 = *(_OWORD *)(v0 + 232);
  v9[2] = *(_OWORD *)(v0 + 216);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(v0 + 248);
  v9[5] = v3;
  long long v5 = *(_OWORD *)(v0 + 200);
  v9[0] = *(_OWORD *)(v0 + 184);
  v9[1] = v5;
  sub_249F8B2B8((uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted, &qword_269750050);
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin, &qword_269750050);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_2697515A0);
  swift_release();
  uint64_t v6 = v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  uint64_t v7 = sub_24A0564B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_249F956E4()
{
  sub_249F95598();

  return swift_deallocClassInstance();
}

uint64_t sub_249F9573C()
{
  return type metadata accessor for WorldViewModel(0);
}

uint64_t type metadata accessor for WorldViewModel(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_26974FFE8);
}

void sub_249F95764()
{
  sub_249F95958(319, &qword_26974FFF8, (void (*)(uint64_t))type metadata accessor for WorldViewModel.Pin);
  if (v0 <= 0x3F)
  {
    sub_249F95958(319, (unint64_t *)&qword_2697514E0, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_24A0564B8();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for WorldViewModel.Pin(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_269750000);
}

uint64_t sub_249F95920(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249F95958(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24A057968();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_249F959AC(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v7 = a3[7];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_24A0563F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[9];
    *(_OWORD *)((char *)v4 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    v12[8] = *(unsigned char *)(v13 + 8);
    *(void *)uint64_t v12 = *(void *)v13;
    uint64_t v14 = a3[10];
    uint64_t v15 = (void *)((char *)v4 + v14);
    long long v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_249F95ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_249F95B54(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249F95C24(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  char v16 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = v16;
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  long long v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249F95D2C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_249F95DF0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249F95ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249F95EE0);
}

uint64_t sub_249F95EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A0563F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_249F95FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249F95FC8);
}

uint64_t sub_249F95FC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24A0563F8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40) + 8) = a2;
  }
  return result;
}

uint64_t sub_249F9608C()
{
  uint64_t result = sub_24A0563F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for WorldViewModelContext(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(unsigned __int8 *)(result + 96);
  if (v2 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  }
  else if (v2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(unsigned char *)(result + 96)) {
      return result;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(result);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorldViewModelContext(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 == 2)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (*(unsigned char *)(a2 + 96))
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(unsigned char *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for WorldViewModelContext(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_249F75BD8(a1);
    int v4 = *((unsigned __int8 *)a2 + 96);
    if (v4 == 2)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      uint64_t v7 = *((void *)a2 + 8);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(unsigned char *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v4 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 96) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*((unsigned char *)a2 + 96))
    {
      long long v8 = *a2;
      long long v9 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      long long v10 = a2[3];
      long long v11 = a2[4];
      long long v12 = a2[5];
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      uint64_t v5 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v5 - 8))(a1, a2);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(unsigned char *)(a1 + 96) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for WorldViewModelContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_249F75BD8(a1);
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WorldViewModelContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WorldViewModelContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorldViewModelContext()
{
  return &type metadata for WorldViewModelContext;
}

unint64_t sub_249F9663C(uint64_t a1)
{
  unint64_t result = sub_249F96664();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249F96664()
{
  unint64_t result = qword_269750010;
  if (!qword_269750010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750010);
  }
  return result;
}

unint64_t sub_249F966BC(void *a1)
{
  a1[1] = sub_249F966FC();
  a1[2] = sub_249F96750();
  a1[3] = sub_249F967A4();
  unint64_t result = sub_249F967F8();
  a1[4] = result;
  return result;
}

unint64_t sub_249F966FC()
{
  unint64_t result = qword_269750018;
  if (!qword_269750018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750018);
  }
  return result;
}

unint64_t sub_249F96750()
{
  unint64_t result = qword_269750020;
  if (!qword_269750020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750020);
  }
  return result;
}

unint64_t sub_249F967A4()
{
  unint64_t result = qword_269750028;
  if (!qword_269750028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750028);
  }
  return result;
}

unint64_t sub_249F967F8()
{
  unint64_t result = qword_269750030;
  if (!qword_269750030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750030);
  }
  return result;
}

uint64_t sub_249F9684C()
{
  return sub_249F968DC(&qword_269750038, (void (*)(uint64_t))type metadata accessor for WorldViewModel.Pin);
}

uint64_t sub_249F96894()
{
  return sub_249F968DC(&qword_269750040, type metadata accessor for CLLocationCoordinate2D);
}

uint64_t sub_249F968DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249F96924()
{
  return swift_release();
}

uint64_t sub_249F969F4()
{
  return swift_release();
}

void (*sub_249F96AC4(void *a1))(void *a1)
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_249F90D74(v2);
  return sub_249F6FBD0;
}

uint64_t sub_249F96B1C(CGFloat a1, CFTimeInterval a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v38 = v2;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  uint64_t v35 = *(uint64_t **)(*(void *)(v2 + 336) + 16);
  if (!v35)
  {
    uint64_t v22 = 1;
    goto LABEL_24;
  }
  int v30 = (uint64_t *)(v2 + 336);
  uint64_t v31 = v8;
  unint64_t v32 = 0;
  unint64_t v12 = 0;
  double v13 = 0.0;
  uint64_t v33 = 0x100000001;
  do
  {
    swift_getKeyPath();
    uint64_t v37 = v2;
    sub_24A056478();
    swift_release();
    uint64_t v15 = *(void *)(v2 + 336);
    if (v12 >= *(void *)(v15 + 16))
    {
      __break(1u);
LABEL_26:
      uint64_t result = sub_249F9A6E4((unint64_t)v11);
      long long v11 = (char *)result;
      *(void *)unint64_t v12 = result;
      goto LABEL_20;
    }
    unint64_t v34 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v3 = *(void *)(v36 + 72);
    sub_249F9C310(v15 + v34 + v3 * v12, (uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
    uint64_t v16 = v9;
    uint64_t v17 = (double *)&v11[*(int *)(v9 + 32)];
    double v18 = *v17 + -22.0;
    swift_getKeyPath();
    uint64_t v37 = v2;
    sub_24A056478();
    swift_release();
    CGFloat v19 = v18 + *(double *)(v2 + 144);
    double v20 = v17[1] + -22.0;
    swift_getKeyPath();
    uint64_t v37 = v2;
    sub_24A056478();
    swift_release();
    v40.origin.double y = v20 + *(double *)(v2 + 152);
    v40.size.width = 44.0;
    v40.origin.double x = v19;
    v40.size.height = 44.0;
    v39.double x = a1;
    v39.double y = a2;
    if (!CGRectContainsPoint(v40, v39))
    {
      double v14 = v13;
      uint64_t v9 = v16;
      goto LABEL_4;
    }
    uint64_t v21 = &v11[*(int *)(v16 + 36)];
    double v14 = *(double *)v21;
    uint64_t v9 = v16;
    if (v21[8])
    {
      uint64_t v33 = 0x100000000;
      unint64_t v32 = v12;
      goto LABEL_4;
    }
    if ((v33 & 0x100000000) != 0)
    {
      if ((v33 & 1) == 0)
      {
        uint64_t v33 = 0x100000000;
LABEL_14:
        double v14 = v13;
        goto LABEL_4;
      }
    }
    else if (v13 < v14)
    {
      HIDWORD(v33) = 0;
      goto LABEL_14;
    }
    unint64_t v32 = v12;
    uint64_t v33 = 0;
LABEL_4:
    ++v12;
    sub_249F9B97C((uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
    double v13 = v14;
  }
  while (v35 != (uint64_t *)v12);
  if (v33)
  {
    uint64_t v22 = 1;
    long long v8 = v31;
    goto LABEL_24;
  }
  a2 = CACurrentMediaTime();
  swift_getKeyPath();
  uint64_t v37 = v2;
  sub_24A056478();
  swift_release();
  uint64_t v37 = v2;
  swift_getKeyPath();
  sub_24A056498();
  swift_release();
  unint64_t v12 = (unint64_t)v30;
  swift_beginAccess();
  long long v11 = *(char **)(v2 + 336);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 336) = v11;
  if ((result & 1) == 0) {
    goto LABEL_26;
  }
LABEL_20:
  unint64_t v24 = v34;
  if ((v32 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v32 >= *((void *)v11 + 2))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v25 = v32;
  unint64_t v26 = v32 * v3;
  uint64_t v27 = &v11[v34 + *(int *)(v9 + 36) + v32 * v3];
  *(CFTimeInterval *)uint64_t v27 = a2;
  v27[8] = 0;
  swift_endAccess();
  uint64_t v37 = v2;
  swift_getKeyPath();
  sub_24A056488();
  swift_release();
  swift_getKeyPath();
  uint64_t v37 = v2;
  sub_24A056478();
  uint64_t result = swift_release();
  uint64_t v28 = *(void *)(v2 + 336);
  if (v25 >= *(void *)(v28 + 16))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  uint64_t v29 = v28 + v24 + v26;
  long long v8 = v31;
  sub_249F9C310(v29, (uint64_t)v31, type metadata accessor for WorldViewModel.Pin);
  uint64_t v22 = 0;
LABEL_24:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v8, v22, 1, v9);
  sub_249F92B50((uint64_t)v8);
  return sub_249F6E790((uint64_t)v8, &qword_269750050);
}

uint64_t sub_249F97090()
{
  unint64_t v1 = v0;
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_24A057438();
  sub_24A057438();
  swift_getKeyPath();
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(type metadata accessor for WorldViewModel.Pin(0) - 8);
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_249F97224(v5, (uint64_t)v8, v1);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_24A057438();
  return v8[0];
}

uint64_t sub_249F97224(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v69 = a3;
  uint64_t v5 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v67 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v56 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750058);
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  long long v11 = &v54[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v12 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = &v54[-v14];
  MEMORY[0x270FA5388](v15);
  uint64_t v68 = &v54[-v16];
  MEMORY[0x270FA5388](v17);
  MEMORY[0x270FA5388](v18);
  double v20 = &v54[-v19];
  uint64_t v73 = v5;
  uint64_t v21 = *(void *)(a1 + *(int *)(v5 + 40) + 8);
  uint64_t v57 = v23;
  uint64_t v58 = v22;
  uint64_t v63 = v11;
  if (v21)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v71 = 0;
      unint64_t v72 = 0xE000000000000000;
      sub_24A057A78();
      swift_bridgeObjectRelease();
      unint64_t v71 = 0xD000000000000010;
      unint64_t v72 = 0x800000024A0639F0;
      sub_24A057438();
      goto LABEL_6;
    }
    unint64_t v71 = 0x746943646C726F57;
    unint64_t v72 = 0xEA00000000002879;
    sub_24A057438();
LABEL_11:
    sub_24A057438();
    sub_24A057438();
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(a1 + 17) & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    unint64_t v71 = 0;
    unint64_t v72 = 0xE000000000000000;
    sub_24A057A78();
    sub_24A057438();
    sub_24A0576D8();
    sub_24A057438();
    sub_24A0576D8();
    goto LABEL_11;
  }
  unint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  sub_24A057A78();
  sub_24A057438();
  sub_24A0576D8();
  sub_24A057438();
  sub_24A0576D8();
LABEL_6:
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 17)) {
    sub_24A057438();
  }
LABEL_12:
  sub_24A057438();
LABEL_13:
  uint64_t v65 = a2;
  uint64_t v60 = a1;
  sub_249F9C310(a1, (uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
  uint64_t v24 = v67;
  uint64_t v25 = v73;
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
  v59((uint64_t)v20, 0, 1, v73);
  swift_getKeyPath();
  unint64_t v26 = v69;
  unint64_t v27 = v69 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  unint64_t v71 = v69;
  sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  unint64_t v62 = v27;
  sub_24A056478();
  swift_release();
  uint64_t v28 = v26 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  uint64_t v64 = v7;
  uint64_t v29 = (uint64_t)v63;
  uint64_t v30 = (uint64_t)&v63[*(int *)(v7 + 48)];
  sub_249F6E6C8((uint64_t)v20, (uint64_t)v63, &qword_269750050);
  uint64_t v31 = v25;
  sub_249F6E6C8(v28, v30, &qword_269750050);
  uint64_t v32 = v29;
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v33(v32, 1, v31) != 1)
  {
    uint64_t v37 = v57;
    sub_249F6E6C8(v32, v57, &qword_269750050);
    if (v33(v30, 1, v31) != 1)
    {
      uint64_t v38 = v30;
      CGPoint v39 = v56;
      sub_249F9B914(v38, (uint64_t)v56, type metadata accessor for WorldViewModel.Pin);
      BOOL v55 = sub_249F9A76C(v37, (uint64_t)v39);
      sub_249F9B97C((uint64_t)v39, type metadata accessor for WorldViewModel.Pin);
      sub_249F6E790((uint64_t)v20, &qword_269750050);
      uint64_t v31 = v73;
      sub_249F9B97C(v37, type metadata accessor for WorldViewModel.Pin);
      sub_249F6E790(v32, &qword_269750050);
      uint64_t v34 = (uint64_t)v68;
      uint64_t v36 = v59;
      uint64_t v35 = v60;
      if (!v55) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    sub_249F6E790((uint64_t)v20, &qword_269750050);
    sub_249F9B97C(v37, type metadata accessor for WorldViewModel.Pin);
LABEL_18:
    sub_249F6E790(v32, &qword_269750058);
    uint64_t v34 = (uint64_t)v68;
    uint64_t v36 = v59;
    uint64_t v35 = v60;
    goto LABEL_21;
  }
  sub_249F6E790((uint64_t)v20, &qword_269750050);
  if (v33(v30, 1, v31) != 1) {
    goto LABEL_18;
  }
  sub_249F6E790(v32, &qword_269750050);
  uint64_t v34 = (uint64_t)v68;
  uint64_t v36 = v59;
  uint64_t v35 = v60;
LABEL_20:
  sub_24A057438();
LABEL_21:
  sub_249F9C310(v35, v34, type metadata accessor for WorldViewModel.Pin);
  uint64_t v40 = 1;
  v36(v34, 0, 1, v31);
  swift_getKeyPath();
  unint64_t v41 = v69;
  unint64_t v70 = v69;
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  uint64_t v42 = *(void *)(v41 + 336);
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    uint64_t v44 = v66;
    sub_249F9C310(v42+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * (v43 - 1), (uint64_t)v66, type metadata accessor for WorldViewModel.Pin);
    uint64_t v40 = 0;
    uint64_t v45 = (uint64_t)v61;
    uint64_t v46 = (uint64_t)v68;
  }
  else
  {
    uint64_t v45 = (uint64_t)v61;
    uint64_t v46 = (uint64_t)v68;
    uint64_t v44 = v66;
  }
  uint64_t v47 = v73;
  v36((uint64_t)v44, v40, 1, v73);
  uint64_t v48 = v45 + *(int *)(v64 + 48);
  sub_249F6E6C8(v46, v45, &qword_269750050);
  sub_249F6E6C8((uint64_t)v44, v48, &qword_269750050);
  if (v33(v45, 1, v47) != 1)
  {
    uint64_t v49 = v58;
    sub_249F6E6C8(v45, v58, &qword_269750050);
    if (v33(v48, 1, v47) != 1)
    {
      uint64_t v51 = v46;
      unint64_t v52 = v56;
      sub_249F9B914(v48, (uint64_t)v56, type metadata accessor for WorldViewModel.Pin);
      BOOL v53 = sub_249F9A76C(v49, (uint64_t)v52);
      sub_249F9B97C((uint64_t)v52, type metadata accessor for WorldViewModel.Pin);
      sub_249F6E790((uint64_t)v66, &qword_269750050);
      sub_249F6E790(v51, &qword_269750050);
      sub_249F9B97C(v49, type metadata accessor for WorldViewModel.Pin);
      sub_249F6E790(v45, &qword_269750050);
      if (v53) {
        return sub_24A057438();
      }
      goto LABEL_30;
    }
    sub_249F6E790((uint64_t)v66, &qword_269750050);
    sub_249F6E790(v46, &qword_269750050);
    sub_249F9B97C(v49, type metadata accessor for WorldViewModel.Pin);
LABEL_29:
    sub_249F6E790(v45, &qword_269750058);
LABEL_30:
    sub_24A057438();
    return sub_24A057438();
  }
  sub_249F6E790((uint64_t)v44, &qword_269750050);
  sub_249F6E790(v46, &qword_269750050);
  if (v33(v48, 1, v47) != 1) {
    goto LABEL_29;
  }
  sub_249F6E790(v45, &qword_269750050);
  return sub_24A057438();
}

uint64_t sub_249F97C7C()
{
  return sub_249F97090();
}

uint64_t sub_249F97CA4(uint64_t a1)
{
  uint64_t result = sub_249F968DC(&qword_269750048, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_249F97D04()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 176) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_249F97D1C()
{
  return sub_249F97D34();
}

uint64_t sub_249F97D34()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 177) = v2;
  return result;
}

void sub_249F97D98(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for WorldViewModel.Pin(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_24A021044(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_249F97E40(v5);
  *a1 = v3;
}

void sub_249F97E40(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v199 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v194 = (uint64_t)&v181 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v212 = (uint64_t)&v181 - v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v205 = (uint64_t)&v181 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v181 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v207 = (double *)((char *)&v181 - v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (double *)((char *)&v181 - v14);
  MEMORY[0x270FA5388](v16);
  uint64_t v193 = (uint64_t)&v181 - v17;
  MEMORY[0x270FA5388](v18);
  double v20 = (char *)&v181 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v197 = (double *)((char *)&v181 - v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v201 = (double *)((char *)&v181 - v24);
  MEMORY[0x270FA5388](v25);
  unint64_t v27 = (char *)&v181 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v181 - v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v190 = (double *)((char *)&v181 - v32);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (double *)((char *)&v181 - v34);
  uint64_t v36 = a1[1];
  uint64_t v37 = sub_24A057CE8();
  if (v37 >= v36)
  {
    if (v36 < 0) {
      goto LABEL_187;
    }
    if (v36) {
      sub_249F98FA8(0, v36, 1, a1);
    }
    return;
  }
  uint64_t v206 = v10;
  if (v36 >= 0) {
    uint64_t v38 = v36;
  }
  else {
    uint64_t v38 = v36 + 1;
  }
  if (v36 < -1) {
    goto LABEL_195;
  }
  uint64_t v188 = v35;
  uint64_t v187 = v37;
  if (v36 < 2)
  {
    unint64_t v198 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80));
    uint64_t v185 = MEMORY[0x263F8EE78];
    if (v36 != 1)
    {
      uint64_t v44 = (char *)MEMORY[0x263F8EE78];
      unint64_t v45 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_156:
      uint64_t v173 = v202;
      if (v45 >= 2)
      {
        uint64_t v174 = *a1;
        if (!*a1) {
          goto LABEL_194;
        }
        uint64_t v175 = *(void *)(v199 + 72);
        do
        {
          unint64_t v176 = v45 - 2;
          uint64_t v177 = *(void *)&v44[16 * v45];
          uint64_t v178 = *(void *)&v44[16 * v45 + 24];
          sub_249F99468(v174 + v175 * v177, v174 + v175 * *(void *)&v44[16 * v45 + 16], v174 + v175 * v178, v198);
          if (v173) {
            break;
          }
          if (v178 < v177) {
            goto LABEL_183;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = sub_249F9A14C((uint64_t)v44);
          }
          if (v176 >= *((void *)v44 + 2)) {
            goto LABEL_184;
          }
          v179 = &v44[16 * v176 + 32];
          *(void *)v179 = v177;
          *((void *)v179 + 1) = v178;
          unint64_t v180 = *((void *)v44 + 2);
          if (v45 > v180) {
            goto LABEL_185;
          }
          memmove(&v44[16 * v45 + 16], &v44[16 * v45 + 32], 16 * (v180 - v45));
          *((void *)v44 + 2) = v180 - 1;
          unint64_t v45 = v180 - 1;
        }
        while (v180 > 2);
      }
LABEL_166:
      swift_bridgeObjectRelease();
      *(void *)(v185 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v39 = v38 >> 1;
    uint64_t v40 = sub_24A0575A8();
    *(void *)(v40 + 16) = v39;
    uint64_t v41 = *(unsigned __int8 *)(v199 + 80);
    uint64_t v185 = v40;
    unint64_t v198 = v40 + ((v41 + 32) & ~v41);
  }
  uint64_t v42 = v36;
  uint64_t v43 = 0;
  uint64_t v186 = v30;
  uint64_t v183 = v30 + 8;
  uint64_t v184 = v27;
  uint64_t v182 = v27 + 8;
  char v191 = v20 + 8;
  uint64_t v189 = v193 + 8;
  uint64_t v203 = v205 + 8;
  char v204 = v206 + 8;
  uint64_t v44 = (char *)MEMORY[0x263F8EE78];
  uint64_t v211 = v2;
  uint64_t v208 = v15;
  uint64_t v200 = v20;
LABEL_15:
  uint64_t v46 = v43;
  uint64_t v195 = v44;
  uint64_t v196 = v43;
  if (v43 + 1 >= v42)
  {
    uint64_t v61 = v43 + 1;
    goto LABEL_106;
  }
  uint64_t v215 = v42;
  uint64_t v47 = *a1;
  uint64_t v48 = *(void *)(v199 + 72);
  uint64_t v213 = v43 + 1;
  uint64_t v49 = v188;
  sub_249F9C310(v47 + v48 * (v43 + 1), (uint64_t)v188, type metadata accessor for WorldViewModel.Pin);
  uint64_t v210 = v47;
  uint64_t v216 = v48;
  uint64_t v50 = v47 + v48 * v46;
  uint64_t v51 = v190;
  sub_249F9C310(v50, (uint64_t)v190, type metadata accessor for WorldViewModel.Pin);
  uint64_t v52 = v2;
  BOOL v53 = (double *)((char *)v49 + *(int *)(v2 + 36));
  LODWORD(v49) = *((unsigned __int8 *)v53 + 8);
  uint64_t v54 = (uint64_t)v51;
  uint64_t v55 = (uint64_t)v186;
  sub_249F9C310(v54, (uint64_t)v186, type metadata accessor for WorldViewModel.Pin);
  if (v49 == 1)
  {
    char v56 = v183[*(int *)(v52 + 36)];
    sub_249F9B97C(v55, type metadata accessor for WorldViewModel.Pin);
    if ((v56 & 1) == 0)
    {
      LODWORD(v214) = 1;
      uint64_t v57 = v208;
      uint64_t v46 = v196;
      uint64_t v58 = v197;
      uint64_t v59 = v190;
      uint64_t v60 = v215;
      goto LABEL_34;
    }
  }
  else
  {
    sub_249F9B97C(v55, type metadata accessor for WorldViewModel.Pin);
  }
  char v62 = *((unsigned char *)v53 + 8);
  uint64_t v63 = (uint64_t)v184;
  sub_249F9C310((uint64_t)v190, (uint64_t)v184, type metadata accessor for WorldViewModel.Pin);
  uint64_t v46 = v196;
  if (v62)
  {
    sub_249F9B97C(v63, type metadata accessor for WorldViewModel.Pin);
    uint64_t v57 = v208;
    uint64_t v60 = v215;
  }
  else
  {
    char v64 = v182[*(int *)(v211 + 36)];
    sub_249F9B97C(v63, type metadata accessor for WorldViewModel.Pin);
    uint64_t v57 = v208;
    uint64_t v60 = v215;
    if (v64)
    {
      LODWORD(v214) = 0;
      uint64_t v58 = v197;
      uint64_t v59 = v190;
      goto LABEL_34;
    }
  }
  uint64_t v59 = v190;
  if ((_BYTE)v53[1] & 1) != 0 || (uint64_t v65 = (double *)((char *)v190 + *(int *)(v211 + 36)), ((_BYTE)v65[1]))
  {
    BOOL v66 = *v188 < *v190;
    if (*v188 == *v190) {
      BOOL v66 = v188[1] < v190[1];
    }
  }
  else
  {
    BOOL v66 = *v53 < *v65;
  }
  int v67 = v66;
  LODWORD(v214) = v67;
  uint64_t v58 = v197;
LABEL_34:
  sub_249F9B97C((uint64_t)v59, type metadata accessor for WorldViewModel.Pin);
  sub_249F9B97C((uint64_t)v188, type metadata accessor for WorldViewModel.Pin);
  uint64_t v61 = v46 + 2;
  if (v46 + 2 < v60)
  {
    v213 *= v216;
    uint64_t v68 = v210;
    uint64_t v69 = v216 * v61;
    while (1)
    {
      unint64_t v70 = v201;
      sub_249F9C310(v68 + v69, (uint64_t)v201, type metadata accessor for WorldViewModel.Pin);
      sub_249F9C310(v68 + v213, (uint64_t)v58, type metadata accessor for WorldViewModel.Pin);
      uint64_t v71 = (uint64_t)v58;
      uint64_t v72 = v211;
      uint64_t v73 = (double *)((char *)v70 + *(int *)(v211 + 36));
      int v74 = *((unsigned __int8 *)v73 + 8);
      sub_249F9C310(v71, (uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
      if (v74 == 1)
      {
        char v75 = v191[*(int *)(v72 + 36)];
        sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
        if ((v75 & 1) == 0)
        {
          int v76 = 1;
          uint64_t v44 = v195;
LABEL_44:
          uint64_t v58 = v197;
          goto LABEL_53;
        }
      }
      else
      {
        sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
      }
      char v77 = *((unsigned char *)v73 + 8);
      uint64_t v78 = v193;
      sub_249F9C310((uint64_t)v197, v193, type metadata accessor for WorldViewModel.Pin);
      if (v77)
      {
        sub_249F9B97C(v78, type metadata accessor for WorldViewModel.Pin);
        uint64_t v44 = v195;
      }
      else
      {
        char v79 = *(unsigned char *)(v189 + *(int *)(v211 + 36));
        sub_249F9B97C(v78, type metadata accessor for WorldViewModel.Pin);
        uint64_t v44 = v195;
        if (v79)
        {
          int v76 = 0;
          goto LABEL_44;
        }
      }
      uint64_t v58 = v197;
      if ((_BYTE)v73[1] & 1) != 0 || (uint64_t v80 = (double *)((char *)v197 + *(int *)(v211 + 36)), ((_BYTE)v80[1]))
      {
        BOOL v81 = *v201 < *v197;
        if (*v201 == *v197) {
          BOOL v81 = v201[1] < v197[1];
        }
      }
      else
      {
        BOOL v81 = *v73 < *v80;
      }
      int v76 = v81;
LABEL_53:
      sub_249F9B97C((uint64_t)v58, type metadata accessor for WorldViewModel.Pin);
      sub_249F9B97C((uint64_t)v201, type metadata accessor for WorldViewModel.Pin);
      if (v214 != v76)
      {
        uint64_t v57 = v208;
        uint64_t v46 = v196;
        uint64_t v60 = v215;
        break;
      }
      ++v61;
      v68 += v216;
      uint64_t v60 = v215;
      if (v215 == v61)
      {
        uint64_t v61 = v215;
        uint64_t v57 = v208;
        uint64_t v46 = v196;
        break;
      }
    }
  }
  uint64_t v82 = v210;
  if (!v214) {
    goto LABEL_70;
  }
  if (v61 < v46) {
    goto LABEL_188;
  }
  if (v46 < v61)
  {
    uint64_t v83 = 0;
    uint64_t v84 = v216 * (v61 - 1);
    uint64_t v85 = v46;
    uint64_t v86 = v61 * v216;
    uint64_t v87 = v85;
    uint64_t v88 = v85 * v216;
    do
    {
      if (v87 != v61 + v83 - 1)
      {
        if (!v82) {
          goto LABEL_193;
        }
        uint64_t v90 = v61;
        unint64_t v91 = v82 + v88;
        uint64_t v214 = v82 + v84;
        uint64_t v92 = v82;
        sub_249F9B914(v82 + v88, v194, type metadata accessor for WorldViewModel.Pin);
        if (v88 < v84 || v91 >= v92 + v86)
        {
          uint64_t v89 = v214;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v89 = v214;
          if (v88 != v84) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_249F9B914(v194, v89, type metadata accessor for WorldViewModel.Pin);
        uint64_t v61 = v90;
        double v20 = v200;
        uint64_t v82 = v210;
      }
      ++v87;
      --v83;
      v84 -= v216;
      v86 -= v216;
      v88 += v216;
    }
    while (v87 < v61 + v83);
    uint64_t v93 = v211;
    uint64_t v57 = v208;
    uint64_t v44 = v195;
    uint64_t v46 = v196;
    uint64_t v60 = v215;
    if (v61 >= v215) {
      goto LABEL_106;
    }
  }
  else
  {
LABEL_70:
    uint64_t v93 = v211;
    if (v61 >= v60) {
      goto LABEL_106;
    }
  }
  if (__OFSUB__(v61, v46)) {
    goto LABEL_186;
  }
  if (v61 - v46 >= v187) {
    goto LABEL_106;
  }
  if (__OFADD__(v46, v187)) {
    goto LABEL_189;
  }
  if (v46 + v187 >= v60) {
    uint64_t v94 = v60;
  }
  else {
    uint64_t v94 = v46 + v187;
  }
  if (v94 >= v46)
  {
    if (v61 == v94) {
      goto LABEL_106;
    }
    uint64_t v95 = *(void *)(v199 + 72);
    uint64_t v216 = v95 * (v61 - 1);
    uint64_t v209 = v95;
    uint64_t v215 = v61 * v95;
    uint64_t v96 = v207;
    uint64_t v192 = v94;
LABEL_85:
    uint64_t v98 = 0;
    uint64_t v210 = v61;
    while (1)
    {
      uint64_t v99 = a1;
      uint64_t v100 = *a1;
      uint64_t v214 = v215 + v98;
      sub_249F9C310(v215 + v98 + v100, (uint64_t)v57, type metadata accessor for WorldViewModel.Pin);
      uint64_t v213 = v216 + v98;
      sub_249F9C310(v216 + v98 + v100, (uint64_t)v96, type metadata accessor for WorldViewModel.Pin);
      uint64_t v101 = (double *)((char *)v57 + *(int *)(v93 + 36));
      int v102 = *((unsigned __int8 *)v101 + 8);
      uint64_t v103 = (uint64_t)v96;
      uint64_t v104 = (uint64_t)v206;
      sub_249F9C310(v103, (uint64_t)v206, type metadata accessor for WorldViewModel.Pin);
      if (v102 == 1)
      {
        char v105 = v204[*(int *)(v93 + 36)];
        sub_249F9B97C(v104, type metadata accessor for WorldViewModel.Pin);
        if ((v105 & 1) == 0)
        {
          uint64_t v96 = v207;
          sub_249F9B97C((uint64_t)v207, type metadata accessor for WorldViewModel.Pin);
          uint64_t v57 = v208;
          sub_249F9B97C((uint64_t)v208, type metadata accessor for WorldViewModel.Pin);
          a1 = v99;
          uint64_t v93 = v211;
          goto LABEL_103;
        }
      }
      else
      {
        sub_249F9B97C(v104, type metadata accessor for WorldViewModel.Pin);
      }
      char v106 = *((unsigned char *)v101 + 8);
      uint64_t v96 = v207;
      uint64_t v107 = v205;
      sub_249F9C310((uint64_t)v207, v205, type metadata accessor for WorldViewModel.Pin);
      a1 = v99;
      if (v106)
      {
        sub_249F9B97C(v107, type metadata accessor for WorldViewModel.Pin);
        uint64_t v93 = v211;
        uint64_t v57 = v208;
      }
      else
      {
        uint64_t v108 = v107;
        uint64_t v93 = v211;
        char v109 = *(unsigned char *)(v203 + *(int *)(v211 + 36));
        sub_249F9B97C(v108, type metadata accessor for WorldViewModel.Pin);
        uint64_t v57 = v208;
        if (v109)
        {
          sub_249F9B97C((uint64_t)v96, type metadata accessor for WorldViewModel.Pin);
          sub_249F9B97C((uint64_t)v57, type metadata accessor for WorldViewModel.Pin);
LABEL_83:
          uint64_t v97 = v210;
LABEL_84:
          uint64_t v61 = v97 + 1;
          v216 += v209;
          v215 += v209;
          uint64_t v46 = v196;
          if (v61 != v192) {
            goto LABEL_85;
          }
          uint64_t v61 = v192;
          uint64_t v44 = v195;
          double v20 = v200;
LABEL_106:
          if (v61 < v46) {
            goto LABEL_182;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v210 = v61;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v44 = sub_249F99D84(0, *((void *)v44 + 2) + 1, 1, v44);
          }
          unint64_t v117 = *((void *)v44 + 2);
          unint64_t v116 = *((void *)v44 + 3);
          unint64_t v45 = v117 + 1;
          if (v117 >= v116 >> 1) {
            uint64_t v44 = sub_249F99D84((char *)(v116 > 1), v117 + 1, 1, v44);
          }
          *((void *)v44 + 2) = v45;
          uint64_t v118 = v44 + 32;
          uint64_t v119 = &v44[16 * v117 + 32];
          uint64_t v120 = v210;
          *(void *)uint64_t v119 = v46;
          *((void *)v119 + 1) = v120;
          if (v117)
          {
LABEL_112:
            unint64_t v121 = v45 - 1;
            if (v45 >= 4)
            {
              uint64_t v126 = &v118[16 * v45];
              uint64_t v127 = *((void *)v126 - 8);
              uint64_t v128 = *((void *)v126 - 7);
              BOOL v132 = __OFSUB__(v128, v127);
              uint64_t v129 = v128 - v127;
              if (v132) {
                goto LABEL_171;
              }
              uint64_t v131 = *((void *)v126 - 6);
              uint64_t v130 = *((void *)v126 - 5);
              BOOL v132 = __OFSUB__(v130, v131);
              uint64_t v124 = v130 - v131;
              char v125 = v132;
              if (v132) {
                goto LABEL_172;
              }
              unint64_t v133 = v45 - 2;
              char v134 = &v118[16 * v45 - 32];
              uint64_t v136 = *(void *)v134;
              uint64_t v135 = *((void *)v134 + 1);
              BOOL v132 = __OFSUB__(v135, v136);
              uint64_t v137 = v135 - v136;
              if (v132) {
                goto LABEL_174;
              }
              BOOL v132 = __OFADD__(v124, v137);
              uint64_t v138 = v124 + v137;
              if (v132) {
                goto LABEL_177;
              }
              if (v138 >= v129)
              {
                v156 = &v118[16 * v121];
                uint64_t v158 = *(void *)v156;
                uint64_t v157 = *((void *)v156 + 1);
                BOOL v132 = __OFSUB__(v157, v158);
                uint64_t v159 = v157 - v158;
                if (v132) {
                  goto LABEL_181;
                }
                BOOL v149 = v124 < v159;
              }
              else
              {
LABEL_125:
                if (v125) {
                  goto LABEL_173;
                }
                unint64_t v133 = v45 - 2;
                uint64_t v139 = &v118[16 * v45 - 32];
                uint64_t v141 = *(void *)v139;
                uint64_t v140 = *((void *)v139 + 1);
                BOOL v142 = __OFSUB__(v140, v141);
                uint64_t v143 = v140 - v141;
                char v144 = v142;
                if (v142) {
                  goto LABEL_176;
                }
                uint64_t v145 = &v118[16 * v121];
                uint64_t v147 = *(void *)v145;
                uint64_t v146 = *((void *)v145 + 1);
                BOOL v132 = __OFSUB__(v146, v147);
                uint64_t v148 = v146 - v147;
                if (v132) {
                  goto LABEL_179;
                }
                if (__OFADD__(v143, v148)) {
                  goto LABEL_180;
                }
                if (v143 + v148 < v124) {
                  goto LABEL_137;
                }
                BOOL v149 = v124 < v148;
              }
              if (v149) {
                unint64_t v121 = v133;
              }
            }
            else
            {
              if (v45 == 3)
              {
                uint64_t v123 = *((void *)v44 + 4);
                uint64_t v122 = *((void *)v44 + 5);
                BOOL v132 = __OFSUB__(v122, v123);
                uint64_t v124 = v122 - v123;
                char v125 = v132;
                goto LABEL_125;
              }
              uint64_t v150 = *((void *)v44 + 4);
              uint64_t v151 = *((void *)v44 + 5);
              BOOL v132 = __OFSUB__(v151, v150);
              uint64_t v143 = v151 - v150;
              char v144 = v132;
LABEL_137:
              if (v144) {
                goto LABEL_175;
              }
              uint64_t v152 = &v118[16 * v121];
              uint64_t v154 = *(void *)v152;
              uint64_t v153 = *((void *)v152 + 1);
              BOOL v132 = __OFSUB__(v153, v154);
              uint64_t v155 = v153 - v154;
              if (v132) {
                goto LABEL_178;
              }
              if (v155 < v143) {
                goto LABEL_14;
              }
            }
            unint64_t v160 = v121 - 1;
            if (v121 - 1 >= v45)
            {
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
              break;
            }
            uint64_t v161 = *a1;
            if (!*a1) {
              goto LABEL_192;
            }
            uint64_t v162 = v44;
            uint64_t v163 = a1;
            uint64_t v164 = &v118[16 * v160];
            v165 = v118;
            uint64_t v166 = *(void *)v164;
            uint64_t v167 = v165;
            unint64_t v168 = v121;
            v169 = &v165[16 * v121];
            uint64_t v170 = *((void *)v169 + 1);
            uint64_t v171 = v202;
            sub_249F99468(v161 + *(void *)(v199 + 72) * *(void *)v164, v161 + *(void *)(v199 + 72) * *(void *)v169, v161 + *(void *)(v199 + 72) * v170, v198);
            uint64_t v202 = v171;
            if (v171) {
              goto LABEL_166;
            }
            if (v170 < v166) {
              goto LABEL_168;
            }
            if (v168 > *((void *)v162 + 2)) {
              goto LABEL_169;
            }
            *(void *)uint64_t v164 = v166;
            *(void *)&v167[16 * v160 + 8] = v170;
            unint64_t v172 = *((void *)v162 + 2);
            if (v168 >= v172) {
              goto LABEL_170;
            }
            uint64_t v118 = v167;
            uint64_t v44 = v162;
            unint64_t v45 = v172 - 1;
            memmove(v169, v169 + 16, 16 * (v172 - 1 - v168));
            *((void *)v162 + 2) = v172 - 1;
            double v20 = v200;
            a1 = v163;
            if (v172 <= 2) {
              goto LABEL_14;
            }
            goto LABEL_112;
          }
          unint64_t v45 = 1;
LABEL_14:
          uint64_t v42 = a1[1];
          uint64_t v43 = v210;
          uint64_t v2 = v211;
          if (v210 >= v42) {
            goto LABEL_156;
          }
          goto LABEL_15;
        }
      }
      if ((_BYTE)v101[1] & 1) != 0 || (uint64_t v110 = (double *)((char *)v96 + *(int *)(v93 + 36)), ((_BYTE)v110[1]))
      {
        BOOL v111 = *v57 < *v96;
        if (*v57 == *v96) {
          BOOL v111 = v57[1] < v96[1];
        }
      }
      else
      {
        BOOL v111 = *v101 < *v110;
      }
      char v112 = v111;
      sub_249F9B97C((uint64_t)v96, type metadata accessor for WorldViewModel.Pin);
      sub_249F9B97C((uint64_t)v57, type metadata accessor for WorldViewModel.Pin);
      if ((v112 & 1) == 0) {
        goto LABEL_83;
      }
LABEL_103:
      uint64_t v113 = *a1;
      if (!*a1) {
        goto LABEL_191;
      }
      uint64_t v114 = v113 + v216 + v98;
      sub_249F9B914(v113 + v215 + v98, v212, type metadata accessor for WorldViewModel.Pin);
      swift_arrayInitWithTakeFrontToBack();
      sub_249F9B914(v212, v114, type metadata accessor for WorldViewModel.Pin);
      uint64_t v97 = v210;
      v98 -= v209;
      if (v210 == ++v46) {
        goto LABEL_84;
      }
    }
  }
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  sub_24A057BB8();
  __break(1u);
}

void sub_249F98FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v55 = a4;
  uint64_t v43 = a1;
  uint64_t v6 = type metadata accessor for WorldViewModel.Pin(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v52 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v41 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (uint64_t)&v41 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (double *)((char *)&v41 - v14);
  MEMORY[0x270FA5388](v16);
  double v20 = (double *)((char *)&v41 - v19);
  uint64_t v50 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v21 = v17;
    uint64_t v22 = *(void *)(v18 + 72);
    uint64_t v44 = v10 + 8;
    uint64_t v45 = v47 + 8;
    uint64_t v23 = v22 * (v50 - 1);
    uint64_t v48 = v22;
    uint64_t v56 = v22 * v50;
    uint64_t v51 = v17;
    uint64_t v46 = v10;
LABEL_6:
    uint64_t v24 = 0;
    uint64_t v25 = v43;
    uint64_t v49 = v23;
    while (1)
    {
      uint64_t v26 = *v55;
      uint64_t v54 = v56 + v24;
      sub_249F9C310(v56 + v24 + v26, (uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
      uint64_t v53 = v23 + v24;
      sub_249F9C310(v23 + v24 + v26, (uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
      uint64_t v27 = (uint64_t)v20;
      uint64_t v28 = (double *)((char *)v20 + *(int *)(v21 + 36));
      uint64_t v29 = v21;
      int v30 = *((unsigned __int8 *)v28 + 8);
      uint64_t v31 = v47;
      sub_249F9C310((uint64_t)v15, v47, type metadata accessor for WorldViewModel.Pin);
      if (v30 == 1)
      {
        char v32 = *(unsigned char *)(v45 + *(int *)(v29 + 36));
        sub_249F9B97C(v31, type metadata accessor for WorldViewModel.Pin);
        if ((v32 & 1) == 0)
        {
          sub_249F9B97C((uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
          double v20 = (double *)v27;
          sub_249F9B97C(v27, type metadata accessor for WorldViewModel.Pin);
          uint64_t v21 = v51;
          uint64_t v23 = v49;
          goto LABEL_24;
        }
      }
      else
      {
        sub_249F9B97C(v31, type metadata accessor for WorldViewModel.Pin);
      }
      char v33 = *((unsigned char *)v28 + 8);
      uint64_t v34 = (uint64_t)v46;
      sub_249F9C310((uint64_t)v15, (uint64_t)v46, type metadata accessor for WorldViewModel.Pin);
      double v20 = (double *)v27;
      if (v33)
      {
        sub_249F9B97C(v34, type metadata accessor for WorldViewModel.Pin);
        uint64_t v23 = v49;
      }
      else
      {
        char v35 = v44[*(int *)(v51 + 36)];
        sub_249F9B97C(v34, type metadata accessor for WorldViewModel.Pin);
        uint64_t v23 = v49;
        if (v35)
        {
          sub_249F9B97C((uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
          sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
          uint64_t v21 = v51;
LABEL_5:
          v23 += v48;
          v56 += v48;
          if (++v50 == v42) {
            return;
          }
          goto LABEL_6;
        }
      }
      uint64_t v21 = v51;
      if ((_BYTE)v28[1] & 1) != 0 || (uint64_t v36 = (double *)((char *)v15 + *(int *)(v51 + 36)), ((_BYTE)v36[1]))
      {
        BOOL v37 = *v20 < *v15;
        if (*v20 == *v15) {
          BOOL v37 = v20[1] < v15[1];
        }
      }
      else
      {
        BOOL v37 = *v28 < *v36;
      }
      char v38 = v37;
      sub_249F9B97C((uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
      sub_249F9B97C((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
      if ((v38 & 1) == 0) {
        goto LABEL_5;
      }
LABEL_24:
      uint64_t v39 = *v55;
      if (!*v55)
      {
        __break(1u);
        return;
      }
      uint64_t v40 = v39 + v23 + v24;
      sub_249F9B914(v39 + v56 + v24, v52, type metadata accessor for WorldViewModel.Pin);
      swift_arrayInitWithTakeFrontToBack();
      sub_249F9B914(v52, v40, type metadata accessor for WorldViewModel.Pin);
      v24 -= v48;
      if (v50 == ++v25) {
        goto LABEL_5;
      }
    }
  }
}

uint64_t sub_249F99468(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for WorldViewModel.Pin(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v82 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v85 = (double *)((char *)v77 - v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v87 = (double *)((char *)v77 - v16);
  MEMORY[0x270FA5388](v17);
  uint64_t v84 = (uint64_t)v77 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (double *)((char *)v77 - v20);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (double *)((char *)v77 - v23);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (double *)((char *)v77 - v27);
  uint64_t v30 = *(void *)(v29 + 72);
  if (!v30)
  {
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  unint64_t v31 = a1;
  if (a2 - a1 == 0x8000000000000000 && v30 == -1) {
    goto LABEL_93;
  }
  int64_t v32 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v30 == -1) {
    goto LABEL_94;
  }
  uint64_t v33 = (uint64_t)(a2 - a1) / v30;
  uint64_t v90 = (double *)a1;
  uint64_t v89 = (double *)a4;
  uint64_t v34 = v32 / v30;
  v77[1] = v5;
  if (v33 >= v32 / v30)
  {
    if (v34 < 0) {
      goto LABEL_95;
    }
    uint64_t v80 = v26;
    unint64_t v81 = a1;
    uint64_t v36 = v34 * v30;
    if (a4 < a2 || a2 + v36 <= a4)
    {
      unint64_t v37 = a3;
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      unint64_t v37 = a3;
      if (a4 != a2) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v53 = a4 + v36;
    unint64_t v88 = a4 + v36;
    uint64_t v90 = (double *)a2;
    BOOL v54 = v36 < 1 || v81 >= a2;
    uint64_t v55 = v85;
    if (v54)
    {
LABEL_91:
      sub_249F9A00C((unint64_t *)&v90, (unint64_t *)&v89, (uint64_t *)&v88);
      return 1;
    }
    uint64_t v56 = -v30;
    uint64_t v78 = v82 + 8;
    uint64_t v79 = v80 + 8;
    uint64_t v83 = -v30;
    uint64_t v84 = v10;
    while (1)
    {
      unint64_t v57 = a4;
      uint64_t v58 = (uint64_t)v87;
      sub_249F9C310(v53 + v56, (uint64_t)v87, type metadata accessor for WorldViewModel.Pin);
      unint64_t v59 = a2 + v56;
      sub_249F9C310(a2 + v56, (uint64_t)v55, type metadata accessor for WorldViewModel.Pin);
      uint64_t v60 = v58 + *(int *)(v10 + 36);
      uint64_t v61 = (uint64_t)v55;
      uint64_t v62 = v10;
      int v63 = *(unsigned __int8 *)(v60 + 8);
      uint64_t v64 = v80;
      sub_249F9C310(v61, v80, type metadata accessor for WorldViewModel.Pin);
      unint64_t v86 = a2;
      if (v63 == 1)
      {
        char v65 = *(unsigned char *)(v79 + *(int *)(v62 + 36));
        sub_249F9B97C(v64, type metadata accessor for WorldViewModel.Pin);
        uint64_t v66 = (uint64_t)v82;
        if ((v65 & 1) == 0)
        {
          char v67 = 1;
          a4 = v57;
          uint64_t v55 = v85;
          uint64_t v68 = v87;
          goto LABEL_77;
        }
      }
      else
      {
        sub_249F9B97C(v64, type metadata accessor for WorldViewModel.Pin);
        uint64_t v66 = (uint64_t)v82;
      }
      char v69 = *(unsigned char *)(v60 + 8);
      sub_249F9C310((uint64_t)v85, v66, type metadata accessor for WorldViewModel.Pin);
      a4 = v57;
      if (v69)
      {
        sub_249F9B97C(v66, type metadata accessor for WorldViewModel.Pin);
        uint64_t v68 = v87;
LABEL_69:
        uint64_t v55 = v85;
        if ((*(unsigned char *)(v60 + 8) & 1) != 0
          || (uint64_t v71 = (double *)((char *)v85 + *(int *)(v84 + 36)), ((_BYTE)v71[1] & 1) != 0))
        {
          BOOL v72 = *v68 < *v85;
          if (*v68 == *v85) {
            BOOL v72 = v68[1] < v85[1];
          }
        }
        else
        {
          BOOL v72 = *(double *)v60 < *v71;
        }
        char v67 = v72;
        goto LABEL_77;
      }
      char v70 = v78[*(int *)(v84 + 36)];
      sub_249F9B97C(v66, type metadata accessor for WorldViewModel.Pin);
      uint64_t v68 = v87;
      if ((v70 & 1) == 0) {
        goto LABEL_69;
      }
      char v67 = 0;
      uint64_t v55 = v85;
LABEL_77:
      uint64_t v73 = v83;
      unint64_t v74 = v37 + v83;
      sub_249F9B97C((uint64_t)v55, type metadata accessor for WorldViewModel.Pin);
      sub_249F9B97C((uint64_t)v68, type metadata accessor for WorldViewModel.Pin);
      if (v67)
      {
        if (v37 < v86 || v74 >= v86)
        {
          uint64_t v10 = v84;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v56 = v83;
        }
        else
        {
          uint64_t v56 = v83;
          uint64_t v10 = v84;
          if (v37 != v86) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        uint64_t v90 = (double *)((char *)v90 + v56);
      }
      else
      {
        unint64_t v75 = v88;
        v88 += v73;
        uint64_t v56 = v73;
        if (v37 < v75 || v74 >= v75)
        {
          uint64_t v10 = v84;
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v59 = v86;
        }
        else
        {
          uint64_t v10 = v84;
          unint64_t v59 = v86;
          if (v37 != v75) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
      }
      unint64_t v53 = v88;
      if (v88 > a4)
      {
        a2 = v59;
        unint64_t v37 = v74;
        if (v59 > v81) {
          continue;
        }
      }
      goto LABEL_91;
    }
  }
  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = v33 * v30;
    unint64_t v86 = a3;
    uint64_t v87 = v21;
    if (a4 < v31 || v31 + v35 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v31)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v85 = (double *)(a4 + v35);
    unint64_t v88 = a4 + v35;
    if (v35 >= 1 && a2 < v86)
    {
      uint64_t v82 = (char *)(v84 + 8);
      uint64_t v83 = (uint64_t)(v87 + 1);
      uint64_t v39 = (uint64_t)v87;
      while (1)
      {
        sub_249F9C310(a2, (uint64_t)v28, type metadata accessor for WorldViewModel.Pin);
        sub_249F9C310(a4, (uint64_t)v24, type metadata accessor for WorldViewModel.Pin);
        uint64_t v40 = (double *)((char *)v28 + *(int *)(v10 + 36));
        uint64_t v41 = v10;
        int v42 = *((unsigned __int8 *)v40 + 8);
        sub_249F9C310((uint64_t)v24, v39, type metadata accessor for WorldViewModel.Pin);
        if (v42 == 1)
        {
          char v43 = *(unsigned char *)(v83 + *(int *)(v41 + 36));
          sub_249F9B97C(v39, type metadata accessor for WorldViewModel.Pin);
          uint64_t v10 = v41;
          if ((v43 & 1) == 0)
          {
            sub_249F9B97C((uint64_t)v24, type metadata accessor for WorldViewModel.Pin);
            sub_249F9B97C((uint64_t)v28, type metadata accessor for WorldViewModel.Pin);
            goto LABEL_40;
          }
        }
        else
        {
          sub_249F9B97C(v39, type metadata accessor for WorldViewModel.Pin);
          uint64_t v10 = v41;
        }
        char v44 = *((unsigned char *)v40 + 8);
        uint64_t v45 = v84;
        sub_249F9C310((uint64_t)v24, v84, type metadata accessor for WorldViewModel.Pin);
        if (v44)
        {
          sub_249F9B97C(v45, type metadata accessor for WorldViewModel.Pin);
        }
        else
        {
          char v46 = v82[*(int *)(v10 + 36)];
          sub_249F9B97C(v45, type metadata accessor for WorldViewModel.Pin);
          if (v46)
          {
            sub_249F9B97C((uint64_t)v24, type metadata accessor for WorldViewModel.Pin);
            sub_249F9B97C((uint64_t)v28, type metadata accessor for WorldViewModel.Pin);
LABEL_44:
            unint64_t v50 = (unint64_t)v90;
            unint64_t v52 = (unint64_t)v89 + v30;
            if (v90 < v89 || (unint64_t)v90 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v90 != v89)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v89 = (double *)v52;
            unint64_t v51 = a2;
            goto LABEL_51;
          }
        }
        if ((_BYTE)v40[1] & 1) != 0 || (uint64_t v47 = (double *)((char *)v24 + *(int *)(v10 + 36)), ((_BYTE)v47[1]))
        {
          BOOL v48 = *v28 < *v24;
          if (*v28 == *v24) {
            BOOL v48 = v28[1] < v24[1];
          }
        }
        else
        {
          BOOL v48 = *v40 < *v47;
        }
        char v49 = v48;
        sub_249F9B97C((uint64_t)v24, type metadata accessor for WorldViewModel.Pin);
        sub_249F9B97C((uint64_t)v28, type metadata accessor for WorldViewModel.Pin);
        if ((v49 & 1) == 0) {
          goto LABEL_44;
        }
LABEL_40:
        unint64_t v50 = (unint64_t)v90;
        unint64_t v51 = a2 + v30;
        if ((unint64_t)v90 < a2 || (unint64_t)v90 >= v51)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v90 == (double *)a2)
        {
          unint64_t v50 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_51:
        uint64_t v90 = (double *)(v50 + v30);
        a4 = (unint64_t)v89;
        if (v89 < v85)
        {
          a2 = v51;
          if (v51 < v86) {
            continue;
          }
        }
        goto LABEL_91;
      }
    }
    goto LABEL_91;
  }
LABEL_95:
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

char *sub_249F99D84(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697500A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_249F99E80(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_24A057C18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_249F99F50(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_24A057C18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_249F9A00C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_24A057C18();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_249F9A14C(uint64_t a1)
{
  return sub_249F99D84(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_249F9A160(_OWORD *a1, double a2, double a3)
{
  uint64_t v5 = *v3;
  sub_24A057E28();
  CLLocationCoordinate2D.hash(into:)();
  uint64_t v6 = sub_24A057E68();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = (double *)(*(void *)(v5 + 48) + 16 * v8);
      if (*v10 == a2 && v10[1] == a3) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    long long v13 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v8);
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_249F9A288(v8, isUniquelyReferenced_nonNull_native, a2, a3);
    *unint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *(double *)&long long v13 = a2;
    *((double *)&v13 + 1) = a3;
    uint64_t result = 1;
  }
  *a1 = v13;
  return result;
}

uint64_t sub_249F9A288(uint64_t result, char a2, double a3, double a4)
{
  unint64_t v5 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a2 & 1) != 0) {
    goto LABEL_15;
  }
  if (a2)
  {
    sub_24A0254E4();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_24A0259F4();
      goto LABEL_15;
    }
    sub_24A025F5C();
  }
  uint64_t v10 = *v4;
  sub_24A057E28();
  CLLocationCoordinate2D.hash(into:)();
  uint64_t result = sub_24A057E68();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v5 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v12 = ~v11;
    do
    {
      long long v13 = (double *)(*(void *)(v10 + 48) + 16 * v5);
      if (*v13 == a3 && v13[1] == a4) {
        goto LABEL_18;
      }
      unint64_t v5 = (v5 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
LABEL_15:
  uint64_t v15 = *v4;
  *(void *)(*v4 + 8 * (v5 >> 6) + 56) |= 1 << v5;
  uint64_t v16 = (double *)(*(void *)(v15 + 48) + 16 * v5);
  *uint64_t v16 = a3;
  v16[1] = a4;
  uint64_t v17 = *(void *)(v15 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (!v18)
  {
    *(void *)(v15 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_18:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = sub_24A057D68();
  __break(1u);
  return result;
}

uint64_t sub_249F9A3E0(double a1, double a2)
{
  uint64_t v5 = *v2;
  sub_24A057E28();
  CLLocationCoordinate2D.hash(into:)();
  uint64_t v6 = sub_24A057E68();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = (double *)(*(void *)(v5 + 48) + 16 * v8);
    if (*v10 == a1 && v10[1] == a2) {
      break;
    }
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v2;
  uint64_t v16 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_24A0259F4();
    uint64_t v14 = v16;
  }
  uint64_t v12 = *(void *)(*(void *)(v14 + 48) + 16 * v8);
  sub_249F9A520(v8);
  *uint64_t v2 = v16;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_249F9A520(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24A0579D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_24A057E28();
        sub_24A057E58();
        sub_24A057E58();
        unint64_t v10 = sub_24A057E68() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v2);
          long long v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_249F9A6E4(unint64_t a1)
{
  return sub_249FBA27C(0, *(void *)(a1 + 16), 0, a1);
}

__n128 sub_249F9A6F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  __n128 result = *(__n128 *)(v0 + 24);
  long long v3 = *(_OWORD *)(v0 + 40);
  *(__n128 *)(v1 + 144) = result;
  *(_OWORD *)(v1 + 160) = v3;
  return result;
}

uint64_t sub_249F9A70C()
{
  return sub_249F91434(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_249F9A730(void *a1)
{
  return sub_249FBA73C(0, a1[2], 0, a1);
}

void *sub_249F9A744(void *a1)
{
  return sub_249FB9F34(0, a1[2], 0, a1);
}

uint64_t sub_249F9A758(unint64_t a1)
{
  return sub_249FBAC34(0, *(void *)(a1 + 16), 0, a1);
}

BOOL sub_249F9A76C(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16)) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 17) != *(unsigned __int8 *)(a2 + 17)) {
    return 0;
  }
  uint64_t v5 = (int *)type metadata accessor for WorldViewModel.Pin(0);
  if ((MEMORY[0x24C5B7BF0](a1 + v5[7], a2 + v5[7]) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = v5[8];
  double v7 = *(double *)(a1 + v6);
  double v8 = *(double *)(a1 + v6 + 8);
  unint64_t v9 = (double *)(a2 + v6);
  if (v7 != *v9 || v8 != v9[1]) {
    return 0;
  }
  uint64_t v12 = v5[9];
  long long v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  BOOL v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      return 0;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      return 0;
    }
  }
  uint64_t v17 = v5[10];
  BOOL v18 = (void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  if (v19) {
    return v21 && (*v18 == *v20 && v19 == v21 || (sub_24A057D48() & 1) != 0);
  }
  return !v21;
}

uint64_t sub_249F9A894()
{
  return sub_249F92AE0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted, &qword_269750050);
}

uint64_t sub_249F9A8C0(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for WorldViewModel.Pin(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v18 - v8;
  uint64_t v11 = (double *)((char *)a1 + *(int *)(v10 + 36));
  int v12 = *((unsigned __int8 *)v11 + 8);
  sub_249F9C310((uint64_t)a2, (uint64_t)&v18 - v8, type metadata accessor for WorldViewModel.Pin);
  if (v12 == 1)
  {
    char v13 = v9[*(int *)(v4 + 36) + 8];
    sub_249F9B97C((uint64_t)v9, type metadata accessor for WorldViewModel.Pin);
    if ((v13 & 1) == 0) {
      return 1;
    }
    sub_249F9C310((uint64_t)a2, (uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
    sub_249F9B97C((uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
    goto LABEL_8;
  }
  sub_249F9B97C((uint64_t)v9, type metadata accessor for WorldViewModel.Pin);
  sub_249F9C310((uint64_t)a2, (uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
  char v14 = v6[*(int *)(v4 + 36) + 8];
  sub_249F9B97C((uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
  if (v14) {
    return 0;
  }
  int v16 = (double *)((char *)a2 + *(int *)(v4 + 36));
  if ((_BYTE)v16[1])
  {
LABEL_8:
    BOOL v17 = *a1 < *a2;
    if (*a1 == *a2) {
      return a1[1] < a2[1];
    }
    return v17;
  }
  return *v11 < *v16;
}

uint64_t sub_249F9AAB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_249F9AB14()
{
  unint64_t result = qword_269750068;
  if (!qword_269750068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750068);
  }
  return result;
}

unint64_t sub_249F9AB68()
{
  unint64_t result = qword_269750070;
  if (!qword_269750070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750070);
  }
  return result;
}

unint64_t sub_249F9ABBC()
{
  unint64_t result = qword_269750080;
  if (!qword_269750080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269750080);
  }
  return result;
}

uint64_t sub_249F9AC10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F9AC7C()
{
  return sub_249F9ADD4();
}

uint64_t sub_249F9AC94()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249F9ACCC()
{
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249F9AD14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_249F6C87C;
  return sub_249F951A4(a1, v4, v5, v7, v6);
}

uint64_t sub_249F9ADD4()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_249F9AE20()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  long long v3 = *(_OWORD *)(v2 + 264);
  long long v4 = *(_OWORD *)(v2 + 280);
  v16[4] = *(_OWORD *)(v2 + 248);
  v16[5] = v3;
  long long v5 = *(_OWORD *)(v2 + 232);
  v16[2] = *(_OWORD *)(v2 + 216);
  v16[3] = v5;
  uint64_t v17 = *(void *)(v2 + 328);
  long long v6 = *(_OWORD *)(v2 + 312);
  v16[7] = *(_OWORD *)(v2 + 296);
  unsigned char v16[8] = v6;
  v16[6] = v4;
  long long v7 = *(_OWORD *)(v2 + 200);
  v16[0] = *(_OWORD *)(v2 + 184);
  v16[1] = v7;
  long long v8 = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 200) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 184) = v8;
  long long v9 = *(_OWORD *)(v1 + 32);
  long long v10 = *(_OWORD *)(v1 + 48);
  long long v11 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 + 264) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 248) = v11;
  *(_OWORD *)(v2 + 232) = v10;
  *(_OWORD *)(v2 + 216) = v9;
  long long v12 = *(_OWORD *)(v1 + 96);
  long long v13 = *(_OWORD *)(v1 + 112);
  long long v14 = *(_OWORD *)(v1 + 128);
  *(void *)(v2 + 328) = *(void *)(v1 + 144);
  *(_OWORD *)(v2 + 296) = v13;
  *(_OWORD *)(v2 + 312) = v14;
  *(_OWORD *)(v2 + 280) = v12;
  sub_249F7AF70(v1);
  return sub_249F8B2B8((uint64_t)v16);
}

uint64_t sub_249F9AEF4()
{
  *(void *)(*(void *)(v0 + 16) + 128) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_249F9AF30()
{
  return sub_249F91A4C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249F9AF4C()
{
  return sub_249F91F5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249F9AF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorldViewModel.Pin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F9AFCC(double *a1)
{
  return sub_249F92F04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_249F9AFF8()
{
  return sub_249F9C38C();
}

void sub_249F9B018()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 136) = *(unsigned char *)(v0 + 24);
}

double sub_249F9B030@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A056538();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || (swift_bridgeObjectRetain(), uint64_t v13 = sub_24A057C38(), swift_bridgeObjectRelease(), v13))
  {
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F6E6C8(v14, (uint64_t)v8, &qword_26B16FAA8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_249FB8AA8((uint64_t)v12);
      sub_249F6E790((uint64_t)v8, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    }
    swift_bridgeObjectRetain_n();
    BOOL v15 = sub_24A056518();
    os_log_type_t v16 = sub_24A0577B8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      double v35 = COERCE_DOUBLE(swift_slowAlloc());
      *(double *)char v38 = v35;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v37 = sub_249F782DC(0x70614D646C726F57, 0xE800000000000000, (uint64_t *)v38);
      uint64_t v36 = v9;
      sub_24A057978();
      *(_WORD *)(v17 + 12) = 2082;
      if (a2)
      {
        unint64_t v18 = a2;
      }
      else
      {
        a1 = 0x3E4C4C554E3CLL;
        unint64_t v18 = 0xE600000000000000;
      }
      uint64_t v34 = v12;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_249F782DC(a1, v18, (uint64_t *)v38);
      sub_24A057978();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249F61000, v15, v16, "[%{public}s] Cannot map world type from %{public}s.", (uint8_t *)v17, 0x16u);
      double v19 = v35;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](*(void *)&v19, -1, -1);
      MEMORY[0x24C5BA360](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v36);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  if (qword_26974F360 != -1) {
    swift_once();
  }
  v38[6] = xmmword_2697524D8;
  v38[7] = *(_OWORD *)&byte_2697524E8;
  v38[8] = xmmword_2697524F8;
  uint64_t v39 = qword_269752508;
  v38[2] = xmmword_269752498;
  v38[3] = *(_OWORD *)&qword_2697524A8;
  unsigned char v38[4] = xmmword_2697524B8;
  v38[5] = xmmword_2697524C8;
  v38[0] = xmmword_269752478;
  v38[1] = *(_OWORD *)&qword_269752488;
  uint64_t v36 = unk_2697524F0;
  uint64_t v20 = *((void *)&xmmword_2697524F8 + 1);
  double v35 = *(double *)&xmmword_2697524F8;
  uint64_t v21 = qword_269752508;
  long long v22 = xmmword_2697524C8;
  long long v23 = xmmword_2697524D8;
  char v24 = byte_2697524E8;
  uint64_t v25 = *((void *)&xmmword_2697524B8 + 1);
  uint64_t v26 = xmmword_2697524B8;
  uint64_t v27 = unk_2697524B0;
  uint64_t v28 = qword_2697524A8;
  uint64_t v29 = *((void *)&xmmword_269752498 + 1);
  uint64_t v30 = xmmword_269752498;
  long long v31 = *(_OWORD *)&qword_269752488;
  long long v32 = xmmword_269752478;
  sub_249F7AF70((uint64_t)v38);
  *(_OWORD *)a3 = v32;
  *(_OWORD *)(a3 + 16) = v31;
  *(void *)(a3 + 32) = v30;
  *(void *)(a3 + 40) = v29;
  *(void *)(a3 + 48) = v28;
  *(void *)(a3 + 56) = v27;
  *(void *)(a3 + 64) = v26;
  *(void *)(a3 + 72) = v25;
  *(_OWORD *)(a3 + 80) = v22;
  *(_OWORD *)(a3 + 96) = v23;
  *(unsigned char *)(a3 + 112) = v24;
  double result = v35;
  *(void *)(a3 + 120) = v36;
  *(double *)(a3 + 128) = result;
  *(void *)(a3 + 136) = v20;
  *(void *)(a3 + 144) = v21;
  return result;
}

uint64_t sub_249F9B59C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F9C6C0;
  return sub_249F8D244(a1, v4, v5, v6);
}

uint64_t sub_249F9B654(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249F8D9CC(a1, v4, v5, v6);
}

uint64_t objectdestroy_159Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_249F9B74C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F9C6C0;
  return sub_249F8E6A4(a1, v4, v5, v6);
}

uint64_t sub_249F9B800()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 192, 7);
}

uint64_t sub_249F9B850(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F9C6C0;
  return sub_249F8F0A4(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_249F9B914(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F9B97C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249F9B9DC()
{
  return sub_249F92AE0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_2697515A0);
}

uint64_t sub_249F9BA08(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249F9BA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for City();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v27 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (v17)
  {
    unint64_t v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v21 = v20 | (v19 << 6);
LABEL_5:
    sub_249F9C310(*(void *)(a1 + 48) + *(void *)(v8 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for City);
    sub_249F9B914((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for City);
    sub_249F8E27C((uint64_t)v10, a2, a3);
    uint64_t result = sub_249F9B97C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for City);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v19 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v19);
  if (v23)
  {
LABEL_19:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_5;
  }
  int64_t v24 = v19 + 1;
  if (v19 + 1 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v19 + 2;
  if (v19 + 2 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v19 + 3;
  if (v19 + 3 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v19 + 4;
  if (v19 + 4 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_18:
    int64_t v19 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_249F9BCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v4 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v56 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v51 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v50 - v9;
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v52 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v64 = a2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  uint64_t v14 = (uint64_t *)(a2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  int64_t v53 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v54 = v4;
  uint64_t v59 = a1;
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  unint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v55 = a2;
  while (1)
  {
    if (v13)
    {
      uint64_t v62 = (v13 - 1) & v13;
      int64_t v63 = v15;
      unint64_t v17 = __clz(__rbit64(v13)) | (v15 << 6);
      goto LABEL_25;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_44;
    }
    if (v18 >= v53) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v52 + 8 * v18);
    int64_t v20 = v15 + 1;
    if (!v19)
    {
      int64_t v20 = v15 + 2;
      if (v15 + 2 >= v53) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v52 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v15 + 3;
        if (v15 + 3 >= v53) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v52 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v15 + 4;
          if (v15 + 4 >= v53) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v52 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v62 = (v19 - 1) & v19;
    int64_t v63 = v20;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_25:
    uint64_t v22 = (uint64_t)v58;
    unint64_t v23 = (double *)(*(void *)(v59 + 48) + 16 * v17);
    double v25 = *v23;
    double v24 = v23[1];
    uint64_t v26 = v61;
    int64_t v27 = *v60;
    (*v60)(v58, 1, 1, v61);
    swift_getKeyPath();
    uint64_t v65 = a2;
    sub_249F968DC(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
    sub_24A056478();
    swift_release();
    uint64_t v65 = a2;
    swift_getKeyPath();
    sub_24A056498();
    swift_release();
    swift_beginAccess();
    if ((*v57)(v22, 1, v26) != 1)
    {
      sub_249F9B914(v22, v56, type metadata accessor for WorldViewModel.Pin);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = (void *)*v14;
      double v35 = v66;
      uint64_t *v14 = 0x8000000000000000;
      unint64_t v37 = sub_24A0155B8(v25, v24);
      uint64_t v38 = v35[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      char v41 = v36;
      if (v35[3] < v40)
      {
        sub_249FFBA14(v40, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = sub_24A0155B8(v25, v24);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_47;
        }
        unint64_t v37 = v42;
        char v44 = v66;
        if ((v41 & 1) == 0) {
          goto LABEL_39;
        }
LABEL_37:
        sub_249F9AF68(v56, v44[7] + *(void *)(v54 + 72) * v37);
LABEL_41:
        uint64_t *v14 = (uint64_t)v44;
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        char v44 = v66;
        if (v36) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_24A000AD0();
        char v44 = v66;
        if (v41) {
          goto LABEL_37;
        }
      }
LABEL_39:
      v44[(v37 >> 6) + 8] |= 1 << v37;
      uint64_t v45 = (double *)(v44[6] + 16 * v37);
      *uint64_t v45 = v25;
      v45[1] = v24;
      sub_249F9B914(v56, v44[7] + *(void *)(v54 + 72) * v37, type metadata accessor for WorldViewModel.Pin);
      uint64_t v46 = v44[2];
      BOOL v47 = __OFADD__(v46, 1);
      uint64_t v48 = v46 + 1;
      if (v47) {
        goto LABEL_45;
      }
      void v44[2] = v48;
      goto LABEL_41;
    }
    sub_249F6E790(v22, &qword_269750050);
    unint64_t v28 = sub_24A0155B8(v25, v24);
    uint64_t v29 = (uint64_t)v51;
    if (v30)
    {
      unint64_t v31 = v28;
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *v14;
      uint64_t v66 = (void *)*v14;
      uint64_t *v14 = 0x8000000000000000;
      if ((v32 & 1) == 0)
      {
        sub_24A000AD0();
        uint64_t v33 = (uint64_t)v66;
      }
      sub_249F9B914(*(void *)(v33 + 56) + *(void *)(v54 + 72) * v31, v29, type metadata accessor for WorldViewModel.Pin);
      sub_249FFDFE0(v31, v33);
      uint64_t *v14 = v33;
      swift_bridgeObjectRelease();
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = 1;
    }
    v27((char *)v29, v16, 1, v61);
    sub_249F6E790(v29, &qword_269750050);
LABEL_6:
    a2 = v55;
    unint64_t v13 = v62;
    int64_t v15 = v63;
    swift_endAccess();
    uint64_t v65 = a2;
    swift_getKeyPath();
    sub_24A056488();
    swift_release();
  }
  uint64_t v21 = v15 + 5;
  if (v15 + 5 >= v53) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v52 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v15 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v53) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v52 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = sub_24A057D78();
  __break(1u);
  return result;
}

uint64_t sub_249F9C310(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249F9C378(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249F9C38C()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath;
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)uint64_t v2 = *(void *)(v0 + 24);
  *(_OWORD *)(v2 + 8) = v3;
  *(unsigned char *)(v2 + 24) = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249F9C3F0(long long *a1, uint64_t a2)
{
  return a2;
}

uint64_t getEnumTagSinglePayload for WorldViewModelContext.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for WorldViewModelContext.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249F9C518);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249F9C540()
{
  return 0;
}

ValueMetadata *type metadata accessor for WorldViewModelContext.CodingKeys()
{
  return &type metadata for WorldViewModelContext.CodingKeys;
}

unint64_t sub_249F9C55C()
{
  unint64_t result = qword_269750130;
  if (!qword_269750130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750130);
  }
  return result;
}

unint64_t sub_249F9C5B4()
{
  unint64_t result = qword_269750138;
  if (!qword_269750138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750138);
  }
  return result;
}

unint64_t sub_249F9C60C()
{
  unint64_t result = qword_269750140;
  if (!qword_269750140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750140);
  }
  return result;
}

void sub_249F9C660()
{
}

uint64_t sub_249F9C678()
{
  return sub_249F9A894();
}

uint64_t sub_249F9C690()
{
  return sub_249F9A70C();
}

uint64_t sub_249F9C6A8()
{
  return sub_249F9AF30();
}

void sub_249F9C764()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for ComplicationsLabel();
  objc_msgSendSuper2(&v11, sel_layoutSubviews);
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_complicationViews];
  if (v1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_24A057BD8())
  {
    uint64_t v3 = 4;
    uint64_t v4 = 0;
    if ((v1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      id v5 = (id)MEMORY[0x24C5B92B0](v4, v1);
      goto LABEL_6;
    }
    while (1)
    {
      id v5 = *(id *)(v1 + 8 * v3);
LABEL_6:
      uint64_t v6 = v5;
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_superview);

      if (!v8) {
        objc_msgSend(v0, sel_addSubview_, v6);
      }

      if (v7 == v2) {
        goto LABEL_14;
      }
      uint64_t v4 = ++v3 - 4;
      if ((v1 & 0xC000000000000001) != 0) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain_n();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  objc_msgSend(v0, sel_bounds);
  sub_249F9C96C(1, v9, v10);
}

void sub_249F9C96C(char a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_complicationViews;
  unint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_complicationViews);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24A057BD8();
    if (v8)
    {
LABEL_3:
      uint64_t v43 = MEMORY[0x263F8EE78];
      sub_249FBAE48(0, v8 & ~(v8 >> 63), 0);
      if (v8 < 0)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        return;
      }
      uint64_t v9 = 0;
      uint64_t v10 = v43;
      do
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x24C5B92B0](v9, v7);
        }
        else {
          id v11 = *(id *)(v7 + 8 * v9 + 32);
        }
        uint64_t v12 = v11;
        objc_msgSend(v11, sel_sizeThatFits_, a2, a3);
        uint64_t v14 = v13;
        uint64_t v16 = v15;

        unint64_t v18 = *(void *)(v43 + 16);
        unint64_t v17 = *(void *)(v43 + 24);
        if (v18 >= v17 >> 1) {
          sub_249FBAE48(v17 > 1, v18 + 1, 1);
        }
        ++v9;
        *(void *)(v43 + 16) = v18 + 1;
        uint64_t v19 = v43 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v43 + 16);
      if (v20) {
        goto LABEL_12;
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (v20)
  {
LABEL_12:
    double v21 = *(double *)(v10 + 40);
    uint64_t v22 = v20 - 1;
    if (v22)
    {
      unint64_t v23 = (double *)(v10 + 56);
      double v24 = *(double *)(v10 + 40);
      do
      {
        double v25 = *v23;
        v23 += 2;
        double v26 = v25;
        if (v24 < v25)
        {
          double v21 = v26;
          double v24 = v26;
        }
        --v22;
      }
      while (v22);
    }
    goto LABEL_21;
  }
LABEL_20:
  double v21 = 0.0;
LABEL_21:
  unint64_t v27 = *(void *)(v4 + v42);
  if (v27 >> 62) {
    goto LABEL_40;
  }
  uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v28)
  {
    if (v28 < 1) {
      goto LABEL_44;
    }
    if ((unint64_t)(v28 - 1) >= *(void *)(v10 + 16)) {
      goto LABEL_45;
    }
    uint64_t v29 = 0;
    uint64_t v40 = OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_contentsSpacing;
    char v30 = (double *)(v10 + 32);
    double v31 = 0.0;
    while (1)
    {
      if ((v27 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x24C5B92B0](v29, v27);
      }
      else {
        id v33 = *(id *)(v27 + 8 * v29 + 32);
      }
      uint64_t v34 = v33;
      CGFloat v35 = *v30;
      if (a1) {
        objc_msgSend(v33, sel_setFrame_, v31, 0.0, *v30, v21);
      }
      unint64_t v36 = *(void *)(v4 + v42);
      if (v36 >> 62) {
        break;
      }
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v38 = v37 - 1;
      if (__OFSUB__(v37, 1)) {
        goto LABEL_39;
      }
LABEL_35:
      if (v29 == v38)
      {
      }
      else
      {
        v44.origin.double y = 0.0;
        v44.origin.double x = v31;
        v44.size.width = v35;
        v44.size.height = v21;
        double MaxX = CGRectGetMaxX(v44);

        double v31 = MaxX + *(double *)(v4 + v40);
      }
      ++v29;
      v30 += 2;
      if (v28 == v29) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24A057BD8();
    swift_bridgeObjectRelease();
    uint64_t v38 = v39 - 1;
    if (!__OFSUB__(v39, 1)) {
      goto LABEL_35;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_24A057BD8();
  }
  CGFloat v35 = 0.0;
  double v31 = 0.0;
LABEL_42:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45.origin.double y = 0.0;
  v45.origin.double x = v31;
  v45.size.width = v35;
  v45.size.height = v21;
  CGRectGetMaxX(v45);
  v46.origin.double y = 0.0;
  v46.origin.double x = v31;
  v46.size.width = v35;
  v46.size.height = v21;
  CGRectGetMaxY(v46);
}

id sub_249F9CD30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComplicationsLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ComplicationsLabel()
{
  return self;
}

char *sub_249F9CDE4(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *(void *)a1 = *a2;
    a1 = &v6[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v7 = sub_24A056238();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = sub_24A0563F8();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        uint64_t v13 = *(int *)(v8 + 64);
        uint64_t v14 = *(char **)((char *)a2 + v13);
        *(void *)&a1[v13] = v14;
        id v15 = v14;
        break;
      case 3u:
        uint64_t v16 = *a2;
        *(void *)a1 = *a2;
        a1[8] = *((unsigned char *)a2 + 8);
        unint64_t v17 = v16;
        break;
      default:
        unint64_t v18 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v18;
        uint64_t v19 = a2[2];
        *((void *)a1 + 2) = v19;
        swift_bridgeObjectRetain();
        uint64_t v20 = v19;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_249F9CFD8(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      swift_bridgeObjectRelease();
      a1 += 2;
      goto LABEL_4;
    case 2u:
      uint64_t v2 = sub_24A056238();
      (*(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
      uint64_t v4 = (char *)a1 + *(int *)(v3 + 48);
      uint64_t v5 = sub_24A0563F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      a1 = (void **)((char *)a1 + *(int *)(v3 + 64));
      goto LABEL_4;
    case 3u:
LABEL_4:
      uint64_t v6 = *a1;

      break;
    default:
      return;
  }
}

uint64_t sub_249F9D104(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = sub_24A056238();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_24A0563F8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      uint64_t v10 = *(int *)(v5 + 64);
      uint64_t v11 = *(void **)(a2 + v10);
      *(void *)(a1 + v10) = v11;
      id v12 = v11;
      break;
    case 3u:
      uint64_t v13 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      id v14 = v13;
      break;
    default:
      uint64_t v15 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v15;
      uint64_t v16 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v16;
      swift_bridgeObjectRetain();
      id v17 = v16;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_249F9D2A8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_249F9D46C(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v6 = sub_24A056238();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = a1 + v8;
        uint64_t v10 = a2 + v8;
        uint64_t v11 = sub_24A0563F8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        uint64_t v12 = *(int *)(v7 + 64);
        uint64_t v13 = *(void **)(a2 + v12);
        *(void *)(a1 + v12) = v13;
        id v14 = v13;
        break;
      case 3u:
        uint64_t v15 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        id v16 = v15;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v4 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v4;
        swift_bridgeObjectRetain();
        id v5 = v4;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_249F9D46C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ComplicationsLabelContent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ComplicationsLabelContent()
{
  uint64_t result = qword_269750178;
  if (!qword_269750178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_249F9D514(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_24A056238();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_24A0563F8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)&a1[*(int *)(v7 + 64)] = *(void *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_249F9D638(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_249F9D46C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_24A056238();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_24A0563F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)&a1[*(int *)(v7 + 64)] = *(void *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_249F9D76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_249F9D794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_249F9D7C0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_249F9D7D0()
{
  v3[4] = &unk_24A05C000;
  v3[5] = &unk_24A05C000;
  uint64_t result = sub_24A056238();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24A0563F8();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v3[6] = v3;
      v3[7] = &unk_24A05C018;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_249F9D8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A0563F8();
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v68 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v71 = (char *)&v64 - v7;
  uint64_t v8 = sub_24A056238();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ComplicationsLabelContent();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v64 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (void **)((char *)&v64 - v18);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (void **)((char *)&v64 - v21);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750188);
  MEMORY[0x270FA5388](v23 - 8);
  double v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)&v25[*(int *)(v26 + 56)];
  sub_249F9DF08(a1, (uint64_t)v25);
  sub_249F9DF08(a2, v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_249F9DF08((uint64_t)v25, (uint64_t)v19);
      uint64_t v29 = *v19;
      uint64_t v28 = v19[1];
      char v30 = v19[2];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 2u:
      sub_249F9DF08((uint64_t)v25, (uint64_t)v16);
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750170);
      uint64_t v37 = *(int *)(v36 + 48);
      uint64_t v38 = *(int *)(v36 + 64);
      uint64_t v39 = *(void **)&v16[v38];
      if (swift_getEnumCaseMultiPayload() != 2)
      {

        (*(void (**)(char *, uint64_t))(v72 + 8))(&v16[v37], v73);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v16, v70);
        goto LABEL_20;
      }
      id v65 = v39;
      uint64_t v66 = (char *)(v27 + v37);
      id v67 = *(id *)(v27 + v38);
      uint64_t v41 = v69;
      uint64_t v40 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v10, v27, v70);
      uint64_t v42 = v72;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
      CGRect v44 = &v16[v37];
      uint64_t v45 = v73;
      v43(v71, v44, v73);
      v43(v68, v66, v45);
      uint64_t v46 = v40;
      char v47 = sub_24A0561D8();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v41 + 8);
      v48(v16, v40);
      if (v47)
      {
        id v49 = v67;
        uint64_t v50 = v68;
        if (MEMORY[0x24C5B7BF0](v71, v68))
        {
          sub_249F8A378();
          id v51 = v65;
          char v52 = sub_24A057938();

          int64_t v53 = *(void (**)(char *, uint64_t))(v72 + 8);
          uint64_t v54 = v50;
          uint64_t v55 = v73;
          v53(v54, v73);
          v53(v71, v55);
          v48(v10, v46);
          goto LABEL_23;
        }

        uint64_t v61 = v73;
        uint64_t v62 = *(void (**)(char *, uint64_t))(v72 + 8);
        v62(v50, v73);
        v62(v71, v61);
      }
      else
      {

        uint64_t v60 = *(void (**)(char *, uint64_t))(v42 + 8);
        v60(v68, v45);
        v60(v71, v45);
      }
      v48(v10, v46);
      goto LABEL_27;
    case 3u:
      sub_249F9DF08((uint64_t)v25, (uint64_t)v13);
      char v30 = *(void **)v13;
      char v56 = v13[8];
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_18;
      }
      unint64_t v57 = *(void **)v27;
      char v58 = *(unsigned char *)(v27 + 8);
      sub_249F8A378();
      char v59 = sub_24A057938();

      if ((v59 & 1) == 0) {
        goto LABEL_27;
      }
      sub_249F9D46C((uint64_t)v25);
      char v52 = v56 ^ v58 ^ 1;
      return v52 & 1;
    default:
      sub_249F9DF08((uint64_t)v25, (uint64_t)v22);
      uint64_t v29 = *v22;
      uint64_t v28 = v22[1];
      char v30 = v22[2];
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_18:

LABEL_20:
        sub_249F9DF6C((uint64_t)v25);
LABEL_28:
        char v52 = 0;
        return v52 & 1;
      }
LABEL_5:
      double v31 = *(void **)v27;
      char v32 = *(void **)(v27 + 8);
      id v33 = *(void **)(v27 + 16);
      if (v29 == v31 && v28 == v32)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v35 = sub_24A057D48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {

LABEL_27:
          sub_249F9D46C((uint64_t)v25);
          goto LABEL_28;
        }
      }
      sub_249F8A378();
      char v52 = sub_24A057938();

LABEL_23:
      sub_249F9D46C((uint64_t)v25);
      return v52 & 1;
  }
}

uint64_t sub_249F9DF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ComplicationsLabelContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F9DF6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750188);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of ClockFaceContext.init(newContextFor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static ClockFaceContext.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ClockFaceContext.look.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ClockFaceContext.look.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of ClockFaceContext.look.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

void (*sub_249F9E030(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 16);
  v3[7] = v1;
  void v3[8] = v4;
  uint64_t v5 = v4 + 4;
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  v3[6] = v6;
  return sub_249F9E0EC;
}

void sub_249F9E0EC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v5 = *(void *)(*(void *)a1 + 56);
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(*(void *)a1 + 64) + 16);
  swift_beginAccess();
  if (a2)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v6);
    *(void *)(v5 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v6);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v6);
    *(void *)(v5 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v6);
    swift_endAccess();
  }
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t sub_249F9E1DC()
{
  type metadata accessor for ClockFaceContextStore();
  swift_allocObject();
  uint64_t result = sub_249F9E218();
  qword_269752358 = result;
  return result;
}

uint64_t sub_249F9E218()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24A056538();
  MEMORY[0x270FA5388](v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697501A8);
  uint64_t v4 = swift_allocObject();
  type metadata accessor for CPUnfairLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v1 + 16) = v4;
  id v7 = objc_msgSend(self, sel_standardUserDefaults);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_dataForKey_, v8);

  if (v9)
  {
    uint64_t v10 = sub_24A056038();
    unint64_t v12 = v11;

    sub_24A055FA8();
    swift_allocObject();
    sub_24A055F98();
    sub_249F9F878();
    sub_24A055F88();
    unint64_t v13 = v12;
    uint64_t v14 = *(void *)(v20[0] + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)(v20[0] + 144);
      do
      {
        LOBYTE(v20[0]) = *((unsigned char *)v15 - 112);
        uint64_t v16 = v15[3];
        uint64_t v17 = v15[4];
        uint64_t v18 = __swift_project_boxed_opaque_existential_1(v15, v16);
        sub_249F9F92C((uint64_t)v18, (unsigned __int8 *)v20, (uint64_t)(v15 - 13), v1, v16, v17);
        v15 += 19;
        --v14;
      }
      while (v14);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    sub_249F7B48C(v10, v13);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_249F9E764()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  swift_endAccess();
  uint64_t result = swift_release();
  int64_t v5 = 0;
  uint64_t v36 = v3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v3 + 64);
  int64_t v37 = (unint64_t)(v6 + 63) >> 6;
  id v9 = (void *)MEMORY[0x263F8EE78];
LABEL_6:
  if (v8)
  {
    uint64_t v38 = (v8 - 1) & v8;
    int64_t v39 = v5;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
    goto LABEL_22;
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v11 >= v37) {
    goto LABEL_53;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v11);
  int64_t v13 = v5 + 1;
  if (!v12)
  {
    int64_t v13 = v5 + 2;
    if (v5 + 2 >= v37) {
      goto LABEL_53;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = v5 + 3;
      if (v5 + 3 >= v37) {
        goto LABEL_53;
      }
      unint64_t v12 = *(void *)(v36 + 8 * v13);
      if (!v12)
      {
        uint64_t v14 = v5 + 4;
        if (v5 + 4 < v37)
        {
          unint64_t v12 = *(void *)(v36 + 8 * v14);
          if (v12)
          {
            int64_t v13 = v5 + 4;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v13 = v14 + 1;
            if (__OFADD__(v14, 1)) {
              goto LABEL_57;
            }
            if (v13 >= v37) {
              break;
            }
            unint64_t v12 = *(void *)(v36 + 8 * v13);
            ++v14;
            if (v12) {
              goto LABEL_21;
            }
          }
        }
LABEL_53:
        swift_release();
        return (uint64_t)v9;
      }
    }
  }
LABEL_21:
  uint64_t v38 = (v12 - 1) & v12;
  int64_t v39 = v13;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_22:
  char v15 = *(unsigned char *)(*(void *)(v3 + 48) + v10);
  uint64_t v16 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
  uint64_t v40 = v16 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v16 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & *(void *)(v16 + 64);
  int64_t v41 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  if (v19)
  {
LABEL_26:
    unint64_t v21 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v22 = v21 | (v20 << 6);
LABEL_27:
    sub_249F75B7C(*(void *)(v16 + 48) + 104 * v22, (uint64_t)&v42);
    sub_249F7B37C(*(void *)(v16 + 56) + 40 * v22, (uint64_t)&v48 + 8);
    goto LABEL_46;
  }
  while (1)
  {
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v23 < v41)
    {
      unint64_t v24 = *(void *)(v40 + 8 * v23);
      if (v24) {
        goto LABEL_31;
      }
      int64_t v25 = v20 + 2;
      ++v20;
      if (v23 + 1 < v41)
      {
        unint64_t v24 = *(void *)(v40 + 8 * v25);
        if (v24) {
          goto LABEL_34;
        }
        int64_t v20 = v23 + 1;
        if (v23 + 2 < v41)
        {
          unint64_t v24 = *(void *)(v40 + 8 * (v23 + 2));
          if (v24)
          {
            v23 += 2;
            goto LABEL_31;
          }
          int64_t v25 = v23 + 3;
          int64_t v20 = v23 + 2;
          if (v23 + 3 < v41) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v19 = 0;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v42 = 0u;
LABEL_46:
    sub_249F9ED10((uint64_t)&v42, (uint64_t)v53);
    if (!v55)
    {
      uint64_t result = swift_release();
      unint64_t v8 = v38;
      int64_t v5 = v39;
      goto LABEL_6;
    }
    sub_249F7B5E8(&v54, (uint64_t)v52);
    sub_249F7B58C((uint64_t)v53, (uint64_t)&v42 + 8);
    sub_249F7B37C((uint64_t)v52, (uint64_t)&v49);
    LOBYTE(v42) = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v9 = sub_249FBA150(0, v9[2] + 1, 1, v9);
    }
    unint64_t v27 = v9[2];
    unint64_t v26 = v9[3];
    if (v27 >= v26 >> 1) {
      id v9 = sub_249FBA150((void *)(v26 > 1), v27 + 1, 1, v9);
    }
    v9[2] = v27 + 1;
    uint64_t v28 = &v9[19 * v27];
    long long v29 = v43;
    *((_OWORD *)v28 + 2) = v42;
    *((_OWORD *)v28 + 3) = v29;
    long long v30 = v44;
    long long v31 = v45;
    long long v32 = v47;
    *((_OWORD *)v28 + 6) = v46;
    *((_OWORD *)v28 + 7) = v32;
    *((_OWORD *)v28 + 4) = v30;
    *((_OWORD *)v28 + 5) = v31;
    long long v33 = v48;
    long long v34 = v49;
    long long v35 = v50;
    v28[22] = v51;
    *((_OWORD *)v28 + 9) = v34;
    *((_OWORD *)v28 + 10) = v35;
    *((_OWORD *)v28 + 8) = v33;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
    if (v19) {
      goto LABEL_26;
    }
  }
  unint64_t v24 = *(void *)(v40 + 8 * v25);
  if (v24)
  {
LABEL_34:
    int64_t v23 = v25;
LABEL_31:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v20 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v41)
    {
      int64_t v20 = v41 - 1;
      goto LABEL_45;
    }
    unint64_t v24 = *(void *)(v40 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_31;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

void (*sub_249F9EBF4(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + 16);
  swift_retain();
  v3[5] = sub_249F9E030(v3);
  return sub_249F9EC60;
}

void sub_249F9EC60(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();

  free(v1);
}

uint64_t sub_249F9ECB4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClockFaceContextStore()
{
  return self;
}

uint64_t sub_249F9ED10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697501A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249F9ED78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697501F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FA0930();
  sub_24A057EB8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v14;
  char v21 = 2;
  sub_249FA0984();
  sub_24A057C88();
  int v10 = v15;
  v18[0] = v15;
  char v21 = 1;
  sub_249F9AB68();
  sub_24A057C88();
  sub_249F7B58C((uint64_t)&v15, (uint64_t)v19);
  if (v10 == 3)
  {
    v13[1] = v19;
    unint64_t v12 = sub_249F7B328();
    char v21 = 0;
    uint64_t v16 = &type metadata for SolarContext;
    unint64_t v17 = v12;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v15);
    sub_24A057C88();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v4);
    sub_249F7B5E8(&v15, (uint64_t)&v20);
    sub_249FA0A80(v18, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_249FA0AB8((uint64_t)v18);
  }
  else
  {
    sub_249FA09D8();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_249F75BD8((uint64_t)v19);
  }
}

uint64_t sub_249F9F050(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750218);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FA0930();
  sub_24A057EC8();
  v10[15] = *(unsigned char *)v3;
  v10[14] = 2;
  sub_249FA0AE8();
  sub_24A057CD8();
  if (!v2)
  {
    v10[13] = 1;
    sub_249F9ABBC();
    sub_24A057CD8();
    __swift_project_boxed_opaque_existential_1((void *)(v3 + 112), *(void *)(v3 + 136));
    v10[12] = 0;
    sub_24A057CD8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_249F9F230(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697501B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FA05D0();
  sub_24A057EC8();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697501C8);
  sub_249FA086C(&qword_2697501D0, (void (*)(void))sub_249FA0624);
  sub_24A057CD8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_249F9F3B0(char *a1, unsigned __int8 *a2)
{
  return sub_24A012700(*a1, *a2);
}

uint64_t sub_249F9F3BC()
{
  return sub_24A057E68();
}

uint64_t sub_249F9F450()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249F9F4D0()
{
  return sub_24A057E68();
}

uint64_t sub_249F9F560@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FA0678();
  *a1 = result;
  return result;
}

void sub_249F9F590(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1802465132;
  if (v2 != 1) {
    uint64_t v4 = 1684957547;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x747865746E6F63;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_249F9F5E0()
{
  uint64_t v1 = 1802465132;
  if (*v0 != 1) {
    uint64_t v1 = 1684957547;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x747865746E6F63;
  }
}

uint64_t sub_249F9F62C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FA0678();
  *a1 = result;
  return result;
}

void sub_249F9F654(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_249F9F660(uint64_t a1)
{
  unint64_t v2 = sub_249FA0930();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249F9F69C(uint64_t a1)
{
  unint64_t v2 = sub_249FA0930();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249F9F6D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249F9ED78(a1, a2);
}

uint64_t sub_249F9F6F0(void *a1)
{
  return sub_249F9F050(a1);
}

uint64_t sub_249F9F708()
{
  return 0x7364726F636572;
}

uint64_t sub_249F9F720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7364726F636572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24A057D48();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249F9F7B8(uint64_t a1)
{
  unint64_t v2 = sub_249FA05D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249F9F7F4(uint64_t a1)
{
  unint64_t v2 = sub_249FA05D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_249F9F830@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_249FA06C4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_249F9F85C(void *a1)
{
  return sub_249F9F230(a1, *v1);
}

unint64_t sub_249F9F878()
{
  unint64_t result = qword_2697501B0;
  if (!qword_2697501B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697501B0);
  }
  return result;
}

uint64_t sub_249F9F8CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249F9F92C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = sub_24A056538();
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47[3] = a5;
  void v47[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_0, a1, a5);
  unsigned __int8 v17 = *a2;
  uint64_t v18 = *(void *)(a4 + 16);
  unint64_t v19 = (os_unfair_lock_s *)(*(void *)(v18 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v19);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  swift_release();
  uint64_t v21 = *(void *)(v20 + 16);
  long long v42 = v15;
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_24A01541C(v17);
  char v23 = v22;
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
LABEL_5:
    uint64_t v24 = *(void *)(a4 + 16);
    int64_t v25 = (os_unfair_lock_s *)(*(void *)(v24 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v25);
    swift_beginAccess();
    uint64_t v26 = *(void *)(v24 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v25);
    swift_endAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44[0] = v26;
    sub_249FFEED0(MEMORY[0x263F8EE80], v17, isUniquelyReferenced_nonNull_native);
    uint64_t v28 = v44[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v25);
    *(void *)(v24 + 24) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v25);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  long long v29 = sub_249F9EBF4(v46);
  long long v30 = sub_249F77774(v45, v17);
  if (*v31)
  {
    sub_249F75B7C(a3, (uint64_t)v44);
    sub_249F7B37C((uint64_t)v47, (uint64_t)v43);
    sub_249FEF000((uint64_t)v43, (uint64_t)v44);
  }
  ((void (*)(void *, void))v30)(v45, 0);
  ((void (*)(void *, void))v29)(v46, 0);
  sub_24A055FE8();
  swift_allocObject();
  sub_24A055FD8();
  sub_24A055FB8();
  v44[0] = sub_249F9E764();
  sub_249F7B3E0();
  uint64_t v32 = sub_24A055FC8();
  unint64_t v34 = v33;
  swift_bridgeObjectRelease();
  long long v35 = self;
  sub_249F7B434(v32, v34);
  id v36 = objc_msgSend(v35, sel_standardUserDefaults, v40, v41, v42);
  int64_t v37 = (void *)sub_24A056028();
  sub_249F7B48C(v32, v34);
  swift_bridgeObjectRetain();
  uint64_t v38 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setObject_forKey_, v37, v38);

  swift_release();
  sub_249F7B48C(v32, v34);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection()
{
  return &type metadata for ClockFaceContextStore.Collection;
}

uint64_t destroy for ClockFaceContextStore.Collection.Record(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  int v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 48);
  }
  else if (v3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(unsigned char *)(a1 + 104)) {
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
  }
  swift_bridgeObjectRelease();
LABEL_8:

  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 112);
}

uint64_t initializeWithCopy for ClockFaceContextStore.Collection.Record(uint64_t a1, char *a2)
{
  char v5 = *a2;
  uint64_t v4 = a2 + 8;
  *(unsigned char *)a1 = v5;
  uint64_t v6 = a1 + 8;
  int v7 = a2[104];
  if (v7 == 2)
  {
    long long v10 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v6, (uint64_t)v4);
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 48, (uint64_t)(a2 + 48));
    uint64_t v12 = *((void *)a2 + 12);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = v12;
    *(unsigned char *)(a1 + 104) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v7 == 1)
  {
    uint64_t v13 = *((void *)a2 + 2);
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + 104) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (a2[104])
  {
    long long v14 = *((_OWORD *)v4 + 5);
    *(_OWORD *)(v6 + 64) = *((_OWORD *)v4 + 4);
    *(_OWORD *)(v6 + 80) = v14;
    *(unsigned char *)(v6 + 96) = v4[96];
    long long v15 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v15;
    long long v16 = *((_OWORD *)v4 + 3);
    *(_OWORD *)(v6 + 32) = *((_OWORD *)v4 + 2);
    *(_OWORD *)(v6 + 48) = v16;
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v6, (uint64_t)v4);
    uint64_t v9 = *((void *)a2 + 7);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = v9;
    *(unsigned char *)(a1 + 104) = 0;
    swift_bridgeObjectRetain();
  }
  long long v17 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 112, (uint64_t)(a2 + 112));
  return a1;
}

uint64_t assignWithCopy for ClockFaceContextStore.Collection.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (long long *)(a2 + 8);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = a1 + 8;
  if (a1 != a2)
  {
    sub_249F75BD8(a1 + 8);
    int v6 = *(unsigned __int8 *)(a2 + 104);
    if (v6 == 2)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, long long *))(v8 - 8))(v5, v4);
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 72) = v9;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v6 == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 104) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*(unsigned char *)(a2 + 104))
    {
      long long v10 = *v4;
      long long v11 = v4[2];
      *(_OWORD *)(v5 + 16) = v4[1];
      *(_OWORD *)(v5 + 32) = v11;
      *(_OWORD *)uint64_t v5 = v10;
      long long v12 = v4[3];
      long long v13 = v4[4];
      long long v14 = v4[5];
      *(unsigned char *)(v5 + 96) = *((unsigned char *)v4 + 96);
      *(_OWORD *)(v5 + 64) = v13;
      *(_OWORD *)(v5 + 80) = v14;
      *(_OWORD *)(v5 + 48) = v12;
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, long long *))(v7 - 8))(v5, v4);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 104) = 0;
      swift_bridgeObjectRetain();
    }
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ClockFaceContextStore.Collection.Record(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (a1 != a2)
  {
    sub_249F75BD8(a1 + 8);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 112);
  long long v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockFaceContextStore.Collection.Record(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockFaceContextStore.Collection.Record(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 136) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.Record()
{
  return &type metadata for ClockFaceContextStore.Collection.Record;
}

unint64_t sub_249FA05D0()
{
  unint64_t result = qword_2697501C0;
  if (!qword_2697501C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697501C0);
  }
  return result;
}

unint64_t sub_249FA0624()
{
  unint64_t result = qword_2697501D8;
  if (!qword_2697501D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697501D8);
  }
  return result;
}

uint64_t sub_249FA0678()
{
  unint64_t v0 = sub_24A057C38();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void *sub_249FA06C4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697501E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FA05D0();
  sub_24A057EB8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697501C8);
    sub_249FA086C(&qword_2697501E8, (void (*)(void))sub_249FA08DC);
    sub_24A057C88();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    long long v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_249FA086C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697501C8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249FA08DC()
{
  unint64_t result = qword_2697501F0;
  if (!qword_2697501F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697501F0);
  }
  return result;
}

unint64_t sub_249FA0930()
{
  unint64_t result = qword_269750200;
  if (!qword_269750200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750200);
  }
  return result;
}

unint64_t sub_249FA0984()
{
  unint64_t result = qword_269750208;
  if (!qword_269750208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750208);
  }
  return result;
}

unint64_t sub_249FA09D8()
{
  unint64_t result = qword_269750210;
  if (!qword_269750210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750210);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x24C5BA360);
  }
  return result;
}

uint64_t sub_249FA0A80(char *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249FA0AB8(uint64_t a1)
{
  return a1;
}

unint64_t sub_249FA0AE8()
{
  unint64_t result = qword_269750220;
  if (!qword_269750220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750220);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.Record.CodingError()
{
  return &type metadata for ClockFaceContextStore.Collection.Record.CodingError;
}

unsigned char *storeEnumTagSinglePayload for ClockFaceContextStore.Collection.Record.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FA0C20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.Record.CodingKeys()
{
  return &type metadata for ClockFaceContextStore.Collection.Record.CodingKeys;
}

unsigned char *_s11ClockPoster21ClockFaceContextStoreC10CollectionV6RecordV11CodingErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249FA0CF4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.CodingKeys()
{
  return &type metadata for ClockFaceContextStore.Collection.CodingKeys;
}

unint64_t sub_249FA0D30()
{
  unint64_t result = qword_269750228;
  if (!qword_269750228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750228);
  }
  return result;
}

unint64_t sub_249FA0D88()
{
  unint64_t result = qword_269750230;
  if (!qword_269750230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750230);
  }
  return result;
}

unint64_t sub_249FA0DE0()
{
  unint64_t result = qword_269750238;
  if (!qword_269750238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750238);
  }
  return result;
}

unint64_t sub_249FA0E38()
{
  unint64_t result = qword_269750240;
  if (!qword_269750240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750240);
  }
  return result;
}

unint64_t sub_249FA0E90()
{
  unint64_t result = qword_269750248;
  if (!qword_269750248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750248);
  }
  return result;
}

unint64_t sub_249FA0EE8()
{
  unint64_t result = qword_269750250;
  if (!qword_269750250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750250);
  }
  return result;
}

unint64_t sub_249FA0F40()
{
  unint64_t result = qword_269750258;
  if (!qword_269750258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750258);
  }
  return result;
}

uint64_t sub_249FA0F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_24A0561D8()) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 20)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_249FA0FF8()
{
  type metadata accessor for AlarmDataProvider();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_249FA3574();
  qword_269752360 = v0;
  return result;
}

uint64_t sub_249FA1034()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A0573A8();
  v17[1] = sub_24A0573A8();
  uint64_t v3 = sub_24A0573A8();
  v17[2] = v4;
  v17[3] = v3;
  uint64_t v5 = sub_24A057368();
  uint64_t v6 = sub_24A057628();
  long long v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v2, 1, 1, v6);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = v8;
  sub_24A04CE18((uint64_t)v2, (uint64_t)&unk_2697502D8, (uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v10 = sub_24A057368();
  v7(v2, 1, 1, v6);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  long long v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  uint64_t v12[3] = 0;
  v12[4] = v10;
  v12[5] = v11;
  sub_24A04CE18((uint64_t)v2, (uint64_t)&unk_2697502E0, (uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = sub_24A057368();
  v7(v2, 1, 1, v6);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  long long v15 = (void *)swift_allocObject();
  v15[2] = 0;
  _OWORD v15[3] = 0;
  v15[4] = v13;
  v15[5] = v14;
  sub_24A04CE18((uint64_t)v2, (uint64_t)&unk_2697502E8, (uint64_t)v15);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_249FA130C()
{
  if ((*(unsigned char *)(v0 + 128) & 1) == 0)
  {
    id v1 = objc_msgSend(*(id *)(v0 + 120), sel_nextAlarm);
    if (v1)
    {
      unint64_t v2 = v1;
      *(unsigned char *)(v0 + 128) = 1;
      uint64_t v3 = swift_allocObject();
      swift_weakInit();
      v6[4] = sub_249FA427C;
      v6[5] = v3;
      v6[0] = MEMORY[0x263EF8330];
      v6[1] = 1107296256;
      v6[2] = sub_249FA1EA4;
      v6[3] = &block_descriptor_3;
      uint64_t v4 = _Block_copy(v6);
      swift_release();
      id v5 = objc_msgSend(v2, sel_addCompletionBlock_, v4);
      _Block_release(v4);
    }
  }
}

uint64_t sub_249FA1428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697502F0);
  v5[14] = swift_task_alloc();
  uint64_t v6 = sub_24A0578B8();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_249FA1518, 0, 0);
}

uint64_t sub_249FA1518()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  sub_24A0578C8();

  sub_24A0578A8();
  swift_beginAccess();
  uint64_t v2 = sub_249FA45B0(&qword_2697502F8, 255, MEMORY[0x263F07C88]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_249FA166C;
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  return MEMORY[0x270FA1E80](v4, v5, v2);
}

uint64_t sub_249FA166C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_249FA18C4;
  }
  else {
    uint64_t v2 = sub_249FA1780;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_249FA1780()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = sub_24A055D78();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  uint64_t Strong = swift_weakLoadStrong();
  v0[20] = Strong;
  if (!Strong)
  {
    uint64_t v4 = v0[14];
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    sub_249F6E790(v4, &qword_2697502F0);
    goto LABEL_8;
  }
  return MEMORY[0x270FA2498](sub_249FA1948, Strong, 0);
}

uint64_t sub_249FA18C4()
{
  *(void *)(v0 + 88) = *(void *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697520C0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_249FA1948()
{
  uint64_t v1 = v0[20];
  if ((*(unsigned char *)(v1 + 128) & 1) != 0
    || (id v2 = objc_msgSend(*(id *)(v1 + 120), sel_nextAlarm)) == 0)
  {
    uint64_t v7 = sub_249FA4600;
  }
  else
  {
    uint64_t v3 = v2;
    *(unsigned char *)(v1 + 128) = 1;
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    v0[6] = sub_249FA427C;
    v0[7] = v4;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_249FA1EA4;
    v0[5] = &block_descriptor_55;
    uint64_t v5 = _Block_copy(v0 + 2);
    swift_release();
    id v6 = objc_msgSend(v3, sel_addCompletionBlock_, v5);
    _Block_release(v5);

    uint64_t v7 = sub_249FA1AC0;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_249FA1AC0()
{
  uint64_t v1 = v0[14];
  swift_release();
  sub_249F6E790(v1, &qword_2697502F0);
  uint64_t v2 = sub_249FA45B0(&qword_2697502F8, 255, MEMORY[0x263F07C88]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_249FA166C;
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  return MEMORY[0x270FA1E80](v4, v5, v2);
}

uint64_t sub_249FA1BB8(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = sub_24A057628();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    v10[5] = a1;
    v10[6] = a2;
    id v11 = a1;
    id v12 = a2;
    sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_2697502B8, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FA1CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_249FA1D98, a4, 0);
}

uint64_t sub_249FA1D98()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = (void *)v0[9];
  *(unsigned char *)(v4 + 128) = 0;
  sub_249FA1F30(v3, v1, v2);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(*(void *)(v4 + 112) + *(void *)(**(void **)(v4 + 112) + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  sub_249FF561C(v2);
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  sub_249F6E790(v2, &qword_26974FF18);
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_249FA1EA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_249FA1F30@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v128 = a1;
  uint64_t v133 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A056538();
  uint64_t v8 = *(uint64_t (***)(char *, uint64_t, char *))(v7 - 8);
  uint64_t v131 = (char *)v7;
  BOOL v132 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v130 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A056378();
  uint64_t v129 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A056388();
  uint64_t v127 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v107 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v107 - v23;
  MEMORY[0x270FA5388](v25);
  unint64_t v27 = (uint64_t (**)(char *, uint64_t, char *))((char *)&v107 - v26);
  uint64_t v28 = sub_24A056238();
  MEMORY[0x270FA5388](v28);
  MEMORY[0x270FA5388](v29);
  MEMORY[0x270FA5388](v30);
  MEMORY[0x270FA5388](v31);
  if (a2)
  {
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F6E6C8(v38, (uint64_t)v6, &qword_26B16FAA8);
    uint64_t v40 = (uint64_t)v131;
    int64_t v39 = v132;
    int v41 = v132[6](v6, 1, v131);
    uint64_t v42 = (uint64_t)v130;
    if (v41 == 1)
    {
      sub_249FB8AA8((uint64_t)v130);
      sub_249F6E790((uint64_t)v6, &qword_26B16FAA8);
    }
    else
    {
      v39[4](v130, (uint64_t)v6, (char *)v40);
    }
    id v50 = a2;
    id v51 = a2;
    char v52 = sub_24A056518();
    os_log_type_t v53 = sub_24A0577B8();
    if (os_log_type_enabled(v52, v53))
    {
      long long v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v135 = v55;
      *(_DWORD *)long long v54 = 136446210;
      swift_getErrorValue();
      uint64_t v56 = sub_24A057DB8();
      uint64_t v134 = sub_249F782DC(v56, v57, &v135);
      sub_24A057978();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_249F61000, v52, v53, "Error getting alarm data., %{public}s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v55, -1, -1);
      MEMORY[0x24C5BA360](v54, -1, -1);

      ((void (*)(uint64_t, uint64_t))v132[1])(v42, v40);
    }
    else
    {

      ((void (*)(uint64_t, uint64_t))v39[1])(v42, v40);
    }
    uint64_t v58 = v133;
    uint64_t v59 = type metadata accessor for Alarm();
    uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
    uint64_t v61 = v58;
    return v60(v61, 1, 1, v59);
  }
  uint64_t v131 = v24;
  BOOL v132 = v27;
  char v125 = v18;
  uint64_t v126 = v21;
  uint64_t v130 = v15;
  uint64_t v43 = v129;
  if (!v128) {
    goto LABEL_9;
  }
  uint64_t v120 = v33;
  uint64_t v124 = v37;
  uint64_t v122 = v36;
  uint64_t v119 = v35;
  unint64_t v121 = (uint64_t (**)(char *, uint64_t, char *))((char *)&v107 - v34);
  uint64_t v123 = v32;
  id v44 = v128;
  self;
  if (!swift_dynamicCastObjCClass())
  {
    id v62 = objc_msgSend(v44, sel_nextTrigger);
    if (v62)
    {
      int64_t v63 = v62;
      id v64 = objc_msgSend(v62, sel_triggerDate);

      uint64_t v65 = v122;
      sub_24A0561E8();

      uint64_t v67 = v123;
      uint64_t v66 = v124;
      uint64_t v68 = *(void (**)(uint64_t (**)(char *, uint64_t, char *), uint64_t, uint64_t))(v124 + 32);
      uint64_t v69 = v132;
      uint64_t v70 = v65;
      uint64_t v71 = v124 + 32;
      v68(v132, v70, v123);
      (*(void (**)(uint64_t (**)(char *, uint64_t, char *), void, uint64_t, uint64_t))(v66 + 56))(v69, 0, 1, v67);
      uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
      id v128 = (id)(v66 + 48);
      uint64_t v118 = v72;
      uint64_t v73 = (uint64_t)v69;
      if (v72((uint64_t)v69, 1, v67) != 1)
      {
        uint64_t v115 = v71;
        unint64_t v116 = (void (*)(uint64_t, uint64_t, uint64_t))v68;
        v68(v121, (uint64_t)v69, v67);
        uint64_t v74 = (uint64_t)v130;
        sub_24A056358();
        unint64_t v75 = *(void (**)(void))(v43 + 104);
        int v76 = v12;
        unsigned int v111 = *MEMORY[0x263F07870];
        uint64_t v114 = v10;
        uint64_t v112 = v43 + 104;
        uint64_t v110 = (void (*)(char *, void, uint64_t))v75;
        v75(v12);
        if (qword_26974F328 != -1) {
          swift_once();
        }
        uint64_t v77 = v122;
        sub_24A006BDC(v122);
        uint64_t v78 = (uint64_t)v131;
        uint64_t v79 = v74;
        sub_24A056348();
        uint64_t v80 = *(void (**)(char *, uint64_t))(v124 + 8);
        BOOL v132 = (uint64_t (**)(char *, uint64_t, char *))(v124 + 8);
        unint64_t v117 = v80;
        v80((char *)v77, v67);
        unint64_t v81 = *(void (**)(char *, uint64_t))(v43 + 8);
        uint64_t v113 = v76;
        uint64_t v82 = v76;
        uint64_t v83 = v114;
        uint64_t v129 = v43 + 8;
        char v109 = v81;
        v81(v82, v114);
        uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
        uint64_t v85 = v13;
        uint64_t v86 = v127 + 8;
        uint64_t v107 = v85;
        uint64_t v108 = v84;
        ((void (*)(uint64_t))v84)(v74);
        uint64_t v87 = (uint64_t)v126;
        sub_249F6E6C8(v78, (uint64_t)v126, &qword_2697515A0);
        unint64_t v88 = v118;
        if (v118(v87, 1, v67) == 1)
        {
          uint64_t v127 = v86;
          sub_249F6E790(v87, &qword_2697515A0);
        }
        else
        {
          uint64_t v90 = v120;
          unint64_t v91 = v116;
          v116((uint64_t)v120, v87, v67);
          uint64_t v92 = (char *)v121;
          if (sub_24A0561B8())
          {
            uint64_t v93 = v122;
            (*(void (**)(uint64_t, char *, uint64_t))(v124 + 16))(v122, v92, v67);
            unsigned __int8 v94 = objc_msgSend(v44, sel_isSleepAlarm);

            uint64_t v95 = v117;
            v117(v90, v67);
            sub_249F6E790((uint64_t)v131, &qword_2697515A0);
            v95(v92, v67);
            uint64_t v96 = v133;
            v91(v133, v93, v67);
            uint64_t v97 = type metadata accessor for Alarm();
            *(unsigned char *)(v96 + *(int *)(v97 + 20)) = v94;
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v96, 0, 1, v97);
          }
          uint64_t v127 = v86;
          v117(v90, v67);
          uint64_t v83 = v10;
          uint64_t v79 = (uint64_t)v130;
        }
        sub_24A056358();
        uint64_t v98 = v113;
        v110(v113, v111, v83);
        uint64_t v99 = (uint64_t)v125;
        uint64_t v100 = (char *)v121;
        sub_24A056348();
        v109(v98, v83);
        v108(v79, v107);
        uint64_t v101 = v123;
        if (v88(v99, 1, v123) != 1)
        {
          int v102 = v119;
          v116((uint64_t)v119, v99, v101);
          uint64_t v103 = (uint64_t)v131;
          if (qword_26974F340 != -1) {
            swift_once();
          }
          uint64_t v104 = swift_allocObject();
          swift_weakInit();
          uint64_t v105 = swift_allocObject();
          *(void *)(v105 + 16) = &unk_2697502C8;
          *(void *)(v105 + 24) = v104;
          swift_retain();
          swift_retain_n();
          sub_24A03A318(v102, (unint64_t)sub_249FA4494, (void (**)(char *, uint64_t, uint64_t, uint64_t))v105);
          swift_release();
          swift_release();
          swift_release();

          swift_release();
          char v106 = v117;
          v117((char *)v102, v101);
          sub_249F6E790(v103, &qword_2697515A0);
          v106((char *)v121, v101);
          swift_release();
          goto LABEL_27;
        }

        sub_249F6E790((uint64_t)v131, &qword_2697515A0);
        v117(v100, v101);
        uint64_t v89 = v99;
LABEL_26:
        sub_249F6E790(v89, &qword_2697515A0);
LABEL_27:
        uint64_t v59 = type metadata accessor for Alarm();
        uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
        uint64_t v61 = v133;
        return v60(v61, 1, 1, v59);
      }
    }
    else
    {
      uint64_t v73 = (uint64_t)v132;
      (*(void (**)(uint64_t (**)(char *, uint64_t, char *), uint64_t, uint64_t, uint64_t))(v124 + 56))(v132, 1, 1, v123);
    }

    uint64_t v89 = v73;
    goto LABEL_26;
  }

LABEL_9:
  uint64_t v45 = type metadata accessor for Alarm();
  long long v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  uint64_t v47 = v45;
  uint64_t v48 = v133;

  return v46(v48, 1, 1, v47);
}

uint64_t sub_249FA2D18(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return MEMORY[0x270FA2498](sub_249FA2D38, 0, 0);
}

uint64_t sub_249FA2D38()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_249FA2DF4, Strong, 0);
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_249FA2DF4()
{
  uint64_t v1 = v0[12];
  if ((*(unsigned char *)(v1 + 128) & 1) == 0)
  {
    id v2 = objc_msgSend(*(id *)(v1 + 120), sel_nextAlarm);
    if (v2)
    {
      uint64_t v3 = v2;
      *(unsigned char *)(v1 + 128) = 1;
      uint64_t v4 = swift_allocObject();
      swift_weakInit();
      v0[6] = sub_249FA427C;
      v0[7] = v4;
      v0[2] = MEMORY[0x263EF8330];
      v0[3] = 1107296256;
      v0[4] = sub_249FA1EA4;
      v0[5] = &block_descriptor_32;
      uint64_t v5 = _Block_copy(v0 + 2);
      swift_release();
      id v6 = objc_msgSend(v3, sel_addCompletionBlock_, v5);
      _Block_release(v5);
    }
  }
  swift_release();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_249FA2F5C()
{
  swift_release();

  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for AlarmDataProvider()
{
  return self;
}

void *sub_249FA2FC0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A056238();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for OverrideTime(uint64_t a1)
{
  uint64_t v2 = sub_24A056238();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_249FA30F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_249FA316C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_249FA31E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_249FA3264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_249FA32E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249FA32F4);
}

uint64_t sub_249FA32F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_249FA33C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249FA33D8);
}

uint64_t sub_249FA33D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24A056238();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for Alarm()
{
  uint64_t result = qword_269750260;
  if (!qword_269750260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249FA34E0()
{
  uint64_t result = sub_24A056238();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249FA3574()
{
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750300);
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = *(void *)(*(void *)v1 + 104);
  type metadata accessor for CPUnfairLock();
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(void *)(v1 + v4) = v5;
  *(void *)(v1 + *(void *)(*(void *)v1 + 112)) = MEMORY[0x263F8EE80];
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 120)) = 0;
  *(void *)(v0 + 112) = v1;
  *(void *)(v0 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F55D50]), sel_init);
  *(unsigned char *)(v0 + 128) = 0;
  return v0;
}

uint64_t sub_249FA36A8()
{
  return v0;
}

uint64_t sub_249FA36B4()
{
  return sub_249F750E0();
}

uint64_t sub_249FA36D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_249FA45B0(&qword_269750270, a2, (void (*)(uint64_t))type metadata accessor for AlarmDataProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FA3730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v1 = sub_24A056D68();
  uint64_t v69 = *(void *)(v1 - 8);
  uint64_t v70 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v67 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750278);
  uint64_t v68 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_24A055E68();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v56 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750280);
  uint64_t v59 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A055F68();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  MEMORY[0x270FA5388](v6);
  id v62 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v54 = (char *)&v46 - v9;
  uint64_t v52 = sub_24A056168();
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  id v51 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_24A056108();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  id v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_24A0560D8();
  uint64_t v13 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  long long v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24A0560E8();
  uint64_t v16 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24A056158();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v46 - v24;
  __n128 v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v46 - v28;
  MEMORY[0x24C5B7540](v27);
  sub_24A0560C8();
  sub_24A0560B8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v48);
  sub_24A056088();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  v30(v22, v19);
  sub_24A0560F8();
  sub_24A056138();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v50);
  v30(v25, v19);
  uint64_t v31 = v51;
  sub_24A056068();
  v30(v29, v19);
  sub_249FA45B0(&qword_269750288, 255, MEMORY[0x263F07280]);
  uint64_t v32 = v52;
  sub_24A056218();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v32);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_249FA4094();
  unint64_t v33 = v55;
  sub_24A055F38();
  swift_release();
  uint64_t v34 = v58;
  long long v35 = v56;
  uint64_t v36 = v60;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v56, *MEMORY[0x263F065A0], v60);
  uint64_t v37 = v54;
  uint64_t v38 = v57;
  sub_24A055F48();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v38);
  uint64_t v71 = swift_getKeyPath();
  swift_getKeyPath();
  sub_249FA418C();
  int64_t v39 = v65;
  sub_24A055F38();
  swift_release();
  uint64_t v40 = v67;
  sub_24A056D58();
  int v41 = v62;
  uint64_t v42 = v66;
  sub_24A055F48();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v70);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v42);
  sub_24A055EE8();
  uint64_t v43 = v64;
  id v44 = *(void (**)(char *, uint64_t))(v63 + 8);
  v44(v41, v64);
  return ((uint64_t (*)(char *, uint64_t))v44)(v37, v43);
}

uint64_t sub_249FA3FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249F68B58(a1, a2, a3, &qword_2697502A8);
}

uint64_t sub_249FA3FE8()
{
  return sub_24A057328();
}

void sub_249FA4030()
{
}

void sub_249FA4058()
{
}

void sub_249FA4074()
{
}

unint64_t sub_249FA4094()
{
  unint64_t result = qword_269750290;
  if (!qword_269750290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750290);
  }
  return result;
}

void sub_249FA40E8()
{
}

uint64_t sub_249FA4110()
{
  return 8;
}

uint64_t sub_249FA411C()
{
  return swift_release();
}

uint64_t sub_249FA4124(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_249FA4130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249F68B58(a1, a2, a3, &qword_2697502A8) & 1;
}

uint64_t sub_249FA4154(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_2697502A8);
}

void *sub_249FA4160(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_249FA416C()
{
}

unint64_t sub_249FA418C()
{
  unint64_t result = qword_269750298;
  if (!qword_269750298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750298);
  }
  return result;
}

void sub_249FA41E0()
{
}

uint64_t sub_249FA4208()
{
  return 8;
}

uint64_t sub_249FA4214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249F68B58(a1, a2, a3, &qword_2697502A0) & 1;
}

uint64_t sub_249FA4238(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_2697502A0);
}

uint64_t sub_249FA4244()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249FA427C(void *a1, void *a2)
{
  return sub_249FA1BB8(a1, a2);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_249FA429C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_249FA42EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_249F9C6C0;
  return sub_249FA1CFC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_249FA43B4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_249F6C87C;
  v2[11] = v0;
  return MEMORY[0x270FA2498](sub_249FA2D38, 0, 0);
}

uint64_t sub_249FA445C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249FA4494()
{
  return sub_24A03A000(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FA44A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_249F9C6C0;
  return sub_249FA1428(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_35Tm()
{
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249FA45B0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for FittedText(uint64_t a1)
{
  sub_249F6E5D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();

  return j__swift_release();
}

uint64_t initializeWithCopy for FittedText(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_249F6E4F8(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(v2 + 32);
  *(void *)(a1 + 24) = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  swift_bridgeObjectRetain();
  j__swift_retain();
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for FittedText(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_249F6E4F8(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_249F6E5D0(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  j__swift_retain();
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v2;
  j__swift_release();
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FittedText(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_249F6E5D0(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  j__swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FittedText(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FittedText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FittedText()
{
  return &type metadata for FittedText;
}

uint64_t sub_249FA48BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FA48D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A056CC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = sub_24A056A48();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  char v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24A056A38();
  uint64_t v10 = *(void *)(v2 + 32);
  char v11 = *(unsigned char *)(v2 + 40);
  j__swift_retain();
  sub_24A02FB0C(v10, v11);
  j__swift_release();
  sub_24A0569E8();
  if (sub_24A0569D8())
  {
    uint64_t v12 = *(void *)(v2 + 8);
    uint64_t v44 = *(void *)v2;
    uint64_t v43 = v12;
    int v42 = *(unsigned __int8 *)(v2 + 16);
    uint64_t v13 = *(void *)(v2 + 24);
    sub_24A056D08();
    sub_24A056988();
    uint64_t v14 = (void *)sub_24A056C98();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269750308);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A05A510;
    uint64_t v16 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    type metadata accessor for CTFont(0);
    *(void *)(inited + 64) = v17;
    *(void *)(inited + 40) = v14;
    id v18 = v16;
    id v19 = v14;
    sub_24A01306C(inited);
    id v20 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v21 = (void *)sub_24A057368();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_249F7C400();
    uint64_t v22 = (void *)sub_24A0572E8();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

    objc_msgSend(v23, sel_boundingRectWithSize_options_context_, 8, 0, 1.79769313e308, 1.79769313e308);
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    CGFloat v31 = v30;

    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v9, v46);
    uint64_t v32 = v44;
    uint64_t v33 = v43;
    LOBYTE(v16) = v42;
    sub_249F6E4F8(v44, v43, v42);
    swift_bridgeObjectRetain();
    v52.origin.double x = v25;
    v52.origin.double y = v27;
    v52.size.width = v29;
    v52.size.height = v31;
    CGFloat v34 = -CGRectGetMinX(v52);
    v53.origin.double x = v25;
    v53.origin.double y = v27;
    v53.size.width = v29;
    v53.size.height = v31;
    CGFloat MinY = CGRectGetMinY(v53);
    v54.origin.double x = v25;
    v54.origin.double y = v27;
    v54.size.width = v29;
    v54.size.height = v31;
    CGRectGetWidth(v54);
    v55.origin.double x = v25;
    v55.origin.double y = v27;
    v55.size.width = v29;
    v55.size.height = v31;
    CGRectGetHeight(v55);
    sub_24A056AF8();
    sub_24A056A58();
    uint64_t result = sub_24A0566D8();
    uint64_t v37 = v47;
    char v38 = v48;
    uint64_t v39 = v49;
    char v40 = v50;
    *(void *)a1 = v32;
    *(void *)(a1 + 8) = v33;
    *(unsigned char *)(a1 + 16) = (_BYTE)v16;
    *(void *)(a1 + 24) = v13;
    *(_WORD *)(a1 + 32) = 257;
    *(CGFloat *)(a1 + 40) = v34;
    *(CGFloat *)(a1 + 48) = MinY;
    *(void *)(a1 + 56) = v37;
    *(unsigned char *)(a1 + 64) = v38;
    *(void *)(a1 + 72) = v39;
    *(unsigned char *)(a1 + 80) = v40;
    *(_OWORD *)(a1 + 88) = v51;
  }
  else
  {
    uint64_t result = sub_24A057BC8();
    __break(1u);
  }
  return result;
}

uint64_t sub_249FA4D84()
{
  return sub_249FA4DF8(&qword_269750310, &qword_269750318, (void (*)(void))sub_249FA4DC8);
}

uint64_t sub_249FA4DC8()
{
  return sub_249FA4DF8(&qword_269750320, &qword_269750328, (void (*)(void))sub_249FA4E74);
}

uint64_t sub_249FA4DF8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249FA4E74()
{
  unint64_t result = qword_269750330;
  if (!qword_269750330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750330);
  }
  return result;
}

uint64_t sub_249FA4EE8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697520A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24A05A510;
  uint64_t v3 = type metadata accessor for SolarPosition(0);
  int v4 = *(_DWORD *)(v1 + *(int *)(v3 + 20));
  uint64_t v5 = MEMORY[0x263F8D5C8];
  uint64_t v6 = MEMORY[0x263F8D648];
  *(void *)(v2 + 56) = MEMORY[0x263F8D5C8];
  *(void *)(v2 + 64) = v6;
  *(_DWORD *)(v2 + 32) = v4;
  sub_24A0573B8();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A05A510;
  float v8 = *(float *)(v1 + *(int *)(v3 + 24));
  *(void *)(v7 + 56) = v5;
  *(void *)(v7 + 64) = v6;
  *(float *)(v7 + 32) = v8 * 100.0;
  sub_24A0573B8();
  char v9 = sub_249FB5250();
  float v10 = 0.25;
  float v11 = 0.0;
  float v12 = 180.0;
  switch(v9)
  {
    case 1:
      goto LABEL_6;
    case 2:
      goto LABEL_5;
    case 3:
      float v10 = 0.5;
      int v13 = 1132920832;
      goto LABEL_4;
    default:
      float v10 = 0.75;
      int v13 = 1135869952;
LABEL_4:
      float v12 = *(float *)&v13;
LABEL_5:
      float v11 = v10;
      if (v10 > (float)(v12 / 360.0))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x249FA52B4);
      }
LABEL_6:
      char v14 = sub_249FB5250();
      float v15 = 0.25;
      float v16 = 180.0;
      switch(v14)
      {
        case 1:
          goto LABEL_11;
        case 2:
          goto LABEL_10;
        case 3:
          float v15 = 0.5;
          int v17 = 1132920832;
          goto LABEL_9;
        default:
          float v15 = 0.75;
          int v17 = 1135869952;
LABEL_9:
          float v16 = *(float *)&v17;
LABEL_10:
          float v18 = v16 / 360.0;
          BOOL v19 = v15 > v18;
          float v15 = v18;
          if (v19) {
            goto LABEL_18;
          }
LABEL_11:
          char v20 = sub_249FB5250();
          float v21 = 0.25;
          float v22 = 0.0;
          float v23 = 180.0;
          switch(v20)
          {
            case 1:
              goto LABEL_16;
            case 2:
              goto LABEL_15;
            case 3:
              float v21 = 0.5;
              int v24 = 1132920832;
              goto LABEL_14;
            default:
              float v21 = 0.75;
              int v24 = 1135869952;
LABEL_14:
              float v23 = *(float *)&v24;
LABEL_15:
              float v22 = v21;
              if (v21 > (float)(v23 / 360.0)) {
                goto LABEL_19;
              }
LABEL_16:
              float v25 = (float)(v8 - v11) / (float)(v15 - v22);
              uint64_t v26 = swift_allocObject();
              *(_OWORD *)(v26 + 16) = xmmword_24A05A510;
              *(void *)(v26 + 56) = v5;
              *(void *)(v26 + 64) = v6;
              *(float *)(v26 + 32) = v25 * 100.0;
              sub_24A0573B8();
              BYTE8(v28) = 0;
              sub_24A057A78();
              sub_24A057438();
              sub_24A057438();
              swift_bridgeObjectRelease();
              sub_24A057438();
              sub_24A057438();
              swift_bridgeObjectRelease();
              sub_24A057438();
              *(void *)&long long v28 = sub_249FB5250();
              sub_24A057BA8();
              sub_24A057438();
              sub_24A057438();
              swift_bridgeObjectRelease();
              sub_24A057438();
              return *(void *)((char *)&v28 + 1);
          }
      }
  }
}

BOOL sub_249FA52E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249FB693C(a1, a2)
      && *(float *)(a1 + *(int *)(a3 + 20)) == *(float *)(a2 + *(int *)(a3 + 20))
      && *(float *)(a1 + *(int *)(a3 + 24)) == *(float *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_249FA5350()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v12 - v5;
  unint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24A057A78();
  swift_bridgeObjectRelease();
  unint64_t v13 = 0xD000000000000010;
  unint64_t v14 = 0x800000024A063D60;
  sub_249FA4EE8();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  uint64_t v7 = v0 + *(int *)(type metadata accessor for CurrentLocationSolarPosition(0) + 20);
  sub_249FA9C7C(v7, (uint64_t)v6);
  uint64_t v8 = type metadata accessor for CurrentLocation(0);
  char v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  sub_249F6E790((uint64_t)v6, &qword_2697500F0);
  if (v10 == 1) {
    goto LABEL_4;
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_249FA9C7C(v7, (uint64_t)v3);
  uint64_t result = v9(v3, 1, v8);
  if (result != 1)
  {
    sub_24A040E18();
    sub_24A057438();
    swift_bridgeObjectRelease();
    sub_249FAA6E8((uint64_t)v3, type metadata accessor for CurrentLocation);
LABEL_4:
    sub_24A057438();
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FA558C()
{
  type metadata accessor for SolarDataProvider(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_249FA9A4C();
  qword_269752368 = v0;
  return result;
}

uint64_t sub_249FA55CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A057628();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  int v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_2697503C0, (uint64_t)v10);
  swift_release();
  uint64_t v11 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask;
  if (!*(void *)(a1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask))
  {
    v8(v6, 1, 1, v7);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    unint64_t v13 = (void *)swift_allocObject();
    void v13[2] = 0;
    v13[3] = 0;
    uint64_t v13[4] = v12;
    *(void *)(a1 + v11) = sub_24A039A1C((uint64_t)v6, (uint64_t)&unk_2697503D0, (uint64_t)v13);
    swift_release();
  }
  return sub_249FA57A0(a2);
}

uint64_t sub_249FA57A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F440);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056238();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SolarCycle(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CurrentLocation(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  float v18 = (id *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation;
  swift_beginAccess();
  sub_249FA9C7C(v19, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_249F6E790((uint64_t)v14, &qword_2697500F0);
    uint64_t v20 = type metadata accessor for CurrentLocationSolarPosition(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v38, 1, 1, v20);
  }
  else
  {
    sub_249FAA680((uint64_t)v14, (uint64_t)v18, type metadata accessor for CurrentLocation);
    id v22 = *v18;
    objc_msgSend(v22, sel_coordinate);
    double v24 = v23;
    double v26 = v25;
    if (qword_26974F328 != -1) {
      swift_once();
    }
    sub_24A006BDC((uint64_t)v8);
    sub_24A0563E8();
    uint64_t v27 = sub_24A0563F8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v4, 0, 1, v27);
    sub_249FB5D18((uint64_t)v11, v24, v26);
    sub_249F6E790((uint64_t)v4, &qword_26974F440);
    long long v28 = *(void (**)(char *, uint64_t))(v6 + 8);
    v28(v8, v5);
    objc_msgSend(v22, sel_coordinate);
    double v30 = v29;
    double v32 = v31;
    sub_24A006BDC((uint64_t)v8);
    sub_249FB575C((uint64_t)v8, v30, v32);
    LODWORD(v30) = v33;
    v28(v8, v5);
    LODWORD(v32) = sub_249FB54D0(*(float *)&v30);
    uint64_t v34 = v38;
    sub_249FAA680((uint64_t)v11, v38, type metadata accessor for SolarCycle);

    uint64_t v35 = type metadata accessor for SolarPosition(0);
    *(_DWORD *)(v34 + *(int *)(v35 + 20)) = LODWORD(v30);
    *(_DWORD *)(v34 + *(int *)(v35 + 24)) = LODWORD(v32);
    uint64_t v36 = type metadata accessor for CurrentLocationSolarPosition(0);
    uint64_t v37 = v34 + *(int *)(v36 + 20);
    sub_249FAA680((uint64_t)v18, v37, type metadata accessor for CurrentLocation);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
  }
}

uint64_t sub_249FA5C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[26] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  v4[27] = swift_task_alloc();
  uint64_t v5 = sub_24A056238();
  v4[28] = v5;
  v4[29] = *(void *)(v5 - 8);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  v4[31] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CurrentLocationResult(0);
  v4[32] = v6;
  v4[33] = *(void *)(v6 - 8);
  v4[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697520E0);
  v4[35] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F8);
  v4[36] = v7;
  v4[37] = *(void *)(v7 - 8);
  v4[38] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750100);
  v4[39] = v8;
  v4[40] = *(void *)(v8 - 8);
  v4[41] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_249FA5EF0, 0, 0);
}

uint64_t sub_249FA5EF0()
{
  if (qword_26974F348 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752450;
  *(void *)(v0 + 336) = qword_269752450;
  return MEMORY[0x270FA2498](sub_249FA5F88, v1, 0);
}

uint64_t sub_249FA5F88()
{
  uint64_t v1 = *(void *)(v0 + 304);
  id v2 = sub_24A0414EC(0);
  sub_24A0423C0(v1);

  return MEMORY[0x270FA2498](sub_249FA6008, 0, 0);
}

uint64_t sub_249FA6008()
{
  uint64_t v2 = v0[37];
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[36];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[43] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_249FA6110;
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[35];
  return MEMORY[0x270FA1F68](v6, 0, 0, v5);
}

uint64_t sub_249FA6110()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_249FA620C, 0, 0);
}

uint64_t sub_249FA620C()
{
  uint64_t v1 = v0[35];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[33] + 48))(v1, 1, v0[32]) != 1)
  {
    sub_249FAA680(v1, v0[34], type metadata accessor for CurrentLocationResult);
    uint64_t Strong = swift_weakLoadStrong();
    v0[45] = Strong;
    uint64_t v3 = v0[34];
    if (Strong)
    {
      sub_249FA9C7C(v3, v0[31]);
      return MEMORY[0x270FA2498](sub_249FA63AC, Strong, 0);
    }
    sub_249FAA6E8(v3, type metadata accessor for CurrentLocationResult);
  }
  (*(void (**)(void, void))(v0[40] + 8))(v0[41], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_249FA63AC()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[31];
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation;
  swift_beginAccess();
  sub_249FAA748(v2, v3);
  swift_endAccess();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream);
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[29];
  uint64_t v5 = v0[30];
  uint64_t v7 = v0[28];
  sub_24A006BDC(v5);
  BOOL v8 = sub_24A04B2D4();
  uint64_t v10 = v9;
  uint64_t v31 = v11;
  char v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  unint64_t v14 = (os_unfair_lock_s *)(*(void *)(v4 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v14);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v16 = *(void *)(v4 + 24);
  uint64_t v17 = *(void *)(v4 + 32);
  char v18 = *(unsigned char *)(v4 + 40);
  if (!v16)
  {
    sub_249F9C378(*(void *)(v4 + 16), 0);
    if (!v10)
    {
      uint64_t v21 = v0[43];
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v16 == 1 || v10 == 0) {
    goto LABEL_15;
  }
  if (v8 == ((*(void *)(v4 + 16) & 1) == 0)) {
    goto LABEL_15;
  }
  sub_24A04CBA8(v16, v10, v15);
  if ((v20 & 1) == 0) {
    goto LABEL_15;
  }
  if ((v18 & 1) == 0)
  {
    if ((v13 & 1) != 0 || v17 != v31) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  if ((v13 & 1) == 0)
  {
LABEL_15:
    uint64_t v21 = v0[43];
    uint64_t v22 = *(void *)(v4 + 16);
    uint64_t v23 = *(void *)(v4 + 24);
    *(void *)(v4 + 16) = v8;
    *(void *)(v4 + 24) = v10;
    *(void *)(v4 + 32) = v31;
    *(unsigned char *)(v4 + 40) = v13;
    swift_bridgeObjectRetain();
    sub_249F9C378(v22, v23);
    swift_beginAccess();
    swift_retain();
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_249FAA2A4(v24, v4);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v21 = v0[43];
LABEL_16:
  v0[46] = v21;
  uint64_t v25 = v0[45];
  uint64_t v26 = v0[31];
  uint64_t v27 = v0[27];
  swift_beginAccess();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v25 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream);
  sub_249FA57A0(v27);
  double v29 = (os_unfair_lock_s *)(*(void *)(v28 + *(void *)(*(void *)v28 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v29);
  swift_endAccess();
  sub_249FF63B0(v27);
  swift_beginAccess();
  os_unfair_lock_unlock(v29);
  swift_endAccess();
  sub_249F6E790(v27, &qword_2697503D8);
  sub_249F6E790(v26, &qword_2697500F0);
  return MEMORY[0x270FA2498](sub_249FA6738, 0, 0);
}

uint64_t sub_249FA6738()
{
  uint64_t v1 = v0[34];
  swift_release();
  sub_249FAA6E8(v1, type metadata accessor for CurrentLocationResult);
  v0[43] = v0[46];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[44] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_249FA6110;
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[35];
  return MEMORY[0x270FA1F68](v4, 0, 0, v3);
}

uint64_t sub_249FA6810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  v4[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  v4[25] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503E0);
  v4[26] = v5;
  v4[27] = *(void *)(v5 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503E8);
  v4[29] = v6;
  v4[30] = *(void *)(v6 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v7 = sub_24A056238();
  v4[32] = v7;
  v4[33] = *(void *)(v7 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_249FA6A0C, 0, 0);
}

uint64_t sub_249FA6A0C()
{
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v5 = v0[27];
  uint64_t v4 = v0[28];
  uint64_t v6 = v0[26];
  sub_24A006BDC(v1);
  sub_24A0561C8();
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[37] = v9;
  v0[38] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v3);
  uint64_t v10 = qword_269751340;
  uint64_t v11 = *(void *)(qword_269751340 + OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers);
  swift_retain();
  sub_249FF9D44(1, v11, v10, 1, v4);
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_beginAccess();
  v0[40] = v8;
  v0[39] = 0;
  char v12 = (void *)swift_task_alloc();
  v0[41] = v12;
  *char v12 = v0;
  v12[1] = sub_249FA6BE0;
  uint64_t v13 = v0[29];
  uint64_t v14 = v0[25];
  return MEMORY[0x270FA1F68](v14, 0, 0, v13);
}

uint64_t sub_249FA6BE0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_249FA6CDC, 0, 0);
}

uint64_t sub_249FA6CDC()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 280), v3, v1);
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 336) = Strong;
    if (Strong)
    {
      uint64_t v5 = Strong;
      double v6 = *(double *)(v0 + 320);
      sub_24A0561C8();
      *(double *)(v0 + 344) = v7;
      if (vabdd_f64(v7, v6) <= 5.0)
      {
        (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 280), *(void *)(v0 + 256));
        swift_release();
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 328) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_249FA6BE0;
        uint64_t v10 = *(void *)(v0 + 232);
        uint64_t v11 = *(void *)(v0 + 200);
        return MEMORY[0x270FA1F68](v11, 0, 0, v10);
      }
      else
      {
        return MEMORY[0x270FA2498](sub_249FA6F34, v5, 0);
      }
    }
    (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 280), *(void *)(v0 + 256));
  }
  (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_249FA6F34()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[32];
  uint64_t v4 = *(void *)(v0[42] + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream);
  sub_24A006BDC(v2);
  BOOL v5 = sub_24A04B2D4();
  uint64_t v7 = v6;
  uint64_t v26 = v8;
  char v27 = v9;
  v1(v2, v3);
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v4 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v4 + 24);
  uint64_t v13 = *(void *)(v4 + 32);
  char v14 = *(unsigned char *)(v4 + 40);
  if (!v12)
  {
    sub_249F9C378(*(void *)(v4 + 16), 0);
    if (!v7)
    {
      uint64_t v17 = v0[39];
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v12 == 1 || v7 == 0) {
    goto LABEL_13;
  }
  if (v5 == ((*(void *)(v4 + 16) & 1) == 0)) {
    goto LABEL_13;
  }
  sub_24A04CBA8(v12, v7, v11);
  if ((v16 & 1) == 0) {
    goto LABEL_13;
  }
  if ((v14 & 1) == 0)
  {
    if ((v27 & 1) != 0 || v13 != v26) {
      goto LABEL_13;
    }
    goto LABEL_19;
  }
  if ((v27 & 1) == 0)
  {
LABEL_13:
    uint64_t v17 = v0[39];
    uint64_t v18 = *(void *)(v4 + 16);
    uint64_t v19 = *(void *)(v4 + 24);
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = v7;
    *(void *)(v4 + 32) = v26;
    *(unsigned char *)(v4 + 40) = v27;
    swift_bridgeObjectRetain();
    sub_249F9C378(v18, v19);
    swift_beginAccess();
    swift_retain();
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_249FAA2A4(v20, v4);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v17 = v0[39];
LABEL_14:
  v0[44] = v17;
  uint64_t v21 = v0[42];
  uint64_t v22 = v0[24];
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream);
  sub_249FA57A0(v22);
  uint64_t v24 = (os_unfair_lock_s *)(*(void *)(v23 + *(void *)(*(void *)v23 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v24);
  swift_endAccess();
  sub_249FF63B0(v22);
  swift_beginAccess();
  os_unfair_lock_unlock(v24);
  swift_endAccess();
  sub_249F6E790(v22, &qword_2697503D8);
  return MEMORY[0x270FA2498](sub_249FA7240, 0, 0);
}

uint64_t sub_249FA7240()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[37];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[32];
  swift_release();
  v1(v2, v3);
  uint64_t v4 = v0[44];
  v0[40] = v0[43];
  v0[39] = v4;
  BOOL v5 = (void *)swift_task_alloc();
  v0[41] = v5;
  *BOOL v5 = v0;
  v5[1] = sub_249FA6BE0;
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[25];
  return MEMORY[0x270FA1F68](v7, 0, 0, v6);
}

uint64_t sub_249FA7320()
{
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation, &qword_2697500F0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_249FA73B8()
{
  sub_249FA7320();

  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_249FA73E4()
{
  return type metadata accessor for SolarDataProvider(0);
}

uint64_t type metadata accessor for SolarDataProvider(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_269750378);
}

void sub_249FA740C()
{
  sub_249FA74D4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_249FA74D4()
{
  if (!qword_269750388)
  {
    type metadata accessor for CurrentLocation(255);
    unint64_t v0 = sub_24A057968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269750388);
    }
  }
}

void *sub_249FA752C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A056238();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for SolarEvent(0);
    *((unsigned char *)a1 + *(int *)(v9 + 20)) = *((unsigned char *)a2 + *(int *)(v9 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v9 + 24));
    uint64_t v10 = (int *)type metadata accessor for SolarCycle(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v8((void *)((char *)a1 + v11), (void *)((char *)a2 + v11), v7);
    v12[*(int *)(v9 + 20)] = v13[*(int *)(v9 + 20)];
    *(_DWORD *)&v12[*(int *)(v9 + 24)] = *(_DWORD *)&v13[*(int *)(v9 + 24)];
    uint64_t v14 = v10[6];
    int32x2_t v15 = (char *)a1 + v14;
    char v16 = (char *)a2 + v14;
    v8((void *)((char *)a1 + v14), (void *)((char *)a2 + v14), v7);
    v15[*(int *)(v9 + 20)] = v16[*(int *)(v9 + 20)];
    *(_DWORD *)&v15[*(int *)(v9 + 24)] = *(_DWORD *)&v16[*(int *)(v9 + 24)];
    uint64_t v17 = v10[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    v8((void *)((char *)a1 + v17), (void *)((char *)a2 + v17), v7);
    v18[*(int *)(v9 + 20)] = v19[*(int *)(v9 + 20)];
    *(_DWORD *)&v18[*(int *)(v9 + 24)] = *(_DWORD *)&v19[*(int *)(v9 + 24)];
    uint64_t v20 = v10[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    v8((void *)((char *)a1 + v20), (void *)((char *)a2 + v20), v7);
    v21[*(int *)(v9 + 20)] = v22[*(int *)(v9 + 20)];
    *(_DWORD *)&v21[*(int *)(v9 + 24)] = *(_DWORD *)&v22[*(int *)(v9 + 24)];
    uint64_t v23 = type metadata accessor for SolarPosition(0);
    *(_DWORD *)((char *)a1 + *(int *)(v23 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(v23 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v23 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v23 + 24));
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (void **)((char *)a1 + v24);
    uint64_t v26 = (void **)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for CurrentLocation(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v31 = *v26;
      *uint64_t v25 = *v26;
      uint64_t v32 = *(int *)(v27 + 20);
      int v33 = (char *)v25 + v32;
      uint64_t v34 = (char *)v26 + v32;
      id v35 = v31;
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
      {
        uint64_t v38 = type metadata accessor for LocationAccuracy(0);
        memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      }
      (*(void (**)(void **, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t type metadata accessor for SolarPosition(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_2697503A0);
}

uint64_t sub_249FA7904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A056238();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for SolarCycle(0);
  v5(a1 + v6[5], v4);
  v5(a1 + v6[6], v4);
  v5(a1 + v6[7], v4);
  v5(a1 + v6[8], v4);
  uint64_t v7 = (id *)(a1 + *(int *)(a2 + 20));
  uint64_t v8 = type metadata accessor for CurrentLocation(0);
  uint64_t result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
  if (!result)
  {

    uint64_t v10 = (char *)v7 + *(int *)(v8 + 20);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
      return v12(v10, v11);
    }
  }
  return result;
}

uint64_t sub_249FA7AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void **)(a1 + v23);
  uint64_t v25 = (void **)(a2 + v23);
  uint64_t v26 = type metadata accessor for CurrentLocation(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = *v25;
    *uint64_t v24 = *v25;
    uint64_t v30 = *(int *)(v26 + 20);
    uint64_t v31 = (char *)v24 + v30;
    uint64_t v32 = (char *)v25 + v30;
    id v33 = v29;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
    {
      uint64_t v36 = type metadata accessor for LocationAccuracy(0);
      memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
    (*(void (**)(void **, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_249FA7E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void **)(a1 + v23);
  uint64_t v25 = (void **)(a2 + v23);
  uint64_t v26 = type metadata accessor for CurrentLocation(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v8) = v28(v24, 1, v26);
  int v29 = v28(v25, 1, v26);
  if (!v8)
  {
    if (!v29)
    {
      int v41 = *v25;
      int v42 = *v24;
      *uint64_t v24 = *v25;
      id v43 = v41;

      uint64_t v44 = *(int *)(v26 + 20);
      uint64_t v45 = (char *)v24 + v44;
      uint64_t v46 = (char *)v25 + v44;
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      LODWORD(v42) = v49(v45, 1, v47);
      int v50 = v49(v46, 1, v47);
      if (v42)
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          return a1;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
      }
      size_t v38 = *(void *)(*(void *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      uint64_t v39 = (void **)v45;
      char v40 = (void **)v46;
      goto LABEL_8;
    }
    sub_249FAA6E8((uint64_t)v24, type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v38 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0) - 8) + 64);
    uint64_t v39 = v24;
    char v40 = v25;
LABEL_8:
    memcpy(v39, v40, v38);
    return a1;
  }
  if (v29) {
    goto LABEL_7;
  }
  uint64_t v30 = *v25;
  *uint64_t v24 = *v25;
  uint64_t v31 = *(int *)(v26 + 20);
  uint64_t v32 = (char *)v24 + v31;
  id v33 = (char *)v25 + v31;
  id v34 = v30;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
  {
    uint64_t v37 = type metadata accessor for LocationAccuracy(0);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v33, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
  }
  (*(void (**)(void **, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_249FA833C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CurrentLocation(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    *uint64_t v24 = *v25;
    uint64_t v29 = *(int *)(v26 + 20);
    uint64_t v30 = (char *)v24 + v29;
    uint64_t v31 = (char *)v25 + v29;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = type metadata accessor for LocationAccuracy(0);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_249FA86A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void **)(a1 + v23);
  uint64_t v25 = (void **)(a2 + v23);
  uint64_t v26 = type metadata accessor for CurrentLocation(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v8) = v28(v24, 1, v26);
  int v29 = v28(v25, 1, v26);
  if (!v8)
  {
    if (!v29)
    {
      uint64_t v39 = *v24;
      *uint64_t v24 = *v25;

      uint64_t v40 = *(int *)(v26 + 20);
      int v41 = (char *)v24 + v40;
      int v42 = (char *)v25 + v40;
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
      int v46 = v45(v41, 1, v43);
      int v47 = v45(v42, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          return a1;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v41, v42, v43);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      }
      size_t v36 = *(void *)(*(void *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      uint64_t v37 = (void **)v41;
      size_t v38 = v42;
      goto LABEL_8;
    }
    sub_249FAA6E8((uint64_t)v24, type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v36 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0) - 8) + 64);
    uint64_t v37 = v24;
    size_t v38 = v25;
LABEL_8:
    memcpy(v37, v38, v36);
    return a1;
  }
  if (v29) {
    goto LABEL_7;
  }
  *uint64_t v24 = *v25;
  uint64_t v30 = *(int *)(v26 + 20);
  uint64_t v31 = (char *)v24 + v30;
  uint64_t v32 = (char *)v25 + v30;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269752030);
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = type metadata accessor for LocationAccuracy(0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(void **, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_249FA8B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249FA8B9C);
}

uint64_t sub_249FA8B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SolarPosition(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_249FA8C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249FA8CAC);
}

uint64_t sub_249FA8CAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SolarPosition(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CurrentLocationSolarPosition(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_269750390);
}

void sub_249FA8DD4()
{
  type metadata accessor for SolarPosition(319);
  if (v0 <= 0x3F)
  {
    sub_249FA74D4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_249FA8E9C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A056238();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for SolarEvent(0);
    *((unsigned char *)a1 + *(int *)(v9 + 20)) = *((unsigned char *)a2 + *(int *)(v9 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v9 + 24));
    uint64_t v10 = (int *)type metadata accessor for SolarCycle(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    v8((void *)((char *)a1 + v11), (void *)((char *)a2 + v11), v7);
    v12[*(int *)(v9 + 20)] = v13[*(int *)(v9 + 20)];
    *(_DWORD *)&v12[*(int *)(v9 + 24)] = *(_DWORD *)&v13[*(int *)(v9 + 24)];
    uint64_t v14 = v10[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    v8((void *)((char *)a1 + v14), (void *)((char *)a2 + v14), v7);
    v15[*(int *)(v9 + 20)] = v16[*(int *)(v9 + 20)];
    *(_DWORD *)&v15[*(int *)(v9 + 24)] = *(_DWORD *)&v16[*(int *)(v9 + 24)];
    uint64_t v17 = v10[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    v8((void *)((char *)a1 + v17), (void *)((char *)a2 + v17), v7);
    v18[*(int *)(v9 + 20)] = v19[*(int *)(v9 + 20)];
    *(_DWORD *)&v18[*(int *)(v9 + 24)] = *(_DWORD *)&v19[*(int *)(v9 + 24)];
    uint64_t v20 = v10[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    v8((void *)((char *)a1 + v20), (void *)((char *)a2 + v20), v7);
    v21[*(int *)(v9 + 20)] = v22[*(int *)(v9 + 20)];
    *(_DWORD *)&v21[*(int *)(v9 + 24)] = *(_DWORD *)&v22[*(int *)(v9 + 24)];
    uint64_t v23 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v23) = *(_DWORD *)((char *)a2 + v23);
  }
  return a1;
}

uint64_t sub_249FA90AC(uint64_t a1)
{
  uint64_t v2 = sub_24A056238();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v2 - 8), a1, v2);
  uint64_t v3 = (int *)type metadata accessor for SolarCycle(0);
  v6(a1 + v3[5], v2);
  v6(a1 + v3[6], v2);
  v6(a1 + v3[7], v2);
  uint64_t v4 = a1 + v3[8];

  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v4, v2);
}

uint64_t sub_249FA91A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_249FA9368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249FA952C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_249FA96EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(unsigned char *)(v11 + *(int *)(v8 + 20)) = *(unsigned char *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  uint64_t v13 = v9[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(unsigned char *)(v14 + *(int *)(v8 + 20)) = *(unsigned char *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  uint64_t v16 = v9[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(unsigned char *)(v17 + *(int *)(v8 + 20)) = *(unsigned char *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  uint64_t v19 = v9[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(unsigned char *)(v20 + *(int *)(v8 + 20)) = *(unsigned char *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  uint64_t v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_249FA98AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249FA98C0);
}

uint64_t sub_249FA98C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SolarCycle(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_249FA992C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249FA9940);
}

uint64_t sub_249FA9940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SolarCycle(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_249FA99B0()
{
  uint64_t result = type metadata accessor for SolarCycle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249FA9A4C()
{
  swift_defaultActor_initialize();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation;
  uint64_t v2 = type metadata accessor for CurrentLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750400);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + *(void *)(*(void *)v4 + 96);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = *(void *)(*(void *)v4 + 104);
  type metadata accessor for CPUnfairLock();
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(void *)(v4 + v7) = v8;
  uint64_t v9 = MEMORY[0x263F8EE80];
  *(void *)(v4 + *(void *)(*(void *)v4 + 112)) = MEMORY[0x263F8EE80];
  *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 120)) = 0;
  *(void *)(v0 + v3) = v4;
  uint64_t v10 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750408);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24A05C6A0;
  *(void *)(v11 + 32) = 0;
  *(unsigned char *)(v11 + 40) = 0;
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(void *)(v11 + 48) = v12;
  *(void *)(v11 + 56) = v9;
  *(unsigned char *)(v11 + 64) = 0;
  *(void *)(v0 + v10) = v11;
  *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask) = 0;
  uint64_t v13 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarCycleStreams;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750410);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + v13) = v14;
  *(_DWORD *)(v15 + 16) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarCycleCancellationBlockByLocation) = v9;
  *(void *)(v14 + 16) = v15;
  *(void *)(v14 + 24) = v9;
  *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_overrideTimeUpdateTask) = 0;
  return v0;
}

uint64_t sub_249FA9C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_249FA9CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentLocation(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503B0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v29 - v18;
  if (!sub_249FB693C(a1, a2)) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for SolarPosition(0);
  if (*(float *)(a1 + *(int *)(v20 + 20)) != *(float *)(a2 + *(int *)(v20 + 20))
    || *(float *)(a1 + *(int *)(v20 + 24)) != *(float *)(a2 + *(int *)(v20 + 24)))
  {
    return 0;
  }
  uint64_t v30 = v7;
  uint64_t v21 = v5;
  uint64_t v22 = type metadata accessor for CurrentLocationSolarPosition(0);
  sub_249FA9C7C(a1 + *(int *)(v22 + 20), (uint64_t)v19);
  sub_249FA9C7C(a2 + *(int *)(v22 + 20), (uint64_t)v16);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_249FA9C7C((uint64_t)v19, (uint64_t)v10);
  sub_249FA9C7C((uint64_t)v16, v23);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v24((uint64_t)v10, 1, v4) == 1)
  {
    sub_249F6E790((uint64_t)v16, &qword_2697500F0);
    sub_249F6E790((uint64_t)v19, &qword_2697500F0);
    if (v24(v23, 1, v4) == 1)
    {
      sub_249F6E790((uint64_t)v10, &qword_2697500F0);
      return 1;
    }
    uint64_t v26 = &qword_2697503B0;
    goto LABEL_15;
  }
  sub_249FA9C7C((uint64_t)v10, (uint64_t)v13);
  if (v24(v23, 1, v4) == 1)
  {
    uint64_t v26 = &qword_2697503B0;
LABEL_14:
    sub_249F6E790((uint64_t)v16, &qword_2697500F0);
    sub_249F6E790((uint64_t)v19, &qword_2697500F0);
    sub_249FAA6E8((uint64_t)v13, type metadata accessor for CurrentLocation);
LABEL_15:
    sub_249F6E790((uint64_t)v10, v26);
    return 0;
  }
  uint64_t v27 = (uint64_t)v30;
  sub_249FAA680(v23, (uint64_t)v30, type metadata accessor for CurrentLocation);
  sub_249F8A378();
  if ((sub_24A057938() & 1) == 0)
  {
    sub_249FAA6E8(v27, type metadata accessor for CurrentLocation);
    uint64_t v26 = &qword_2697500F0;
    goto LABEL_14;
  }
  char v28 = sub_24A048F1C((uint64_t)&v13[*(int *)(v4 + 20)], v27 + *(int *)(v4 + 20));
  sub_249FAA6E8(v27, type metadata accessor for CurrentLocation);
  sub_249F6E790((uint64_t)v16, &qword_2697500F0);
  sub_249F6E790((uint64_t)v19, &qword_2697500F0);
  sub_249FAA6E8((uint64_t)v13, type metadata accessor for CurrentLocation);
  sub_249F6E790((uint64_t)v10, &qword_2697500F0);
  return (v28 & 1) != 0;
}

uint64_t sub_249FAA0FC()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249FAA138(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249FA5C84(a1, v4, v5, v6);
}

uint64_t sub_249FAA1F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249FA6810(a1, v4, v5, v6);
}

uint64_t sub_249FAA2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503F0);
  int64_t v49 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v42 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v44 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v17 = 0;
  int64_t v43 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v18 = v6 + 16;
  uint64_t v19 = v6 + 32;
  uint64_t v20 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  size_t v38 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v39 = (void (**)(char *, uint64_t))(v49 + 8);
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      int64_t v49 = v17;
      unint64_t v22 = v21 | (v17 << 6);
      goto LABEL_23;
    }
    int64_t v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v43) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v42 + 8 * v23);
    int64_t v25 = v17 + 1;
    if (!v24)
    {
      int64_t v25 = v17 + 2;
      if (v17 + 2 >= v43) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v42 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v17 + 3;
        if (v17 + 3 >= v43) {
          return swift_release();
        }
        unint64_t v24 = *(void *)(v42 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v17 + 4;
          if (v17 + 4 >= v43) {
            return swift_release();
          }
          unint64_t v24 = *(void *)(v42 + 8 * v25);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v15 = (v24 - 1) & v24;
    int64_t v49 = v25;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_23:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v44 + 56) + *(void *)(v6 + 72) * v22, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    uint64_t v27 = *(void *)(a2 + 24);
    if (v27 != 1)
    {
      char v28 = *(unsigned char *)(a2 + 40);
      uint64_t v29 = *(void *)(a2 + 32);
      uint64_t v45 = *(void *)(a2 + 16);
      uint64_t v46 = v27;
      uint64_t v47 = v29;
      char v48 = v28;
      swift_bridgeObjectRetain();
      uint64_t v30 = v6;
      uint64_t v31 = v19;
      uint64_t v32 = a2;
      uint64_t v33 = v11;
      uint64_t v34 = v18;
      uint64_t v35 = v40;
      sub_24A057648();
      size_t v36 = v35;
      uint64_t v18 = v34;
      uint64_t v11 = v33;
      a2 = v32;
      uint64_t v19 = v31;
      uint64_t v6 = v30;
      uint64_t v20 = v38;
      (*v39)(v36, v41);
    }
    uint64_t result = (*v20)(v8, v5);
    int64_t v17 = v49;
  }
  uint64_t v26 = v17 + 5;
  if (v17 + 5 >= v43) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v42 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v17 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v43) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v42 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249FAA680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249FAA6E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249FAA748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697500F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

CGColorRef sub_249FAA7B0(char a1)
{
  if (a1 == 2)
  {
    return CGColorCreateGenericGray(1.0, 1.0);
  }
  else
  {
    v11[10] = v1;
    v11[11] = v2;
    if (qword_26974F2F8 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_2697523A0;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = 0x4069800000000000;
    id v6 = objc_allocWithZone(MEMORY[0x263F825C8]);
    v11[4] = sub_249F7C490;
    v11[5] = v5;
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 1107296256;
    void v11[2] = sub_249FDA198;
    v11[3] = &block_descriptor_4;
    uint64_t v7 = _Block_copy(v11);
    id v8 = v4;
    id v9 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
    _Block_release(v7);
    swift_release();
    id v10 = objc_msgSend(v9, sel_CGColor);

    return (CGColorRef)v10;
  }
}

void sub_249FAA920(int64x2_t *a1@<X8>)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  if (v1[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler + 40])
  {
    id v4 = objc_msgSend(v1, sel_traitCollection);
    objc_msgSend(v4, sel_displayScale);
    uint64_t v13 = v5;

    id v6 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v6, sel_bounds);
    uint64_t v8 = v7;
    uint64_t v10 = v9;

    *(void *)uint64_t v3 = v13;
    *(_OWORD *)(v3 + 8) = xmmword_24A05C820;
    *((void *)v3 + 3) = v8;
    *((void *)v3 + 4) = v10;
    v3[40] = 0;
    int64x2_t v11 = vdupq_lane_s64(0x408AA00000000000, 0);
    v11.i64[0] = v13;
    uint64_t v12 = 0x4078900000000000;
  }
  else
  {
    uint64_t v8 = *((void *)v3 + 3);
    uint64_t v10 = *((void *)v3 + 4);
    uint64_t v12 = *((void *)v3 + 2);
    int64x2_t v11 = *(int64x2_t *)v3;
  }
  *a1 = v11;
  a1[1].i64[0] = v12;
  a1[1].i64[1] = v8;
  a1[2].i64[0] = v10;
}

id sub_249FAAA30(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer] = 0;
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers] = MEMORY[0x263F8EE78];
  *(void *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels] = v9;
  uint64_t v10 = &v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_leftComplicationFrame];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  int64x2_t v11 = &v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_rightComplicationFrame];
  *(_OWORD *)int64x2_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  uint64_t v12 = &v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  *((void *)v12 + 4) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[40] = 1;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for AnalogClockDialView();
  return objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
}

void sub_249FAAB64()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers];
  swift_beginAccess();
  if (*(void *)v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_24A057BD8();
    swift_bridgeObjectRelease();
    if (v27) {
      return;
    }
  }
  else if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  id v4 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer];
  uint64_t v29 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer] = v3;

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  id v6 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer];
  uint64_t v30 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer] = v5;

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer];
  uint64_t v28 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer] = v7;

  uint64_t v9 = 0;
  do
  {
    int v10 = 2 * (-858993459 * v9 > 0x33333333);
    if (!v9) {
      int v10 = 1;
    }
    if (v9 == 30) {
      int v11 = 1;
    }
    else {
      int v11 = v10;
    }
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
    sub_249FAA920(&v31);
    UIRoundToScale();
    objc_msgSend(v12, sel_setCornerRadius_);
    if (v11 == 2)
    {
      uint64_t v13 = *(void **)&v0[v30];
      if (!v13)
      {
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v13 = *(void **)&v0[v29];
      if (!v13) {
        goto LABEL_27;
      }
    }
    objc_msgSend(v13, sel_addSublayer_, v12, v28);
    swift_beginAccess();
    id v14 = v12;
    MEMORY[0x24C5B8D50]();
    if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_24A057598();
    ++v9;
    sub_24A0575B8();
    sub_24A057588();
    swift_endAccess();
  }
  while (v9 != 60);
  unint64_t v15 = *(void **)&v0[v28];
  if (!v15)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v15, sel_setMask_, *(void *)&v0[v30]);
  uint64_t v16 = *(void **)&v0[v28];
  if (!v16)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F928);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24A05C830;
  sub_249FAD044();
  id v18 = v16;
  *(void *)(v17 + 32) = sub_24A057918();
  *(void *)(v17 + 40) = sub_24A057918();
  *(void *)(v17 + 48) = sub_24A057918();
  sub_24A057588();
  uint64_t v19 = (void *)sub_24A057548();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setLocations_, v19);

  uint64_t v20 = *(void **)&v1[v28];
  if (!v20)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v20, sel_setType_, *MEMORY[0x263F15DD0]);
  unint64_t v21 = *(void **)&v1[v28];
  if (!v21)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v21, sel_setStartPoint_, 0.0, 0.0);
  unint64_t v22 = *(void **)&v1[v28];
  if (!v22)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v22, sel_setEndPoint_, 1.0, 0.0);
  id v23 = objc_msgSend(v1, sel_layer);
  if (!*(void *)&v1[v28])
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v24 = v23;
  objc_msgSend(v23, sel_addSublayer_);

  id v25 = objc_msgSend(v1, sel_layer);
  if (*(void *)&v1[v29])
  {
    uint64_t v26 = v25;
    objc_msgSend(v25, sel_addSublayer_);

    return;
  }
LABEL_34:
  __break(1u);
}

void sub_249FAAFB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels];
  swift_beginAccess();
  if (*(void *)v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24A057BD8();
    swift_bridgeObjectRelease();
    if (v3) {
      return;
    }
  }
  else if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  for (uint64_t i = 3; i != 15; i += 3)
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697520A0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_24A05A510;
    *(void *)(v6 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v6 + 64) = MEMORY[0x263F8D750];
    *(void *)(v6 + 32) = i;
    sub_24A057378();
    swift_bridgeObjectRelease();
    id v7 = (void *)sub_24A057368();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7);

    sub_249FAA920(&v14);
    if (qword_26974F310 != -1) {
      swift_once();
    }
    double v8 = *(double *)&v14.i64[1];
    double v9 = v16;
    if (v17 < v16) {
      double v9 = v17;
    }
    if (v15 < *(double *)&v14.i64[1]) {
      double v8 = v15;
    }
    CGFloat v10 = *(double *)&qword_2697523B8 * (v9 / v8);
    int v11 = (__CFString *)sub_24A057368();
    CTFontRef v12 = CTFontCreateWithNameAndOptions(v11, v10, 0, 0x20000uLL);

    objc_msgSend(v5, sel_setFont_, v12);
    objc_msgSend(v5, sel_sizeToFit);
    objc_msgSend(v1, sel_addSubview_, v5);
    swift_beginAccess();
    id v13 = v5;
    MEMORY[0x24C5B8D50]();
    if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_24A057598();
    sub_24A0575B8();
    sub_24A057588();
    swift_endAccess();
  }
}

void sub_249FAB280()
{
  v57.receiver = v0;
  v57.super_class = (Class)type metadata accessor for AnalogClockDialView();
  objc_msgSendSuper2(&v57, sel_layoutSubviews);
  sub_249FAAB64();
  sub_249FAAFB0();
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer];
  if (!v1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v2 = v1;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer];
  if (!v3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v4 = v3;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);

  uint64_t v5 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer;
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer];
  if (!v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v7 = v6;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v7, sel_setFrame_);

  double v8 = *(void **)&v0[v5];
  if (v8)
  {
    int v50 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269750460);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24A05C840;
    uint64_t v10 = qword_26974F300;
    id v49 = v8;
    if (v10 != -1) {
      swift_once();
    }
    int v11 = (void *)qword_2697523A8;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = 0x4059800000000000;
    id v13 = objc_allocWithZone(MEMORY[0x263F825C8]);
    CGRect v55 = sub_249F7C4E4;
    uint64_t v56 = v12;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v52 = 1107296256;
    CGRect v53 = sub_249FDA198;
    CGRect v54 = &block_descriptor_29;
    int64x2_t v14 = _Block_copy(&aBlock);
    id v15 = v11;
    id v16 = objc_msgSend(v13, sel_initWithDynamicProvider_, v14);
    _Block_release(v14);
    swift_release();
    id v17 = objc_msgSend(v16, sel_CGColor);

    type metadata accessor for CGColor(0);
    uint64_t v19 = v18;
    *(void *)(v9 + 56) = v18;
    *(void *)(v9 + 32) = v17;
    if (qword_26974F308 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_2697523B0;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = 0x4059800000000000;
    id v22 = objc_allocWithZone(MEMORY[0x263F825C8]);
    CGRect v55 = sub_249F7C4E4;
    uint64_t v56 = v21;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v52 = 1107296256;
    CGRect v53 = sub_249FDA198;
    CGRect v54 = &block_descriptor_36;
    id v23 = _Block_copy(&aBlock);
    id v24 = v20;
    id v25 = objc_msgSend(v22, sel_initWithDynamicProvider_, v23);
    _Block_release(v23);
    swift_release();
    id v26 = objc_msgSend(v25, sel_CGColor);

    *(void *)(v9 + 88) = v19;
    *(void *)(v9 + 64) = v26;
    uint64_t v27 = (void *)qword_2697523A8;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = 0x4059800000000000;
    id v29 = objc_allocWithZone(MEMORY[0x263F825C8]);
    CGRect v55 = sub_249F7C4E4;
    uint64_t v56 = v28;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v52 = 1107296256;
    CGRect v53 = sub_249FDA198;
    CGRect v54 = &block_descriptor_43;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v27;
    id v32 = objc_msgSend(v29, sel_initWithDynamicProvider_, v30);
    _Block_release(v30);
    swift_release();
    id v33 = objc_msgSend(v32, sel_CGColor);

    *(void *)(v9 + 120) = v19;
    *(void *)(v9 + 96) = v33;
    uint64_t v34 = (void *)sub_24A057548();
    swift_bridgeObjectRelease();
    objc_msgSend(v49, sel_setColors_, v34);

    uint64_t v35 = &v50[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels];
    swift_beginAccess();
    unint64_t v36 = *(void *)v35;
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_24A057BD8();
      if (v37) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v37)
      {
LABEL_11:
        uint64_t v38 = self;
        if (v37 >= 1)
        {
          uint64_t v39 = (void *)v38;
          uint64_t v40 = 0;
          do
          {
            if ((v36 & 0xC000000000000001) != 0) {
              id v41 = (id)MEMORY[0x24C5B92B0](v40, v36);
            }
            else {
              id v41 = *(id *)(v36 + 8 * v40 + 32);
            }
            uint64_t v42 = v41;
            ++v40;
            id v43 = objc_msgSend(v39, sel_whiteColor);
            uint64_t v44 = swift_allocObject();
            *(void *)(v44 + 16) = v43;
            *(void *)(v44 + 24) = 0x4069800000000000;
            id v45 = objc_allocWithZone(MEMORY[0x263F825C8]);
            CGRect v55 = sub_249F7C4E4;
            uint64_t v56 = v44;
            uint64_t aBlock = MEMORY[0x263EF8330];
            uint64_t v52 = 1107296256;
            CGRect v53 = sub_249FDA198;
            CGRect v54 = &block_descriptor_50;
            uint64_t v46 = _Block_copy(&aBlock);
            id v47 = v43;
            id v48 = objc_msgSend(v45, sel_initWithDynamicProvider_, v46);
            _Block_release(v46);

            swift_release();
            objc_msgSend(v42, sel_setTextColor_, v48);
          }
          while (v37 != v40);
          goto LABEL_18;
        }
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_249FAB950();
    sub_249FAC90C();
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_249FAB950()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (__objc2_class **)((char *)&v92 - v5);
  uint64_t v7 = sub_24A056538();
  double v8 = *(char **)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (__objc2_class **)((char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v92 - v12;
  sub_249FAA920(&v137);
  UIFloorToScale();
  CGFloat v15 = v14;
  id v16 = (double *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  UIFloorToScale();
  CGFloat v18 = v17;
  UIFloorToScale();
  CGFloat v20 = v19;
  UIFloorToScale();
  CGFloat v22 = v21;
  objc_msgSend(v0, sel_bounds);
  CGRect v139 = CGRectInset(v138, 0.0, v15);
  CGFloat y = v139.origin.y;
  CGFloat x = v139.origin.x;
  CGFloat height = v139.size.height;
  CGFloat width = v139.size.width;
  objc_msgSend(v0, sel_bounds);
  CGRect v141 = CGRectInset(v140, v18, 0.0);
  CGFloat v104 = v141.origin.y;
  CGFloat v105 = v141.origin.x;
  CGFloat v102 = v141.size.height;
  CGFloat v103 = v141.size.width;
  objc_msgSend(v0, sel_bounds);
  CGRect v143 = CGRectInset(v142, 0.0, v20);
  CGFloat v118 = v143.origin.y;
  CGFloat v119 = v143.origin.x;
  CGFloat v116 = v143.size.height;
  CGFloat v117 = v143.size.width;
  objc_msgSend(v0, sel_bounds);
  CGRect v145 = CGRectInset(v144, v22, 0.0);
  CGFloat v100 = v145.origin.y;
  CGFloat v101 = v145.origin.x;
  CGFloat v98 = v145.size.height;
  CGFloat v99 = v145.size.width;
  id v133 = v0;
  uint64_t v23 = (uint64_t)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers];
  swift_beginAccess();
  unint64_t v24 = *(void *)v23;
  if (*(void *)v23 >> 62) {
    goto LABEL_53;
  }
  uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v110 = v3;
    uint64_t v120 = v7;
    unint64_t v130 = v24;
    if (v24 >> 62) {
      break;
    }
    uint64_t v7 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v27 = v130;
    if (!v7) {
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    uint64_t v23 = 0;
    uint64_t v3 = 0;
    double v127 = 6.28318531 / (double)v25;
    unint64_t v129 = v27 & 0xC000000000000001;
    p_b = &v136.b;
    unsigned __int8 v94 = (void (**)(void))(v8 + 32);
    uint64_t v113 = (void (**)(uint64_t, uint64_t))(v8 + 8);
    uint64_t v114 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    double v28 = *MEMORY[0x263F000D0];
    CGFloat v125 = *(double *)(MEMORY[0x263F000D0] + 8);
    CGFloat v126 = v28;
    double v29 = *(double *)(MEMORY[0x263F000D0] + 16);
    CGFloat v123 = *(double *)(MEMORY[0x263F000D0] + 24);
    CGFloat v124 = v29;
    double v30 = *(double *)(MEMORY[0x263F000D0] + 32);
    CGFloat v121 = *(double *)(MEMORY[0x263F000D0] + 40);
    CGFloat v122 = v30;
    *(void *)&long long v26 = 134349056;
    long long v92 = v26;
    double v96 = -4.71238898;
    double v95 = -3.14159265;
    uint64_t v97 = v6;
    unsigned int v111 = v13;
    uint64_t v112 = v10;
    uint64_t v115 = v16;
    id v128 = (char *)v7;
    while (1)
    {
      unint64_t v24 = v129 ? MEMORY[0x24C5B92B0](v23, v27) : (unint64_t)*(id *)(v27 + 8 * v23 + 32);
      double v8 = (char *)v24;
      id v13 = (char *)(v23 + 1);
      if (__OFADD__(v23, 1)) {
        break;
      }
      int v47 = 2 * (&v3[5 * (v23 / 5uLL)] != 0);
      if (!v23) {
        int v47 = 1;
      }
      if (v23 == 30) {
        int v48 = 1;
      }
      else {
        int v48 = v47;
      }
      double v49 = v127 * (double)v23 + -1.57079633;
      id v50 = v133;
      objc_msgSend(v133, sel_bounds, v92, p_b);
      double v55 = sub_249FAC4F8(v49, v51, v52, v53, v54);
      double v57 = v56;
      objc_msgSend(v50, sel_bounds);
      *(double *)&uint64_t v62 = COERCE_DOUBLE(sub_249FAC6F8(v49, v58, v59, v60, v61));
      CGFloat v63 = *(double *)&v62;
      if (v48 != 2 && (v48 & 1) == 0)
      {
        switch(v62)
        {
          case 1:
          case 4:
            long double v64 = v49;
            CGFloat v66 = y;
            CGFloat v65 = x;
            CGFloat v68 = height;
            CGFloat v67 = width;
            goto LABEL_32;
          case 2:
          case 8:
            long double v64 = v49;
            CGFloat v66 = v104;
            CGFloat v65 = v105;
            CGFloat v68 = v102;
            CGFloat v67 = v103;
            goto LABEL_32;
          default:
            goto LABEL_33;
        }
      }
      switch(v62)
      {
        case 1:
        case 4:
          long double v64 = v49;
          CGFloat v66 = v118;
          CGFloat v65 = v119;
          CGFloat v68 = v116;
          CGFloat v67 = v117;
          goto LABEL_32;
        case 2:
        case 8:
          long double v64 = v49;
          CGFloat v66 = v100;
          CGFloat v65 = v101;
          CGFloat v68 = v98;
          CGFloat v67 = v99;
LABEL_32:
          double v69 = sub_249FAC4F8(v64, v65, v66, v67, v68);
          double v71 = v70;
          break;
        default:
LABEL_33:
          if (qword_26B16F9B8 != -1) {
            swift_once();
          }
          uint64_t v72 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
          swift_beginAccess();
          uint64_t v73 = v72;
          uint64_t v74 = (uint64_t)v97;
          sub_249F7AA94(v73, (uint64_t)v97);
          if ((*v114)(v74, 1, v120) == 1)
          {
            uint64_t v75 = (uint64_t)v111;
            sub_249FB8AA8((uint64_t)v111);
            sub_249F9F8CC(v74);
          }
          else
          {
            uint64_t v75 = (uint64_t)v111;
            (*v94)();
          }
          int v76 = sub_24A056518();
          os_log_type_t v77 = sub_24A0577C8();
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v78 = v92;
            v136.a = v63;
            sub_24A057978();
            _os_log_impl(&dword_249F61000, v76, v77, "Invalid frame edge %{public}lu", v78, 0xCu);
            uint64_t v79 = v78;
            uint64_t v75 = (uint64_t)v111;
            MEMORY[0x24C5BA360](v79, -1, -1);
          }

          (*v113)(v75, v120);
          double v69 = sub_249FAC4F8(v49, v119, v118, v117, v116);
          double v71 = v80;
          id v16 = v115;
          break;
      }
      objc_msgSend(v8, sel_cornerRadius);
      double v82 = v81;
      double v31 = v49;
      switch(*(void *)&v63)
      {
        case 1:
          double v31 = v49 + v96;
          break;
        case 2:
          double v31 = v49 + v95;
          break;
        case 4:
          double v31 = v49 + -1.57079633;
          break;
        case 8:
          break;
        default:
          if (qword_26B16F9B8 != -1) {
            swift_once();
          }
          uint64_t v83 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
          swift_beginAccess();
          uint64_t v84 = v83;
          uint64_t v85 = (uint64_t)v110;
          sub_249F7AA94(v84, (uint64_t)v110);
          if ((*v114)(v85, 1, v120) == 1)
          {
            uint64_t v86 = (uint64_t)v112;
            sub_249FB8AA8((uint64_t)v112);
            sub_249F9F8CC(v85);
          }
          else
          {
            uint64_t v86 = (uint64_t)v112;
            (*v94)();
          }
          uint64_t v87 = sub_24A056518();
          os_log_type_t v88 = sub_24A0577C8();
          if (os_log_type_enabled(v87, v88))
          {
            uint64_t v89 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v89 = v92;
            v136.a = v63;
            sub_24A057978();
            _os_log_impl(&dword_249F61000, v87, v88, "Invalid frame edge %{public}lu", v89, 0xCu);
            uint64_t v90 = v89;
            uint64_t v86 = (uint64_t)v112;
            MEMORY[0x24C5BA360](v90, -1, -1);
          }

          (*v113)(v86, v120);
          double v31 = 0.0;
          id v16 = v115;
          break;
      }
      long double v32 = v82 / cos(v31) - v82;
      double v33 = sqrt(v69 * v69 + v71 * v71) + v32;
      uint64_t v10 = &off_265282000;
      v136.a = v126;
      v136.b = v125;
      v136.c = v124;
      v136.d = v123;
      double v34 = sqrt(v55 * v55 + v57 * v57) - v33 - v32;
      v136.tCGFloat x = v122;
      v136.tCGFloat y = v121;
      objc_msgSend(v8, sel_setAffineTransform_, &v136);
      double v35 = v16[1];
      if (v16[2] < v35) {
        double v35 = v16[2];
      }
      if (v16[4] >= v16[3]) {
        double v36 = v16[3];
      }
      else {
        double v36 = v16[4];
      }
      double v37 = 2.0;
      if (v48 != 2) {
        double v37 = 3.5;
      }
      objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, v34, v37 * (v36 / v35));
      uint64_t v6 = &off_265282000;
      id v38 = v133;
      objc_msgSend(v133, sel_bounds);
      double MidX = CGRectGetMidX(v146);
      __double2 v40 = __sincos_stret(v49);
      objc_msgSend(v38, sel_bounds);
      objc_msgSend(v8, sel_setPosition_, v40.__cosval * v34 * 0.5 + MidX, v40.__sinval * v34 * 0.5 + CGRectGetMidY(v147));
      CGAffineTransformMakeTranslation(&v136, v33, 0.0);
      long long v131 = *(_OWORD *)&v136.c;
      long long v132 = *(_OWORD *)&v136.a;
      tCGFloat x = v136.tx;
      tCGFloat y = v136.ty;
      CGAffineTransformMakeRotation(&v136, v49);
      long long v43 = *(_OWORD *)&v136.a;
      long long v44 = *(_OWORD *)&v136.c;
      long long v45 = *(_OWORD *)&v136.tx;
      *(_OWORD *)&v136.a = v132;
      *(_OWORD *)&v136.c = v131;
      v136.tCGFloat x = tx;
      v136.tCGFloat y = ty;
      *(_OWORD *)&v135.a = v43;
      *(_OWORD *)&v135.c = v44;
      *(_OWORD *)&v135.tCGFloat x = v45;
      CGAffineTransformConcat(&v134, &v136, &v135);
      CGAffineTransform v136 = v134;
      objc_msgSend(v8, sel_setAffineTransform_, &v136);
      CGColorRef v46 = sub_249FAA7B0(v48);
      objc_msgSend(v8, sel_setBackgroundColor_, v46);

      --v3;
      ++v23;
      uint64_t v7 = (uint64_t)v128;
      unint64_t v27 = v130;
      if (v13 == v128) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_53:
    unint64_t v130 = v24;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24A057BD8();
    swift_bridgeObjectRelease();
    unint64_t v24 = *(void *)v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24A057BD8();
  unint64_t v27 = v130;
  if (v7) {
    goto LABEL_5;
  }
  return swift_bridgeObjectRelease();
}

double sub_249FAC4F8(long double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  for (double i = fmod(a1, 6.28318531); i < 0.0; double i = i + 6.28318531)
    ;
  v18.origin.CGFloat x = a2;
  v18.origin.CGFloat y = a3;
  v18.size.CGFloat width = a4;
  v18.size.CGFloat height = a5;
  long double v10 = CGRectGetHeight(v18) * 0.5;
  v19.origin.CGFloat x = a2;
  v19.origin.CGFloat y = a3;
  v19.size.CGFloat width = a4;
  v19.size.CGFloat height = a5;
  CGFloat Width = CGRectGetWidth(v19);
  double v12 = atan2(v10, Width * 0.5);
  if (i < v12) {
    goto LABEL_4;
  }
  if (i < 3.14159265 - v12)
  {
    v22.origin.CGFloat x = a2;
    v22.origin.CGFloat y = a3;
    v22.size.CGFloat width = a4;
    v22.size.CGFloat height = a5;
    double v15 = CGRectGetHeight(v22) * 0.5;
    double v16 = 1.57079633;
LABEL_12:
    double v13 = v15 * tan(i + v16);
    v26.origin.CGFloat x = a2;
    v26.origin.CGFloat y = a3;
    v26.size.CGFloat width = a4;
    v26.size.CGFloat height = a5;
    CGRectGetHeight(v26);
    return v13;
  }
  if (i < v12 + 3.14159265)
  {
    v23.origin.CGFloat x = a2;
    v23.origin.CGFloat y = a3;
    v23.size.CGFloat width = a4;
    v23.size.CGFloat height = a5;
    double v13 = CGRectGetWidth(v23) * 0.5;
    v24.origin.CGFloat x = a2;
    v24.origin.CGFloat y = a3;
    v24.size.CGFloat width = a4;
    v24.size.CGFloat height = a5;
    CGRectGetWidth(v24);
    double v14 = i + 3.14159265;
    goto LABEL_5;
  }
  if (i < 6.28318531 - v12)
  {
    v25.origin.CGFloat x = a2;
    v25.origin.CGFloat y = a3;
    v25.size.CGFloat width = a4;
    v25.size.CGFloat height = a5;
    double v15 = CGRectGetHeight(v25) * 0.5;
    double v16 = 4.71238898;
    goto LABEL_12;
  }
LABEL_4:
  v20.origin.CGFloat x = a2;
  v20.origin.CGFloat y = a3;
  v20.size.CGFloat width = a4;
  v20.size.CGFloat height = a5;
  double v13 = CGRectGetWidth(v20) * 0.5;
  v21.origin.CGFloat x = a2;
  v21.origin.CGFloat y = a3;
  v21.size.CGFloat width = a4;
  v21.size.CGFloat height = a5;
  CGRectGetWidth(v21);
  double v14 = i;
LABEL_5:
  tan(v14);
  return v13;
}

uint64_t sub_249FAC6F8(long double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  for (double i = remainder(a1, 6.28318531); i < 0.0; double i = i + 6.28318531)
    ;
  if (i >= 4.71238898)
  {
    v30.origin.CGFloat x = a2;
    v30.origin.CGFloat y = a3;
    v30.size.CGFloat width = a4;
    v30.size.CGFloat height = a5;
    long double v17 = CGRectGetHeight(v30) * -0.5;
    v31.origin.CGFloat x = a2;
    v31.origin.CGFloat y = a3;
    v31.size.CGFloat width = a4;
    v31.size.CGFloat height = a5;
    CGFloat Width = CGRectGetWidth(v31);
    long double v19 = atan2(v17, Width * 0.5);
    for (double j = remainder(v19, 6.28318531); j < 0.0; double j = j + 6.28318531)
      ;
    if (i < j) {
      return 1;
    }
    else {
      return 8;
    }
  }
  else if (i >= 3.14159265)
  {
    v32.origin.CGFloat x = a2;
    v32.origin.CGFloat y = a3;
    v32.size.CGFloat width = a4;
    v32.size.CGFloat height = a5;
    long double v22 = CGRectGetHeight(v32) * -0.5;
    v33.origin.CGFloat x = a2;
    v33.origin.CGFloat y = a3;
    v33.size.CGFloat width = a4;
    v33.size.CGFloat height = a5;
    CGFloat v23 = CGRectGetWidth(v33);
    long double v24 = atan2(v22, v23 * -0.5);
    for (double k = remainder(v24, 6.28318531); k < 0.0; double k = k + 6.28318531)
      ;
    if (i >= k) {
      return 1;
    }
    else {
      return 2;
    }
  }
  else
  {
    v28.origin.CGFloat x = a2;
    v28.origin.CGFloat y = a3;
    v28.size.CGFloat width = a4;
    v28.size.CGFloat height = a5;
    CGFloat v10 = CGRectGetHeight(v28) * 0.5;
    v29.origin.CGFloat x = a2;
    v29.origin.CGFloat y = a3;
    v29.size.CGFloat width = a4;
    v29.size.CGFloat height = a5;
    double v11 = CGRectGetWidth(v29);
    if (i >= 1.57079633)
    {
      long double v26 = atan2(v10, v11 * -0.5);
      for (double m = remainder(v26, 6.28318531); m < 0.0; double m = m + 6.28318531)
        ;
      BOOL v14 = i < m;
      uint64_t v15 = 2;
      uint64_t v16 = 4;
    }
    else
    {
      long double v12 = atan2(v10, v11 * 0.5);
      for (double n = remainder(v12, 6.28318531); n < 0.0; double n = n + 6.28318531)
        ;
      BOOL v14 = i < n;
      uint64_t v15 = 4;
      uint64_t v16 = 8;
    }
    if (v14) {
      return v16;
    }
    else {
      return v15;
    }
  }
}

uint64_t sub_249FAC90C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels];
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24A057BD8();
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)v1;
    if (*(void *)v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_24A057BD8();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    CGFloat v52 = (double *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_leftComplicationFrame];
    CGFloat v51 = (double *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_rightComplicationFrame];
    uint64_t v7 = &off_265282000;
    double v53 = 6.28318531 / (double)v3;
    while (1)
    {
      id v9 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24C5B92B0](v6, v2) : *(id *)(v2 + 8 * v6 + 32);
      id v10 = v9;
      [v10 (SEL)v7[194]];
      UIRectIntegralWithViewScale();
      objc_msgSend(v10, sel_setFrame_);

      objc_msgSend(v0, sel_bounds);
      double v15 = sub_249FAC4F8(v53 * (double)v6, v11, v12, v13, v14);
      double v17 = sqrt(v15 * v15 + v16 * v16);
      if (!v6) {
        break;
      }
      if (v6 == 2)
      {
        sub_249FAA920(&v56);
        UIFloorToScale();
        goto LABEL_18;
      }
      if (v6 == 1)
      {
        sub_249FAA920(&v55);
        UICeilToScale();
        double v19 = v18;
        objc_msgSend(v10, sel__capOffsetFromBoundsTop);
        double v21 = v20;
        objc_msgSend(v10, sel_bounds);
        CGFloat Height = CGRectGetHeight(v59);
        double v23 = v17 - v19;
        double v24 = Height * 0.5 - v21;
        goto LABEL_21;
      }
      sub_249FAA920(&v57);
      UIFloorToScale();
      double v26 = v27;
      objc_msgSend(v10, sel__firstLineBaselineOffsetFromBoundsTop);
      double v29 = v28;
      objc_msgSend(v10, sel_bounds);
      double v24 = v29 + CGRectGetHeight(v61) * -0.5;
LABEL_20:
      double v23 = v17 - v26;
LABEL_21:
      double v30 = v23 + v24;
      objc_msgSend(v0, sel_bounds);
      UIRectGetCenter();
      UIPointRoundToViewScale();
      double v32 = v31;
      double v34 = v33;
      id v35 = v10;
      double v36 = v7;
      [v35 (SEL)v7[194]];
      id v37 = objc_msgSend(v0, sel_traitCollection);
      objc_msgSend(v37, sel_displayScale);

      double v38 = v32;
      UIRectIntegralWithScale();
      objc_msgSend(v35, sel_setFrame_);

      __sincos_stret(v53 * (double)v6);
      id v39 = v35;
      id v40 = objc_msgSend(v0, sel_traitCollection);
      objc_msgSend(v40, sel_displayScale);

      UIPointRoundToScale();
      objc_msgSend(v39, sel_setCenter_);

      if (v6 == 3)
      {

        uint64_t v7 = v36;
      }
      else
      {
        uint64_t v7 = v36;
        if (v6 != 1)
        {
          objc_msgSend(v39, sel_bounds);
          double v41 = v30 - CGRectGetWidth(v62) * 0.5;
          sub_249FAA920(&v58);
          UIRoundToScale();
          double v43 = v42;
          objc_msgSend(v0, sel_bounds);
          double v44 = CGRectGetHeight(v63) - (v43 + v43);
          UIRoundToScale();
          double v46 = v45;

          double v47 = v34 - v44 * 0.5 + v46;
          uint64_t v8 = v4;
          if (v6)
          {
            double v48 = v38 - v41 + v46;
            double v49 = v38 - v46;
            id v50 = v52;
          }
          else
          {
            double v48 = v38 + v46;
            double v49 = v38 + v41 - v46;
            id v50 = v51;
          }
          *id v50 = v48;
          v50[1] = v47;
          v50[2] = v49 - v48;
          long long v50[3] = v34 + v44 * 0.5 - v46 - v47;
          goto LABEL_8;
        }
      }
      uint64_t v8 = v4;
LABEL_8:
      if (v8 == ++v6) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_249FAA920(&v54);
    UICeilToScale();
LABEL_18:
    double v26 = v25;
    objc_msgSend(v10, sel_bounds);
    double v24 = CGRectGetWidth(v60) * -0.5;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_249FACF20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalogClockDialView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AnalogClockDialView()
{
  return self;
}

uint64_t sub_249FACFF4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_249FAD044()
{
  unint64_t result = qword_269750458;
  if (!qword_269750458)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269750458);
  }
  return result;
}

void sub_249FAD084()
{
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer] = 0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers] = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels] = v1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_leftComplicationFrame];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_rightComplicationFrame];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  *((void *)v4 + 4) = 0;
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[40] = 1;

  sub_24A057BC8();
  __break(1u);
}

id sub_249FAD198(void *a1, uint64_t a2, unint64_t a3, int a4, double a5)
{
  LODWORD(v7) = a4;
  uint64_t v129 = *MEMORY[0x263EF8340];
  id v111 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  id v97 = (id)a3;
  objc_msgSend((id)a3, sel_bounds);
  double Width = CGRectGetWidth(v133);
  CGFloat v105 = (const CGPath *)a2;
  uint64_t v11 = sub_249FAFF98((const CGPath *)a2);
  if (*(void *)(v11 + 16))
  {
    uint64_t v12 = *(void *)(v11 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 16);
    if (!v13) {
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v15 = v13 - 1;
    double v16 = 0.0;
    while (1)
    {
      uint64_t v17 = *(void *)(v12 + 8 * v14 + 32);
      uint64_t v18 = *(void *)(v17 + 16);
      switch(v18)
      {
        case 2:
          float64x2_t v22 = vsubq_f64(*(float64x2_t *)(v17 + 48), *(float64x2_t *)(v17 + 32));
          double v21 = sqrt(vaddvq_f64(vmulq_f64(v22, v22)));
          break;
        case 3:
          double v23 = *(double *)(v17 + 32);
          double v24 = *(double *)(v17 + 40);
          double v26 = *(double *)(v17 + 48);
          double v25 = *(double *)(v17 + 56);
          double v27 = *(double *)(v17 + 64);
          double v28 = *(double *)(v17 + 72);
          double v21 = (sqrt((v27 - v26) * (v27 - v26) + (v28 - v25) * (v28 - v25))
               + sqrt((v25 - v24) * (v25 - v24) + (v26 - v23) * (v26 - v23))
               + sqrt((v27 - v23) * (v27 - v23) + (v28 - v24) * (v28 - v24)))
              * 0.5;
          break;
        case 4:
          uint64_t v19 = swift_bridgeObjectRetain();
          sub_249FB014C(v19);
          double v21 = v20;
          swift_bridgeObjectRelease();
          break;
        default:
          double v16 = v16 + 0.0;
          if (v15 == v14) {
            goto LABEL_16;
          }
          goto LABEL_13;
      }
      double v16 = v16 + v21;
      if (v15 == v14) {
        goto LABEL_16;
      }
LABEL_13:
      if (__OFADD__(++v14, 1))
      {
        __break(1u);
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        objc_msgSend(a1, sel_size);
        unsigned __int8 v94 = (const __CTFont *)objc_msgSend(self, sel_systemFontOfSize_, a5);
        CTFontGetCapHeight(v94);
        long long v92 = CTLineCreateWithAttributedString((CFAttributedStringRef)a1);
        CTLineGetGlyphRuns(v92);
        *(void *)&v128[0] = 0;
        type metadata accessor for CTRun(0);
        sub_24A057558();
LABEL_75:
        __break(1u);
      }
    }
  }
LABEL_72:
  __break(1u);
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_24A057BD8();
  swift_bridgeObjectRelease();
  if (v88)
  {
    uint64_t v96 = a2;
    unint64_t v29 = 0;
    unint64_t v103 = a3 & 0xC000000000000001;
    double v95 = (void *)(a3 + 32);
    CGFloat v102 = (void *)*MEMORY[0x263F814F0];
    double v98 = (v5 - (Width + v6)) * 0.5;
    int v101 = v7;
    uint64_t v99 = v88;
    CGFloat v100 = (void *)a3;
    do
    {
      if (v103)
      {
        double v30 = (const __CTRun *)MEMORY[0x24C5B92B0](v29, a3);
        BOOL v31 = __OFADD__(v29, 1);
        unint64_t v32 = v29 + 1;
        if (v31) {
          goto LABEL_70;
        }
      }
      else
      {
        if (v29 >= *(void *)(v96 + 16)) {
          goto LABEL_71;
        }
        double v30 = (const __CTRun *)(id)v95[v29];
        BOOL v31 = __OFADD__(v29, 1);
        unint64_t v32 = v29 + 1;
        if (v31)
        {
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
      }
      double v33 = v30;
      CFDictionaryRef v34 = CTRunGetAttributes(v30);
      *(void *)&long long v123 = v102;
      type metadata accessor for Key(0);
      id v35 = v102;
      CFDictionaryRef v107 = v34;
      id v36 = [(__CFDictionary *)v34 __swift_objectForKeyedSubscript:sub_24A057D58()];
      swift_unknownObjectRelease();
      if (!v36)
      {
        __break(1u);
        goto LABEL_75;
      }
      sub_24A0579B8();
      swift_unknownObjectRelease();
      sub_249F71780(&matrix, &v123);
      type metadata accessor for CTFont(0);
      swift_dynamicCast();
      font = v118;

      rudouble n = v33;
      CFIndex GlyphCount = CTRunGetGlyphCount(v33);
      uint64_t v38 = sub_249FC9E98(GlyphCount, 0.0, 0.0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = (uint64_t)sub_249FBA3E4(0, *(void *)(v38 + 16), 0, (void *)v38);
      }
      v130.locatiodouble n = 0;
      v130.length = GlyphCount;
      CTRunGetPositions(v33, v130, (CGPoint *)(v38 + 32));
      uint64_t v39 = sub_249FC9EB0(GlyphCount, 0.0, 0.0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v39 = (uint64_t)sub_249FBA3D8(0, *(void *)(v39 + 16), 0, (void *)v39);
      }
      v131.locatiodouble n = 0;
      v131.length = GlyphCount;
      CTRunGetAdvances(run, v131, (CGSize *)(v39 + 32));
      int64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        *(void *)&long long v123 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_249FBAE28(0, v40, 0);
        uint64_t v41 = v123;
        unint64_t v42 = *(void *)(v123 + 16);
        uint64_t v43 = 32;
        do
        {
          uint64_t v44 = *(void *)(v39 + v43);
          *(void *)&long long v123 = v41;
          unint64_t v45 = *(void *)(v41 + 24);
          if (v42 >= v45 >> 1)
          {
            sub_249FBAE28(v45 > 1, v42 + 1, 1);
            uint64_t v41 = v123;
          }
          *(void *)(v41 + 16) = v42 + 1;
          *(void *)(v41 + 8 * v42 + 32) = v44;
          v43 += 16;
          ++v42;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = MEMORY[0x263F8EE78];
      }
      a2 = sub_249FC9DAC(0, GlyphCount);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = (uint64_t)sub_249FBA044(0, *(void *)(a2 + 16), 0, (char *)a2);
      }
      v132.locatiodouble n = 0;
      v132.length = GlyphCount;
      uint64_t v114 = a2 + 32;
      CTRunGetGlyphs(run, v132, (CGGlyph *)(a2 + 32));
      uint64_t v127 = 0;
      memset(v126, 0, sizeof(v126));
      CGFloat v117 = (void *)v41;
      if (v7)
      {
        uint64_t v46 = *(void *)(v41 + 16);
        if (v46)
        {
          double v47 = Width + v98 + *(double *)(v41 + 8 * v46 + 24) * 0.5;
          double v48 = (void *)swift_bridgeObjectRetain();
          double v49 = sub_249FB0200(v48, v41, v47);
          swift_bridgeObjectRelease();
          uint64_t v50 = sub_249FADED4(v105, (uint64_t)v49, 1, a5);
          swift_bridgeObjectRelease();
          uint64_t v51 = *(void *)(v50 + 16);
          if (v51)
          {
            sub_249F7B37C(v50 + 40 * v51 - 8, (uint64_t)&v123);
          }
          else
          {
            *(void *)&long long v125 = 0;
            long long v123 = 0u;
            long long v124 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_249F6E790((uint64_t)v126, &qword_269750470);
          sub_249F6E664((uint64_t)&v123, (uint64_t)v126, &qword_269750470);
          uint64_t v41 = (uint64_t)v117;
        }
        double v54 = v98;
        int64x2_t v55 = (void *)v38;
        uint64_t v56 = v41;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269750468);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24A05A510;
        *(double *)(inited + 32) = Width * 0.5 + v98;
        uint64_t v53 = sub_249FADED4(v105, inited, 0, a5);
        swift_setDeallocating();
        if (*(void *)(v53 + 16))
        {
          sub_249F7B37C(v53 + 32, (uint64_t)&v123);
        }
        else
        {
          *(void *)&long long v125 = 0;
          long long v123 = 0u;
          long long v124 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_249F6E790((uint64_t)v126, &qword_269750470);
        sub_249F6E664((uint64_t)&v123, (uint64_t)v126, &qword_269750470);
        double v54 = Width * 0.5 + v98;
        int64x2_t v55 = (void *)v38;
        uint64_t v56 = (uint64_t)v117;
      }
      int64x2_t v57 = sub_249FB0200(v55, v56, v54);
      swift_bridgeObjectRelease();
      uint64_t v110 = sub_249FADED4(v105, (uint64_t)v57, v7 & 1, a5);
      swift_bridgeObjectRelease();
      sub_249F6E6C8((uint64_t)v126, (uint64_t)&v123, &qword_269750470);
      unint64_t v106 = v32;
      if (*((void *)&v124 + 1))
      {
        sub_249F7B5E8(&v123, (uint64_t)&matrix);
        sub_249FB04E0(&matrix, v128, Width, v112);
        long long v123 = v128[0];
        long long v124 = v128[1];
        long long v125 = v128[2];
        objc_msgSend(v97, sel_setAffineTransform_, &v123);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&matrix);
      }
      else
      {
        sub_249F6E790((uint64_t)&v123, &qword_269750470);
      }
      a3 = (unint64_t)v117;
      CGFloat v58 = 0.0;
      double v59 = *(double *)(v110 + 16);
      double v113 = v59;
      uint64_t v115 = a2;
      while (1)
      {
        if (*(void *)&v58 == *(void *)&v59)
        {
          CGFloat v58 = v59;
          memset(&matrix, 0, sizeof(matrix));
        }
        else
        {
          if (*(void *)&v58 >= *(void *)(v110 + 16)) {
            goto LABEL_69;
          }
          sub_249F7B37C(v110 + 32 + 40 * *(void *)&v58, (uint64_t)&v119);
          matrix.a = v58;
          a3 = (unint64_t)v117;
          sub_249F7B5E8(&v119, (uint64_t)&matrix.b);
          ++*(void *)&v58;
        }
        sub_249F6E664((uint64_t)&matrix, (uint64_t)&v123, &qword_269750478);
        if (!(void)v125) {
          break;
        }
        unint64_t v60 = v123;
        sub_249F7B5E8((long long *)((char *)&v123 + 8), (uint64_t)&v118);
        if ((v60 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        if (v60 >= *(void *)(a2 + 16)) {
          goto LABEL_67;
        }
        if (v60 >= *(void *)(a3 + 16)) {
          goto LABEL_68;
        }
        CGGlyph v61 = *(_WORD *)(v114 + 2 * v60);
        double v62 = *(double *)&v117[v60 + 4];
        uint64_t v64 = v120;
        uint64_t v63 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        CGFloat v65 = *(double (**)(uint64_t, uint64_t))(v63 + 56);
        double v66 = v65(v64, v63) * v62 * 0.5;
        uint64_t v68 = v120;
        uint64_t v67 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        double v69 = (*(double (**)(uint64_t, uint64_t))(v67 + 80))(v68, v67) * v62 * 0.5;
        uint64_t v70 = v120;
        uint64_t v71 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        double v72 = v112 * (*(double (**)(uint64_t, uint64_t))(v71 + 80))(v70, v71) * 0.5;
        double v73 = v112 * v65(v64, v63) * 0.5;
        CGFloat v74 = v65(v64, v63);
        uint64_t v75 = v120;
        uint64_t v76 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        CGFloat v77 = (*(double (**)(uint64_t, uint64_t))(v76 + 80))(v75, v76);
        uint64_t v78 = v120;
        uint64_t v7 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        CGFloat v79 = -(*(double (**)(uint64_t, uint64_t))(v7 + 80))(v78, v7);
        double v5 = v65(v64, v63);
        uint64_t v80 = v120;
        uint64_t v81 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        double v6 = (*(double (**)(uint64_t, uint64_t))(v81 + 8))(v80, v81) + v72 - v66;
        uint64_t v82 = v120;
        uint64_t v83 = v121;
        __swift_project_boxed_opaque_existential_1(&v118, v120);
        double v84 = (*(double (**)(uint64_t, uint64_t))(v83 + 32))(v82, v83);
        CGAffineTransformMake(&matrix, v74, v77, v79, v5, v6, v84 - v73 - v69);
        CGPathRef v85 = CTFontCreatePathForGlyph(font, v61, &matrix);
        if (v85)
        {
          CGPathRef v86 = v85;
          id v87 = objc_msgSend(self, sel_bezierPathWithCGPath_, v85);
          objc_msgSend(v111, sel_appendPath_, v87);
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v118);
        a3 = (unint64_t)v117;
        a2 = v115;
        double v59 = v113;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_249F6E790((uint64_t)v126, &qword_269750470);
      swift_bridgeObjectRelease();
      a3 = (unint64_t)v100;
      unint64_t v29 = v106;
      LODWORD(v7) = v101;
    }
    while (v106 != v99);
  }
  swift_bridgeObjectRelease();
  id v89 = objc_msgSend(v111, sel_CGPath);

  return v89;
}

double sub_249FADE04()
{
  return *(double *)v0;
}

double sub_249FADE0C()
{
  return *(double *)(v0 + 8);
}

double sub_249FADE14()
{
  return 0.0;
}

uint64_t getEnumTagSinglePayload for CurvedTextPathProvider(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CurvedTextPathProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CurvedTextPathProvider()
{
  return &type metadata for CurvedTextPathProvider;
}

double sub_249FADEC4()
{
  return *(double *)(v0 + 16);
}

double sub_249FADECC()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_249FADED4(const CGPath *a1, uint64_t a2, char a3, double a4)
{
  uint64_t result = sub_249FAFF98(a1);
  if (!*(void *)(result + 16)) {
    goto LABEL_55;
  }
  uint64_t v8 = *(void *)(result + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v8 + 16);
  if (!v56)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  int64_t v9 = 0;
  unint64_t v10 = 0;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v53 = a2 + 32;
  uint64_t v57 = v11;
  uint64_t v54 = v11 - 1;
  uint64_t v55 = v8 + 32;
  uint64_t v12 = a2 + 40;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  double v14 = 0.0;
  int v50 = a3 & 1;
  uint64_t v51 = v12;
  uint64_t v52 = v8;
  while (v10 < *(void *)(v8 + 16))
  {
    uint64_t v15 = v9;
    uint64_t v16 = *(void *)(v55 + 8 * v10);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17 == 2)
    {
      float64x2_t v21 = vsubq_f64(*(float64x2_t *)(v16 + 48), *(float64x2_t *)(v16 + 32));
      double v22 = sqrt(vaddvq_f64(vmulq_f64(v21, v21)));
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v23 = v57;
      uint64_t v18 = v54;
      goto LABEL_13;
    }
    uint64_t v18 = v54;
    if (v17 == 3)
    {
      uint64_t v24 = swift_bridgeObjectRetain();
      uint64_t result = sub_249FB031C(v24);
LABEL_12:
      double v22 = v20;
      int64_t v23 = v57;
LABEL_13:
      double v25 = v14;
      if (v9 >= v23) {
        goto LABEL_25;
      }
      goto LABEL_16;
    }
    if (v17 == 4)
    {
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t result = sub_249FB014C(v19);
      goto LABEL_12;
    }
    uint64_t result = swift_bridgeObjectRetain();
    double v22 = 0.0;
    double v25 = v14;
    int64_t v23 = v57;
    if (v9 >= v57) {
      goto LABEL_25;
    }
LABEL_16:
    if (v9 >= (unint64_t)v23) {
      goto LABEL_50;
    }
    double v26 = *(double *)(v53 + 8 * v9);
    if (v14 + v26 <= v22)
    {
      uint64_t v27 = v9;
      double v25 = v14;
      while (1)
      {
        double v25 = v25 + v26;
        if (v18 == v27) {
          break;
        }
        int64_t v9 = v27 + 1;
        double v26 = *(double *)(v12 + 8 * v27++);
        if (v25 + v26 > v22) {
          goto LABEL_24;
        }
      }
      int64_t v9 = v57;
LABEL_24:
      int64_t v23 = v57;
      if (v9 < v15)
      {
        __break(1u);
        break;
      }
    }
    else
    {
      double v25 = v14;
    }
LABEL_25:
    uint64_t v28 = v9 - v15;
    if (v9 != v15)
    {
      if (v9 <= v15) {
        goto LABEL_51;
      }
      if (v15 < 0) {
        goto LABEL_52;
      }
      if (v15 >= v23) {
        goto LABEL_53;
      }
      if (v9 > v23) {
        goto LABEL_54;
      }
      unint64_t v29 = sub_249FBA2A0(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v44 = v29[2];
      unint64_t v45 = (double *)(v53 + 8 * v15);
      do
      {
        double v46 = *v45;
        unint64_t v47 = v29[3];
        if (v44 >= v47 >> 1) {
          unint64_t v29 = sub_249FBA2A0((void *)(v47 > 1), v44 + 1, 1, v29);
        }
        void v29[2] = v44 + 1;
        *(double *)&v29[v44 + 4] = v14 + v46;
        double v48 = *v45++;
        double v14 = v14 + v48;
        ++v44;
        --v28;
      }
      while (v28);
LABEL_27:
      sub_249FAE364(v16, (uint64_t)v29, v50, a4);
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(v31 + 16);
      if (v32)
      {
        uint64_t v33 = v31 + 32;
        do
        {
          sub_249F7B37C(v33, (uint64_t)v58);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          CGGlyph v61 = v13;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v13 = sub_249FBA3C4(0, v13[2] + 1, 1, v13);
            CGGlyph v61 = v13;
          }
          unint64_t v36 = v13[2];
          unint64_t v35 = v13[3];
          if (v36 >= v35 >> 1) {
            CGGlyph v61 = sub_249FBA3C4((void *)(v35 > 1), v36 + 1, 1, v13);
          }
          uint64_t v37 = v59;
          uint64_t v38 = v60;
          uint64_t v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
          __n128 v40 = MEMORY[0x270FA5388](v39);
          unint64_t v42 = (char *)&v49 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v43 + 16))(v42, v40);
          sub_249FAFF00(v36, (uint64_t)v42, (uint64_t *)&v61, v37, v38);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
          uint64_t v13 = v61;
          v33 += 40;
          --v32;
        }
        while (v32);
      }
      goto LABEL_4;
    }
    unint64_t v29 = (void *)MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    uint64_t result = swift_bridgeObjectRelease();
    ++v10;
    double v14 = v25 - v22;
    uint64_t v12 = v51;
    uint64_t v8 = v52;
    if (v10 == v56)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

void sub_249FAE364(uint64_t a1, uint64_t a2, char a3, double a4)
{
  double v8 = sub_249FB03A8(a1) * 10.0;
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v9 = (uint64_t)v8;
  if ((uint64_t)v8 >= 1)
  {
    double v10 = (double)((uint64_t)v8 - 1);
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    uint64_t v12 = sub_249FBA2A0(0, 1, 1, MEMORY[0x263F8EE78]);
    uint64_t v13 = 0;
    unint64_t v14 = v12[2];
    do
    {
      unint64_t v15 = v12[3];
      if (v14 >= v15 >> 1) {
        uint64_t v12 = sub_249FBA2A0((void *)(v15 > 1), v14 + 1, 1, v12);
      }
      void v12[2] = v14 + 1;
      *(double *)&v12[v14++ + 4] = (double)v13++ / v10;
    }
    while (v9 != v13);
    uint64_t v16 = sub_249FC9FDC(a1);
    uint64_t v17 = sub_249FAE6FC(v16, (uint64_t)v12, a3 & 1, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v11;
    uint64_t v18 = v17[2];
    if (!v18) {
      goto LABEL_28;
    }
    uint64_t v41 = v17;
    uint64_t v19 = (uint64_t)(v17 + 4);
    sub_249F7B37C((uint64_t)(v17 + 4), (uint64_t)v48);
    unint64_t v20 = 0;
    unint64_t v21 = *(void *)(a2 + 16);
    uint64_t v22 = a2 + 32;
    double v23 = 0.0;
    while (1)
    {
      sub_249F7B37C(v19, (uint64_t)&v45);
      if (v20 == v21)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v45);
LABEL_23:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
        return;
      }
      uint64_t v24 = v49;
      uint64_t v25 = v50;
      double v26 = __swift_project_boxed_opaque_existential_1(v48, v49);
      uint64_t v27 = v46;
      uint64_t v28 = v47;
      unint64_t v29 = __swift_project_boxed_opaque_existential_1(&v45, v46);
      double v30 = sub_249FB03EC((uint64_t)v26, (uint64_t)v29, v24, v27, v25, v28);
      if (v20 >= v21) {
        break;
      }
      double v23 = v23 + v30;
      if (*(double *)(v22 + 8 * v20) > v23)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      }
      else
      {
        sub_249F7B37C((uint64_t)&v45, (uint64_t)v42);
        uint64_t v31 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v31 = sub_249FBA3C4(0, v31[2] + 1, 1, v31);
          uint64_t v51 = v31;
        }
        unint64_t v33 = v31[2];
        unint64_t v32 = v31[3];
        if (v33 >= v32 >> 1) {
          uint64_t v51 = sub_249FBA3C4((void *)(v32 > 1), v33 + 1, 1, v31);
        }
        uint64_t v34 = v43;
        uint64_t v35 = v44;
        uint64_t v36 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, v43);
        __n128 v37 = MEMORY[0x270FA5388](v36);
        uint64_t v39 = &v42[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
        (*(void (**)(unsigned char *, __n128))(v40 + 16))(v39, v37);
        sub_249FAFF00(v33, (uint64_t)v39, (uint64_t *)&v51, v34, v35);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
        ++v20;
      }
      sub_249F7B5E8(&v45, (uint64_t)v48);
      v19 += 40;
      if (!--v18) {
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
}

void *sub_249FAE6FC(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v93 = (void *)MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  switch(v4)
  {
    case 2:
      uint64_t v26 = *(void *)(a2 + 16);
      if (v26)
      {
        uint64_t v27 = (double *)(a2 + 32);
        uint64_t v28 = a1 + 32;
        uint64_t v29 = a1 + 72;
        uint64_t v82 = a2;
        swift_bridgeObjectRetain();
        double v30 = (void *)MEMORY[0x263F8EE78];
        do
        {
          double v31 = *v27;
          sub_249F7B37C(v28, (uint64_t)&v90);
          sub_249F7B37C(v29, (uint64_t)v87);
          unint64_t v32 = v91;
          unint64_t v33 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          double v34 = ((double (*)(ValueMetadata *, _UNKNOWN **))v33[1])(v32, v33);
          uint64_t v35 = v88;
          uint64_t v36 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          double v37 = (*(double (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
          uint64_t v38 = v91;
          uint64_t v39 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          double v40 = ((double (*)(ValueMetadata *, _UNKNOWN **))v39[4])(v38, v39);
          uint64_t v41 = v88;
          uint64_t v42 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          double v43 = (*(double (**)(uint64_t, uint64_t))(v42 + 32))(v41, v42);
          uint64_t v44 = v88;
          uint64_t v45 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          double v46 = (*(double (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
          uint64_t v47 = v91;
          double v48 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          double v49 = v46 - ((double (*)(ValueMetadata *, _UNKNOWN **))v48[1])(v47, v48);
          uint64_t v50 = v88;
          uint64_t v51 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          double v52 = (*(double (**)(uint64_t, uint64_t))(v51 + 32))(v50, v51);
          uint64_t v53 = v91;
          uint64_t v54 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          double v55 = v52 - ((double (*)(ValueMetadata *, _UNKNOWN **))v54[4])(v53, v54);
          double v56 = sqrt(v49 * v49 + v55 * v55);
          double v57 = 0.0;
          double v58 = 0.0;
          if (v56 > 0.0)
          {
            double v57 = v49 / v56;
            double v58 = v55 / v56;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v30 = sub_249FBA3C4(0, v30[2] + 1, 1, v30);
          }
          unint64_t v60 = v30[2];
          unint64_t v59 = v30[3];
          if (v60 >= v59 >> 1) {
            double v30 = sub_249FBA3C4((void *)(v59 > 1), v60 + 1, 1, v30);
          }
          unint64_t v91 = &type metadata for SamplePoint;
          long long v92 = &off_26FDE8528;
          uint64_t v61 = swift_allocObject();
          *(void *)&long long v90 = v61;
          *(double *)(v61 + 16) = (1.0 - v31) * v34 + v31 * v37;
          *(double *)(v61 + 24) = (1.0 - v31) * v40 + v31 * v43;
          *(double *)(v61 + 32) = v57;
          *(double *)(v61 + 40) = v58;
          *(void *)(v61 + 48) = 0;
          _OWORD v30[2] = v60 + 1;
          sub_249F7B5E8(&v90, (uint64_t)&v30[5 * v60 + 4]);
          uint64_t v93 = v30;
          ++v27;
          --v26;
        }
        while (v26);
        goto LABEL_29;
      }
      break;
    case 3:
      uint64_t v62 = *(void *)(a2 + 16);
      if (v62)
      {
        uint64_t v63 = (double *)(a2 + 32);
        uint64_t v85 = a1 + 32;
        uint64_t v64 = a1 + 72;
        uint64_t v65 = a1 + 112;
        uint64_t v82 = a2;
        swift_bridgeObjectRetain();
        long long v86 = xmmword_24A0593D0;
        do
        {
          double v66 = *v63;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269750480);
          uint64_t v67 = swift_allocObject();
          *(_OWORD *)(v67 + 16) = v86;
          sub_249F7B37C(v85, v67 + 32);
          sub_249F7B37C(v64, v67 + 72);
          uint64_t v68 = swift_allocObject();
          *(_OWORD *)(v68 + 16) = v86;
          sub_249F7B37C(v64, v68 + 32);
          sub_249F7B37C(v65, v68 + 72);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269750488);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v86;
          *(void *)(inited + 32) = v67;
          *(void *)(inited + 40) = v68;
          sub_249FAF908(inited, a3 & 1, (uint64_t)&v90, v66, a4);
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269750490);
          swift_arrayDestroy();
          sub_249F7B37C((uint64_t)&v90, (uint64_t)v87);
          uint64_t v70 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v70 = sub_249FBA3C4(0, v70[2] + 1, 1, v70);
            uint64_t v93 = v70;
          }
          unint64_t v72 = v70[2];
          unint64_t v71 = v70[3];
          if (v72 >= v71 >> 1) {
            uint64_t v93 = sub_249FBA3C4((void *)(v71 > 1), v72 + 1, 1, v70);
          }
          uint64_t v73 = v88;
          uint64_t v74 = v89;
          uint64_t v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
          __n128 v76 = MEMORY[0x270FA5388](v75);
          uint64_t v78 = (char *)&v81 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v79 + 16))(v78, v76);
          sub_249FAFF00(v72, (uint64_t)v78, (uint64_t *)&v93, v73, v74);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          ++v63;
          --v62;
        }
        while (v62);
        goto LABEL_29;
      }
      break;
    case 4:
      uint64_t v7 = *(void *)(a2 + 16);
      if (v7)
      {
        double v8 = (double *)(a2 + 32);
        uint64_t v85 = a1 + 32;
        uint64_t v9 = a1 + 72;
        uint64_t v10 = a1 + 112;
        uint64_t v84 = a1 + 152;
        uint64_t v82 = a2;
        swift_bridgeObjectRetain();
        long long v86 = xmmword_24A0593D0;
        long long v83 = xmmword_24A05C840;
        do
        {
          double v11 = *v8;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269750480);
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = v86;
          sub_249F7B37C(v85, v12 + 32);
          sub_249F7B37C(v9, v12 + 72);
          uint64_t v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = v86;
          sub_249F7B37C(v9, v13 + 32);
          sub_249F7B37C(v10, v13 + 72);
          uint64_t v14 = swift_allocObject();
          *(_OWORD *)(v14 + 16) = v86;
          sub_249F7B37C(v10, v14 + 32);
          sub_249F7B37C(v84, v14 + 72);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269750488);
          uint64_t v15 = swift_initStackObject();
          *(_OWORD *)(v15 + 16) = v83;
          *(void *)(v15 + 32) = v12;
          *(void *)(v15 + 40) = v13;
          *(void *)(v15 + 48) = v14;
          sub_249FAF908(v15, a3 & 1, (uint64_t)&v90, v11, a4);
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269750490);
          swift_arrayDestroy();
          sub_249F7B37C((uint64_t)&v90, (uint64_t)v87);
          uint64_t v16 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v16 = sub_249FBA3C4(0, v16[2] + 1, 1, v16);
            uint64_t v93 = v16;
          }
          unint64_t v18 = v16[2];
          unint64_t v17 = v16[3];
          if (v18 >= v17 >> 1) {
            uint64_t v93 = sub_249FBA3C4((void *)(v17 > 1), v18 + 1, 1, v16);
          }
          uint64_t v19 = v88;
          uint64_t v20 = v89;
          uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
          __n128 v22 = MEMORY[0x270FA5388](v21);
          uint64_t v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v25 + 16))(v24, v22);
          sub_249FAFF00(v18, (uint64_t)v24, (uint64_t *)&v93, v19, v20);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          ++v8;
          --v7;
        }
        while (v7);
LABEL_29:
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v93;
}

unint64_t sub_249FAEFEC(unint64_t result, unsigned int *a2)
{
  if (!result) {
    return result;
  }
  unint64_t v2 = result;
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)*((void *)a2 + 1);
  switch((int)v3)
  {
    case 0:
      int v5 = (void *)*v4;
      uint64_t v6 = v4[1];
      type metadata accessor for CGPoint(0);
      uint64_t v69 = v7;
      CGFloat v66 = *(double *)&v5;
      uint64_t v67 = v6;
      uint64_t result = sub_249FEF578((uint64_t)&v66, 0x50746E6572727563, 0xEC000000746E696FLL);
      uint64_t v8 = *(void *)v2;
      if (*(void *)(*(void *)v2 + 16))
      {
        uint64_t result = sub_24A0152F0(0x7368746170627573, 0xE800000000000000);
        if (v9)
        {
          sub_249F6E6C8(*(void *)(v8 + 56) + 32 * result, (uint64_t)v65, &qword_2697504A8);
          sub_249F6E664((uint64_t)v65, (uint64_t)&v66, &qword_2697504A8);
          if (!v69) {
            return sub_249F6E790((uint64_t)&v66, &qword_2697504A8);
          }
          uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697504A0);
          uint64_t result = swift_dynamicCast();
          if (result)
          {
            CGFloat x = v64.x;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_86;
            }
            goto LABEL_8;
          }
        }
      }
      return result;
    case 2:
      uint64_t v3 = 2;
      goto LABEL_14;
    case 3:
      goto LABEL_14;
    case 4:
      uint64_t v21 = *(void *)result;
      if (!*(void *)(*(void *)result + 16)) {
        return result;
      }
      uint64_t result = sub_24A0152F0(0x7368746170627573, 0xE800000000000000);
      if ((v22 & 1) == 0) {
        return result;
      }
      uint64_t v23 = *(void *)(v21 + 56) + 32 * result;
      uint64_t v24 = &qword_2697504A8;
      sub_249F6E6C8(v23, (uint64_t)v65, &qword_2697504A8);
      sub_249F6E664((uint64_t)v65, (uint64_t)&v66, &qword_2697504A8);
      if (!v69) {
        return sub_249F6E790((uint64_t)&v66, &qword_2697504A8);
      }
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697504A0);
      uint64_t v26 = (void *)MEMORY[0x263F8EE58];
      uint64_t result = swift_dynamicCast();
      if ((result & 1) == 0) {
        return result;
      }
      CGFloat v27 = v64.x;
      uint64_t v28 = *(void *)(*(void *)&v64.x + 16);
      if (!v28) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v29 = *(void *)(*(void *)&v64.x + 8 * v28 + 24);
      if (!*(void *)(v29 + 16))
      {
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v62 = *(void *)(*(void *)&v64.x + 16);
          if (v62)
          {
LABEL_79:
            *(void *)(*(void *)&v27 + 16) = v62 - 1;
            swift_bridgeObjectRelease();
LABEL_80:
            uint64_t v69 = v25;
            CGFloat v66 = v27;
            goto LABEL_11;
          }
        }
        else
        {
          CGFloat v27 = COERCE_DOUBLE(sub_249F9A730(*(void **)&v64.x));
          uint64_t v62 = *(void *)(*(void *)&v27 + 16);
          if (v62) {
            goto LABEL_79;
          }
        }
        __break(1u);
        goto LABEL_89;
      }
      double v30 = *(double **)(v29 + 32);
      if (*((void *)v30 + 2))
      {
        uint64_t v31 = *(void *)v2;
        if (*(void *)(*(void *)v2 + 16))
        {
          CGFloat v32 = v30[4];
          CGFloat v33 = v30[5];
          unint64_t v34 = sub_24A0152F0(0x50746E6572727563, 0xEC000000746E696FLL);
          if (v35)
          {
            sub_249F6E6C8(*(void *)(v31 + 56) + 32 * v34, (uint64_t)v65, &qword_2697504A8);
            sub_249F6E664((uint64_t)v65, (uint64_t)&v66, &qword_2697504A8);
            if (v69)
            {
              type metadata accessor for CGPoint(0);
              if (swift_dynamicCast())
              {
                v70.CGFloat x = v32;
                v70.CGFloat y = v33;
                if (!CGPointEqualToPoint(v64, v70))
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2697504B0);
                  uint64_t v24 = (uint64_t *)swift_allocObject();
                  *((_OWORD *)v24 + 1) = xmmword_24A0593D0;
                  *((CGPoint *)v24 + 2) = v64;
                  *((CGFloat *)v24 + 6) = v32;
                  *((CGFloat *)v24 + 7) = v33;
                  if (*(void *)(*(void *)&v64.x + 16))
                  {
                    if (swift_isUniquelyReferenced_nonNull_native())
                    {
                      uint64_t v36 = *(void *)(*(void *)&v64.x + 16);
                      if (v36) {
                        goto LABEL_36;
                      }
                      goto LABEL_90;
                    }
LABEL_89:
                    CGFloat v27 = COERCE_DOUBLE(sub_249F9A730(*(void **)&v27));
                    uint64_t v36 = *(void *)(*(void *)&v27 + 16);
                    if (v36)
                    {
LABEL_36:
                      uint64_t v37 = v36 - 1;
                      uint64_t v26 = *(void **)(*(void *)&v27 + 8 * v37 + 32);
                      *(void *)(*(void *)&v27 + 16) = v37;
                      if (swift_isUniquelyReferenced_nonNull_native())
                      {
LABEL_37:
                        unint64_t v39 = v26[2];
                        unint64_t v38 = v26[3];
                        if (v39 >= v38 >> 1) {
                          uint64_t v26 = sub_249FBA60C((void *)(v38 > 1), v39 + 1, 1, v26);
                        }
                        v26[2] = v39 + 1;
                        v26[v39 + 4] = v24;
                        unint64_t v41 = *(void *)(*(void *)&v27 + 16);
                        unint64_t v40 = *(void *)(*(void *)&v27 + 24);
                        if (v41 >= v40 >> 1) {
                          CGFloat v27 = COERCE_DOUBLE(sub_249FBA73C((void *)(v40 > 1), v41 + 1, 1, *(void **)&v27));
                        }
                        *(void *)(*(void *)&v27 + 16) = v41 + 1;
                        *(void *)(*(void *)&v27 + 8 * v41 + 32) = v26;
                        goto LABEL_80;
                      }
LABEL_91:
                      uint64_t v26 = sub_249FBA60C(0, v26[2] + 1, 1, v26);
                      goto LABEL_37;
                    }
LABEL_90:
                    __break(1u);
                    goto LABEL_91;
                  }
                  swift_bridgeObjectRelease();
                }
              }
            }
            else
            {
              sub_249F6E790((uint64_t)&v66, &qword_2697504A8);
            }
          }
        }
      }
      return swift_bridgeObjectRelease();
    default:
      uint64_t v3 = v3 == 1;
LABEL_14:
      uint64_t v16 = *(void *)result;
      if (!*(void *)(*(void *)result + 16)) {
        goto LABEL_43;
      }
      unint64_t v17 = sub_24A0152F0(0x50746E6572727563, 0xEC000000746E696FLL);
      if ((v18 & 1) == 0) {
        goto LABEL_43;
      }
      sub_249F6E6C8(*(void *)(v16 + 56) + 32 * v17, (uint64_t)v65, &qword_2697504A8);
      sub_249F6E664((uint64_t)v65, (uint64_t)&v66, &qword_2697504A8);
      if (v69)
      {
        type metadata accessor for CGPoint(0);
        if (swift_dynamicCast())
        {
          CGFloat x = COERCE_DOUBLE(sub_249FBA3E4(0, 1, 1, MEMORY[0x263F8EE78]));
          unint64_t v20 = *(void *)(*(void *)&x + 16);
          unint64_t v19 = *(void *)(*(void *)&x + 24);
          if (v20 >= v19 >> 1) {
            CGFloat x = COERCE_DOUBLE(sub_249FBA3E4((void *)(v19 > 1), v20 + 1, 1, *(void **)&x));
          }
          *(void *)(*(void *)&x + 16) = v20 + 1;
          *(CGPoint *)(*(void *)&x + 16 * v20 + 32) = v64;
LABEL_44:
          if (v3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              CGFloat x = COERCE_DOUBLE(sub_249FBA3E4(0, *(void *)(*(void *)&x + 16) + 1, 1, *(void **)&x));
            }
            unint64_t v42 = *(void *)(*(void *)&x + 16);
            do
            {
              long long v43 = *(_OWORD *)v4;
              unint64_t v44 = *(void *)(*(void *)&x + 24);
              if (v42 >= v44 >> 1)
              {
                long long v63 = *(_OWORD *)v4;
                double v45 = COERCE_DOUBLE(sub_249FBA3E4((void *)(v44 > 1), v42 + 1, 1, *(void **)&x));
                long long v43 = v63;
                CGFloat x = v45;
              }
              *(void *)(*(void *)&x + 16) = v42 + 1;
              *(_OWORD *)(*(void *)&x + 16 * v42 + 32) = v43;
              v4 += 2;
              ++v42;
              --v3;
            }
            while (v3);
          }
          uint64_t v46 = *(void *)v2;
          if (*(void *)(*(void *)v2 + 16))
          {
            unint64_t v47 = sub_24A0152F0(0x7368746170627573, 0xE800000000000000);
            if (v48)
            {
              sub_249F6E6C8(*(void *)(v46 + 56) + 32 * v47, (uint64_t)v65, &qword_2697504A8);
              sub_249F6E664((uint64_t)v65, (uint64_t)&v66, &qword_2697504A8);
              if (v69)
              {
                uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697504A0);
                if (swift_dynamicCast())
                {
                  CGFloat v49 = v64.x;
                  if (!*(void *)(*(void *)&v64.x + 16))
                  {
                    double v52 = (void *)MEMORY[0x263F8EE78];
LABEL_64:
                    swift_bridgeObjectRetain();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      double v52 = sub_249FBA60C(0, v52[2] + 1, 1, v52);
                    }
                    unint64_t v59 = v52[2];
                    unint64_t v58 = v52[3];
                    if (v59 >= v58 >> 1) {
                      double v52 = sub_249FBA60C((void *)(v58 > 1), v59 + 1, 1, v52);
                    }
                    void v52[2] = v59 + 1;
                    *(CGFloat *)&v52[v59 + 4] = x;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      CGFloat v49 = COERCE_DOUBLE(sub_249FBA73C(0, *(void *)(*(void *)&v49 + 16) + 1, 1, *(void **)&v49));
                    }
                    unint64_t v61 = *(void *)(*(void *)&v49 + 16);
                    unint64_t v60 = *(void *)(*(void *)&v49 + 24);
                    if (v61 >= v60 >> 1) {
                      CGFloat v49 = COERCE_DOUBLE(sub_249FBA73C((void *)(v60 > 1), v61 + 1, 1, *(void **)&v49));
                    }
                    *(void *)(*(void *)&v49 + 16) = v61 + 1;
                    *(void *)(*(void *)&v49 + 8 * v61 + 32) = v52;
                    uint64_t v69 = v10;
                    CGFloat v66 = v49;
                    sub_249FEF578((uint64_t)&v66, 0x7368746170627573, 0xE800000000000000);
                    uint64_t v53 = *(void *)(*(void *)&x + 16);
                    if (!v53) {
                      goto LABEL_73;
                    }
                    goto LABEL_61;
                  }
                  if (swift_isUniquelyReferenced_nonNull_native())
                  {
                    uint64_t v50 = *(void *)(*(void *)&v64.x + 16);
                    if (v50)
                    {
LABEL_58:
                      uint64_t v51 = v50 - 1;
                      double v52 = *(void **)(*(void *)&v49 + 8 * v51 + 32);
                      *(void *)(*(void *)&v49 + 16) = v51;
                      goto LABEL_64;
                    }
                  }
                  else
                  {
                    CGFloat v49 = COERCE_DOUBLE(sub_249F9A730(*(void **)&v64.x));
                    uint64_t v50 = *(void *)(*(void *)&v49 + 16);
                    if (v50) {
                      goto LABEL_58;
                    }
                  }
                  __break(1u);
LABEL_86:
                  CGFloat x = COERCE_DOUBLE(sub_249FBA73C(0, *(void *)(*(void *)&x + 16) + 1, 1, *(void **)&x));
LABEL_8:
                  unint64_t v13 = *(void *)(*(void *)&x + 16);
                  unint64_t v12 = *(void *)(*(void *)&x + 24);
                  if (v13 >= v12 >> 1) {
                    CGFloat x = COERCE_DOUBLE(sub_249FBA73C((void *)(v12 > 1), v13 + 1, 1, *(void **)&x));
                  }
                  *(void *)(*(void *)&x + 16) = v13 + 1;
                  *(void *)(*(void *)&x + 8 * v13 + 32) = MEMORY[0x263F8EE78];
                  uint64_t v69 = v10;
                  CGFloat v66 = x;
LABEL_11:
                  uint64_t v14 = 0x7368746170627573;
                  uint64_t v15 = 0xE800000000000000;
                  return sub_249FEF578((uint64_t)&v66, v14, v15);
                }
              }
              else
              {
                sub_249F6E790((uint64_t)&v66, &qword_2697504A8);
              }
            }
          }
          uint64_t v53 = *(void *)(*(void *)&x + 16);
          if (!v53)
          {
LABEL_73:
            swift_bridgeObjectRelease();
            CGFloat v66 = 0.0;
            uint64_t v67 = 0;
            uint64_t v68 = 0;
            uint64_t v69 = 1;
            goto LABEL_74;
          }
LABEL_61:
          uint64_t v54 = (void *)(*(void *)&x + 16 * v53);
          double v55 = (void *)v54[2];
          uint64_t v56 = v54[3];
          swift_bridgeObjectRelease();
          type metadata accessor for CGPoint(0);
          uint64_t v69 = v57;
          CGFloat v66 = *(double *)&v55;
          uint64_t v67 = v56;
LABEL_74:
          uint64_t v14 = 0x50746E6572727563;
          uint64_t v15 = 0xEC000000746E696FLL;
          return sub_249FEF578((uint64_t)&v66, v14, v15);
        }
      }
      else
      {
        sub_249F6E790((uint64_t)&v66, &qword_2697504A8);
      }
LABEL_43:
      CGFloat x = MEMORY[0x263F8EE78];
      goto LABEL_44;
  }
}

uint64_t sub_249FAF908@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  int v65 = a2;
  uint64_t v66 = a3;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  uint64_t v77 = (void *)MEMORY[0x263F8EE78];
  type metadata accessor for CGPoint(0);
  uint64_t v75 = v9;
  __n128 v76 = &off_26FDE8388;
  long long v74 = 0uLL;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    double v64 = a5;
    *(double *)&long long v67 = 1.0 - a4;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = *(void *)(a1 + 8 * v12 + 32);
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14) {
        break;
      }
      uint64_t result = sub_249F7B37C(v13 + 32, (uint64_t)&v71);
      if (v14 == 1) {
        goto LABEL_24;
      }
      sub_249F7B37C(v13 + 72, (uint64_t)v68);
      uint64_t v16 = v72;
      uint64_t v15 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      unint64_t v17 = (double (*)(ValueMetadata *, _UNKNOWN **))v15[1];
      swift_bridgeObjectRetain();
      double v18 = v17(v16, v15);
      uint64_t v19 = v69;
      uint64_t v20 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      double v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      char v22 = v72;
      uint64_t v23 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      double v24 = ((double (*)(ValueMetadata *, _UNKNOWN **))v23[4])(v22, v23);
      uint64_t v25 = v69;
      uint64_t v26 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      double v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 32))(v25, v26);
      uint64_t v28 = v69;
      uint64_t v29 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      double v30 = (*(double (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      uint64_t v31 = v72;
      CGFloat v32 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      double v33 = v30 - ((double (*)(ValueMetadata *, _UNKNOWN **))v32[1])(v31, v32);
      uint64_t v34 = v69;
      uint64_t v35 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      double v36 = (*(double (**)(uint64_t, uint64_t))(v35 + 32))(v34, v35);
      uint64_t v37 = v72;
      unint64_t v38 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      double v39 = v36 - ((double (*)(ValueMetadata *, _UNKNOWN **))v38[4])(v37, v38);
      double v40 = sqrt(v33 * v33 + v39 * v39);
      double v41 = 0.0;
      double v42 = 0.0;
      if (v40 > 0.0)
      {
        double v41 = v33 / v40;
        double v42 = v39 / v40;
      }
      double v43 = *(double *)&v67 * v18 + v21 * a4;
      double v44 = *(double *)&v67 * v24 + v27 * a4;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      swift_bridgeObjectRelease();
      unint64_t v72 = &type metadata for SamplePoint;
      uint64_t v73 = &off_26FDE8528;
      uint64_t v45 = swift_allocObject();
      *(void *)&long long v71 = v45;
      *(double *)(v45 + 16) = v43;
      *(double *)(v45 + 24) = v44;
      *(double *)(v45 + 32) = v41;
      *(double *)(v45 + 40) = v42;
      *(void *)(v45 + 48) = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
      sub_249F7B5E8(&v71, (uint64_t)&v74);
      sub_249F7B37C((uint64_t)&v74, (uint64_t)&v71);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v8 = sub_249FBA3C4(0, v8[2] + 1, 1, v8);
        uint64_t v77 = v8;
      }
      unint64_t v47 = v8[2];
      unint64_t v46 = v8[3];
      if (v47 >= v46 >> 1) {
        uint64_t v77 = sub_249FBA3C4((void *)(v46 > 1), v47 + 1, 1, v8);
      }
      ++v12;
      char v48 = v72;
      uint64_t v49 = (uint64_t)v73;
      uint64_t v50 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v71, (uint64_t)v72);
      __n128 v51 = MEMORY[0x270FA5388](v50);
      uint64_t v53 = (char *)&v63 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v54 + 16))(v53, v51);
      sub_249FAFF00(v47, (uint64_t)v53, (uint64_t *)&v77, (uint64_t)v48, v49);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      uint64_t v8 = v77;
      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v66;
        a5 = v64;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    uint64_t v55 = v66;
LABEL_14:
    unint64_t v56 = v8[2];
    if (v56 >= 2)
    {
      unint64_t v57 = v56 - 1;
      uint64_t v58 = (uint64_t)(v8 + 9);
      unint64_t v59 = (void *)MEMORY[0x263F8EE78];
      long long v67 = xmmword_24A0593D0;
      do
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269750480);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = v67;
        sub_249F7B37C(v58 - 40, v60 + 32);
        sub_249F7B37C(v58, v60 + 72);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v59 = sub_249FBA3B0(0, v59[2] + 1, 1, v59);
        }
        unint64_t v62 = v59[2];
        unint64_t v61 = v59[3];
        if (v62 >= v61 >> 1) {
          unint64_t v59 = sub_249FBA3B0((void *)(v61 > 1), v62 + 1, 1, v59);
        }
        v59[2] = v62 + 1;
        v59[v62 + 4] = v60;
        v58 += 40;
        --v57;
      }
      while (v57);
      sub_249FAF908(&v71, v59, v65 & 1, a4, a5);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
      sub_249F7B5E8(&v71, (uint64_t)&v74);
    }
    sub_249F7B5E8(&v74, v55);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249FAFF00(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_249F7B5E8(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_249FAFF98(const CGPath *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A0593D0;
  strcpy((char *)(inited + 32), "currentPoint");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_OWORD *)(inited + 48) = 0u;
  *(_OWORD *)(inited + 64) = 0u;
  *(void *)(inited + 80) = 0x7368746170627573;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_2697504A0);
  *(void *)(inited + 96) = MEMORY[0x263F8EE78];
  unint64_t info = sub_24A012E28(inited);
  CGPathApply(a1, &info, (CGPathApplierFunction)sub_249FAF904);
  unint64_t v3 = info;
  if (!*(void *)(info + 16)) {
    goto LABEL_7;
  }
  unint64_t v4 = sub_24A0152F0(0x7368746170627573, 0xE800000000000000);
  if ((v5 & 1) == 0) {
    goto LABEL_7;
  }
  sub_249F6E6C8(*(void *)(v3 + 56) + 32 * v4, (uint64_t)v10, &qword_2697504A8);
  sub_249F6E664((uint64_t)v10, (uint64_t)v11, &qword_2697504A8);
  if (!v12)
  {
    sub_249F6E790((uint64_t)v11, &qword_2697504A8);
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    uint64_t v6 = MEMORY[0x263F8EE78];
    goto LABEL_8;
  }
  uint64_t v6 = v8;
LABEL_8:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_249FB014C(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 == 3) {
LABEL_9:
  }
    __break(1u);
  return result;
}

void *sub_249FB0200(void *result, uint64_t a2, double a3)
{
  unint64_t v3 = result[2];
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (v3 <= *(void *)(a2 + 16))
  {
    char v5 = (double *)(result + 4);
    uint64_t v6 = (double *)(a2 + 32);
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    double v8 = 0.0;
    do
    {
      double v9 = *v5;
      double v10 = *v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_249FBA2A0(0, v7[2] + 1, 1, v7);
      }
      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1) {
        uint64_t v7 = sub_249FBA2A0((void *)(v11 > 1), v12 + 1, 1, v7);
      }
      v7[2] = v12 + 1;
      *(double *)&v7[v12 + 4] = v9 + a3 + v10 * 0.5 - v8;
      ++v6;
      v5 += 2;
      double v8 = v9 + a3 + v10 * 0.5;
      --v3;
    }
    while (v3);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FB031C(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 3) {
LABEL_7:
  }
    __break(1u);
  return result;
}

double sub_249FB03A8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  switch(v1)
  {
    case 2:
      float64x2_t v3 = vsubq_f64(*(float64x2_t *)(result + 48), *(float64x2_t *)(result + 32));
      return sqrt(vaddvq_f64(vmulq_f64(v3, v3)));
    case 3:
      sub_249FB031C(result);
      break;
    case 4:
      sub_249FB014C(result);
      break;
    default:
      return 0.0;
  }
  return v2;
}

double sub_249FB03EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v10 = (*(double (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  double v11 = v10 - (*(double (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  double v12 = (*(double (**)(uint64_t, uint64_t))(a6 + 32))(a4, a6);
  double v13 = (*(double (**)(uint64_t, uint64_t))(a5 + 32))(a3, a5);
  return sqrt(v11 * v11 + (v12 - v13) * (v12 - v13));
}

CGFloat sub_249FB04E0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  double v10 = *(double (**)(uint64_t, uint64_t))(v9 + 56);
  double v11 = v10(v8, v9) * a3 * 0.5;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  double v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 80))(v12, v13) * a3 * 0.5;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  double v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 80))(v15, v16) * a4 * 0.5;
  double v18 = v10(v8, v9) * a4 * 0.5;
  CGFloat v19 = v10(v8, v9);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  CGFloat v22 = (*(double (**)(uint64_t, uint64_t))(v21 + 80))(v20, v21);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  CGFloat v25 = -(*(double (**)(uint64_t, uint64_t))(v24 + 80))(v23, v24);
  CGFloat v26 = v10(v8, v9);
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  CGFloat v29 = (*(double (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28) + v17 - v11;
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  double v32 = (*(double (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  CGAffineTransformMake(&v36, v19, v22, v25, v26, v29, v32 - v18 - v14);
  CGFloat result = v36.a;
  long long v34 = *(_OWORD *)&v36.c;
  long long v35 = *(_OWORD *)&v36.tx;
  *a2 = *(_OWORD *)&v36.a;
  a2[1] = v34;
  a2[2] = v35;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_249FB07A8()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

ValueMetadata *type metadata accessor for SamplePoint()
{
  return &type metadata for SamplePoint;
}

uint64_t sub_249FB07C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_249FB07DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_249FB07F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_249FB0804(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PerlinNoiseGenerator(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 28)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PerlinNoiseGenerator(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 28) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PerlinNoiseGenerator()
{
  return &type metadata for PerlinNoiseGenerator;
}

uint64_t sub_249FB088C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697520A0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24A05A510;
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = MEMORY[0x263F8D5B8];
  *(void *)(v1 + 56) = MEMORY[0x263F8D538];
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 32) = v2;
  sub_24A0573B8();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  noise2();
  float v5 = v0[5];
  float v6 = -v5;
  if (v5 < fabsf(v4))
  {
    if (v4 < v6) {
      float v4 = -v5;
    }
    if (v4 >= v5) {
      float v4 = v0[5];
    }
  }
  float v7 = v0[3];
  float v8 = v0[4] - v7;
  float v9 = v0[6];
  fmodf(v7 + (float)((float)(1.0 - (float)((float)(v5 - v4) / (float)(v5 + v5))) * v8), v9);
  sub_24A057438();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A05A510;
  noise2();
  if (v5 < fabsf(v11))
  {
    if (v11 < v6) {
      float v11 = -v5;
    }
    if (v11 >= v5) {
      float v11 = v5;
    }
  }
  float v12 = fmodf(v7 + (float)(v8 * (float)(1.0 - (float)((float)(v5 - v11) / (float)(v5 + v5)))), v9);
  uint64_t v13 = MEMORY[0x263F8D648];
  *(void *)(v10 + 56) = MEMORY[0x263F8D5C8];
  *(void *)(v10 + 64) = v13;
  *(float *)(v10 + 32) = v12;
  sub_24A0573B8();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  swift_bridgeObjectRetain();
  sub_24A057438();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x28326573696F6E70;
}

BOOL sub_249FB0B40(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + 8), *(float32x4_t *)(a2 + 8))), 0xFuLL))) & 1) != 0&& *(double *)a1 == *(double *)a2)
  {
    return *(float *)(a1 + 24) == *(float *)(a2 + 24);
  }
  return result;
}

unint64_t sub_249FB0B94(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_249FB0BC4();
  unint64_t result = sub_249FB0C18();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_249FB0BC4()
{
  unint64_t result = qword_2697504B8;
  if (!qword_2697504B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697504B8);
  }
  return result;
}

unint64_t sub_249FB0C18()
{
  unint64_t result = qword_2697504C0;
  if (!qword_2697504C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697504C0);
  }
  return result;
}

CTFontRef sub_249FB0C6C()
{
  CTFontRef result = sub_249F714C8(400.0, 3, 0x4055400000000000, 0);
  qword_269752370 = (uint64_t)result;
  return result;
}

id sub_249FB0CA4()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F15808]);
  LODWORD(v1) = 1051260355;
  LODWORD(v2) = 1059816735;
  LODWORD(v3) = 1.0;
  id result = objc_msgSend(v0, sel_initWithControlPoints__::, v1, 0.0, v2, v3);
  qword_269752378 = (uint64_t)result;
  return result;
}

void sub_249FB0CF8()
{
  id v0 = objc_msgSend(self, sel_systemFontOfSize_weight_, 22.0, *MEMORY[0x263F81840]);
  id v1 = objc_msgSend(v0, sel_fontDescriptor);

  double v2 = (const __CTFontDescriptor *)objc_msgSend(v1, sel_fontDescriptorWithDesign_, *MEMORY[0x263F81788]);
  if (!v2) {
    double v2 = (const __CTFontDescriptor *)v1;
  }
  CTFontRef v3 = CTFontCreateWithFontDescriptor(v2, 0.0, 0);

  qword_269752380 = (uint64_t)v3;
}

unint64_t sub_249FB0DC4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697504D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A05A510;
  id v1 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v2 = qword_26974F2E0;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  float v4 = (void *)qword_269752380;
  *(void *)(inited + 40) = qword_269752380;
  id v5 = v4;
  unint64_t result = sub_24A012D1C(inited);
  qword_269752388 = result;
  return result;
}

unint64_t sub_249FB0E70()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697504C8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A05C9A0;
  *(void *)(v0 + 32) = 48;
  *(void *)(v0 + 40) = 0xE100000000000000;
  sub_249FB17D8(48, 0xE100000000000000);
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  CGMutablePathRef v9 = sub_249FB1944(48, 0xE100000000000000);
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = v6;
  *(void *)(v0 + 72) = v8;
  *(void *)(v0 + 80) = v9;
  *(void *)(v0 + 88) = 49;
  *(void *)(v0 + 96) = 0xE100000000000000;
  sub_249FB17D8(49, 0xE100000000000000);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  CGMutablePathRef v18 = sub_249FB1944(49, 0xE100000000000000);
  *(void *)(v0 + 104) = v11;
  *(void *)(v0 + 112) = v13;
  *(void *)(v0 + 120) = v15;
  *(void *)(v0 + 128) = v17;
  *(void *)(v0 + 136) = v18;
  *(void *)(v0 + 144) = 50;
  *(void *)(v0 + 152) = 0xE100000000000000;
  sub_249FB17D8(50, 0xE100000000000000);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  CGMutablePathRef v27 = sub_249FB1944(50, 0xE100000000000000);
  *(void *)(v0 + 160) = v20;
  *(void *)(v0 + 168) = v22;
  *(void *)(v0 + 176) = v24;
  *(void *)(v0 + 184) = v26;
  *(void *)(v0 + 192) = v27;
  *(void *)(v0 + 200) = 51;
  *(void *)(v0 + 208) = 0xE100000000000000;
  sub_249FB17D8(51, 0xE100000000000000);
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  CGMutablePathRef v36 = sub_249FB1944(51, 0xE100000000000000);
  *(void *)(v0 + 216) = v29;
  *(void *)(v0 + 224) = v31;
  *(void *)(v0 + 232) = v33;
  *(void *)(v0 + 240) = v35;
  *(void *)(v0 + 248) = v36;
  *(void *)(v0 + 256) = 52;
  *(void *)(v0 + 264) = 0xE100000000000000;
  sub_249FB17D8(52, 0xE100000000000000);
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  CGMutablePathRef v45 = sub_249FB1944(52, 0xE100000000000000);
  *(void *)(v0 + 272) = v38;
  *(void *)(v0 + 280) = v40;
  *(void *)(v0 + 288) = v42;
  *(void *)(v0 + 296) = v44;
  *(void *)(v0 + 304) = v45;
  *(void *)(v0 + 312) = 53;
  *(void *)(v0 + 320) = 0xE100000000000000;
  sub_249FB17D8(53, 0xE100000000000000);
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  CGMutablePathRef v54 = sub_249FB1944(53, 0xE100000000000000);
  *(void *)(v0 + 328) = v47;
  *(void *)(v0 + 336) = v49;
  *(void *)(v0 + 344) = v51;
  *(void *)(v0 + 352) = v53;
  *(void *)(v0 + 360) = v54;
  *(void *)(v0 + 368) = 54;
  *(void *)(v0 + 376) = 0xE100000000000000;
  sub_249FB17D8(54, 0xE100000000000000);
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  CGMutablePathRef v63 = sub_249FB1944(54, 0xE100000000000000);
  *(void *)(v0 + 384) = v56;
  *(void *)(v0 + 392) = v58;
  *(void *)(v0 + 400) = v60;
  *(void *)(v0 + 408) = v62;
  *(void *)(v0 + 416) = v63;
  *(void *)(v0 + 424) = 55;
  *(void *)(v0 + 432) = 0xE100000000000000;
  sub_249FB17D8(55, 0xE100000000000000);
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  CGMutablePathRef v72 = sub_249FB1944(55, 0xE100000000000000);
  *(void *)(v0 + 440) = v65;
  *(void *)(v0 + 448) = v67;
  *(void *)(v0 + 456) = v69;
  *(void *)(v0 + 464) = v71;
  *(void *)(v0 + 472) = v72;
  *(void *)(v0 + 480) = 56;
  *(void *)(v0 + 488) = 0xE100000000000000;
  sub_249FB17D8(56, 0xE100000000000000);
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  CGMutablePathRef v81 = sub_249FB1944(56, 0xE100000000000000);
  *(void *)(v0 + 496) = v74;
  *(void *)(v0 + 504) = v76;
  *(void *)(v0 + 512) = v78;
  *(void *)(v0 + 520) = v80;
  *(void *)(v0 + 528) = v81;
  *(void *)(v0 + 536) = 57;
  *(void *)(v0 + 544) = 0xE100000000000000;
  sub_249FB17D8(57, 0xE100000000000000);
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  CGMutablePathRef v90 = sub_249FB1944(57, 0xE100000000000000);
  *(void *)(v0 + 552) = v83;
  *(void *)(v0 + 560) = v85;
  *(void *)(v0 + 568) = v87;
  *(void *)(v0 + 576) = v89;
  *(void *)(v0 + 584) = v90;
  *(void *)(v0 + 592) = 41177;
  *(void *)(v0 + 600) = 0xA200000000000000;
  sub_249FB17D8(41177, 0xA200000000000000);
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  CGMutablePathRef v99 = sub_249FB1944(41177, 0xA200000000000000);
  *(void *)(v0 + 608) = v92;
  *(void *)(v0 + 616) = v94;
  *(void *)(v0 + 624) = v96;
  *(void *)(v0 + 632) = v98;
  *(void *)(v0 + 640) = v99;
  *(void *)(v0 + 648) = 41433;
  *(void *)(v0 + 656) = 0xA200000000000000;
  sub_249FB17D8(41433, 0xA200000000000000);
  uint64_t v101 = v100;
  uint64_t v103 = v102;
  uint64_t v105 = v104;
  uint64_t v107 = v106;
  CGMutablePathRef v108 = sub_249FB1944(41433, 0xA200000000000000);
  *(void *)(v0 + 664) = v101;
  *(void *)(v0 + 672) = v103;
  *(void *)(v0 + 680) = v105;
  *(void *)(v0 + 688) = v107;
  *(void *)(v0 + 696) = v108;
  *(void *)(v0 + 704) = 41689;
  *(void *)(v0 + 712) = 0xA200000000000000;
  sub_249FB17D8(41689, 0xA200000000000000);
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  uint64_t v116 = v115;
  CGMutablePathRef v117 = sub_249FB1944(41689, 0xA200000000000000);
  *(void *)(v0 + 720) = v110;
  *(void *)(v0 + 728) = v112;
  *(void *)(v0 + 736) = v114;
  *(void *)(v0 + 744) = v116;
  *(void *)(v0 + 752) = v117;
  *(void *)(v0 + 760) = 41945;
  *(void *)(v0 + 768) = 0xA200000000000000;
  sub_249FB17D8(41945, 0xA200000000000000);
  uint64_t v119 = v118;
  uint64_t v121 = v120;
  uint64_t v123 = v122;
  uint64_t v125 = v124;
  CGMutablePathRef v126 = sub_249FB1944(41945, 0xA200000000000000);
  *(void *)(v0 + 776) = v119;
  *(void *)(v0 + 784) = v121;
  *(void *)(v0 + 792) = v123;
  *(void *)(v0 + 800) = v125;
  *(void *)(v0 + 808) = v126;
  *(void *)(v0 + 816) = 42201;
  *(void *)(v0 + 824) = 0xA200000000000000;
  sub_249FB17D8(42201, 0xA200000000000000);
  uint64_t v128 = v127;
  uint64_t v130 = v129;
  uint64_t v132 = v131;
  uint64_t v134 = v133;
  CGMutablePathRef v135 = sub_249FB1944(42201, 0xA200000000000000);
  *(void *)(v0 + 832) = v128;
  *(void *)(v0 + 840) = v130;
  *(void *)(v0 + 848) = v132;
  *(void *)(v0 + 856) = v134;
  *(void *)(v0 + 864) = v135;
  *(void *)(v0 + 872) = 42457;
  *(void *)(v0 + 880) = 0xA200000000000000;
  sub_249FB17D8(42457, 0xA200000000000000);
  uint64_t v137 = v136;
  uint64_t v139 = v138;
  uint64_t v141 = v140;
  uint64_t v143 = v142;
  CGMutablePathRef v144 = sub_249FB1944(42457, 0xA200000000000000);
  *(void *)(v0 + 888) = v137;
  *(void *)(v0 + 896) = v139;
  *(void *)(v0 + 904) = v141;
  *(void *)(v0 + 912) = v143;
  *(void *)(v0 + 920) = v144;
  *(void *)(v0 + 928) = 42713;
  *(void *)(v0 + 936) = 0xA200000000000000;
  sub_249FB17D8(42713, 0xA200000000000000);
  uint64_t v146 = v145;
  uint64_t v148 = v147;
  uint64_t v150 = v149;
  uint64_t v152 = v151;
  CGMutablePathRef v153 = sub_249FB1944(42713, 0xA200000000000000);
  *(void *)(v0 + 944) = v146;
  *(void *)(v0 + 952) = v148;
  *(void *)(v0 + 960) = v150;
  *(void *)(v0 + 968) = v152;
  *(void *)(v0 + 976) = v153;
  *(void *)(v0 + 984) = 42969;
  *(void *)(v0 + 992) = 0xA200000000000000;
  sub_249FB17D8(42969, 0xA200000000000000);
  uint64_t v155 = v154;
  uint64_t v157 = v156;
  uint64_t v159 = v158;
  uint64_t v161 = v160;
  CGMutablePathRef v162 = sub_249FB1944(42969, 0xA200000000000000);
  *(void *)(v0 + 1000) = v155;
  *(void *)(v0 + 1008) = v157;
  *(void *)(v0 + 1016) = v159;
  *(void *)(v0 + 1024) = v161;
  *(void *)(v0 + 1032) = v162;
  *(void *)(v0 + 1040) = 43225;
  *(void *)(v0 + 1048) = 0xA200000000000000;
  sub_249FB17D8(43225, 0xA200000000000000);
  uint64_t v164 = v163;
  uint64_t v166 = v165;
  uint64_t v168 = v167;
  uint64_t v170 = v169;
  CGMutablePathRef v171 = sub_249FB1944(43225, 0xA200000000000000);
  *(void *)(v0 + 1056) = v164;
  *(void *)(v0 + 1064) = v166;
  *(void *)(v0 + 1072) = v168;
  *(void *)(v0 + 1080) = v170;
  *(void *)(v0 + 1088) = v171;
  *(void *)(v0 + 1096) = 43481;
  *(void *)(v0 + 1104) = 0xA200000000000000;
  sub_249FB17D8(43481, 0xA200000000000000);
  uint64_t v173 = v172;
  uint64_t v175 = v174;
  uint64_t v177 = v176;
  uint64_t v179 = v178;
  CGMutablePathRef v180 = sub_249FB1944(43481, 0xA200000000000000);
  *(void *)(v0 + 1112) = v173;
  *(void *)(v0 + 1120) = v175;
  *(void *)(v0 + 1128) = v177;
  *(void *)(v0 + 1136) = v179;
  *(void *)(v0 + 1144) = v180;
  *(void *)(v0 + 1152) = 46299;
  *(void *)(v0 + 1160) = 0xA200000000000000;
  sub_249FB17D8(46299, 0xA200000000000000);
  uint64_t v182 = v181;
  uint64_t v184 = v183;
  uint64_t v186 = v185;
  uint64_t v188 = v187;
  CGMutablePathRef v189 = sub_249FB1944(46299, 0xA200000000000000);
  *(void *)(v0 + 1168) = v182;
  *(void *)(v0 + 1176) = v184;
  *(void *)(v0 + 1184) = v186;
  *(void *)(v0 + 1192) = v188;
  *(void *)(v0 + 1200) = v189;
  *(void *)(v0 + 1208) = 46555;
  *(void *)(v0 + 1216) = 0xA200000000000000;
  sub_249FB17D8(46555, 0xA200000000000000);
  uint64_t v191 = v190;
  uint64_t v193 = v192;
  uint64_t v195 = v194;
  uint64_t v197 = v196;
  CGMutablePathRef v198 = sub_249FB1944(46555, 0xA200000000000000);
  *(void *)(v0 + 1224) = v191;
  *(void *)(v0 + 1232) = v193;
  *(void *)(v0 + 1240) = v195;
  *(void *)(v0 + 1248) = v197;
  *(void *)(v0 + 1256) = v198;
  *(void *)(v0 + 1264) = 46811;
  *(void *)(v0 + 1272) = 0xA200000000000000;
  sub_249FB17D8(46811, 0xA200000000000000);
  uint64_t v200 = v199;
  uint64_t v202 = v201;
  uint64_t v204 = v203;
  uint64_t v206 = v205;
  CGMutablePathRef v207 = sub_249FB1944(46811, 0xA200000000000000);
  *(void *)(v0 + 1280) = v200;
  *(void *)(v0 + 1288) = v202;
  *(void *)(v0 + 1296) = v204;
  *(void *)(v0 + 1304) = v206;
  *(void *)(v0 + 1312) = v207;
  *(void *)(v0 + 1320) = 10921440;
  *(void *)(v0 + 1328) = 0xA300000000000000;
  sub_249FB17D8(10921440, 0xA300000000000000);
  uint64_t v209 = v208;
  uint64_t v211 = v210;
  uint64_t v213 = v212;
  uint64_t v215 = v214;
  CGMutablePathRef v216 = sub_249FB1944(10921440, 0xA300000000000000);
  *(void *)(v0 + 1336) = v209;
  *(void *)(v0 + 1344) = v211;
  *(void *)(v0 + 1352) = v213;
  *(void *)(v0 + 1360) = v215;
  *(void *)(v0 + 1368) = v216;
  *(void *)(v0 + 1376) = 10986976;
  *(void *)(v0 + 1384) = 0xA300000000000000;
  sub_249FB17D8(10986976, 0xA300000000000000);
  uint64_t v218 = v217;
  uint64_t v220 = v219;
  uint64_t v222 = v221;
  uint64_t v224 = v223;
  CGMutablePathRef v225 = sub_249FB1944(10986976, 0xA300000000000000);
  *(void *)(v0 + 1392) = v218;
  *(void *)(v0 + 1400) = v220;
  *(void *)(v0 + 1408) = v222;
  *(void *)(v0 + 1416) = v224;
  *(void *)(v0 + 1424) = v225;
  *(void *)(v0 + 1432) = 11052512;
  *(void *)(v0 + 1440) = 0xA300000000000000;
  sub_249FB17D8(11052512, 0xA300000000000000);
  uint64_t v227 = v226;
  uint64_t v229 = v228;
  uint64_t v231 = v230;
  uint64_t v233 = v232;
  CGMutablePathRef v234 = sub_249FB1944(11052512, 0xA300000000000000);
  *(void *)(v0 + 1448) = v227;
  *(void *)(v0 + 1456) = v229;
  *(void *)(v0 + 1464) = v231;
  *(void *)(v0 + 1472) = v233;
  *(void *)(v0 + 1480) = v234;
  *(void *)(v0 + 1488) = 11118048;
  *(void *)(v0 + 1496) = 0xA300000000000000;
  sub_249FB17D8(11118048, 0xA300000000000000);
  uint64_t v236 = v235;
  uint64_t v238 = v237;
  uint64_t v240 = v239;
  uint64_t v242 = v241;
  CGMutablePathRef v243 = sub_249FB1944(11118048, 0xA300000000000000);
  *(void *)(v0 + 1504) = v236;
  *(void *)(v0 + 1512) = v238;
  *(void *)(v0 + 1520) = v240;
  *(void *)(v0 + 1528) = v242;
  *(void *)(v0 + 1536) = v243;
  *(void *)(v0 + 1544) = 11183584;
  *(void *)(v0 + 1552) = 0xA300000000000000;
  sub_249FB17D8(11183584, 0xA300000000000000);
  uint64_t v245 = v244;
  uint64_t v247 = v246;
  uint64_t v249 = v248;
  uint64_t v251 = v250;
  CGMutablePathRef v252 = sub_249FB1944(11183584, 0xA300000000000000);
  *(void *)(v0 + 1560) = v245;
  *(void *)(v0 + 1568) = v247;
  *(void *)(v0 + 1576) = v249;
  *(void *)(v0 + 1584) = v251;
  *(void *)(v0 + 1592) = v252;
  *(void *)(v0 + 1600) = 11249120;
  *(void *)(v0 + 1608) = 0xA300000000000000;
  sub_249FB17D8(11249120, 0xA300000000000000);
  uint64_t v254 = v253;
  uint64_t v256 = v255;
  uint64_t v258 = v257;
  uint64_t v260 = v259;
  CGMutablePathRef v261 = sub_249FB1944(11249120, 0xA300000000000000);
  *(void *)(v0 + 1616) = v254;
  *(void *)(v0 + 1624) = v256;
  *(void *)(v0 + 1632) = v258;
  *(void *)(v0 + 1640) = v260;
  *(void *)(v0 + 1648) = v261;
  *(void *)(v0 + 1656) = 11314656;
  *(void *)(v0 + 1664) = 0xA300000000000000;
  sub_249FB17D8(11314656, 0xA300000000000000);
  uint64_t v263 = v262;
  uint64_t v265 = v264;
  uint64_t v267 = v266;
  uint64_t v269 = v268;
  CGMutablePathRef v270 = sub_249FB1944(11314656, 0xA300000000000000);
  *(void *)(v0 + 1672) = v263;
  *(void *)(v0 + 1680) = v265;
  *(void *)(v0 + 1688) = v267;
  *(void *)(v0 + 1696) = v269;
  *(void *)(v0 + 1704) = v270;
  *(void *)(v0 + 1712) = 11380192;
  *(void *)(v0 + 1720) = 0xA300000000000000;
  sub_249FB17D8(11380192, 0xA300000000000000);
  uint64_t v272 = v271;
  uint64_t v274 = v273;
  uint64_t v276 = v275;
  uint64_t v278 = v277;
  CGMutablePathRef v279 = sub_249FB1944(11380192, 0xA300000000000000);
  *(void *)(v0 + 1728) = v272;
  *(void *)(v0 + 1736) = v274;
  *(void *)(v0 + 1744) = v276;
  *(void *)(v0 + 1752) = v278;
  *(void *)(v0 + 1760) = v279;
  *(void *)(v0 + 1768) = 11445728;
  *(void *)(v0 + 1776) = 0xA300000000000000;
  sub_249FB17D8(11445728, 0xA300000000000000);
  uint64_t v281 = v280;
  uint64_t v283 = v282;
  uint64_t v285 = v284;
  uint64_t v287 = v286;
  CGMutablePathRef v288 = sub_249FB1944(11445728, 0xA300000000000000);
  *(void *)(v0 + 1784) = v281;
  *(void *)(v0 + 1792) = v283;
  *(void *)(v0 + 1800) = v285;
  *(void *)(v0 + 1808) = v287;
  *(void *)(v0 + 1816) = v288;
  *(void *)(v0 + 1824) = 11511264;
  *(void *)(v0 + 1832) = 0xA300000000000000;
  sub_249FB17D8(11511264, 0xA300000000000000);
  uint64_t v290 = v289;
  uint64_t v292 = v291;
  uint64_t v294 = v293;
  uint64_t v296 = v295;
  CGMutablePathRef v297 = sub_249FB1944(11511264, 0xA300000000000000);
  *(void *)(v0 + 1840) = v290;
  *(void *)(v0 + 1848) = v292;
  *(void *)(v0 + 1856) = v294;
  *(void *)(v0 + 1864) = v296;
  *(void *)(v0 + 1872) = v297;
  unint64_t result = sub_24A0131C4(v0);
  qword_269752390 = result;
  return result;
}

void sub_249FB17D8(uint64_t a1, unint64_t a2)
{
  if (qword_26974F2D0 != -1) {
    swift_once();
  }
  uint64_t v4 = (const __CTFont *)qword_269752370;
  swift_bridgeObjectRetain();
  uint64_t v5 = (const UniChar *)sub_249FCEA7C(a1, a2);
  swift_bridgeObjectRelease();
  unint64_t v6 = *((void *)v5 + 2);
  uint64_t v7 = sub_249FC9DAC(0, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (uint64_t)sub_249FBA044(0, *(void *)(v7 + 16), 0, (char *)v7);
  }
  BOOL GlyphsForCharacters = CTFontGetGlyphsForCharacters(v4, v5 + 16, (CGGlyph *)(v7 + 32), v6);
  swift_release();
  if (!GlyphsForCharacters)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  if (*(void *)(v7 + 16))
  {
    PathForGlyph = CTFontCreatePathForGlyph(v4, *(_WORD *)(v7 + 32), 0);
    if (PathForGlyph)
    {
      uint64_t v10 = PathForGlyph;
      CGPathGetBoundingBox(PathForGlyph);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_9;
  }
  __break(1u);
}

CGMutablePathRef sub_249FB1944(uint64_t a1, uint64_t a2)
{
  if (a1 == 48 && a2 == 0xE100000000000000 || (sub_24A057D48() & 1) != 0) {
    goto LABEL_4;
  }
  if (a1 == 49 && a2 == 0xE100000000000000 || (sub_24A057D48() & 1) != 0)
  {
LABEL_134:
    CGMutablePathRef Mutable = CGPathCreateMutable();
    sub_24A0577E8();
    sub_24A057808();
    sub_24A057808();
    sub_24A057808();
    goto LABEL_5;
  }
  if (a1 == 50 && a2 == 0xE100000000000000 || (sub_24A057D48() & 1) != 0)
  {
    CGMutablePathRef Mutable = CGPathCreateMutable();
    sub_24A0577E8();
    sub_24A0577F8();
    goto LABEL_5;
  }
  if ((a1 != 51 || a2 != 0xE100000000000000) && (sub_24A057D48() & 1) == 0)
  {
    if (a1 == 52 && a2 == 0xE100000000000000 || (sub_24A057D48() & 1) != 0) {
      goto LABEL_134;
    }
    if (a1 == 53 && a2 == 0xE100000000000000
      || (sub_24A057D48() & 1) != 0
      || a1 == 54 && a2 == 0xE100000000000000
      || (sub_24A057D48() & 1) != 0)
    {
      goto LABEL_4;
    }
    if (a1 == 55 && a2 == 0xE100000000000000 || (sub_24A057D48() & 1) != 0)
    {
      CGMutablePathRef Mutable = CGPathCreateMutable();
      sub_24A0577E8();
      sub_24A057808();
      sub_24A057808();
      sub_24A057808();
      sub_24A057808();
      sub_24A0577F8();
      return Mutable;
    }
    if (a1 == 56 && a2 == 0xE100000000000000
      || (sub_24A057D48() & 1) != 0
      || a1 == 57 && a2 == 0xE100000000000000
      || (sub_24A057D48() & 1) != 0)
    {
      goto LABEL_4;
    }
    if (a1 == 41177 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0) {
      goto LABEL_94;
    }
    if (a1 == 41433 && a2 == 0xA200000000000000
      || (sub_24A057D48() & 1) != 0
      || a1 == 41689 && a2 == 0xA200000000000000
      || (sub_24A057D48() & 1) != 0)
    {
      goto LABEL_134;
    }
    if (a1 == 41945 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0) {
      goto LABEL_4;
    }
    if (a1 == 42201 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0) {
      goto LABEL_134;
    }
    if (a1 == 42457 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0)
    {
      CGMutablePathRef Mutable = CGPathCreateMutable();
      sub_24A0577E8();
      sub_24A057808();
      goto LABEL_5;
    }
    if (a1 == 42713 && a2 == 0xA200000000000000
      || (sub_24A057D48() & 1) != 0
      || a1 == 42969 && a2 == 0xA200000000000000
      || (sub_24A057D48() & 1) != 0
      || a1 == 43225 && a2 == 0xA200000000000000
      || (sub_24A057D48() & 1) != 0
      || a1 == 43481 && a2 == 0xA200000000000000
      || (sub_24A057D48() & 1) != 0)
    {
      goto LABEL_134;
    }
    if (a1 == 46299 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0) {
      goto LABEL_94;
    }
    if (a1 == 46555 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0) {
      goto LABEL_134;
    }
    if (a1 == 46811 && a2 == 0xA200000000000000 || (sub_24A057D48() & 1) != 0)
    {
LABEL_94:
      CGMutablePathRef Mutable = CGPathCreateMutable();
      sub_24A0577E8();
      sub_24A057808();
      sub_24A057808();
      sub_24A057808();
      sub_24A057808();
      goto LABEL_5;
    }
    if ((a1 != 10921440 || a2 != 0xA300000000000000) && (sub_24A057D48() & 1) == 0)
    {
      if (a1 == 10986976 && a2 == 0xA300000000000000 || (sub_24A057D48() & 1) != 0)
      {
        CGMutablePathRef Mutable = CGPathCreateMutable();
        sub_24A0577E8();
        sub_24A0577F8();
        sub_24A057808();
        sub_24A057808();
        sub_24A057808();
        goto LABEL_5;
      }
      if (a1 == 11052512 && a2 == 0xA300000000000000
        || (sub_24A057D48() & 1) != 0
        || a1 == 11118048 && a2 == 0xA300000000000000
        || (sub_24A057D48() & 1) != 0)
      {
        goto LABEL_134;
      }
      if ((a1 != 11183584 || a2 != 0xA300000000000000)
        && (sub_24A057D48() & 1) == 0
        && (a1 != 11249120 || a2 != 0xA300000000000000)
        && (sub_24A057D48() & 1) == 0
        && (a1 != 11314656 || a2 != 0xA300000000000000)
        && (sub_24A057D48() & 1) == 0
        && (a1 != 11380192 || a2 != 0xA300000000000000)
        && (sub_24A057D48() & 1) == 0
        && (a1 != 11445728 || a2 != 0xA300000000000000)
        && (sub_24A057D48() & 1) == 0)
      {
        if (a1 != 11511264 || a2 != 0xA300000000000000) {
          sub_24A057D48();
        }
        goto LABEL_134;
      }
    }
  }
LABEL_4:
  CGMutablePathRef Mutable = CGPathCreateMutable();
  sub_24A0577E8();
  sub_24A057808();
  sub_24A057808();
LABEL_5:
  sub_24A057808();
  return Mutable;
}

ValueMetadata *type metadata accessor for PlayClockFaceConstants()
{
  return &type metadata for PlayClockFaceConstants;
}

ValueMetadata *type metadata accessor for PlayClockFaceConstants.Alarm()
{
  return &type metadata for PlayClockFaceConstants.Alarm;
}

void destroy for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1)
{
}

uint64_t initializeWithCopy for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  id v5 = v4;
  return a1;
}

void *assignWithCopy for PlayClockFaceConstants.Alarm.Metrics(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  long long v3 = (void *)a2[4];
  uint64_t v4 = (void *)a1[4];
  a1[4] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayClockFaceConstants.Alarm.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayClockFaceConstants.Alarm.Metrics()
{
  return &type metadata for PlayClockFaceConstants.Alarm.Metrics;
}

void *sub_249FB41E8(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A056238();
    uint64_t v8 = *(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for SolarEvent(0);
    *((unsigned char *)a1 + *(int *)(v9 + 20)) = a2[*(int *)(v9 + 20)];
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)&a2[*(int *)(v9 + 24)];
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = &a2[v10];
    v8((void *)((char *)a1 + v10), &a2[v10], v7);
    v11[*(int *)(v9 + 20)] = v12[*(int *)(v9 + 20)];
    *(_DWORD *)&v11[*(int *)(v9 + 24)] = *(_DWORD *)&v12[*(int *)(v9 + 24)];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = &a2[v13];
    v8((void *)((char *)a1 + v13), &a2[v13], v7);
    v14[*(int *)(v9 + 20)] = v15[*(int *)(v9 + 20)];
    *(_DWORD *)&v14[*(int *)(v9 + 24)] = *(_DWORD *)&v15[*(int *)(v9 + 24)];
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    CGMutablePathRef v18 = &a2[v16];
    v8((void *)((char *)a1 + v16), &a2[v16], v7);
    v17[*(int *)(v9 + 20)] = v18[*(int *)(v9 + 20)];
    *(_DWORD *)&v17[*(int *)(v9 + 24)] = *(_DWORD *)&v18[*(int *)(v9 + 24)];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = &a2[v19];
    v8((void *)((char *)a1 + v19), v21, v7);
    v20[*(int *)(v9 + 20)] = v21[*(int *)(v9 + 20)];
    *(_DWORD *)&v20[*(int *)(v9 + 24)] = *(_DWORD *)&v21[*(int *)(v9 + 24)];
  }
  return a1;
}

uint64_t type metadata accessor for SolarEvent(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_2697504E8);
}

uint64_t sub_249FB43F8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + a2[5], v4);
  v7(a1 + a2[6], v4);
  v7(a1 + a2[7], v4);
  uint64_t v5 = a1 + a2[8];

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t sub_249FB44EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(unsigned char *)(v10 + *(int *)(v8 + 20)) = *(unsigned char *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(unsigned char *)(v13 + *(int *)(v8 + 20)) = *(unsigned char *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(unsigned char *)(v16 + *(int *)(v8 + 20)) = *(unsigned char *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(unsigned char *)(v19 + *(int *)(v8 + 20)) = *(unsigned char *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_249FB468C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(unsigned char *)(v10 + *(int *)(v8 + 20)) = *(unsigned char *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(unsigned char *)(v13 + *(int *)(v8 + 20)) = *(unsigned char *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(unsigned char *)(v16 + *(int *)(v8 + 20)) = *(unsigned char *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(unsigned char *)(v19 + *(int *)(v8 + 20)) = *(unsigned char *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_249FB482C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(unsigned char *)(v10 + *(int *)(v8 + 20)) = *(unsigned char *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(unsigned char *)(v13 + *(int *)(v8 + 20)) = *(unsigned char *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(unsigned char *)(v16 + *(int *)(v8 + 20)) = *(unsigned char *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(unsigned char *)(v19 + *(int *)(v8 + 20)) = *(unsigned char *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_249FB49CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for SolarEvent(0);
  *(unsigned char *)(a1 + *(int *)(v8 + 20)) = *(unsigned char *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(unsigned char *)(v10 + *(int *)(v8 + 20)) = *(unsigned char *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(unsigned char *)(v13 + *(int *)(v8 + 20)) = *(unsigned char *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(unsigned char *)(v16 + *(int *)(v8 + 20)) = *(unsigned char *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(unsigned char *)(v19 + *(int *)(v8 + 20)) = *(unsigned char *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_249FB4B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249FB4B80);
}

uint64_t sub_249FB4B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SolarEvent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_249FB4BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249FB4C00);
}

uint64_t sub_249FB4C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SolarEvent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SolarCycle(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_2697504D8);
}

uint64_t sub_249FB4C90()
{
  uint64_t result = type metadata accessor for SolarEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_249FB4D24(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A056238();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_249FB4DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_249FB4E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249FB4F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_249FB4F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_249FB500C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249FB5020);
}

uint64_t sub_249FB5020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 4) {
      return v10 - 3;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_249FB50DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249FB50F0);
}

uint64_t sub_249FB50F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24A056238();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  return result;
}

uint64_t sub_249FB51AC()
{
  uint64_t result = sub_24A056238();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249FB5250()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SolarEvent(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056238();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26974F328 != -1) {
    swift_once();
  }
  sub_24A006BDC((uint64_t)v8);
  uint64_t v9 = (int *)type metadata accessor for SolarCycle(0);
  sub_249FB6D34(v1 + v9[7], (uint64_t)v4, type metadata accessor for SolarEvent);
  char v10 = sub_24A0561A8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v6 + 8);
  v11(v4, v5);
  if (v10)
  {
    v11(v8, v5);
    return 0;
  }
  else
  {
    sub_249FB6D34(v1 + v9[6], (uint64_t)v4, type metadata accessor for SolarEvent);
    char v13 = sub_24A0561A8();
    v11(v4, v5);
    if (v13)
    {
      v11(v8, v5);
      return 3;
    }
    else
    {
      sub_249FB6D34(v1 + v9[5], (uint64_t)v4, type metadata accessor for SolarEvent);
      char v14 = sub_24A0561A8();
      v11(v8, v5);
      v11(v4, v5);
      if (v14) {
        return 2;
      }
      else {
        return 1;
      }
    }
  }
}

float sub_249FB54D0(float a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SolarEvent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A056238();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v11 = sub_249FB5250();
  if (qword_26974F328 != -1) {
    swift_once();
  }
  sub_24A006BDC((uint64_t)v10);
  uint64_t v12 = type metadata accessor for SolarCycle(0);
  sub_249FB6D34(v2 + *(int *)(v12 + 24), (uint64_t)v6, type metadata accessor for SolarEvent);
  char v13 = sub_24A0561B8();
  char v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  v14(v6, v7);
  uint64_t v15 = 28;
  if (v13) {
    uint64_t v15 = 20;
  }
  float v16 = fabsf(a1 / *(float *)(v2 + *(int *)(v12 + v15) + *(int *)(v4 + 24)));
  if ((v11 | 2) == 2) {
    float v16 = 1.0 - v16;
  }
  float v17 = 0.25;
  float v18 = 0.0;
  float v19 = 180.0;
  switch(v11)
  {
    case 1u:
      return (float)(v16 * 0.25) + v18;
    case 2u:
      goto LABEL_11;
    case 3u:
      float v17 = 0.5;
      int v20 = 1132920832;
      goto LABEL_10;
    default:
      float v17 = 0.75;
      int v20 = 1135869952;
LABEL_10:
      float v19 = *(float *)&v20;
LABEL_11:
      float v18 = v17;
      if (v17 > (float)(v19 / 360.0))
      {
        __break(1u);
        JUMPOUT(0x249FB574CLL);
      }
      return (float)(v16 * 0.25) + v18;
  }
}

void sub_249FB575C(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_24A056238();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A056538();
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v16 - 8);
  float v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = CGSizeMake(a2, a3);
  double v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v22(v18, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  uint64_t v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) != 1)
  {
    uint64_t v23 = (void *)sub_24A056198();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F417A8]), sel_initWithLocation_date_body_, v23, 0, v19, v21);

  if (v24)
  {
    objc_msgSend(v24, sel_altitude);
  }
  else
  {
    uint64_t v38 = v9;
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F7AA94(v25, (uint64_t)v12);
    uint64_t v26 = v39;
    uint64_t v27 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v12, 1, v40) == 1)
    {
      sub_249FB8AA8((uint64_t)v15);
      sub_249F9F8CC((uint64_t)v12);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v15, v12, v27);
    }
    uint64_t v28 = v38;
    v22(v38, a1, v6);
    uint64_t v29 = sub_24A056518();
    os_log_type_t v30 = sub_24A0577B8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v43 = v37;
      *(_DWORD *)uint64_t v31 = 141558531;
      uint64_t v41 = 1752392040;
      sub_24A057978();
      *(_WORD *)(v31 + 12) = 2081;
      uint64_t v41 = *(void *)&a2;
      double v42 = a3;
      type metadata accessor for CLLocationCoordinate2D(0);
      uint64_t v32 = sub_24A0573C8();
      uint64_t v41 = sub_249F782DC(v32, v33, &v43);
      sub_24A057978();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2082;
      sub_249FB6600((unint64_t *)&qword_269750148, MEMORY[0x263F07490]);
      uint64_t v34 = sub_24A057CF8();
      uint64_t v41 = sub_249F782DC(v34, v35, &v43);
      sub_24A057978();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v6);
      _os_log_impl(&dword_249F61000, v29, v30, "Failed to get elevationDegrees for location:%{private,mask.hash}s, date: %{public}s", (uint8_t *)v31, 0x20u);
      uint64_t v36 = v37;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v36, -1, -1);
      MEMORY[0x24C5BA360](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v6);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v40);
  }
}

uint64_t sub_249FB5D18@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v63 = a1;
  uint64_t v5 = type metadata accessor for SolarEvent(0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v67 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v66 = (uint64_t)&v57 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v65 = (uint64_t)&v57 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = (uint64_t)&v57 - v13;
  uint64_t v14 = sub_24A056238();
  uint64_t v61 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v62 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  float v18 = (char *)&v57 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v59 = (char *)&v57 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v57 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v57 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v57 - v28;
  sub_24A056058();
  double v31 = v30;
  uint64_t v32 = self;
  double v33 = CGSizeMake(a2, a3);
  double v35 = v34;
  objc_msgSend(v32, sel_nextEventOfType_after_forLocation_altitudeInDegrees_accuracy_, 8, v31, v33, v34, 0.0, 60.0);
  uint64_t v60 = v26;
  sub_24A056048();
  double v36 = *MEMORY[0x263F41638];
  objc_msgSend(v32, sel_prevEventOfType_before_forLocation_altitudeInDegrees_accuracy_, 8, v31, v33, v35, *MEMORY[0x263F41638], 60.0);
  sub_24A056048();
  uint64_t v58 = v29;
  sub_24A056058();
  id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F41C10]), sel_initWithLocation_time_altitudeInDegrees_accuracy_, v33, v35, v37, v36, 60.0);
  objc_msgSend(v38, sel_nextEventOfType_, 16);
  sub_24A056048();
  objc_msgSend(v38, sel_nextEventOfType_, 32);
  sub_24A056048();
  sub_24A056058();
  objc_msgSend(v32, sel_prevEventOfType_before_forLocation_altitudeInDegrees_accuracy_, 512);
  uint64_t v39 = v18;
  sub_24A056048();

  uint64_t v40 = v23;
  uint64_t v57 = v23;
  sub_249FB575C((uint64_t)v23, a2, a3);
  LODWORD(v33) = v41;
  sub_249FB575C((uint64_t)v18, a2, a3);
  LODWORD(a3) = v42;
  uint64_t v43 = v61;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 16);
  uint64_t v45 = v64;
  v44(v64, v29, v14);
  *(unsigned char *)(v45 + *(int *)(v6 + 28)) = 0;
  *(_DWORD *)(v45 + *(int *)(v6 + 32)) = 0;
  uint64_t v46 = v65;
  v44(v65, v40, v14);
  *(unsigned char *)(v46 + *(int *)(v6 + 28)) = 2;
  *(_DWORD *)(v46 + *(int *)(v6 + 32)) = LODWORD(v33);
  uint64_t v47 = v66;
  uint64_t v48 = v59;
  v44(v66, v59, v14);
  *(unsigned char *)(v47 + *(int *)(v6 + 28)) = 1;
  *(_DWORD *)(v47 + *(int *)(v6 + 32)) = 0;
  uint64_t v49 = v67;
  v44(v67, v39, v14);
  *(unsigned char *)(v49 + *(int *)(v6 + 28)) = 3;
  *(_DWORD *)(v49 + *(int *)(v6 + 32)) = LODWORD(a3);
  uint64_t v50 = v62;
  uint64_t v51 = v60;
  v44((uint64_t)v62, v60, v14);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v43 + 8);
  v52(v39, v14);
  v52(v48, v14);
  v52(v57, v14);
  v52(v51, v14);
  v52(v58, v14);
  uint64_t v53 = (int *)type metadata accessor for SolarCycle(0);
  uint64_t v54 = v63;
  uint64_t v55 = v63 + v53[8];
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v55, v50, v14);
  *(unsigned char *)(v55 + *(int *)(v6 + 28)) = 0;
  *(_DWORD *)(v55 + *(int *)(v6 + 32)) = 0;
  sub_249FB6DF8(v64, v54);
  sub_249FB6DF8(v65, v54 + v53[5]);
  sub_249FB6DF8(v66, v54 + v53[6]);
  return sub_249FB6DF8(v67, v54 + v53[7]);
}

uint64_t sub_249FB62C0()
{
  return sub_24A057E68();
}

BOOL sub_249FB6388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_24A0561D8() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
      && *(float *)(a1 + *(int *)(a3 + 24)) == *(float *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_249FB63F4()
{
  return sub_24A057E48();
}

uint64_t sub_249FB64A0()
{
  return sub_24A057E68();
}

uint64_t sub_249FB6560(uint64_t a1)
{
  uint64_t result = sub_249FB6600(&qword_2697504F8, (void (*)(uint64_t))type metadata accessor for SolarEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FB65B8()
{
  return sub_249FB6600(&qword_269750500, (void (*)(uint64_t))type metadata accessor for SolarEvent);
}

uint64_t sub_249FB6600(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249FB6648()
{
  return sub_24A057E48();
}

uint64_t sub_249FB6818()
{
  return sub_24A057E68();
}

uint64_t sub_249FB685C()
{
  return sub_24A057E68();
}

uint64_t sub_249FB689C(uint64_t a1)
{
  uint64_t result = sub_249FB6600(&qword_269750508, (void (*)(uint64_t))type metadata accessor for SolarCycle);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FB68F4()
{
  return sub_249FB6600(&qword_269750510, (void (*)(uint64_t))type metadata accessor for SolarCycle);
}

BOOL sub_249FB693C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for SolarCycle(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v42 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v42 - v14;
  MEMORY[0x270FA5388](v16);
  float v18 = (char *)&v42 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if ((sub_24A0561D8() & 1) == 0
    || (uint64_t v22 = type metadata accessor for SolarEvent(0),
        *(unsigned __int8 *)(a1 + *(int *)(v22 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v22 + 20))))
  {
    sub_249FB6D34(a1, (uint64_t)v21, type metadata accessor for SolarCycle);
    sub_249FB6D34(a2, (uint64_t)v18, type metadata accessor for SolarCycle);
LABEL_14:
    sub_249FB6D9C((uint64_t)v18);
    sub_249FB6D9C((uint64_t)v21);
    sub_249FB6D34(a1, (uint64_t)v15, type metadata accessor for SolarCycle);
    sub_249FB6D34(a2, (uint64_t)v12, type metadata accessor for SolarCycle);
LABEL_15:
    sub_249FB6D9C((uint64_t)v12);
    sub_249FB6D9C((uint64_t)v15);
    sub_249FB6D34(a1, (uint64_t)v9, type metadata accessor for SolarCycle);
    sub_249FB6D34(a2, (uint64_t)v6, type metadata accessor for SolarCycle);
LABEL_16:
    BOOL v40 = 0;
    goto LABEL_17;
  }
  uint64_t v43 = v22;
  uint64_t v23 = *(int *)(v22 + 24);
  float v24 = *(float *)(a1 + v23);
  float v25 = *(float *)(a2 + v23);
  sub_249FB6D34(a1, (uint64_t)v21, type metadata accessor for SolarCycle);
  sub_249FB6D34(a2, (uint64_t)v18, type metadata accessor for SolarCycle);
  if (v24 != v25) {
    goto LABEL_14;
  }
  uint64_t v26 = v4[5];
  uint64_t v27 = &v21[v26];
  int v42 = &v18[v26];
  if ((sub_24A0561D8() & 1) == 0 || v27[*(int *)(v43 + 20)] != v42[*(int *)(v43 + 20)]) {
    goto LABEL_14;
  }
  uint64_t v28 = *(int *)(v43 + 24);
  float v29 = *(float *)&v27[v28];
  float v30 = *(float *)&v42[v28];
  sub_249FB6D9C((uint64_t)v18);
  sub_249FB6D9C((uint64_t)v21);
  sub_249FB6D34(a1, (uint64_t)v15, type metadata accessor for SolarCycle);
  sub_249FB6D34(a2, (uint64_t)v12, type metadata accessor for SolarCycle);
  if (v29 != v30) {
    goto LABEL_15;
  }
  uint64_t v31 = v4[6];
  uint64_t v32 = &v15[v31];
  double v33 = &v12[v31];
  if ((sub_24A0561D8() & 1) == 0 || v32[*(int *)(v43 + 20)] != v33[*(int *)(v43 + 20)]) {
    goto LABEL_15;
  }
  uint64_t v34 = *(int *)(v43 + 24);
  float v35 = *(float *)&v32[v34];
  float v36 = *(float *)&v33[v34];
  sub_249FB6D9C((uint64_t)v12);
  sub_249FB6D9C((uint64_t)v15);
  sub_249FB6D34(a1, (uint64_t)v9, type metadata accessor for SolarCycle);
  sub_249FB6D34(a2, (uint64_t)v6, type metadata accessor for SolarCycle);
  if (v35 != v36) {
    goto LABEL_16;
  }
  uint64_t v37 = v4[8];
  id v38 = &v9[v37];
  uint64_t v39 = &v6[v37];
  if ((sub_24A0561D8() & 1) == 0 || v38[*(int *)(v43 + 20)] != v39[*(int *)(v43 + 20)]) {
    goto LABEL_16;
  }
  BOOL v40 = *(float *)&v38[*(int *)(v43 + 24)] == *(float *)&v39[*(int *)(v43 + 24)];
LABEL_17:
  sub_249FB6D9C((uint64_t)v6);
  sub_249FB6D9C((uint64_t)v9);
  return v40;
}

uint64_t sub_249FB6D34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249FB6D9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SolarCycle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249FB6DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SolarEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SolarCycle.Phase()
{
  return &type metadata for SolarCycle.Phase;
}

uint64_t getEnumTagSinglePayload for SolarContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11ClockPoster10SolarEventV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FB6FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarEvent.Kind()
{
  return &type metadata for SolarEvent.Kind;
}

unint64_t sub_249FB700C()
{
  unint64_t result = qword_269750520;
  if (!qword_269750520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750520);
  }
  return result;
}

unint64_t sub_249FB7064()
{
  unint64_t result = qword_269750528;
  if (!qword_269750528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750528);
  }
  return result;
}

uint64_t static ClockLogger.data.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249FB7A4C(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private, a1);
}

uint64_t static ClockLogger.rendering.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249FB7A4C(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private, a1);
}

uint64_t CustomStringConvertibleViaMirror.description.getter(uint64_t a1)
{
  uint64_t v3 = sub_24A057E98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_0, v1, a1);
  sub_24A057E78();
  sub_24A057E88();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v8 = sub_24A057B68();
  swift_release();
  v11[0] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249F6EE60((unint64_t *)&qword_26974FA70, &qword_26974FA68);
  sub_24A057348();
  swift_bridgeObjectRelease();
  v11[0] = 60;
  v11[1] = 0xE100000000000000;
  swift_getDynamicType();
  sub_24A057F48();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v11[0];
}

ClockPoster::ClockLogger::Host_optional __swiftcall ClockLogger.Host.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  uint64_t v3 = sub_24A057C38();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *int v2 = v5;
  return result;
}

void *static ClockLogger.Host.allCases.getter()
{
  return &unk_26FDE5F58;
}

uint64_t ClockLogger.Host.rawValue.getter()
{
  if (*v0) {
    return 0x746E6569626D61;
  }
  else {
    return 7368801;
  }
}

uint64_t sub_249FB73EC(char *a1, char *a2)
{
  return sub_24A012660(*a1, *a2);
}

uint64_t sub_249FB73F8()
{
  return sub_24A057E68();
}

uint64_t sub_249FB7474()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249FB74DC()
{
  return sub_24A057E68();
}

ClockPoster::ClockLogger::Host_optional sub_249FB7554(Swift::String *a1)
{
  return ClockLogger.Host.init(rawValue:)(*a1);
}

void sub_249FB7560(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7368801;
  if (*v1) {
    uint64_t v2 = 0x746E6569626D61;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_249FB7598(void *a1@<X8>)
{
  *a1 = &unk_26FDE5F80;
}

ClockPoster::ClockLogger::Role_optional __swiftcall ClockLogger.Role.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24A057C38();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ClockLogger.Role.allCases.getter()
{
  return &unk_26FDE6010;
}

uint64_t ClockLogger.Role.rawValue.getter()
{
  uint64_t v1 = 0x7265646E6572;
  if (*v0 != 1) {
    uint64_t v1 = 0x657461647075;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1953064037;
  }
}

uint64_t sub_249FB765C(char *a1, unsigned __int8 *a2)
{
  return sub_24A012564(*a1, *a2);
}

uint64_t sub_249FB7668()
{
  return sub_24A057E68();
}

uint64_t sub_249FB76FC()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249FB777C()
{
  return sub_24A057E68();
}

ClockPoster::ClockLogger::Role_optional sub_249FB780C(Swift::String *a1)
{
  return ClockLogger.Role.init(rawValue:)(*a1);
}

void sub_249FB7818(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 0x7265646E6572;
  if (v2 != 1) {
    uint64_t v4 = 0x657461647075;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 1953064037;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

void sub_249FB7868(void *a1@<X8>)
{
  *a1 = &unk_26FDE6038;
}

uint64_t sub_249FB7878()
{
  type metadata accessor for ClockLogger();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger;
  uint64_t v2 = sub_24A056538();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private, 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind) = 5;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host) = 2;
  qword_26B16FA58 = v0;
  return result;
}

uint64_t static ClockLogger.sharedInstance.getter()
{
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t static ClockLogger.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249FB7A4C(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private, a1);
}

uint64_t static ClockLogger.location.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_249FB7A4C(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private, a1);
}

uint64_t sub_249FB7A4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26B16FA58 + *a1;
  swift_beginAccess();
  sub_249F7AA94(v7, (uint64_t)v6);
  uint64_t v8 = sub_24A056538();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  }
  sub_249FB8AA8(a2);
  return sub_249F9F8CC((uint64_t)v6);
}

unint64_t static ClockLogger.processDescription.getter()
{
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }
  unint64_t v1 = sub_249FB9490();
  sub_24A057438();
  sub_249FB9BBC();
  sub_24A057438();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_249FB7C58(unsigned __int8 *a1, char *a2, unsigned char *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24A056538();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v57[-v15];
  int v17 = *a1;
  char v18 = *a2;
  unsigned __int8 v19 = *(unsigned char *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind) = *a3;
  v68[0] = v19;
  sub_249FB8E70(v68);
  unsigned __int8 v20 = *(unsigned char *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host) = v18;
  v68[0] = v20;
  sub_249FB95EC(v68);
  uint64_t v21 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
  swift_beginAccess();
  sub_249F7AA94(v21, (uint64_t)v16);
  uint64_t v61 = v9;
  uint64_t v62 = v8;
  int v22 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8);
  uint64_t result = sub_249F9F8CC((uint64_t)v16);
  if (v17 == 3)
  {
    if (v22 != 1) {
      return result;
    }
LABEL_11:
    int v58 = v17;
    uint64_t v31 = sub_249FB9BBC();
    uint64_t v59 = v31;
    uint64_t v33 = v32;
    sub_249FB9490();
    LODWORD(v60) = v22;
    v67[0] = 0;
    v67[1] = 0xE000000000000000;
    sub_24A057A78();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v67[0] = v31;
    v67[1] = v33;
    sub_24A057438();
    uint64_t v34 = v63;
    sub_24A056528();
    uint64_t v35 = v61;
    uint64_t v36 = v62;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v13, v34, v62);
    uint64_t v37 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56);
    v37(v13, 0, 1, v36);
    swift_beginAccess();
    sub_249FBAF94((uint64_t)v13, v21);
    swift_endAccess();
    sub_249FB9490();
    uint64_t v38 = v59;
    v67[0] = v59;
    v67[1] = v33;
    swift_bridgeObjectRetain();
    sub_24A057438();
    sub_24A056528();
    v37(v13, 0, 1, v36);
    uint64_t v39 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
    swift_beginAccess();
    sub_249FBAF94((uint64_t)v13, v39);
    swift_endAccess();
    sub_249FB9490();
    v67[0] = v38;
    v67[1] = v33;
    swift_bridgeObjectRetain();
    sub_24A057438();
    sub_24A056528();
    v37(v13, 0, 1, v36);
    uint64_t v40 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249FBAF94((uint64_t)v13, v40);
    swift_endAccess();
    sub_249FB9490();
    v67[0] = v38;
    v67[1] = v33;
    sub_24A057438();
    sub_24A056528();
    v37(v13, 0, 1, v36);
    uint64_t v41 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private;
    swift_beginAccess();
    sub_249FBAF94((uint64_t)v13, v41);
    swift_endAccess();
    swift_retain_n();
    int v42 = sub_24A056518();
    os_log_type_t v43 = sub_24A057798();
    BOOL v44 = os_log_type_enabled(v42, v43);
    if (v60 == 1)
    {
      if (v44)
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v66 = v50;
        v67[0] = 0;
        *(_DWORD *)uint64_t v49 = 136446210;
        v67[1] = 0xE000000000000000;
        sub_24A057A78();
        swift_bridgeObjectRelease();
        strcpy((char *)v67, "[ClockLogger: ");
        HIBYTE(v67[1]) = -18;
        if (qword_26B16F9B8 != -1) {
          swift_once();
        }
        unint64_t v64 = sub_249FB9490();
        uint64_t v65 = v51;
        sub_24A057438();
        sub_249FB9BBC();
        sub_24A057438();
        swift_bridgeObjectRelease();
        sub_24A057438();
        swift_bridgeObjectRelease();
        sub_24A057438();
        v67[0] = sub_249F782DC(v67[0], v67[1], &v66);
        sub_24A057978();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_249F61000, v42, v43, "%{public}s: Starting up logging", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5BA360](v50, -1, -1);
        uint64_t v52 = (uint64_t)v49;
        goto LABEL_29;
      }
    }
    else if (v44)
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v66 = v60;
      v67[0] = 0;
      *(_DWORD *)uint64_t v45 = 136446466;
      v67[1] = 0xE000000000000000;
      sub_24A057A78();
      swift_bridgeObjectRelease();
      strcpy((char *)v67, "[ClockLogger: ");
      HIBYTE(v67[1]) = -18;
      if (qword_26B16F9B8 != -1) {
        swift_once();
      }
      unint64_t v64 = sub_249FB9490();
      uint64_t v65 = v46;
      sub_24A057438();
      sub_249FB9BBC();
      sub_24A057438();
      swift_bridgeObjectRelease();
      sub_24A057438();
      swift_bridgeObjectRelease();
      sub_24A057438();
      v67[0] = sub_249F782DC(v67[0], v67[1], &v66);
      sub_24A057978();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      if (v58 == 3)
      {
        unint64_t v47 = 0xE600000000000000;
        uint64_t v48 = 0x3E4C4C554E3CLL;
      }
      else
      {
        if (v58)
        {
          uint64_t v53 = 0xE600000000000000;
          if (v58 == 1) {
            uint64_t v54 = 0x7265646E6572;
          }
          else {
            uint64_t v54 = 0x657461647075;
          }
        }
        else
        {
          uint64_t v53 = 0xE400000000000000;
          uint64_t v54 = 1953064037;
        }
        v67[0] = v54;
        v67[1] = v53;
        sub_249F823CC();
        uint64_t v48 = sub_24A0579A8();
        unint64_t v47 = v55;
        swift_bridgeObjectRelease();
      }
      v67[0] = sub_249F782DC(v48, v47, &v66);
      sub_24A057978();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249F61000, v42, v43, "%{public}s: Adding role to logging: '%{public}s'", (uint8_t *)v45, 0x16u);
      uint64_t v56 = v60;
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v56, -1, -1);
      uint64_t v52 = v45;
LABEL_29:
      MEMORY[0x24C5BA360](v52, -1, -1);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v61 + 8))(v63, v62);
    }

    swift_release_n();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v61 + 8))(v63, v62);
  }
  float v24 = (uint64_t *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  swift_bridgeObjectRetain();
  char v26 = sub_249FB8680(v17, v25);
  uint64_t result = swift_bridgeObjectRelease();
  if (v22 == 1 || (v26 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v27 = (char *)*v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *float v24 = (uint64_t)v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v27 = sub_249FBA750(0, *((void *)v27 + 2) + 1, 1, v27);
      *float v24 = (uint64_t)v27;
    }
    unint64_t v30 = *((void *)v27 + 2);
    unint64_t v29 = *((void *)v27 + 3);
    if (v30 >= v29 >> 1)
    {
      uint64_t v27 = sub_249FBA750((char *)(v29 > 1), v30 + 1, 1, v27);
      *float v24 = (uint64_t)v27;
    }
    *((void *)v27 + 2) = v30 + 1;
    v27[v30 + 32] = v17;
    swift_endAccess();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_249FB8680(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = a2 + v5++;
    int v7 = *(unsigned __int8 *)(v6 + 32);
    uint64_t v8 = v7 == 1 ? 0x7265646E6572 : 0x657461647075;
    uint64_t v9 = v7 ? v8 : 1953064037;
    unint64_t v10 = v7 ? 0xE600000000000000 : 0xE400000000000000;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v11 = 0x7265646E6572;
      }
      else {
        uint64_t v11 = 0x657461647075;
      }
      unint64_t v12 = 0xE600000000000000;
      if (v9 != v11) {
        goto LABEL_20;
      }
    }
    else
    {
      unint64_t v12 = 0xE400000000000000;
      if (v9 != 1953064037) {
        goto LABEL_20;
      }
    }
    if (v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
LABEL_20:
    char v13 = sub_24A057D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13) {
      break;
    }
    if (v2 == v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_249FB87C4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_24A057BD8())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x24C5B92B0](0, a2);
LABEL_5:
      uint64_t v6 = v5;
      sub_249F88C30();
      char v7 = sub_24A057938();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_24A057938();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x24C5B92B0](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_24A057938();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_249FB893C(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  int v3 = *a1;
  unint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  id v13 = v4;
  if (v6)
  {
    unint64_t v8 = 0;
    uint64_t v9 = MEMORY[0x263F8EE78];
    int v14 = v3;
    while (v8 < *(void *)(v5 + 16))
    {
      char v12 = *(unsigned char *)(v5 + 32 + v8);
      char v15 = v12;
      uint64_t result = sub_249FBB6A4(&v15, v3, v2);
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v16 = v9;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_249FBAE68(0, *(void *)(v9 + 16) + 1, 1);
          uint64_t v9 = v16;
        }
        unint64_t v11 = *(void *)(v9 + 16);
        unint64_t v10 = *(void *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          uint64_t result = sub_249FBAE68(v10 > 1, v11 + 1, 1);
          uint64_t v9 = v16;
        }
        *(void *)(v9 + 16) = v11 + 1;
        *(unsigned char *)(v9 + v11 + 32) = v12;
        int v3 = v14;
      }
      if (v6 == ++v8) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_12:
    swift_bridgeObjectRelease();
    *id v13 = v9;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249FB8AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger;
  swift_beginAccess();
  sub_249F7AA94(v9, (uint64_t)v8);
  uint64_t v10 = sub_24A056538();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_249F9F8CC((uint64_t)v8);
  sub_249FB8CA4();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_249FBAF94((uint64_t)v6, v9);
  return swift_endAccess();
}

void sub_249FB8CA4()
{
  sub_24A056528();
  swift_retain_n();
  oslog = sub_24A056518();
  os_log_type_t v0 = sub_24A0577B8();
  if (os_log_type_enabled(oslog, v0))
  {
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    uint64_t v2 = swift_slowAlloc();
    uint64_t v6 = v2;
    *(_DWORD *)uint64_t v1 = 136446210;
    uint64_t v3 = sub_249FBAFFC();
    sub_249F782DC(v3, v4, &v6);
    sub_24A057978();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249F61000, oslog, v0, "%{public}s: ***** MUST SETUP ClockLogger before using its loggers. Call ClockLogger.add(...) to do this *****", v1, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5BA360](v2, -1, -1);
    MEMORY[0x24C5BA360](v1, -1, -1);
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_249FB8E70(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A056538();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *a1;
  uint64_t v12 = OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind;
  int v13 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind);
  if (v13 == 5 || (uint64_t result = sub_24A012094(*a1, v13), (result & 1) == 0))
  {
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
    swift_beginAccess();
    sub_249F7AA94(v15, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_249FB8AA8((uint64_t)v10);
      sub_249F9F8CC((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    }
    swift_retain_n();
    uint64_t v16 = sub_24A056518();
    int v17 = sub_24A0577B8();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      uint64_t v38 = v12;
      os_log_t v39 = v16;
      uint64_t v40 = v8;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v36 = v19;
      *(_DWORD *)uint64_t v18 = 136446722;
      v43[0] = 0;
      v43[1] = 0xE000000000000000;
      uint64_t v44 = v19;
      sub_24A057A78();
      swift_bridgeObjectRelease();
      strcpy((char *)v43, "[ClockLogger: ");
      HIBYTE(v43[1]) = -18;
      unint64_t v41 = sub_249FB9490();
      uint64_t v42 = v20;
      sub_24A057438();
      sub_249FB9BBC();
      sub_24A057438();
      swift_bridgeObjectRelease();
      sub_24A057438();
      swift_bridgeObjectRelease();
      sub_24A057438();
      v43[0] = sub_249F782DC(v43[0], v43[1], &v44);
      sub_24A057978();
      swift_release_n();
      uint64_t result = swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x6C617469676964;
      int v37 = v17;
      switch(v11)
      {
        case 0:
          goto LABEL_15;
        case 1:
          uint64_t v21 = 0xE600000000000000;
          uint64_t v22 = 0x676F6C616E61;
          goto LABEL_15;
        case 2:
          uint64_t v21 = 0xE500000000000000;
          uint64_t v22 = 0x646C726F77;
          goto LABEL_15;
        case 3:
          uint64_t v21 = 0xE500000000000000;
          uint64_t v22 = 0x72616C6F73;
          goto LABEL_15;
        case 4:
          uint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 2036427888;
LABEL_15:
          v43[0] = v22;
          v43[1] = v21;
          sub_249F823CC();
          uint64_t v23 = sub_24A0579A8();
          unint64_t v25 = v24;
          swift_bridgeObjectRelease();
          v43[0] = sub_249F782DC(v23, v25, &v44);
          sub_24A057978();
          swift_bridgeObjectRelease();
          uint64_t v26 = *(unsigned __int8 *)(v2 + v38);
          *(_WORD *)(v18 + 22) = 2082;
          uint64_t v27 = 0xE700000000000000;
          uint64_t v28 = 0x6C617469676964;
          unint64_t v29 = 0xE600000000000000;
          uint64_t v30 = 0x3E656E6F4E3CLL;
          os_log_type_t v31 = v37;
          switch(v26)
          {
            case 1:
              uint64_t v27 = 0xE600000000000000;
              uint64_t v28 = 0x676F6C616E61;
              goto LABEL_20;
            case 2:
              uint64_t v27 = 0xE500000000000000;
              uint64_t v28 = 0x646C726F77;
              goto LABEL_20;
            case 3:
              uint64_t v27 = 0xE500000000000000;
              uint64_t v28 = 0x72616C6F73;
              goto LABEL_20;
            case 4:
              uint64_t v27 = 0xE400000000000000;
              uint64_t v28 = 2036427888;
              goto LABEL_20;
            case 5:
              goto LABEL_21;
            default:
LABEL_20:
              v43[0] = v28;
              v43[1] = v27;
              uint64_t v30 = sub_24A0579A8();
              unint64_t v29 = v32;
              swift_bridgeObjectRelease();
LABEL_21:
              v43[0] = sub_249F782DC(v30, v29, &v44);
              sub_24A057978();
              swift_release_n();
              swift_bridgeObjectRelease();
              os_log_t v33 = v39;
              _os_log_impl(&dword_249F61000, v39, v31, "%{public}s: Specific clock face changed from '%{public}s' to '%{public}s'\nThe face this process is serving should never change.", (uint8_t *)v18, 0x20u);
              uint64_t v34 = v36;
              swift_arrayDestroy();
              MEMORY[0x24C5BA360](v34, -1, -1);
              MEMORY[0x24C5BA360](v18, -1, -1);

              uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v10, v7);
              break;
          }
          break;
        default:
          return result;
      }
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  return result;
}

unint64_t sub_249FB9490()
{
  unint64_t result = 0xD000000000000015;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind) != 5)
  {
    sub_24A057438();
    sub_249F823CC();
    sub_24A0579A8();
    swift_bridgeObjectRelease();
    sub_24A057438();
    swift_bridgeObjectRelease();
    sub_24A057438();
    return 0xD000000000000015;
  }
  return result;
}

void sub_249FB95EC(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A056538();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *a1;
  if (v11 != 2)
  {
    uint64_t v12 = OBJC_IVAR____TtC11ClockPoster11ClockLogger_host;
    int v13 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host);
    if (v13 == 2) {
      goto LABEL_3;
    }
    if (v11) {
      uint64_t v15 = 0x746E6569626D61;
    }
    else {
      uint64_t v15 = 7368801;
    }
    if (v11) {
      unint64_t v16 = 0xE700000000000000;
    }
    else {
      unint64_t v16 = 0xE300000000000000;
    }
    if (v13) {
      uint64_t v17 = 0x746E6569626D61;
    }
    else {
      uint64_t v17 = 7368801;
    }
    if (v13) {
      unint64_t v18 = 0xE700000000000000;
    }
    else {
      unint64_t v18 = 0xE300000000000000;
    }
    BOOL v19 = v15 == v17 && v16 == v18;
    if (v19)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    char v20 = sub_24A057D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
LABEL_3:
      if (qword_26B16F9B8 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
      swift_beginAccess();
      sub_249F7AA94(v14, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_249FB8AA8((uint64_t)v10);
        sub_249F9F8CC((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      }
      swift_retain_n();
      uint64_t v21 = sub_24A056518();
      int v22 = sub_24A0577B8();
      if (os_log_type_enabled(v21, (os_log_type_t)v22))
      {
        int v43 = v22;
        os_log_t v44 = v21;
        uint64_t v45 = v8;
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v42 = v24;
        *(_DWORD *)uint64_t v23 = 136446722;
        v48[0] = 0;
        v48[1] = 0xE000000000000000;
        uint64_t v49 = v24;
        sub_24A057A78();
        swift_bridgeObjectRelease();
        strcpy((char *)v48, "[ClockLogger: ");
        HIBYTE(v48[1]) = -18;
        uint64_t v41 = v12;
        unint64_t v46 = sub_249FB9490();
        uint64_t v47 = v25;
        sub_24A057438();
        sub_249FB9BBC();
        sub_24A057438();
        swift_bridgeObjectRelease();
        sub_24A057438();
        swift_bridgeObjectRelease();
        sub_24A057438();
        v48[0] = sub_249F782DC(v48[0], v48[1], &v49);
        sub_24A057978();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        uint64_t v26 = 0x746E6569626D61;
        if (v11)
        {
          uint64_t v27 = 0xE700000000000000;
        }
        else
        {
          uint64_t v26 = 7368801;
          uint64_t v27 = 0xE300000000000000;
        }
        v48[0] = v26;
        v48[1] = v27;
        sub_249F823CC();
        uint64_t v28 = sub_24A0579A8();
        unint64_t v30 = v29;
        swift_bridgeObjectRelease();
        v48[0] = sub_249F782DC(v28, v30, &v49);
        sub_24A057978();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2082;
        int v31 = *(unsigned __int8 *)(v2 + v41);
        if (v31 == 2)
        {
          unint64_t v32 = 0xE600000000000000;
          uint64_t v33 = 0x3E656E6F4E3CLL;
        }
        else
        {
          BOOL v19 = (v31 & 1) == 0;
          uint64_t v34 = 0x746E6569626D61;
          if (v19)
          {
            uint64_t v34 = 7368801;
            uint64_t v35 = 0xE300000000000000;
          }
          else
          {
            uint64_t v35 = 0xE700000000000000;
          }
          v48[0] = v34;
          v48[1] = v35;
          uint64_t v33 = sub_24A0579A8();
          unint64_t v32 = v36;
          swift_bridgeObjectRelease();
        }
        os_log_type_t v37 = v43;
        v48[0] = sub_249F782DC(v33, v32, &v49);
        sub_24A057978();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v38 = v44;
        _os_log_impl(&dword_249F61000, v44, v37, "%{public}s: Host cannot change for life of process - trying to change '%{public}s' to '%{public}s'", (uint8_t *)v23, 0x20u);
        uint64_t v39 = v42;
        swift_arrayDestroy();
        MEMORY[0x24C5BA360](v39, -1, -1);
        MEMORY[0x24C5BA360](v23, -1, -1);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v7);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
}

uint64_t sub_249FB9BBC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host) != 2)
  {
    sub_249F823CC();
    sub_24A0579A8();
    swift_bridgeObjectRelease();
  }
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles;
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    do
    {
      ++v3;
      sub_249F823CC();
      sub_24A0579A8();
      swift_bridgeObjectRelease();
      sub_24A057438();
      swift_bridgeObjectRelease();
      sub_24A057438();
      swift_bridgeObjectRelease();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_24A057438();
  return 0;
}

uint64_t ClockLogger.deinit()
{
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClockLogger.__deallocating_deinit()
{
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private);
  sub_249F9F8CC(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_249FB9F34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269750580);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249FBB0FC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_249FBA044(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269750588);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      int v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      int v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_249FBB1E8(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_249FBA150(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269750590);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4]) {
          memmove(v12, a4 + 4, 152 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_249FBB2D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FBA27C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249FBA9B4(a1, a2, a3, a4, &qword_269750560, type metadata accessor for WorldViewModel.Pin, type metadata accessor for WorldViewModel.Pin);
}

void *sub_249FBA2A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269750468);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249FBB0FC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_249FBA3B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA620(a1, a2, a3, a4, &qword_269750488, &qword_269750490);
}

void *sub_249FBA3C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA860(a1, a2, a3, a4, &qword_269750480, &qword_269750598);
}

void *sub_249FBA3D8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA3F0(a1, a2, a3, a4, &qword_2697505A0);
}

void *sub_249FBA3E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA3F0(a1, a2, a3, a4, &qword_2697504B0);
}

void *sub_249FBA3F0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      void v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249FBB3C8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_249FBA4FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697505C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249FBB3C8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_249FBA60C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA620(a1, a2, a3, a4, &qword_2697505B8, &qword_2697505C0);
}

void *sub_249FBA620(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      unint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      unint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249FBB4B4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_249FBA73C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA620(a1, a2, a3, a4, &qword_2697505A8, &qword_2697505B0);
}

char *sub_249FBA750(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B16FAC0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_249FBB5BC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_249FBA84C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_249FBA860(a1, a2, a3, a4, &qword_26B16F9C8, &qword_26B16FAA0);
}

void *sub_249FBA860(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      void v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_249FBC210(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FBA990(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249FBA9B4(a1, a2, a3, a4, &qword_2697505D0, type metadata accessor for ColorProviderPoint, type metadata accessor for ColorProviderPoint);
}

uint64_t sub_249FBA9B4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24A057BB8();
    __break(1u);
    return result;
  }
  _OWORD v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_249FBC31C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_249FBAC34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_249FBA9B4(a1, a2, a3, a4, &qword_269750568, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

void *sub_249FBAC58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269750570);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_249FBC478(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FBAD68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A01F80C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAD88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A01F978(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249FBADA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A01F98C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBADC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A01FB14(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBADE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A01FC80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAE08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A020020(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_249FBAE28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A0201DC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAE48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A02033C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAE68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A02049C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAE88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A0205EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAEA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A020758(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_249FBAEC8@<X0>(void *a1@<X8>)
{
  swift_bridgeObjectRetain();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  uint64_t result = sub_24A057BA8();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

uint64_t sub_249FBAF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FBAFFC()
{
  sub_24A057A78();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[ClockLogger: ");
  HIBYTE(v1[1]) = -18;
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }
  sub_249FB9490();
  sub_24A057438();
  sub_249FB9BBC();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v1[0];
}

char *sub_249FBB0FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24A057C18();
  __break(1u);
  return result;
}

char *sub_249FBB1E8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t sub_249FBB2D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 152 * a1 + 32;
    unint64_t v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

char *sub_249FBB3C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t sub_249FBB4B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

char *sub_249FBB5BC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t sub_249FBB6A4(unsigned char *a1, int a2, uint64_t a3)
{
  uint64_t v44 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A056538();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a1;
  if (v13 == 1) {
    uint64_t v14 = 0x7265646E6572;
  }
  else {
    uint64_t v14 = 0x657461647075;
  }
  if (*a1) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 1953064037;
  }
  if (*a1) {
    unint64_t v16 = 0xE600000000000000;
  }
  else {
    unint64_t v16 = 0xE400000000000000;
  }
  int v46 = a2;
  if ((_BYTE)a2)
  {
    if (a2 == 1) {
      uint64_t v17 = 0x7265646E6572;
    }
    else {
      uint64_t v17 = 0x657461647075;
    }
    unint64_t v18 = 0xE600000000000000;
  }
  else
  {
    unint64_t v18 = 0xE400000000000000;
    uint64_t v17 = 1953064037;
  }
  uint64_t v45 = v10;
  if (v15 == v17 && v16 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_24A057D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_32;
    }
  }
  if (qword_26B16F9B8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
  swift_beginAccess();
  sub_249F7AA94(v20, (uint64_t)v8);
  uint64_t v21 = v47;
  uint64_t v22 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v8, 1, v45) == 1)
  {
    sub_249FB8AA8((uint64_t)v12);
    sub_249F9F8CC((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v12, v8, v22);
  }
  swift_retain_n();
  unint64_t v23 = sub_24A056518();
  os_log_type_t v24 = sub_24A057798();
  if (!os_log_type_enabled(v23, v24))
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v22);
LABEL_32:
    if (!v13) {
      goto LABEL_44;
    }
    goto LABEL_33;
  }
  uint64_t v43 = v3;
  uint64_t v25 = swift_slowAlloc();
  uint64_t v42 = swift_slowAlloc();
  uint64_t v50 = v42;
  *(_DWORD *)uint64_t v25 = 136446466;
  uint64_t v26 = sub_249FBAFFC();
  uint64_t v48 = sub_249F782DC(v26, v27, &v50);
  sub_24A057978();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 12) = 2082;
  if ((_BYTE)v46)
  {
    uint64_t v28 = 0x7265646E6572;
    if (v46 != 1) {
      uint64_t v28 = 0x657461647075;
    }
    unint64_t v29 = 0xE600000000000000;
  }
  else
  {
    unint64_t v29 = 0xE400000000000000;
    uint64_t v28 = 1953064037;
  }
  uint64_t v48 = v28;
  unint64_t v49 = v29;
  sub_249F823CC();
  uint64_t v34 = sub_24A0579A8();
  unint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_249F782DC(v34, v36, &v50);
  sub_24A057978();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_249F61000, v23, v24, "%{public}s: Removing role from logging: '%{public}s'", (uint8_t *)v25, 0x16u);
  uint64_t v37 = v42;
  swift_arrayDestroy();
  MEMORY[0x24C5BA360](v37, -1, -1);
  MEMORY[0x24C5BA360](v25, -1, -1);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v45);
  if (!v13)
  {
LABEL_44:
    unint64_t v30 = 0xE400000000000000;
    uint64_t v31 = 1953064037;
    int v32 = v46;
    if (!(_BYTE)v46) {
      goto LABEL_45;
    }
LABEL_37:
    unint64_t v33 = 0xE600000000000000;
    if (v32 == 1)
    {
      if (v31 != 0x7265646E6572) {
        goto LABEL_48;
      }
    }
    else if (v31 != 0x657461647075)
    {
      goto LABEL_48;
    }
    goto LABEL_46;
  }
LABEL_33:
  unint64_t v30 = 0xE600000000000000;
  if (v13 != 1)
  {
    uint64_t v31 = 0x657461647075;
    int v32 = v46;
    if (!(_BYTE)v46) {
      goto LABEL_45;
    }
    goto LABEL_37;
  }
  uint64_t v31 = 0x7265646E6572;
  int v32 = v46;
  if ((_BYTE)v46) {
    goto LABEL_37;
  }
LABEL_45:
  unint64_t v33 = 0xE400000000000000;
  if (v31 != 1953064037)
  {
LABEL_48:
    char v39 = sub_24A057D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v38 = v39 ^ 1;
    return v38 & 1;
  }
LABEL_46:
  if (v30 != v33) {
    goto LABEL_48;
  }
  swift_bridgeObjectRelease_n();
  char v38 = 0;
  return v38 & 1;
}

unint64_t sub_249FBBC60()
{
  unint64_t result = qword_269750530;
  if (!qword_269750530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750530);
  }
  return result;
}

uint64_t sub_249FBBCB4()
{
  return sub_249F6EE60(&qword_269750538, &qword_269750540);
}

unint64_t sub_249FBBCF4()
{
  unint64_t result = qword_269750548;
  if (!qword_269750548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750548);
  }
  return result;
}

uint64_t sub_249FBBD48()
{
  return sub_249F6EE60(&qword_269750550, &qword_269750558);
}

uint64_t sub_249FBBD84()
{
  return type metadata accessor for ClockLogger();
}

uint64_t type metadata accessor for ClockLogger()
{
  uint64_t result = qword_26B16FA90;
  if (!qword_26B16FA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249FBBDD8()
{
  sub_249FBBF14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ClockLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ClockLogger);
}

uint64_t dispatch thunk of ClockLogger.add(role:host:lifeCycleOfProcessDedicatedTo:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ClockLogger.remove(role:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ClockLogger.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

void sub_249FBBF14()
{
  if (!qword_26B16FAB0)
  {
    sub_24A056538();
    unint64_t v0 = sub_24A057968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B16FAB0);
    }
  }
}

uint64_t getEnumTagSinglePayload for ClockLogger.Host(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClockLogger.Host(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FBC0C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_249FBC0F0(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClockLogger.Host()
{
  return &type metadata for ClockLogger.Host;
}

unsigned char *storeEnumTagSinglePayload for ClockLogger.Role(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FBC1D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockLogger.Role()
{
  return &type metadata for ClockLogger.Role;
}

uint64_t sub_249FBC210(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t sub_249FBC31C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t sub_249FBC478(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269750578);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

id sub_249FBC734()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RollingClockView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_249FBC7FC()
{
  return type metadata accessor for RollingClockView();
}

uint64_t type metadata accessor for RollingClockView()
{
  uint64_t result = qword_2697505E8;
  if (!qword_2697505E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249FBC850()
{
  uint64_t result = sub_24A0563F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_249FBC8FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (void *)(a1 + v6);
    int v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_24A0567D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *unint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_249FBCA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  unint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24A0567D8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    void *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_249FBCAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_249F6E790(a1 + v7, &qword_26974FAD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24A0567D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_249FBCBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  char v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24A0567D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_249FBCCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_249F6E790(a1 + v7, &qword_26974FAD0);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_24A0567D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_249FBCDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_249FBCDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t type metadata accessor for WorldClockFace(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_269750600);
}

void sub_249FBCE24()
{
  sub_249FBCEBC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_249FBCEBC()
{
  if (!qword_269750610)
  {
    sub_24A0567D8();
    unint64_t v0 = sub_24A056688();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269750610);
    }
  }
}

uint64_t sub_249FBCF14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FBCF30@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + 120);
  return swift_retain();
}

uint64_t sub_249FBCFDC()
{
  return swift_release();
}

uint64_t sub_249FBD0BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  swift_beginAccess();
  return sub_249F6E6C8(v4, a2, &qword_2697515A0);
}

uint64_t sub_249FBD190(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F6E6C8(a1, (uint64_t)v6, &qword_2697515A0);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v6, &qword_2697515A0);
}

uint64_t sub_249FBD2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750630);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (uint64_t *)((char *)&v46 - v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750638);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v54 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v52 = (uint64_t *)((char *)&v46 - v10);
  uint64_t v50 = sub_24A0567D8();
  uint64_t v11 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750640);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750648);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v57 = (uint64_t)&v46 - v20;
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for WorldViewModel(0);
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  uint64_t v22 = sub_24A056698();
  uint64_t v58 = KeyPath;
  char v59 = 0;
  uint64_t v60 = v22;
  char v61 = v23 & 1;
  uint64_t v47 = a1;
  char v24 = *(unsigned char *)(a1 + 8);
  uint64_t v25 = swift_retain();
  sub_24A02FD20(v25, v24);
  swift_release();
  sub_249FC707C();
  sub_24A056DF8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = swift_getKeyPath();
  unint64_t v27 = v48;
  uint64_t v28 = v50;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v48, *MEMORY[0x263F18DC8], v50);
  unint64_t v29 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750658);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v29 + *(int *)(v30 + 28), v27, v28);
  uint64_t *v29 = v26;
  uint64_t v31 = v49;
  uint64_t v32 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v18, v14, v51);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  uint64_t v33 = v57;
  sub_249F6E664((uint64_t)v18, v57, &qword_269750648);
  uint64_t v34 = sub_24A056AE8();
  uint64_t v35 = (uint64_t)v52;
  *uint64_t v52 = v34;
  *(void *)(v35 + 8) = 0;
  *(unsigned char *)(v35 + 16) = 1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750660);
  uint64_t v37 = v47;
  sub_249FBD8CC(v47, v35 + *(int *)(v36 + 44));
  uint64_t v38 = sub_24A056AE8();
  uint64_t v39 = (uint64_t)v53;
  *uint64_t v53 = v38;
  *(void *)(v39 + 8) = 0;
  *(unsigned char *)(v39 + 16) = 1;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750668);
  sub_249FBE12C(v37, (void *)(v39 + *(int *)(v40 + 44)));
  sub_249F6E6C8(v33, (uint64_t)v18, &qword_269750648);
  uint64_t v41 = v54;
  sub_249F6E6C8(v35, v54, &qword_269750638);
  uint64_t v42 = v55;
  sub_249F6E6C8(v39, v55, &qword_269750630);
  uint64_t v43 = v56;
  sub_249F6E6C8((uint64_t)v18, v56, &qword_269750648);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750670);
  sub_249F6E6C8(v41, v43 + *(int *)(v44 + 48), &qword_269750638);
  sub_249F6E6C8(v42, v43 + *(int *)(v44 + 64), &qword_269750630);
  sub_249F6E790(v39, &qword_269750630);
  sub_249F6E790(v35, &qword_269750638);
  sub_249F6E790(v57, &qword_269750648);
  sub_249F6E790(v42, &qword_269750630);
  sub_249F6E790(v41, &qword_269750638);
  return sub_249F6E790((uint64_t)v18, &qword_269750648);
}

uint64_t sub_249FBD87C()
{
  return sub_24A056978();
}

uint64_t sub_249FBD8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249FC72A8(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

uint64_t sub_249FBD8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WorldClockFace(0);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = sub_24A0567D8();
  uint64_t v6 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750748);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v41 = &v25[-v13];
  sub_24A0571A8();
  sub_24A056828();
  uint64_t v32 = v56;
  uint64_t v33 = v58;
  uint64_t v34 = v60;
  uint64_t v35 = v62;
  uint64_t v36 = v64;
  uint64_t v38 = v66;
  uint64_t v40 = v68;
  uint64_t v39 = v69;
  char v55 = 1;
  char v53 = v57;
  char v51 = v59;
  char v49 = v61;
  char v47 = v63;
  char v45 = v65;
  unsigned __int8 v43 = v67;
  sub_24A02FD44((uint64_t)v8);
  sub_249FC8590(a1, (uint64_t)&v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WorldClockFace);
  unint64_t v14 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v15 = swift_allocObject();
  sub_249FC71E8((uint64_t)&v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v15 + v14, type metadata accessor for WorldClockFace);
  *(void *)uint64_t v11 = sub_24A056A68();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750750);
  sub_249FC04FC((uint64_t)v8, (void (*)(uint64_t))sub_249FC75CC, v15, (uint64_t)&v11[*(int *)(v16 + 44)]);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v37);
  uint64_t v17 = v41;
  sub_249F6E664((uint64_t)v11, (uint64_t)v41, &qword_269750748);
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v37 = v70;
  LODWORD(v31) = v71;
  uint64_t v30 = v72;
  int v29 = v73;
  uint64_t v28 = v74;
  uint64_t v27 = v75;
  LOBYTE(v15) = v55;
  char v18 = v53;
  LOBYTE(v6) = v51;
  LOBYTE(v8) = v49;
  char v19 = v47;
  LOBYTE(v14) = v45;
  int v26 = v43;
  sub_249F6E6C8((uint64_t)v17, (uint64_t)v11, &qword_269750748);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)v54;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)&v54[3];
  *(void *)(a2 + 16) = v32;
  *(unsigned char *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 25) = *(_DWORD *)v52;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v52[3];
  *(void *)(a2 + 32) = v33;
  *(unsigned char *)(a2 + 40) = v6;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v50;
  *(void *)(a2 + 48) = v34;
  *(unsigned char *)(a2 + 56) = (_BYTE)v8;
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v48;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v48[3];
  *(void *)(a2 + 64) = v35;
  *(unsigned char *)(a2 + 72) = v19;
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v46[3];
  *(void *)(a2 + 80) = v36;
  *(unsigned char *)(a2 + 88) = v14;
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v44;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v44[3];
  *(void *)(a2 + 96) = v38;
  *(unsigned char *)(a2 + 104) = v26;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v42[3];
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v42;
  uint64_t v20 = v39;
  *(void *)(a2 + 112) = v40;
  *(void *)(a2 + 120) = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750758);
  sub_249F6E6C8((uint64_t)v11, a2 + *(int *)(v21 + 48), &qword_269750748);
  uint64_t v22 = a2 + *(int *)(v21 + 64);
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  *(void *)(v22 + 16) = v37;
  *(unsigned char *)(v22 + 24) = v31;
  *(void *)(v22 + 32) = v30;
  *(unsigned char *)(v22 + 40) = v29;
  uint64_t v23 = v27;
  *(void *)(v22 + 48) = v28;
  *(void *)(v22 + 56) = v23;
  sub_249F6E790((uint64_t)v41, &qword_269750748);
  return sub_249F6E790((uint64_t)v11, &qword_269750748);
}

uint64_t sub_249FBDF18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Dashboard(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - v6;
  type metadata accessor for WorldViewModel(0);
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  *(void *)uint64_t v4 = sub_24A056698();
  v4[8] = v8 & 1;
  uint64_t v9 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  *uint64_t v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  swift_storeEnumTagMultiPayload();
  *(void *)&v4[*(int *)(v2 + 24)] = 0x3FD51EB851EB851FLL;
  sub_249FC71E8((uint64_t)v4, (uint64_t)v7, type metadata accessor for Dashboard);
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v10 = swift_retain();
  sub_24A02FD20(v10, a1);
  swift_release();
  sub_249FC7034(&qword_269750770, (void (*)(uint64_t))type metadata accessor for Dashboard);
  sub_24A056DF8();
  swift_release();
  return sub_249FC765C((uint64_t)v7, type metadata accessor for Dashboard);
}

uint64_t sub_249FBE12C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned __int8 v67 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v58 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for WorldClockFace(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = sub_24A0567D8();
  uint64_t v10 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750678);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v51[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750680);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  char v57 = &v51[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750688) - 8;
  MEMORY[0x270FA5388](v60);
  char v59 = &v51[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v69 = &v51[-v21];
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v66 = v77;
  int v65 = v78;
  uint64_t v64 = v79;
  int v63 = v80;
  uint64_t v61 = v82;
  uint64_t v62 = v81;
  sub_24A02FD44((uint64_t)v12);
  sub_249FC8590(a1, (uint64_t)&v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WorldClockFace);
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = swift_allocObject();
  sub_249FC71E8((uint64_t)&v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v23 + v22, type metadata accessor for WorldClockFace);
  *(void *)uint64_t v15 = sub_24A056A68();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750690);
  sub_249FC0DD4((uint64_t)v12, (void (*)(uint64_t))sub_249FC7138, v23, (uint64_t)&v15[*(int *)(v24 + 44)]);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v56);
  uint64_t v25 = sub_24A0571E8();
  char v26 = *(unsigned char *)(a1 + 8);
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_24A02FD20(v27, v26);
  swift_release();
  swift_getKeyPath();
  uint64_t v83 = (unsigned char *)v28;
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v29 = v28 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  swift_beginAccess();
  uint64_t v30 = v58;
  sub_249F6E6C8(v29, (uint64_t)v58, &qword_2697515A0);
  swift_release();
  uint64_t v31 = *(int *)(v17 + 44);
  uint64_t v32 = (uint64_t)v57;
  uint64_t v33 = (uint64_t *)&v57[v31];
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC60);
  sub_249F6E6C8((uint64_t)v30, (uint64_t)v33 + *(int *)(v34 + 36), &qword_2697515A0);
  *uint64_t v33 = v25;
  sub_249F6E6C8((uint64_t)v15, v32, &qword_269750678);
  sub_249F6E790((uint64_t)v30, &qword_2697515A0);
  sub_249F6E790((uint64_t)v15, &qword_269750678);
  uint64_t v35 = sub_24A0571E8();
  LOBYTE(v30) = *(unsigned char *)(a1 + 8);
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_24A02FD20(v36, (char)v30);
  swift_release();
  swift_getKeyPath();
  uint64_t v83 = (unsigned char *)v37;
  sub_24A056478();
  swift_release();
  uint64_t v38 = v37 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  uint64_t v39 = v67;
  sub_249F6E6C8(v38, (uint64_t)v67, &qword_269750050);
  swift_release();
  uint64_t v40 = (uint64_t)v59;
  uint64_t v41 = (uint64_t *)&v59[*(int *)(v60 + 44)];
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750698);
  sub_249F6E6C8((uint64_t)v39, (uint64_t)v41 + *(int *)(v42 + 36), &qword_269750050);
  uint64_t *v41 = v35;
  sub_249F6E6C8(v32, v40, &qword_269750680);
  sub_249F6E790((uint64_t)v39, &qword_269750050);
  sub_249F6E790(v32, &qword_269750680);
  unsigned __int8 v43 = v69;
  sub_249F6E664(v40, (uint64_t)v69, &qword_269750688);
  sub_24A0571A8();
  sub_24A056828();
  unsigned __int8 v67 = v83;
  uint64_t v60 = v85;
  uint64_t v58 = v87;
  char v57 = v89;
  uint64_t v55 = v93;
  uint64_t v56 = v91;
  uint64_t v53 = v96;
  uint64_t v54 = v95;
  char v76 = 1;
  char v75 = v84;
  char v74 = v86;
  char v73 = v88;
  char v72 = v90;
  char v71 = v92;
  unsigned __int8 v70 = v94;
  sub_249F6E6C8((uint64_t)v43, v40, &qword_269750688);
  LOBYTE(v43) = v76;
  LOBYTE(v39) = v75;
  LOBYTE(v35) = v74;
  LOBYTE(v37) = v73;
  LOBYTE(v15) = v72;
  LOBYTE(v32) = v71;
  int v52 = v70;
  uint64_t v44 = v68;
  *uint64_t v68 = 0;
  *((unsigned char *)v44 + 8) = 1;
  void v44[2] = v66;
  *((unsigned char *)v44 + 24) = v65;
  uint64_t v44[4] = v64;
  *((unsigned char *)v44 + 40) = v63;
  uint64_t v45 = v61;
  v44[6] = v62;
  unsigned char v44[7] = v45;
  uint64_t v46 = v44;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697506A0);
  sub_249F6E6C8(v40, (uint64_t)v46 + *(int *)(v47 + 48), &qword_269750688);
  uint64_t v48 = (uint64_t)v46 + *(int *)(v47 + 64);
  *(void *)uint64_t v48 = 0;
  *(unsigned char *)(v48 + 8) = (_BYTE)v43;
  *(void *)(v48 + 16) = v67;
  *(unsigned char *)(v48 + 24) = (_BYTE)v39;
  *(void *)(v48 + 32) = v60;
  *(unsigned char *)(v48 + 40) = v35;
  *(void *)(v48 + 48) = v58;
  *(unsigned char *)(v48 + 56) = v37;
  *(void *)(v48 + 64) = v57;
  *(unsigned char *)(v48 + 72) = (_BYTE)v15;
  *(void *)(v48 + 80) = v56;
  *(unsigned char *)(v48 + 88) = v32;
  *(void *)(v48 + 96) = v55;
  *(unsigned char *)(v48 + 104) = v52;
  uint64_t v49 = v53;
  *(void *)(v48 + 112) = v54;
  *(void *)(v48 + 120) = v49;
  sub_249F6E790((uint64_t)v69, &qword_269750688);
  return sub_249F6E790(v40, &qword_269750688);
}

uint64_t sub_249FBE994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697506E8);
  MEMORY[0x270FA5388](v51);
  uint64_t v46 = (uint64_t *)((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v52 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A056238();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v45 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697506F0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697506F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v50 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750700);
  MEMORY[0x270FA5388](v48);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  char v21 = *(unsigned char *)(a1 + 8);
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_24A02FD20(v22, v21);
  swift_release();
  swift_getKeyPath();
  uint64_t v57 = v23;
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v24 = v23 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  sub_249F6E6C8(v24, (uint64_t)v15, &qword_269750050);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_249F6E790((uint64_t)v15, &qword_269750050);
  }
  else
  {
    sub_249FC71E8((uint64_t)v15, (uint64_t)v19, type metadata accessor for WorldViewModel.Pin);
    if ((v19[16] & 1) == 0)
    {
      *(void *)uint64_t v12 = sub_24A056A68();
      *((void *)v12 + 1) = 0;
      v12[16] = 0;
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750728);
      sub_249FBF1AC(a1, (uint64_t)&v12[*(int *)(v41 + 44)]);
      sub_249F6E6C8((uint64_t)v12, v49, &qword_269750700);
      swift_storeEnumTagMultiPayload();
      sub_249F6EE60(&qword_269750718, &qword_269750700);
      sub_249F6EE60(&qword_269750720, &qword_2697506E8);
      uint64_t v42 = (uint64_t)v50;
      sub_24A056BE8();
      sub_249F6E790((uint64_t)v12, &qword_269750700);
      sub_249FC765C((uint64_t)v19, type metadata accessor for WorldViewModel.Pin);
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750708);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
      return sub_249F6E664(v42, v55, &qword_2697506F8);
    }
    sub_249FC765C((uint64_t)v19, type metadata accessor for WorldViewModel.Pin);
  }
  char v25 = *(unsigned char *)(a1 + 8);
  uint64_t v26 = swift_retain();
  uint64_t v27 = sub_24A02FD20(v26, v25);
  swift_release();
  swift_getKeyPath();
  uint64_t v56 = v27;
  sub_24A056478();
  swift_release();
  uint64_t v28 = v27 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  swift_beginAccess();
  uint64_t v29 = v28;
  uint64_t v30 = v52;
  sub_249F6E6C8(v29, v52, &qword_2697515A0);
  swift_release();
  uint64_t v32 = v53;
  uint64_t v31 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v30, 1, v54) == 1)
  {
    sub_249F6E790(v30, &qword_2697515A0);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750708);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v55, 1, 1, v33);
  }
  else
  {
    uint64_t v35 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v45, v30, v31);
    uint64_t v36 = sub_24A056A68();
    uint64_t v37 = (uint64_t)v46;
    *uint64_t v46 = v36;
    *(void *)(v37 + 8) = 0;
    *(unsigned char *)(v37 + 16) = 0;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750710);
    sub_249FBFC74(v20, v35, v37 + *(int *)(v38 + 44));
    sub_249F6E6C8(v37, v49, &qword_2697506E8);
    swift_storeEnumTagMultiPayload();
    sub_249F6EE60(&qword_269750718, &qword_269750700);
    sub_249F6EE60(&qword_269750720, &qword_2697506E8);
    uint64_t v39 = (uint64_t)v50;
    sub_24A056BE8();
    sub_249F6E790(v37, &qword_2697506E8);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750708);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    sub_249F6E664(v39, v55, &qword_2697506F8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v35, v31);
  }
}

uint64_t sub_249FBF1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC28);
  uint64_t v93 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  unsigned __int8 v94 = (char *)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v91 = (char *)v77 - v5;
  MEMORY[0x270FA5388](v6);
  char v92 = (char *)v77 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FD70);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v89 = (uint64_t *)((char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = sub_24A056FD8();
  uint64_t v11 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (char *)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_24A056EA8();
  uint64_t v13 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v15 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v78 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750730);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v90 = (uint64_t)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  char v21 = (uint64_t *)((char *)v77 - v20);
  MEMORY[0x270FA5388](v22);
  uint64_t v97 = (uint64_t)v77 - v23;
  uint64_t v86 = sub_24A056F98();
  uint64_t v24 = sub_24A056F28();
  unsigned int v80 = *MEMORY[0x263F1B388];
  char v25 = *(void (**)(void))(v13 + 104);
  uint64_t v81 = v13 + 104;
  uint64_t v83 = (void (*)(char *, void, uint64_t))v25;
  v25(v15);
  uint64_t v26 = MEMORY[0x24C5B8780](v15, 0.8, 0.0, 0.0, 1.0);
  uint64_t v79 = a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_24A02FD20(v27, a1);
  swift_release();
  swift_getKeyPath();
  uint64_t v99 = v28;
  v77[1] = (id)sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  LODWORD(v13) = *(unsigned __int8 *)(v28 + 176);
  swift_release();
  if (v13) {
    uint64_t v29 = v26;
  }
  else {
    uint64_t v29 = v24;
  }
  swift_retain();
  swift_release();
  swift_release();
  v77[0] = self;
  double v30 = *MEMORY[0x263F81840];
  id v31 = objc_msgSend(v77[0], sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x263F81840]);
  uint64_t v32 = sub_24A056CE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = *MEMORY[0x263F1B538];
  uint64_t v85 = v11;
  uint64_t v35 = v87;
  uint64_t v36 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v87, v34, v88);
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = *(int *)(v9 + 36);
  uint64_t v39 = v89;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v89 + v38, v35, v36);
  uint64_t *v39 = v37;
  sub_249F6E6C8((uint64_t)v39, (uint64_t)v21 + *(int *)(v17 + 44), &qword_26974FD70);
  *char v21 = v86;
  v21[1] = v29;
  v21[2] = KeyPath;
  _OWORD v21[3] = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_249F6E790((uint64_t)v39, &qword_26974FD70);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v36);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_249F6E664((uint64_t)v21, v97, &qword_269750730);
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v89 = (uint64_t *)v109;
  LODWORD(v88) = v110;
  uint64_t v87 = v111;
  LODWORD(v86) = v112;
  uint64_t v85 = v113;
  uint64_t v84 = v114;
  id v40 = objc_msgSend(v77[0], sel_systemFontOfSize_weight_, 26.0, v30);
  uint64_t v41 = sub_24A056F28();
  uint64_t v42 = v78;
  v83(v78, v80, v82);
  uint64_t v43 = MEMORY[0x24C5B8780](v42, 0.6, 0.0, 0.0, 1.0);
  uint64_t v44 = v79;
  LOBYTE(v32) = *(unsigned char *)(v79 + 8);
  uint64_t v45 = swift_retain();
  uint64_t v46 = sub_24A02FD20(v45, v32);
  swift_release();
  swift_getKeyPath();
  uint64_t v99 = v46;
  sub_24A056478();
  swift_release();
  LODWORD(v42) = *(unsigned __int8 *)(v46 + 176);
  swift_release();
  if (v42) {
    uint64_t v47 = v43;
  }
  else {
    uint64_t v47 = v41;
  }
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v48 = (__CFString *)sub_24A057368();
  CTFontRef v49 = CTFontCreateWithNameAndOptions(v48, 92.0, 0, 0x20000uLL);

  type metadata accessor for RollingClockViewModel();
  sub_249FC7034(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  uint64_t v50 = sub_24A056698();
  char v52 = v51;
  swift_retain();
  id v53 = v40;
  id v54 = sub_249F7093C();

  swift_release();
  uint64_t v99 = v50;
  char v100 = v52 & 1;
  id v101 = v54;
  uint64_t v102 = v47;
  uint64_t v103 = 0;
  uint64_t v104 = 0;
  char v105 = 0;
  id v106 = v53;
  CTFontRef v107 = v49;
  __int16 v108 = 896;
  LOBYTE(v53) = *(unsigned char *)(v44 + 8);
  uint64_t v55 = swift_retain();
  uint64_t v56 = sub_24A02FD20(v55, (char)v53);
  swift_release();
  swift_getKeyPath();
  uint64_t v98 = v56;
  sub_24A056478();
  swift_release();
  swift_retain();
  swift_release();
  sub_249F82128();
  uint64_t v57 = v91;
  sub_24A056DF8();
  swift_release();
  uint64_t v58 = v102;
  uint64_t v59 = v103;
  uint64_t v60 = v104;
  uint64_t v62 = v106;
  CTFontRef v61 = v107;
  LOBYTE(v49) = v105;

  swift_release();
  sub_249F6CBB8(v58, v59, v60, (char)v49);

  uint64_t v63 = v93;
  uint64_t v64 = v92;
  uint64_t v65 = v95;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v57, v95);
  uint64_t v66 = v97;
  uint64_t v67 = v90;
  sub_249F6E6C8(v97, v90, &qword_269750730);
  uint64_t v68 = v63;
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  unsigned __int8 v70 = v94;
  v69(v94, v64, v65);
  uint64_t v71 = v96;
  sub_249F6E6C8(v67, v96, &qword_269750730);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750738);
  uint64_t v73 = v71 + *(int *)(v72 + 48);
  *(void *)uint64_t v73 = 0;
  *(unsigned char *)(v73 + 8) = 1;
  *(void *)(v73 + 16) = v89;
  *(unsigned char *)(v73 + 24) = v88;
  *(void *)(v73 + 32) = v87;
  *(unsigned char *)(v73 + 40) = v86;
  uint64_t v74 = v84;
  *(void *)(v73 + 48) = v85;
  *(void *)(v73 + 56) = v74;
  v69((char *)(v71 + *(int *)(v72 + 64)), v70, v65);
  char v75 = *(void (**)(char *, uint64_t))(v68 + 8);
  v75(v64, v65);
  sub_249F6E790(v66, &qword_269750730);
  v75(v70, v65);
  return sub_249F6E790(v67, &qword_269750730);
}

uint64_t sub_249FBFC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v86 = a3;
  uint64_t v4 = sub_24A055F08();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v83 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FD70);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = sub_24A056FD8();
  uint64_t v10 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_24A056EA8();
  uint64_t v12 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v76 = v14;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750730) - 8;
  MEMORY[0x270FA5388](v71);
  uint64_t v85 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v67 - v17);
  MEMORY[0x270FA5388](v19);
  uint64_t v74 = (uint64_t)&v67 - v20;
  uint64_t v70 = sub_24A056F98();
  uint64_t v21 = sub_24A056F28();
  unsigned int v78 = *MEMORY[0x263F1B388];
  uint64_t v22 = *(void (**)(void))(v12 + 104);
  uint64_t v79 = v12 + 104;
  uint64_t v81 = (void (*)(char *, void, uint64_t))v22;
  v22(v14);
  uint64_t v23 = MEMORY[0x24C5B8780](v14, 0.8, 0.0, 0.0, 1.0);
  uint64_t v77 = a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_24A02FD20(v24, a1);
  swift_release();
  swift_getKeyPath();
  uint64_t v88 = v25;
  uint64_t v75 = sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  LODWORD(v12) = *(unsigned __int8 *)(v25 + 176);
  swift_release();
  if (v12) {
    uint64_t v26 = v23;
  }
  else {
    uint64_t v26 = v21;
  }
  swift_retain();
  swift_release();
  swift_release();
  id v82 = self;
  double v27 = *MEMORY[0x263F81840];
  id v28 = objc_msgSend(v82, sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x263F81840]);
  uint64_t v29 = sub_24A056CE8();
  uint64_t KeyPath = swift_getKeyPath();
  id v31 = v72;
  uint64_t v32 = v73;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v72, *MEMORY[0x263F1B538], v73);
  uint64_t v33 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v9 + *(int *)(v7 + 36), v31, v32);
  *uint64_t v9 = v33;
  sub_249F6E6C8((uint64_t)v9, (uint64_t)v18 + *(int *)(v71 + 44), &qword_26974FD70);
  *uint64_t v18 = v70;
  v18[1] = v26;
  _OWORD v18[2] = KeyPath;
  v18[3] = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_249F6E790((uint64_t)v9, &qword_26974FD70);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v32);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v74;
  sub_249F6E664((uint64_t)v18, v74, &qword_269750730);
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v73 = v88;
  LODWORD(v72) = v89;
  uint64_t v71 = v90;
  LODWORD(v70) = v91;
  uint64_t v69 = v92;
  uint64_t v68 = v93;
  sub_249FA3730(v83);
  uint64_t v35 = sub_24A056D88();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  uint64_t v40 = sub_24A056F28();
  uint64_t v41 = v76;
  v81(v76, v78, v80);
  uint64_t v42 = MEMORY[0x24C5B8780](v41, 0.6, 0.0, 0.0, 1.0);
  LOBYTE(v33) = *(unsigned char *)(v77 + 8);
  uint64_t v43 = swift_retain();
  uint64_t v44 = sub_24A02FD20(v43, v33);
  swift_release();
  swift_getKeyPath();
  uint64_t v87 = v44;
  sub_24A056478();
  swift_release();
  LODWORD(v41) = *(unsigned __int8 *)(v44 + 176);
  swift_release();
  if (v41) {
    uint64_t v45 = v42;
  }
  else {
    uint64_t v45 = v40;
  }
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v87 = v45;
  uint64_t v46 = sub_24A056D28();
  uint64_t v48 = v47;
  char v50 = v49 & 1;
  sub_249F6E5D0(v35, v37, v39);
  swift_release();
  swift_bridgeObjectRelease();
  id v51 = objc_msgSend(v82, sel_systemFontOfSize_weight_, 26.0, v27);
  sub_24A056CE8();
  uint64_t v52 = sub_24A056D48();
  uint64_t v54 = v53;
  char v56 = v55;
  uint64_t v58 = v57;
  swift_release();
  char v59 = v56 & 1;
  sub_249F6E5D0(v46, v48, v50);
  swift_bridgeObjectRelease();
  uint64_t v60 = v85;
  sub_249F6E6C8(v34, v85, &qword_269750730);
  uint64_t v61 = v86;
  sub_249F6E6C8(v60, v86, &qword_269750730);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750740);
  uint64_t v63 = v61 + *(int *)(v62 + 48);
  *(void *)uint64_t v63 = 0;
  *(unsigned char *)(v63 + 8) = 1;
  *(void *)(v63 + 16) = v73;
  *(unsigned char *)(v63 + 24) = (_BYTE)v72;
  *(void *)(v63 + 32) = v71;
  *(unsigned char *)(v63 + 40) = v70;
  uint64_t v64 = v68;
  *(void *)(v63 + 48) = v69;
  *(void *)(v63 + 56) = v64;
  uint64_t v65 = v61 + *(int *)(v62 + 64);
  *(void *)uint64_t v65 = v52;
  *(void *)(v65 + 8) = v54;
  *(unsigned char *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v58;
  sub_249F6E4F8(v52, v54, v59);
  swift_bridgeObjectRetain();
  sub_249F6E790(v34, &qword_269750730);
  sub_249F6E5D0(v52, v54, v59);
  swift_bridgeObjectRelease();
  return sub_249F6E790(v60, &qword_269750730);
}

uint64_t sub_249FC04FC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750760);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v35 - v9;
  uint64_t v10 = sub_24A0567D8();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(void, __n128))(v11 + 104);
  unsigned int v39 = *MEMORY[0x263F18DC8];
  uint64_t v37 = (void (*)(char *, void, uint64_t))v15;
  uint64_t v38 = v11 + 104;
  v15(v14, v12);
  uint64_t v42 = a1;
  LOBYTE(a1) = sub_24A0567C8();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
  v36(v14, v10);
  sub_24A0571A8();
  if (a1)
  {
    sub_24A0566D8();
    *(void *)&long long v72 = 0;
    BYTE8(v72) = 1;
    *(void *)&long long v73 = v81;
    BYTE8(v73) = v82;
    *(void *)&long long v74 = v83;
    BYTE8(v74) = v84;
    long long v75 = v85;
    sub_249FC71E0((uint64_t)&v72);
  }
  else
  {
    sub_24A056828();
    LOBYTE(v49) = 1;
    LOBYTE(v93) = v82;
    char v71 = v84;
    char v70 = BYTE8(v85);
    char v69 = v87;
    char v68 = v89;
    char v67 = v91;
    *(void *)&long long v72 = 0;
    BYTE8(v72) = 1;
    *(void *)&long long v73 = v81;
    BYTE8(v73) = v82;
    *(void *)&long long v74 = v83;
    BYTE8(v74) = v84;
    *(void *)&long long v75 = v85;
    BYTE8(v75) = BYTE8(v85);
    *(void *)&long long v76 = v86;
    BYTE8(v76) = v87;
    *(void *)&long long v77 = v88;
    BYTE8(v77) = v89;
    *(void *)&long long v78 = v90;
    BYTE8(v78) = v91;
    long long v79 = v92;
    sub_249FC71D4((uint64_t)&v72);
  }
  sub_249F6E664((uint64_t)&v72, (uint64_t)&v58, &qword_2697506B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506C0);
  sub_249F6E230(&qword_2697506C8, &qword_2697506B8);
  sub_249F6E230(&qword_2697506D0, &qword_2697506C0);
  uint64_t v16 = sub_24A056BE8();
  v41(v16);
  v37(v14, v39, v10);
  char v17 = sub_24A0567C8();
  v36(v14, v10);
  sub_24A0571A8();
  if (v17)
  {
    sub_24A056828();
    char v71 = 1;
    char v70 = v94;
    char v69 = v96;
    char v68 = BYTE8(v97);
    char v67 = v99;
    char v48 = v101;
    char v47 = v103;
    *(void *)&long long v58 = 0;
    BYTE8(v58) = 1;
    *(void *)&long long v59 = v93;
    BYTE8(v59) = v94;
    *(void *)&long long v60 = v95;
    BYTE8(v60) = v96;
    *(void *)&long long v61 = v97;
    BYTE8(v61) = BYTE8(v97);
    *(void *)&long long v62 = v98;
    BYTE8(v62) = v99;
    *(void *)&long long v63 = v100;
    BYTE8(v63) = v101;
    *(void *)&long long v64 = v102;
    BYTE8(v64) = v103;
    long long v65 = v104;
    sub_249FC71E0((uint64_t)&v58);
  }
  else
  {
    sub_24A0566D8();
    *(void *)&long long v58 = 0;
    BYTE8(v58) = 1;
    *(void *)&long long v59 = v93;
    BYTE8(v59) = v94;
    *(void *)&long long v60 = v95;
    BYTE8(v60) = v96;
    long long v61 = v97;
    sub_249FC71D4((uint64_t)&v58);
  }
  sub_249F6E664((uint64_t)&v58, (uint64_t)&v49, &qword_2697506D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506B8);
  sub_249F6E230(&qword_2697506D0, &qword_2697506C0);
  sub_249F6E230(&qword_2697506C8, &qword_2697506B8);
  sub_24A056BE8();
  long long v55 = v111;
  long long v56 = v112;
  char v57 = v113;
  long long v51 = v107;
  long long v52 = v108;
  long long v53 = v109;
  long long v54 = v110;
  long long v49 = v105;
  long long v50 = v106;
  uint64_t v19 = v43;
  uint64_t v18 = v44;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v21 = v45;
  uint64_t v22 = v46;
  v20(v43, v46, v45);
  long long v64 = v78;
  long long v65 = v79;
  char v66 = v80;
  long long v60 = v74;
  long long v61 = v75;
  long long v62 = v76;
  long long v63 = v77;
  long long v58 = v72;
  long long v59 = v73;
  long long v23 = v56;
  *(_OWORD *)(a4 + 96) = v55;
  *(_OWORD *)(a4 + 112) = v23;
  *(unsigned char *)(a4 + 128) = v57;
  long long v24 = v52;
  *(_OWORD *)(a4 + 32) = v51;
  *(_OWORD *)(a4 + 48) = v24;
  long long v25 = v54;
  *(_OWORD *)(a4 + 64) = v53;
  *(_OWORD *)(a4 + 80) = v25;
  long long v26 = v50;
  *(_OWORD *)a4 = v49;
  *(_OWORD *)(a4 + 16) = v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750768);
  v20((char *)(a4 + *(int *)(v27 + 48)), v19, v21);
  uint64_t v28 = a4 + *(int *)(v27 + 64);
  long long v29 = v65;
  *(_OWORD *)(v28 + 96) = v64;
  *(_OWORD *)(v28 + 112) = v29;
  *(unsigned char *)(v28 + 128) = v66;
  long long v30 = v61;
  *(_OWORD *)(v28 + 32) = v60;
  *(_OWORD *)(v28 + 48) = v30;
  long long v31 = v63;
  *(_OWORD *)(v28 + 64) = v62;
  *(_OWORD *)(v28 + 80) = v31;
  long long v32 = v59;
  *(_OWORD *)uint64_t v28 = v58;
  *(_OWORD *)(v28 + 16) = v32;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
  v33(v22, v21);
  return ((uint64_t (*)(char *, uint64_t))v33)(v19, v21);
}

uint64_t sub_249FC0DD4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697506A8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v39 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v31 - v9;
  uint64_t v10 = sub_24A0567D8();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(void, __n128))(v11 + 104);
  unsigned int v35 = *MEMORY[0x263F18DC8];
  uint64_t v33 = (void (*)(char *, void, uint64_t))v15;
  uint64_t v34 = v11 + 104;
  v15(v14, v12);
  uint64_t v38 = a1;
  LOBYTE(a1) = sub_24A0567C8();
  long long v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v14, v10);
  sub_24A0571A8();
  if (a1)
  {
    sub_24A0566D8();
    *(void *)&long long v66 = 0;
    BYTE8(v66) = 1;
    *(void *)&long long v67 = v75;
    BYTE8(v67) = v76;
    *(void *)&long long v68 = v77;
    BYTE8(v68) = v78;
    long long v69 = v79;
    sub_249FC71E0((uint64_t)&v66);
  }
  else
  {
    sub_24A056828();
    LOBYTE(v43) = 1;
    LOBYTE(v87) = v76;
    char v65 = v78;
    char v64 = BYTE8(v79);
    char v63 = v81;
    char v62 = v83;
    char v61 = v85;
    *(void *)&long long v66 = 0;
    BYTE8(v66) = 1;
    *(void *)&long long v67 = v75;
    BYTE8(v67) = v76;
    *(void *)&long long v68 = v77;
    BYTE8(v68) = v78;
    *(void *)&long long v69 = v79;
    BYTE8(v69) = BYTE8(v79);
    *(void *)&long long v70 = v80;
    BYTE8(v70) = v81;
    *(void *)&long long v71 = v82;
    BYTE8(v71) = v83;
    *(void *)&long long v72 = v84;
    BYTE8(v72) = v85;
    long long v73 = v86;
    sub_249FC71D4((uint64_t)&v66);
  }
  sub_249F6E664((uint64_t)&v66, (uint64_t)&v52, &qword_2697506B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506C0);
  sub_249F6E230(&qword_2697506C8, &qword_2697506B8);
  sub_249F6E230(&qword_2697506D0, &qword_2697506C0);
  uint64_t v16 = sub_24A056BE8();
  v37(v16);
  v33(v14, v35, v10);
  char v17 = sub_24A0567C8();
  v32(v14, v10);
  sub_24A0571A8();
  if (v17)
  {
    sub_24A056828();
    char v65 = 1;
    char v64 = v88;
    char v63 = v90;
    char v62 = BYTE8(v91);
    char v61 = v93;
    char v42 = v95;
    char v41 = v97;
    *(void *)&long long v52 = 0;
    BYTE8(v52) = 1;
    *(void *)&long long v53 = v87;
    BYTE8(v53) = v88;
    *(void *)&long long v54 = v89;
    BYTE8(v54) = v90;
    *(void *)&long long v55 = v91;
    BYTE8(v55) = BYTE8(v91);
    *(void *)&long long v56 = v92;
    BYTE8(v56) = v93;
    *(void *)&long long v57 = v94;
    BYTE8(v57) = v95;
    *(void *)&long long v58 = v96;
    BYTE8(v58) = v97;
    long long v59 = v98;
    sub_249FC71E0((uint64_t)&v52);
  }
  else
  {
    sub_24A0566D8();
    *(void *)&long long v52 = 0;
    BYTE8(v52) = 1;
    *(void *)&long long v53 = v87;
    BYTE8(v53) = v88;
    *(void *)&long long v54 = v89;
    BYTE8(v54) = v90;
    long long v55 = v91;
    sub_249FC71D4((uint64_t)&v52);
  }
  sub_249F6E664((uint64_t)&v52, (uint64_t)&v43, &qword_2697506D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697506B8);
  sub_249F6E230(&qword_2697506D0, &qword_2697506C0);
  sub_249F6E230(&qword_2697506C8, &qword_2697506B8);
  sub_24A056BE8();
  long long v49 = v105;
  long long v50 = v106;
  char v51 = v107;
  long long v45 = v101;
  long long v46 = v102;
  long long v47 = v103;
  long long v48 = v104;
  long long v43 = v99;
  long long v44 = v100;
  uint64_t v18 = v39;
  uint64_t v19 = v40;
  sub_249F6E6C8(v40, v39, &qword_2697506A8);
  long long v58 = v72;
  long long v59 = v73;
  char v60 = v74;
  long long v54 = v68;
  long long v55 = v69;
  long long v56 = v70;
  long long v57 = v71;
  long long v52 = v66;
  long long v53 = v67;
  long long v20 = v50;
  *(_OWORD *)(a4 + 96) = v49;
  *(_OWORD *)(a4 + 112) = v20;
  *(unsigned char *)(a4 + 128) = v51;
  long long v21 = v46;
  *(_OWORD *)(a4 + 32) = v45;
  *(_OWORD *)(a4 + 48) = v21;
  long long v22 = v48;
  *(_OWORD *)(a4 + 64) = v47;
  *(_OWORD *)(a4 + 80) = v22;
  long long v23 = v44;
  *(_OWORD *)a4 = v43;
  *(_OWORD *)(a4 + 16) = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697506E0);
  sub_249F6E6C8(v18, a4 + *(int *)(v24 + 48), &qword_2697506A8);
  uint64_t v25 = a4 + *(int *)(v24 + 64);
  long long v26 = v59;
  *(_OWORD *)(v25 + 96) = v58;
  *(_OWORD *)(v25 + 112) = v26;
  *(unsigned char *)(v25 + 128) = v60;
  long long v27 = v55;
  *(_OWORD *)(v25 + 32) = v54;
  *(_OWORD *)(v25 + 48) = v27;
  long long v28 = v57;
  *(_OWORD *)(v25 + 64) = v56;
  *(_OWORD *)(v25 + 80) = v28;
  long long v29 = v53;
  *(_OWORD *)uint64_t v25 = v52;
  *(_OWORD *)(v25 + 16) = v29;
  sub_249F6E790(v19, &qword_2697506A8);
  return sub_249F6E790(v18, &qword_2697506A8);
}

uint64_t sub_249FC160C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750618);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v6 = sub_24A0571A8();
  v6[1] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750620);
  sub_249FBD2D0(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  uint64_t v9 = sub_24A0567F8();
  char v10 = sub_24A056C88();
  sub_249F6E6C8((uint64_t)v6, a1, &qword_269750618);
  uint64_t v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269750628) + 36);
  *(void *)uint64_t v11 = v9;
  *(unsigned char *)(v11 + 8) = v10;
  return sub_249F6E790((uint64_t)v6, &qword_269750618);
}

uint64_t sub_249FC16FC(uint64_t a1)
{
  uint64_t result = sub_249FC7034(&qword_26974FAE0, (void (*)(uint64_t))type metadata accessor for WorldClockFace);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FC1754@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v33 = a5;
  char v8 = a4 & 1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750798);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697507A0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v11 = sub_24A0571A8();
  v11[1] = v16;
  char v17 = (uint64_t *)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697507A8) + 44));
  LOBYTE(v35) = a2 & 1;
  LOBYTE(v34) = v8;
  sub_249FC1AD4(a1, a2 & 1, a3, v8, v17);
  uint64_t v18 = swift_retain();
  uint64_t v19 = sub_24A02FD20(v18, v8);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v35 = v19;
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_release();
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_24A02FD20(v20, v8);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v35 = v21;
  sub_24A056478();
  swift_release();
  swift_release();
  sub_24A0571A8();
  sub_24A0566D8();
  sub_249F6E6C8((uint64_t)v11, (uint64_t)v15, &qword_269750798);
  long long v22 = &v15[*(int *)(v13 + 44)];
  long long v23 = v36;
  *(_OWORD *)long long v22 = v35;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v37;
  sub_249F6E790((uint64_t)v11, &qword_269750798);
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_24A02FD20(v24, v8);
  swift_release();
  swift_getKeyPath();
  uint64_t v34 = v25;
  sub_24A056478();
  swift_release();
  uint64_t v26 = *(void *)(v25 + 144);
  swift_release();
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_24A02FD20(v27, v8);
  swift_release();
  swift_getKeyPath();
  uint64_t v34 = v28;
  sub_24A056478();
  swift_release();
  uint64_t v29 = *(void *)(v28 + 152);
  swift_release();
  uint64_t v30 = v33;
  sub_249F6E6C8((uint64_t)v15, v33, &qword_2697507A0);
  uint64_t v31 = (void *)(v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697507B0) + 36));
  *uint64_t v31 = v26;
  v31[1] = v29;
  return sub_249F6E790((uint64_t)v15, &qword_2697507A0);
}

uint64_t sub_249FC1AD4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  uint64_t v166 = a1;
  uint64_t v156 = a5;
  int v7 = a4 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697507B8);
  uint64_t v158 = *(void *)(v8 - 8);
  uint64_t v159 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v157 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v167 = (char *)&v140 - v11;
  uint64_t v162 = sub_24A056EA8();
  uint64_t v169 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v161 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A056FA8();
  uint64_t v163 = *(void *)(v13 - 8);
  uint64_t v164 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v160 = (uint64_t)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697507C0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v165 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_24A02FD20(v17, v7);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v219 = v18;
  uint64_t v19 = sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  int v20 = *(unsigned __int8 *)(v18 + 136);
  swift_release();
  int v168 = v7;
  uint64_t v170 = v19;
  if (v20 == 1)
  {
    swift_retain();
    LODWORD(v155) = a2 & 1;
    sub_249FC7EE4(v166, a2 & 1);
    uint64_t v21 = sub_24A02FD20(a3, v7);
    swift_getKeyPath();
    *(void *)&long long v219 = v21;
    sub_24A056478();
    swift_release();
    long long v22 = *(_OWORD *)(v21 + 296);
    long long v23 = *(_OWORD *)(v21 + 312);
    long long v24 = *(_OWORD *)(v21 + 264);
    long long v225 = *(_OWORD *)(v21 + 280);
    long long v226 = v22;
    long long v227 = v23;
    uint64_t v228 = *(void *)(v21 + 328);
    long long v25 = *(_OWORD *)(v21 + 232);
    long long v221 = *(_OWORD *)(v21 + 216);
    long long v222 = v25;
    long long v223 = *(_OWORD *)(v21 + 248);
    long long v224 = v24;
    long long v26 = *(_OWORD *)(v21 + 200);
    long long v219 = *(_OWORD *)(v21 + 184);
    long long v220 = v26;
    sub_249F7AF70((uint64_t)&v219);
    swift_release();
    swift_bridgeObjectRetain();
    sub_249F8B2B8((uint64_t)&v219);
    if (qword_26974F330 != -1) {
      swift_once();
    }
    id v27 = (id)qword_269752438;
    sub_24A056FF8();
    uint64_t v28 = *MEMORY[0x263F1B510];
    uint64_t v29 = sub_24A056FC8();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = (uint64_t)v165;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v165, v28, v29);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
    sub_24A056FB8();
    swift_release();
    sub_249F6E790(v31, &qword_2697507C0);
    uint64_t v33 = v163;
    uint64_t v32 = v164;
    uint64_t v34 = v160;
    (*(void (**)(uint64_t, void, uint64_t))(v163 + 104))(v160, *MEMORY[0x263F1B4B8], v164);
    uint64_t v35 = sub_24A056FE8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
    uint64_t v189 = v35;
    uint64_t v190 = 0;
    LOWORD(v191) = 1;
    BYTE2(v191) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697507C8);
    sub_249F6E230(&qword_2697507D0, &qword_2697507C8);
    sub_24A056BE8();
    uint64_t v36 = v166;
    char v37 = v155;
  }
  else
  {
    swift_retain();
    LODWORD(v164) = a2 & 1;
    sub_249FC7EE4(v166, a2 & 1);
    uint64_t v38 = sub_24A02FD20(a3, v7);
    swift_getKeyPath();
    *(void *)&long long v219 = v38;
    sub_24A056478();
    swift_release();
    long long v39 = *(_OWORD *)(v38 + 296);
    long long v40 = *(_OWORD *)(v38 + 312);
    long long v41 = *(_OWORD *)(v38 + 264);
    long long v225 = *(_OWORD *)(v38 + 280);
    long long v226 = v39;
    long long v227 = v40;
    uint64_t v228 = *(void *)(v38 + 328);
    long long v42 = *(_OWORD *)(v38 + 232);
    long long v221 = *(_OWORD *)(v38 + 216);
    long long v222 = v42;
    long long v223 = *(_OWORD *)(v38 + 248);
    long long v224 = v41;
    long long v43 = *(_OWORD *)(v38 + 200);
    long long v219 = *(_OWORD *)(v38 + 184);
    long long v220 = v43;
    sub_249F7AF70((uint64_t)&v219);
    swift_release();
    swift_bridgeObjectRetain();
    sub_249F8B2B8((uint64_t)&v219);
    if (qword_26974F330 != -1) {
      swift_once();
    }
    id v44 = (id)qword_269752438;
    sub_24A056FF8();
    uint64_t v45 = *MEMORY[0x263F1B510];
    uint64_t v46 = sub_24A056FC8();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = (uint64_t)v165;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v165, v45, v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
    uint64_t v49 = sub_24A056FB8();
    swift_release();
    sub_249F6E790(v48, &qword_2697507C0);
    uint64_t v189 = v49;
    uint64_t v190 = 0;
    LOWORD(v191) = 0;
    BYTE2(v191) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697507C8);
    sub_249F6E230(&qword_2697507D0, &qword_2697507C8);
    sub_24A056BE8();
    uint64_t v36 = v166;
    char v37 = v164;
  }
  sub_249FC7F30(v36, v37);
  swift_release();
  uint64_t v166 = *((void *)&v205 + 1);
  uint64_t v155 = v205;
  LODWORD(v165) = (unsigned __int16)v206;
  LODWORD(v164) = BYTE2(v206);
  sub_24A056F28();
  uint64_t v50 = sub_24A056F48();
  swift_release();
  char v51 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 104);
  long long v52 = v161;
  unsigned int v152 = *MEMORY[0x263F1B388];
  v169 += 104;
  uint64_t v151 = v51;
  ((void (*)(char *))v51)(v161);
  uint64_t v53 = MEMORY[0x24C5B8780](v52, 0.6, 0.0, 0.0, 1.0);
  uint64_t v54 = swift_retain();
  char v55 = v168;
  uint64_t v56 = sub_24A02FD20(v54, v168);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v219 = v56;
  sub_24A056478();
  swift_release();
  LODWORD(v52) = *(unsigned __int8 *)(v56 + 176);
  swift_release();
  if (v52) {
    uint64_t v57 = v53;
  }
  else {
    uint64_t v57 = v50;
  }
  uint64_t v163 = v57;
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v58 = swift_retain();
  char v59 = v55;
  uint64_t v60 = sub_24A02FD20(v58, v55);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v219 = v60;
  sub_24A056478();
  swift_release();
  uint64_t v61 = *(void *)(v60 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath);
  uint64_t v62 = *(void *)(v60 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 8);
  uint64_t v160 = *(void *)(v60 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 16);
  char v63 = *(unsigned char *)(v60 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 24);
  swift_bridgeObjectRetain();
  swift_release();
  if (v62)
  {
    LODWORD(v154) = v63 & 1;
    uint64_t v153 = v62;
    LODWORD(v144) = v61 & 1;
    uint64_t v64 = swift_retain();
    uint64_t v65 = sub_24A02FD20(v64, v55);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v219 = v65;
    sub_24A056478();
    swift_release();
    long long v66 = *(_OWORD *)(v65 + 296);
    long long v67 = *(_OWORD *)(v65 + 312);
    long long v68 = *(_OWORD *)(v65 + 264);
    v250[6] = *(_OWORD *)(v65 + 280);
    v250[7] = v66;
    v250[8] = v67;
    uint64_t v251 = *(void *)(v65 + 328);
    long long v69 = *(_OWORD *)(v65 + 232);
    v250[2] = *(_OWORD *)(v65 + 216);
    v250[3] = v69;
    v250[4] = *(_OWORD *)(v65 + 248);
    v250[5] = v68;
    long long v70 = *(_OWORD *)(v65 + 200);
    v250[0] = *(_OWORD *)(v65 + 184);
    v250[1] = v70;
    sub_249F7AF70((uint64_t)v250);
    swift_release();
    uint64_t v71 = swift_retain();
    uint64_t v72 = sub_24A02FD20(v71, v55);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v219 = v72;
    sub_24A056478();
    swift_release();
    double v73 = *(double *)(v72 + 160);
    double v74 = *(double *)(v72 + 168);
    swift_release();
    id v75 = sub_249F8AF84(v61 & 1, v153, v160, v154, (uint64_t)v250, 1, v73, v74);
    sub_249F8B2B8((uint64_t)v250);
    id v76 = objc_msgSend(v75, sel_CGPath);

    sub_24A056CF8();
    uint64_t v149 = v230;
    uint64_t v150 = v229;
    uint64_t v147 = v232;
    uint64_t v148 = v231;
    int v146 = v233;
    sub_24A056EF8();
    uint64_t v77 = sub_24A056F48();
    swift_release();
    sub_24A056EF8();
    uint64_t v78 = sub_24A056F48();
    swift_release();
    uint64_t v79 = swift_retain();
    uint64_t v80 = sub_24A02FD20(v79, v55);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v219 = v80;
    sub_24A056478();
    swift_release();
    LODWORD(v75) = *(unsigned __int8 *)(v80 + 176);
    swift_release();
    if (v75) {
      uint64_t v81 = v78;
    }
    else {
      uint64_t v81 = v77;
    }
    uint64_t v145 = v81;
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v82 = swift_retain();
    uint64_t v83 = sub_24A02FD20(v82, v55);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v219 = v83;
    sub_24A056478();
    swift_release();
    long long v84 = *(_OWORD *)(v83 + 296);
    long long v85 = *(_OWORD *)(v83 + 312);
    long long v86 = *(_OWORD *)(v83 + 264);
    v248[6] = *(_OWORD *)(v83 + 280);
    v248[7] = v84;
    v248[8] = v85;
    uint64_t v249 = *(void *)(v83 + 328);
    long long v87 = *(_OWORD *)(v83 + 232);
    v248[2] = *(_OWORD *)(v83 + 216);
    v248[3] = v87;
    v248[4] = *(_OWORD *)(v83 + 248);
    v248[5] = v86;
    long long v88 = *(_OWORD *)(v83 + 200);
    v248[0] = *(_OWORD *)(v83 + 184);
    v248[1] = v88;
    sub_249F7AF70((uint64_t)v248);
    swift_release();
    uint64_t v89 = swift_retain();
    uint64_t v90 = sub_24A02FD20(v89, v55);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v219 = v90;
    sub_24A056478();
    swift_release();
    double v91 = *(double *)(v90 + 160);
    double v92 = *(double *)(v90 + 168);
    swift_release();
    id v93 = sub_249F8AF84(v144, v153, v160, v154, (uint64_t)v248, 0, v91, v92);
    swift_bridgeObjectRelease();
    sub_249F8B2B8((uint64_t)v248);
    id v94 = objc_msgSend(v93, sel_CGPath);

    sub_24A056CF8();
    uint64_t v160 = v234;
    uint64_t v153 = v236;
    uint64_t v154 = v235;
    uint64_t v144 = v237;
    int v143 = v238;
    sub_24A0566A8();
    uint64_t v95 = v239;
    unsigned int v141 = v241;
    unsigned int v142 = v240;
    uint64_t v96 = v242;
    uint64_t v140 = v243;
    uint64_t v97 = v244;
    long long v98 = v161;
    uint64_t v99 = v162;
    uint64_t v100 = v152;
    long long v101 = v151;
    v151(v161, v152, v162);
    uint64_t v102 = MEMORY[0x24C5B8780](v98, 0.580392157, 0.580392157, 0.580392157, 1.0);
    v101(v98, v100, v99);
    uint64_t v103 = MEMORY[0x24C5B8780](v98, 0.6, 0.0, 0.0, 1.0);
    uint64_t v104 = swift_retain();
    uint64_t v105 = sub_24A02FD20(v104, v168);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v219 = v105;
    sub_24A056478();
    swift_release();
    LODWORD(v98) = *(unsigned __int8 *)(v105 + 176);
    swift_release();
    if (v98) {
      uint64_t v106 = v103;
    }
    else {
      uint64_t v106 = v102;
    }
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v107 = sub_249F71804();
    int64_t v108 = *(void *)(v107 + 16);
    if (v108)
    {
      uint64_t v169 = v106;
      *(void *)&long long v219 = MEMORY[0x263F8EE78];
      sub_249FBAE88(0, v108, 0);
      uint64_t v109 = v219;
      uint64_t v110 = v107 + 40;
      do
      {
        swift_retain();
        uint64_t v111 = sub_24A057158();
        uint64_t v113 = v112;
        *(void *)&long long v219 = v109;
        unint64_t v115 = *(void *)(v109 + 16);
        unint64_t v114 = *(void *)(v109 + 24);
        if (v115 >= v114 >> 1)
        {
          sub_249FBAE88(v114 > 1, v115 + 1, 1);
          uint64_t v109 = v219;
        }
        *(void *)(v109 + 16) = v115 + 1;
        uint64_t v116 = v109 + 16 * v115;
        *(void *)(v116 + 32) = v111;
        *(void *)(v116 + 40) = v113;
        v110 += 16;
        --v108;
      }
      while (v108);
      swift_bridgeObjectRelease();
      uint64_t v106 = v169;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v109 = MEMORY[0x263F8EE78];
    }
    sub_24A057248();
    sub_24A057258();
    MEMORY[0x24C5B8980](v109);
    sub_24A0567A8();
    *(_DWORD *)uint64_t v194 = *(_DWORD *)v171;
    *(_DWORD *)&v194[3] = *(_DWORD *)&v171[3];
    *(void *)&long long v172 = v160;
    *((void *)&v172 + 1) = v154;
    *(void *)&long long v173 = v153;
    *((void *)&v173 + 1) = v144;
    LOBYTE(v174) = v143;
    DWORD1(v174) = *(_DWORD *)&v171[3];
    *(_DWORD *)((char *)&v174 + 1) = *(_DWORD *)v171;
    *((void *)&v174 + 1) = v95;
    *(void *)&long long v175 = __PAIR64__(v141, v142);
    *((void *)&v175 + 1) = v96;
    *(void *)&long long v176 = v140;
    *((void *)&v176 + 1) = v97;
    *(void *)&long long v177 = v106;
    *((void *)&v177 + 1) = v245;
    long long v178 = v246;
    long long v179 = v247;
    long long v184 = v175;
    long long v183 = v174;
    long long v182 = v173;
    long long v181 = v172;
    long long v188 = v247;
    long long v187 = v246;
    long long v186 = v177;
    long long v185 = v176;
    uint64_t v189 = v160;
    uint64_t v190 = v154;
    uint64_t v191 = v153;
    uint64_t v192 = v144;
    char v193 = v143;
    uint64_t v195 = v95;
    unsigned int v196 = v142;
    unsigned int v197 = v141;
    uint64_t v198 = v96;
    uint64_t v199 = v140;
    uint64_t v200 = v97;
    uint64_t v201 = v106;
    uint64_t v202 = v245;
    long long v203 = v246;
    long long v204 = v247;
    uint64_t v118 = v149;
    uint64_t v117 = v150;
    uint64_t v120 = v147;
    uint64_t v119 = v148;
    unsigned __int8 v121 = v146;
    sub_249FC838C(v150, v149, v148, v147, v146);
    uint64_t v122 = v145;
    swift_retain();
    sub_249FC84D0((uint64_t)&v172);
    sub_249FC8530((uint64_t)&v189);
    sub_249FC84B8(v117, v118, v119, v120, v121);
    swift_release();
    *(void *)&long long v205 = v117;
    *((void *)&v205 + 1) = v118;
    uint64_t v206 = v119;
    uint64_t v207 = v120;
    unsigned __int8 v208 = v121;
    *(_DWORD *)uint64_t v209 = *(_DWORD *)v180;
    *(_DWORD *)&v209[3] = *(_DWORD *)&v180[3];
    uint64_t v210 = v122;
    long long v215 = v185;
    long long v216 = v186;
    long long v217 = v187;
    long long v218 = v188;
    long long v211 = v181;
    long long v212 = v182;
    long long v213 = v183;
    long long v214 = v184;
    CGSizeMake(*(double *)&v183, *(double *)&v184);
    sub_249F6E664((uint64_t)&v205, (uint64_t)&v219, &qword_2697507D8);
    char v59 = v168;
  }
  else
  {
    sub_249FC8270(&v205);
    sub_249F6E664((uint64_t)&v205, (uint64_t)&v219, &qword_2697507D8);
  }
  uint64_t v123 = swift_retain();
  uint64_t v124 = sub_24A02FD20(v123, v59);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v205 = v124;
  sub_24A056478();
  swift_release();
  uint64_t v125 = *(void *)(v124 + 160);
  uint64_t v126 = *(void *)(v124 + 168);
  swift_release();
  type metadata accessor for WorldViewModel(0);
  *(void *)&long long v205 = sub_24A056698();
  BYTE8(v205) = v127 & 1;
  uint64_t v206 = v125;
  uint64_t v207 = v126;
  uint64_t v128 = swift_retain();
  sub_24A02FD20(v128, v59);
  swift_release();
  sub_249FC8290();
  uint64_t v129 = v167;
  sub_24A056DF8();
  swift_release();
  swift_release();
  sub_249F6E664((uint64_t)&v219, (uint64_t)&v181, &qword_2697507D8);
  uint64_t v131 = v157;
  uint64_t v130 = v158;
  uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  uint64_t v133 = v129;
  uint64_t v134 = v159;
  v132(v157, v133, v159);
  CGMutablePathRef v135 = v156;
  uint64_t v136 = v166;
  void *v156 = v155;
  v135[1] = v136;
  *((_WORD *)v135 + 8) = (_WORD)v165;
  *((unsigned char *)v135 + 18) = v164;
  v135[3] = v163;
  sub_249F6E664((uint64_t)&v181, (uint64_t)&v189, &qword_2697507D8);
  sub_249F6E664((uint64_t)&v189, (uint64_t)(v135 + 4), &qword_2697507D8);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697507E8);
  v132((char *)v135 + *(int *)(v137 + 64), v131, v134);
  j__swift_retain();
  swift_retain();
  sub_249FC83A4(&v189, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_249FC82E4);
  uint64_t v138 = *(void (**)(char *, uint64_t))(v130 + 8);
  v138(v167, v134);
  v138(v131, v134);
  sub_249F6E664((uint64_t)&v181, (uint64_t)&v205, &qword_2697507D8);
  sub_249FC83A4(&v205, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_249FC8410);
  j__swift_release();
  return swift_release();
}

uint64_t sub_249FC2F10@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(unsigned char *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(unsigned char *)(v7 + 40) = v6;
  *a1 = sub_249FC8230;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  sub_249FC7EE4(v3, v4);

  return swift_retain();
}

uint64_t sub_249FC2FA8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  char v9 = a2 & 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FE60);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v12 = sub_24A0571A8();
  v12[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697508B8);
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_24A02FD20(v14, v9);
  swift_release();
  swift_getKeyPath();
  v21[1] = v15;
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 336);
  swift_bridgeObjectRetain();
  swift_release();
  v21[0] = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(unsigned char *)(v17 + 24) = v9;
  *(double *)(v17 + 32) = a4;
  *(double *)(v17 + 40) = a5;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697508C0);
  type metadata accessor for CLLocationCoordinate2D(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697508C8);
  sub_249F6EE60(&qword_2697508D0, &qword_2697508C0);
  sub_249FC8600(&qword_2697508D8, &qword_2697508C8, (void (*)(void))sub_249FC8848);
  sub_249FC7034(&qword_2697508E8, (void (*)(uint64_t))type metadata accessor for WorldViewModel.Pin);
  sub_24A057148();
  uint64_t v18 = sub_24A0571A8();
  sub_249F7CBF4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, INFINITY, 0, v18, v19);
  return sub_249F6E790((uint64_t)v12, &qword_26974FE60);
}

uint64_t sub_249FC32A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = (double *)(a1 + *(int *)(type metadata accessor for WorldViewModel.Pin(0) + 32));
  if (*(unsigned char *)(a1 + 17)) {
    char v9 = *(unsigned char *)(a1 + 16);
  }
  else {
    char v9 = *(unsigned char *)(a1 + 16) | 0x80;
  }
  double v10 = v8[1] - a4 * 0.5;
  double v11 = *v8 - a3 * 0.5;
  type metadata accessor for WorldViewModel(0);
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  uint64_t result = sub_24A056698();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v13 & 1;
  *(unsigned char *)(a2 + 9) = v9;
  *(double *)(a2 + 16) = v11;
  *(double *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_249FC3384@<X0>(uint64_t a1@<X8>)
{
  return sub_249FC2FA8(*(void *)v1, *(unsigned char *)(v1 + 8), a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_249FC339C@<X0>(__int16 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24A056EA8();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v61 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = a1 & 0x100;
  LODWORD(v60) = a1;
  uint64_t v69 = sub_24A056F28();
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v65 = v137;
  uint64_t v66 = v139;
  int v58 = v138;
  LODWORD(v59) = v140;
  uint64_t v67 = v142;
  uint64_t v68 = v141;
  uint64_t v72 = sub_24A0571A8();
  uint64_t v73 = v7;
  id v62 = self;
  MEMORY[0x24C5B8790](objc_msgSend(v62, sel_systemOrangeColor));
  uint64_t v8 = sub_24A056F48();
  swift_release();
  uint64_t v9 = sub_249F897E4(v8, v6 >> 7);
  uint64_t v11 = v10;
  int v12 = a1 & 1;
  LODWORD(v56) = v12;
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_24A02FD20(v13, v12);
  swift_release();
  swift_getKeyPath();
  uint64_t v103 = v14;
  uint64_t v54 = sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  int v15 = *(unsigned __int8 *)(v14 + 176);
  swift_release();
  if (v15) {
    uint64_t v16 = v11;
  }
  else {
    uint64_t v16 = v9;
  }
  uint64_t v71 = v16;
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v103 = sub_24A056EF8();
  sub_249FC8AF0();
  uint64_t v70 = sub_24A056F88();
  unsigned __int8 v134 = v58;
  unsigned __int8 v132 = v59;
  double v17 = dbl_24A05E540[v6 == 0];
  uint64_t v55 = 2 * (v6 == 0);
  uint64_t v18 = sub_24A056F28();
  uint64_t v19 = v61;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v61, *MEMORY[0x263F1B388], v64);
  uint64_t v20 = MEMORY[0x24C5B8780](v19, v17, 0.0, 0.0, 1.0);
  uint64_t v21 = swift_retain();
  char v22 = v56;
  uint64_t v23 = sub_24A02FD20(v21, v56);
  swift_release();
  swift_getKeyPath();
  uint64_t v103 = v23;
  sub_24A056478();
  swift_release();
  LODWORD(v19) = *(unsigned __int8 *)(v23 + 176);
  swift_release();
  if (v19) {
    uint64_t v24 = v20;
  }
  else {
    uint64_t v24 = v18;
  }
  uint64_t v64 = v24;
  swift_retain();
  swift_release();
  swift_release();
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v63 = v143;
  int v57 = v146;
  int v58 = v144;
  uint64_t v60 = v147;
  uint64_t v61 = v145;
  uint64_t v59 = v148;
  uint64_t v25 = MEMORY[0x24C5B8790](objc_msgSend(v62, sel_systemOrangeColor));
  uint64_t v26 = sub_249F897E4(v25, v55);
  uint64_t v28 = v27;
  uint64_t v29 = swift_retain();
  uint64_t v30 = sub_24A02FD20(v29, v22);
  swift_release();
  swift_getKeyPath();
  uint64_t v103 = v30;
  sub_24A056478();
  swift_release();
  int v31 = *(unsigned __int8 *)(v30 + 176);
  swift_release();
  if (v31) {
    uint64_t v32 = v28;
  }
  else {
    uint64_t v32 = (void *)v26;
  }
  id v62 = v32;
  swift_retain();
  swift_release();
  swift_release();
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v33 = v149;
  char v34 = v150;
  uint64_t v35 = v151;
  char v36 = v152;
  int v79 = v135;
  __int16 v80 = v136;
  LODWORD(v54) = v134;
  v78[0] = *(_DWORD *)v133;
  *(_DWORD *)((char *)v78 + 3) = *(_DWORD *)&v133[3];
  LODWORD(v55) = v132;
  v77[0] = *(_DWORD *)v131;
  *(_DWORD *)((char *)v77 + 3) = *(_DWORD *)&v131[3];
  *(_DWORD *)((char *)v76 + 3) = *(_DWORD *)&v130[3];
  v76[0] = *(_DWORD *)v130;
  __int16 v75 = v129;
  int v74 = v128;
  uint64_t v37 = v69;
  *(void *)&long long v81 = v69;
  WORD4(v81) = 256;
  HIWORD(v81) = v136;
  *(_DWORD *)((char *)&v81 + 10) = v135;
  uint64_t v39 = v65;
  uint64_t v38 = v66;
  *(void *)&long long v82 = v65;
  BYTE8(v82) = v134;
  HIDWORD(v82) = *(_DWORD *)&v133[3];
  *(_DWORD *)((char *)&v82 + 9) = *(_DWORD *)v133;
  *(void *)&long long v83 = v66;
  BYTE8(v83) = v132;
  HIDWORD(v83) = *(_DWORD *)&v131[3];
  *(_DWORD *)((char *)&v83 + 9) = *(_DWORD *)v131;
  uint64_t v41 = v67;
  uint64_t v40 = v68;
  *(void *)&long long v84 = v68;
  *((void *)&v84 + 1) = v67;
  long long v56 = xmmword_24A05E550;
  long long v85 = xmmword_24A05E550;
  LOBYTE(v86) = 1;
  DWORD1(v86) = *(_DWORD *)&v130[3];
  *(_DWORD *)((char *)&v86 + 1) = *(_DWORD *)v130;
  *((void *)&v86 + 1) = v71;
  LOWORD(v87) = 256;
  WORD3(v87) = v129;
  *(_DWORD *)((char *)&v87 + 2) = v128;
  *((void *)&v87 + 1) = v72;
  *(void *)&long long v88 = v73;
  *((void *)&v88 + 1) = v70;
  long long v89 = 0x4022000000000000uLL;
  uint64_t v90 = 0;
  long long v42 = v82;
  *(_OWORD *)a2 = v81;
  *(_OWORD *)(a2 + 16) = v42;
  long long v43 = v83;
  long long v44 = v84;
  long long v45 = v86;
  *(_OWORD *)(a2 + 64) = v85;
  *(_OWORD *)(a2 + 80) = v45;
  *(_OWORD *)(a2 + 32) = v43;
  *(_OWORD *)(a2 + 48) = v44;
  long long v46 = v87;
  long long v47 = v89;
  *(_OWORD *)(a2 + 112) = v88;
  *(_OWORD *)(a2 + 128) = v47;
  *(_OWORD *)(a2 + 96) = v46;
  char v48 = v57;
  char v49 = v58;
  char v100 = v58;
  char v98 = v57;
  char v94 = v34;
  char v92 = v36;
  *(_DWORD *)(a2 + 162) = v101;
  *(_WORD *)(a2 + 166) = v102;
  *(_DWORD *)(a2 + 177) = *(_DWORD *)v99;
  *(_DWORD *)(a2 + 180) = *(_DWORD *)&v99[3];
  char v50 = v48;
  *(_DWORD *)(a2 + 193) = *(_DWORD *)v97;
  *(_DWORD *)(a2 + 196) = *(_DWORD *)&v97[3];
  int v51 = v95;
  *(_WORD *)(a2 + 230) = v96;
  *(_DWORD *)(a2 + 226) = v51;
  LOBYTE(v51) = v94;
  *(_DWORD *)(a2 + 241) = *(_DWORD *)v93;
  *(_DWORD *)(a2 + 244) = *(_DWORD *)&v93[3];
  *(_DWORD *)(a2 + 257) = *(_DWORD *)v91;
  char v52 = v92;
  *(_DWORD *)(a2 + 260) = *(_DWORD *)&v91[3];
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = v64;
  *(_WORD *)(a2 + 160) = 256;
  *(void *)(a2 + 168) = v63;
  *(unsigned char *)(a2 + 176) = v49;
  *(void *)(a2 + 184) = v61;
  *(unsigned char *)(a2 + 192) = v50;
  *(void *)(a2 + 200) = v60;
  *(void *)(a2 + 208) = v59;
  *(void *)(a2 + 216) = v62;
  *(_WORD *)(a2 + 224) = 256;
  *(void *)(a2 + 232) = v33;
  *(unsigned char *)(a2 + 240) = v51;
  *(void *)(a2 + 248) = v35;
  *(unsigned char *)(a2 + 256) = v52;
  *(_OWORD *)(a2 + 264) = v153;
  sub_249FC8B44((uint64_t)&v81);
  uint64_t v103 = v37;
  __int16 v104 = 256;
  int v105 = v79;
  __int16 v106 = v80;
  uint64_t v107 = v39;
  char v108 = v54;
  *(_DWORD *)uint64_t v109 = v78[0];
  *(_DWORD *)&v109[3] = *(_DWORD *)((char *)v78 + 3);
  uint64_t v110 = v38;
  char v111 = v55;
  *(_DWORD *)uint64_t v112 = v77[0];
  *(_DWORD *)&v112[3] = *(_DWORD *)((char *)v77 + 3);
  uint64_t v113 = v40;
  uint64_t v114 = v41;
  long long v115 = v56;
  char v116 = 1;
  *(_DWORD *)&v117[3] = *(_DWORD *)((char *)v76 + 3);
  *(_DWORD *)uint64_t v117 = v76[0];
  uint64_t v118 = v71;
  __int16 v119 = 256;
  __int16 v121 = v75;
  int v120 = v74;
  uint64_t v122 = v72;
  uint64_t v123 = v73;
  uint64_t v124 = v70;
  uint64_t v125 = 0x4022000000000000;
  uint64_t v127 = 0;
  uint64_t v126 = 0;
  return sub_249FC8B90((uint64_t)&v103);
}

void *sub_249FC3BA8@<X0>(uint64_t a1@<X8>)
{
  __int16 v3 = *(unsigned __int8 *)(v1 + 8);
  __int16 v4 = *(unsigned __int8 *)(v1 + 9);
  uint64_t v5 = sub_24A0571A8();
  uint64_t v7 = v6;
  sub_249FC339C(v3 | (v4 << 8), (uint64_t)__src);
  uint64_t v8 = sub_24A0571B8();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  uint64_t result = memcpy((void *)(a1 + 16), __src, 0x118uLL);
  *(void *)(a1 + 296) = v8;
  *(unsigned char *)(a1 + 304) = v4;
  return result;
}

uint64_t sub_249FC3C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v70 = a1;
  uint64_t v3 = type metadata accessor for Dashboard(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v73 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v67 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (uint64_t)&v67 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v67 - v10;
  uint64_t v12 = sub_24A0567D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  int v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v67 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697507F0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697507F8);
  MEMORY[0x270FA5388](v71);
  int v74 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750800);
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A02FD44((uint64_t)v18);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F18DC8], v12);
  char v24 = sub_24A0567C8();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v15, v12);
  v25(v18, v12);
  if (v24) {
    uint64_t v26 = sub_24A056AF8();
  }
  else {
    uint64_t v26 = sub_24A056B08();
  }
  *(void *)uint64_t v21 = v26;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750808);
  sub_249FC45E0(v2, (uint64_t)&v21[*(int *)(v27 + 44)]);
  uint64_t v28 = sub_24A0571E8();
  char v29 = *(unsigned char *)(v2 + 8);
  uint64_t v30 = swift_retain();
  uint64_t v31 = sub_24A02FD20(v30, v29);
  swift_release();
  swift_getKeyPath();
  uint64_t v77 = v31;
  sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v32 = v31 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  sub_249F6E6C8(v32, (uint64_t)v11, &qword_269750050);
  swift_release();
  uint64_t v33 = (uint64_t)v74;
  char v34 = (uint64_t *)&v74[*(int *)(v71 + 36)];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750698);
  sub_249F6E6C8((uint64_t)v11, (uint64_t)v34 + *(int *)(v35 + 36), &qword_269750050);
  *char v34 = v28;
  sub_249F6E6C8((uint64_t)v21, v33, &qword_2697507F0);
  sub_249F6E790((uint64_t)v11, &qword_269750050);
  sub_249F6E790((uint64_t)v21, &qword_2697507F0);
  LOBYTE(v34) = *(unsigned char *)(v2 + 8);
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_24A02FD20(v36, (char)v34);
  swift_release();
  swift_getKeyPath();
  uint64_t v76 = v37;
  sub_24A056478();
  swift_release();
  uint64_t v38 = v37 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  uint64_t v39 = v72;
  sub_249F6E6C8(v38, v72, &qword_269750050);
  swift_release();
  uint64_t v40 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48);
  if (v41(v39, 1, v40) == 1)
  {
    sub_249F6E790(v39, &qword_269750050);
LABEL_12:
    uint64_t v58 = v73;
    sub_249FC8590(v2, v73, type metadata accessor for Dashboard);
    sub_249FC765C(v58, type metadata accessor for Dashboard);
    uint64_t v56 = v68;
    uint64_t v55 = (uint64_t)v69;
    uint64_t v57 = (uint64_t)v74;
    goto LABEL_13;
  }
  sub_249F91FCC();
  uint64_t v43 = v42;
  sub_249FC765C(v39, type metadata accessor for WorldViewModel.Pin);
  if (!v43) {
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = v2;
  uint64_t v45 = v73;
  sub_249FC8590(v44, v73, type metadata accessor for Dashboard);
  char v46 = *(unsigned char *)(v45 + 8);
  uint64_t v47 = swift_retain();
  uint64_t v48 = sub_24A02FD20(v47, v46);
  swift_release();
  swift_getKeyPath();
  uint64_t v75 = v48;
  sub_24A056478();
  swift_release();
  uint64_t v49 = v48 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  uint64_t v50 = v67;
  sub_249F6E6C8(v49, v67, &qword_269750050);
  swift_release();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v41)(v50, 1, v40);
  if (result != 1)
  {
    uint64_t v52 = sub_249F91FCC();
    uint64_t v54 = v53;
    sub_249FC765C(v50, type metadata accessor for WorldViewModel.Pin);
    uint64_t v56 = v68;
    uint64_t v55 = (uint64_t)v69;
    uint64_t v57 = (uint64_t)v74;
    if (v54)
    {
      if (!v52 && v54 == 0xE000000000000000)
      {
        sub_249FC765C(v45, type metadata accessor for Dashboard);
        swift_bridgeObjectRelease();
LABEL_13:
        if (qword_26974F2A0 != -1) {
          swift_once();
        }
        double v59 = *(double *)&qword_269752338;
        uint64_t v60 = v70;
        if (qword_26974F2A8 != -1) {
          swift_once();
        }
        double v61 = v59 + *(double *)&qword_269752340;
        if (qword_26974F2B0 != -1) {
          swift_once();
        }
        double v62 = 18.0 - (v61 + *(double *)&qword_269752348);
LABEL_20:
        sub_249F6E6C8(v57, v55, &qword_2697507F8);
        uint64_t v63 = v55 + *(int *)(v56 + 36);
        *(void *)uint64_t v63 = 0;
        *(double *)(v63 + 8) = v62;
        sub_249F6E790(v57, &qword_2697507F8);
        return sub_249F6E664(v55, v60, &qword_269750800);
      }
      char v64 = sub_24A057D48();
      sub_249FC765C(v45, type metadata accessor for Dashboard);
      swift_bridgeObjectRelease();
      if (v64) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_249FC765C(v45, type metadata accessor for Dashboard);
    }
    if (qword_26974F2A0 != -1) {
      swift_once();
    }
    double v65 = *(double *)&qword_269752338;
    uint64_t v60 = v70;
    if (qword_26974F2A8 != -1) {
      swift_once();
    }
    double v66 = v65 + *(double *)&qword_269752340;
    if (qword_26974F2B0 != -1) {
      swift_once();
    }
    double v62 = -(v66 + *(double *)&qword_269752348);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FC45E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v168 = a2;
  uint64_t v167 = sub_24A056898();
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v165 = (char *)v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_24A056C38();
  MEMORY[0x270FA5388](v159);
  uint64_t v162 = (char *)v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056878();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v151 = (char *)v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A0568D8();
  MEMORY[0x270FA5388](v7 - 8);
  char v150 = (char *)v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_24A056918();
  uint64_t v154 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  long long v172 = (char *)v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v148 = (uint64_t)v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F640);
  MEMORY[0x270FA5388](v152);
  uint64_t v157 = (char *)v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F630);
  MEMORY[0x270FA5388](v153);
  uint64_t v160 = (char *)v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750810);
  MEMORY[0x270FA5388](v158);
  uint64_t v164 = (uint64_t)v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v155 = (uint64_t)v142 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v163 = (uint64_t)v142 - v18;
  uint64_t v19 = sub_24A056EA8();
  uint64_t v170 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750818);
  uint64_t v176 = *(void *)(v23 - 8);
  uint64_t v177 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v161 = (char *)v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unsigned __int8 v144 = (char *)v142 - v26;
  MEMORY[0x270FA5388](v27);
  long long v175 = (char *)v142 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750820);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v174 = (uint64_t)v142 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)v142 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)v142 - v35;
  *(void *)uint64_t v33 = sub_24A056A68();
  *((void *)v33 + 1) = 0;
  v33[16] = 0;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750828);
  sub_249FC5944(a1, (uint64_t)&v33[*(int *)(v37 + 44)]);
  CGMutablePathRef v171 = v36;
  sub_249F6E664((uint64_t)v33, (uint64_t)v36, &qword_269750820);
  v142[1] = 0x800000024A063100;
  uint64_t v38 = (__CFString *)sub_24A057368();
  CTFontRef v169 = CTFontCreateWithNameAndOptions(v38, 92.0, 0, 0x20000uLL);

  uint64_t v39 = (__CFString *)sub_24A057368();
  CTFontRef v40 = CTFontCreateWithNameAndOptions(v39, 92.0, 0, 0x20000uLL);

  id v143 = sub_249F7093C();
  uint64_t v41 = sub_24A056F28();
  uint64_t v42 = *MEMORY[0x263F1B388];
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  uint64_t v44 = v20 + 104;
  uint64_t v43 = v45;
  v45(v22, v42, v19);
  uint64_t v46 = MEMORY[0x24C5B8780](v22, 1.0, 0.0, 0.0, 1.0);
  uint64_t v173 = a1;
  LOBYTE(v40) = *(unsigned char *)(a1 + 8);
  uint64_t v47 = swift_retain();
  uint64_t v48 = sub_24A02FD20(v47, (char)v40);
  swift_release();
  swift_getKeyPath();
  uint64_t v180 = v48;
  uint64_t v49 = sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  swift_release();
  LODWORD(v39) = *(unsigned __int8 *)(v48 + 176);
  swift_release();
  if (v39) {
    uint64_t v50 = v46;
  }
  else {
    uint64_t v50 = v41;
  }
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v51 = sub_24A056F28();
  unsigned int v147 = v42;
  uint64_t v149 = v44;
  unsigned __int8 v146 = v43;
  v43(v22, v42, v170);
  uint64_t v52 = v173;
  uint64_t v145 = v22;
  uint64_t v53 = MEMORY[0x24C5B8780](v22, 0.8, 0.0, 0.0, 1.0);
  char v54 = *(unsigned char *)(v52 + 8);
  uint64_t v55 = swift_retain();
  uint64_t v56 = sub_24A02FD20(v55, v54);
  swift_release();
  swift_getKeyPath();
  uint64_t v180 = v56;
  sub_24A056478();
  swift_release();
  int v57 = *(unsigned __int8 *)(v56 + 176);
  swift_release();
  if (v57) {
    uint64_t v58 = v53;
  }
  else {
    uint64_t v58 = v51;
  }
  swift_retain();
  swift_release();
  swift_release();
  double v59 = (__CFString *)sub_24A057368();
  CTFontRef v60 = CTFontCreateWithNameAndOptions(v59, 92.0, 0, 0x20000uLL);

  type metadata accessor for RollingClockViewModel();
  sub_249FC7034(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  uint64_t v61 = sub_24A056698();
  char v63 = v62;
  if (qword_26974F2A0 != -1) {
    swift_once();
  }
  uint64_t v180 = v61;
  char v181 = v63 & 1;
  id v182 = v143;
  uint64_t v183 = v50;
  uint64_t v184 = v58;
  uint64_t v185 = 0;
  char v186 = 0;
  CTFontRef v187 = v169;
  CTFontRef v188 = v60;
  __int16 v189 = 768;
  uint64_t v190 = 0;
  uint64_t v191 = qword_269752338;
  char v64 = *(unsigned char *)(v52 + 8);
  uint64_t v65 = swift_retain();
  uint64_t v66 = sub_24A02FD20(v65, v64);
  swift_release();
  swift_getKeyPath();
  uint64_t v178 = v66;
  sub_24A056478();
  swift_release();
  swift_retain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750830);
  sub_249FC8600(&qword_269750838, &qword_269750830, (void (*)(void))sub_249F82128);
  uint64_t v67 = v144;
  sub_24A056DF8();
  swift_release();
  uint64_t v68 = v183;
  uint64_t v69 = v184;
  uint64_t v70 = v185;
  CTFontRef v169 = (CTFontRef)v49;
  CTFontRef v71 = v187;
  CTFontRef v72 = v188;
  char v73 = v186;

  swift_release();
  sub_249F6CBB8(v68, v69, v70, v73);

  (*(void (**)(char *, char *, uint64_t))(v176 + 32))(v175, v67, v177);
  LOBYTE(v68) = *(unsigned char *)(v52 + 8);
  uint64_t v74 = swift_retain();
  uint64_t v75 = sub_24A02FD20(v74, v68);
  swift_release();
  swift_getKeyPath();
  uint64_t v180 = v75;
  sub_24A056478();
  swift_release();
  uint64_t v76 = v75 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  uint64_t v77 = v148;
  sub_249F6E6C8(v76, v148, &qword_269750050);
  swift_release();
  uint64_t v78 = type metadata accessor for WorldViewModel.Pin(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48))(v77, 1, v78) == 1)
  {
    sub_249F6E790(v77, &qword_269750050);
  }
  else
  {
    uint64_t v79 = sub_249F91FCC();
    unint64_t v81 = v80;
    sub_249FC765C(v77, type metadata accessor for WorldViewModel.Pin);
    if (v81) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v79 = 0;
  unint64_t v81 = 0xE000000000000000;
LABEL_13:
  uint64_t v178 = v79;
  unint64_t v179 = v81;
  sub_249F823CC();
  uint64_t v82 = sub_24A056D98();
  uint64_t v84 = v83;
  char v86 = v85 & 1;
  id v87 = objc_msgSend(self, sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x263F81840]);
  sub_24A056CE8();
  uint64_t v88 = sub_24A056D48();
  uint64_t v90 = v89;
  char v92 = v91;
  swift_release();
  char v93 = v92 & 1;
  sub_249F6E5D0(v82, v84, v86);
  swift_bridgeObjectRelease();
  char v94 = v145;
  uint64_t v95 = v147;
  uint64_t v96 = v170;
  uint64_t v97 = v146;
  v146(v145, v147, v170);
  uint64_t v98 = MEMORY[0x24C5B8780](v94, 0.552941176, 0.552941176, 0.57254902, 1.0);
  v97(v94, v95, v96);
  uint64_t v99 = MEMORY[0x24C5B8780](v94, 0.6, 0.0, 0.0, 1.0);
  LOBYTE(v95) = *(unsigned char *)(v173 + 8);
  uint64_t v100 = swift_retain();
  uint64_t v101 = sub_24A02FD20(v100, v95);
  swift_release();
  swift_getKeyPath();
  uint64_t v178 = v101;
  sub_24A056478();
  swift_release();
  LODWORD(v96) = *(unsigned __int8 *)(v101 + 176);
  swift_release();
  if (v96) {
    uint64_t v102 = v99;
  }
  else {
    uint64_t v102 = v98;
  }
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v178 = v102;
  uint64_t v103 = sub_24A056D28();
  uint64_t v105 = v104;
  LODWORD(v170) = v106;
  uint64_t v108 = v107;
  sub_249F6E5D0(v88, v90, v93);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24A0568C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF98);
  sub_24A0568A8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A0593D0;
  sub_24A056838();
  sub_24A0568B8();
  sub_24A056868();
  sub_24A0568B8();
  sub_24A0568E8();
  type metadata accessor for Dashboard(0);
  uint64_t v109 = sub_24A0571E8();
  int v110 = sub_24A0568F8();
  int v111 = sub_24A056908();
  if (!v110)
  {
    if (!v111)
    {
      int v110 = 0;
      goto LABEL_22;
    }
LABEL_20:
    v110 |= v111;
    goto LABEL_22;
  }
  if ((v111 & ~v110) != 0) {
    goto LABEL_20;
  }
LABEL_22:
  uint64_t v112 = v154;
  uint64_t v113 = (uint64_t)v162;
  uint64_t v114 = v172;
  uint64_t v115 = v156;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v162, v172, v156);
  uint64_t v116 = v159;
  *(void *)(v113 + *(int *)(v159 + 20)) = v109;
  *(_DWORD *)(v113 + *(int *)(v116 + 24)) = v110;
  uint64_t v117 = (uint64_t)v157;
  sub_249FC8590(v113, (uint64_t)&v157[*(int *)(v152 + 36)], MEMORY[0x263F1A2F0]);
  *(void *)uint64_t v117 = v103;
  *(void *)(v117 + 8) = v105;
  char v118 = v170;
  char v119 = v170 & 1;
  *(unsigned char *)(v117 + 16) = v170 & 1;
  *(void *)(v117 + 24) = v108;
  sub_249F6E4F8(v103, v105, v118 & 1);
  swift_bridgeObjectRetain();
  sub_249FC765C(v113, MEMORY[0x263F1A2F0]);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v114, v115);
  sub_249F6E5D0(v103, v105, v119);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  __int16 v121 = v165;
  sub_24A056888();
  uint64_t v122 = (uint64_t)v160;
  uint64_t v123 = (uint64_t *)&v160[*(int *)(v153 + 36)];
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F660);
  uint64_t v125 = v166;
  uint64_t v126 = v167;
  (*(void (**)(char *, char *, uint64_t))(v166 + 16))((char *)v123 + *(int *)(v124 + 28), v121, v167);
  uint64_t *v123 = KeyPath;
  sub_249F6E6C8(v117, v122, &qword_26974F640);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v121, v126);
  sub_249F6E790(v117, &qword_26974F640);
  if (qword_26974F2A8 != -1) {
    swift_once();
  }
  uint64_t v127 = qword_269752340;
  uint64_t v128 = v155;
  sub_249F6E6C8(v122, v155, &qword_26974F630);
  __int16 v129 = (void *)(v128 + *(int *)(v158 + 36));
  *__int16 v129 = 0;
  v129[1] = v127;
  sub_249F6E790(v122, &qword_26974F630);
  uint64_t v130 = v163;
  sub_249F6E664(v128, v163, &qword_269750810);
  uint64_t v131 = v174;
  sub_249F6E6C8((uint64_t)v171, v174, &qword_269750820);
  unsigned __int8 v132 = v175;
  uint64_t v133 = v176;
  unsigned __int8 v134 = *(void (**)(char *, char *, uint64_t))(v176 + 16);
  int v135 = v161;
  uint64_t v136 = v177;
  v134(v161, v175, v177);
  uint64_t v137 = v164;
  sub_249F6E6C8(v130, v164, &qword_269750810);
  uint64_t v138 = v168;
  sub_249F6E6C8(v131, v168, &qword_269750820);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750840);
  v134((char *)(v138 + *(int *)(v139 + 48)), v135, v136);
  sub_249F6E6C8(v137, v138 + *(int *)(v139 + 64), &qword_269750810);
  sub_249F6E790(v130, &qword_269750810);
  unsigned __int8 v140 = *(void (**)(char *, uint64_t))(v133 + 8);
  v140(v132, v136);
  sub_249F6E790((uint64_t)v171, &qword_269750820);
  sub_249F6E790(v137, &qword_269750810);
  v140(v135, v136);
  return sub_249F6E790(v174, &qword_269750820);
}

uint64_t sub_249FC5944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v202 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750848);
  MEMORY[0x270FA5388](v3 - 8);
  char v186 = (char *)v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_24A056C38();
  MEMORY[0x270FA5388](v198);
  uint64_t v177 = (char *)v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F640);
  MEMORY[0x270FA5388](v179);
  id v182 = (char *)v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F630);
  uint64_t v201 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  char v181 = (char *)v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v180 = (uint64_t)v161 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750850);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v187 = (uint64_t)v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v188 = (uint64_t)v161 - v13;
  uint64_t v14 = sub_24A056898();
  uint64_t v196 = *(void *)(v14 - 8);
  uint64_t v197 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v195 = (char *)v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24A056878();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v192 = (char *)v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24A0568D8();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v191 = (char *)v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24A056918();
  uint64_t v193 = *(void *)(v20 - 8);
  uint64_t v194 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v178 = (char *)v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v174 = (char *)v161 - v23;
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FD70);
  MEMORY[0x270FA5388](v164);
  uint64_t v168 = (void *)((char *)v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = sub_24A056FD8();
  uint64_t v167 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  uint64_t v166 = (char *)v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_24A056EA8();
  uint64_t v190 = *(void *)(v200 - 8);
  MEMORY[0x270FA5388](v200);
  uint64_t v199 = (char *)v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750730);
  MEMORY[0x270FA5388](v163);
  uint64_t v165 = (void *)((char *)v161 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750858);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v183 = (uint64_t)v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750860);
  MEMORY[0x270FA5388](v170);
  uint64_t v173 = (char *)v161 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750868);
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  long long v172 = (char *)v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v171 = (uint64_t)v161 - v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750870);
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v36 = (char *)v161 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)v161 - v38;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v42 = (char *)v161 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)v161 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = a1;
  char v47 = *(unsigned char *)(a1 + 8);
  uint64_t v48 = swift_retain();
  uint64_t v49 = sub_24A02FD20(v48, v47);
  swift_release();
  swift_getKeyPath();
  uint64_t v206 = v49;
  uint64_t v50 = sub_249FC7034(&qword_26974FA50, (void (*)(uint64_t))type metadata accessor for WorldViewModel);
  sub_24A056478();
  uint64_t v51 = v43;
  swift_release();
  uint64_t v52 = v49 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  sub_249F6E6C8(v52, (uint64_t)v42, &qword_269750050);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43) == 1)
  {
    sub_249F6E790((uint64_t)v42, &qword_269750050);
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750878);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v202, 1, 1, v53);
  }
  v161[1] = v50;
  long long v175 = v39;
  uint64_t v176 = v36;
  uint64_t v55 = v203;
  sub_249FC71E8((uint64_t)v42, (uint64_t)v46, type metadata accessor for WorldViewModel.Pin);
  uint64_t v56 = (unsigned int *)MEMORY[0x263F1B388];
  int v57 = (double *)MEMORY[0x263F81840];
  BOOL v58 = v46[16] == 1;
  uint64_t v162 = v46;
  if (!v58)
  {
    uint64_t v89 = (uint64_t)v46;
    uint64_t v90 = 1;
    uint64_t v92 = v200;
    uint64_t v91 = v201;
    uint64_t v93 = (uint64_t)v176;
    uint64_t v94 = (uint64_t)v175;
    uint64_t v95 = v199;
    uint64_t v96 = v185;
    uint64_t v97 = v184;
    goto LABEL_15;
  }
  v161[0] = v51;
  uint64_t v59 = sub_24A056F98();
  id v60 = objc_msgSend(self, sel_systemOrangeColor);
  uint64_t v61 = MEMORY[0x24C5B8790](v60);
  char v62 = v199;
  (*(void (**)(char *, void, uint64_t))(v190 + 104))(v199, *v56, v200);
  uint64_t v63 = MEMORY[0x24C5B8780](v62, 0.6, 0.0, 0.0, 1.0);
  char v64 = *(unsigned char *)(v55 + 8);
  uint64_t v65 = swift_retain();
  uint64_t v66 = sub_24A02FD20(v65, v64);
  swift_release();
  swift_getKeyPath();
  uint64_t v204 = v66;
  sub_24A056478();
  swift_release();
  int v67 = *(unsigned __int8 *)(v66 + 176);
  swift_release();
  if (v67) {
    uint64_t v68 = v63;
  }
  else {
    uint64_t v68 = v61;
  }
  swift_retain();
  swift_release();
  swift_release();
  id v69 = objc_msgSend(self, sel_systemFontOfSize_weight_, 26.0, *v57);
  uint64_t v70 = sub_24A056CE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = v167;
  char v73 = v166;
  uint64_t v74 = v169;
  (*(void (**)(char *, void, uint64_t))(v167 + 104))(v166, *MEMORY[0x263F1B538], v169);
  uint64_t v75 = swift_getKeyPath();
  uint64_t v76 = v168;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v168 + *(int *)(v164 + 28), v73, v74);
  *uint64_t v76 = v75;
  uint64_t v77 = v165;
  sub_249F6E6C8((uint64_t)v76, (uint64_t)v165 + *(int *)(v163 + 36), &qword_26974FD70);
  uint64_t *v77 = v59;
  v77[1] = v68;
  _DWORD v77[2] = KeyPath;
  v77[3] = v70;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_249F6E790((uint64_t)v76, &qword_26974FD70);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_249F6E6C8((uint64_t)v77, v183, &qword_269750730);
  sub_249F6E790((uint64_t)v77, &qword_269750730);
  sub_24A0568C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF98);
  sub_24A0568A8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A05A510;
  sub_24A056868();
  sub_24A0568B8();
  uint64_t v78 = v174;
  sub_24A0568E8();
  type metadata accessor for Dashboard(0);
  uint64_t v79 = sub_24A0571E8();
  int v80 = sub_24A0568F8();
  int v81 = sub_24A056908();
  if (v80)
  {
    uint64_t v82 = v198;
    uint64_t v84 = v195;
    uint64_t v83 = v196;
    uint64_t v85 = v193;
    uint64_t v86 = v194;
    uint64_t v87 = (uint64_t)v173;
    uint64_t v88 = v170;
    if ((v81 & ~v80) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v82 = v198;
    uint64_t v84 = v195;
    uint64_t v83 = v196;
    uint64_t v85 = v193;
    uint64_t v86 = v194;
    uint64_t v87 = (uint64_t)v173;
    uint64_t v88 = v170;
    if (!v81)
    {
      int v80 = 0;
      goto LABEL_14;
    }
  }
  v80 |= v81;
LABEL_14:
  uint64_t v98 = v87 + *(int *)(v88 + 36);
  uint64_t v99 = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v98, v78, v86);
  *(void *)(v98 + *(int *)(v82 + 20)) = v79;
  *(_DWORD *)(v98 + *(int *)(v82 + 24)) = v80;
  uint64_t v100 = v183;
  sub_249F6E6C8(v183, v87, &qword_269750858);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v78, v86);
  sub_249F6E790(v100, &qword_269750858);
  uint64_t v101 = swift_getKeyPath();
  sub_24A056888();
  uint64_t v96 = v185;
  uint64_t v102 = (uint64_t)v172;
  uint64_t v103 = (uint64_t *)&v172[*(int *)(v185 + 36)];
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F660);
  uint64_t v105 = v197;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))((char *)v103 + *(int *)(v104 + 28), v84, v197);
  uint64_t *v103 = v101;
  sub_249F6E6C8(v87, v102, &qword_269750860);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v105);
  sub_249F6E790(v87, &qword_269750860);
  uint64_t v106 = v171;
  sub_249F6E664(v102, v171, &qword_269750868);
  uint64_t v94 = (uint64_t)v175;
  sub_249F6E664(v106, (uint64_t)v175, &qword_269750868);
  uint64_t v90 = 0;
  uint64_t v92 = v200;
  uint64_t v91 = v201;
  uint64_t v93 = (uint64_t)v176;
  uint64_t v95 = v199;
  uint64_t v97 = v184;
  uint64_t v51 = v161[0];
  uint64_t v89 = (uint64_t)v162;
LABEL_15:
  uint64_t v107 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v94, v90, 1, v96);
  uint64_t v108 = (uint64_t *)(v89 + *(int *)(v51 + 40));
  uint64_t v109 = v108[1];
  if (v109)
  {
    uint64_t v204 = *v108;
    uint64_t v205 = v109;
    sub_249F823CC();
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_24A056D98();
    uint64_t v112 = v111;
    char v114 = v113 & 1;
    id v115 = objc_msgSend(self, sel_systemOrangeColor);
    uint64_t v116 = MEMORY[0x24C5B8790](v115);
    (*(void (**)(char *, void, uint64_t))(v190 + 104))(v95, *MEMORY[0x263F1B388], v92);
    uint64_t v117 = MEMORY[0x24C5B8780](v95, 0.8, 0.0, 0.0, 1.0);
    char v118 = *(unsigned char *)(v203 + 8);
    uint64_t v119 = swift_retain();
    uint64_t v120 = sub_24A02FD20(v119, v118);
    swift_release();
    swift_getKeyPath();
    uint64_t v204 = v120;
    sub_24A056478();
    swift_release();
    int v121 = *(unsigned __int8 *)(v120 + 176);
    swift_release();
    if (v121) {
      uint64_t v122 = v117;
    }
    else {
      uint64_t v122 = v116;
    }
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v204 = v122;
    uint64_t v123 = sub_24A056D28();
    uint64_t v125 = v124;
    char v127 = v126 & 1;
    sub_249F6E5D0(v110, v112, v114);
    swift_release();
    swift_bridgeObjectRelease();
    id v128 = objc_msgSend(self, sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x263F81840]);
    sub_24A056CE8();
    uint64_t v129 = sub_24A056D48();
    uint64_t v131 = v130;
    char v133 = v132;
    uint64_t v200 = v134;
    swift_release();
    sub_249F6E5D0(v123, v125, v127);
    swift_bridgeObjectRelease();
    sub_24A0568C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF98);
    sub_24A0568A8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24A05A510;
    sub_24A056848();
    sub_24A0568B8();
    int v135 = v178;
    sub_24A0568E8();
    type metadata accessor for Dashboard(0);
    uint64_t v136 = sub_24A0571E8();
    int v137 = sub_24A0568F8();
    int v138 = sub_24A056908();
    if (v137)
    {
      uint64_t v139 = (uint64_t)v186;
      uint64_t v140 = (uint64_t)v177;
      if ((v138 & ~v137) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v139 = (uint64_t)v186;
      uint64_t v140 = (uint64_t)v177;
      if (!v138)
      {
        int v137 = 0;
        goto LABEL_26;
      }
    }
    v137 |= v138;
LABEL_26:
    uint64_t v145 = v193;
    uint64_t v144 = v194;
    (*(void (**)(uint64_t, char *, uint64_t))(v193 + 16))(v140, v135, v194);
    uint64_t v146 = v198;
    *(void *)(v140 + *(int *)(v198 + 20)) = v136;
    *(_DWORD *)(v140 + *(int *)(v146 + 24)) = v137;
    uint64_t v147 = (uint64_t)v182;
    sub_249FC8590(v140, (uint64_t)&v182[*(int *)(v179 + 36)], MEMORY[0x263F1A2F0]);
    *(void *)uint64_t v147 = v129;
    *(void *)(v147 + 8) = v131;
    char v148 = v133 & 1;
    *(unsigned char *)(v147 + 16) = v148;
    *(void *)(v147 + 24) = v200;
    sub_249F6E4F8(v129, v131, v148);
    swift_bridgeObjectRetain();
    sub_249FC765C(v140, MEMORY[0x263F1A2F0]);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v135, v144);
    sub_249F6E5D0(v129, v131, v148);
    swift_bridgeObjectRelease();
    uint64_t v149 = swift_getKeyPath();
    char v150 = v195;
    sub_24A056888();
    uint64_t v143 = v189;
    uint64_t v151 = (uint64_t)v181;
    uint64_t v152 = (uint64_t *)&v181[*(int *)(v189 + 36)];
    uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F660);
    uint64_t v155 = v196;
    uint64_t v154 = v197;
    (*(void (**)(char *, char *, uint64_t))(v196 + 16))((char *)v152 + *(int *)(v153 + 28), v150, v197);
    *uint64_t v152 = v149;
    sub_249F6E6C8(v147, v151, &qword_26974F640);
    (*(void (**)(char *, uint64_t))(v155 + 8))(v150, v154);
    sub_249F6E790(v147, &qword_26974F640);
    uint64_t v156 = v180;
    sub_249F6E664(v151, v180, &qword_26974F630);
    uint64_t v157 = v156;
    uint64_t v142 = v188;
    sub_249F6E664(v157, v188, &qword_26974F630);
    uint64_t v107 = 0;
    uint64_t v91 = v201;
    uint64_t v141 = v202;
    uint64_t v93 = (uint64_t)v176;
    uint64_t v94 = (uint64_t)v175;
    uint64_t v89 = (uint64_t)v162;
    goto LABEL_27;
  }
  uint64_t v141 = v202;
  uint64_t v139 = (uint64_t)v186;
  uint64_t v142 = v188;
  uint64_t v143 = v189;
LABEL_27:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v142, v107, 1, v143);
  sub_249F6E6C8(v94, v93, &qword_269750870);
  uint64_t v158 = v187;
  sub_249F6E6C8(v142, v187, &qword_269750850);
  sub_249F6E6C8(v93, v139, &qword_269750870);
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750880);
  sub_249F6E6C8(v158, v139 + *(int *)(v159 + 48), &qword_269750850);
  sub_249F6E790(v142, &qword_269750850);
  sub_249F6E790(v94, &qword_269750870);
  sub_249FC765C(v89, type metadata accessor for WorldViewModel.Pin);
  sub_249F6E790(v158, &qword_269750850);
  sub_249F6E790(v93, &qword_269750870);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750878);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v139, 0, 1, v160);
  return sub_249F6E664(v139, v141, &qword_269750848);
}

uint64_t sub_249FC6FE0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_24A056938();
  *a1 = v3;
  return result;
}

uint64_t sub_249FC700C()
{
  return sub_24A056948();
}

uint64_t sub_249FC7034(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249FC707C()
{
  unint64_t result = qword_269750650;
  if (!qword_269750650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750650);
  }
  return result;
}

uint64_t sub_249FC70D0()
{
  return sub_24A056978();
}

uint64_t sub_249FC70F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249FC72A8(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

uint64_t sub_249FC7138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for WorldClockFace(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_249FBE994(v4, a1);
}

uint64_t sub_249FC71B8()
{
  return sub_249F92AB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FC71D4(uint64_t result)
{
  *(unsigned char *)(result + 128) = 1;
  return result;
}

uint64_t sub_249FC71E0(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_249FC71E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249FC7258()
{
  return sub_24A056928();
}

uint64_t sub_249FC727C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249FC72A8(a1, a2, a3, a4, MEMORY[0x263F1B548], MEMORY[0x263F191D8]);
}

uint64_t sub_249FC72A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_249FC7378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A0569D8();
  *a1 = result;
  return result;
}

uint64_t sub_249FC73A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A0569D8();
  *a1 = result;
  return result;
}

uint64_t sub_249FC73D0()
{
  return sub_24A0569E8();
}

uint64_t sub_249FC73FC()
{
  return sub_24A0569E8();
}

uint64_t sub_249FC7428()
{
  return sub_24A056928();
}

uint64_t sub_249FC744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249FC72A8(a1, a2, a3, a4, MEMORY[0x263F1B548], MEMORY[0x263F191D8]);
}

uint64_t sub_249FC7494()
{
  return sub_249F9020C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = (int *)(type metadata accessor for WorldClockFace(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24A0567D8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_249FC75CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for WorldClockFace(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_249FBDF18(v2);
}

uint64_t type metadata accessor for Dashboard(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_269750778);
}

uint64_t sub_249FC765C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_249FC76BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_24A0567D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_249FC77F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24A0567D8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_249FC78B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_24A0567D8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249FC799C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_249F6E790(a1 + v7, &qword_26974FAD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24A0567D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249FC7AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_24A0567D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249FC7BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_249F6E790(a1 + v7, &qword_26974FAD0);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FAD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_24A0567D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_249FC7CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249FC7CD0);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697505F8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_249FC7D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249FC7D94);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697505F8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_249FC7E40()
{
  sub_249FBCEBC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_249FC7EE4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for Map(uint64_t a1)
{
  sub_249FC7F30(*(void *)a1, *(unsigned char *)(a1 + 8));

  return swift_release();
}

uint64_t sub_249FC7F30(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Map(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_249FC7EE4(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  char v6 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Map(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_249FC7EE4(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_249FC7F30(v6, v7);
  char v8 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Map(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_249FC7F30(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Map(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Map(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Map()
{
  return &type metadata for Map;
}

unint64_t sub_249FC8114()
{
  unint64_t result = qword_269750788;
  if (!qword_269750788)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750628);
    sub_249F6EE60(&qword_269750790, &qword_269750618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750788);
  }
  return result;
}

uint64_t sub_249FC81B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FC81D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FC81EC()
{
  sub_249FC7F30(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_249FC8230@<X0>(uint64_t a1@<X8>)
{
  return sub_249FC1754(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

double sub_249FC8270(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

unint64_t sub_249FC8290()
{
  unint64_t result = qword_2697507E0;
  if (!qword_2697507E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697507E0);
  }
  return result;
}

uint64_t sub_249FC82E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a6)
  {
    sub_249FC838C(result, a2, a3, a4, a5);
    swift_retain();
    sub_249FC838C(a7, a8, a9, a10, a11);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249FC838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

void *sub_249FC83A4(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_249FC8410(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a6)
  {
    sub_249FC84B8(result, a2, a3, a4, a5);
    swift_release();
    sub_249FC84B8(a7, a8, a9, a10, a11);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249FC84B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_249FC84D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_249FC8530(uint64_t a1)
{
  return a1;
}

uint64_t sub_249FC8590(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249FC8600(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PinCollection()
{
  return &type metadata for PinCollection;
}

uint64_t sub_249FC8698()
{
  return sub_249F6EE60(&qword_269750888, &qword_269750890);
}

uint64_t sub_249FC86D4()
{
  return sub_249FC8600(&qword_269750898, &qword_269750800, (void (*)(void))sub_249FC8710);
}

unint64_t sub_249FC8710()
{
  unint64_t result = qword_2697508A0;
  if (!qword_2697508A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697507F8);
    sub_249F6EE60(&qword_2697508A8, &qword_2697507F0);
    sub_249F6EE60(&qword_2697508B0, &qword_269750698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697508A0);
  }
  return result;
}

uint64_t sub_249FC87D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FC87F8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_249FC8830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FC32A8(a1, a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

unint64_t sub_249FC8848()
{
  unint64_t result = qword_2697508E0;
  if (!qword_2697508E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697508E0);
  }
  return result;
}

uint64_t sub_249FC88A0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Pin(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for Pin(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Pin(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Pin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Pin()
{
  return &type metadata for Pin;
}

unint64_t sub_249FC8A34()
{
  unint64_t result = qword_2697508F0;
  if (!qword_2697508F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FE68);
    sub_249F6EE60(&qword_2697508F8, &qword_26974FE60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697508F0);
  }
  return result;
}

uint64_t sub_249FC8AD4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_249FC8AF0()
{
  unint64_t result = qword_269750900;
  if (!qword_269750900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750900);
  }
  return result;
}

uint64_t sub_249FC8B44(uint64_t a1)
{
  return a1;
}

uint64_t sub_249FC8B90(uint64_t a1)
{
  return a1;
}

unint64_t sub_249FC8BE0()
{
  unint64_t result = qword_269750908;
  if (!qword_269750908)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750910);
    sub_249F6EE60(&qword_269750918, &qword_269750920);
    sub_249F6EE60(&qword_269750928, &qword_269750930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750908);
  }
  return result;
}

id sub_249FC8CA4()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.658823529, 0.658823529, 0.658823529, 1.0);
  qword_2697523A0 = (uint64_t)result;
  return result;
}

id sub_249FC8CEC()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.419607843, 0.419607843, 0.419607843, 1.0);
  qword_2697523A8 = (uint64_t)result;
  return result;
}

id sub_249FC8D34()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.176470588, 0.176470588, 0.176470588, 1.0);
  qword_2697523B0 = (uint64_t)result;
  return result;
}

void sub_249FC8D7C()
{
  qword_2697523B8 = 0x4049800000000000;
}

id sub_249FC8D90(void *a1)
{
  v1[OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_hostedClockFace] = a1;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ClockFaceHostView();
  id v3 = a1;
  id v4 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v10.receiver, v10.super_class);
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_blackColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  id v8 = v6;
  objc_msgSend(v8, sel_setClipsToBounds_, 1);

  return v8;
}

id sub_249FC8FB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (uint64_t)&v56 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v56 - v8;
  uint64_t v10 = sub_24A056538();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v60 = (uint64_t)&v56 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v18 = (objc_class *)type metadata accessor for ClockFaceHostView();
  v64.receiver = v0;
  v64.super_class = v18;
  objc_msgSendSuper2(&v64, sel_layoutSubviews);
  uint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_hostedClockFace];
  id v20 = objc_msgSend(v19, sel_superview);

  if (!v20)
  {
    objc_msgSend(v0, sel_frame);
    if (v21 <= 0.0 || (objc_msgSend(v0, sel_frame), v22 <= 0.0))
    {
      if (qword_26B16F9B8 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
      swift_beginAccess();
      sub_249F7AA94(v23, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_249FB8AA8((uint64_t)v17);
        sub_249F9F8CC((uint64_t)v9);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
      }
      uint64_t v24 = v0;
      uint64_t v25 = sub_24A056518();
      os_log_type_t v26 = sub_24A0577B8();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 134349312;
        uint64_t v57 = v10;
        [v24 frame];
        CGFloat Width = CGRectGetWidth(v65);
        uint64_t v58 = v11;
        sub_24A057978();
        *(_WORD *)(v27 + 12) = 2050;
        [v24 frame];
        CGFloat Width = CGRectGetHeight(v66);
        uint64_t v10 = v57;
        uint64_t v11 = v58;
        sub_24A057978();

        _os_log_impl(&dword_249F61000, v25, v26, "Frame is invalid at layoutSubviews; unable add ClockFace. Frame: %{public}f x %{public}f.",
          (uint8_t *)v27,
          0x16u);
        MEMORY[0x24C5BA360](v27, -1, -1);
      }
      else
      {

        uint64_t v25 = v24;
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }
    else
    {
      objc_msgSend(v0, sel_addSubview_, v19);
    }
  }
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_frame);
  double Height = CGRectGetHeight(v67);
  objc_msgSend(v1, sel_frame);
  if (CGRectGetWidth(v68) >= Height
    || (id v29 = objc_msgSend(self, sel_currentDevice),
        id v30 = objc_msgSend(v29, sel_userInterfaceIdiom),
        v29,
        v30 == (id)1))
  {
    objc_msgSend(v1, sel_setHidden_, 0);
    if (*((unsigned char *)v1 + OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface) == 1)
    {
      *((unsigned char *)v1 + OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface) = 0;
      if (qword_26B16F9B8 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
      swift_beginAccess();
      sub_249F7AA94(v31, (uint64_t)v4);
      int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10);
      uint64_t v58 = v11;
      uint64_t v33 = v61;
      if (v32 == 1)
      {
        sub_249FB8AA8(v61);
        sub_249F9F8CC((uint64_t)v4);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v61, v4, v10);
      }
      uint64_t v46 = v1;
      char v47 = sub_24A056518();
      os_log_type_t v48 = sub_24A0577B8();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 134349312;
        objc_msgSend(v46, (SEL)&selRef__solveForInput_);
        CGFloat v62 = CGRectGetWidth(v69);
        sub_24A057978();
        *(_WORD *)(v49 + 12) = 2050;
        objc_msgSend(v46, (SEL)&selRef__solveForInput_);
        CGFloat v62 = CGRectGetHeight(v70);
        sub_24A057978();

        _os_log_impl(&dword_249F61000, v47, v48, "Recovering from last layout pass where frame was an unsupported portrait size. Frame: (%{public}f, %{public}f).", (uint8_t *)v49, 0x16u);
        uint64_t v50 = v49;
        uint64_t v33 = v61;
        MEMORY[0x24C5BA360](v50, -1, -1);
      }
      else
      {

        char v47 = v46;
      }

      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v33, v10);
    }
    objc_msgSend(v1, sel_bounds);
    return objc_msgSend(v19, sel_setFrame_);
  }
  else
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    objc_msgSend(v1, sel_frame);
    double v35 = v34;
    objc_msgSend(v1, sel_frame);
    double v37 = v36;
    objc_msgSend(v1, sel_frame);
    double v39 = v38;
    objc_msgSend(v1, sel_frame);
    objc_msgSend(v19, sel_setFrame_, v35, v37, v39, v40);
    *((unsigned char *)v1 + OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface) = 1;
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v41 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
    swift_beginAccess();
    uint64_t v42 = v41;
    uint64_t v43 = v59;
    sub_249F7AA94(v42, v59);
    int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v43, 1, v10);
    uint64_t v45 = v60;
    if (v44 == 1)
    {
      sub_249FB8AA8(v60);
      sub_249F9F8CC(v43);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v60, v43, v10);
    }
    uint64_t v52 = v1;
    uint64_t v53 = sub_24A056518();
    os_log_type_t v54 = sub_24A0577B8();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 134349312;
      objc_msgSend(v52, (SEL)&selRef__solveForInput_);
      CGFloat v62 = CGRectGetWidth(v71);
      sub_24A057978();
      *(_WORD *)(v55 + 12) = 2050;
      objc_msgSend(v52, (SEL)&selRef__solveForInput_);
      CGFloat v62 = CGRectGetHeight(v72);
      sub_24A057978();

      _os_log_impl(&dword_249F61000, v53, v54, "Frame is portrait, unsupported on iOS. Frame: (%{public}f, %{public}f). This is likely on the first layout pass of an Ambient extension coming up over a portrait SpringBoard interface.", (uint8_t *)v55, 0x16u);
      MEMORY[0x24C5BA360](v55, -1, -1);
    }
    else
    {

      uint64_t v53 = v52;
    }

    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v45, v10);
  }
}

id sub_249FC9A80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClockFaceHostView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClockFaceHostView()
{
  return self;
}

void *sub_249FC9AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  unint64_t v5 = *(void *)(a1 + 16);
  if (v5 < 4)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697504B0);
    uint64_t v7 = swift_allocObject();
    unint64_t v8 = (unint64_t)&unk_24A05A000;
    _Q0 = xmmword_24A05A510;
    long long v11 = *(_OWORD *)(v4 + 32);
    int64_t v10 = v4 + 32;
    *(_OWORD *)(v7 + 16) = xmmword_24A05A510;
    *(_OWORD *)(v7 + 32) = v11;
    if (a2 < 1)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      long long v45 = _Q0;
      uint64_t v33 = sub_249FBA3E4((void *)(v8 > 1), v10, 1, v2);
      _Q0 = v45;
      objc_super v2 = v33;
    }
    else
    {
      objc_super v2 = (void *)v7;
      unint64_t v12 = v5 - 2;
      unint64_t v8 = 1;
      __asm
      {
        FMOV            V1.2D, #-5.0
        FMOV            V0.2D, #4.0
      }
      float64x2_t v36 = _Q0;
      float64x2_t v37 = _Q1;
      __asm { FMOV            V0.2D, #3.0 }
      float64x2_t v35 = _Q0;
      __asm { FMOV            V0.2D, #0.5 }
      float64x2_t v39 = (float64x2_t)_Q0;
      do
      {
        if (v8 == v12)
        {
          __break(1u);
          goto LABEL_21;
        }
        unint64_t v20 = v8 + 1;
        float64x2_t v21 = *(float64x2_t *)(v10 + 16 * (v8 + 1));
        long long v38 = (__int128)v21;
        if (a2 == 1)
        {
          unint64_t v22 = v2[2];
        }
        else
        {
          uint64_t v24 = (float64x2_t *)(v10 + 16 * v8);
          float64x2_t v25 = v24[-1];
          float64x2_t v26 = v24[2];
          float64x2_t v43 = vaddq_f64(*v24, *v24);
          float64x2_t v41 = vsubq_f64(vaddq_f64(vaddq_f64(vaddq_f64(v25, v25), vmulq_f64(*v24, v37)), vmulq_f64(v21, v36)), v26);
          float64x2_t v42 = vsubq_f64(v21, v25);
          float64x2_t v40 = vaddq_f64(vsubq_f64(vsubq_f64(vmulq_f64(*v24, v35), v25), vmulq_f64(v21, v35)), v26);
          unint64_t v27 = v2[2];
          uint64_t v28 = 1;
          do
          {
            double v44 = 1.0 / (double)a2 * (double)v28;
            double v29 = pow(v44, 3.0);
            unint64_t v30 = v2[3];
            unint64_t v22 = v27 + 1;
            if (v27 >= v30 >> 1)
            {
              double v34 = v29;
              uint64_t v31 = sub_249FBA3E4((void *)(v30 > 1), v27 + 1, 1, v2);
              double v29 = v34;
              objc_super v2 = v31;
            }
            ++v28;
            v2[2] = v22;
            *(float64x2_t *)&v2[2 * v27++ + 4] = vmulq_f64(vaddq_f64(vmulq_n_f64(v40, v29), vaddq_f64(vaddq_f64(v43, vmulq_n_f64(v42, v44)), vmulq_n_f64(v41, v44 * v44))), v39);
          }
          while (a2 != v28);
        }
        unint64_t v23 = v2[3];
        unint64_t v3 = v22 + 1;
        if (v22 >= v23 >> 1) {
          objc_super v2 = sub_249FBA3E4((void *)(v23 > 1), v22 + 1, 1, v2);
        }
        v2[2] = v3;
        _Q0 = v38;
        *(_OWORD *)&v2[2 * v22 + 4] = v38;
        unint64_t v8 = v20;
      }
      while (v20 != v12);
      _Q0 = *(_OWORD *)(v10 + 16 * v5 - 16);
      unint64_t v8 = v2[3];
      int64_t v10 = v22 + 2;
      if (v3 >= v8 >> 1) {
        goto LABEL_22;
      }
    }
    v2[2] = v10;
    *(_OWORD *)&v2[2 * v3 + 4] = _Q0;
    return v2;
  }
  return (void *)v4;
}

uint64_t sub_249FC9D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_249FC9D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_249FC9DAC(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24A057BB8();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_24A0575A8();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (_WORD *)(result + 32);
  if (a2 < 0x10)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v5 += a2 & 0xFFFFFFFFFFFFFFF0;
  int16x8_t v7 = vdupq_n_s16(a1);
  unint64_t v8 = (int16x8_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    v8[-1] = v7;
    *unint64_t v8 = v7;
    v8 += 2;
    v9 -= 16;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_249FC9E98(unint64_t a1, double a2, double a3)
{
  return sub_249FC9EC8(a1, type metadata accessor for CGPoint, a2, a3);
}

uint64_t sub_249FC9EB0(unint64_t a1, double a2, double a3)
{
  return sub_249FC9EC8(a1, type metadata accessor for CGSize, a2, a3);
}

uint64_t sub_249FC9EC8(unint64_t a1, void (*a2)(void), double a3, double a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24A057BB8();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  a2(0);
  uint64_t result = sub_24A0575A8();
  *(void *)(result + 16) = a1;
  unint64_t v6 = (double *)(result + 32);
  if (a1 < 4)
  {
    unint64_t v7 = 0;
    double v8 = a4;
    double v9 = a3;
LABEL_9:
    unint64_t v15 = a1 - v7;
    do
    {
      double *v6 = v9;
      v6[1] = v8;
      v6 += 2;
      --v15;
    }
    while (v15);
    return result;
  }
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 += 2 * (a1 & 0xFFFFFFFFFFFFFFFCLL);
  double v9 = a3;
  int64x2_t v10 = vdupq_lane_s64(*(uint64_t *)&a3, 0);
  double v8 = a4;
  int64x2_t v11 = vdupq_lane_s64(*(uint64_t *)&a4, 0);
  unint64_t v12 = (double *)(result + 64);
  unint64_t v13 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    uint64_t v14 = v12 - 4;
    vst2q_f64(v14, *(float64x2x2_t *)v10.i8);
    vst2q_f64(v12, *(float64x2x2_t *)v10.i8);
    v12 += 8;
    v13 -= 4;
  }
  while (v13);
  if (v7 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_249FC9FDC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_249FBAE08(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v9 = *v4;
      uint64_t v13 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_249FBAE08(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v13;
      }
      type metadata accessor for CGPoint(0);
      uint64_t v11 = v7;
      unint64_t v12 = &off_26FDE8388;
      long long v10 = v9;
      *(void *)(v2 + 16) = v6 + 1;
      sub_249F7B5E8(&v10, v2 + 40 * v6 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_249FCA0D0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24A057BD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_249FBAEA8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x24C5B92B0](i, a1);
        sub_249FCFCA0(0, &qword_2697509C0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249FBAEA8(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_249FBAEA8(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_249F71780(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      double v8 = (id *)(a1 + 32);
      sub_249FCFCA0(0, &qword_2697509C0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249FBAEA8(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_249FBAEA8(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_249F71780(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

char *sub_249FCA334(double a1, double a2, double a3, double a4)
{
  uint64_t v45 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x270FA5388](v45);
  unint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A0563F8();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TimeString(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v44 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v4;
  sub_24A0563E8();
  *(void *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_overlap] = 0;
  v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon] = 0;
  *(void *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter] = 0;
  v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_transformModifier] = 0;
  uint64_t v18 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel;
  type metadata accessor for RollingTimeLabel();
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = sub_249F8B9E0();
  *((void *)v19 + 3) = 0;
  *((void *)v19 + 4) = 0;
  *((void *)v19 + 2) = v20;
  float64x2_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v21(&v19[OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString], 1, 1, v14);
  *(void *)&v17[v18] = v19;
  uint64_t v22 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel;
  unint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = sub_249F8B9E0();
  *((void *)v23 + 3) = 0;
  *((void *)v23 + 4) = 0;
  *((void *)v23 + 2) = v24;
  v21(&v23[OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString], 1, 1, v14);
  *(void *)&v17[v22] = v23;
  uint64_t v25 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale;
  float64x2_t v26 = self;
  id v27 = objc_msgSend(v26, sel_mainScreen);
  objc_msgSend(v27, sel_scale);
  double v29 = v28;

  id v30 = objc_msgSend(v26, sel_mainScreen);
  objc_msgSend(v30, sel_nativeScale);
  double v32 = v31;

  *(double *)&v17[v25] = v29 / v32;
  *(void *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers] = 0;
  *(void *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews] = 0;
  v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 0;
  *(void *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask] = 0;
  if (qword_26974F328 != -1) {
    swift_once();
  }
  sub_24A0563E8();
  uint64_t v33 = v46;
  double v34 = *(uint64_t (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v35 = v47;
  uint64_t v36 = v34(&v10[*(int *)(v45 + 20)], v13, v47);
  *(void *)unint64_t v10 = 0;
  MEMORY[0x270FA5388](v36);
  *(&v44 - 2) = (uint64_t)v10;
  *(&v44 - 1) = v37;
  uint64_t v38 = v44;
  sub_24A004350((uint64_t (*)(void))sub_249F6C530, (uint64_t)(&v44 - 4), v44);
  sub_249FCFF20((uint64_t)v10, type metadata accessor for TextClockDescriptor);
  float64x2_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v39(v13, v35);
  sub_249F6C538(v38, (uint64_t)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeString]);

  float64x2_t v40 = (objc_class *)type metadata accessor for RollingTimeView();
  v48.receiver = v17;
  v48.super_class = v40;
  float64x2_t v41 = (char *)objc_msgSendSuper2(&v48, sel_initWithFrame_, a1, a2, a3, a4);
  v34(v13, &v41[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeZone], v35);
  float64x2_t v42 = v41;
  sub_249FCB7C0();

  v39(v13, v35);
  return v42;
}

BOOL sub_249FCA844(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_249FCA884()
{
  int64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v38 - v6;
  double v8 = (objc_class *)type metadata accessor for RollingTimeView();
  v39.receiver = v0;
  v39.super_class = v8;
  objc_msgSendSuper2(&v39, sel_layoutSubviews);
  unint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel];
  uint64_t v10 = v9 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_249F8C268(v10, (uint64_t)v7);
  uint64_t v11 = type metadata accessor for TimeString(0);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  sub_249F8C2D0((uint64_t)v7);
  if (v13 == 1)
  {
    unint64_t v7 = &v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeString];
    swift_beginAccess();
    sub_249FCFF80((uint64_t)v7, (uint64_t)v4, type metadata accessor for TimeString);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
    swift_beginAccess();
    sub_249FCF908((uint64_t)v4, v10);
    swift_endAccess();
    sub_249F8BCB8();
    sub_249F8C2D0((uint64_t)v4);
  }
  unint64_t v14 = *(void *)(v9 + 16);
  if (!(v14 >> 62))
  {
    unint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v18 = v1;
    sub_249FCF134((uint64_t)v18, v18);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_24A057BD8();
  if (!v15) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x24C5B92B0](0, v14);
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    id v16 = *(id *)(v14 + 32);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = (char *)objc_msgSend(v17, sel_superview);

  if (!v18) {
    goto LABEL_12;
  }
LABEL_13:

  if (v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating]) {
    return;
  }
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_249FCC47C(v19, 0, 1);
  swift_bridgeObjectRelease();
  unint64_t v7 = *(char **)&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel];
  unint64_t v15 = *((void *)v7 + 2);
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel_bounds);
  *(double *)&uint64_t v20 = CGRectGetHeight(v40);
  sub_249FCC47C(v15, v20, 0);
  swift_bridgeObjectRelease();
  sub_249FCCC68();
  unint64_t v9 = *(void *)(v9 + 16);
  if (!(v9 >> 62))
  {
    float64x2_t v21 = *(char **)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_16;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  float64x2_t v21 = (char *)sub_24A057BD8();
  if (!v21) {
    goto LABEL_39;
  }
LABEL_16:
  uint64_t v22 = v21 - 1;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
  }
  else if ((v9 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v22 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v23 = (char *)*(id *)(v9 + 8 * (void)v22 + 32);
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_44;
  }
  unint64_t v23 = (char *)MEMORY[0x24C5B92B0](v22, v9);
LABEL_21:
  float64x2_t v21 = v23;
  swift_bridgeObjectRelease();
  unint64_t v15 = *((void *)v7 + 2);
  if (!(v15 >> 62))
  {
    uint64_t v24 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_23;
    }
LABEL_45:
    swift_bridgeObjectRelease();

    return;
  }
LABEL_44:
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24A057BD8();
  if (!v24) {
    goto LABEL_45;
  }
LABEL_23:
  unint64_t v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
LABEL_48:
    id v26 = (id)MEMORY[0x24C5B92B0](v25, v15);
    goto LABEL_28;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v25 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    __break(1u);
    return;
  }
  id v26 = *(id *)(v15 + 8 * v25 + 32);
LABEL_28:
  id v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = MEMORY[0x24C5BA430](&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate]);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_alarmComplicationView;
    double v31 = *(void **)(v28 + OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_alarmComplicationView);
    id v32 = v31;
    sub_24A055A88(v31, v21);

    uint64_t v33 = OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_onDeckAlarmComplicationView;
    double v34 = *(void **)(v29 + OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_onDeckAlarmComplicationView);
    id v35 = v34;
    sub_24A055A88(v34, v27);

    uint64_t v36 = *(void **)(v29 + v30);
    if (v36) {
      objc_msgSend(v36, sel_setAlpha_, 1.0);
    }
    uint64_t v37 = *(void **)(v29 + v33);
    if (v37) {
      objc_msgSend(v37, sel_setAlpha_, 0.0);
    }

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_249FCAE08(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon) == 1)
  {
    if (result) {
      double v2 = 1.0;
    }
    else {
      double v2 = 0.0;
    }
    unint64_t v3 = sub_249FCAFD8();
    unint64_t v4 = v3;
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_24A057BD8();
      uint64_t v5 = result;
      if (!result) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_14;
      }
    }
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x24C5B92B0](v6, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      unint64_t v9 = v7;
      ++v6;
      *(float *)&double v8 = v2;
      objc_msgSend(v7, sel_setOpacity_, v8);
    }
    while (v5 != v6);
LABEL_14:
    swift_bridgeObjectRelease_n();
    unint64_t v10 = sub_249FCB270();
    unint64_t v11 = v10;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_24A057BD8();
      uint64_t v12 = result;
      if (result)
      {
LABEL_16:
        if (v12 >= 1)
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if ((v11 & 0xC000000000000001) != 0) {
              id v14 = (id)MEMORY[0x24C5B92B0](i, v11);
            }
            else {
              id v14 = *(id *)(v11 + 8 * i + 32);
            }
            unint64_t v15 = v14;
            objc_msgSend(v14, sel_setAlpha_, 1.0 - v2);
          }
          return swift_bridgeObjectRelease_n();
        }
LABEL_26:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_16;
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_249FCAFD8()
{
  uint64_t v1 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers;
  if (*(void *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers);
  }
  else
  {
    uint64_t v2 = sub_249FCB040();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_249FCB040()
{
  sub_249FCB68C();
  char v0 = 0;
  uint64_t v12 = MEMORY[0x263F8EE78];
  double v2 = v1 * 0.5;
  do
  {
    char v3 = v0;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15758]), sel_init);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A05A510;
    *(void *)(inited + 32) = 0x7974696361706FLL;
    *(void *)(inited + 40) = 0xE700000000000000;
    id v6 = objc_allocWithZone(MEMORY[0x263EFF9D0]);
    id v7 = v4;
    *(void *)(inited + 48) = objc_msgSend(v6, sel_init);
    sub_24A012AF4(inited);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26974FB68);
    double v8 = (void *)sub_24A0572E8();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setActions_, v8);

    objc_msgSend(v7, sel_setOpacity_, 0.0);
    id v9 = v7;
    objc_msgSend(v9, sel_frame);
    objc_msgSend(v9, sel_setFrame_);

    objc_msgSend(v9, sel_setCornerRadius_, v2);
    id v10 = v9;
    MEMORY[0x24C5B8D50]();
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_24A057598();
    }
    sub_24A0575B8();
    sub_24A057588();

    char v0 = 1;
  }
  while ((v3 & 1) == 0);
  return v12;
}

uint64_t sub_249FCB270()
{
  uint64_t v1 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews;
  if (*(void *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews);
  }
  else
  {
    uint64_t v3 = v0;
    sub_249FCB68C();
    double v5 = v4;
    uint64_t v28 = MEMORY[0x263F8EE78];
    id v6 = self;
    if (qword_26974F330 != -1) {
      swift_once();
    }
    id v7 = (id)qword_269752438;
    double v8 = (void *)sub_24A057368();
    id v9 = objc_msgSend(v6, sel_materialViewWithRecipeNamed_inBundle_options_initialWeighting_scaleAdjustment_, v8, v7, 0, 0, 1.0);

    if (v9)
    {
      id v10 = v9;
      objc_msgSend(v10, sel_frame);
      objc_msgSend(v10, sel_setFrame_);

      id v11 = objc_msgSend(v10, sel_layer);
      objc_msgSend(v11, sel_setCornerRadius_, v5 * 0.5);

      uint64_t v12 = self;
      id v13 = v10;
      id v14 = objc_msgSend(v12, sel_whiteColor);
      id v15 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.75);

      objc_msgSend(v13, sel_setBackgroundColor_, v15);
      id v16 = v13;
      MEMORY[0x24C5B8D50]();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24A057598();
      }
      sub_24A0575B8();
      sub_24A057588();
    }
    id v17 = (id)qword_269752438;
    uint64_t v18 = (void *)sub_24A057368();
    id v19 = objc_msgSend(v6, sel_materialViewWithRecipeNamed_inBundle_options_initialWeighting_scaleAdjustment_, v18, v17, 0, 0, 1.0);

    if (v19)
    {
      id v20 = v19;
      objc_msgSend(v20, sel_frame);
      objc_msgSend(v20, sel_setFrame_);

      id v21 = objc_msgSend(v20, sel_layer);
      objc_msgSend(v21, sel_setCornerRadius_, v5 * 0.5);

      uint64_t v22 = self;
      id v23 = v20;
      id v24 = objc_msgSend(v22, sel_whiteColor);
      id v25 = objc_msgSend(v24, sel_colorWithAlphaComponent_, 0.75);

      objc_msgSend(v23, sel_setBackgroundColor_, v25);
      id v26 = v23;
      MEMORY[0x24C5B8D50]();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24A057598();
      }
      sub_24A0575B8();
      sub_24A057588();
    }
    uint64_t v2 = v28;
    *(void *)(v3 + v1) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_249FCB68C()
{
  uint64_t v1 = (const UniChar *)sub_249FCEA7C(46, 0xE100000000000000);
  unint64_t v2 = *((void *)v1 + 2);
  uint64_t v3 = sub_249FC9DAC(0, v2);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel);
  double v5 = *(void **)(v4 + 24);
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v6 = (char *)v3;
  id v7 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v6 = sub_249FBA044(0, *((void *)v6 + 2), 0, v6);
  }
  BOOL GlyphsForCharacters = CTFontGetGlyphsForCharacters(v7, v1 + 16, (CGGlyph *)v6 + 16, v2);

  swift_release();
  if (!GlyphsForCharacters)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  id v9 = *(const __CTFont **)(v4 + 24);
  if (v9)
  {
    if (*((void *)v6 + 2))
    {
      PathForGlyph = CTFontCreatePathForGlyph(v9, *((_WORD *)v6 + 16), 0);
      if (PathForGlyph)
      {
        id v11 = PathForGlyph;
        CGPathGetBoundingBox(PathForGlyph);
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_249FCB7C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A0563F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v25 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask;
  if (*(void *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697520C0);
    sub_24A057688();
    swift_release();
  }
  id v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13(v12, v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeZone, v5, v10);
  uint64_t v14 = sub_24A057628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  id v24 = v4;
  uint64_t v16 = v15;
  swift_unknownObjectWeakInit();
  ((void (*)(char *, char *, uint64_t))v13)(v8, v12, v5);
  sub_24A057608();
  swift_retain();
  uint64_t v17 = sub_24A0575F8();
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x263F8F500];
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v18, v8, v5);
  *(void *)(v20 + v19) = v16;
  swift_release();
  uint64_t v22 = sub_24A039A1C((uint64_t)v24, (uint64_t)&unk_2697509D0, v20);
  *(void *)(v1 + v25) = v22;
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
}

uint64_t sub_249FCBAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  uint64_t v6 = type metadata accessor for TimeString(0);
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for TextClockDescriptor(0);
  v5[21] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F468);
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F470);
  v5[25] = v8;
  v5[26] = *(void *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = sub_24A057608();
  v5[29] = sub_24A0575F8();
  uint64_t v10 = sub_24A0575D8();
  v5[30] = v10;
  v5[31] = v9;
  return MEMORY[0x270FA2498](sub_249FCBCF0, v10, v9);
}

uint64_t sub_249FCBCF0()
{
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v4 = (double *)v0[21];
  uint64_t v3 = v0[22];
  uint64_t v5 = v0[11];
  uint64_t v6 = qword_269751340;
  uint64_t v7 = (char *)v4 + *(int *)(v0[20] + 20);
  uint64_t v8 = sub_24A0563F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v5, v8);
  *uint64_t v4 = 0.0;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v4;
  sub_249FCE794(v4, (void (*)(uint64_t))sub_249F6C970, v1);
  swift_task_dealloc();
  sub_249FCFF20((uint64_t)v4, type metadata accessor for TextClockDescriptor);
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[32] = 0;
  uint64_t v10 = sub_24A0575F8();
  v0[33] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[34] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_249FCBF10;
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[19];
  uint64_t v14 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v13, v10, v14, v12);
}

uint64_t sub_249FCBF10()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return MEMORY[0x270FA2498](sub_249FCC054, v3, v2);
}

uint64_t sub_249FCC054()
{
  uint64_t v1 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[14] + 48))(v1, 1, v0[13]) == 1)
  {
    (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    goto LABEL_8;
  }
  uint64_t v2 = v0[12] + 16;
  sub_249F6C538(v1, v0[18]);
  uint64_t v3 = MEMORY[0x24C5BA430](v2);
  if (!v3)
  {
    uint64_t v12 = v0[26];
    uint64_t v11 = v0[27];
    uint64_t v13 = v0[25];
    uint64_t v14 = v0[18];
    swift_release();
    sub_249FCFF20(v14, type metadata accessor for TimeString);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    goto LABEL_7;
  }
  uint64_t v4 = (char *)v3;
  uint64_t v5 = v0[32];
  sub_24A0576A8();
  if (v5)
  {
    uint64_t v7 = v0[26];
    uint64_t v6 = v0[27];
    uint64_t v8 = v0[25];
    uint64_t v9 = v0[18];

    swift_release();
    sub_249FCFF20(v9, type metadata accessor for TimeString);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
LABEL_8:
    return v10();
  }
  uint64_t v16 = v0[17];
  uint64_t v17 = (void *)v0[16];
  sub_249FCFF80(v0[18], v16, type metadata accessor for TimeString);
  unint64_t v18 = &v4[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeString];
  swift_beginAccess();
  sub_249FCFF80((uint64_t)v18, (uint64_t)v17, type metadata accessor for TimeString);
  swift_beginAccess();
  sub_249F6C29C(v16, (uint64_t)v18);
  swift_endAccess();
  BOOL v19 = *v17 == *(void *)v18 && v17[1] == *((void *)v18 + 1);
  if (!v19 && (sub_24A057D48() & 1) == 0)
  {
    uint64_t v20 = v0[15];
    sub_249FCFF80((uint64_t)v18, v20, type metadata accessor for TimeString);
    sub_249FCD5B0(v20);
    sub_249FCFF20(v20, type metadata accessor for TimeString);
  }
  uint64_t v21 = v0[18];
  uint64_t v22 = v0[16];
  sub_249FCFF20(v0[17], type metadata accessor for TimeString);
  sub_249FCFF20(v22, type metadata accessor for TimeString);

  sub_249FCFF20(v21, type metadata accessor for TimeString);
  v0[32] = 0;
  uint64_t v23 = sub_24A0575F8();
  v0[33] = v23;
  id v24 = (void *)swift_task_alloc();
  v0[34] = v24;
  *id v24 = v0;
  v24[1] = sub_249FCBF10;
  uint64_t v25 = v0[25];
  uint64_t v26 = v0[19];
  uint64_t v27 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v26, v23, v27, v25);
}

uint64_t sub_249FCC47C(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v5 = a1;
  uint64_t v6 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_overlap;
  sub_249FCC8D4(a1);
  double x = v7;
  objc_msgSend(v4, sel_bounds);
  double v9 = CGRectGetWidth(v64) / x;
  objc_msgSend(v4, sel_bounds);
  double Height = CGRectGetHeight(v65);
  sub_249FCCA30(v5);
  double v12 = Height / v11;
  if (v12 >= v9) {
    double v12 = v9;
  }
  if (*(double *)&v4[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale] < v12) {
    double v12 = *(double *)&v4[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale];
  }
  sdouble x = v12;
  objc_msgSend(v4, sel_bounds);
  double Width = CGRectGetWidth(v66);
  double v14 = *(double *)&v4[v6];
  uint64_t v49 = sub_249FCCB24(v5);
  if (v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v15)
  {
    while (v15 >= 1)
    {
      uint64_t v17 = 0;
      double v18 = (Width - x * sx) * 0.5;
      unint64_t v19 = v5;
      unint64_t v48 = v5 & 0xC000000000000001;
      double v47 = sx * v14;
      unint64_t v5 = 0x3FF0000000000000;
      while (1)
      {
        id v20 = v48 ? (id)MEMORY[0x24C5B92B0](v17, v19) : *(id *)(v19 + 8 * v17 + 32);
        uint64_t v21 = v20;
        objc_msgSend(v20, sel__tightBoundingRectOfFirstLine);
        double x = v67.origin.x;
        double v51 = CGRectGetWidth(v67);
        objc_msgSend(v21, sel_transform);
        long double v22 = atan2(t1.b, t1.a);
        CGAffineTransformMakeRotation(&t1, v22);
        CGFloat c = t1.c;
        CGFloat a = t1.a;
        tdouble x = t1.tx;
        CGFloat d = t1.d;
        CGFloat b = t1.b;
        tCGFloat y = t1.ty;
        CGAffineTransformMakeScale(&t1, sx, sx);
        double Width = t1.a;
        CGFloat v58 = t1.b;
        CGFloat v24 = t1.c;
        CGFloat v23 = t1.d;
        CGFloat v26 = t1.tx;
        CGFloat v25 = t1.ty;
        t1.CGFloat b = 0.0;
        t1.CGFloat c = 0.0;
        t1.CGFloat a = 1.0;
        t1.CGFloat d = 1.0;
        t1.tdouble x = 0.0;
        t1.tCGFloat y = 0.0;
        objc_msgSend(v21, sel_setTransform_, &t1);
        id v27 = v21;
        uint64_t v28 = v27;
        if (a3)
        {
          objc_msgSend(v27, sel__tightBoundingRectOfFirstLine);
          CGFloat v43 = v29;
          double v44 = v25;
          double v45 = v23;
          double v46 = v24;
          CGFloat v31 = v30;
          CGFloat v33 = v32;
          CGFloat v35 = v34;
          objc_msgSend(v4, sel_bounds);
          UIRectGetHeight(v36, v37, v38, v39);
          v68.origin.CGFloat y = v31;
          v68.size.CGFloat width = v33;
          CGFloat v24 = v46;
          v68.size.CGFloat height = v35;
          v68.origin.double x = v43;
          CGFloat v25 = v44;
          CGRectGetHeight(v68);
          CGFloat v23 = v45;
        }
        objc_msgSend(v28, sel_frame);
        objc_msgSend(v28, sel_setFrame_);

        double v14 = v58;
        t1.CGFloat a = Width;
        t1.CGFloat b = v58;
        t1.CGFloat c = v24;
        t1.CGFloat d = v23;
        t1.tdouble x = v26;
        t1.tCGFloat y = v25;
        objc_msgSend(v28, sel_setTransform_, &t1);
        uint64_t v40 = v17 - v49;
        if (__OFSUB__(v17, v49)) {
          break;
        }
        ++v17;
        double v41 = v18 - sx * x - v47 * (double)v40;
        id v42 = v28;
        objc_msgSend(v42, sel_frame);
        objc_msgSend(v42, sel_setFrame_, v41);

        t1.CGFloat a = Width;
        t1.CGFloat b = v58;
        t1.CGFloat c = v24;
        t1.CGFloat d = v23;
        t1.tdouble x = v26;
        t1.tCGFloat y = v25;
        t2.CGFloat a = a;
        t2.CGFloat b = b;
        t2.CGFloat c = c;
        t2.CGFloat d = d;
        t2.tdouble x = tx;
        t2.tCGFloat y = ty;
        CGAffineTransformConcat(&v60, &t1, &t2);
        CGAffineTransform t1 = v60;
        objc_msgSend(v42, sel_setTransform_, &t1);

        double v18 = v18 + sx * v51;
        if (v15 == v17) {
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t result = sub_24A057BD8();
      uint64_t v15 = result;
      if (!result) {
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249FCC8D4(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24A057BD8();
    uint64_t v3 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  double v6 = 0.0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x24C5B92B0](v5, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    ++v5;
    objc_msgSend(v7, sel__tightBoundingRectOfFirstLine);
    double Width = CGRectGetWidth(v13);

    double v6 = v6 + Width;
  }
  while (v3 != v5);
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24A057BD8();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v11 = __OFSUB__(v10, 1);
  uint64_t v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = sub_249FCCB24(a1);
  if (__OFSUB__(v12, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_249FCCA30(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24A057BD8();
  uint64_t v2 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    double v5 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x24C5B92B0](v4, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v7 = v6;
      objc_msgSend(v6, sel__tightBoundingRectOfFirstLine);
      double Height = CGRectGetHeight(v9);

      if (Height > v5) {
        double v5 = Height;
      }
      ++v4;
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_249FCCB24(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24A057BD8();
  if (!result) {
    goto LABEL_13;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x24C5B92B0](0, a1);
LABEL_6:
    double v5 = v4;
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v5, sel_text);

    if (v6)
    {
      uint64_t v7 = sub_24A0573A8();
      uint64_t v9 = v8;

      if (v7 == 9142498 && v9 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      char v10 = sub_24A057D48();
      swift_bridgeObjectRelease();
      if (v10) {
        return 1;
      }
    }
    return 0;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_249FCCC68()
{
  if (v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon] != 1) {
    return;
  }
  unint64_t v5 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel] + 16);
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v56 = (id)MEMORY[0x24C5B92B0](2, v5);
    swift_bridgeObjectRelease();
    id v6 = v56;
  }
  else
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
      __break(1u);
LABEL_15:
      if (sub_24A057BD8()) {
        goto LABEL_7;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    id v6 = *(id *)(v5 + 48);
  }
  id v55 = v6;
  objc_msgSend(v6, sel__tightBoundingRectOfFirstLine);
  double v1 = v7;
  double v2 = v8;
  CGFloat v3 = v9;
  CGFloat v4 = v10;
  unint64_t v11 = sub_249FCB270();
  unint64_t v5 = v11;
  if (v11 >> 62) {
    goto LABEL_15;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x24C5B92B0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_24A057BD8();
      if (!v17) {
        goto LABEL_28;
      }
      goto LABEL_19;
    }
    id v12 = *(id *)(v5 + 32);
  }
  CGRect v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, sel_superview);

  if (v14)
  {

    goto LABEL_38;
  }
LABEL_17:
  objc_msgSend(v0, sel_bringSubviewToFront_, v55);
  id v15 = objc_msgSend(v55, sel_layer);
  objc_msgSend(v15, sel_setCompositingFilter_, 0);

  unint64_t v16 = sub_249FCB270();
  unint64_t v5 = v16;
  if (v16 >> 62) {
    goto LABEL_27;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_28;
  }
LABEL_19:
  if (v17 < 1)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x24C5B92B0](i, v5);
    }
    else {
      id v19 = *(id *)(v5 + 8 * i + 32);
    }
    id v20 = v19;
    objc_msgSend(v55, sel_addSubview_, v19);
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  unint64_t v21 = sub_249FCF2F8();
  os_log_type_t v54 = v0;
  unint64_t v22 = sub_249FCAFD8();
  unint64_t v23 = v22;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_24A057BD8();
    if (v24) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
    {
LABEL_30:
      if (v24 < 1)
      {
LABEL_92:
        __break(1u);
        return;
      }
      uint64_t v25 = 0;
      do
      {
        if ((v23 & 0xC000000000000001) != 0) {
          id v26 = (id)MEMORY[0x24C5B92B0](v25, v23);
        }
        else {
          id v26 = *(id *)(v23 + 8 * v25 + 32);
        }
        id v27 = v26;
        ++v25;
        id v28 = objc_msgSend(v55, sel_layer, v54);
        objc_msgSend(v28, sel_addSublayer_, v27);

        sub_249FCA0D0(v21);
        double v29 = (void *)sub_24A057548();
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_setFilters_, v29);
      }
      while (v24 != v25);
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_38:
  unint64_t v30 = sub_249FCB270();
  unint64_t v31 = v30;
  if (v30 >> 62) {
    unint64_t v32 = sub_24A057BD8();
  }
  else {
    unint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v32)
  {
    if ((v31 & 0xC000000000000001) != 0)
    {
      id v33 = (id)MEMORY[0x24C5B92B0](0, v31);
    }
    else
    {
      if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_81;
      }
      id v33 = *(id *)(v31 + 32);
    }
    double v34 = v33;
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_frame);
    objc_msgSend(v34, sel_setFrame_, v1, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v35 = sub_249FCB270();
  unint64_t v31 = v35;
  if (v35 >> 62)
  {
    uint64_t v36 = sub_24A057BD8();
    if (v36)
    {
LABEL_48:
      BOOL v37 = __OFSUB__(v36, 1);
      unint64_t v32 = v36 - 1;
      if (!v37)
      {
        if ((v31 & 0xC000000000000001) == 0)
        {
          if ((v32 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v32 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v38 = *(id *)(v31 + 8 * v32 + 32);
LABEL_53:
            double v39 = v38;
            swift_bridgeObjectRelease();
            id v40 = v39;
            v58.origin.double x = v1;
            v58.origin.CGFloat y = v2;
            v58.size.CGFloat width = v3;
            v58.size.CGFloat height = v4;
            double v41 = v2 + CGRectGetHeight(v58);
            objc_msgSend(v40, sel_frame);
            double v42 = v41 - CGRectGetHeight(v59);
            objc_msgSend(v40, sel_frame);
            objc_msgSend(v40, sel_setFrame_, v1, v42);

            goto LABEL_57;
          }
          __break(1u);
          goto LABEL_85;
        }
LABEL_82:
        id v38 = (id)MEMORY[0x24C5B92B0](v32, v31);
        goto LABEL_53;
      }
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
  }
  else
  {
    uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v36) {
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRelease();
LABEL_57:
  unint64_t v43 = sub_249FCAFD8();
  unint64_t v31 = v43;
  if (v43 >> 62)
  {
    unint64_t v44 = sub_24A057BD8();
    if (v44)
    {
LABEL_59:
      if ((v31 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_87;
        }
        id v45 = *(id *)(v31 + 32);
        goto LABEL_62;
      }
LABEL_85:
      id v45 = (id)MEMORY[0x24C5B92B0](0, v31);
LABEL_62:
      double v46 = v45;
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_frame);
      objc_msgSend(v46, sel_setFrame_, v1, v2);

      goto LABEL_65;
    }
  }
  else
  {
    unint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44) {
      goto LABEL_59;
    }
  }
  swift_bridgeObjectRelease();
LABEL_65:
  unint64_t v47 = sub_249FCAFD8();
  unint64_t v31 = v47;
  if (v47 >> 62)
  {
    uint64_t v48 = sub_24A057BD8();
    if (v48)
    {
LABEL_67:
      BOOL v37 = __OFSUB__(v48, 1);
      unint64_t v44 = v48 - 1;
      if (!v37)
      {
        if ((v31 & 0xC000000000000001) == 0)
        {
          if ((v44 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v44 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v49 = *(id *)(v31 + 8 * v44 + 32);
LABEL_72:
            uint64_t v50 = v49;
            swift_bridgeObjectRelease();
            id v51 = v50;
            v60.origin.double x = v1;
            v60.origin.CGFloat y = v2;
            v60.size.CGFloat width = v3;
            v60.size.CGFloat height = v4;
            double v52 = v2 + CGRectGetHeight(v60);
            objc_msgSend(v51, sel_frame);
            double v53 = v52 - CGRectGetHeight(v61);
            objc_msgSend(v51, sel_frame);
            objc_msgSend(v51, sel_setFrame_, v1, v53);

            return;
          }
          __break(1u);
          goto LABEL_91;
        }
LABEL_88:
        id v49 = (id)MEMORY[0x24C5B92B0](v44, v31);
        goto LABEL_72;
      }
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
  }
  else
  {
    uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v48) {
      goto LABEL_67;
    }
  }

  swift_bridgeObjectRelease();
}

unint64_t sub_249FCD3AC(unint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_transformModifier) != 1) {
    return result;
  }
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
LABEL_19:
    return swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_24A057BD8();
  if (!v3) {
    goto LABEL_19;
  }
LABEL_4:
  for (uint64_t i = 4; ; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x24C5B92B0](i - 4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * i);
    }
    id v6 = v5;
    uint64_t v7 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (qword_26974F318 != -1) {
      swift_once();
    }
    double v8 = off_269750948;
    unint64_t v9 = *((void *)off_269750948 + 2);
    if (HIDWORD(v9)) {
      break;
    }
    if (v8[2] <= (unint64_t)arc4random_uniform(v9)) {
      goto LABEL_17;
    }
    CLKDegreesToRadians();
    CGAffineTransformMakeRotation(&v11, v10);
    objc_msgSend(v6, sel_setTransform_, &v11);

    if (v7 == v3) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_24A057BB8();
  __break(1u);
  return result;
}

uint64_t sub_249FCD5B0(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v84 = sub_24A057278();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  int v81 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_24A0572B8();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v79 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimeString(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v76 = v8;
  uint64_t v77 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  MEMORY[0x270FA5388](v9 - 8);
  CGAffineTransform v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel];
  uint64_t v78 = a1;
  sub_249FCFF80(a1, (uint64_t)v11, type metadata accessor for TimeString);
  uint64_t v75 = v7;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  uint64_t v13 = v12 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_249FCF908((uint64_t)v11, v13);
  swift_endAccess();
  uint64_t v91 = v12;
  sub_249F8BCB8();
  sub_249F8C2D0((uint64_t)v11);
  objc_msgSend(v2, sel_setNeedsLayout);
  objc_msgSend(v2, sel_layoutIfNeeded);
  v2[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 1;
  id v14 = dispatch_group_create();
  uint64_t v92 = v2;
  unint64_t v15 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel] + 16);
  if (v15 >> 62) {
    goto LABEL_37;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = &unk_24A05A000; v16; uint64_t i = (void *)&unk_24A05A000)
  {
    id v89 = self;
    unint64_t v90 = v15 & 0xC000000000000001;
    uint64_t v85 = v15 & 0xFFFFFFFFFFFFFF8;
    uint64_t v88 = &v97;
    double v18 = 0.0333333333;
    double v19 = -0.0333333333;
    id v20 = &off_265282000;
    uint64_t v21 = i[139];
    unint64_t v87 = v15;
    uint64_t v86 = v16;
    uint64_t v22 = 4;
    while (1)
    {
      unint64_t v23 = v22 - 4;
      if (v90)
      {
        id v24 = (id)MEMORY[0x24C5B92B0](v22 - 4, v15);
      }
      else
      {
        if (v23 >= *(void *)(v85 + 16)) {
          goto LABEL_36;
        }
        id v24 = *(id *)(v15 + 8 * v22);
      }
      uint64_t v25 = v24;
      if (__OFADD__(v23, 1)) {
        break;
      }
      uint64_t v26 = *(void *)(v91 + 16);
      uint64_t v93 = v22 - 3;
      if ((v26 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v27 = (id)MEMORY[0x24C5B92B0](v22 - 4, v26);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_35;
        }
        id v27 = *(id *)(v26 + 8 * v22);
      }
      id v28 = [v25 (SEL)v20[227]];
      if (v28)
      {
        double v29 = v28;
        uint64_t v30 = sub_24A0573A8();
        uint64_t v32 = v31;
      }
      else
      {
        uint64_t v30 = 0;
        uint64_t v32 = 0;
      }
      id v33 = [v27 (SEL)v20[227]];
      if (v33)
      {
        double v34 = v33;
        uint64_t v35 = sub_24A0573A8();
        uint64_t v37 = v36;

        if (v32)
        {
          if (v37)
          {
            if (v30 == v35 && v32 == v37)
            {
              swift_bridgeObjectRelease();
              char v38 = 1;
            }
            else
            {
              char v38 = sub_24A057D48();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
LABEL_22:
            char v38 = 0;
          }
LABEL_27:
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
        if (v37)
        {
          char v38 = 0;
          goto LABEL_27;
        }
      }
      else if (v32)
      {
        goto LABEL_22;
      }
      char v38 = 1;
LABEL_28:
      objc_msgSend(v27, sel__tightBoundingRectOfFirstLine);
      CGFloat v40 = v39;
      double v42 = v41;
      CGFloat v44 = v43;
      CGFloat v46 = v45;
      objc_msgSend(v92, sel_bounds);
      double Height = UIRectGetHeight(v47, v48, v49, v50);
      v101.origin.double x = v40;
      v101.origin.CGFloat y = v42;
      v101.size.CGFloat width = v44;
      v101.size.CGFloat height = v46;
      double v52 = (Height - CGRectGetHeight(v101)) * 0.5 - v42;
      double v19 = v18 + v19;
      dispatch_group_enter(v14);
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v27;
      BOOL v54 = (v38 & 1) == 0;
      *(unsigned char *)(v53 + 24) = v54;
      *(double *)(v53 + 32) = v52;
      *(void *)(v53 + 40) = v25;
      uint64_t v99 = sub_249FCF9B8;
      uint64_t v100 = v53;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v96 = v21;
      uint64_t v97 = sub_249F892E0;
      uint64_t v98 = &block_descriptor_5;
      id v55 = _Block_copy(&aBlock);
      id v56 = v27;
      id v57 = v25;
      swift_release();
      uint64_t v58 = swift_allocObject();
      *(unsigned char *)(v58 + 16) = v54;
      *(void *)(v58 + 24) = v57;
      *(void *)(v58 + 32) = v56;
      *(void *)(v58 + 40) = v14;
      uint64_t v99 = sub_249FCFA2C;
      uint64_t v100 = v58;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v96 = v21;
      uint64_t v97 = sub_249FCE184;
      uint64_t v98 = &block_descriptor_52;
      CGRect v59 = _Block_copy(&aBlock);
      id v60 = v56;
      id v61 = v57;
      CGFloat v62 = v14;
      swift_release();
      objc_msgSend(v89, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v55, v59, 2.0, v19, 0.6, 0.0);

      _Block_release(v59);
      _Block_release(v55);
      if (v38)
      {
        ++v22;
        unint64_t v15 = v87;
        id v20 = &off_265282000;
        if (v93 == v86) {
          goto LABEL_39;
        }
      }
      else
      {
        double v18 = 0.0833333333;
        unint64_t v15 = v87;
        id v20 = &off_265282000;
        if (v93 == v86) {
          goto LABEL_39;
        }
        uint64_t v22 = v93 + 4;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24A057BD8();
  }
  double v19 = -0.0333333333;
LABEL_39:
  swift_bridgeObjectRelease();
  if (MEMORY[0x24C5BA430](&v92[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate]))
  {
    sub_24A0556D0(v14, v19);
    swift_unknownObjectRelease();
  }
  sub_249FCFCA0(0, (unint64_t *)&qword_2697515B0);
  uint64_t v63 = (void *)sub_24A057848();
  uint64_t v64 = v77;
  sub_249FCFF80(v78, v77, type metadata accessor for TimeString);
  unint64_t v65 = (*(unsigned __int8 *)(v75 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  uint64_t v66 = swift_allocObject();
  id v67 = v92;
  *(void *)(v66 + 16) = v92;
  sub_249F6C538(v64, v66 + v65);
  uint64_t v99 = sub_249FCFB88;
  uint64_t v100 = v66;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_249F892E0;
  uint64_t v98 = &block_descriptor_58;
  CGRect v68 = _Block_copy(&aBlock);
  id v69 = v67;
  CGRect v70 = v79;
  sub_24A057298();
  uint64_t v94 = MEMORY[0x263F8EE78];
  sub_249FCFBEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697509B0);
  sub_249FCFC44();
  CGRect v71 = v81;
  uint64_t v72 = v84;
  sub_24A0579C8();
  sub_24A057818();
  _Block_release(v68);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v71, v72);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v70, v82);
  return swift_release();
}

id sub_249FCDF90(void *a1, char a2, void *a3)
{
  objc_msgSend(a1, sel_transform);
  uint64_t v7 = v15;
  uint64_t v6 = v16;
  uint64_t v9 = v17;
  uint64_t v8 = v18;
  uint64_t v11 = v19;
  uint64_t v10 = v20;
  uint64_t v15 = 0x3FF0000000000000;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0x3FF0000000000000;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  objc_msgSend(a1, sel_setTransform_, &v15);
  if (a2)
  {
    objc_msgSend(a1, sel_frame);
    objc_msgSend(a1, sel_setFrame_);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v21);
    objc_msgSend(a3, sel_frame);
    objc_msgSend(a3, sel_setFrame_);
    return objc_msgSend(a1, sel_setTransform_, &v15, v7, v6, v9, v8, v11, v10);
  }
  else
  {
    uint64_t v15 = 0x3FF0000000000000;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0x3FF0000000000000;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    objc_msgSend(a3, sel_setTransform_, &v15);
    objc_msgSend(a1, sel_frame);
    double v14 = v13;
    objc_msgSend(a3, sel_frame);
    objc_msgSend(a3, sel_setFrame_, v14);
    return objc_msgSend(a3, sel_setTransform_, &v15, v7, v6, v9, v8, v11, v10);
  }
}

void sub_249FCE114(int a1, char a2, void *a3, id a4, dispatch_group_t group)
{
  if (a2)
  {
    objc_msgSend(a4, sel_transform);
    objc_msgSend(a3, sel_setTransform_, &v7);
  }
  dispatch_group_leave(group);
}

uint64_t sub_249FCE184(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_249FCE1D8(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 0;
  uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel];
  sub_249FCFF80(a2, (uint64_t)v6, type metadata accessor for TimeString);
  uint64_t v8 = type metadata accessor for TimeString(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_249FCF908((uint64_t)v6, v9);
  swift_endAccess();
  sub_249F8BCB8();
  sub_249F8C2D0((uint64_t)v6);
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_249FCD3AC(v10);
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setNeedsLayout);
  return objc_msgSend(a1, sel_layoutIfNeeded);
}

id sub_249FCE358()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RollingTimeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_249FCE488()
{
  return type metadata accessor for RollingTimeView();
}

uint64_t type metadata accessor for RollingTimeView()
{
  uint64_t result = qword_269750990;
  if (!qword_269750990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249FCE4DC()
{
  uint64_t result = sub_24A0563F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeString(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RollingTimeView.TransformModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FCE6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RollingTimeView.TransformModifier()
{
  return &type metadata for RollingTimeView.TransformModifier;
}

unint64_t sub_249FCE6F4()
{
  unint64_t result = qword_2697509A0;
  if (!qword_2697509A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697509A0);
  }
  return result;
}

uint64_t sub_249FCE748()
{
  unint64_t v1 = (void *)sub_24A01F670(-5, 5);
  uint64_t result = sub_24A039D2C(5uLL);
  off_269750948 = v1;
  return result;
}

uint64_t sub_249FCE794@<X0>(double *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (double *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v3 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  uint64_t v12 = (uint64_t *)(v3 + 24);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v3 + 24);
  if (!*(void *)(v13 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_24A01518C(a1);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697509D8);
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = v16 + *(void *)(*(void *)v16 + 96);
    uint64_t v18 = type metadata accessor for TimeString(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = *(void *)(*(void *)v16 + 104);
    type metadata accessor for CPUnfairLock();
    uint64_t v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = 0;
    *(void *)(v16 + v19) = v20;
    *(void *)(v16 + *(void *)(*(void *)v16 + 112)) = MEMORY[0x263F8EE80];
    *(unsigned char *)(v16 + *(void *)(*(void *)v16 + 120)) = 0;
    sub_249FCFF80((uint64_t)a1, (uint64_t)v10, type metadata accessor for TextClockDescriptor);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v12;
    *uint64_t v12 = 0x8000000000000000;
    sub_249FFEC00(v16, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v12 = v24;
    swift_bridgeObjectRelease();
    sub_249FCFF20((uint64_t)v10, type metadata accessor for TextClockDescriptor);
    swift_endAccess();
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
  swift_retain();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_retain();
  sub_249FEFAD8(v16, v4, a2, a3);
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  return swift_release();
}

void *sub_249FCEA7C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_24A0574B8();
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    uint64_t v5 = sub_249FCEE74(v4, 0);
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_249FCEB50((uint64_t)v7, (uint64_t)(v5 + 4), v4, a1, v2);
    swift_bridgeObjectRelease();
    if (v2 == v4) {
      break;
    }
    __break(1u);
LABEL_5:
    uint64_t v4 = sub_24A0574A8();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

uint64_t sub_249FCEB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (!a2)
  {
    uint64_t v11 = 0;
    __int16 v12 = 0;
    a3 = 0;
    char v15 = 1;
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  if (!a3)
  {
    uint64_t v11 = 0;
    __int16 v12 = 0;
    char v15 = 1;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
    __break(1u);
    JUMPOUT(0x249FCEE54);
  }
  uint64_t v11 = 0;
  __int16 v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = a5 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v27 = a1;
  char v15 = 1;
  while (1)
  {
    if ((v15 & 1) == 0)
    {
      char v15 = 1;
      LOWORD(v16) = v12;
      __int16 v12 = 0;
      goto LABEL_9;
    }
    if (v11 >= v8) {
      break;
    }
    if ((a5 & 0x1000000000000000) != 0)
    {
      uint64_t v21 = v14;
      unsigned int v22 = sub_24A057A68();
      uint64_t v14 = v21;
      unsigned int v16 = v22;
    }
    else
    {
      if ((a5 & 0x2000000000000000) == 0)
      {
        uint64_t v17 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a4 & 0x1000000000000000) == 0)
        {
          uint64_t v25 = v14;
          uint64_t v17 = sub_24A057AA8();
          uint64_t v14 = v25;
        }
        unsigned int v16 = *(unsigned __int8 *)(v17 + v11);
        if (*(char *)(v17 + v11) < 0)
        {
          switch(__clz(v16 ^ 0xFF))
          {
            case 0x1Au:
              LOWORD(v16) = *(unsigned char *)(v11 + v17 + 1) & 0x3F | ((v16 & 0x1F) << 6);
              uint64_t v18 = 2;
              goto LABEL_18;
            case 0x1Bu:
              LOWORD(v16) = ((v16 & 0xF) << 12) | ((*(unsigned char *)(v11 + v17 + 1) & 0x3F) << 6) | *(unsigned char *)(v11 + v17 + 2) & 0x3F;
              uint64_t v18 = 3;
              goto LABEL_18;
            case 0x1Cu:
              uint64_t v20 = (char *)(v11 + v17);
              goto LABEL_29;
            default:
              break;
          }
        }
        uint64_t v18 = 1;
LABEL_18:
        v11 += v18;
        char v15 = 1;
        goto LABEL_9;
      }
      v28[0] = a4;
      v28[1] = v14;
      unsigned int v16 = *((unsigned __int8 *)v28 + v11);
      if (*((char *)v28 + v11) < 0)
      {
        switch(__clz(v16 ^ 0xFF))
        {
          case 0x1Au:
            unsigned int v16 = *((unsigned char *)v28 + v11 + 1) & 0x3F | ((v16 & 0x1F) << 6);
            uint64_t v19 = 2;
            break;
          case 0x1Bu:
            unsigned int v16 = ((v16 & 0xF) << 12) | ((*((unsigned char *)v28 + v11 + 1) & 0x3F) << 6) | *((unsigned char *)v28 + v11 + 2) & 0x3F;
            uint64_t v19 = 3;
            break;
          case 0x1Cu:
            uint64_t v20 = (char *)v28 + v11;
LABEL_29:
            unsigned int v16 = ((v16 & 0xF) << 18) | ((v20[1] & 0x3F) << 12) | ((v20[2] & 0x3F) << 6) | v20[3] & 0x3F;
            uint64_t v19 = 4;
            break;
          default:
            goto LABEL_20;
        }
      }
      else
      {
LABEL_20:
        uint64_t v19 = 1;
      }
    }
    v11 += v19;
    if (HIWORD(v16))
    {
      uint64_t v23 = v14;
      __int16 v12 = sub_24A057ED8();
      __int16 v24 = sub_24A057ED8();
      uint64_t v14 = v23;
      LOWORD(v16) = v24;
      char v15 = 0;
    }
    else
    {
      char v15 = 1;
    }
LABEL_9:
    *(_WORD *)(a2 + 2 * v13++) = v16;
    if (a3 == v13) {
      goto LABEL_37;
    }
  }
  char v15 = 1;
  a3 = v13;
LABEL_37:
  a1 = v27;
LABEL_38:
  swift_bridgeObjectRelease();
LABEL_39:
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 34) = v15;
  return a3;
}

void *sub_249FCEE74(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750588);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  int64_t v6 = v5 - 32;
  if (v5 < 32) {
    int64_t v6 = v5 - 31;
  }
  v4[2] = a1;
  v4[3] = v6 & 0xFFFFFFFFFFFFFFFELL;
  return v4;
}

void sub_249FCEEE8()
{
  sub_24A0563E8();
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_overlap] = 0;
  v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter] = 0;
  v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_transformModifier] = 0;
  uint64_t v1 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel;
  type metadata accessor for RollingTimeLabel();
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = sub_249F8B9E0();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = v3;
  uint64_t v4 = (char *)v2 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  uint64_t v5 = type metadata accessor for TimeString(0);
  int64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(void *)&v0[v1] = v2;
  uint64_t v7 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel;
  uint64_t v8 = (char *)swift_allocObject();
  uint64_t v9 = sub_249F8B9E0();
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  *((void *)v8 + 2) = v9;
  v6(&v8[OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString], 1, 1, v5);
  *(void *)&v0[v7] = v8;
  uint64_t v10 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale;
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_mainScreen);
  objc_msgSend(v12, sel_scale);
  double v14 = v13;

  id v15 = objc_msgSend(v11, sel_mainScreen);
  objc_msgSend(v15, sel_nativeScale);
  double v17 = v16;

  *(double *)&v0[v10] = v14 / v17;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews] = 0;
  v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask] = 0;

  sub_24A057BC8();
  __break(1u);
}

uint64_t sub_249FCF134(uint64_t a1, void *a2)
{
  unint64_t v4 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel) + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_24A057BD8();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x24C5B92B0](i, v4);
    }
    else {
      id v8 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    objc_msgSend(a2, sel_addSubview_, v8);
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  unint64_t v10 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel) + 16);
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v11) {
      goto LABEL_12;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24A057BD8();
  uint64_t v11 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_12:
  if (v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x24C5B92B0](j, v10);
      }
      else {
        id v13 = *(id *)(v10 + 8 * j + 32);
      }
      double v14 = v13;
      objc_msgSend(a2, sel_addSubview_, v13);
    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_249FCF2F8()
{
  sub_24A0573A8();
  id v0 = objc_allocWithZone(MEMORY[0x263F157C8]);
  uint64_t v1 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithType_, v1);

  uint64_t v3 = (void *)sub_24A057548();
  objc_msgSend(v2, sel_setValue_forKey_, v3, *MEMORY[0x263F15CB0]);

  unint64_t v4 = (void *)sub_24A0564C8();
  uint64_t v5 = *MEMORY[0x263F15BF8];
  objc_msgSend(v2, sel_setValue_forKey_, v4, *MEMORY[0x263F15BF8]);

  sub_24A0573A8();
  id v6 = objc_allocWithZone(MEMORY[0x263F157C8]);
  uint64_t v7 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithType_, v7);

  uint64_t v9 = (void *)sub_24A057718();
  objc_msgSend(v8, sel_setValue_forKey_, v9, *MEMORY[0x263F15C80]);

  unint64_t v10 = (void *)sub_24A0575C8();
  objc_msgSend(v8, sel_setValue_forKey_, v10, *MEMORY[0x263F15C68]);

  uint64_t v11 = (void *)sub_24A0575C8();
  objc_msgSend(v8, sel_setValue_forKey_, v11, *MEMORY[0x263F15C38]);

  sub_24A0573A8();
  id v12 = objc_allocWithZone(MEMORY[0x263F157C8]);
  id v13 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithType_, v13);

  id v15 = (void *)sub_24A0564C8();
  objc_msgSend(v14, sel_setValue_forKey_, v15, v5);

  sub_24A0573A8();
  id v16 = objc_allocWithZone(MEMORY[0x263F157C8]);
  double v17 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v16, sel_initWithType_, v17);

  v26[0] = xmmword_24A05EA40;
  v26[1] = xmmword_24A05EA50;
  v26[2] = xmmword_24A05EA60;
  v26[3] = xmmword_24A05EA70;
  v26[4] = xmmword_24A0593C0;
  id v19 = objc_msgSend(self, sel_valueWithCAColorMatrix_, v26);
  objc_msgSend(v18, sel_setValue_forKey_, v19, *MEMORY[0x263F15C30]);

  sub_24A0573A8();
  id v20 = objc_allocWithZone(MEMORY[0x263F157C8]);
  uint64_t v21 = (void *)sub_24A057368();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_initWithType_, v21);

  CGColorRef GenericRGB = CGColorCreateGenericRGB(1.0, 0.0, 0.0, 0.08);
  objc_msgSend(v22, sel_setValue_forKey_, GenericRGB, *MEMORY[0x263F15C20]);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F928);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_24A05EA80;
  *(void *)(v24 + 32) = v2;
  *(void *)(v24 + 40) = v8;
  *(void *)(v24 + 48) = v14;
  *(void *)(v24 + 56) = v18;
  *(void *)(v24 + 64) = v22;
  *(void *)&v26[0] = v24;
  sub_24A057588();
  return *(void *)&v26[0];
}

uint64_t sub_249FCF6F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel) + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_24A057BD8();
    uint64_t v4 = result;
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
  }
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v6 = 0;
    uint64_t v7 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x24C5B92B0](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      ++v6;
      id v10 = objc_msgSend(v8, sel_layer);
      objc_msgSend(v10, sel_setCompositingFilter_, *(void *)(a2 + v7));
    }
    while (v4 != v6);
  }
  swift_bridgeObjectRelease_n();
  unint64_t v11 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel) + 16);
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v12) {
      goto LABEL_12;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24A057BD8();
  uint64_t v12 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_12:
  if (v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter;
    do
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v15 = (id)MEMORY[0x24C5B92B0](v13, v11);
      }
      else {
        id v15 = *(id *)(v11 + 8 * v13 + 32);
      }
      id v16 = v15;
      ++v13;
      id v17 = objc_msgSend(v15, sel_layer);
      objc_msgSend(v17, sel_setCompositingFilter_, *(void *)(a2 + v14));
    }
    while (v12 != v13);
    return swift_bridgeObjectRelease_n();
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_249FCF908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double UIRectGetHeight(double a1, double a2, double a3, double a4)
{
  return a4;
}

uint64_t sub_249FCF978()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

id sub_249FCF9B8()
{
  return sub_249FCDF90(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 40));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_249FCF9E4()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_249FCFA2C(int a1)
{
  sub_249FCE114(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24), *(id *)(v1 + 32), *(dispatch_group_t *)(v1 + 40));
}

uint64_t sub_249FCFA3C()
{
  uint64_t v1 = (int *)(type metadata accessor for TimeString(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[11];
  uint64_t v8 = sub_24A0563F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[12];
  uint64_t v10 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

id sub_249FCFB88()
{
  uint64_t v1 = *(void *)(type metadata accessor for TimeString(0) - 8);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_249FCE1D8(v2, v3);
}

unint64_t sub_249FCFBEC()
{
  unint64_t result = qword_2697509A8;
  if (!qword_2697509A8)
  {
    sub_24A057278();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697509A8);
  }
  return result;
}

unint64_t sub_249FCFC44()
{
  unint64_t result = qword_2697509B8;
  if (!qword_2697509B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697509B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697509B8);
  }
  return result;
}

uint64_t sub_249FCFCA0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_249FCFCDC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249FCFD14()
{
  uint64_t v1 = sub_24A0563F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_249FCFDFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_24A0563F8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_249F6C87C;
  return sub_249FCBAB0(a1, v6, v7, v8, v9);
}

uint64_t sub_249FCFF20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249FCFF80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249FCFFE8(uint64_t a1)
{
  return a1;
}

void sub_249FD0020(float a1, float a2)
{
  if ((~COERCE_INT(a2 - a1) & 0x7F800000) != 0) {
    sub_249FD62CC(16777217);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_249FD0094@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750A80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FD635C();
  sub_24A057EB8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  v14[7] = 0;
  sub_249F9AB68();
  sub_24A057C88();
  sub_249F7B58C((uint64_t)v15, (uint64_t)v16);
  v15[0] = 3;
  sub_24A057C68();
  uint64_t v19 = v9;
  v15[0] = 1;
  sub_24A057C78();
  int v17 = v10;
  v15[0] = 2;
  sub_24A057C78();
  int v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  int v18 = v12;
  sub_249F77D98((uint64_t)v16, a2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_249F77DF4((uint64_t)v16);
}

uint64_t sub_249FD0308(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750A90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FD635C();
  sub_24A057EC8();
  v8[15] = 0;
  sub_249F9ABBC();
  sub_24A057CD8();
  if (!v1)
  {
    v8[14] = 1;
    sub_24A057CC8();
    v8[13] = 2;
    sub_24A057CC8();
    v8[12] = 3;
    sub_24A057CB8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_249FD04C8(unsigned __int8 *a1, char *a2)
{
  return sub_24A011EF4(*a1, *a2);
}

uint64_t sub_249FD04D4()
{
  return sub_24A057E68();
}

uint64_t sub_249FD05AC()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249FD066C()
{
  return sub_24A057E68();
}

uint64_t sub_249FD0740@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FD7388();
  *a1 = result;
  return result;
}

void sub_249FD0770(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1802465132;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x756F726765726F66;
      unint64_t v2 = 0xEE0064656553646ELL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "backgroundSeed");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x6D69546573696F6ELL;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_249FD0820()
{
  uint64_t result = 1802465132;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1701998438;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 1801675106;
LABEL_4:
      uint64_t result = v2 | 0x756F726700000000;
      break;
    case 3:
      uint64_t result = 0x6D69546573696F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249FD08AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FD7388();
  *a1 = result;
  return result;
}

void sub_249FD08D4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_249FD08E0(uint64_t a1)
{
  unint64_t v2 = sub_249FD635C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249FD091C(uint64_t a1)
{
  unint64_t v2 = sub_249FD635C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249FD0958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_249F75B7C(a1, (uint64_t)v9);
  sub_249FD0020(0.0, 10000.0);
  int v5 = v4;
  sub_249FD0020(10001.0, 20000.0);
  int v7 = v6;
  sub_249F75BD8(a1);
  uint64_t result = sub_249F7B58C((uint64_t)v9, a2);
  *(void *)(a2 + 112) = 0;
  *(_DWORD *)(a2 + 100) = v5;
  *(_DWORD *)(a2 + 104) = v7;
  return result;
}

uint64_t sub_249FD09E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FD0094(a1, a2);
}

uint64_t sub_249FD0A00(void *a1)
{
  return sub_249FD0308(a1);
}

double sub_249FD0A20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4 = a1 == 7957363 && a2 == 0xE300000000000000;
  if (v4 || (sub_24A057D48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    long long v9 = 0u;
  }
  else
  {
    if (a1 == 0x6D75727463657073 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = sub_24A057D48();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        *(void *)a3 = 0;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)(a3 + 24) = 2;
        double result = 0.0;
        *(_OWORD *)(a3 + 32) = 0u;
        *(_OWORD *)(a3 + 48) = 0u;
        *(_OWORD *)(a3 + 64) = 0u;
        return result;
      }
    }
    long long v9 = 0uLL;
    *(void *)&long long v10 = 0;
    *((void *)&v10 + 1) = 1;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_249FD6D14(&v9, (_OWORD *)a3);
  return result;
}

void sub_249FD0B50(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  *(float *)(a2 + 80) = a3;
  sub_249FD1170(v75);
  sub_249FD68E8((uint64_t)v75, (uint64_t)&v72);
  if (v73 == 1)
  {
    uint64_t v12 = *(void *)(a1 + 112);
    int v13 = *(_DWORD *)(a1 + 100);
    *(void *)(a2 + 64) = &type metadata for ColorProvider;
    unint64_t v14 = sub_249FD69BC();
    *(void *)(a2 + 72) = v14;
    uint64_t v15 = swift_allocObject();
    *(void *)(a2 + 40) = v15;
    *(void *)(v15 + 40) = &type metadata for NoiseColorChannelGenerator;
    *(void *)(v15 + 48) = &off_26FDE7698;
    id v16 = (void *)swift_allocObject();
    *(void *)(v15 + 16) = v16;
    v16[5] = &type metadata for PerlinNoiseGenerator;
    unint64_t v17 = sub_249FD6958();
    v16[6] = v17;
    uint64_t v18 = swift_allocObject();
    v16[2] = v18;
    *(void *)(v18 + 16) = v12;
    *(_DWORD *)(v18 + 24) = v13;
    *(_OWORD *)(v18 + 28) = xmmword_24A05EBB0;
    *(void *)(v15 + 80) = &type metadata for FixedColorChannel;
    *(void *)(v15 + 88) = &off_26FDE7688;
    *(_DWORD *)(v15 + 56) = 1051260355;
    uint64_t v19 = sub_249FD6BBC(0.66, 1.0);
    *(void *)(v15 + 120) = &type metadata for ColorCurveChannelProvider;
    *(void *)(v15 + 128) = &off_26FDE7678;
    *(_DWORD *)(v15 + 96) = v20;
    *(void *)(v15 + 104) = v19;
    int v21 = *(_DWORD *)(a1 + 104);
    CGRect v70 = &type metadata for NoiseColorChannelGenerator;
    CGRect v71 = &off_26FDE7698;
    id v22 = (void *)swift_allocObject();
    *(void *)&long long v69 = v22;
    v22[5] = &type metadata for PerlinNoiseGenerator;
    v22[6] = v17;
    uint64_t v23 = swift_allocObject();
    v22[2] = v23;
    *(void *)(v23 + 16) = v12;
    *(_DWORD *)(v23 + 24) = v21;
    *(_OWORD *)(v23 + 28) = xmmword_24A05EBB0;
    id v67 = &type metadata for FixedColorChannel;
    CGRect v68 = &off_26FDE7688;
    LODWORD(v66) = 1059648963;
    uint64_t v24 = sub_249FD6BBC(0.0, 0.66);
    uint64_t v64 = &type metadata for ColorCurveChannelProvider;
    unint64_t v65 = &off_26FDE7678;
    LODWORD(v63) = v25;
    *((void *)&v63 + 1) = v24;
    sub_249F77DF4(a1);
    sub_249FD6C7C((uint64_t)v75);
    *(void *)(a2 + 24) = &type metadata for ColorProvider;
    *(void *)(a2 + 32) = v14;
    uint64_t v26 = swift_allocObject();
    *(void *)a2 = v26;
    sub_249F7B5E8(&v69, v26 + 16);
    sub_249F7B5E8(&v66, v26 + 56);
    sub_249F7B5E8(&v63, v26 + 96);
    return;
  }
  if (!v73)
  {
    double v5 = sub_249FEDAB0();
    int v6 = LODWORD(v5);
    uint64_t v8 = v7;
    *(void *)(a2 + 64) = &type metadata for ColorCurve;
    unint64_t v9 = sub_249FD6CC0();
    *(void *)(a2 + 72) = v9;
    *(_DWORD *)(a2 + 40) = v6;
    *(void *)(a2 + 48) = v8;
    double v10 = sub_249FEDE0C();
    CGRect v70 = &type metadata for ColorCurve;
    CGRect v71 = (_UNKNOWN **)v9;
    LODWORD(v69) = LODWORD(v10);
    *((void *)&v69 + 1) = v11;
    sub_249F77DF4(a1);
    sub_249FD6C7C((uint64_t)v75);
    sub_249F7B5E8(&v69, a2);
    return;
  }
  sub_249F7B5E8(&v72, (uint64_t)&v69);
  sub_249F7B5E8(&v74, (uint64_t)&v66);
  uint64_t v27 = *(void *)(a1 + 112);
  int v28 = *(_DWORD *)(a1 + 100);
  uint64_t v64 = &type metadata for NoiseColorChannelGenerator;
  unint64_t v65 = &off_26FDE7698;
  double v29 = (void *)swift_allocObject();
  *(void *)&long long v63 = v29;
  uint64_t v30 = v70;
  uint64_t v31 = (uint64_t)v71;
  __swift_project_boxed_opaque_existential_1(&v69, (uint64_t)v70);
  float v32 = sub_249FD59D8((uint64_t)v30, v31);
  if ((float)(v32 + -0.2) < 0.0) {
    float v32 = v32 + 1.0;
  }
  float v33 = v32 + -0.2;
  float v34 = v32 + 0.2;
  if ((float)(v32 + -0.2) > (float)(v32 + 0.2))
  {
    __break(1u);
  }
  else
  {
    v29[5] = &type metadata for PerlinNoiseGenerator;
    unint64_t v35 = sub_249FD6958();
    v29[6] = v35;
    uint64_t v36 = swift_allocObject();
    void v29[2] = v36;
    *(void *)(v36 + 16) = v27;
    *(_DWORD *)(v36 + 24) = v28;
    *(float *)(v36 + 28) = v33;
    *(float *)(v36 + 32) = v34;
    *(void *)(v36 + 36) = 0x3F8000003F333333;
    uint64_t v37 = v70;
    uint64_t v38 = (uint64_t)v71;
    __swift_project_boxed_opaque_existential_1(&v69, (uint64_t)v70);
    float v39 = sub_249FD1270((uint64_t)v37, v38);
    *(void *)(a2 + 64) = &type metadata for ColorProvider;
    unint64_t v40 = sub_249FD69BC();
    *(void *)(a2 + 72) = v40;
    uint64_t v41 = swift_allocObject();
    *(void *)(a2 + 40) = v41;
    *(void *)(v41 + 80) = &type metadata for FixedColorChannel;
    *(void *)(v41 + 88) = &off_26FDE7688;
    *(float *)(v41 + 56) = v39;
    uint64_t v42 = sub_249FD6BBC(0.66, 1.0);
    *(void *)(v41 + 120) = &type metadata for ColorCurveChannelProvider;
    *(void *)(v41 + 128) = &off_26FDE7678;
    *(_DWORD *)(v41 + 96) = v43;
    *(void *)(v41 + 104) = v42;
    sub_249F7B5E8(&v63, v41 + 16);
    int v44 = *(_DWORD *)(a1 + 104);
    uint64_t v64 = &type metadata for NoiseColorChannelGenerator;
    unint64_t v65 = &off_26FDE7698;
    double v45 = (void *)swift_allocObject();
    *(void *)&long long v63 = v45;
    CGFloat v46 = v67;
    uint64_t v47 = (uint64_t)v68;
    __swift_project_boxed_opaque_existential_1(&v66, (uint64_t)v67);
    float v48 = sub_249FD59D8((uint64_t)v46, v47);
    if ((float)(v48 + -0.2) < 0.0) {
      float v48 = v48 + 1.0;
    }
    float v49 = v48 + -0.2;
    float v50 = v48 + 0.2;
    if ((float)(v48 + -0.2) <= (float)(v48 + 0.2))
    {
      v45[5] = &type metadata for PerlinNoiseGenerator;
      v45[6] = v35;
      uint64_t v51 = swift_allocObject();
      v45[2] = v51;
      *(void *)(v51 + 16) = v27;
      *(_DWORD *)(v51 + 24) = v44;
      *(float *)(v51 + 28) = v49;
      *(float *)(v51 + 32) = v50;
      *(void *)(v51 + 36) = 0x3F8000003F333333;
      double v52 = v67;
      uint64_t v53 = (uint64_t)v68;
      __swift_project_boxed_opaque_existential_1(&v66, (uint64_t)v67);
      id v61 = &type metadata for FixedColorChannel;
      CGFloat v62 = &off_26FDE7688;
      LODWORD(v60) = sub_249FD1270((uint64_t)v52, v53);
      uint64_t v54 = sub_249FD6BBC(0.0, 0.66);
      CGRect v59 = &off_26FDE7678;
      LODWORD(v57) = v55;
      uint64_t v58 = &type metadata for ColorCurveChannelProvider;
      *((void *)&v57 + 1) = v54;
      sub_249F77DF4(a1);
      sub_249FD6C7C((uint64_t)v75);
      *(void *)(a2 + 24) = &type metadata for ColorProvider;
      *(void *)(a2 + 32) = v40;
      uint64_t v56 = swift_allocObject();
      *(void *)a2 = v56;
      sub_249F7B5E8(&v63, v56 + 16);
      sub_249F7B5E8(&v60, v56 + 56);
      sub_249F7B5E8(&v57, v56 + 96);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v66);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
      return;
    }
  }
  __break(1u);
}

_OWORD *sub_249FD1170@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = ClockFaceLook.identifier.getter();
  sub_249FD0A20(v2, v3, (uint64_t)&v8);
  if (v9 != 2)
  {
    sub_249FD6D14(&v8, v10);
    return sub_249FD6D14(v10, a1);
  }
  sub_249F6E790((uint64_t)&v8, &qword_269750AE0);
  uint64_t v4 = *(void *)(sub_249FD7734() + 16);
  swift_bridgeObjectRelease();
  double result = (_OWORD *)sub_249FD7734();
  unint64_t v6 = *((void *)result + 2);
  if (v4 == 1)
  {
    if (!v6)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    uint64_t v7 = 32;
  }
  else
  {
    if (v6 < 2)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t v7 = 72;
  }
  sub_249F7B37C((uint64_t)result + v7, (uint64_t)v10);
  swift_bridgeObjectRelease();
  double result = (_OWORD *)sub_249FD7734();
  if (!*((void *)result + 2))
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_249F7B37C((uint64_t)(result + 2), (uint64_t)a1);
  swift_bridgeObjectRelease();
  return (_OWORD *)sub_249F7B5E8(v10, (uint64_t)a1 + 40);
}

float sub_249FD1270(uint64_t a1, uint64_t a2)
{
  v4[1] = *(double *)MEMORY[0x263EF8340];
  v4[0] = 0.0;
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 40))();
  objc_msgSend(v2, sel_getHue_saturation_brightness_alpha_, 0, v4, 0, 0);

  return v4[0];
}

uint64_t sub_249FD1304(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for RollingClockViewModel();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_249F6491C();
  *(_OWORD *)(v1 + 24) = xmmword_24A05A4D0;
  uint64_t v7 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  uint64_t v8 = type metadata accessor for CurrentLocationSolarPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_DWORD *)(v9 + 80) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode) = 0;
  uint64_t v10 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(void *)(v10 + 96) = 255;
  *(void *)(v10 + 104) = 0;
  *(void *)(v10 + 112) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode) = 0;
  id v11 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v11, sel_bounds);
  double v13 = v12;
  double v15 = v14;

  CGSizeMake(v13 * 1.4 * 0.5, v13 * 1.4 * 0.5 / (v13 / v15));
  UISizeRoundToScale();
  double v18 = (v16 + v16 - v13) * 0.5;
  double v19 = (v17 + v17 - v15) * 0.5;
  uint64_t v20 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit;
  *(void *)uint64_t v20 = 0x3FE0000000000000;
  *(void *)(v20 + 8) = 0;
  *(double *)(v20 + 16) = v16 + v16;
  *(double *)(v20 + 24) = v17 + v17;
  *(double *)(v20 + 32) = v16;
  *(double *)(v20 + 40) = v17;
  *(double *)(v20 + 48) = v19;
  *(double *)(v20 + 56) = v18;
  *(double *)(v20 + 64) = v19;
  *(double *)(v20 + 72) = v18;
  *(double *)(v20 + 80) = v13;
  *(double *)(v20 + 88) = v15;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve) = 0;
  sub_24A0564A8();
  sub_249F77D98(a1, (uint64_t)v28);
  sub_249FD1720((uint64_t)v28);
  sub_249F77D98(a1, (uint64_t)v28);
  sub_249FD1720((uint64_t)v28);
  uint64_t v21 = sub_24A057628();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  sub_24A057608();
  swift_retain();
  uint64_t v23 = sub_24A0575F8();
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8F500];
  v24[2] = v23;
  v24[3] = v25;
  unsigned char v24[4] = v22;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_269750AA0, (uint64_t)v24);
  swift_release();
  sub_249F77DF4(a1);
  return v2;
}

uint64_t sub_249FD1654()
{
  return swift_retain();
}

uint64_t sub_249FD16E4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_249FD1720(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CurrentLocationSolarPosition(0);
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F77D98(a1, (uint64_t)v57);
  swift_getKeyPath();
  uint64_t v44 = v1;
  double v45 = v57;
  uint64_t v9 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  v50[0] = v2;
  uint64_t v10 = sub_249FD5810(&qword_26974FAB8);
  sub_24A056468();
  swift_release();
  sub_249F6E790((uint64_t)v57, &qword_26974FB18);
  sub_249F77D98(a1, (uint64_t)v57);
  swift_getKeyPath();
  v50[0] = v2;
  sub_24A056478();
  swift_release();
  sub_249FD0B50((uint64_t)v57, (uint64_t)v50, *(float *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode));
  swift_getKeyPath();
  uint64_t v42 = v2;
  int v43 = v50;
  v57[0] = v2;
  sub_24A056468();
  swift_release();
  sub_249F6E790((uint64_t)v50, &qword_269750A78);
  uint64_t v11 = *(void *)(a1 + 112);
  swift_getKeyPath();
  uint64_t v40 = v2;
  uint64_t v41 = v11;
  v57[0] = v2;
  sub_24A056468();
  swift_release();
  swift_getKeyPath();
  v57[0] = v2;
  uint64_t v38 = v10;
  uint64_t v39 = v9;
  sub_24A056478();
  swift_release();
  uint64_t v12 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_249F6E6C8(v12, (uint64_t)v6, &qword_2697503D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v6, 1, v37) == 1)
  {
    sub_249F77DF4(a1);
    return sub_249F6E790((uint64_t)v6, &qword_2697503D8);
  }
  uint64_t v36 = a1;
  uint64_t v14 = v35;
  sub_249FD5920((uint64_t)v6, v35);
  swift_getKeyPath();
  v57[0] = v2;
  sub_24A056478();
  swift_release();
  uint64_t v15 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  uint64_t v37 = v15;
  uint64_t result = sub_249F6E6C8(v15, (uint64_t)v50, &qword_269750A78);
  if (v51)
  {
    uint64_t v16 = v54;
    uint64_t v17 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    double v18 = *(void (**)(uint64_t))(v17 + 32);
    uint64_t v48 = v16;
    uint64_t v49 = v17;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v47);
    uint64_t v19 = type metadata accessor for SolarPosition(0);
    v18(v14);
    uint64_t v20 = v51;
    uint64_t v21 = v52;
    __swift_project_boxed_opaque_existential_1(v50, v51);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 32);
    uint64_t v58 = v20;
    uint64_t v59 = v21;
    __swift_allocate_boxed_opaque_existential_0(v57);
    v22(v14, v19, v20, v21);
    int v23 = v56;
    sub_249F7B5E8(&v47, (uint64_t)v60);
    int v61 = v23;
    sub_249FD598C((uint64_t)v50);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v34 - 2) = v2;
    *(&v34 - 1) = (uint64_t)v57;
    v50[0] = v2;
    uint64_t v34 = MEMORY[0x263F8EE60] + 8;
    sub_24A056468();
    swift_release();
    sub_249F6E790((uint64_t)v57, &qword_269750A78);
    swift_getKeyPath();
    v57[0] = v2;
    sub_24A056478();
    swift_release();
    uint64_t result = sub_249F6E6C8(v37, (uint64_t)v50, &qword_269750A78);
    if (v51)
    {
      int v46 = *(_DWORD *)(v14 + *(int *)(v19 + 24));
      uint64_t v25 = v54;
      uint64_t v26 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      uint64_t v27 = *(void (**)(int *, void, uint64_t, uint64_t))(v26 + 32);
      uint64_t v48 = v25;
      uint64_t v49 = v26;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v47);
      uint64_t v28 = MEMORY[0x263F8D5C8];
      v27(&v46, MEMORY[0x263F8D5C8], v25, v26);
      uint64_t v29 = v51;
      uint64_t v30 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      uint64_t v31 = *(void (**)(int *, uint64_t, uint64_t, uint64_t))(v30 + 32);
      uint64_t v58 = v29;
      uint64_t v59 = v30;
      __swift_allocate_boxed_opaque_existential_0(v57);
      v31(&v46, v28, v29, v30);
      int v32 = v56;
      sub_249F7B5E8(&v47, (uint64_t)v60);
      int v61 = v32;
      sub_249FD598C((uint64_t)v50);
      uint64_t v33 = swift_getKeyPath();
      MEMORY[0x270FA5388](v33);
      *(&v34 - 2) = v2;
      *(&v34 - 1) = (uint64_t)v57;
      v50[0] = v2;
      sub_24A056468();
      swift_release();
      sub_249F6E790((uint64_t)v57, &qword_269750A78);
      sub_249F77DF4(v36);
      return sub_249FD6698(v14, type metadata accessor for CurrentLocationSolarPosition);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_249FD1E1C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  v6[0] = v1;
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  uint64_t result = sub_249F6E6C8(v3, (uint64_t)v6, &qword_26974FB18);
  if ((_BYTE)v7 == 0xFF)
  {
    __break(1u);
  }
  else
  {
    swift_getKeyPath();
    sub_24A056478();
    swift_release();
    uint64_t v5 = *(void *)(v1 + 24);
    sub_249F75B7C((uint64_t)v6, a1);
    *(void *)(a1 + 112) = v5;
    *(void *)(a1 + 100) = v8;
    return sub_249F77DF4((uint64_t)v6);
  }
  return result;
}

uint64_t sub_249FD1F54()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  v24[0] = v0;
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  uint64_t result = sub_249F6E6C8(v2, (uint64_t)v17, &qword_269750A78);
  if (v18)
  {
    swift_getKeyPath();
    v24[0] = v1;
    sub_24A056478();
    swift_release();
    v16[0] = *(void *)(v1 + 24);
    uint64_t v4 = v21;
    uint64_t v5 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    unint64_t v6 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 32);
    uint64_t v14 = v4;
    uint64_t v15 = v5;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v13);
    uint64_t v7 = MEMORY[0x263F8D538];
    v6(v16, MEMORY[0x263F8D538], v4, v5);
    uint64_t v8 = v18;
    uint64_t v9 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v9 + 32);
    v24[3] = v8;
    unsigned char v24[4] = v9;
    __swift_allocate_boxed_opaque_existential_0(v24);
    v10(v16, v7, v8, v9);
    int v11 = v23;
    sub_249F7B5E8(&v13, (uint64_t)v25);
    v25[10] = v11;
    sub_249FD598C((uint64_t)v17);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v17[0] = v1;
    sub_24A056468();
    swift_release();
    return sub_249F6E790((uint64_t)v24, &qword_269750A78);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_249FD21CC()
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  return *(double *)(v0 + 24);
}

double sub_249FD2258@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  double result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_249FD22EC()
{
  return swift_release();
}

double sub_249FD23B0()
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  return *(double *)(v0 + 32);
}

uint64_t sub_249FD243C(uint64_t result, double a2)
{
  *(double *)(result + 32) = a2;
  return result;
}

uint64_t sub_249FD2444()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CurrentLocationSolarPosition(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v9 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  v46[0] = v1;
  uint64_t v34 = sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v10 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_249F6E6C8(v10, (uint64_t)v4, &qword_2697503D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_249F6E790((uint64_t)v4, &qword_2697503D8);
  }
  sub_249FD5920((uint64_t)v4, (uint64_t)v8);
  swift_getKeyPath();
  v46[0] = v1;
  uint64_t v33 = v9;
  sub_24A056478();
  swift_release();
  uint64_t v12 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  int v32 = (char *)v12;
  uint64_t result = sub_249F6E6C8(v12, (uint64_t)v39, &qword_269750A78);
  if (v40)
  {
    uint64_t v13 = v43;
    uint64_t v14 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 32);
    uint64_t v37 = v13;
    uint64_t v38 = v14;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
    uint64_t v16 = type metadata accessor for SolarPosition(0);
    v15(v8, v16, v13, v14);
    uint64_t v17 = v40;
    uint64_t v18 = v41;
    __swift_project_boxed_opaque_existential_1(v39, v40);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 32);
    uint64_t v47 = v17;
    uint64_t v48 = v18;
    __swift_allocate_boxed_opaque_existential_0(v46);
    v19(v8, v16, v17, v18);
    int v20 = v45;
    sub_249F7B5E8(&v36, (uint64_t)v49);
    int v50 = v20;
    sub_249FD598C((uint64_t)v39);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v31 - 2) = v1;
    *(&v31 - 1) = (uint64_t)v46;
    v39[0] = v1;
    uint64_t v31 = MEMORY[0x263F8EE60] + 8;
    sub_24A056468();
    swift_release();
    sub_249F6E790((uint64_t)v46, &qword_269750A78);
    swift_getKeyPath();
    v46[0] = v1;
    sub_24A056478();
    swift_release();
    uint64_t result = sub_249F6E6C8((uint64_t)v32, (uint64_t)v39, &qword_269750A78);
    if (v40)
    {
      v35[0] = *(_DWORD *)&v8[*(int *)(v16 + 24)];
      int v32 = v8;
      uint64_t v22 = v43;
      uint64_t v23 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      uint64_t v24 = *(void (**)(_DWORD *, void, uint64_t, uint64_t))(v23 + 32);
      uint64_t v37 = v22;
      uint64_t v38 = v23;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
      uint64_t v25 = MEMORY[0x263F8D5C8];
      v24(v35, MEMORY[0x263F8D5C8], v22, v23);
      uint64_t v26 = v40;
      uint64_t v27 = v41;
      __swift_project_boxed_opaque_existential_1(v39, v40);
      uint64_t v28 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v27 + 32);
      uint64_t v47 = v26;
      uint64_t v48 = v27;
      __swift_allocate_boxed_opaque_existential_0(v46);
      v28(v35, v25, v26, v27);
      int v29 = v45;
      sub_249F7B5E8(&v36, (uint64_t)v49);
      int v50 = v29;
      sub_249FD598C((uint64_t)v39);
      uint64_t v30 = swift_getKeyPath();
      MEMORY[0x270FA5388](v30);
      *(&v31 - 2) = v1;
      *(&v31 - 1) = (uint64_t)v46;
      v39[0] = v1;
      sub_24A056468();
      swift_release();
      sub_249F6E790((uint64_t)v46, &qword_269750A78);
      return sub_249FD6698((uint64_t)v32, type metadata accessor for CurrentLocationSolarPosition);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_249FD29C4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  return sub_249F6E6C8(v3, a1, &qword_2697503D8);
}

uint64_t sub_249FD2A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a2, (uint64_t)v6, &qword_2697503D8);
  uint64_t v7 = a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_249F9AC10((uint64_t)v6, v7, &qword_2697503D8);
  swift_endAccess();
  sub_249FD2444();
  return sub_249F6E790((uint64_t)v6, &qword_2697503D8);
}

uint64_t sub_249FD2B70@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  return sub_249F6E6C8(v3, a1, &qword_269750A78);
}

uint64_t sub_249FD2C30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  return sub_249F6E6C8(v4, a2, &qword_269750A78);
}

uint64_t sub_249FD2CF0(uint64_t a1)
{
  sub_249F6E6C8(a1, (uint64_t)v2, &qword_269750A78);
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v2, &qword_269750A78);
}

uint64_t sub_249FD2DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  sub_249F9AC10(a2, v3, &qword_269750A78);
  return swift_endAccess();
}

uint64_t (*sub_249FD2E40())()
{
  return j__swift_endAccess;
}

uint64_t sub_249FD2E9C()
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_249FD2F48@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v4 = (unsigned char *)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  uint64_t result = swift_beginAccess();
  *a2 = *v4;
  return result;
}

uint64_t sub_249FD2FFC()
{
  return swift_release();
}

void (*sub_249FD30B8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24A056498();
  swift_release();
  v3[7] = sub_249FD2E40();
  return sub_249FD31C0;
}

void sub_249FD31C0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  void *v1 = v1[4];
  swift_getKeyPath();
  sub_24A056488();
  swift_release();

  free(v1);
}

double sub_249FD324C()
{
  uint64_t v18 = type metadata accessor for SolarPosition(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CurrentLocationSolarPosition(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v19 = v0;
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit + 8);
  swift_getKeyPath();
  uint64_t v19 = v0;
  id v11 = v10;
  sub_24A056478();
  swift_release();
  uint64_t v12 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_249F6E6C8(v12, (uint64_t)v9, &qword_2697503D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_249F6E790((uint64_t)v9, &qword_2697503D8);
    float v13 = 3.1416;
  }
  else
  {
    sub_249FD6630((uint64_t)v9, (uint64_t)v6, type metadata accessor for CurrentLocationSolarPosition);
    sub_249F6E790((uint64_t)v9, &qword_2697503D8);
    sub_249FD6630((uint64_t)v6, (uint64_t)v2, type metadata accessor for SolarPosition);
    sub_249FD6698((uint64_t)v6, type metadata accessor for CurrentLocationSolarPosition);
    float v14 = *(float *)&v2[*(int *)(v18 + 24)];
    sub_249FD6698((uint64_t)v2, type metadata accessor for SolarPosition);
    float v13 = (float)((float)(v14 + 0.5) * 3.1416) + (float)((float)(v14 + 0.5) * 3.1416);
  }
  __sincosf_stret(v13);
  UIPointRoundToScale();
  double v16 = v15;

  return v16;
}

uint64_t sub_249FD35B4()
{
  return sub_249FD3F3C((uint64_t)&unk_24A05EDF0, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode);
}

uint64_t sub_249FD35C8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_249FD3FC8(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode, a2);
}

uint64_t sub_249FD35DC()
{
  return swift_release();
}

uint64_t sub_249FD3698(uint64_t a1, char a2)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056468();
  swift_release();
  swift_getKeyPath();
  sub_24A056468();
  uint64_t result = swift_release();
  if ((a2 & 1) == 0)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    sub_24A056468();
    return swift_release();
  }
  return result;
}

void sub_249FD3850()
{
  uint64_t v0 = (void *)*MEMORY[0x263F15EB8];
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_functionWithName_, v2);

  qword_2697523F0 = (uint64_t)v3;
}

uint64_t sub_249FD38BC(double a1)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v3 = OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode) & 1) == 0)
  {
    swift_getKeyPath();
    sub_24A056478();
    swift_release();
    if (*(float *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) != 0.0) {
      goto LABEL_5;
    }
  }
  swift_getKeyPath();
  sub_24A056478();
  swift_release();
  if (*(unsigned char *)(v1 + v3) == 1)
  {
    swift_getKeyPath();
    sub_24A056478();
    swift_release();
    if (*(float *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) != 1.0)
    {
LABEL_5:
      swift_getKeyPath();
      sub_24A056478();
      swift_release();
      swift_getKeyPath();
      sub_24A056478();
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_24A056468();
      swift_release();
    }
  }
  swift_getKeyPath();
  sub_24A056478();
  swift_release();
  if (1.79769313e308 - a1 * 0.012 * *(double *)(v1 + 32) > a1)
  {
    swift_getKeyPath();
    sub_24A056478();
    swift_release();
  }
  uint64_t v5 = swift_getKeyPath();
  MEMORY[0x270FA5388](v5);
  sub_24A056468();
  return swift_release();
}

uint64_t sub_249FD3C58@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  return sub_249F6E6C8(v3, a1, &qword_26974FB18);
}

uint64_t sub_249FD3D18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  return sub_249F6E6C8(v4, a2, &qword_26974FB18);
}

uint64_t sub_249FD3DD8(uint64_t a1)
{
  sub_249F6E6C8(a1, (uint64_t)v2, &qword_26974FB18);
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v2, &qword_26974FB18);
}

uint64_t sub_249FD3EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  sub_249F9AC10(a2, v3, &qword_26974FB18);
  return swift_endAccess();
}

uint64_t sub_249FD3F28()
{
  return sub_249FD3F3C((uint64_t)&unk_24A05EF08, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode);
}

uint64_t sub_249FD3F3C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_249FD3FC8@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_249FD4068()
{
  return swift_release();
}

id sub_249FD4124@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  *(void *)(a1 + 8) = v4;
  long long v5 = v3[2];
  *(_OWORD *)(a1 + 16) = v3[1];
  *(_OWORD *)(a1 + 32) = v5;
  long long v6 = v3[4];
  *(_OWORD *)(a1 + 48) = v3[3];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v3[5];

  return v4;
}

id sub_249FD41F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v4 = (_OWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  long long v5 = *(void **)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit + 8);
  *(void *)a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  *(void *)(a2 + 8) = v5;
  long long v6 = v4[2];
  *(_OWORD *)(a2 + 16) = v4[1];
  *(_OWORD *)(a2 + 32) = v6;
  long long v7 = v4[4];
  *(_OWORD *)(a2 + 48) = v4[3];
  *(_OWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 80) = v4[5];

  return v5;
}

uint64_t sub_249FD42C4(_OWORD *a1)
{
  long long v1 = a1[3];
  uint64_t v5[2] = a1[2];
  v5[3] = v1;
  long long v2 = a1[5];
  v5[4] = a1[4];
  v5[5] = v2;
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  swift_getKeyPath();
  sub_249FD6548((uint64_t)v5);
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056468();
  sub_249FD6574((uint64_t)v5);
  return swift_release();
}

float sub_249FD43A4()
{
  return sub_249FD47E8((uint64_t)&unk_24A05EEB8, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode);
}

uint64_t sub_249FD43B8()
{
  return swift_release();
}

uint64_t sub_249FD447C(uint64_t a1, float a2)
{
  uint64_t v3 = OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode;
  *(float *)(a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) = a2;
  if (qword_26974F320 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_2697523F0;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  LODWORD(v5) = *(_DWORD *)(a1 + v3);
  objc_msgSend(v4, sel__solveForInput_, v5);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_24A056468();
  return swift_release();
}

uint64_t sub_249FD4600()
{
  swift_getKeyPath();
  v7[0] = v0;
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  uint64_t result = sub_249F6E6C8(v1, (uint64_t)v5, &qword_269750A78);
  if (v5[3])
  {
    swift_getKeyPath();
    v7[0] = v0;
    sub_24A056478();
    swift_release();
    int v3 = *(_DWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve);
    sub_249F7B37C((uint64_t)&v6, (uint64_t)v8);
    sub_249F7B37C((uint64_t)v5, (uint64_t)v7);
    v8[10] = v3;
    sub_249FD598C((uint64_t)v5);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v5[0] = v0;
    sub_24A056468();
    swift_release();
    return sub_249F6E790((uint64_t)v7, &qword_269750A78);
  }
  else
  {
    __break(1u);
  }
  return result;
}

float sub_249FD47D4()
{
  return sub_249FD47E8((uint64_t)&unk_24A05EE90, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve);
}

float sub_249FD47E8(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  return *(float *)(v2 + *a2);
}

float sub_249FD4874@<S0>(uint64_t *a1@<X0>, void *a2@<X4>, float *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  float result = *(float *)(v5 + *a2);
  *a3 = result;
  return result;
}

uint64_t sub_249FD4914()
{
  return swift_release();
}

uint64_t sub_249FD49D8()
{
  swift_release();
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition, &qword_2697503D8);
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette, &qword_269750A78);
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext, &qword_26974FB18);

  uint64_t v1 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  uint64_t v2 = sub_24A0564B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_249FD4ADC()
{
  return type metadata accessor for SolarViewModel();
}

uint64_t type metadata accessor for SolarViewModel()
{
  uint64_t result = qword_269750A30;
  if (!qword_269750A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249FD4B30()
{
  sub_249FD4C54();
  if (v0 <= 0x3F)
  {
    sub_24A0564B8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_249FD4C54()
{
  if (!qword_269750A40)
  {
    type metadata accessor for CurrentLocationSolarPosition(255);
    unint64_t v0 = sub_24A057968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269750A40);
    }
  }
}

uint64_t destroy for SolarViewModel.ColorPalette(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);

  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
}

uint64_t initializeWithCopy for SolarViewModel.ColorPalette(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for SolarViewModel.ColorPalette(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy84_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SolarViewModel.ColorPalette(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarViewModel.ColorPalette(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 84)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarViewModel.ColorPalette(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 84) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 84) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarViewModel.ColorPalette()
{
  return &type metadata for SolarViewModel.ColorPalette;
}

uint64_t initializeWithCopy for SolarContext(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 == 2)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (*(unsigned char *)(a2 + 96))
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(unsigned char *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 100) = *(void *)(a2 + 100);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for SolarContext(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_249F75BD8(a1);
    int v4 = *((unsigned __int8 *)a2 + 96);
    if (v4 == 2)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      uint64_t v7 = *((void *)a2 + 8);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(unsigned char *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v4 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 96) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*((unsigned char *)a2 + 96))
    {
      long long v8 = *a2;
      long long v9 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      long long v10 = a2[3];
      long long v11 = a2[4];
      long long v12 = a2[5];
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      uint64_t v5 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v5 - 8))(a1, a2);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(unsigned char *)(a1 + 96) = 0;
      swift_bridgeObjectRetain();
    }
  }
  *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
  *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SolarContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_249F75BD8(a1);
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  *(void *)(a1 + 100) = *(void *)(a2 + 100);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 120)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarContext()
{
  return &type metadata for SolarContext;
}

unint64_t sub_249FD53C8(uint64_t a1)
{
  unint64_t result = sub_249FD53F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249FD53F0()
{
  unint64_t result = qword_269750A48;
  if (!qword_269750A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750A48);
  }
  return result;
}

unint64_t sub_249FD5444(void *a1)
{
  a1[1] = sub_249FD5484();
  a1[2] = sub_249FD54D8();
  a1[3] = sub_249FD552C();
  unint64_t result = sub_249FD5580();
  a1[4] = result;
  return result;
}

unint64_t sub_249FD5484()
{
  unint64_t result = qword_269750A50;
  if (!qword_269750A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750A50);
  }
  return result;
}

unint64_t sub_249FD54D8()
{
  unint64_t result = qword_269750A58;
  if (!qword_269750A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750A58);
  }
  return result;
}

unint64_t sub_249FD552C()
{
  unint64_t result = qword_269750A60;
  if (!qword_269750A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750A60);
  }
  return result;
}

unint64_t sub_249FD5580()
{
  unint64_t result = qword_269750A68;
  if (!qword_269750A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750A68);
  }
  return result;
}

uint64_t sub_249FD55D4()
{
  swift_getKeyPath();
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056478();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode);
}

uint64_t sub_249FD5670()
{
  return swift_release();
}

void (*sub_249FD572C(void *a1))(void *a1)
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_249FD30B8(v2);
  return sub_249F6FBD0;
}

uint64_t sub_249FD5788(uint64_t a1)
{
  uint64_t result = sub_249FD5810(&qword_26974FAB8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FD57CC(uint64_t a1)
{
  uint64_t result = sub_249FD5810(&qword_269750A70);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FD5810(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SolarViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249FD5854@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_249FD3FC8(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode, a2);
}

void sub_249FD5880()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_249FD58A0()
{
  return sub_249FD58B8();
}

uint64_t sub_249FD58B8()
{
  char v1 = *(unsigned char *)(v0 + 24);
  long long v2 = (unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  uint64_t result = swift_beginAccess();
  *long long v2 = v1;
  return result;
}

uint64_t sub_249FD5920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentLocationSolarPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FD598C(uint64_t a1)
{
  return a1;
}

uint64_t sub_249FD59BC()
{
  return sub_249FD2DCC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

float sub_249FD59D8(uint64_t a1, uint64_t a2)
{
  v4[1] = *(double *)MEMORY[0x263EF8340];
  v4[0] = 0.0;
  long long v2 = (void *)(*(uint64_t (**)(void))(a2 + 40))();
  objc_msgSend(v2, sel_getHue_saturation_brightness_alpha_, v4, 0, 0, 0);

  return v4[0];
}

uint64_t sub_249FD5A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750AA8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750AB0);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750AB8);
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_24A057608();
  v4[19] = sub_24A0575F8();
  uint64_t v9 = sub_24A0575D8();
  v4[20] = v9;
  v4[21] = v8;
  return MEMORY[0x270FA2498](sub_249FD5C68, v9, v8);
}

uint64_t sub_249FD5C68()
{
  if (qword_26974F2C8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752368;
  *(void *)(v0 + 176) = qword_269752368;
  return MEMORY[0x270FA2498](sub_249FD5D00, v1, 0);
}

uint64_t sub_249FD5D00()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[14];
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream);
  swift_retain();
  sub_249FF1920(v3, v1, v2);
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  return MEMORY[0x270FA2498](sub_249FD5D90, v4, v5);
}

uint64_t sub_249FD5D90()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[23] = 0;
  uint64_t v4 = sub_24A0575F8();
  v0[24] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249FD5EAC;
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[11];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_249FD5EAC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_249FD5FF0, v3, v2);
}

uint64_t sub_249FD5FF0()
{
  uint64_t v1 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[8] + 48))(v1, 1, v0[7]) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  sub_249FD682C(v1, v0[10]);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v14 = v0[16];
    uint64_t v13 = v0[17];
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[10];
    swift_release();
    sub_249F6E790(v16, &qword_2697503D8);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = v0[23];
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  sub_249F6E6C8(v5, v6, &qword_2697503D8);
  swift_getKeyPath();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v6;
  v0[5] = v3;
  sub_249FD5810(&qword_26974FAB8);
  sub_24A056468();
  swift_release();
  swift_task_dealloc();
  sub_249F6E790(v6, &qword_2697503D8);
  swift_release();
  sub_249F6E790(v5, &qword_2697503D8);
  v0[23] = v4;
  uint64_t v8 = sub_24A0575F8();
  v0[24] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[25] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_249FD5EAC;
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[11];
  uint64_t v12 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v11, v8, v12, v10);
}

uint64_t sub_249FD62CC(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = result;
    unsigned int v2 = result;
    uint64_t v6 = 0;
    MEMORY[0x24C5BA370](&v6, 8);
    unint64_t v3 = v6 * (unint64_t)v2;
    uint64_t result = HIDWORD(v3);
    if (v3 < v1)
    {
      unsigned int v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          uint64_t v6 = 0;
          MEMORY[0x24C5BA370](&v6, 8);
          int64_t v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_249FD635C()
{
  unint64_t result = qword_269750A88;
  if (!qword_269750A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750A88);
  }
  return result;
}

BOOL sub_249FD63B0(uint64_t a1, uint64_t a2)
{
  return (_s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0() & 1) != 0
      && *(float *)(a1 + 100) == *(float *)(a2 + 100)
      && *(float *)(a1 + 104) == *(float *)(a2 + 104)
      && *(double *)(a1 + 112) == *(double *)(a2 + 112);
}

float sub_249FD6414@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  return sub_249FD4874(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve, a2);
}

uint64_t sub_249FD6440()
{
  return sub_249FD64A4();
}

float sub_249FD6458@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  return sub_249FD4874(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode, a2);
}

uint64_t sub_249FD6484()
{
  return sub_249FD447C(*(void *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_249FD64A4()
{
  *(_DWORD *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve) = *(_DWORD *)(v0 + 24);
  return sub_249FD4600();
}

void sub_249FD64EC()
{
  unsigned int v1 = *(long long **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit;
  unint64_t v3 = *(void **)(v2 + 8);
  long long v4 = *v1;
  *(_OWORD *)(v2 + 16) = v1[1];
  long long v5 = v1[5];
  long long v7 = v1[2];
  long long v6 = v1[3];
  *(_OWORD *)(v2 + 64) = v1[4];
  *(_OWORD *)(v2 + 80) = v5;
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 48) = v6;
  *(_OWORD *)uint64_t v2 = v4;
  sub_249FD6548((uint64_t)v1);
}

uint64_t sub_249FD6548(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_249FD6574(uint64_t a1)
{
  return a1;
}

uint64_t sub_249FD65A0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_249FD3FC8(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode, a2);
}

void sub_249FD65CC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_249FD65EC()
{
  return sub_249FD3EB4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FD6618()
{
  return sub_249FD68B0();
}

uint64_t sub_249FD6630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249FD6698(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249FD6700()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249FD6738()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_249FD6778(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249FD5A6C(a1, v4, v5, v6);
}

uint64_t sub_249FD682C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FD6894()
{
  return sub_249FD2A84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FD68B0()
{
  *(void *)(*(void *)(v0 + 16) + 24) = *(void *)(v0 + 24);
  return sub_249FD1F54();
}

uint64_t sub_249FD68E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249FD6920()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

unint64_t sub_249FD6958()
{
  unint64_t result = qword_269750AC0;
  if (!qword_269750AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750AC0);
  }
  return result;
}

uint64_t sub_249FD69AC()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_249FD69BC()
{
  unint64_t result = qword_269750AC8;
  if (!qword_269750AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750AC8);
  }
  return result;
}

uint64_t sub_249FD6A10()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_249FD6A58(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_249FBADE8(0, v2, 0);
    uint64_t v3 = v15;
    uint64_t v4 = (float *)(a1 + 40);
    while (2)
    {
      float v5 = *(v4 - 2);
      float v6 = *v4;
      float v7 = 0.0;
      float v8 = 0.25;
      float v9 = 180.0;
      switch(*((unsigned char *)v4 - 4))
      {
        case 1:
          goto LABEL_8;
        case 2:
          goto LABEL_7;
        case 3:
          float v8 = 0.5;
          *(float *)&int v10 = 270.0;
          goto LABEL_6;
        default:
          float v8 = 0.75;
          *(float *)&int v10 = 360.0;
LABEL_6:
          float v9 = *(float *)&v10;
LABEL_7:
          float v7 = v8;
          float v8 = v9 / 360.0;
          if (v7 > (float)(v9 / 360.0))
          {
            __break(1u);
            JUMPOUT(0x249FD6BACLL);
          }
LABEL_8:
          uint64_t v16 = v3;
          unint64_t v12 = *(void *)(v3 + 16);
          unint64_t v11 = *(void *)(v3 + 24);
          if (v12 >= v11 >> 1)
          {
            sub_249FBADE8(v11 > 1, v12 + 1, 1);
            uint64_t v3 = v16;
          }
          *(void *)(v3 + 16) = v12 + 1;
          uint64_t v13 = v3 + 8 * v12;
          *(float *)(v13 + 32) = v7 + (float)(v5 * (float)(v8 - v7));
          *(float *)(v13 + 36) = v6;
          v4 += 3;
          if (!--v2) {
            break;
          }
          continue;
      }
      break;
    }
  }

  return sub_249F86970(v3);
}

uint64_t sub_249FD6BBC(float a1, float a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750AD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A05A4C0;
  strcpy((char *)(inited + 32), "fff?");
  *(float *)(inited + 40) = a1;
  *(_DWORD *)(inited + 44) = 0;
  *(unsigned char *)(inited + 48) = 1;
  *(float *)(inited + 52) = a2;
  *(_DWORD *)(inited + 56) = 1063675494;
  *(unsigned char *)(inited + 60) = 2;
  *(float *)(inited + 64) = a2;
  *(_DWORD *)(inited + 68) = 1036831949;
  *(unsigned char *)(inited + 72) = 3;
  *(float *)(inited + 76) = a1;
  uint64_t v5 = sub_249FD6A58(inited);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_249FD6C7C(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  }
  return a1;
}

unint64_t sub_249FD6CC0()
{
  unint64_t result = qword_269750AD0;
  if (!qword_269750AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750AD0);
  }
  return result;
}

_OWORD *sub_249FD6D14(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t destroy for SolarViewModel.Style(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    uint64_t v1 = result;
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  }
  return result;
}

uint64_t initializeWithCopy for SolarViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for SolarViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      uint64_t v5 = *(void *)(a2 + 64);
      *(void *)(a1 + 64) = v5;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v6 = *(_OWORD *)(a2 + 16);
    long long v7 = *(_OWORD *)(a2 + 32);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for SolarViewModel.Style(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarViewModel.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SolarViewModel.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_249FD711C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_249FD7134(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 72) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarViewModel.Style()
{
  return &type metadata for SolarViewModel.Style;
}

unsigned char *storeEnumTagSinglePayload for SolarContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FD7248);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarContext.CodingKeys()
{
  return &type metadata for SolarContext.CodingKeys;
}

unint64_t sub_249FD7284()
{
  unint64_t result = qword_269750AE8;
  if (!qword_269750AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750AE8);
  }
  return result;
}

unint64_t sub_249FD72DC()
{
  unint64_t result = qword_269750AF0;
  if (!qword_269750AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750AF0);
  }
  return result;
}

unint64_t sub_249FD7334()
{
  unint64_t result = qword_269750AF8;
  if (!qword_269750AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750AF8);
  }
  return result;
}

uint64_t sub_249FD7388()
{
  unint64_t v0 = sub_24A057C38();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_249FD73D4()
{
  return sub_249FD59BC();
}

uint64_t sub_249FD73EC()
{
  return sub_249FD6484();
}

uint64_t sub_249FD7404()
{
  return sub_249FD65EC();
}

void sub_249FD741C()
{
}

void sub_249FD7434()
{
}

uint64_t ClockFaceLook.identifier.getter()
{
  uint64_t v1 = v0;
  memset(v8, 0, sizeof(v8));
  char v9 = 3;
  char v2 = _s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0();
  sub_249F75BD8((uint64_t)v8);
  if (v2) {
    return 0x6D6F747375636E75;
  }
  uint64_t v3 = sub_249FD7870();
  uint64_t v5 = v4;
  sub_249F75B7C(v1, (uint64_t)v8);
  if (!v5)
  {
    uint64_t v6 = sub_249FD7734();
    uint64_t v3 = sub_249FEA1E8(v6);
    swift_bridgeObjectRelease();
  }
  sub_249F75BD8((uint64_t)v8);
  return v3;
}

uint64_t sub_249FD7524(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_249FD7588(a1, WitnessTable);
}

uint64_t sub_249FD7588(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v6 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 40))(a1, a2, v6);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_249FD76D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_249FD7588(a1, WitnessTable);
}

uint64_t sub_249FD7734()
{
  sub_249F75B7C(v0, (uint64_t)&v5);
  uint64_t v1 = MEMORY[0x263F8EE78];
  switch(v7)
  {
    case 1:
      uint64_t v1 = v5;
      swift_bridgeObjectRelease();
      break;
    case 2:
      swift_bridgeObjectRelease();
      sub_249F7B5E8(&v5, (uint64_t)v4);
      sub_249F7B5E8(&v6, (uint64_t)v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C8);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_24A0593D0;
      sub_249F7B37C((uint64_t)v4, v1 + 32);
      sub_249F7B5E8(v3, v1 + 72);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
      break;
    case 3:
      return v1;
    default:
      swift_bridgeObjectRelease();
      sub_249F7B5E8(&v5, (uint64_t)v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C8);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_24A05A510;
      sub_249F7B5E8(v4, v1 + 32);
      break;
  }
  return v1;
}

uint64_t sub_249FD7870()
{
  sub_249F75B7C(v0, (uint64_t)v3);
  uint64_t v1 = 0;
  switch(v5)
  {
    case 1:
      uint64_t v1 = v3[1];
      swift_bridgeObjectRelease();
      break;
    case 2:
      uint64_t v1 = v4[5];
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
      goto LABEL_5;
    case 3:
      return v1;
    default:
      uint64_t v1 = v4[0];
LABEL_5:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
      break;
  }
  return v1;
}

char *ClockFaceLook.thumbnailView.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v35[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056538();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v35[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F75B7C(v0, (uint64_t)&v41);
  switch(v43)
  {
    case 1:
      uint64_t v4 = v41;
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 16))
      {
        sub_249F7B37C(v4 + 32, (uint64_t)v38);
        uint64_t v14 = v39;
        uint64_t v15 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
        id v17 = objc_msgSend(v16, sel_CGColor);

        sub_249F7B37C(v4 + 32, (uint64_t)v35);
        swift_bridgeObjectRelease();
        uint64_t v18 = v36;
        uint64_t v19 = v37;
        __swift_project_boxed_opaque_existential_1(v35, v36);
        int v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
        id v21 = objc_msgSend(v20, sel_CGColor);
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_17;
    case 2:
      swift_bridgeObjectRelease();
      sub_249F7B5E8(&v41, (uint64_t)v38);
      sub_249F7B5E8(&v42, (uint64_t)v35);
      uint64_t v22 = v39;
      uint64_t v23 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
      id v17 = objc_msgSend(v24, sel_CGColor);

      uint64_t v25 = v36;
      uint64_t v26 = v37;
      __swift_project_boxed_opaque_existential_1(v35, v36);
      int v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
      id v21 = objc_msgSend(v20, sel_CGColor);
LABEL_6:
      id v27 = v21;

      id v28 = objc_allocWithZone((Class)type metadata accessor for ClackFaceLookThumbnailView());
      unint64_t v12 = sub_249FD9B68(v17, v27);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      goto LABEL_7;
    case 3:
      if (qword_26B16F9B8 != -1) {
LABEL_17:
      }
        swift_once();
      uint64_t v29 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
      swift_beginAccess();
      sub_249F6E6C8(v29, (uint64_t)v3, &qword_26B16FAA8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_249FB8AA8((uint64_t)v7);
        sub_249F6E790((uint64_t)v3, &qword_26B16FAA8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      }
      uint64_t v30 = sub_24A056518();
      os_log_type_t v31 = sub_24A0577B8();
      if (os_log_type_enabled(v30, v31))
      {
        int v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v32 = 0;
        _os_log_impl(&dword_249F61000, v30, v31, "Uncustomizable view. Thumbnail view should never be shown for editing", v32, 2u);
        MEMORY[0x24C5BA360](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
    default:
      swift_bridgeObjectRelease();
      sub_249F7B5E8(&v41, (uint64_t)v38);
      id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
      uint64_t v9 = v39;
      uint64_t v10 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 40);
      unint64_t v12 = (char *)v8;
      uint64_t v13 = (void *)v11(v9, v10);
      objc_msgSend(v12, sel_setBackgroundColor_, v13);

LABEL_7:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
      return v12;
  }
}

id ClockFaceLook.primaryUIColor.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_24A056538();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = sub_249FD7734();
  if (*(void *)(v15 + 16))
  {
    sub_249F7B37C(v15 + 32, (uint64_t)&v46);
    swift_bridgeObjectRelease();
    if (*((void *)&v47 + 1))
    {
      sub_249F7B5E8(&v46, (uint64_t)&aBlock);
      uint64_t v16 = *((void *)&v40 + 1);
      uint64_t v17 = v41;
      __swift_project_boxed_opaque_existential_1(&aBlock, *((uint64_t *)&v40 + 1));
      id v18 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&aBlock);
      return v18;
    }
  }
  else
  {
    uint64_t v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_249F6E790((uint64_t)&v46, &qword_269750B00);
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long aBlock = 0u;
  long long v40 = 0u;
  char v45 = 3;
  char v19 = _s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0();
  sub_249F75BD8((uint64_t)&aBlock);
  if (v19)
  {
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F6E6C8(v20, (uint64_t)v7, &qword_26B16FAA8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_249FB8AA8((uint64_t)v14);
      sub_249F6E790((uint64_t)v7, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    }
    uint64_t v22 = sub_24A056518();
    os_log_type_t v23 = sub_24A0577B8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_249F61000, v22, v23, "This primaryUIColor shouldn't be used for uncustomizable looks.", v24, 2u);
      MEMORY[0x24C5BA360](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    if (qword_26B16F9B8 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_26B16FA58 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_249F6E6C8(v21, (uint64_t)v5, &qword_26B16FAA8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
    {
      sub_249FB8AA8((uint64_t)v12);
      sub_249F6E790((uint64_t)v5, &qword_26B16FAA8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v5, v8);
    }
    sub_249F75B7C(v1, (uint64_t)&aBlock);
    uint64_t v25 = sub_24A056518();
    os_log_type_t v26 = sub_24A0577B8();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = v28;
      *(_DWORD *)id v27 = 136446210;
      uint64_t v29 = sub_249F73AC4();
      uint64_t v37 = sub_249F782DC(v29, v30, &v38);
      sub_24A057978();
      swift_bridgeObjectRelease();
      sub_249F75BD8((uint64_t)&aBlock);
      _os_log_impl(&dword_249F61000, v25, v26, "Missing color for %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5BA360](v28, -1, -1);
      MEMORY[0x24C5BA360](v27, -1, -1);
    }
    else
    {
      sub_249F75BD8((uint64_t)&aBlock);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  id v31 = objc_msgSend(self, sel_whiteColor);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  id v33 = objc_allocWithZone(MEMORY[0x263F825C8]);
  *(void *)&long long v41 = sub_249FDA534;
  *((void *)&v41 + 1) = v32;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v40 = sub_249FDA198;
  *((void *)&v40 + 1) = &block_descriptor_6;
  uint64_t v34 = _Block_copy(&aBlock);
  id v35 = v31;
  id v18 = objc_msgSend(v33, sel_initWithDynamicProvider_, v34);
  _Block_release(v34);

  swift_release();
  return v18;
}

uint64_t ClockFaceLook.hash(into:)()
{
  ClockFaceLook.identifier.getter();
  sub_24A057408();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_249FD7734();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0 + 32;
    do
    {
      sub_249F7B37C(v2, (uint64_t)v6);
      sub_249F7B37C((uint64_t)v6, (uint64_t)&v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA0);
      if (swift_dynamicCast())
      {
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
      }
      sub_249F7B37C((uint64_t)v6, (uint64_t)&v5);
      if (swift_dynamicCast())
      {
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
        sub_24A057E58();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
      v2 += 40;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t ClockFaceLook.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750B08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FDA554();
  sub_24A057EC8();
  sub_249FD8928();
  v15[0] = 1;
  sub_24A057CA8();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_249FD7870();
    if (v8)
    {
      v15[0] = 2;
      sub_24A057CA8();
      swift_bridgeObjectRelease();
    }
    LOBYTE(v14[0]) = 0;
    sub_24A057C98();
    uint64_t v9 = sub_249FD7734();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v12 = v9;
      uint64_t v13 = v4;
      uint64_t v17 = v3;
      uint64_t v11 = v9 + 32;
      do
      {
        sub_249F7B37C(v11, (uint64_t)v14);
        __swift_project_boxed_opaque_existential_1(v14, v14[3]);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
        sub_24A057D38();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
        v11 += 40;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      uint64_t v3 = v17;
      uint64_t v4 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_249FD8928()
{
  sub_249F75B7C(v0, (uint64_t)v2);
  switch(v3[56])
  {
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0x746E656964617267;
      break;
    case 2:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
      uint64_t result = 0x6E6F5474696C7073;
      break;
    case 3:
      uint64_t result = 0x6D6F747375636E75;
      break;
    default:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
      uint64_t result = 0x726F6C6F63;
      break;
  }
  return result;
}

uint64_t ClockFaceLook.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750B18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FDA554();
  sub_24A057EB8();
  if (!v2)
  {
    LOBYTE(v30) = 0;
    sub_24A057C48();
    uint64_t v26 = a2;
    uint64_t v28 = v5;
    uint64_t v27 = v6;
    __swift_project_boxed_opaque_existential_1(v39, v40);
    char v9 = sub_24A057D28();
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
    if ((v9 & 1) == 0)
    {
      long long v41 = a1;
      while (1)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
        sub_249FDA5A8();
        sub_24A057D08();
        if (v38)
        {
          long long v30 = 0u;
          long long v31 = 0u;
          unint64_t v32 = 0;
        }
        else
        {
          uint64_t v15 = v36;
          uint64_t v14 = v37;
          long long v29 = v35;
          *((void *)&v31 + 1) = &type metadata for SolidClockFaceColor;
          unint64_t v32 = sub_249F849F4();
          uint64_t v16 = swift_allocObject();
          *(void *)&long long v30 = v16;
          *(_OWORD *)(v16 + 16) = v29;
          *(void *)(v16 + 32) = v15;
          *(void *)(v16 + 40) = v14;
        }
        sub_249F6E6C8((uint64_t)&v30, (uint64_t)&v35, &qword_269750B00);
        uint64_t v11 = v37;
        sub_249F6E790((uint64_t)&v35, &qword_269750B00);
        if (!v11)
        {
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
          uint64_t v37 = &type metadata for DynamicClockFaceColor;
          unint64_t v38 = sub_249F85608();
          *(void *)&long long v35 = swift_allocObject();
          sub_249FDA60C();
          sub_24A057D18();
          sub_249FDA660((uint64_t)&v35, (uint64_t)&v30);
          a1 = v41;
        }
        sub_249F6E6C8((uint64_t)&v30, (uint64_t)&v33, &qword_269750B00);
        if (!v34) {
          break;
        }
        sub_249F7B5E8(&v33, (uint64_t)&v35);
        sub_249F7B37C((uint64_t)&v35, (uint64_t)&v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_249FBA84C(0, v10[2] + 1, 1, v10);
        }
        unint64_t v13 = v10[2];
        unint64_t v12 = v10[3];
        if (v13 >= v12 >> 1) {
          uint64_t v10 = sub_249FBA84C((void *)(v12 > 1), v13 + 1, 1, v10);
        }
        v10[2] = v13 + 1;
        sub_249F7B5E8(&v33, (uint64_t)&v10[5 * v13 + 4]);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
        sub_249F6E790((uint64_t)&v30, &qword_269750B00);
        __swift_project_boxed_opaque_existential_1(v39, v40);
        if (sub_24A057D28()) {
          goto LABEL_17;
        }
      }
      sub_249F6E790((uint64_t)&v33, &qword_269750B00);
      sub_249F6E790((uint64_t)&v30, &qword_269750B00);
    }
LABEL_17:
    LOBYTE(v30) = 1;
    uint64_t v17 = v28;
    sub_24A057C58();
    unint64_t v18 = sub_249FDA714();
    uint64_t v19 = v27;
    uint64_t v20 = v18;
    swift_bridgeObjectRelease();
    LOBYTE(v30) = 2;
    uint64_t v21 = sub_24A057C58();
    uint64_t v22 = v26;
    sub_249FD902C(v20, (uint64_t)v10, v21, v23, (uint64_t)&v30);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249F7B58C((uint64_t)&v30, v22);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_249FD902C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  switch((char)result)
  {
    case 1:
      if (*(void *)(a2 + 16) != 1) {
        goto LABEL_10;
      }
      sub_249F7B37C(a2 + 32, a5);
      *(void *)(a5 + 40) = a3;
      *(void *)(a5 + 48) = a4;
      *(unsigned char *)(a5 + 96) = 0;
      goto LABEL_9;
    case 2:
      *(void *)a5 = a2;
      *(void *)(a5 + 8) = a3;
      *(void *)(a5 + 16) = a4;
      *(unsigned char *)(a5 + 96) = 1;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    case 3:
      if (*(void *)(a2 + 16) != 2) {
        goto LABEL_10;
      }
      sub_249F7B37C(a2 + 32, a5);
      sub_249F7B37C(a2 + 72, a5 + 40);
      *(void *)(a5 + 80) = a3;
      *(void *)(a5 + 88) = a4;
      *(unsigned char *)(a5 + 96) = 2;
LABEL_9:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      if (*(void *)(a2 + 16))
      {
LABEL_10:
        sub_24A057A78();
        sub_24A057BA8();
        sub_24A057438();
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA0);
        MEMORY[0x24C5B8D90](a2, v9);
        sub_24A057438();
        swift_bridgeObjectRelease();
        sub_24A057438();
        sub_249FDB240();
        swift_allocError();
        *(void *)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0xE000000000000000;
        *(unsigned char *)(v10 + 16) = 0;
        uint64_t result = swift_willThrow();
      }
      else
      {
        *(_OWORD *)(a5 + 64) = 0u;
        *(_OWORD *)(a5 + 80) = 0u;
        *(_OWORD *)(a5 + 32) = 0u;
        *(_OWORD *)(a5 + 48) = 0u;
        *(_OWORD *)a5 = 0u;
        *(_OWORD *)(a5 + 16) = 0u;
        *(unsigned char *)(a5 + 96) = 3;
      }
      break;
  }
  return result;
}

uint64_t sub_249FD92FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24A0122A8(*a1, *a2);
}

uint64_t sub_249FD9308()
{
  return sub_24A057E68();
}

uint64_t sub_249FD93B8()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249FD9454()
{
  return sub_24A057E68();
}

uint64_t sub_249FD9500@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FDB1F4();
  *a1 = result;
  return result;
}

void sub_249FD9530(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xEE00726569666974;
  unint64_t v5 = 0x6E65644965707974;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000010;
    unint64_t v4 = 0x800000024A062E40;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x73726F6C6F63;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_249FD959C()
{
  unint64_t v1 = 0x6E65644965707974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73726F6C6F63;
  }
}

uint64_t sub_249FD9604@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FDB1F4();
  *a1 = result;
  return result;
}

uint64_t sub_249FD962C(uint64_t a1)
{
  unint64_t v2 = sub_249FDA554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249FD9668(uint64_t a1)
{
  unint64_t v2 = sub_249FDA554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClockFaceLook.hashValue.getter()
{
  return sub_24A057E68();
}

uint64_t sub_249FD96E4()
{
  return sub_24A057E68();
}

uint64_t sub_249FD9728()
{
  return sub_24A057E68();
}

uint64_t sub_249FD9764@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClockFaceLook.init(from:)(a1, a2);
}

uint64_t sub_249FD977C(void *a1)
{
  return ClockFaceLook.encode(to:)(a1);
}

uint64_t sub_249FD9798(unsigned __int8 *a1, char *a2)
{
  return sub_24A0127FC(*a1, *a2);
}

uint64_t sub_249FD97A4()
{
  return sub_24A057E68();
}

uint64_t sub_249FD98A0()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249FD9984()
{
  return sub_24A057E68();
}

uint64_t sub_249FD9A7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249FDA6C8();
  *a1 = result;
  return result;
}

void sub_249FD9AAC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEE00656C62617A69;
  uint64_t v3 = 0x6D6F747375636E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x726F6C6F63;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "gradient_array");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      strcpy((char *)a1, "splitTone_a_b");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

char *sub_249FD9B68(void *a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer;
  id v6 = objc_allocWithZone(MEMORY[0x263F157D0]);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_init);

  v24.receiver = v7;
  v24.super_class = (Class)type metadata accessor for ClackFaceLookThumbnailView();
  uint64_t v8 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer;
  uint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750460);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24A0593D0;
  type metadata accessor for CGColor(0);
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 88) = v12;
  *(void *)(v11 + 56) = v12;
  *(void *)(v11 + 64) = a2;
  unint64_t v13 = v8;
  id v14 = v10;
  id v15 = a1;
  id v16 = a2;
  uint64_t v17 = (void *)sub_24A057548();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setColors_, v17);

  unint64_t v18 = *(void **)&v8[v9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974F928);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24A05F130;
  sub_249FAD044();
  id v20 = v18;
  *(void *)(v19 + 32) = sub_24A057928();
  *(void *)(v19 + 40) = sub_24A057928();
  sub_24A057588();
  uint64_t v21 = (void *)sub_24A057548();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setLocations_, v21);

  uint64_t v22 = v13;
  objc_msgSend(v22, sel_frame);
  objc_msgSend(v22, sel__setCornerRadius_, CGRectGetWidth(v25) * 0.5);

  return v22;
}

id sub_249FD9E34()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClackFaceLookThumbnailView();
  objc_msgSendSuper2(&v6, sel_layoutSubviews);
  uint64_t v1 = OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer;
  id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer], sel_superlayer);

  if (!v2)
  {
    id v3 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v3, sel_insertSublayer_atIndex_, *(void *)&v0[v1], 0);

    objc_msgSend(*(id *)&v0[v1], sel_setType_, *MEMORY[0x263F15DE0]);
  }
  id v4 = *(id *)&v0[v1];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);

  objc_msgSend(*(id *)&v0[v1], sel_setStartPoint_, 0.0, 0.5);
  return objc_msgSend(*(id *)&v0[v1], sel_setEndPoint_, 1.0, 0.5);
}

id sub_249FD9FCC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClackFaceLookThumbnailView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_249FDA010(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_249FD7588(a1, WitnessTable);
}

void sub_249FDA074()
{
}

uint64_t sub_249FDA0D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_249FD7588(a1, WitnessTable);
}

uint64_t sub_249FDA134(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_249FD7588(a1, WitnessTable);
}

id sub_249FDA198(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t _s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0 = sub_249FD8928();
  uint64_t v2 = v1;
  if (v0 == sub_249FD8928() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_24A057D48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v4 & 1) == 0) {
      return result;
    }
  }
  uint64_t v6 = sub_249FD7734();
  uint64_t v7 = sub_249FD7734();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = *(void *)(v6 + 16);
    uint64_t v11 = 32;
    while (1)
    {
      uint64_t result = sub_249F7B37C(v7 + v11, (uint64_t)v25);
      if (v10 == v9) {
        goto LABEL_20;
      }
      if (v9 >= *(void *)(v6 + 16)) {
        break;
      }
      sub_249F7B37C(v6 + v11, (uint64_t)v24);
      sub_249F7B37C((uint64_t)v25, (uint64_t)&v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B16FAA0);
      if (swift_dynamicCast())
      {
        float64x2_t v14 = v22;
        float64x2_t v16 = v23;
        sub_249F7B37C((uint64_t)v24, (uint64_t)&v18);
        if ((swift_dynamicCast() & 1) != 0
          && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v14, v22), (int32x4_t)vceqq_f64(v16, v23))), 0xFuLL))) & 1) == 0)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
LABEL_20:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
LABEL_21:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      sub_249F7B5E8(v25, (uint64_t)&v22);
      if (swift_dynamicCast())
      {
        float64x2_t v15 = v20;
        float64x2_t v17 = v21;
        float64x2_t v12 = v18;
        float64x2_t v13 = v19;
        sub_249F7B5E8(v24, (uint64_t)&v22);
        if ((swift_dynamicCast() & 1) != 0
          && (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v12, v18), (int32x4_t)vceqq_f64(v13, v19)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v15, v20), (int32x4_t)vceqq_f64(v17, v21)))), 7uLL))) & 1) == 0)
        {
          goto LABEL_21;
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
      }
      ++v9;
      v11 += 40;
      if (v8 == v9) {
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for ClackFaceLookThumbnailView()
{
  return self;
}

uint64_t sub_249FDA4FC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_249FDA534(uint64_t a1)
{
  return sub_249F89424(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_249FDA554()
{
  unint64_t result = qword_269750B10;
  if (!qword_269750B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B10);
  }
  return result;
}

unint64_t sub_249FDA5A8()
{
  unint64_t result = qword_26B16FA10;
  if (!qword_26B16FA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA10);
  }
  return result;
}

uint64_t sub_249FDA5FC()
{
  return MEMORY[0x270FA0238](v0, 80, 7);
}

unint64_t sub_249FDA60C()
{
  unint64_t result = qword_26B16FA38;
  if (!qword_26B16FA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA38);
  }
  return result;
}

uint64_t sub_249FDA660(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FDA6C8()
{
  unint64_t v0 = sub_24A057C38();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_249FDA714()
{
  swift_bridgeObjectRetain();
  unint64_t v0 = sub_24A057C38();
  swift_bridgeObjectRelease();
  if (v0 > 3)
  {
    sub_24A057A78();
    swift_bridgeObjectRelease();
    sub_24A057438();
    sub_249FDB240();
    swift_allocError();
    *(void *)uint64_t v1 = 0xD000000000000010;
    *(void *)(v1 + 8) = 0x800000024A064630;
    *(unsigned char *)(v1 + 16) = 0;
    swift_willThrow();
  }
  return v0;
}

uint64_t sub_249FDA800()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_249FDA814()
{
  unint64_t result = qword_269750B20;
  if (!qword_269750B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B20);
  }
  return result;
}

unint64_t sub_249FDA868(uint64_t a1)
{
  unint64_t result = sub_249FDA890();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249FDA890()
{
  unint64_t result = qword_269750B28;
  if (!qword_269750B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B28);
  }
  return result;
}

uint64_t destroy for ClockFaceLook(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 96);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  if (v2 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  }
  else if (v2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v2) {
      return result;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(result);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClockFaceLook(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v4)
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(unsigned char *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ClockFaceLook(uint64_t a1, long long *a2)
{
  if ((long long *)a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  switch(v4)
  {
    case 2u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
      goto LABEL_10;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 0u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
LABEL_10:
      swift_bridgeObjectRelease();
      break;
  }
  unsigned int v5 = *((unsigned __int8 *)a2 + 96);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    uint64_t v7 = *((void *)a2 + 3);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
    uint64_t v8 = *((void *)a2 + 8);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, (uint64_t)a2 + 40);
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(unsigned char *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(unsigned char *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v5)
  {
    long long v9 = *a2;
    long long v10 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v9;
    long long v11 = a2[3];
    long long v12 = a2[4];
    long long v13 = a2[5];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(_OWORD *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 3);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(unsigned char *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithTake for ClockFaceLook(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  switch(v4)
  {
    case 2u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
      goto LABEL_10;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 0u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
LABEL_10:
      swift_bridgeObjectRelease();
      break;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 96);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 96) = 2;
  }
  else if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 96) = 1;
  }
  else if (v5)
  {
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 96) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockFaceLook(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClockFaceLook(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249FDAF04(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 96);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_249FDAF20(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    unsigned int v2 = a2 - 3;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 96) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLook()
{
  return &type metadata for ClockFaceLook;
}

uint64_t sub_249FDAF5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249FDAF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_249FDAF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_249FDAF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_249FDAFAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_249FDAFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_249FDAFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

unsigned char *storeEnumTagSinglePayload for ClockFaceLook.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FDB0B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLook.CodingKeys()
{
  return &type metadata for ClockFaceLook.CodingKeys;
}

unint64_t sub_249FDB0F0()
{
  unint64_t result = qword_269750B38;
  if (!qword_269750B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B38);
  }
  return result;
}

unint64_t sub_249FDB148()
{
  unint64_t result = qword_269750B40;
  if (!qword_269750B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B40);
  }
  return result;
}

unint64_t sub_249FDB1A0()
{
  unint64_t result = qword_269750B48;
  if (!qword_269750B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B48);
  }
  return result;
}

uint64_t sub_249FDB1F4()
{
  unint64_t v0 = sub_24A057C38();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_249FDB240()
{
  unint64_t result = qword_269750B50;
  if (!qword_269750B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B50);
  }
  return result;
}

uint64_t destroy for ClockFaceLookCodingError()
{
  return sub_249FDB2A8();
}

uint64_t sub_249FDB2A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11ClockPoster24ClockFaceLookCodingErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_249F7AE5C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClockFaceLookCodingError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_249F7AE5C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_249FDB2A8();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClockFaceLookCodingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_249FDB2A8();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockFaceLookCodingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockFaceLookCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249FDB43C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_249FDB444(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLookCodingError()
{
  return &type metadata for ClockFaceLookCodingError;
}

unsigned char *storeEnumTagSinglePayload for ClockFaceLookType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FDB52CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLookType()
{
  return &type metadata for ClockFaceLookType;
}

unint64_t sub_249FDB568()
{
  unint64_t result = qword_269750B58;
  if (!qword_269750B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750B58);
  }
  return result;
}

uint64_t sub_249FDB5C0()
{
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  unsigned int v2 = (__CFString *)sub_24A057368();
  CFNotificationCenterRemoveObserver(v1, v0, v2, 0);

  int v3 = &v0[OBJC_IVAR____TtCV11ClockPoster24DarwinNotificationCenter12Subscription_id];
  uint64_t v4 = sub_24A056268();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_249FDB6C8()
{
  return type metadata accessor for DarwinNotificationCenter.Subscription();
}

uint64_t type metadata accessor for DarwinNotificationCenter.Subscription()
{
  uint64_t result = qword_269750B60;
  if (!qword_269750B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_249FDB71C()
{
  uint64_t result = sub_24A056268();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_249FDB7C4()
{
  return sub_24A057E68();
}

uint64_t sub_249FDB85C()
{
  return sub_24A057318();
}

uint64_t sub_249FDB8E4()
{
  return sub_24A057E68();
}

uint64_t sub_249FDB978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCV11ClockPoster24DarwinNotificationCenter12Subscription_id;
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_249FDB9F0(void *a1, void *a2)
{
  return MEMORY[0x270EF0CB0](*a1 + OBJC_IVAR____TtCV11ClockPoster24DarwinNotificationCenter12Subscription_id, *a2 + OBJC_IVAR____TtCV11ClockPoster24DarwinNotificationCenter12Subscription_id);
}

uint64_t sub_249FDBA0C()
{
  return sub_249FDBA9C(&qword_269750B70, MEMORY[0x263F07508]);
}

uint64_t sub_249FDBA54()
{
  return sub_249FDBA9C(&qword_269750B78, (void (*)(uint64_t))type metadata accessor for DarwinNotificationCenter.Subscription);
}

uint64_t sub_249FDBA9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249FDBAE4()
{
  return sub_24A057358() & 1;
}

uint64_t sub_249FDBB40()
{
  return sub_24A057328();
}

void sub_249FDBB88()
{
}

void sub_249FDBBB0()
{
}

uint64_t sub_249FDBBCC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C30);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FE3CD0();
  sub_24A057EC8();
  v8[15] = 0;
  sub_249F9ABBC();
  sub_24A057CD8();
  if (!v1)
  {
    v8[14] = 1;
    sub_24A057CB8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_249FDBD3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FE3CD0();
  sub_24A057EB8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  void v12[15] = 0;
  sub_249F9AB68();
  sub_24A057C88();
  sub_249F7B58C((uint64_t)v13, (uint64_t)v14);
  v13[0] = 1;
  sub_24A057C68();
  uint64_t v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v10;
  sub_249F77CC4((uint64_t)v14, a2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_249F77D44((uint64_t)v14);
}

uint64_t sub_249FDBF3C()
{
  if (*v0) {
    return 0x656C676E61;
  }
  else {
    return 1802465132;
  }
}

uint64_t sub_249FDBF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249FE4000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249FDBF94(uint64_t a1)
{
  unint64_t v2 = sub_249FE3CD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249FDBFD0(uint64_t a1)
{
  unint64_t v2 = sub_249FE3CD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249FDC00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_249F7B58C(a1, a2);
  *(void *)(a2 + 104) = 0;
  return result;
}

uint64_t sub_249FDC038@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FDBD3C(a1, a2);
}

uint64_t sub_249FDC050(void *a1)
{
  return sub_249FDBBCC(a1);
}

BOOL sub_249FDC068(uint64_t a1, uint64_t a2)
{
  return (_s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0() & 1) != 0 && *(double *)(a1 + 104) == *(double *)(a2 + 104);
}

uint64_t (*sub_249FDC0B0())()
{
  return j__swift_endAccess;
}

uint64_t sub_249FDC104()
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_249FDC1B8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_249FDC274()
{
  return swift_release();
}

void (*sub_249FDC344(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24A056498();
  swift_release();
  v3[7] = sub_249FDC0B0();
  return sub_249FDC460;
}

void sub_249FDC460(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  void *v1 = v1[4];
  swift_getKeyPath();
  sub_24A056488();
  swift_release();

  free(v1);
}

uint64_t sub_249FDC4EC()
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_249FDC58C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_249FDC634()
{
  return swift_release();
}

uint64_t sub_249FDC704(uint64_t a1)
{
  uint64_t v2 = v1;
  v36[1] = *(void *)v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A056238();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v39 = (uint64_t)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A055F08();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v1 + 16) = 0;
  type metadata accessor for RollingClockViewModel();
  swift_allocObject();
  *(void *)(v1 + 24) = sub_249F6491C();
  *(void *)(v1 + 144) = 0;
  *(void *)(v1 + 152) = 0xE000000000000000;
  sub_24A055EF8();
  float64x2_t v14 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v14(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, v13, v10);
  uint64_t v40 = v8;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v38 = v7;
  v15(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, 1, 1, v7);
  *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor) = sub_24A056F28();
  *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor) = sub_24A056F28();
  *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor) = 0;
  uint64_t v16 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)(v2 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex) = 0;
  sub_24A0564A8();
  sub_249F77CC4(a1, v2 + 32);
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v18 = v39;
  sub_24A006BDC(v39);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v2 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date, v18, v38);
  uint64_t v37 = a1;
  id v19 = ClockFaceLook.primaryUIColor.getter();
  uint64_t v20 = MEMORY[0x24C5B8790](v19);
  sub_249FDCE0C(v18, v20, 0, (uint64_t)v13);
  v14(v2 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, v13, v10);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v36[-2] = v2;
  v36[-1] = v20;
  uint64_t v41 = v2;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  v36[0] = v20;
  swift_retain();
  sub_24A056468();
  swift_release();
  swift_release();
  uint64_t v22 = sub_24A057628();
  float64x2_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v6, 1, 1, v22);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  sub_24A057608();
  swift_retain();
  uint64_t v25 = sub_24A0575F8();
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = MEMORY[0x263F8F500];
  v26[2] = v25;
  v26[3] = v27;
  v26[4] = v24;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_269750C70, (uint64_t)v26);
  swift_release();
  v23(v6, 1, 1, v22);
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v29 = sub_24A0575F8();
  long long v30 = (void *)swift_allocObject();
  _OWORD v30[2] = v29;
  v30[3] = v27;
  v30[4] = v28;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_269750C80, (uint64_t)v30);
  swift_release();
  v23(v6, 1, 1, v22);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v32 = sub_24A0575F8();
  long long v33 = (void *)swift_allocObject();
  v33[2] = v32;
  _OWORD v33[3] = v27;
  v33[4] = v31;
  swift_release();
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_269750C90, (uint64_t)v33);
  swift_release();
  v23(v6, 1, 1, v22);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  *(void *)(v34 + 24) = 0;
  sub_24A04CE18((uint64_t)v6, (uint64_t)&unk_269750CA0, v34);
  swift_release();
  sub_249FE2950();
  swift_release();
  sub_249F77D44(v37);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v38);
  return v2;
}

uint64_t sub_249FDCE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v73 = a3;
  uint64_t v74 = a2;
  uint64_t v71 = a4;
  uint64_t v72 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C38);
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v64 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A055E68();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6);
  long long v57 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750280);
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A055F68();
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  int v61 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v60 = (char *)&v53 - v13;
  uint64_t v14 = sub_24A056168();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  uint64_t v70 = v15;
  MEMORY[0x270FA5388](v14);
  CGRect v68 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_24A0560A8();
  uint64_t v17 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  id v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24A056128();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  float64x2_t v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24A056158();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v53 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (char *)&v53 - v33;
  MEMORY[0x24C5B7540](v32);
  sub_24A0560F8();
  sub_24A056148();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  long long v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  v35(v28, v24);
  sub_24A056098();
  sub_24A056078();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v67);
  v35(v31, v24);
  uint64_t v36 = v68;
  sub_24A056068();
  v35(v34, v24);
  sub_249FE43C4(&qword_269750288, MEMORY[0x263F07280]);
  uint64_t v37 = v69;
  sub_24A056218();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v37);
  if (v73)
  {
    uint64_t KeyPath = swift_getKeyPath();
    *(&v53 - 2) = MEMORY[0x270FA5388](KeyPath);
    swift_getKeyPath();
    uint64_t v75 = v74;
    sub_249F6E80C();
    swift_retain();
    return sub_24A055ED8();
  }
  else
  {
    uint64_t v40 = swift_getKeyPath();
    *(&v53 - 2) = MEMORY[0x270FA5388](v40);
    swift_getKeyPath();
    sub_249FA4094();
    uint64_t v41 = v54;
    sub_24A055F38();
    swift_release();
    long long v43 = v57;
    uint64_t v42 = v58;
    uint64_t v44 = v59;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F065D8], v59);
    char v45 = v60;
    uint64_t v46 = v56;
    sub_24A055F48();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v46);
    uint64_t v47 = swift_getKeyPath();
    *(&v53 - 2) = MEMORY[0x270FA5388](v47);
    swift_getKeyPath();
    sub_249F6E80C();
    uint64_t v48 = v64;
    sub_24A055F38();
    swift_release();
    uint64_t v75 = v74;
    uint64_t v49 = v61;
    uint64_t v50 = v66;
    sub_24A055F48();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v50);
    sub_24A055EE8();
    uint64_t v51 = v63;
    uint64_t v52 = *(void (**)(char *, uint64_t))(v62 + 8);
    v52(v49, v63);
    return ((uint64_t (*)(char *, uint64_t))v52)(v45, v51);
  }
}

uint64_t sub_249FDD5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a4;
  uint64_t v5 = sub_24A056238();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503E0);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503E8);
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_24A057608();
  v4[19] = sub_24A0575F8();
  uint64_t v9 = sub_24A0575D8();
  v4[20] = v9;
  v4[21] = v8;
  return MEMORY[0x270FA2498](sub_249FDD7F4, v9, v8);
}

uint64_t sub_249FDD7F4()
{
  if (qword_26974F328 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = qword_269751340;
  uint64_t v5 = *(void *)(qword_269751340 + OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers);
  swift_retain();
  sub_249FF9D44(2, v5, v4, 2, v1);
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  uint64_t v6 = sub_24A0575F8();
  v0[23] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[24] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_249FDD984;
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[11];
  uint64_t v10 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v9, v6, v10, v8);
}

uint64_t sub_249FDD984()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_249FDDAC8, v3, v2);
}

uint64_t sub_249FDDAC8()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    float64x2_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[10], v1, v2);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v18 = v0[16];
    uint64_t v17 = v0[17];
    uint64_t v19 = v0[15];
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[7];
    uint64_t v22 = v0[8];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    goto LABEL_8;
  }
  uint64_t v5 = Strong;
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[9];
  uint64_t v25 = v0[10];
  uint64_t v9 = v0[7];
  uint64_t v8 = v0[8];
  (*(void (**)(uint64_t))(v8 + 16))(v7);
  swift_getKeyPath();
  uint64_t v10 = swift_task_alloc();
  *(void *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v7;
  v0[5] = v5;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v7, v9);
  swift_release();
  v11(v25, v9);
  v0[22] = v6;
  uint64_t v12 = sub_24A0575F8();
  v0[23] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[24] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_249FDD984;
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[11];
  uint64_t v16 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v15, v12, v16, v14);
}

uint64_t sub_249FDDDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750CA8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CB0);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CB8);
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_24A057608();
  v4[19] = sub_24A0575F8();
  uint64_t v9 = sub_24A0575D8();
  v4[20] = v9;
  v4[21] = v8;
  return MEMORY[0x270FA2498](sub_249FDDFF8, v9, v8);
}

uint64_t sub_249FDDFF8()
{
  if (qword_26974F358 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  sub_24A04FF28(v1);
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  uint64_t v4 = sub_24A0575F8();
  v0[23] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249FDE164;
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[11];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_249FDE164()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_249FDE2A8, v3, v2);
}

uint64_t sub_249FDE2A8()
{
  uint64_t v1 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[8] + 48))(v1, 1, v0[7]) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  sub_249F6E664(v1, v0[10], &qword_269750C48);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v14 = v0[16];
    uint64_t v13 = v0[17];
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[10];
    swift_release();
    sub_249F6E790(v16, &qword_269750C48);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_8;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  sub_249F6E6C8(v5, v6, &qword_269750C48);
  swift_getKeyPath();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v6;
  v0[5] = v3;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  swift_task_dealloc();
  sub_249F6E790(v6, &qword_269750C48);
  swift_release();
  sub_249F6E790(v5, &qword_269750C48);
  v0[22] = v4;
  uint64_t v8 = sub_24A0575F8();
  v0[23] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[24] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_249FDE164;
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[11];
  uint64_t v12 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v11, v8, v12, v10);
}

uint64_t sub_249FDE5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  v4[7] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF20);
  v4[12] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF28);
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF30);
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = sub_24A057608();
  v4[20] = sub_24A0575F8();
  uint64_t v9 = sub_24A0575D8();
  v4[21] = v9;
  v4[22] = v8;
  return MEMORY[0x270FA2498](sub_249FDE7CC, v9, v8);
}

uint64_t sub_249FDE7CC()
{
  if (qword_26974F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752360;
  *(void *)(v0 + 184) = qword_269752360;
  return MEMORY[0x270FA2498](sub_249FDE864, v1, 0);
}

uint64_t sub_249FDE864()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[15];
  uint64_t v3 = *(void *)(v1 + 112);
  swift_retain();
  sub_249FF09F4(v3, v1, v2);
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[22];
  return MEMORY[0x270FA2498](sub_249FDE8EC, v4, v5);
}

uint64_t sub_249FDE8EC()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  sub_24A057658();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[24] = 0;
  uint64_t v4 = sub_24A0575F8();
  v0[25] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_249FDEA08;
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[12];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_249FDEA08()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_249FDEB4C, v3, v2);
}

uint64_t sub_249FDEB4C()
{
  uint64_t v1 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[9] + 48))(v1, 1, v0[8]) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  sub_249F6E664(v1, v0[11], &qword_26974FF18);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v11 = v0[17];
    uint64_t v10 = v0[18];
    uint64_t v12 = v0[16];
    uint64_t v13 = v0[11];
    swift_release();
    sub_249F6E790(v13, &qword_26974FF18);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_7;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = v0[10];
  sub_249F6E6C8(v0[11], v4, &qword_26974FF18);
  uint64_t v5 = type metadata accessor for Alarm();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[7];
  if (v6 == 1)
  {
    sub_249F6E790(v0[10], &qword_26974FF18);
    uint64_t v9 = sub_24A056238();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    uint64_t v16 = sub_24A056238();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v8, v7, v16);
    sub_249FE492C(v7, (uint64_t (*)(void))type metadata accessor for Alarm);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
  }
  uint64_t v18 = v0[24];
  uint64_t v19 = v0[11];
  uint64_t v20 = v0[7];
  swift_getKeyPath();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v21 + 16) = v3;
  *(void *)(v21 + 24) = v20;
  v0[5] = v3;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  swift_task_dealloc();
  sub_249F6E790(v20, &qword_2697515A0);
  swift_release();
  sub_249F6E790(v19, &qword_26974FF18);
  v0[24] = v18;
  uint64_t v22 = sub_24A0575F8();
  v0[25] = v22;
  float64x2_t v23 = (void *)swift_task_alloc();
  v0[26] = v23;
  void *v23 = v0;
  v23[1] = sub_249FDEA08;
  uint64_t v24 = v0[16];
  uint64_t v25 = v0[12];
  uint64_t v26 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v25, v22, v26, v24);
}

uint64_t sub_249FDEFA0()
{
  return MEMORY[0x270FA2498](sub_249FDEFBC, 0, 0);
}

uint64_t sub_249FDEFBC()
{
  if (qword_26974F348 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752450;
  *(void *)(v0 + 16) = qword_269752450;
  return MEMORY[0x270FA2498](sub_249FDF054, v1, 0);
}

uint64_t sub_249FDF054()
{
  id v1 = sub_24A0414EC(1);
  sub_24A041CCC();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_249FDF0C4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A057628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  sub_24A04CE18((uint64_t)v3, (uint64_t)&unk_269750C60, v5);
  swift_release();
  swift_release();
  sub_249F77D44(v0 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText;
  uint64_t v7 = sub_24A055F08();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_2697515A0);
  v8(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, v7);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  uint64_t v10 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  sub_249F6E790(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature, &qword_269750C48);
  uint64_t v11 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel___observationRegistrar;
  uint64_t v12 = sub_24A0564B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return v0;
}

uint64_t sub_249FDF320()
{
  return MEMORY[0x270FA2498](sub_249FDF33C, 0, 0);
}

uint64_t sub_249FDF33C()
{
  if (qword_26974F348 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_269752450;
  *(void *)(v0 + 16) = qword_269752450;
  return MEMORY[0x270FA2498](sub_249FDF3D4, v1, 0);
}

uint64_t sub_249FDF3D4()
{
  id v1 = sub_24A0414EC(1);
  sub_24A042084();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_249FDF444()
{
  sub_249FDF0C4();

  return swift_deallocClassInstance();
}

uint64_t sub_249FDF49C()
{
  return type metadata accessor for DigitalClockViewModel();
}

uint64_t type metadata accessor for DigitalClockViewModel()
{
  uint64_t result = qword_269750BD0;
  if (!qword_269750BD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249FDF4F0()
{
  sub_24A055F08();
  if (v0 <= 0x3F)
  {
    sub_249FE3208();
    if (v1 <= 0x3F)
    {
      sub_24A056238();
      if (v2 <= 0x3F)
      {
        sub_249FE3260();
        if (v3 <= 0x3F)
        {
          sub_24A0564B8();
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_249FDF6C4()
{
  return swift_retain();
}

uint64_t sub_249FDF768@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + 24);
  return swift_retain();
}

uint64_t sub_249FDF814()
{
  return swift_release();
}

uint64_t sub_249FDF8F4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  return sub_249F77CC4(v1 + 32, a1);
}

uint64_t sub_249FDF9B8(uint64_t a1, uint64_t a2)
{
  sub_249F77CC4(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_249FE498C(v4, a1 + 32);
  swift_endAccess();
  sub_249FE2950();
  return sub_249F77D44((uint64_t)v4);
}

uint64_t sub_249FDFA38()
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_249FDFAE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 152);
  *a2 = *(void *)(v3 + 144);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249FDFB94()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_249FDFC78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24A056EA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24[0] = v0;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  if (*(unsigned char *)(v0 + 17) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    return MEMORY[0x24C5B8780](v5, 0.6, 0.0, 0.0, 1.0);
  }
  swift_getKeyPath();
  v24[0] = v0;
  sub_24A056478();
  swift_release();
  swift_beginAccess();
  sub_249F77CC4(v0 + 32, (uint64_t)v24);
  sub_249F75B7C((uint64_t)v24, (uint64_t)v27);
  sub_249F77D44((uint64_t)v24);
  uint64_t v7 = sub_249FD7734();
  sub_249F75BD8((uint64_t)v27);
  unint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8 >= 3)
  {
    swift_getKeyPath();
    v24[0] = v1;
    sub_24A056478();
    swift_release();
    return 0xD000000000000023;
  }
  swift_getKeyPath();
  v24[0] = v1;
  sub_24A056478();
  swift_release();
  sub_249F77CC4(v1 + 32, (uint64_t)v24);
  sub_249F75B7C((uint64_t)v24, (uint64_t)v27);
  sub_249F77D44((uint64_t)v24);
  uint64_t v9 = sub_249FD7734();
  sub_249F75BD8((uint64_t)v27);
  unint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  if (v10 >= 2)
  {
    swift_getKeyPath();
    v24[0] = v1;
    sub_24A056478();
    swift_release();
    sub_249F77CC4(v1 + 32, (uint64_t)v24);
    sub_249F75B7C((uint64_t)v24, (uint64_t)v27);
    sub_249F77D44((uint64_t)v24);
    uint64_t v11 = sub_249FD7734();
    sub_249F75BD8((uint64_t)v27);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_24A057AD8();
      uint64_t v13 = v11 + 32;
      do
      {
        sub_249F7B37C(v13, (uint64_t)v24);
        uint64_t v14 = v25;
        uint64_t v15 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
        MEMORY[0x24C5B8790](v16);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        sub_24A057AB8();
        sub_24A057AE8();
        sub_24A057AF8();
        sub_24A057AC8();
        v13 += 40;
        --v12;
      }
      while (v12);
      uint64_t v6 = v23;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return v6;
  }
  swift_getKeyPath();
  v24[0] = v1;
  sub_24A056478();
  swift_release();
  sub_249F77CC4(v1 + 32, (uint64_t)v24);
  sub_249F75B7C((uint64_t)v24, (uint64_t)v27);
  sub_249F77D44((uint64_t)v24);
  uint64_t v17 = sub_249FD7734();
  uint64_t result = sub_249F75BD8((uint64_t)v27);
  if (*(void *)(v17 + 16))
  {
    sub_249F7B37C(v17 + 32, (uint64_t)v24);
    swift_bridgeObjectRelease();
    uint64_t v19 = v25;
    uint64_t v20 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    uint64_t v6 = MEMORY[0x24C5B8790](v21);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_249FE01A8@<X0>(uint64_t a1@<X8>)
{
  return sub_249FE0B38(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, a1);
}

uint64_t sub_249FE01BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE0C48(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, a2);
}

uint64_t sub_249FE01D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24A055F08();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_249FE0358()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24A056238();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = sub_24A055F08();
  uint64_t v20 = *(void *)(v12 - 8);
  uint64_t v21 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v15 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel___observationRegistrar;
  uint64_t v23 = v1;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  uint64_t v19 = v15;
  sub_24A056478();
  swift_release();
  uint64_t v16 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  sub_249F6E6C8(v16, (uint64_t)v11, &qword_2697515A0);
  sub_249F6E6C8((uint64_t)v11, (uint64_t)v8, &qword_2697515A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_249F6E790((uint64_t)v8, &qword_2697515A0);
    sub_24A055EF8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_249FA3730((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_249F6E790((uint64_t)v11, &qword_2697515A0);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v19 - 2) = v1;
  *(&v19 - 1) = (uint64_t)v14;
  uint64_t v22 = v1;
  sub_24A056468();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v21);
}

uint64_t sub_249FE06E0@<X0>(uint64_t a1@<X8>)
{
  return sub_249FE2398(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_2697515A0, a1);
}

uint64_t sub_249FE06FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE246C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_2697515A0, a2);
}

uint64_t sub_249FE0718(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F6E6C8(a1, (uint64_t)v6, &qword_2697515A0);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v6, &qword_2697515A0);
}

uint64_t sub_249FE0858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a2, (uint64_t)v6, &qword_2697515A0);
  uint64_t v7 = a1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  sub_249F9AC10((uint64_t)v6, v7, &qword_2697515A0);
  swift_endAccess();
  sub_249FE0358();
  return sub_249F6E790((uint64_t)v6, &qword_2697515A0);
}

BOOL sub_249FE0944()
{
  uint64_t v1 = type metadata accessor for TimeString(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v9 = v0;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 24);
  swift_getKeyPath();
  uint64_t v9 = v4;
  sub_249FE43C4(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  swift_retain();
  sub_24A056478();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  sub_249FE440C(v5, (uint64_t)v3);
  swift_release();
  swift_bridgeObjectRetain();
  sub_249FE492C((uint64_t)v3, type metadata accessor for TimeString);
  uint64_t v6 = sub_24A057418();
  swift_bridgeObjectRelease();
  return v6 > 4;
}

uint64_t sub_249FE0B24@<X0>(uint64_t a1@<X8>)
{
  return sub_249FE0B38(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, a1);
}

uint64_t sub_249FE0B38@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v5 = v2 + *a1;
  swift_beginAccess();
  uint64_t v6 = sub_24A055F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_249FE0C34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE0C48(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, a2);
}

uint64_t sub_249FE0C48@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v6 = v5 + *a2;
  swift_beginAccess();
  uint64_t v7 = sub_24A055F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_249FE0D48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24A055F08();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_249FE0ED0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1 + *a3;
  swift_beginAccess();
  uint64_t v5 = sub_24A055F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v4, a2, v5);
  return swift_endAccess();
}

uint64_t sub_249FE0F68()
{
  return swift_retain();
}

uint64_t sub_249FE1014@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  return swift_retain();
}

uint64_t sub_249FE10C8()
{
  return swift_release();
}

uint64_t sub_249FE11A8()
{
  uint64_t v1 = v0;
  v12[1] = *v0;
  uint64_t v2 = sub_24A056238();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A055F08();
  uint64_t v13 = *(void *)(v6 - 8);
  uint64_t v14 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = v0;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v9 = (char *)v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_24A056478();
  swift_release();
  uint64_t v10 = *(void *)((char *)v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  swift_getKeyPath();
  uint64_t v17 = v1;
  swift_retain();
  sub_24A056478();
  swift_release();
  sub_249FDCE0C((uint64_t)v5, v10, *((unsigned __int8 *)v1 + 17), (uint64_t)v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  uint64_t v15 = v1;
  uint64_t v16 = v8;
  uint64_t v17 = v1;
  sub_24A056468();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v14);
}

uint64_t sub_249FE14D4()
{
  return swift_retain();
}

uint64_t sub_249FE1580@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  return swift_retain();
}

uint64_t sub_249FE1634()
{
  return swift_release();
}

uint64_t sub_249FE1714(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor) = a2;
  swift_retain_n();
  swift_release();
  sub_249FE11A8();
  return swift_release();
}

uint64_t sub_249FE1778()
{
  return swift_retain();
}

uint64_t sub_249FE1824@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor);
  return swift_retain();
}

uint64_t sub_249FE18D8()
{
  return swift_release();
}

uint64_t sub_249FE19B8()
{
  uint64_t v1 = v0;
  v12[1] = *v0;
  uint64_t v2 = sub_24A056238();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A055F08();
  uint64_t v13 = *(void *)(v6 - 8);
  uint64_t v14 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = v0;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v9 = (char *)v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_24A056478();
  swift_release();
  uint64_t v10 = *(void *)((char *)v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  swift_getKeyPath();
  uint64_t v17 = v1;
  swift_retain();
  sub_24A056478();
  swift_release();
  sub_249FDCE0C((uint64_t)v5, v10, *((unsigned __int8 *)v1 + 17), (uint64_t)v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  uint64_t v15 = v1;
  uint64_t v16 = v8;
  uint64_t v17 = v1;
  sub_24A056468();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v14);
}

uint64_t sub_249FE1CE4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  uint64_t v4 = sub_24A056238();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_249FE1DE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  uint64_t v5 = sub_24A056238();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_249FE1EDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24A056238();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_249FE2064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A056238();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  uint64_t v9 = a1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v9, v8, v4);
  swift_endAccess();
  sub_249FE19B8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_249FE21A8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature;
  swift_beginAccess();
  sub_249F9AC10(a1, v6, &qword_269750C48);
  swift_endAccess();
  swift_getKeyPath();
  uint64_t v15 = v1;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  sub_249F6E6C8(v6, (uint64_t)v5, &qword_269750C48);
  uint64_t v7 = sub_249FE40DC((uint64_t)v5);
  uint64_t v9 = v8;
  sub_249F6E790((uint64_t)v5, &qword_269750C48);
  swift_getKeyPath();
  uint64_t v12 = v1;
  uint64_t v13 = v7;
  uint64_t v14 = v9;
  uint64_t v15 = v1;
  sub_24A056468();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_249F6E790(a1, &qword_269750C48);
}

uint64_t sub_249FE237C@<X0>(uint64_t a1@<X8>)
{
  return sub_249FE2398(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature, &qword_269750C48, a1);
}

uint64_t sub_249FE2398@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_249F6E6C8(v7, a3, a2);
}

uint64_t sub_249FE246C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v8 = v7 + *a2;
  swift_beginAccess();
  return sub_249F6E6C8(v8, a4, a3);
}

uint64_t sub_249FE2544(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_249F6E6C8(a1, (uint64_t)v6, &qword_269750C48);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056468();
  swift_release();
  return sub_249F6E790((uint64_t)v6, &qword_269750C48);
}

uint64_t sub_249FE2684(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a2, (uint64_t)v5, &qword_269750C48);
  return sub_249FE21A8((uint64_t)v5);
}

uint64_t sub_249FE272C()
{
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex);
}

uint64_t sub_249FE27D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex);
  return result;
}

uint64_t sub_249FE2884()
{
  return swift_release();
}

uint64_t sub_249FE2950()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24A056EA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v41[0] = v0;
  uint64_t v6 = sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  sub_24A056478();
  swift_release();
  if (*(unsigned char *)(v0 + 17))
  {
    uint64_t v40 = v6;
    uint64_t v7 = *MEMORY[0x263F1B388];
    uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v8(v5, v7, v2);
    uint64_t v9 = MEMORY[0x24C5B8780](v5, 0.8, 0.0, 0.0, 1.0);
    uint64_t KeyPath = swift_getKeyPath();
    v39[0] = v39;
    MEMORY[0x270FA5388](KeyPath);
    v39[-2] = v0;
    v39[-1] = v9;
    v41[0] = v0;
    v39[1] = MEMORY[0x263F8EE60] + 8;
    sub_24A056468();
    swift_release();
    swift_release();
    v8(v5, v7, v2);
    uint64_t v11 = MEMORY[0x24C5B8780](v5, 0.6, 0.0, 0.0, 1.0);
    uint64_t v12 = swift_getKeyPath();
    MEMORY[0x270FA5388](v12);
    v39[-2] = v0;
    v39[-1] = v11;
    v41[0] = v0;
    sub_24A056468();
    swift_release();
    swift_release();
    uint64_t v13 = swift_getKeyPath();
    MEMORY[0x270FA5388](v13);
    v39[-2] = v0;
    v39[-1] = 0;
    v41[0] = v0;
    sub_24A056468();
    return swift_release();
  }
  uint64_t v14 = sub_24A056F28();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = v39;
  MEMORY[0x270FA5388](v15);
  v39[-2] = v0;
  v39[-1] = v14;
  v41[0] = v0;
  sub_24A056468();
  swift_release();
  swift_release();
  uint64_t v17 = sub_249FDFC78();
  if (v20 != 3)
  {
    sub_249F6CBB8(v17, v18, v19, v20);
    swift_getKeyPath();
    v41[0] = v0;
    sub_24A056478();
    swift_release();
    swift_beginAccess();
    sub_249F77CC4(v0 + 32, (uint64_t)v41);
    id v29 = ClockFaceLook.primaryUIColor.getter();
    sub_249F75BD8((uint64_t)v41);
    uint64_t v30 = MEMORY[0x24C5B8790](v29);
    uint64_t v31 = swift_getKeyPath();
    MEMORY[0x270FA5388](v31);
    v39[-2] = v1;
    v39[-1] = v30;
    v41[0] = v1;
    sub_24A056468();
    swift_release();
    return swift_release();
  }
  sub_249F6CBB8(v17, v18, v19, 3);
  if (qword_26974F298 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  v41[0] = v0;
  uint64_t v40 = v6;
  sub_24A056478();
  swift_release();
  uint64_t v21 = OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex;
  unint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex);
  swift_beginAccess();
  if ((qword_269752330 & 0xC000000000000001) == 0)
  {
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v22 < *(void *)((qword_269752330 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v23 = *(id *)(qword_269752330 + 8 * v22 + 32);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_25;
  }
  id v23 = (id)MEMORY[0x24C5B92B0](v22);
LABEL_10:
  id v24 = v23;
  swift_endAccess();
  uint64_t v25 = MEMORY[0x24C5B8790](v24);
  uint64_t v26 = swift_getKeyPath();
  MEMORY[0x270FA5388](v26);
  v39[-2] = v1;
  v39[-1] = v25;
  v41[0] = v1;
  sub_24A056468();
  swift_release();
  swift_release();
  swift_getKeyPath();
  v41[0] = v1;
  sub_24A056478();
  swift_release();
  uint64_t v16 = *(void **)(v1 + v21);
  unint64_t v22 = qword_269752330;
  if (!((unint64_t)qword_269752330 >> 62))
  {
    uint64_t v27 = *(void *)((qword_269752330 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v28 = (void *)(v27 - 1);
    if (!__OFSUB__(v27, 1)) {
      goto LABEL_12;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_24A057BD8();
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)(v38 - 1);
  if (__OFSUB__(v38, 1)) {
    goto LABEL_27;
  }
LABEL_12:
  if (v16 == v28)
  {
    unint64_t v22 = 0;
  }
  else
  {
    swift_getKeyPath();
    v41[0] = v1;
    sub_24A056478();
    uint64_t result = swift_release();
    uint64_t v33 = *(void *)(v1 + v21);
    unint64_t v22 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      goto LABEL_31;
    }
  }
  uint64_t result = swift_beginAccess();
  if ((qword_269752330 & 0xC000000000000001) != 0)
  {
LABEL_28:
    id v34 = (id)MEMORY[0x24C5B92B0](v22);
    goto LABEL_20;
  }
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v22 < *(void *)((qword_269752330 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v34 = *(id *)(qword_269752330 + 8 * v22 + 32);
LABEL_20:
    id v35 = v34;
    swift_endAccess();
    uint64_t v36 = MEMORY[0x24C5B8790](v35);
    uint64_t v37 = swift_getKeyPath();
    MEMORY[0x270FA5388](v37);
    v39[-2] = v1;
    v39[-1] = v36;
    v41[0] = v1;
    sub_24A056468();
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

CTFontRef sub_249FE3160(double a1)
{
  sub_249FE0944();
  uint64_t v2 = (__CFString *)sub_24A057368();
  swift_bridgeObjectRelease();
  CTFontRef v3 = CTFontCreateWithNameAndOptions(v2, round(a1 / 2.13), 0, 0x20000uLL);

  return v3;
}

void sub_249FE3208()
{
  if (!qword_2697514E0)
  {
    sub_24A056238();
    unint64_t v0 = sub_24A057968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697514E0);
    }
  }
}

void sub_249FE3260()
{
  if (!qword_269750BE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750BE8);
    unint64_t v0 = sub_24A057968();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269750BE0);
    }
  }
}

uint64_t initializeWithCopy for DigitalClockContext(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 == 2)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (*(unsigned char *)(a2 + 96))
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(unsigned char *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for DigitalClockContext(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_249F75BD8(a1);
    int v4 = *((unsigned __int8 *)a2 + 96);
    if (v4 == 2)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      uint64_t v7 = *((void *)a2 + 8);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      *(unsigned char *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v4 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 96) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*((unsigned char *)a2 + 96))
    {
      long long v8 = *a2;
      long long v9 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      long long v10 = a2[3];
      long long v11 = a2[4];
      long long v12 = a2[5];
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      uint64_t v5 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v5 - 8))(a1, a2);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(unsigned char *)(a1 + 96) = 0;
      swift_bridgeObjectRetain();
    }
  }
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for DigitalClockContext(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_249F75BD8(a1);
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalClockContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalClockContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalClockContext()
{
  return &type metadata for DigitalClockContext;
}

unint64_t sub_249FE374C(uint64_t a1)
{
  unint64_t result = sub_249FE3774();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249FE3774()
{
  unint64_t result = qword_269750BF0;
  if (!qword_269750BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750BF0);
  }
  return result;
}

unint64_t sub_249FE37C8(void *a1)
{
  a1[1] = sub_249FE3808();
  a1[2] = sub_249FE385C();
  a1[3] = sub_249FE38B0();
  unint64_t result = sub_249FE3904();
  a1[4] = result;
  return result;
}

unint64_t sub_249FE3808()
{
  unint64_t result = qword_269750BF8;
  if (!qword_269750BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750BF8);
  }
  return result;
}

unint64_t sub_249FE385C()
{
  unint64_t result = qword_269750C00;
  if (!qword_269750C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750C00);
  }
  return result;
}

unint64_t sub_249FE38B0()
{
  unint64_t result = qword_269750C08;
  if (!qword_269750C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750C08);
  }
  return result;
}

unint64_t sub_249FE3904()
{
  unint64_t result = qword_269750C10;
  if (!qword_269750C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750C10);
  }
  return result;
}

uint64_t sub_249FE3958()
{
  return swift_release();
}

uint64_t sub_249FE3A28()
{
  return swift_release();
}

void (*sub_249FE3AF8(void *a1))(void *a1)
{
  long long v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_249FDC344(v2);
  return sub_249F6FBD0;
}

uint64_t sub_249FE3B54(uint64_t a1)
{
  uint64_t result = sub_249FE43C4(&qword_26974FA58, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FE3BAC(uint64_t a1)
{
  uint64_t result = sub_249FE43C4(&qword_269750C18, (void (*)(uint64_t))type metadata accessor for DigitalClockViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_249FE3C0C()
{
  return sub_249FE3C24();
}

uint64_t sub_249FE3C24()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
  return sub_249FE2950();
}

uint64_t sub_249FE3C64()
{
  return sub_249FE3C7C();
}

uint64_t sub_249FE3C7C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = v2;
  return result;
}

unint64_t sub_249FE3CD0()
{
  unint64_t result = qword_269750C28;
  if (!qword_269750C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750C28);
  }
  return result;
}

uint64_t sub_249FE3D2C()
{
  return sub_249FE3F6C();
}

uint64_t sub_249FE3D54()
{
  return sub_249FE1714(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FE3D80()
{
  return sub_249FE3D98();
}

uint64_t sub_249FE3D98()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_249FE3DDC()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex) = *(void *)(v0 + 24);
  return sub_249FE2950();
}

uint64_t sub_249FE3E20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE0C48(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, a2);
}

uint64_t sub_249FE3E4C()
{
  return sub_249FE0ED0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText);
}

uint64_t sub_249FE3E7C()
{
  return 8;
}

uint64_t sub_249FE3E88()
{
  return swift_release();
}

uint64_t sub_249FE3E90(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_249FE3EA4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_249FE3EB0()
{
}

void sub_249FE3ED0()
{
}

uint64_t sub_249FE3EF8()
{
  return 8;
}

uint64_t sub_249FE3F08()
{
  return sub_24A057328();
}

uint64_t sub_249FE3F50()
{
  return sub_249FE2064(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FE3F6C()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_249FE3FB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE246C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature, &qword_269750C48, a2);
}

uint64_t sub_249FE3FE4()
{
  return sub_249FE2684(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FE4000(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1802465132 && a2 == 0xE400000000000000;
  if (v2 || (sub_24A057D48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24A057D48();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249FE40DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  MEMORY[0x270FA5388](v2 - 8);
  int v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750BE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a1, (uint64_t)v4, &qword_269750C48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_249F6E790((uint64_t)v4, &qword_269750C48);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08988]), sel_init);
    objc_msgSend(v10, sel_setUnitStyle_, 1);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    objc_msgSend(v11, sel_setNumberStyle_, 1);
    objc_msgSend(v11, sel_setMaximumFractionDigits_, 0);
    objc_msgSend(v10, sel_setNumberFormatter_, v11);
    sub_249FE4374();
    uint64_t v9 = sub_24A0578D8();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_249FE431C()
{
  return sub_249FE4334();
}

uint64_t sub_249FE4334()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 144) = v0[3];
  *(void *)(v1 + 152) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_249FE4374()
{
  unint64_t result = qword_269750C50;
  if (!qword_269750C50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_269750C50);
  }
  return result;
}

uint64_t sub_249FE43C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249FE440C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FE4470()
{
  *(void *)(*(void *)(v0 + 16) + 24) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_249FE44AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE246C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_2697515A0, a2);
}

uint64_t sub_249FE44E0()
{
  return sub_249FE0858(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_249FE44FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249FE0C48(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, a2);
}

uint64_t sub_249FE4528()
{
  return sub_249FE0ED0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText);
}

uint64_t sub_249FE454C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249FE4584()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_249F9C6C0;
  return MEMORY[0x270FA2498](sub_249FDF33C, 0, 0);
}

uint64_t sub_249FE4628()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249FE4664(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F9C6C0;
  return sub_249FDD5FC(a1, v4, v5, v6);
}

uint64_t sub_249FE471C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F6C87C;
  return sub_249FDDDFC(a1, v4, v5, v6);
}

uint64_t sub_249FE47D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_249F9C6C0;
  return sub_249FDE5A0(a1, v4, v5, v6);
}

uint64_t sub_249FE4888()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_249F9C6C0;
  return MEMORY[0x270FA2498](sub_249FDEFBC, 0, 0);
}

uint64_t sub_249FE492C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249FE498C(long long *a1, uint64_t a2)
{
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DigitalClockContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FE4A90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalClockContext.CodingKeys()
{
  return &type metadata for DigitalClockContext.CodingKeys;
}

unint64_t sub_249FE4ACC()
{
  unint64_t result = qword_269750CC0;
  if (!qword_269750CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750CC0);
  }
  return result;
}

unint64_t sub_249FE4B24()
{
  unint64_t result = qword_269750CC8;
  if (!qword_269750CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750CC8);
  }
  return result;
}

unint64_t sub_249FE4B7C()
{
  unint64_t result = qword_269750CD0;
  if (!qword_269750CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750CD0);
  }
  return result;
}

uint64_t sub_249FE4BE0()
{
  return sub_249FE3D54();
}

uint64_t sub_249FE4BF8()
{
  return sub_249FE3E4C();
}

uint64_t sub_249FE4C10()
{
  return sub_249FE4528();
}

uint64_t sub_249FE4C28()
{
  return sub_249FE44E0();
}

uint64_t sub_249FE4C40()
{
  return sub_249FE3FE4();
}

uint64_t sub_249FE4C58()
{
  return sub_249FE3F50();
}

uint64_t destroy for SolarClockFace()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SolarClockFace(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SolarClockFace(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SolarClockFace(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarClockFace(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarClockFace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarClockFace()
{
  return &type metadata for SolarClockFace;
}

uint64_t sub_249FE4E7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FE4E98@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_249FE77A0(&qword_26974FAB8, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  sub_24A056478();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_249FE4F44()
{
  return swift_release();
}

uint64_t sub_249FE5024@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v67 = a3;
  int v6 = a1 & 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CF0);
  MEMORY[0x270FA5388](v7 - 8);
  CGRect v68 = &v58[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v66 = &v58[-v10];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CF8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (uint64_t *)&v58[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D00);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v58[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D08);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = &v58[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v22);
  id v24 = &v58[-v23];
  *uint64_t v13 = sub_24A0571A8();
  v13[1] = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D10);
  sub_249FE56AC(v6, a2, (char *)v13 + *(int *)(v26 + 44), a4);
  double v69 = a4;
  uint64_t v63 = a2;
  uint64_t v70 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750D18);
  sub_24A057018();
  double v27 = 1.0 / v82;
  sub_24A057268();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_249F6E6C8((uint64_t)v13, (uint64_t)v17, &qword_269750CF8);
  uint64_t v32 = (double *)&v17[*(int *)(v15 + 44)];
  double *v32 = v27;
  v32[1] = v27;
  *((void *)v32 + 2) = v29;
  *((void *)v32 + 3) = v31;
  sub_249F6E790((uint64_t)v13, &qword_269750CF8);
  uint64_t v33 = sub_24A0567F8();
  LOBYTE(v13) = sub_24A056C88();
  sub_249F6E6C8((uint64_t)v17, (uint64_t)v21, &qword_269750D00);
  id v34 = &v21[*(int *)(v19 + 44)];
  *(void *)id v34 = v33;
  v34[8] = (_BYTE)v13;
  sub_249F6E790((uint64_t)v17, &qword_269750D00);
  uint64_t v65 = v24;
  sub_249F6E664((uint64_t)v21, (uint64_t)v24, &qword_269750D08);
  uint64_t v35 = swift_retain();
  int v64 = v6;
  *(double *)&uint64_t v36 = COERCE_DOUBLE(sub_24A030004(v35, v6));
  swift_release();
  swift_getKeyPath();
  double v69 = *(double *)&v36;
  uint64_t v37 = sub_249FE77A0(&qword_26974FAB8, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v38 = (unsigned __int8 *)(v36 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  swift_beginAccess();
  LODWORD(v38) = *v38;
  swift_release();
  if (v38 == 1)
  {
    double v80 = a4;
    uint64_t v81 = v63;
    sub_24A057038();
    double v39 = v69;
    double v61 = v69;
    uint64_t v63 = v70;
    double v40 = v71;
    type metadata accessor for SolarViewModel();
    *(double *)&uint64_t v41 = COERCE_DOUBLE(sub_24A056698());
    int v59 = v42;
    double v80 = 1.0;
    sub_24A057008();
    double v43 = v69;
    uint64_t v44 = v70;
    uint64_t v60 = v70;
    LOBYTE(v80) = 1;
    sub_24A057008();
    char v45 = LOBYTE(v69);
    uint64_t v62 = v37;
    uint64_t v46 = v70;
    LOBYTE(v80) = 1;
    sub_24A057008();
    char v47 = LOBYTE(v69);
    uint64_t v48 = v70;
    double v69 = *(double *)&v41;
    LOBYTE(v70) = v59 & 1;
    double v71 = v39;
    uint64_t v72 = v63;
    double v73 = v40;
    double v74 = v43;
    uint64_t v75 = v44;
    char v76 = v45;
    uint64_t v77 = v46;
    char v78 = v47;
    uint64_t v79 = v48;
    uint64_t v49 = swift_retain();
    sub_24A030004(v49, v64);
    swift_release();
    sub_249FE6C38();
    uint64_t v50 = (uint64_t)v66;
    sub_24A056DF8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D20);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
  }
  else
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D20);
    uint64_t v50 = (uint64_t)v66;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v66, 1, 1, v52);
  }
  uint64_t v53 = (uint64_t)v65;
  sub_249F6E6C8((uint64_t)v65, (uint64_t)v21, &qword_269750D08);
  uint64_t v54 = v68;
  sub_249F6E6C8(v50, (uint64_t)v68, &qword_269750CF0);
  uint64_t v55 = v67;
  sub_249F6E6C8((uint64_t)v21, v67, &qword_269750D08);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D28);
  sub_249F6E6C8((uint64_t)v54, v55 + *(int *)(v56 + 48), &qword_269750CF0);
  sub_249F6E790(v50, &qword_269750CF0);
  sub_249F6E790(v53, &qword_269750D08);
  sub_249F6E790((uint64_t)v54, &qword_269750CF0);
  return sub_249F6E790((uint64_t)v21, &qword_269750D08);
}

uint64_t sub_249FE56AC@<X0>(char a1@<W1>, uint64_t a2@<X2>, char *a3@<X8>, double a4@<D0>)
{
  double v61 = a3;
  int v6 = a1 & 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D38);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v69 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v53 - v10);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D40);
  uint64_t v60 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v67 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v53 - v14;
  type metadata accessor for SolarViewModel();
  sub_249FE77A0(&qword_26974FAB8, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  uint64_t v16 = sub_24A056698();
  double v72 = 0.0333333333;
  uint64_t v73 = v16;
  LOBYTE(v74) = v17 & 1;
  uint64_t v18 = swift_retain();
  int v19 = v6;
  sub_24A030004(v18, v6);
  swift_release();
  sub_249FE6C8C();
  CGRect v68 = v15;
  sub_24A056DF8();
  swift_release();
  swift_release();
  double v72 = a4;
  uint64_t v73 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750D18);
  sub_24A057018();
  double v20 = 0.0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  if (1.0 / v71 != 1.0)
  {
    uint64_t v26 = sub_24A056ED8();
    sub_24A0566A8();
    double v30 = v72;
    uint64_t v22 = v73;
    uint64_t v23 = v74;
    uint64_t v24 = v75;
    uint64_t v25 = v76;
    uint64_t v28 = sub_24A0571A8();
    double v20 = v30 * 0.5;
    uint64_t v21 = *(void *)&v30;
    uint64_t v27 = 256;
  }
  uint64_t v62 = v26;
  uint64_t v63 = v24;
  uint64_t v64 = v21;
  uint64_t v65 = *(void *)&v20;
  uint64_t v66 = v27;
  uint64_t v58 = v29;
  uint64_t v59 = v28;
  *uint64_t v11 = sub_24A0571A8();
  v11[1] = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D50);
  sub_249FE5B84(v19 != 0, a2, (uint64_t)v11 + *(int *)(v32 + 44));
  uint64_t v33 = v60;
  long long v57 = v11;
  id v34 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v35 = v67;
  uint64_t v54 = v22;
  uint64_t v55 = v25;
  uint64_t v36 = v70;
  v34(v67, v68, v70);
  uint64_t v56 = v23;
  sub_249F6E6C8((uint64_t)v11, v69, &qword_269750D38);
  uint64_t v37 = v61;
  v34(v61, v35, v36);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D58);
  double v39 = &v37[*(int *)(v38 + 48)];
  uint64_t v40 = v64;
  uint64_t v41 = v65;
  *(void *)double v39 = v65;
  *((void *)v39 + 1) = v40;
  *((void *)v39 + 2) = v22;
  *((void *)v39 + 3) = v23;
  uint64_t v42 = v63;
  *((void *)v39 + 4) = v63;
  *((void *)v39 + 5) = v25;
  uint64_t v43 = v66;
  *((void *)v39 + 6) = v62;
  *((void *)v39 + 7) = v43;
  uint64_t v44 = v58;
  *((void *)v39 + 8) = v59;
  *((void *)v39 + 9) = v44;
  uint64_t v45 = v69;
  sub_249F6E6C8(v69, (uint64_t)&v37[*(int *)(v38 + 64)], &qword_269750D38);
  uint64_t v46 = v41;
  uint64_t v47 = v40;
  uint64_t v48 = v54;
  uint64_t v49 = v56;
  sub_249FE6CE0(v46, v47, v54, v56, v42);
  sub_249F6E790((uint64_t)v57, &qword_269750D38);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v51 = v70;
  v50(v68, v70);
  sub_249F6E790(v45, &qword_269750D38);
  sub_249FE6D24(v65, v64, v48, v49, v63);
  return ((uint64_t (*)(char *, uint64_t))v50)(v67, v51);
}

uint64_t sub_249FE5B84@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v28 = a3;
  int v3 = a1 & 1;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D60);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056EA8();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D68);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750D70);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_24A030004(v17, v3);
  swift_release();
  swift_getKeyPath();
  uint64_t v29 = v18;
  sub_249FE77A0(&qword_26974FAB8, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  sub_24A056478();
  swift_release();
  int v19 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode);
  swift_release();
  if (v19 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v7, *MEMORY[0x263F1B388], v24);
    uint64_t v20 = MEMORY[0x24C5B8780](v7, 0.8, 0.0, 0.0, 1.0);
    sub_249FE5FB0(v20, 0, 0, 0, v3 != 0, (uint64_t)v10);
    swift_release();
    sub_249F6E6C8((uint64_t)v10, (uint64_t)v13, &qword_269750D68);
    *(void *)&v13[*(int *)(v11 + 36)] = 0x3FF0000000000000;
  }
  else
  {
    sub_249FE5FB0(2, 0, 0, 4, v3 != 0, (uint64_t)v10);
    sub_249F6E6C8((uint64_t)v10, (uint64_t)v13, &qword_269750D68);
    *(void *)&v13[*(int *)(v11 + 36)] = 0;
  }
  sub_249F6E790((uint64_t)v10, &qword_269750D68);
  sub_249F6E664((uint64_t)v13, (uint64_t)v16, &qword_269750D70);
  sub_249F6E6C8((uint64_t)v16, v27, &qword_269750D70);
  swift_storeEnumTagMultiPayload();
  sub_249FE6D70();
  sub_24A056BE8();
  return sub_249F6E790((uint64_t)v16, &qword_269750D70);
}

uint64_t sub_249FE5FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v38 = a6;
  int v34 = a5 & 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FC28);
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (__CFString *)sub_24A057368();
  CTFontRef v13 = CTFontCreateWithNameAndOptions(v12, 210.0, 0, 0x20000uLL);

  type metadata accessor for RollingClockViewModel();
  sub_249F6CAA4(a1, a2, a3, a4);
  v33[1] = sub_249FE77A0(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
  uint64_t v14 = sub_24A056698();
  char v16 = v15;
  sub_249F6CAA4(a1, a2, a3, a4);
  uint64_t v17 = v13;
  id v18 = sub_249F7093C();
  sub_249F6CBB8(a1, a2, a3, a4);
  uint64_t v40 = v14;
  char v41 = v16 & 1;
  id v42 = v18;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  char v46 = a4;
  uint64_t v47 = v17;
  uint64_t v48 = v17;
  __int16 v49 = 640;
  uint64_t v19 = swift_retain();
  uint64_t v20 = sub_24A030004(v19, v34);
  swift_release();
  swift_getKeyPath();
  uint64_t v39 = v20;
  sub_249FE77A0(&qword_26974FAB8, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  sub_24A056478();
  swift_release();
  swift_retain();
  swift_release();
  sub_249F82128();
  uint64_t v21 = v35;
  sub_24A056DF8();
  swift_release();
  uint64_t v22 = v43;
  uint64_t v23 = v44;
  uint64_t v24 = v45;
  uint64_t v26 = v47;
  uint64_t v25 = v48;
  char v27 = v46;

  swift_release();
  sub_249F6CBB8(v22, v23, v24, v27);

  sub_24A056718();
  sub_24A0571E8();
  uint64_t v28 = sub_24A056728();
  swift_release();
  swift_release();
  uint64_t v30 = v36;
  uint64_t v29 = v37;
  uint64_t v31 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v38, v21, v37);
  *(void *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269750D68) + 36)) = v28;
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v29);
}

uint64_t sub_249FE6344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CD8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v6 = *(unsigned char *)(v1 + 8);
  double v7 = *(double *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  *uint64_t v5 = sub_24A0571A8();
  v5[1] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CE0);
  sub_249FE5024(v6, v8, (uint64_t)v5 + *(int *)(v10 + 44), v7);
  uint64_t v11 = sub_24A056EF8();
  char v12 = sub_24A056C88();
  sub_249F6E6C8((uint64_t)v5, a1, &qword_269750CD8);
  uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269750CE8) + 36);
  *(void *)uint64_t v13 = v11;
  *(unsigned char *)(v13 + 8) = v12;
  return sub_249F6E790((uint64_t)v5, &qword_269750CD8);
}

unint64_t sub_249FE6458(uint64_t a1)
{
  unint64_t result = sub_249F7B1C4();
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_249FE6480(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v51 = a1;
  uint64_t v49 = a4;
  int v7 = a3 & 1;
  uint64_t v55 = sub_24A056238();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750E28);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750DD8);
  MEMORY[0x270FA5388](v53);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750DB8);
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_24A030004(v17, v7);
  swift_release();
  swift_getKeyPath();
  uint64_t v56 = v18;
  uint64_t v52 = sub_249FE77A0(&qword_26974FAB8, (void (*)(uint64_t))type metadata accessor for SolarViewModel);
  sub_24A056478();
  swift_release();
  uint64_t v19 = v18 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  sub_249F6E6C8(v19, (uint64_t)&v56, &qword_269750A78);
  swift_release();
  if (!v59)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v50 = v10;
  uint64_t v20 = v63;
  uint64_t v21 = v64;
  __swift_project_boxed_opaque_existential_1(&v61, v63);
  uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.4, 0.0, 0.0, 1.0);
  id v24 = (id)CLKUIInterpolateBetweenColors();

  if (!v24)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_249FD598C((uint64_t)&v56);
  uint64_t v25 = MEMORY[0x24C5B8790](v24);
  sub_24A0571A8();
  sub_24A0566D8();
  uint64_t v56 = v25;
  __int16 v57 = 256;
  uint64_t v58 = v65;
  LOBYTE(v59) = v66;
  uint64_t v60 = v67;
  LOBYTE(v61) = v68;
  long long v62 = v69;
  uint64_t v63 = 0x4069000000000000;
  LOBYTE(v64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750E18);
  sub_24A0566B8();
  uint64_t v26 = swift_allocObject();
  *(double *)(v26 + 16) = a5;
  *(void *)(v26 + 24) = a2;
  *(unsigned char *)(v26 + 32) = v7 != 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750DE0);
  sub_249FE7684();
  sub_249FE77A0(&qword_26974FC20, MEMORY[0x263F07490]);
  uint64_t v27 = v55;
  sub_24A056E58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v27);
  swift_release();
  uint64_t v28 = swift_retain();
  sub_24A030004(v28, v7);
  swift_release();
  double v29 = sub_249FD324C();
  uint64_t v31 = v30;
  swift_release();
  uint64_t v32 = v50;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v50);
  uint64_t v33 = (double *)&v15[*(int *)(v53 + 36)];
  *uint64_t v33 = v29;
  *((void *)v33 + 1) = v31;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  uint64_t v34 = swift_retain();
  uint64_t v35 = sub_24A030004(v34, v7);
  swift_release();
  swift_getKeyPath();
  uint64_t v56 = v35;
  sub_24A056478();
  swift_release();
  uint64_t v36 = v35 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  sub_249F6E6C8(v36, (uint64_t)&v56, &qword_269750A78);
  swift_release();
  uint64_t v37 = v59;
  if (!v59)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v38 = v60;
  __swift_project_boxed_opaque_existential_1(&v56, v59);
  uint64_t v39 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
  id v40 = objc_msgSend(self, sel_blackColor);
  id v41 = (id)CLKUIInterpolateBetweenColors();

  if (v41)
  {
    sub_249FD598C((uint64_t)&v56);
    uint64_t v42 = MEMORY[0x24C5B8790](v41);
    char v43 = sub_24A056C88();
    uint64_t v44 = v47;
    sub_249F6E6C8((uint64_t)v15, v47, &qword_269750DD8);
    uint64_t v45 = v44 + *(int *)(v48 + 36);
    *(void *)uint64_t v45 = v42;
    *(unsigned char *)(v45 + 8) = v43;
    sub_249F6E790((uint64_t)v15, &qword_269750DD8);
    sub_249F6E664(v44, v49, &qword_269750DB8);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_249FE6BB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = a4 & 1;
  sub_24A056178();
  double v6 = v5;
  uint64_t v7 = swift_retain();
  sub_24A030004(v7, v4);
  swift_release();
  sub_249FD38BC(v6);

  return swift_release();
}

unint64_t sub_249FE6C38()
{
  unint64_t result = qword_269750D30;
  if (!qword_269750D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750D30);
  }
  return result;
}

unint64_t sub_249FE6C8C()
{
  unint64_t result = qword_269750D48;
  if (!qword_269750D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750D48);
  }
  return result;
}

uint64_t sub_249FE6CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_249FE6D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_249FE6D70()
{
  unint64_t result = qword_269750D78;
  if (!qword_269750D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750D70);
    sub_249FE6E10();
    sub_249F6EE60(&qword_269750D98, &qword_269750DA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750D78);
  }
  return result;
}

unint64_t sub_249FE6E10()
{
  unint64_t result = qword_269750D80;
  if (!qword_269750D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750D68);
    type metadata accessor for RollingClockViewModel();
    sub_249F82128();
    sub_249FE77A0(&qword_26974F448, (void (*)(uint64_t))type metadata accessor for RollingClockViewModel);
    swift_getOpaqueTypeConformance2();
    sub_249F6EE60(&qword_269750D88, &qword_269750D90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750D80);
  }
  return result;
}

uint64_t sub_249FE6F34()
{
  return sub_249FD16E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t destroy for SolarBackground()
{
  return swift_release();
}

uint64_t _s11ClockPoster15SolarBackgroundVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SolarBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SolarBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SolarBackground()
{
  return &type metadata for SolarBackground;
}

unint64_t sub_249FE7038()
{
  unint64_t result = qword_269750DA8;
  if (!qword_269750DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750CE8);
    sub_249F6EE60(&qword_269750DB0, &qword_269750CD8);
    sub_249F6EE60(&qword_26974FC10, &qword_26974FC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750DA8);
  }
  return result;
}

uint64_t sub_249FE70FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249FE7118()
{
  uint64_t v1 = sub_24A056C28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  char v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = *v0;
  uint64_t v9 = v0[1];
  char v10 = *((unsigned char *)v0 + 16);
  sub_24A056C18();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v9;
  *(unsigned char *)(v11 + 32) = v10;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_249FE735C;
  *(void *)(v12 + 24) = v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269750DB8);
  sub_249FE77A0(&qword_269750DC0, MEMORY[0x263F1A1B0]);
  sub_249FE74E4();
  sub_24A0566C8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
}

uint64_t sub_249FE7324()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 33, 7);
}

void sub_249FE735C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_249FE6480(a1, *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), a2, *(double *)(v2 + 16));
}

uint64_t sub_249FE736C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750E18);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750E20);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t result = v7 - 8;
  if (*(void *)(v9 + 64) == v6)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    a2((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249FE74A4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249FE74DC(uint64_t a1)
{
  return sub_249FE736C(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_249FE74E4()
{
  unint64_t result = qword_269750DC8;
  if (!qword_269750DC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750DB8);
    sub_249FE7584();
    sub_249F6EE60(&qword_26974FC10, &qword_26974FC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750DC8);
  }
  return result;
}

unint64_t sub_249FE7584()
{
  unint64_t result = qword_269750DD0;
  if (!qword_269750DD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750DD8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750DE0);
    sub_24A056238();
    sub_249FE7684();
    sub_249FE77A0(&qword_26974FC20, MEMORY[0x263F07490]);
    swift_getOpaqueTypeConformance2();
    sub_249FE77E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750DD0);
  }
  return result;
}

unint64_t sub_249FE7684()
{
  unint64_t result = qword_269750DE8;
  if (!qword_269750DE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750DE0);
    sub_249FE7700();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750DE8);
  }
  return result;
}

unint64_t sub_249FE7700()
{
  unint64_t result = qword_269750DF0;
  if (!qword_269750DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750DF8);
    sub_249F6EE60(&qword_269750E00, &qword_269750E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750DF0);
  }
  return result;
}

uint64_t sub_249FE77A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249FE77E8()
{
  unint64_t result = qword_269750E10;
  if (!qword_269750E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750E10);
  }
  return result;
}

uint64_t sub_249FE7844(uint64_t a1, uint64_t a2)
{
  return sub_249FE6BB8(a1, a2, *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

unint64_t sub_249FE7858()
{
  unint64_t result = qword_269750E30;
  if (!qword_269750E30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269750E38);
    sub_249FE74E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750E30);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ColorCurveElement(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ColorCurveElement(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

void *assignWithCopy for ColorCurveElement(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ColorCurveElement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ColorCurveElement(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorCurveElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorCurveElement()
{
  return &type metadata for ColorCurveElement;
}

ValueMetadata *type metadata accessor for ColorCurve()
{
  return &type metadata for ColorCurve;
}

uint64_t sub_249FE7AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750E50);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SolarPosition(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, a3, v15);
  int v18 = swift_dynamicCast();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v19(v8, 0, 1, v13);
    sub_249FE8310((uint64_t)v8, (uint64_t)v17);
    uint64_t v22 = a2;
    swift_bridgeObjectRetain_n();
    sub_249FEE188(&v22);
    swift_bridgeObjectRelease();
    a2 = v22;
    sub_249FE8374((uint64_t)v17);
  }
  else
  {
    v19(v8, 1, 1, v13);
    sub_249FE82B0((uint64_t)v8);
    swift_bridgeObjectRetain();
  }
  return a2;
}

id sub_249FE7D18(uint64_t a1, float a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    if (v2 == 1)
    {
      uint64_t v3 = *(void **)(a1 + 40);
      return v3;
    }
    else
    {
      double v6 = a2;
      sub_249FE7E2C(a1, (uint64_t)&v12, a2);
      uint64_t v7 = v13;
      uint64_t v8 = v14;
      uint64_t v9 = v16;
      uint64_t v10 = v17;
      id v11 = sub_249FE83D0(v13, v16, v17, v6, v12, v15);

      return v11;
    }
  }
  else
  {
    id v5 = objc_msgSend(self, sel_blackColor);
    return v5;
  }
}

void sub_249FE7E2C(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = v3 - 1;
  if (v3 == 1)
  {
LABEL_15:
    __break(1u);
    return;
  }
  double v6 = *(double *)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 48);
  uint64_t v8 = (void **)(a1 + 72);
  uint64_t v9 = *(void **)(a1 + 72);
  double v10 = *(double *)(a1 + 56);
  id v11 = *(void **)(a1 + 64);
  id v12 = *(id *)(a1 + 40);
  id v13 = v7;
  id v14 = v11;
  id v15 = v9;
  double v16 = v6;
  uint64_t v39 = v13;
  id v40 = v12;
  uint64_t v17 = v12;
  while (1)
  {
    double v27 = *((double *)v8 - 5);
    uint64_t v28 = *(v8 - 4);
    double v29 = *(v8 - 3);
    double v30 = *((double *)v8 - 2);
    uint64_t v32 = *(v8 - 1);
    uint64_t v31 = *v8;
    if (v27 <= a3 && v30 >= a3) {
      break;
    }
    if (v4 == 1)
    {
      id v18 = v28;
      id v19 = v29;
      uint64_t v20 = v17;
      id v21 = v19;
      id v22 = v32;
      id v23 = v31;
      id v24 = v13;
      id v13 = v23;

      id v25 = v40;
      id v26 = v39;

      uint64_t v17 = v22;
      double v10 = v6;
      id v14 = v25;
      id v15 = v26;
      double v16 = v30;
    }
    else
    {
      double v30 = v16;
    }
    v8 += 3;
    double v27 = v30;
    if (!--v4) {
      goto LABEL_13;
    }
  }
  id v34 = v28;
  id v35 = v29;
  id v36 = v32;
  id v37 = v31;

  uint64_t v17 = v34;
  id v13 = v35;
  double v10 = v30;
  id v14 = v36;
  id v15 = v37;
LABEL_13:
  *(double *)a2 = v27;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v13;
  *(double *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v15;
}

uint64_t sub_249FE7FF0(uint64_t a1, float a2)
{
  sub_24A057A78();
  sub_24A057438();
  sub_24A0576F8();
  sub_24A057438();
  id v4 = sub_249FE7D18(a1, a2);
  id v5 = objc_msgSend(v4, sel_description);
  sub_24A0573A8();

  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return 0;
}

id sub_249FE8100()
{
  return sub_249FE7D18(*(void *)(v0 + 8), *(float *)v0);
}

uint64_t sub_249FE810C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_249FE7AAC(a1, *(void *)(v3 + 8), a2);
  *(_DWORD *)a3 = v6;
  *(void *)(a3 + 8) = result;
  return result;
}

uint64_t sub_249FE8144()
{
  return sub_249FE7FF0(*(void *)(v0 + 8), *(float *)v0);
}

uint64_t sub_249FE8150(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  float v4 = *(float *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  sub_249F8A378();
  id v6 = sub_249FE7D18(v3, v2);
  id v7 = sub_249FE7D18(v5, v4);
  LOBYTE(v5) = sub_24A057938();

  return v5 & 1;
}

unint64_t sub_249FE81D8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_249FE8208();
  unint64_t result = sub_249FE825C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_249FE8208()
{
  unint64_t result = qword_269750E40;
  if (!qword_269750E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750E40);
  }
  return result;
}

unint64_t sub_249FE825C()
{
  unint64_t result = qword_269750E48;
  if (!qword_269750E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750E48);
  }
  return result;
}

uint64_t sub_249FE82B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750E50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249FE8310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SolarPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249FE8374(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SolarPosition(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_249FE83D0(void *a1, void *a2, void *a3, double a4, double a5, double a6)
{
  double v7 = 1.0 - a5;
  BOOL v8 = a6 > a5;
  if (a6 > a5) {
    double v7 = -a5;
  }
  double v9 = v7 + a6;
  if (v8) {
    double v10 = a2;
  }
  else {
    double v10 = a1;
  }
  if (v8) {
    id v11 = a1;
  }
  else {
    id v11 = a2;
  }
  float v12 = (a4 - a5) / v9;
  id v13 = v11;
  id v14 = v10;
  *(float *)&double v15 = v12;
  objc_msgSend(a3, sel__solveForInput_, v15);
  double v17 = CGFloatMin(v16);
  CGFloatMax(v17);
  id result = (id)CLKUIInterpolateBetweenColors();
  if (result)
  {
    id v19 = result;

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double CGFloatMin(double a1)
{
  return fmin(a1, 1.0);
}

double CGFloatMax(double a1)
{
  return fmax(a1, 0.0);
}

void sub_249FE85E0()
{
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for DigitalClockFaceComplicationsView();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  sub_249FE88FC();
  uint64_t v1 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel;
  if (!*(void *)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel])
  {
    if (qword_26974F288 != -1) {
      swift_once();
    }
    id v2 = sub_24A019AA8(*(double *)&qword_269752320);
    id v3 = objc_msgSend(self, sel_whiteColor);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    id v5 = objc_allocWithZone(MEMORY[0x263F825C8]);
    void v22[4] = sub_249FE99E4;
    v22[5] = v4;
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 1107296256;
    v22[2] = sub_249FDA198;
    v22[3] = &block_descriptor_37;
    id v6 = _Block_copy(v22);
    id v7 = v3;
    id v8 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
    _Block_release(v6);

    swift_release();
    objc_msgSend(v2, sel_setTextColor_, v8);

    objc_msgSend(v0, sel_addSubview_, v2);
    double v9 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v2;
    id v10 = v2;

    sub_249FE8F5C();
  }
  if (qword_26974F290 != -1) {
    swift_once();
  }
  double v11 = *(double *)&qword_269752328;
  objc_msgSend(v0, sel_frame);
  CGRectGetWidth(v24);
  double v12 = CGRectMake();
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  id v18 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_dateLabel];
  if (v18) {
    objc_msgSend(v18, sel_setFrame_, v12);
  }
  id v19 = *(void **)&v0[v1];
  if (v19) {
    objc_msgSend(v19, sel_setFrame_, v13, v11, v15, v17);
  }
  uint64_t v20 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_alarmComplication];
  if (v20)
  {
    id v21 = v20;
    objc_msgSend(v0, sel_frame);
    objc_msgSend(v21, sel_setFrame_, v13, CGRectGetHeight(v25) - (v11 + v11), v15);
  }
}

void sub_249FE88FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24A056238();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 104;
  uint64_t v6 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_dateLabel;
  if (!*(void *)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_dateLabel])
  {
    id v30 = sub_249FE9238();
    if (qword_26974F328 != -1) {
      swift_once();
    }
    sub_24A006BDC((uint64_t)v5);
    id v7 = (void *)sub_24A056198();
    id v8 = self;
    id v9 = objc_msgSend(v8, sel_textProviderWithDate_units_, v7, 512);

    id v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    objc_msgSend(v9, sel_setShortUnits_, 1);
    objc_msgSend(v9, sel_setTintColor_, v30);
    sub_24A006BDC((uint64_t)v5);
    double v11 = (void *)sub_24A056198();
    id v12 = objc_msgSend(v8, sel_textProviderWithDate_units_, v11, 16);

    v10(v5, v2);
    double v13 = self;
    id v14 = v12;
    id v15 = objc_msgSend(v13, sel_whiteColor);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    id v17 = objc_allocWithZone(MEMORY[0x263F825C8]);
    aBlock[4] = sub_249FE99E4;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_249FDA198;
    aBlock[3] = &block_descriptor_30;
    id v18 = _Block_copy(aBlock);
    id v19 = v15;
    id v20 = objc_msgSend(v17, sel_initWithDynamicProvider_, v18);
    _Block_release(v18);

    swift_release();
    objc_msgSend(v14, sel_setTintColor_, v20);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697520A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A0593D0;
    uint64_t v22 = sub_249FCFCA0(0, &qword_269750E90);
    *(void *)(inited + 56) = v22;
    unint64_t v23 = sub_249FE9968();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 96) = v22;
    *(void *)(inited + 104) = v23;
    *(void *)(inited + 64) = v23;
    *(void *)(inited + 72) = v14;
    id v24 = v14;
    id v25 = v9;
    id v26 = sub_249FE8D44(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269750EA0);
    swift_arrayDestroy();
    if (qword_26974F288 != -1) {
      swift_once();
    }
    id v27 = sub_24A019AA8(*(double *)&qword_269752320);
    objc_msgSend(v27, sel_setUsesTextProviderTintColoring_, 1);
    objc_msgSend(v27, sel_setTextProvider_, v26);
    uint64_t v28 = v30;
    objc_msgSend(v27, sel_setTintColor_, v30);
    objc_msgSend(v1, sel_addSubview_, v27);
    double v29 = *(void **)&v1[v6];
    *(void *)&v1[v6] = v27;
  }
}

char *sub_249FE8D44(uint64_t a1)
{
  sub_24A057B98();
  uint64_t v2 = (void *)swift_allocObject();
  void v2[2] = 8;
  v2[3] = 0;
  uint64_t v3 = v2 + 3;
  v2[4] = 0;
  v2[5] = 0;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_25:
    uint64_t v20 = sub_24A057B88();
    id v21 = (void *)sub_24A057368();
    id v22 = objc_msgSend(self, sel_textProviderWithFormat_arguments_, v21, v20);
    swift_release();

    return (char *)v22;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a1 + 32;
  while (1)
  {
    sub_249F7B37C(v6 + 40 * v5, (uint64_t)v23);
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    id result = (char *)sub_24A057EA8();
    uint64_t v8 = *v3;
    uint64_t v9 = *((void *)result + 2);
    BOOL v10 = __OFADD__(*v3, v9);
    uint64_t v11 = *v3 + v9;
    if (v10) {
      break;
    }
    id v12 = result;
    uint64_t v13 = v2[4];
    if (v13 >= v11) {
      goto LABEL_18;
    }
    if (v13 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    id v14 = (char *)v2[5];
    if (2 * v13 > v11) {
      uint64_t v11 = 2 * v13;
    }
    v2[4] = v11;
    if ((unint64_t)(v11 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    id result = (char *)swift_slowAlloc();
    v2[5] = result;
    if (v14)
    {
      if (result != v14 || result >= &v14[8 * v8]) {
        memmove(result, v14, 8 * v8);
      }
      sub_24A057B78();
LABEL_18:
      id result = (char *)v2[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v16 = *((void *)v12 + 2);
    if (v16)
    {
      id v17 = (uint64_t *)(v12 + 32);
      uint64_t v18 = *v3;
      while (1)
      {
        uint64_t v19 = *v17++;
        *(void *)&result[8 * v18] = v19;
        uint64_t v18 = *v3 + 1;
        if (__OFADD__(*v3, 1)) {
          break;
        }
        *uint64_t v3 = v18;
        if (!--v16) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v5;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    if (v5 == v4) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_249FE8F5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750BE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249FE9900(v1 + OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_currentTemperature, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_249F6E790((uint64_t)v4, &qword_269750C48);
    uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel);
    if (v9) {
      objc_msgSend(v9, sel_setTextProvider_, 0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08988]), sel_init);
    objc_msgSend(v10, sel_setUnitStyle_, 1);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    objc_msgSend(v11, sel_setNumberStyle_, 1);
    objc_msgSend(v11, sel_setMaximumFractionDigits_, 0);
    objc_msgSend(v10, sel_setNumberFormatter_, v11);
    sub_249FCFCA0(0, &qword_269750C50);
    sub_24A0578D8();
    id v12 = (void *)sub_24A057368();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(self, sel_textProviderWithText_, v12);

    id v14 = *(void **)(v1 + OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel);
    if (v14)
    {
      objc_msgSend(v14, sel_setTextProvider_, v13);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

id sub_249FE9238()
{
  id result = objc_msgSend(v0, sel__shouldReverseLayoutDirection);
  uint64_t v2 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_colors;
  if (!result)
  {
LABEL_24:
    unint64_t v15 = *(void *)&v0[v2];
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v0 = (char *)sub_24A057BD8();
      if (v0)
      {
LABEL_26:
        if ((v15 & 0xC000000000000001) != 0)
        {
          id v16 = (id)MEMORY[0x24C5B92B0](0, v15);
        }
        else
        {
          if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_35;
          }
          id v16 = *(id *)(v15 + 32);
        }
        id v17 = v16;
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    else
    {
      uint64_t v0 = *(char **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v0) {
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(self, sel_whiteColor);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    id v20 = objc_allocWithZone(MEMORY[0x263F825C8]);
    v27[4] = sub_249FDA534;
    v27[5] = v19;
    v27[0] = MEMORY[0x263EF8330];
    v27[1] = 1107296256;
    v27[2] = sub_249FDA198;
    void v27[3] = &block_descriptor_7;
    id v21 = _Block_copy(v27);
    id v22 = v18;
    id v23 = objc_msgSend(v20, sel_initWithDynamicProvider_, v21);
    _Block_release(v21);

    swift_release();
    return v23;
  }
  unint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_colors];
  if (!(v3 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > 2) {
      goto LABEL_4;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24A057BD8();
  id result = (id)swift_bridgeObjectRelease();
  if (v14 <= 2)
  {
LABEL_23:
    uint64_t v2 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_colors;
    goto LABEL_24;
  }
LABEL_4:
  unint64_t v4 = *(void *)&v0[v2];
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_6;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24A057BD8();
  id result = (id)swift_bridgeObjectRelease();
LABEL_6:
  double v6 = round(0.75 / (double)v5);
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  unint64_t v7 = *(void *)&v0[v2];
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v9 = v8 - 1;
    if (!__OFSUB__(v8, 1)) {
      goto LABEL_11;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24A057BD8();
  id result = (id)swift_bridgeObjectRelease();
  uint64_t v9 = v24 - 1;
  if (__OFSUB__(v24, 1)) {
    goto LABEL_41;
  }
LABEL_11:
  unint64_t v10 = *(void *)&v0[v2];
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_13;
  }
LABEL_42:
  uint64_t v25 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_24A057BD8();
  id result = (id)swift_bridgeObjectRelease();
  uint64_t v9 = v25;
  unint64_t v10 = *(void *)&v0[v2];
LABEL_13:
  if ((v11 & ~(v11 >> 63)) >= v9) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = v11 & ~(v11 >> 63);
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = MEMORY[0x24C5B92B0](v12, v10);
    swift_bridgeObjectRelease();
    return (id)v26;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v12 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_45:
    __break(1u);
    return result;
  }
  id v13 = *(void **)(v10 + 8 * v12 + 32);

  return v13;
}

id sub_249FE9638()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DigitalClockFaceComplicationsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_249FE970C()
{
  return type metadata accessor for DigitalClockFaceComplicationsView();
}

uint64_t type metadata accessor for DigitalClockFaceComplicationsView()
{
  uint64_t result = qword_269750E70;
  if (!qword_269750E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249FE9760()
{
  sub_249FE9860(319, (unint64_t *)&qword_269750BE0, &qword_269750BE8);
  if (v0 <= 0x3F)
  {
    sub_249FE9860(319, &qword_269750E80, &qword_269750E88);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_249FE9860(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_24A057968();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_249FE98B0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_249FE9900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_249FE9968()
{
  unint64_t result = qword_269750E98;
  if (!qword_269750E98)
  {
    sub_249FCFCA0(255, &qword_269750E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750E98);
  }
  return result;
}

double CGRectMake()
{
  return 0.0;
}

uint64_t sub_249FE9A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_249F75B7C(a1, (uint64_t)v7);
  if (v8 || (swift_bridgeObjectRelease(), sub_249F7B5E8(v7, (uint64_t)v9), sub_249F75B7C(a2, (uint64_t)v7), v8))
  {
    sub_249F75BD8((uint64_t)v7);
    uint64_t result = sub_24A057BC8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_249F7B5E8(v7, (uint64_t)v6);
    sub_249F7B5E8(v9, a3);
    uint64_t result = sub_249F7B5E8(v6, a3 + 40);
    *(void *)(a3 + 80) = 0;
    *(void *)(a3 + 88) = 0;
    *(unsigned char *)(a3 + 96) = 2;
  }
  return result;
}

double sub_249FE9AF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B16F9C8);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24A0593D0;
  *(void *)(v13 + 56) = &type metadata for SolidClockFaceColor;
  unint64_t v14 = sub_249F849F4();
  *(void *)(v13 + 64) = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v13 + 32) = v15;
  v16.i64[0] = a1;
  v16.i64[1] = a2;
  float64x2_t v20 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
  *(float64x2_t *)(v15 + 16) = vdivq_f64(vcvtq_f64_s64(v16), v20);
  *(double *)(v15 + 32) = (double)a3 / 255.0;
  *(void *)(v15 + 40) = 0x3FF0000000000000;
  *(void *)(v13 + 96) = &type metadata for SolidClockFaceColor;
  *(void *)(v13 + 104) = v14;
  uint64_t v17 = swift_allocObject();
  *(void *)(v13 + 72) = v17;
  v18.i64[0] = a4;
  v18.i64[1] = a5;
  *(float64x2_t *)(v17 + 16) = vdivq_f64(vcvtq_f64_s64(v18), v20);
  double result = (double)a6 / 255.0;
  *(double *)(v17 + 32) = result;
  *(void *)(v17 + 40) = 0x3FF0000000000000;
  *(void *)(a7 + 8) = 0;
  *(void *)(a7 + 16) = 0;
  *(void *)a7 = v13;
  *(unsigned char *)(a7 + 96) = 1;
  return result;
}

uint64_t sub_249FE9C4C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int64_t v2 = *(void *)(result + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v4 = result;
    uint64_t v11 = a2;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_249FBAD88(0, v2, 0);
    uint64_t v3 = v18;
    uint64_t v5 = (int64x2_t *)(v4 + 48);
    float64x2_t v12 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
    do
    {
      int64x2_t v6 = v5[-1];
      uint64_t v7 = v5->i64[0];
      uint64_t v18 = v3;
      unint64_t v9 = *(void *)(v3 + 16);
      unint64_t v8 = *(void *)(v3 + 24);
      if (v9 >= v8 >> 1)
      {
        int64x2_t v14 = v6;
        sub_249FBAD88(v8 > 1, v9 + 1, 1);
        int64x2_t v6 = v14;
        uint64_t v3 = v18;
      }
      float64x2_t v13 = vdivq_f64(vcvtq_f64_s64(v6), v12);
      uint64_t v5 = (int64x2_t *)((char *)v5 + 24);
      int64x2_t v16 = &type metadata for SolidClockFaceColor;
      unint64_t v17 = sub_249F849F4();
      uint64_t v10 = swift_allocObject();
      *(void *)&long long v15 = v10;
      *(float64x2_t *)(v10 + 16) = v13;
      *(double *)(v10 + 32) = (double)v7 / 255.0;
      *(void *)(v10 + 40) = 0x3FF0000000000000;
      *(void *)(v3 + 16) = v9 + 1;
      double result = sub_249F7B5E8(&v15, v3 + 40 * v9 + 32);
      --v2;
    }
    while (v2);
    a2 = v11;
  }
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 96) = 1;
  return result;
}

uint64_t sub_249FE9DC0@<X0>(uint64_t a1@<X8>)
{
  *((void *)&v14 + 1) = &type metadata for SolidClockFaceColor;
  unint64_t v2 = sub_249F849F4();
  *(void *)&long long v15 = v2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A05FF70;
  *(_OWORD *)(v3 + 32) = xmmword_24A05FF80;
  char v18 = 0;
  *((void *)&v15 + 1) = 0;
  *(void *)&long long v16 = 0;
  *(void *)&long long v13 = v3;
  unint64_t v9 = &type metadata for SolidClockFaceColor;
  unint64_t v10 = v2;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24A05FF90;
  *(_OWORD *)(v4 + 32) = xmmword_24A05FFA0;
  char v12 = 0;
  v11[0] = 0;
  v11[1] = 0;
  v8[0] = v4;
  sub_249FE9A00((uint64_t)&v13, (uint64_t)v8, (uint64_t)v19);
  sub_249F75BD8((uint64_t)v8);
  sub_249F75BD8((uint64_t)&v13);
  long long v16 = 0u;
  long long v17 = 0u;
  long long v15 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  sub_249FD68E8((uint64_t)&v13, (uint64_t)v8);
  if (v9)
  {
    if (v9 == (ValueMetadata *)1)
    {
      uint64_t v5 = 0xE800000000000000;
      uint64_t v6 = 0x6D75727463657073;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      uint64_t v5 = 0xE600000000000000;
      uint64_t v6 = 0x73726F6C6F63;
    }
  }
  else
  {
    uint64_t v5 = 0xE300000000000000;
    uint64_t v6 = 7957363;
  }
  sub_249FD6C7C((uint64_t)&v13);
  sub_249FECABC(v6, v5, a1);
  swift_bridgeObjectRelease();
  return sub_249F75BD8((uint64_t)v19);
}

uint64_t sub_249FE9F44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = (uint64_t)&type metadata for SolidClockFaceColor;
  unint64_t v2 = sub_249F849F4();
  *(void *)&long long v15 = v2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A05FFB0;
  *(_OWORD *)(v3 + 32) = xmmword_24A05AEE0;
  char v18 = 0;
  *((void *)&v15 + 1) = 0;
  *(void *)&long long v16 = 0;
  v13[0] = v3;
  unint64_t v9 = &type metadata for SolidClockFaceColor;
  unint64_t v10 = v2;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24A05FFC0;
  *(_OWORD *)(v4 + 32) = xmmword_24A05FFD0;
  char v12 = 0;
  v11[0] = 0;
  v11[1] = 0;
  v8[0] = v4;
  sub_249FE9A00((uint64_t)v13, (uint64_t)v8, (uint64_t)v19);
  sub_249F75BD8((uint64_t)v8);
  sub_249F75BD8((uint64_t)v13);
  memset(v13, 0, sizeof(v13));
  uint64_t v14 = 1;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  sub_249FD68E8((uint64_t)v13, (uint64_t)v8);
  if (v9)
  {
    if (v9 == (ValueMetadata *)1)
    {
      uint64_t v5 = 0xE800000000000000;
      uint64_t v6 = 0x6D75727463657073;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
      uint64_t v5 = 0xE600000000000000;
      uint64_t v6 = 0x73726F6C6F63;
    }
  }
  else
  {
    uint64_t v5 = 0xE300000000000000;
    uint64_t v6 = 7957363;
  }
  sub_249FD6C7C((uint64_t)v13);
  sub_249FECABC(v6, v5, a1);
  swift_bridgeObjectRelease();
  return sub_249F75BD8((uint64_t)v19);
}

uint64_t sub_249FEA0D0@<X0>(uint64_t a1@<X8>)
{
  void v8[3] = &type metadata for SolidClockFaceColor;
  unint64_t v2 = sub_249F849F4();
  v8[4] = v2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A05FFE0;
  *(_OWORD *)(v3 + 32) = xmmword_24A05FFF0;
  char v9 = 0;
  v8[5] = 0;
  _OWORD v8[6] = 0;
  v8[0] = v3;
  v6[3] = &type metadata for SolidClockFaceColor;
  v6[4] = v2;
  uint64_t v4 = swift_allocObject();
  *(int64x2_t *)(v4 + 16) = vdupq_n_s64(0x3FE999999999999AuLL);
  *(_OWORD *)(v4 + 32) = xmmword_24A060000;
  char v7 = 0;
  v6[5] = 0;
  void v6[6] = 0;
  v6[0] = v4;
  sub_249FE9A00((uint64_t)v8, (uint64_t)v6, (uint64_t)v10);
  sub_249F75BD8((uint64_t)v6);
  sub_249F75BD8((uint64_t)v8);
  sub_249FECABC(0x614D646574746F64, 0xED00006C6C694670, a1);
  return sub_249F75BD8((uint64_t)v10);
}

uint64_t sub_249FEA1E8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_249FBAD68(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v17;
    do
    {
      sub_249F7B37C(v4, (uint64_t)v14);
      uint64_t v5 = v15;
      uint64_t v6 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      uint64_t v9 = v8;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249FBAD68(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v17;
      }
      unint64_t v11 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_249FBAD68(v10 > 1, v11 + 1, 1);
        uint64_t v2 = v17;
      }
      *(void *)(v2 + 16) = v11 + 1;
      uint64_t v12 = v2 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  v14[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26974FA68);
  sub_249FEDA10();
  sub_24A057348();
  swift_bridgeObjectRelease();
  v14[0] = 91;
  v14[1] = 0xE100000000000000;
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return v14[0];
}

__n128 DynamicClockFaceColor.base.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DynamicClockFaceColor.variation.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

unint64_t DynamicClockFaceColor.stringValue.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t SolidClockFaceColor.stringValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697520A0);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8D538];
  *(_OWORD *)(v5 + 16) = xmmword_24A05A510;
  uint64_t v7 = MEMORY[0x263F8D5B8];
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = v1;
  sub_24A0573B8();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24A05A510;
  *(void *)(v8 + 56) = v6;
  *(void *)(v8 + 64) = v7;
  *(void *)(v8 + 32) = v2;
  sub_24A0573B8();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A05A510;
  *(void *)(v9 + 56) = v6;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 32) = v4;
  sub_24A0573B8();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A05A510;
  *(void *)(v10 + 56) = v6;
  *(void *)(v10 + 64) = v7;
  *(void *)(v10 + 32) = v3;
  sub_24A0573B8();
  sub_24A057A78();
  swift_bridgeObjectRelease();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  return 0xD000000000000015;
}

id DynamicClockFaceColor.primaryUIColor.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *v0, v0[1], v0[2], v0[3]);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  id v3 = objc_allocWithZone(MEMORY[0x263F825C8]);
  v8[4] = sub_249FDA534;
  v8[5] = v2;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_249FDA198;
  void v8[3] = &block_descriptor_8;
  uint64_t v4 = _Block_copy(v8);
  id v5 = v1;
  id v6 = objc_msgSend(v3, sel_initWithDynamicProvider_, v4);
  _Block_release(v4);

  swift_release();
  return v6;
}

id SolidClockFaceColor.primaryUIColor.getter()
{
  return sub_249FEB610((uint64_t)&unk_26FDE9A98, (uint64_t)sub_249FE99E4, (uint64_t)&block_descriptor_7);
}

uint64_t DynamicClockFaceColor.primaryColor.getter()
{
  uint64_t v1 = sub_24A056EA8();
  __n128 v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = *v0;
  double v6 = v0[1];
  double v7 = v0[2];
  double v8 = v0[3];
  (*(void (**)(char *, void, __n128))(v9 + 104))(v4, *MEMORY[0x263F1B388], v2);
  return MEMORY[0x24C5B8780](v4, v5, v6, v7, v8);
}

id DynamicClockFaceColor.secondaryUIColor.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, v0[4], v0[5], v0[6], v0[7]);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  id v3 = objc_allocWithZone(MEMORY[0x263F825C8]);
  v8[4] = sub_249FE99E4;
  v8[5] = v2;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_249FDA198;
  void v8[3] = &block_descriptor_14;
  uint64_t v4 = _Block_copy(v8);
  id v5 = v1;
  id v6 = objc_msgSend(v3, sel_initWithDynamicProvider_, v4);
  _Block_release(v4);

  swift_release();
  return v6;
}

uint64_t DynamicClockFaceColor.secondaryColor.getter()
{
  uint64_t v1 = sub_24A056EA8();
  __n128 v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = v0[4];
  double v6 = v0[5];
  double v7 = v0[6];
  double v8 = v0[7];
  (*(void (**)(char *, void, __n128))(v9 + 104))(v4, *MEMORY[0x263F1B388], v2);
  return MEMORY[0x24C5B8780](v4, v5, v6, v7, v8);
}

uint64_t DynamicClockFaceColor.hash(into:)()
{
  return sub_24A057E58();
}

BOOL static SolidClockFaceColor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_249FEAC54()
{
  if (*v0) {
    return 0x6F69746169726176;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_249FEAC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249FED794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249FEACB4(uint64_t a1)
{
  unint64_t v2 = sub_249FECCC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249FEACF0(uint64_t a1)
{
  unint64_t v2 = sub_249FECCC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DynamicClockFaceColor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750EB0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v11 = *((void *)v1 + 5);
  uint64_t v12 = *((void *)v1 + 6);
  uint64_t v13 = *((void *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FECCC8();
  sub_24A057EC8();
  long long v17 = v15;
  uint64_t v18 = v8;
  uint64_t v19 = v9;
  char v16 = 0;
  sub_249FECD1C();
  sub_24A057CD8();
  if (!v2)
  {
    *(void *)&long long v17 = v10;
    *((void *)&v17 + 1) = v11;
    uint64_t v18 = v12;
    uint64_t v19 = v13;
    char v16 = 1;
    sub_24A057CD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DynamicClockFaceColor.hashValue.getter()
{
  return sub_24A057E68();
}

uint64_t DynamicClockFaceColor.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750EC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FECCC8();
  sub_24A057EB8();
  if (!v2)
  {
    char v16 = 0;
    sub_249FDA5A8();
    sub_24A057C88();
    long long v9 = v14;
    long long v10 = v15;
    char v16 = 1;
    sub_24A057C88();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v11 = v14;
    long long v12 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t _s11ClockPoster05SolidA9FaceColorV07primaryE07SwiftUI0E0Vvg_0()
{
  uint64_t v1 = sub_24A056EA8();
  __n128 v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = *v0;
  double v6 = v0[1];
  double v7 = v0[2];
  double v8 = v0[3];
  (*(void (**)(char *, void, __n128))(v9 + 104))(v4, *MEMORY[0x263F1B388], v2);
  return MEMORY[0x24C5B8780](v4, v5, v6, v7, v8);
}

uint64_t sub_249FEB254()
{
  uint64_t v1 = sub_24A056EA8();
  __n128 v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = v0[4];
  double v6 = v0[5];
  double v7 = v0[6];
  double v8 = v0[7];
  (*(void (**)(char *, void, __n128))(v9 + 104))(v4, *MEMORY[0x263F1B388], v2);
  return MEMORY[0x24C5B8780](v4, v5, v6, v7, v8);
}

uint64_t sub_249FEB33C()
{
  return sub_24A057E68();
}

uint64_t sub_249FEB3C8()
{
  return SolidClockFaceColor.hash(into:)();
}

uint64_t sub_249FEB42C()
{
  return sub_24A057E68();
}

uint64_t sub_249FEB4B4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DynamicClockFaceColor.init(from:)(a1, a2);
}

uint64_t sub_249FEB4CC(void *a1)
{
  return DynamicClockFaceColor.encode(to:)(a1);
}

ClockPoster::SolidClockFaceColor __swiftcall SolidClockFaceColor.init(_:)(UIColor a1)
{
  uint64_t v3 = v1;
  v11[1] = *MEMORY[0x263EF8340];
  double v10 = 0.0;
  v11[0] = 0;
  double v8 = 0.0;
  double v9 = 0.0;
  [(objc_class *)a1.super.isa getRed:v11 green:&v10 blue:&v9 alpha:&v8];

  double v5 = v10;
  double v4 = *(double *)v11;
  double v7 = v8;
  double v6 = v9;
  *(void *)uint64_t v3 = v11[0];
  *(double *)(v3 + 8) = v5;
  *(double *)(v3 + 16) = v6;
  *(double *)(v3 + 24) = v7;
  result.alphCGFloat a = v7;
  result.blue = v6;
  result.greedouble n = v5;
  result.reCGFloat d = v4;
  return result;
}

ClockPoster::SolidClockFaceColor __swiftcall SolidClockFaceColor.init(red:green:blue:alpha:)(Swift::Double red, Swift::Double green, Swift::Double blue, Swift::Double alpha)
{
  *double v4 = red;
  v4[1] = green;
  long long v4[2] = blue;
  v4[3] = alpha;
  result.alphCGFloat a = alpha;
  result.blue = blue;
  result.greedouble n = green;
  result.reCGFloat d = red;
  return result;
}

id SolidClockFaceColor.uiColor.getter()
{
  return sub_249FEB610((uint64_t)&unk_26FDE9B38, (uint64_t)sub_249FE99E4, (uint64_t)&block_descriptor_21);
}

uint64_t sub_249FEB5AC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id SolidClockFaceColor.secondaryUIColor.getter()
{
  return sub_249FEB610((uint64_t)&unk_26FDE9B88, (uint64_t)sub_249FE99E4, (uint64_t)&block_descriptor_28);
}

id sub_249FEB610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, *v3, v3[1], v3[2], v3[3]);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  id v8 = objc_allocWithZone(MEMORY[0x263F825C8]);
  uint64_t v13[4] = a2;
  v13[5] = v7;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_249FDA198;
  void v13[3] = a3;
  double v9 = _Block_copy(v13);
  id v10 = v6;
  id v11 = objc_msgSend(v8, sel_initWithDynamicProvider_, v9);
  _Block_release(v9);

  swift_release();
  return v11;
}

uint64_t SolidClockFaceColor.hash(into:)()
{
  return sub_24A057E58();
}

uint64_t sub_249FEB7B0()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249FEB828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249FED884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249FEB850(uint64_t a1)
{
  unint64_t v2 = sub_249FECD70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249FEB88C(uint64_t a1)
{
  unint64_t v2 = sub_249FECD70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SolidClockFaceColor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750EC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FECD70();
  sub_24A057EC8();
  v8[15] = 0;
  sub_24A057CB8();
  if (!v1)
  {
    v8[14] = 1;
    sub_24A057CB8();
    v8[13] = 2;
    sub_24A057CB8();
    void v8[12] = 3;
    sub_24A057CB8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SolidClockFaceColor.hashValue.getter()
{
  return sub_24A057E68();
}

uint64_t SolidClockFaceColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750ED8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249FECD70();
  sub_24A057EB8();
  if (!v2)
  {
    char v22 = 0;
    sub_24A057C68();
    uint64_t v10 = v9;
    char v21 = 1;
    sub_24A057C68();
    uint64_t v12 = v11;
    char v20 = 2;
    sub_24A057C68();
    uint64_t v15 = v14;
    char v19 = 3;
    sub_24A057C68();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v15;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_249FEBCE8()
{
  return sub_24A057E68();
}

uint64_t sub_249FEBD38()
{
  return sub_24A057E68();
}

uint64_t sub_249FEBD80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SolidClockFaceColor.init(from:)(a1, a2);
}

uint64_t sub_249FEBD98(void *a1)
{
  return SolidClockFaceColor.encode(to:)(a1);
}

BOOL sub_249FEBDB0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t UIColor.cpStringValue.getter()
{
  v16[1] = *MEMORY[0x263EF8340];
  uint64_t v15 = 0;
  v16[0] = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v16, &v15, &v14, &v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697520A0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24A05A510;
  uint64_t v2 = v16[0];
  uint64_t v3 = MEMORY[0x263F8EF38];
  *(void *)(v1 + 56) = MEMORY[0x263F8EF38];
  unint64_t v4 = sub_249FECDC4();
  *(void *)(v1 + 64) = v4;
  *(void *)(v1 + 32) = v2;
  uint64_t v5 = sub_24A0573B8();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A05A510;
  uint64_t v7 = v15;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 32) = v7;
  sub_24A0573B8();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24A05A510;
  uint64_t v9 = v14;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 32) = v9;
  sub_24A0573B8();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A05A510;
  uint64_t v11 = v13;
  *(void *)(v10 + 56) = v3;
  *(void *)(v10 + 64) = v4;
  *(void *)(v10 + 32) = v11;
  sub_24A0573B8();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  sub_24A057438();
  sub_24A057438();
  swift_bridgeObjectRelease();
  return v5;
}

id static UIColor.cpColor(from:)()
{
  sub_249F823CC();
  uint64_t v0 = (void *)sub_24A057998();
  uint64_t v1 = v0;
  if (v0[2] == 4)
  {
    uint64_t v2 = v0[4];
    uint64_t v3 = v0[5];
    MEMORY[0x270FA5388](v0);
    if ((v3 & 0x1000000000000000) != 0 || !(v3 & 0x2000000000000000 | v2 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_24A057A58();
    }
    else
    {
      MEMORY[0x270FA5388](v4);
      if ((v3 & 0x2000000000000000) != 0)
      {
        switch((char)v2)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
            swift_bridgeObjectRetain();
            goto LABEL_12;
          default:
            swift_bridgeObjectRetain();
            uint64_t v15 = (unsigned char *)_swift_stdlib_strtof_clocale();
            if (v15) {
              BOOL v8 = *v15 == 0;
            }
            else {
LABEL_12:
            }
              BOOL v8 = 0;
            char v41 = v8;
            uint64_t v7 = swift_bridgeObjectRelease();
            break;
        }
LABEL_14:
        if ((v41 & 1) == 0 || 0.0 > 1.0) {
          goto LABEL_55;
        }
        if (v1[2] < 2uLL)
        {
          __break(1u);
        }
        else
        {
          uint64_t v9 = v1[6];
          uint64_t v10 = v1[7];
          MEMORY[0x270FA5388](v7);
          if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v9 & 0x1000000000000000))
          {
            swift_bridgeObjectRetain();
            sub_24A057A58();
            goto LABEL_23;
          }
          MEMORY[0x270FA5388](v11);
          if ((v10 & 0x2000000000000000) != 0)
          {
            switch((char)v9)
            {
              case 0:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
                swift_bridgeObjectRetain();
                goto LABEL_28;
              default:
                swift_bridgeObjectRetain();
                uint64_t v32 = (unsigned char *)_swift_stdlib_strtof_clocale();
                if (v32) {
                  BOOL v16 = *v32 == 0;
                }
                else {
LABEL_28:
                }
                  BOOL v16 = 0;
                char v41 = v16;
                uint64_t v14 = swift_bridgeObjectRelease();
                break;
            }
LABEL_30:
            if ((v41 & 1) == 0 || 0.0 > 1.0) {
              goto LABEL_55;
            }
            if (v1[2] < 3uLL)
            {
              __break(1u);
              goto LABEL_75;
            }
            uint64_t v17 = v1[8];
            uint64_t v18 = v1[9];
            MEMORY[0x270FA5388](v14);
            if ((v18 & 0x1000000000000000) != 0 || !(v18 & 0x2000000000000000 | v17 & 0x1000000000000000))
            {
              swift_bridgeObjectRetain();
              sub_24A057A58();
              swift_bridgeObjectRelease();
              if ((v41 & 1) == 0) {
                goto LABEL_55;
              }
            }
            else
            {
              MEMORY[0x270FA5388](v19);
              if ((v18 & 0x2000000000000000) == 0)
              {
                if ((v17 & 0x1000000000000000) != 0)
                {
                  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFFLL) + 32;
                  uint64_t v21 = v17 & 0xFFFFFFFFFFFFLL;
                  goto LABEL_38;
                }
LABEL_75:
                uint64_t v20 = sub_24A057AA8();
                uint64_t v21 = v40;
LABEL_38:
                swift_bridgeObjectRetain();
                char v22 = sub_249FECC04(v20, v21, (void (*)(uint64_t *__return_ptr))sub_249FECEF4);
                swift_bridgeObjectRelease();
                if ((v22 & 1) == 0) {
                  goto LABEL_55;
                }
                goto LABEL_39;
              }
              if (v17 <= 0x20u && ((1 << v17) & 0x100003E01) != 0)
              {
                swift_bridgeObjectRetain();
LABEL_54:
                swift_bridgeObjectRelease();
                goto LABEL_55;
              }
              swift_bridgeObjectRetain();
              id v34 = (unsigned __int8 *)_swift_stdlib_strtof_clocale();
              if (!v34) {
                goto LABEL_54;
              }
              int v35 = *v34;
              swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_55;
              }
            }
LABEL_39:
            if (0.0 <= 1.0)
            {
              if (v1[2] < 4uLL)
              {
                __break(1u);
                goto LABEL_79;
              }
              uint64_t v24 = v1[10];
              uint64_t v23 = v1[11];
              swift_bridgeObjectRetain();
              uint64_t v25 = swift_bridgeObjectRelease();
              MEMORY[0x270FA5388](v25);
              if ((v23 & 0x1000000000000000) != 0 || !(v23 & 0x2000000000000000 | v24 & 0x1000000000000000))
              {
                sub_24A057A58();
                swift_bridgeObjectRelease();
                if ((v41 & 1) == 0) {
                  goto LABEL_56;
                }
                goto LABEL_47;
              }
              MEMORY[0x270FA5388](v26);
              if ((v23 & 0x2000000000000000) == 0)
              {
                if ((v24 & 0x1000000000000000) != 0)
                {
                  uint64_t v27 = (v23 & 0xFFFFFFFFFFFFFFFLL) + 32;
                  uint64_t v28 = v24 & 0xFFFFFFFFFFFFLL;
                  goto LABEL_46;
                }
LABEL_79:
                uint64_t v27 = sub_24A057AA8();
LABEL_46:
                char v29 = sub_249FECC04(v27, v28, (void (*)(uint64_t *__return_ptr))sub_249FECEF4);
                swift_bridgeObjectRelease();
                if (v29) {
                  goto LABEL_47;
                }
LABEL_56:
                sub_24A057A78();
                sub_24A057438();
                sub_24A057438();
                goto LABEL_57;
              }
              if (v24 > 0x20u || ((1 << v24) & 0x100003E01) == 0)
              {
                id v37 = (unsigned __int8 *)_swift_stdlib_strtof_clocale();
                if (v37)
                {
                  int v38 = *v37;
                  swift_bridgeObjectRelease();
                  if (v38) {
                    goto LABEL_56;
                  }
LABEL_47:
                  float v30 = 0.0;
                  if (0.0 <= 1.0) {
                    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, v30);
                  }
                  goto LABEL_56;
                }
              }
            }
LABEL_55:
            swift_bridgeObjectRelease();
            goto LABEL_56;
          }
          if ((v9 & 0x1000000000000000) != 0)
          {
            uint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
            uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
LABEL_22:
            swift_bridgeObjectRetain();
            char v41 = sub_249FECC04(v12, v13, (void (*)(uint64_t *__return_ptr))sub_249FECEF4) & 1;
LABEL_23:
            uint64_t v14 = swift_bridgeObjectRelease();
            goto LABEL_30;
          }
        }
        uint64_t v12 = sub_24A057AA8();
        uint64_t v13 = v39;
        goto LABEL_22;
      }
      if ((v2 & 0x1000000000000000) != 0)
      {
        uint64_t v5 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v6 = v2 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v5 = sub_24A057AA8();
        uint64_t v6 = v36;
      }
      swift_bridgeObjectRetain();
      char v41 = sub_249FECC04(v5, v6, (void (*)(uint64_t *__return_ptr))sub_249FECEF4) & 1;
    }
    uint64_t v7 = swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  sub_24A057A78();
  sub_24A057438();
  sub_24A057438();
LABEL_57:
  sub_24A057438();
  sub_249FECE18();
  swift_allocError();
  *uint64_t v33 = 0;
  v33[1] = 0xE000000000000000;
  return (id)swift_willThrow();
}

uint64_t sub_249FECABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  sub_249F75B7C(v4, (uint64_t)&v15);
  switch(v17)
  {
    case 1:
      uint64_t v13 = v15;
      swift_bridgeObjectRelease();
      *(void *)a3 = v13;
      *(void *)(a3 + 8) = a1;
      *(void *)(a3 + 16) = a2;
      char v12 = 1;
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRelease();
      sub_249F7B5E8(&v15, a3);
      sub_249F7B5E8(&v16, a3 + 40);
      *(void *)(a3 + 80) = a1;
      *(void *)(a3 + 88) = a2;
      char v12 = 2;
LABEL_6:
      *(unsigned char *)(a3 + 96) = v12;
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      sub_249F75B7C(v4, a3);
      uint64_t result = sub_249F75BD8((uint64_t)&v15);
      break;
    default:
      swift_bridgeObjectRelease();
      sub_249F7B5E8(&v15, (uint64_t)v14);
      sub_249F7B37C((uint64_t)v14, a3);
      uint64_t v8 = ClockFaceLook.identifier.getter();
      uint64_t v10 = v9;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
      *(void *)(a3 + 40) = v8;
      *(void *)(a3 + 48) = v10;
      *(unsigned char *)(a3 + 96) = 0;
      break;
  }
  return result;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_249FECC04(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t _s11ClockPoster07DynamicA9FaceColorV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))))return vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), 0xFuLL))) & 1; {
  else
  }
    return 0;
}

unint64_t sub_249FECCC8()
{
  unint64_t result = qword_269750EB8;
  if (!qword_269750EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750EB8);
  }
  return result;
}

unint64_t sub_249FECD1C()
{
  unint64_t result = qword_26B16F9F8;
  if (!qword_26B16F9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16F9F8);
  }
  return result;
}

unint64_t sub_249FECD70()
{
  unint64_t result = qword_269750ED0;
  if (!qword_269750ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750ED0);
  }
  return result;
}

unint64_t sub_249FECDC4()
{
  unint64_t result = qword_269750EE0;
  if (!qword_269750EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750EE0);
  }
  return result;
}

unint64_t sub_249FECE18()
{
  unint64_t result = qword_269750EE8;
  if (!qword_269750EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750EE8);
  }
  return result;
}

unsigned char *sub_249FECE6C@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_249FECE84(a1, a2);
}

unsigned char *sub_249FECE84@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_249FECEF4@<X0>(unsigned char *a1@<X8>)
{
  return sub_249FECF0C(a1);
}

void *sub_249FECF0C@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_249FECF50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_249FED0D0(a1, a2, a3, (uint64_t (*)(void))sub_249FDA60C, (uint64_t (*)(void))sub_249FECF90, (uint64_t (*)(void))sub_249FECFE4);
}

unint64_t sub_249FECF90()
{
  unint64_t result = qword_26B16FA20;
  if (!qword_26B16FA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA20);
  }
  return result;
}

unint64_t sub_249FECFE4()
{
  unint64_t result = qword_26B16FA28;
  if (!qword_26B16FA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA28);
  }
  return result;
}

unint64_t sub_249FED03C()
{
  unint64_t result = qword_26B16FA30;
  if (!qword_26B16FA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA30);
  }
  return result;
}

uint64_t sub_249FED090(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_249FED0D0(a1, a2, a3, (uint64_t (*)(void))sub_249FDA5A8, (uint64_t (*)(void))sub_249FECD1C, (uint64_t (*)(void))sub_249FED124);
}

uint64_t sub_249FED0D0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_249FED124()
{
  unint64_t result = qword_26B16FA00;
  if (!qword_26B16FA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA00);
  }
  return result;
}

unint64_t sub_249FED17C()
{
  unint64_t result = qword_26B16FA08;
  if (!qword_26B16FA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B16FA08);
  }
  return result;
}

uint64_t dispatch thunk of ClockFaceColor.stringValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ClockFaceColor.primaryUIColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ClockFaceColor.primaryColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ClockFaceColor.secondaryUIColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ClockFaceColor.secondaryColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicClockFaceColor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DynamicClockFaceColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DynamicClockFaceColor()
{
  return &type metadata for DynamicClockFaceColor;
}

ValueMetadata *type metadata accessor for SolidClockFaceColor()
{
  return &type metadata for SolidClockFaceColor;
}

void *initializeBufferWithCopyOfBuffer for UIColorError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UIColorError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for UIColorError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UIColorError()
{
  return &type metadata for UIColorError;
}

unsigned char *storeEnumTagSinglePayload for SolidClockFaceColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FED448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SolidClockFaceColor.CodingKeys()
{
  return &type metadata for SolidClockFaceColor.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DynamicClockFaceColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249FED54CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicClockFaceColor.CodingKeys()
{
  return &type metadata for DynamicClockFaceColor.CodingKeys;
}

unint64_t sub_249FED588()
{
  unint64_t result = qword_269750EF0;
  if (!qword_269750EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750EF0);
  }
  return result;
}

unint64_t sub_249FED5E0()
{
  unint64_t result = qword_269750EF8;
  if (!qword_269750EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750EF8);
  }
  return result;
}

unint64_t sub_249FED638()
{
  unint64_t result = qword_269750F00;
  if (!qword_269750F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750F00);
  }
  return result;
}

unint64_t sub_249FED690()
{
  unint64_t result = qword_269750F08;
  if (!qword_269750F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750F08);
  }
  return result;
}

unint64_t sub_249FED6E8()
{
  unint64_t result = qword_269750F10;
  if (!qword_269750F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269750F10);
  }
  return result;
}

unint64_t sub_249FED740()
{
  unint64_t result = qword_269750F18[0];
  if (!qword_269750F18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269750F18);
  }
  return result;
}

uint64_t sub_249FED794(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_24A057D48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746169726176 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24A057D48();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249FED884(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_24A057D48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_24A057D48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_24A057D48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24A057D48();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_249FEDA10()
{
  unint64_t result = qword_26974FA70;
  if (!qword_26974FA70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26974FA68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26974FA70);
  }
  return result;
}

uint64_t sub_249FEDA6C()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

double sub_249FEDAB0()
{
  v11[5] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  char v12 = 0;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.384313725, 0.48627451, 0.643137255, 1.0);
  char v14 = 1;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.384313725, 0.48627451, 0.643137255, 1.0);
  char v16 = 2;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.768627451, 1.0, 1.0);
  char v18 = 3;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.768627451, 1.0, 1.0);
  char v20 = 4;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.768627451, 1.0, 1.0);
  char v22 = 5;
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.509803922, 0.788235294, 1.0);
  char v24 = 6;
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.509803922, 0.788235294, 1.0);
  char v26 = 7;
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  char v28 = 8;
  v11[0] = MEMORY[0x263F8EE78];
  sub_249FBADA8(0, 9, 0);
  uint64_t v0 = v11[0];
  uint64_t v1 = *MEMORY[0x263F15EB8];
  BOOL v2 = self;
  for (uint64_t i = 0; i != 18; i += 2)
  {
    uint64_t v4 = qword_24A060548[SLOBYTE(v11[i + 6])];
    id v5 = (id)v11[i + 5];
    id v6 = objc_msgSend(v2, sel_functionWithName_, v1);
    v11[0] = v0;
    unint64_t v8 = *(void *)(v0 + 16);
    unint64_t v7 = *(void *)(v0 + 24);
    if (v8 >= v7 >> 1)
    {
      sub_249FBADA8(v7 > 1, v8 + 1, 1);
      uint64_t v0 = v11[0];
    }
    *(void *)(v0 + 16) = v8 + 1;
    uint64_t v9 = (void *)(v0 + 24 * v8);
    v9[4] = v4;
    v9[5] = v5;
    v9[6] = v6;
  }
  swift_arrayDestroy();
  v11[0] = v0;
  swift_bridgeObjectRetain();
  sub_249FEE188(v11);
  swift_release();
  return 0.0;
}

double sub_249FEDE0C()
{
  v11[5] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.549019608, 0.815686275, 1.0);
  char v12 = 0;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.549019608, 0.815686275, 1.0);
  char v14 = 1;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.674509804, 0.4, 1.0);
  char v16 = 2;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.552941176, 0.658823529, 0.22745098, 1.0);
  char v18 = 3;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.588235294, 0.529411765, 0.352941176, 1.0);
  char v20 = 4;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.619607843, 0.4, 0.478431373, 1.0);
  char v22 = 5;
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.898039216, 0.588235294, 0.149019608, 1.0);
  char v24 = 6;
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.360784314, 0.184313725, 1.0);
  char v26 = 7;
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.549019608, 0.815686275, 1.0);
  char v28 = 8;
  v11[0] = MEMORY[0x263F8EE78];
  sub_249FBADA8(0, 9, 0);
  uint64_t v0 = v11[0];
  uint64_t v1 = *MEMORY[0x263F15EB8];
  BOOL v2 = self;
  for (uint64_t i = 0; i != 18; i += 2)
  {
    uint64_t v4 = qword_24A060548[SLOBYTE(v11[i + 6])];
    id v5 = (id)v11[i + 5];
    id v6 = objc_msgSend(v2, sel_functionWithName_, v1);
    v11[0] = v0;
    unint64_t v8 = *(void *)(v0 + 16);
    unint64_t v7 = *(void *)(v0 + 24);
    if (v8 >= v7 >> 1)
    {
      sub_249FBADA8(v7 > 1, v8 + 1, 1);
      uint64_t v0 = v11[0];
    }
    *(void *)(v0 + 16) = v8 + 1;
    uint64_t v9 = (void *)(v0 + 24 * v8);
    v9[4] = v4;
    v9[5] = v5;
    v9[6] = v6;
  }
  swift_arrayDestroy();
  v11[0] = v0;
  swift_bridgeObjectRetain();
  sub_249FEE188(v11);
  swift_release();
  return 0.0;
}

uint64_t sub_249FEE188(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24A02101C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_249FEE1F4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_249FEE1F4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24A057CE8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v86 = *a1;
      uint64_t v87 = -1;
      uint64_t v88 = 1;
      uint64_t v89 = *a1;
      do
      {
        double v90 = *(double *)(v86 + 24 * v88);
        uint64_t v91 = v87;
        uint64_t v92 = v89;
        do
        {
          if (v90 >= *(double *)v92) {
            break;
          }
          if (!v86) {
            goto LABEL_141;
          }
          long long v93 = *(_OWORD *)(v92 + 32);
          *(_OWORD *)(v92 + 24) = *(_OWORD *)v92;
          *(void *)(v92 + 40) = *(void *)(v92 + 16);
          *(double *)uint64_t v92 = v90;
          *(_OWORD *)(v92 + 8) = v93;
          v92 -= 24;
        }
        while (!__CFADD__(v91++, 1));
        ++v88;
        v89 += 24;
        --v87;
      }
      while (v88 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v104 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v95 = v12;
      uint64_t v106 = v9;
      if (v13 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v96) {
            goto LABEL_145;
          }
          uint64_t v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v13 + 24];
          sub_249FEE914((double *)(v96 + 24 * v99), (double *)(v96 + 24 * *(void *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_249F9A14C((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_134;
          }
          CGRect v101 = &v98[16 * v97 + 32];
          *(void *)CGRect v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v13 > v102) {
            goto LABEL_135;
          }
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          uint64_t v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_24A0575A8();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v105 = *a1 + 48;
  uint64_t v103 = *a1 - 24;
  char v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v107 = v6;
  uint64_t v108 = v3;
  uint64_t v109 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 24 * v10);
      double v16 = *(double *)(v11 + 24 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        id v17 = (double *)(v105 + 24 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = v11 + v20;
              uint64_t v26 = *(void *)(v11 + v21);
              long long v27 = *(_OWORD *)(v11 + v21 + 8);
              long long v28 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = v28;
              *(void *)(v25 - 24) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v29 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v29 >= v3) {
      uint64_t v29 = v3;
    }
    if (v29 < v14) {
      break;
    }
    if (v10 != v29)
    {
      uint64_t v30 = v103 + 24 * v10;
      do
      {
        double v31 = *(double *)(v11 + 24 * v10);
        uint64_t v32 = v14;
        uint64_t v33 = v30;
        do
        {
          if (v31 >= *(double *)v33) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          long long v34 = *(_OWORD *)(v33 + 32);
          *(_OWORD *)(v33 + 24) = *(_OWORD *)v33;
          *(void *)(v33 + 40) = *(void *)(v33 + 16);
          *(double *)uint64_t v33 = v31;
          *(_OWORD *)(v33 + 8) = v34;
          v33 -= 24;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 24;
      }
      while (v10 != v29);
      uint64_t v10 = v29;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_249F99D84(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v36 = *((void *)v12 + 2);
    unint64_t v35 = *((void *)v12 + 3);
    unint64_t v13 = v36 + 1;
    uint64_t v11 = v109;
    if (v36 >= v35 >> 1)
    {
      uint64_t v85 = sub_249F99D84((char *)(v35 > 1), v36 + 1, 1, v12);
      uint64_t v11 = v109;
      char v12 = v85;
    }
    *((void *)v12 + 2) = v13;
    id v37 = v12 + 32;
    int v38 = &v12[16 * v36 + 32];
    *(void *)int v38 = v14;
    *((void *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        unint64_t v39 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v44 = &v37[16 * v13];
          uint64_t v45 = *((void *)v44 - 8);
          uint64_t v46 = *((void *)v44 - 7);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_120;
          }
          uint64_t v49 = *((void *)v44 - 6);
          uint64_t v48 = *((void *)v44 - 5);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_121;
          }
          unint64_t v51 = v13 - 2;
          uint64_t v52 = &v37[16 * v13 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_123;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_126;
          }
          if (v56 >= v47)
          {
            uint64_t v74 = &v37[16 * v39];
            uint64_t v76 = *(void *)v74;
            uint64_t v75 = *((void *)v74 + 1);
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_130;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v68 = *((void *)v12 + 4);
            uint64_t v69 = *((void *)v12 + 5);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_77;
          }
          uint64_t v41 = *((void *)v12 + 4);
          uint64_t v40 = *((void *)v12 + 5);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_122;
        }
        unint64_t v51 = v13 - 2;
        __int16 v57 = &v37[16 * v13 - 32];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_125;
        }
        uint64_t v63 = &v37[16 * v39];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_128;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_129;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_83:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v62) {
          goto LABEL_124;
        }
        uint64_t v70 = &v37[16 * v39];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_127;
        }
        if (v73 < v61) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v79 = v12;
        double v80 = &v37[16 * v78];
        uint64_t v81 = *(void *)v80;
        double v82 = &v37[16 * v39];
        uint64_t v83 = *((void *)v82 + 1);
        sub_249FEE914((double *)(v11 + 24 * *(void *)v80), (double *)(v11 + 24 * *(void *)v82), v11 + 24 * v83, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v83 < v81) {
          goto LABEL_117;
        }
        if (v39 > *((void *)v79 + 2)) {
          goto LABEL_118;
        }
        *(void *)double v80 = v81;
        *(void *)&v37[16 * v78 + 8] = v83;
        unint64_t v84 = *((void *)v79 + 2);
        if (v39 >= v84) {
          goto LABEL_119;
        }
        char v12 = v79;
        unint64_t v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((void *)v79 + 2) = v84 - 1;
        uint64_t v11 = v109;
        if (v84 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v107;
    uint64_t v3 = v108;
    if (v10 >= v108)
    {
      uint64_t v9 = v106;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_24A057BB8();
  __break(1u);
  return result;
}

uint64_t sub_249FEE914(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[3 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      double v16 = (char *)&v4[3 * v11];
      uint64_t v24 = v16;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v17 = a3 - 24;
        double v18 = v6;
        while (1)
        {
          double v19 = (double *)(v17 + 24);
          double v20 = *(v18 - 3);
          v18 -= 3;
          if (*((double *)v16 - 3) >= v20)
          {
            uint64_t v24 = v16 - 24;
            if (v19 < (double *)v16 || v17 >= (unint64_t)v16 || v19 != (double *)v16)
            {
              long long v22 = *(_OWORD *)(v16 - 24);
              *(void *)(v17 + 16) = *((void *)v16 - 1);
              *(_OWORD *)unint64_t v17 = v22;
            }
            double v18 = v6;
            v16 -= 24;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v18;
              *(double *)(v17 + 16) = v18[2];
              *(_OWORD *)unint64_t v17 = v21;
            }
            uint64_t v26 = v18;
            if (v18 <= v7) {
              goto LABEL_38;
            }
          }
          v17 -= 24;
          uint64_t v6 = v18;
          if (v16 <= (char *)v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[3 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    char v12 = &v4[3 * v9];
    uint64_t v24 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            long long v15 = *(_OWORD *)v4;
            v7[2] = v4[2];
            *(_OWORD *)uint64_t v7 = v15;
          }
          v4 += 3;
          uint64_t v25 = v4;
          unint64_t v13 = v6;
        }
        else
        {
          unint64_t v13 = v6 + 3;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            long long v14 = *(_OWORD *)v6;
            v7[2] = v6[2];
            *(_OWORD *)uint64_t v7 = v14;
          }
        }
        v7 += 3;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      uint64_t v26 = v7;
    }
LABEL_38:
    sub_249F99E80((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  uint64_t result = sub_24A057C18();
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SolarSkyColorPalette(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SolarSkyColorPalette(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for SolarSkyColorPalette(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for SolarSkyColorPalette(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 8) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarSkyColorPalette(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 248;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249FEED0C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_249FEED14(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SolarSkyColorPalette()
{
  return &type metadata for SolarSkyColorPalette;
}

uint64_t sub_249FEED30()
{
  uint64_t result = sub_24A057968();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_249FEEDE8()
{
  sub_24A057408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249FEEEC0()
{
  return sub_24A057E68();
}

uint64_t sub_249FEEF10()
{
  return sub_24A057E68();
}

uint64_t sub_249FEF000(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_249F7B5E8((long long *)a1, (uint64_t)v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_249FFED80(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    swift_bridgeObjectRelease();
    return sub_249F75BD8(a2);
  }
  else
  {
    sub_249F6E790(a1, &qword_26974FB08);
    sub_249FFA390(a2, (uint64_t)v7);
    sub_249F75BD8(a2);
    return sub_249F6E790((uint64_t)v7, &qword_26974FB08);
  }
}

uint64_t sub_249FEF0C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  int64_t v9 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388](v12 - 8);
  long long v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  double v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, 1, v15) == 1)
  {
    sub_249F6E790(a1, a3);
    sub_249FFA584(a2, a4, a5, (uint64_t)v14);
    uint64_t v19 = sub_24A056268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a2, v19);
    return sub_249F6E790((uint64_t)v14, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, a1, v15);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v9;
    *int64_t v9 = 0x8000000000000000;
    sub_249FFF518((uint64_t)v18, a2, isUniquelyReferenced_nonNull_native, a4, a5);
    *int64_t v9 = v24;
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_24A056268();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a2, v22);
  }
}

uint64_t sub_249FEF304(uint64_t a1, double a2, double a3)
{
  int v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750050);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48))(a1, 1, v11, v13) == 1)
  {
    sub_249F6E790(a1, &qword_269750050);
    unint64_t v16 = sub_24A0155B8(a2, a3);
    if (v17)
    {
      unint64_t v18 = v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = *v4;
      uint64_t v24 = *v4;
      *int v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24A000AD0();
        uint64_t v20 = v24;
      }
      sub_24A003DF0(*(void *)(v20 + 56) + *(void *)(v12 + 72) * v18, (uint64_t)v10, type metadata accessor for WorldViewModel.Pin);
      sub_249FFDFE0(v18, v20);
      *int v4 = v20;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_249F6E790((uint64_t)v10, &qword_269750050);
  }
  else
  {
    sub_24A003DF0(a1, (uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v4;
    *int v4 = 0x8000000000000000;
    sub_249FFF008((uint64_t)v15, v21, a2, a3);
    *int v4 = v24;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FEF578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24) == 1)
  {
    sub_249F6E790(a1, &qword_269751180);
    sub_249FFA494(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_249F6E790((uint64_t)v9, &qword_269751180);
  }
  else
  {
    sub_249F6E664(a1, (uint64_t)v9, &qword_2697504A8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *unsigned int v3 = 0x8000000000000000;
    sub_249FFF3D4((uint64_t)v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *unsigned int v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FEF65C(uint64_t a1, char a2)
{
  unsigned int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A056238();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x270FA5388](v9);
  __n128 v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_249F6E790(a1, &qword_2697515A0);
    unint64_t v14 = sub_24A0156DC(a2);
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v3;
      uint64_t v22 = *v3;
      *unsigned int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24A001A64();
        uint64_t v18 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v18 + 56) + *(void *)(v10 + 72) * v16, v9);
      sub_249FFE3C4(v16, v18);
      *unsigned int v3 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_249F6E790((uint64_t)v8, &qword_2697515A0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *unsigned int v3 = 0x8000000000000000;
    sub_249FFF9F0((uint64_t)v13, a2, v19);
    *unsigned int v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_249FEF8B8(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751090);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScheduledTask();
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_249F6E790(a1, &qword_269751090);
    sub_249FFA770(a2, (uint64_t)v8);
    uint64_t v14 = sub_24A056268();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
    return sub_249F6E790((uint64_t)v8, &qword_269751090);
  }
  else
  {
    sub_24A003DF0(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *unsigned int v3 = 0x8000000000000000;
    sub_249FFFB58((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *unsigned int v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_24A056268();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_249FEFAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  int v38 = a3;
  uint64_t v36 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751150);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751158);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  MEMORY[0x270FA5388](v11);
  char v43 = (char *)&v35 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v21 = (os_unfair_lock_s *)(*(void *)(a1 + *(void *)(*(void *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  uint64_t v22 = *(void *)(*(void *)a1 + 120);
  char v23 = *(unsigned char *)(a1 + v22);
  if ((v23 & 1) == 0) {
    *(unsigned char *)(a1 + v22) = 1;
  }
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  uint64_t v24 = type metadata accessor for TimeString(0);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v45 = v24;
  v25(v20, 1, 1);
  if ((v23 & 1) == 0)
  {
    uint64_t v26 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
    swift_beginAccess();
    os_unfair_lock_unlock(v26);
    uint64_t v27 = swift_endAccess();
    v38(v27);
    swift_beginAccess();
    os_unfair_lock_lock(v26);
    swift_endAccess();
    ((void (*)(char *, void, uint64_t, uint64_t))v25)(v18, 0, 1, v45);
    sub_24A003F9C((uint64_t)v18, (uint64_t)v20, (uint64_t *)&unk_269751600);
  }
  uint64_t v37 = a2;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F468);
  uint64_t v29 = *(void *)(v28 - 8);
  int v38 = *(void (**)(uint64_t))(v29 + 56);
  unint64_t v39 = v20;
  uint64_t v30 = (uint64_t)v43;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38)(v43, 1, 1, v28);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  uint64_t v31 = swift_endAccess();
  MEMORY[0x270FA5388](v31);
  *(&v35 - 2) = a1;
  *(&v35 - 1) = (uint64_t)v20;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, *MEMORY[0x263F8F580], v42);
  sub_24A057678();
  ((void (*)(char *, void, uint64_t, uint64_t))v38)(v13, 0, 1, v28);
  sub_24A003F9C((uint64_t)v13, v30, &qword_269751158);
  swift_beginAccess();
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  uint64_t v32 = v44;
  sub_249F6E6C8(v30, v44, &qword_269751158);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28);
  uint64_t v34 = (uint64_t)v39;
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v36, v32, v28);
    sub_249F6E790(v30, &qword_269751158);
    sub_249F6E790(v34, (uint64_t *)&unk_269751600);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FEFFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751020);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  int v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751028);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v41 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v33 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEB0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a1 + *(void *)(*(void *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v21 = *(void *)(*(void *)a1 + 120);
  char v22 = *(unsigned char *)(a1 + v21);
  if ((v22 & 1) == 0) {
    *(unsigned char *)(a1 + v21) = 1;
  }
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v19, 1, 1, v23);
  if ((v22 & 1) == 0)
  {
    sub_24A007DC0(a2, (uint64_t)v16);
    v24(v16, 0, 1, v23);
    sub_24A003F9C((uint64_t)v16, (uint64_t)v19, &qword_26974FEB0);
  }
  uint64_t v35 = a2;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697516A0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v36(v13, 1, 1, v25);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v27 = swift_endAccess();
  __n128 v28 = MEMORY[0x270FA5388](v27);
  *(&v33 - 2) = a1;
  *(&v33 - 1) = v29;
  uint64_t v33 = v29;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v38, *MEMORY[0x263F8F580], v40, v28);
  uint64_t v30 = (uint64_t)v37;
  sub_24A057678();
  v36((char *)v30, 0, 1, v25);
  sub_24A003F9C(v30, (uint64_t)v13, &qword_269751028);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v31 = v41;
  sub_249F6E6C8((uint64_t)v13, v41, &qword_269751028);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v34, v31, v25);
    sub_249F6E790((uint64_t)v13, &qword_269751028);
    sub_249F6E790(v33, &qword_26974FEB0);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF04BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v36 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751020);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751028);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v40 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEB0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a1 + *(void *)(*(void *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v21 = *(void *)(*(void *)a1 + 120);
  char v22 = *(unsigned char *)(a1 + v21);
  if ((v22 & 1) == 0) {
    *(unsigned char *)(a1 + v21) = 1;
  }
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v42 = v23;
  v24(v19, 1, 1);
  char v43 = v19;
  if ((v22 & 1) == 0)
  {
    uint64_t v25 = *(void **)(v41 + 40);
    uint64_t v26 = (os_unfair_lock_s *)(v25[2] + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v26);
    uint64_t v27 = (uint64_t)v25 + *(void *)(*v25 + 96);
    swift_beginAccess();
    sub_249F6E6C8(v27, (uint64_t)v16, &qword_2697515A0);
    os_unfair_lock_unlock(v26);
    swift_endAccess();
    swift_release();
    ((void (*)(char *, void, uint64_t, uint64_t))v24)(v16, 0, 1, v42);
    sub_24A003F9C((uint64_t)v16, (uint64_t)v43, &qword_26974FEB0);
  }
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697516A0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v30(v13, 1, 1, v28);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v31 = swift_endAccess();
  __n128 v32 = MEMORY[0x270FA5388](v31);
  uint64_t v33 = (uint64_t)v43;
  *(&v36 - 2) = a1;
  *(&v36 - 1) = v33;
  (*(void (**)(char *, void, uint64_t, __n128))(v38 + 104))(v37, *MEMORY[0x263F8F580], v39, v32);
  sub_24A057678();
  v30(v10, 0, 1, v28);
  sub_24A003F9C((uint64_t)v10, (uint64_t)v13, &qword_269751028);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v34 = v40;
  sub_249F6E6C8((uint64_t)v13, v40, &qword_269751028);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v36, v34, v28);
    sub_249F6E790((uint64_t)v13, &qword_269751028);
    sub_249F6E790((uint64_t)v43, &qword_26974FEB0);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF09F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510A0);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510A8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = (char *)&v35 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF20);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a1 + *(void *)(*(void *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v21 = *(void *)(*(void *)a1 + 120);
  char v22 = *(unsigned char *)(a1 + v21);
  if ((v22 & 1) == 0) {
    *(unsigned char *)(a1 + v21) = 1;
  }
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v19, 1, 1, v23);
  if ((v22 & 1) == 0)
  {
    sub_249FA1034();
    sub_249FA130C();
    uint64_t v25 = type metadata accessor for Alarm();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v16, 1, 1, v25);
    v24(v16, 0, 1, v23);
    sub_24A003F9C((uint64_t)v16, (uint64_t)v19, &qword_26974FF20);
  }
  uint64_t v38 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF28);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v40 = v13;
  v39(v13, 1, 1, v26);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v28 = swift_endAccess();
  __n128 v29 = MEMORY[0x270FA5388](v28);
  *(&v35 - 2) = a1;
  *(&v35 - 1) = (uint64_t)v19;
  uint64_t v36 = v19;
  (*(void (**)(char *, void, uint64_t, __n128))(v43 + 104))(v42, *MEMORY[0x263F8F580], v44, v29);
  uint64_t v30 = v41;
  sub_24A057678();
  v39(v30, 0, 1, v26);
  uint64_t v31 = (uint64_t)v30;
  uint64_t v32 = (uint64_t)v40;
  sub_24A003F9C(v31, (uint64_t)v40, &qword_2697510A8);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v33 = v45;
  sub_249F6E6C8(v32, v45, &qword_2697510A8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v33, 1, v26);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v37, v33, v26);
    sub_249F6E790(v32, &qword_2697510A8);
    sub_249F6E790((uint64_t)v36, &qword_26974FF20);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF0EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751280);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751288);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v49 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v45 = (char *)&v41 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_24A056238();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (os_unfair_lock_s *)(*(void *)(a1 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  char v22 = *(unsigned char *)(a1 + 64);
  if ((v22 & 1) == 0) {
    *(unsigned char *)(a1 + 64) = 1;
  }
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  long long v50 = xmmword_24A05C6A0;
  uint64_t v51 = 0;
  char v52 = 0;
  if ((v22 & 1) == 0)
  {
    uint64_t v44 = v15;
    uint64_t v23 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask;
    if (!*(void *)(a2 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask))
    {
      uint64_t v24 = sub_24A057628();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 1, 1, v24);
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      uint64_t v26 = (void *)swift_allocObject();
      v26[2] = 0;
      v26[3] = 0;
      v26[4] = v25;
      *(void *)(a2 + v23) = sub_24A039A1C((uint64_t)v20, (uint64_t)&unk_2697503D0, (uint64_t)v26);
      swift_release();
    }
    uint64_t v27 = v14;
    if (qword_26974F328 != -1) {
      swift_once();
    }
    sub_24A006BDC((uint64_t)v17);
    BOOL v28 = sub_24A04B2D4();
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    char v34 = v33;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v27);
    *(void *)&long long v50 = v28;
    *((void *)&v50 + 1) = v30;
    uint64_t v51 = v32;
    char v52 = v34;
  }
  uint64_t v43 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750120);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v44 = *(void *)(v36 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v44)(v13, 1, 1, v35);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  uint64_t v37 = swift_endAccess();
  MEMORY[0x270FA5388](v37);
  *(&v41 - 2) = a1;
  *(&v41 - 1) = (uint64_t)&v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751290);
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, *MEMORY[0x263F8F580], v48);
  uint64_t v38 = (uint64_t)v45;
  sub_24A057678();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v44)(v38, 0, 1, v35);
  sub_24A003F9C(v38, (uint64_t)v13, &qword_269751288);
  swift_beginAccess();
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  uint64_t v39 = v49;
  sub_249F6E6C8((uint64_t)v13, v49, &qword_269751288);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v39, 1, v35);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v42, v39, v35);
    sub_249F6E790((uint64_t)v13, &qword_269751288);
    sub_249F9C378(v50, *((uint64_t *)&v50 + 1));
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF14D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751248);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751250);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v32 = (char *)v30 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v30 - v16;
  uint64_t v18 = (os_unfair_lock_s *)(*(void *)(a1 + 24) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v18);
  char v19 = *(unsigned char *)(a1 + 40);
  v30[0] = a3;
  v30[1] = a2;
  uint64_t v34 = v6;
  uint64_t v35 = v12;
  uint64_t v33 = v7;
  if (v19)
  {
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    uint64_t v20 = 1;
  }
  else
  {
    *(unsigned char *)(a1 + 40) = 1;
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    uint64_t v36 = 1;
    sub_24A022ABC();
    uint64_t v21 = *(void *)(a2 + 32);
    char v22 = (os_unfair_lock_s *)(*(void *)(v21 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v22);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v21 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v22);
    swift_endAccess();
    swift_release();
  }
  uint64_t v36 = v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750110);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v25 = (uint64_t)v17;
  v31(v17, 1, 1, v23);
  swift_beginAccess();
  os_unfair_lock_lock(v18);
  uint64_t v26 = swift_endAccess();
  MEMORY[0x270FA5388](v26);
  v30[-2] = a1;
  v30[-1] = &v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751258);
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v9, *MEMORY[0x263F8F580], v34);
  uint64_t v27 = (uint64_t)v32;
  sub_24A057678();
  v31((char *)v27, 0, 1, v23);
  sub_24A003F9C(v27, v25, &qword_269751250);
  swift_beginAccess();
  os_unfair_lock_unlock(v18);
  swift_endAccess();
  uint64_t v28 = (uint64_t)v35;
  sub_249F6E6C8(v25, (uint64_t)v35, &qword_269751250);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v28, 1, v23);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v24 + 32))(v30[0], v28, v23);
    sub_249F6E790(v25, &qword_269751250);
    sub_249F9BA08(v36);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF1920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751208);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751210);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v41 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v33 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750AA8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  char v19 = (char *)&v33 - v18;
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a1 + *(void *)(*(void *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v21 = *(void *)(*(void *)a1 + 120);
  char v22 = *(unsigned char *)(a1 + v21);
  if ((v22 & 1) == 0) {
    *(unsigned char *)(a1 + v21) = 1;
  }
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v19, 1, 1, v23);
  if ((v22 & 1) == 0)
  {
    sub_249FA55CC(a2, (uint64_t)v16);
    v24(v16, 0, 1, v23);
    sub_24A003F9C((uint64_t)v16, (uint64_t)v19, &qword_269750AA8);
  }
  uint64_t v35 = a2;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750AB0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v36(v13, 1, 1, v25);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  uint64_t v27 = swift_endAccess();
  __n128 v28 = MEMORY[0x270FA5388](v27);
  *(&v33 - 2) = a1;
  *(&v33 - 1) = v29;
  uint64_t v33 = v29;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v38, *MEMORY[0x263F8F580], v40, v28);
  uint64_t v30 = (uint64_t)v37;
  sub_24A057678();
  v36((char *)v30, 0, 1, v25);
  sub_24A003F9C(v30, (uint64_t)v13, &qword_269751210);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  uint64_t v31 = v41;
  sub_249F6E6C8((uint64_t)v13, v41, &qword_269751210);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v34, v31, v25);
    sub_249F6E790((uint64_t)v13, &qword_269751210);
    sub_249F6E790(v33, &qword_269750AA8);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF1DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v48) = a4;
  v39[0] = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751198);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697511A0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v47 = (uint64_t)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v42 = (char *)v39 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v46 = (char *)v39 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v39 - v20;
  char v22 = (os_unfair_lock_s *)(*(void *)(a1 + *(void *)(*(void *)a1 + 104)) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v22);
  uint64_t v23 = *(void *)(*(void *)a1 + 120);
  char v24 = *(unsigned char *)(a1 + v23);
  if ((v24 & 1) == 0) {
    *(unsigned char *)(a1 + v23) = 1;
  }
  os_unfair_lock_unlock(v22);
  swift_endAccess();
  uint64_t v25 = sub_24A056238();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v21, 1, 1, v25);
  if ((v24 & 1) == 0)
  {
    swift_retain();
    sub_249FF9FB0(a2, a3, v48, (uint64_t)v18);
    v26(v18, 0, 1, v25);
    sub_24A003F9C((uint64_t)v18, (uint64_t)v21, &qword_2697515A0);
  }
  uint64_t v48 = a3;
  v39[1] = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503E0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v41 = v21;
  uint64_t v29 = v21;
  uint64_t v30 = (uint64_t)v46;
  v40(v46, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v22);
  uint64_t v31 = swift_endAccess();
  __n128 v32 = MEMORY[0x270FA5388](v31);
  v39[-2] = a1;
  v39[-1] = v29;
  (*(void (**)(char *, void, uint64_t, __n128))(v44 + 104))(v43, *MEMORY[0x263F8F580], v45, v32);
  uint64_t v33 = (uint64_t)v42;
  sub_24A057678();
  v40((char *)v33, 0, 1, v27);
  uint64_t v34 = v30;
  sub_24A003F9C(v33, v30, &qword_2697511A0);
  swift_beginAccess();
  os_unfair_lock_unlock(v22);
  swift_endAccess();
  uint64_t v35 = v47;
  sub_249F6E6C8(v30, v47, &qword_2697511A0);
  int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v35, 1, v27);
  uint64_t v37 = (uint64_t)v41;
  if (v36 == 1)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v28 + 32))(v39[0], v35, v27);
    sub_249F6E790(v34, &qword_2697511A0);
    sub_249F6E790(v37, &qword_2697515A0);
    swift_release_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF22EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v33 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751118);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = type metadata accessor for TimeString(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v30 - v19;
  MEMORY[0x270FA5388](v18);
  char v22 = (char *)&v30 - v21;
  uint64_t v23 = *(void *)(*(void *)a2 + 96);
  uint64_t v34 = a2;
  uint64_t v24 = a2 + v23;
  swift_beginAccess();
  sub_249F6E6C8(v24, (uint64_t)v12, (uint64_t *)&unk_269751600);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_249F6E790((uint64_t)v12, (uint64_t *)&unk_269751600);
    sub_249F6E6C8(v30, (uint64_t)v10, (uint64_t *)&unk_269751600);
    int v26 = v25(v10, 1, v13);
    uint64_t v27 = v33;
    if (v26 == 1)
    {
      sub_249F6E790((uint64_t)v10, (uint64_t *)&unk_269751600);
    }
    else
    {
      sub_24A003DF0((uint64_t)v10, (uint64_t)v17, type metadata accessor for TimeString);
      sub_24A003BA4((uint64_t)v17, (uint64_t)v20, type metadata accessor for TimeString);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269751120);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
      sub_249FF4188((uint64_t)v17);
      sub_24A003D90((uint64_t)v17, type metadata accessor for TimeString);
    }
  }
  else
  {
    sub_24A003DF0((uint64_t)v12, (uint64_t)v22, type metadata accessor for TimeString);
    sub_24A003BA4((uint64_t)v22, (uint64_t)v20, type metadata accessor for TimeString);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751120);
    uint64_t v28 = v33;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
    sub_24A003D90((uint64_t)v22, type metadata accessor for TimeString);
    uint64_t v27 = v28;
  }
  return sub_249FF77A4(v27);
}

uint64_t sub_249FF26DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v37 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751030);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEB0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v24 = *(void *)(*(void *)a2 + 96);
  uint64_t v38 = a2;
  uint64_t v25 = a2 + v24;
  swift_beginAccess();
  sub_249F6E6C8(v25, (uint64_t)v13, &qword_26974FEB0);
  int v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v26(v13, 1, v14) == 1)
  {
    uint64_t v27 = v36;
    sub_249F6E790((uint64_t)v13, &qword_26974FEB0);
    sub_249F6E6C8(v34, (uint64_t)v10, &qword_26974FEB0);
    int v28 = v26(v10, 1, v14);
    uint64_t v29 = v37;
    if (v28 == 1)
    {
      uint64_t v30 = &qword_26974FEB0;
      uint64_t v31 = (uint64_t)v10;
    }
    else
    {
      sub_249F6E664((uint64_t)v10, (uint64_t)v17, &qword_2697515A0);
      sub_249F6E6C8((uint64_t)v17, (uint64_t)v20, &qword_2697515A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269751038);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v35);
      sub_249FF4E7C((uint64_t)v17);
      uint64_t v31 = (uint64_t)v17;
      uint64_t v30 = &qword_2697515A0;
    }
    sub_249F6E790(v31, v30);
  }
  else
  {
    sub_249F6E664((uint64_t)v13, (uint64_t)v23, &qword_2697515A0);
    sub_249F6E6C8((uint64_t)v23, (uint64_t)v20, &qword_2697515A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751038);
    uint64_t v32 = v37;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v35);
    sub_249F6E790((uint64_t)v23, &qword_2697515A0);
    uint64_t v29 = v32;
  }
  return sub_249FF7AA4(v29);
}

uint64_t sub_249FF2A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v37 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v24 = *(void *)(*(void *)a2 + 96);
  uint64_t v38 = a2;
  uint64_t v25 = a2 + v24;
  swift_beginAccess();
  sub_249F6E6C8(v25, (uint64_t)v13, &qword_26974FF20);
  int v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v26(v13, 1, v14) == 1)
  {
    uint64_t v27 = v36;
    sub_249F6E790((uint64_t)v13, &qword_26974FF20);
    sub_249F6E6C8(v34, (uint64_t)v10, &qword_26974FF20);
    int v28 = v26(v10, 1, v14);
    uint64_t v29 = v37;
    if (v28 == 1)
    {
      uint64_t v30 = &qword_26974FF20;
      uint64_t v31 = (uint64_t)v10;
    }
    else
    {
      sub_249F6E664((uint64_t)v10, (uint64_t)v17, &qword_26974FF18);
      sub_249F6E6C8((uint64_t)v17, (uint64_t)v20, &qword_26974FF18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697510C8);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v35);
      sub_249FF561C((uint64_t)v17);
      uint64_t v31 = (uint64_t)v17;
      uint64_t v30 = &qword_26974FF18;
    }
    sub_249F6E790(v31, v30);
  }
  else
  {
    sub_249F6E664((uint64_t)v13, (uint64_t)v23, &qword_26974FF18);
    sub_249F6E6C8((uint64_t)v23, (uint64_t)v20, &qword_26974FF18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697510C8);
    uint64_t v32 = v37;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v35);
    sub_249F6E790((uint64_t)v23, &qword_26974FF18);
    uint64_t v29 = v32;
  }
  return sub_249FF7DA4(v29);
}

uint64_t sub_249FF2E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503F0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 24);
  if (v10 == 1)
  {
    uint64_t v11 = *(void *)(a3 + 8);
    if (v11 != 1)
    {
      uint64_t v12 = *(void *)(a3 + 16);
      char v14 = *(unsigned char *)(a3 + 24);
      uint64_t v19 = *(void *)a3;
      uint64_t v13 = v19;
      uint64_t v20 = v11;
      uint64_t v21 = v12;
      char v22 = v14;
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697503F8);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_249FF5DC0(v13, v11, v12, v14);
      sub_249F9C378(v13, v11);
    }
  }
  else
  {
    char v15 = *(unsigned char *)(a2 + 40);
    uint64_t v16 = *(void *)(a2 + 32);
    uint64_t v19 = *(void *)(a2 + 16);
    uint64_t v20 = v10;
    uint64_t v21 = v16;
    char v22 = v15;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697503F8);
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_249FF80A4(a1);
}

uint64_t sub_249FF3008(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751260);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  if (*(void *)(a2 + 16) == 1)
  {
    uint64_t v11 = *a3;
    if (v11 != 1)
    {
      uint64_t v18 = v11;
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269751268);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v12 = *v10;
      if (*v10)
      {
        if (v12 != 1 && v11)
        {
          sub_24A003F34(v11);
          sub_24A003F34(v12);
          char v13 = sub_24A026200(v12, v11);
          sub_249F9BA08(v11);
          sub_249F9BA08(v12);
          if (v13)
          {
LABEL_12:
            uint64_t v15 = v11;
LABEL_13:
            sub_249F9BA08(v15);
            return sub_249FF8394(a1);
          }
          uint64_t v12 = *v10;
        }
      }
      else
      {
        if (!v11)
        {
          sub_249F9BA08(0);
          uint64_t v15 = 0;
          goto LABEL_13;
        }
        uint64_t v12 = 0;
      }
      *(void *)(a2 + 16) = v11;
      swift_bridgeObjectRetain();
      sub_249F9BA08(v12);
      swift_beginAccess();
      swift_retain();
      uint64_t v14 = swift_bridgeObjectRetain();
      sub_24A0265E4(v14, a2);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751268);
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_249FF8394(a1);
}

uint64_t sub_249FF3254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v33 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751068);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697520E0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = type metadata accessor for CurrentLocationResult(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - v18;
  MEMORY[0x270FA5388](v20);
  char v22 = (char *)&v30 - v21;
  uint64_t v23 = *(void *)(*(void *)a2 + 96);
  uint64_t v34 = a2;
  uint64_t v24 = a2 + v23;
  swift_beginAccess();
  sub_249F6E6C8(v24, (uint64_t)v12, &qword_2697520E0);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_249F6E790((uint64_t)v12, &qword_2697520E0);
    sub_249F6E6C8(v30, (uint64_t)v9, &qword_2697520E0);
    int v26 = v25(v9, 1, v13);
    uint64_t v27 = v33;
    if (v26 == 1)
    {
      sub_249F6E790((uint64_t)v9, &qword_2697520E0);
    }
    else
    {
      sub_24A003DF0((uint64_t)v9, (uint64_t)v16, type metadata accessor for CurrentLocationResult);
      sub_24A003BA4((uint64_t)v16, (uint64_t)v19, type metadata accessor for CurrentLocationResult);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269751070);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
      sub_249FF5F04((uint64_t)v16);
      sub_24A003D90((uint64_t)v16, type metadata accessor for CurrentLocationResult);
    }
  }
  else
  {
    sub_24A003DF0((uint64_t)v12, (uint64_t)v22, type metadata accessor for CurrentLocationResult);
    sub_24A003BA4((uint64_t)v22, (uint64_t)v19, type metadata accessor for CurrentLocationResult);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751070);
    uint64_t v28 = v33;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
    sub_24A003D90((uint64_t)v22, type metadata accessor for CurrentLocationResult);
    uint64_t v27 = v28;
  }
  return sub_249FF8684(v27);
}

uint64_t sub_249FF3644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v37 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751228);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750AA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v24 = *(void *)(*(void *)a2 + 96);
  uint64_t v38 = a2;
  uint64_t v25 = a2 + v24;
  swift_beginAccess();
  sub_249F6E6C8(v25, (uint64_t)v13, &qword_269750AA8);
  int v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v26(v13, 1, v14) == 1)
  {
    uint64_t v27 = v36;
    sub_249F6E790((uint64_t)v13, &qword_269750AA8);
    sub_249F6E6C8(v34, (uint64_t)v10, &qword_269750AA8);
    int v28 = v26(v10, 1, v14);
    uint64_t v29 = v37;
    if (v28 == 1)
    {
      uint64_t v30 = &qword_269750AA8;
      uint64_t v31 = (uint64_t)v10;
    }
    else
    {
      sub_249F6E664((uint64_t)v10, (uint64_t)v17, &qword_2697503D8);
      sub_249F6E6C8((uint64_t)v17, (uint64_t)v20, &qword_2697503D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269751230);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v35);
      sub_249FF63B0((uint64_t)v17);
      uint64_t v31 = (uint64_t)v17;
      uint64_t v30 = &qword_2697503D8;
    }
    sub_249F6E790(v31, v30);
  }
  else
  {
    sub_249F6E664((uint64_t)v13, (uint64_t)v23, &qword_2697503D8);
    sub_249F6E6C8((uint64_t)v23, (uint64_t)v20, &qword_2697503D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751230);
    uint64_t v32 = v37;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v35);
    sub_249F6E790((uint64_t)v23, &qword_2697503D8);
    uint64_t v29 = v32;
  }
  return sub_249FF8984(v29);
}

uint64_t sub_249FF39E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v36 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751138);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = sub_24A056238();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v31 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v31 - v21;
  uint64_t v23 = *(void *)(*(void *)a2 + 96);
  uint64_t v37 = a2;
  uint64_t v24 = a2 + v23;
  swift_beginAccess();
  sub_249F6E6C8(v24, (uint64_t)v12, &qword_2697515A0);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    uint64_t v32 = v16;
    sub_249F6E790((uint64_t)v12, &qword_2697515A0);
    sub_249F6E6C8(v33, (uint64_t)v9, &qword_2697515A0);
    int v26 = v25(v9, 1, v13);
    uint64_t v27 = v36;
    if (v26 == 1)
    {
      sub_249F6E790((uint64_t)v9, &qword_2697515A0);
    }
    else
    {
      uint64_t v29 = (uint64_t)v32;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v32, v9, v13);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v29, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269751140);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v35);
      sub_249FF6B0C(v29);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v29, v13);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v22, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751140);
    uint64_t v28 = v36;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v35);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    uint64_t v27 = v28;
  }
  return sub_249FF8C84(v27);
}

uint64_t sub_249FF3DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v37 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697511E8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CA8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v34 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v24 = *(void *)(*(void *)a2 + 96);
  uint64_t v38 = a2;
  uint64_t v25 = a2 + v24;
  swift_beginAccess();
  sub_249F6E6C8(v25, (uint64_t)v13, &qword_269750CA8);
  int v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v26(v13, 1, v14) == 1)
  {
    uint64_t v27 = v36;
    sub_249F6E790((uint64_t)v13, &qword_269750CA8);
    sub_249F6E6C8(v34, (uint64_t)v10, &qword_269750CA8);
    int v28 = v26(v10, 1, v14);
    uint64_t v29 = v37;
    if (v28 == 1)
    {
      uint64_t v30 = &qword_269750CA8;
      uint64_t v31 = (uint64_t)v10;
    }
    else
    {
      sub_249F6E664((uint64_t)v10, (uint64_t)v17, &qword_269750C48);
      sub_249F6E6C8((uint64_t)v17, (uint64_t)v20, &qword_269750C48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697511F0);
      sub_24A057648();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v35);
      sub_249FF700C((uint64_t)v17);
      uint64_t v31 = (uint64_t)v17;
      uint64_t v30 = &qword_269750C48;
    }
    sub_249F6E790(v31, v30);
  }
  else
  {
    sub_249F6E664((uint64_t)v13, (uint64_t)v23, &qword_269750C48);
    sub_249F6E6C8((uint64_t)v23, (uint64_t)v20, &qword_269750C48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697511F0);
    uint64_t v32 = v37;
    sub_24A057648();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v35);
    sub_249F6E790((uint64_t)v23, &qword_269750C48);
    uint64_t v29 = v32;
  }
  return sub_249FF8F84(v29);
}

uint64_t sub_249FF4188(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TimeString(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (void **)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751110);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v33 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v32 = (uint64_t)&v30 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (void **)((char *)&v30 - v16);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v34 = a1;
  sub_24A003BA4(a1, (uint64_t)v19, type metadata accessor for TimeString);
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
  v31(v19, 0, 1, v3);
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_249F6E6C8(v20, (uint64_t)v9, (uint64_t *)&unk_269751600);
  sub_249F6E6C8((uint64_t)v19, v21, (uint64_t *)&unk_269751600);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_249F6E790((uint64_t)v19, (uint64_t *)&unk_269751600);
    if (v22(v21, 1, v3) == 1) {
      return sub_249F6E790((uint64_t)v9, (uint64_t *)&unk_269751600);
    }
  }
  else
  {
    sub_249F6E6C8((uint64_t)v9, (uint64_t)v17, (uint64_t *)&unk_269751600);
    if (v22(v21, 1, v3) != 1)
    {
      uint64_t v24 = v30;
      sub_24A003DF0(v21, (uint64_t)v30, type metadata accessor for TimeString);
      char v25 = _s11ClockPoster10TimeStringV2eeoiySbAC_ACtFZ_0(v17, v24);
      sub_24A003D90((uint64_t)v24, type metadata accessor for TimeString);
      sub_249F6E790((uint64_t)v19, (uint64_t *)&unk_269751600);
      sub_24A003D90((uint64_t)v17, type metadata accessor for TimeString);
      uint64_t result = sub_249F6E790((uint64_t)v9, (uint64_t *)&unk_269751600);
      if (v25) {
        return result;
      }
      goto LABEL_8;
    }
    sub_249F6E790((uint64_t)v19, (uint64_t *)&unk_269751600);
    sub_24A003D90((uint64_t)v17, type metadata accessor for TimeString);
  }
  sub_249F6E790((uint64_t)v9, &qword_269751110);
LABEL_8:
  uint64_t v26 = v32;
  sub_24A003BA4(v34, v32, type metadata accessor for TimeString);
  v31((char *)v26, 0, 1, v3);
  uint64_t v27 = v26;
  uint64_t v28 = v33;
  sub_249F6E664(v27, v33, (uint64_t *)&unk_269751600);
  swift_beginAccess();
  sub_24A003F9C(v28, v20, (uint64_t *)&unk_269751600);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_24A0022C8(v29, v1);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_249FF4634(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for City();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510E0);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510E8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v56 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  BOOL v60 = (char *)&v53 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510F0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510F8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v67 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v66 = (uint64_t)&v53 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v53 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = *(void *)(*(void *)v1 + 96);
  uint64_t v64 = v1;
  uint64_t v26 = v1 + v25;
  swift_beginAccess();
  uint64_t v68 = a1;
  sub_249F6E6C8(a1, (uint64_t)v24, &qword_2697510E8);
  uint64_t v65 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  v65(v24, 0, 1, v6);
  uint64_t v27 = v6;
  uint64_t v28 = (uint64_t)&v14[*(int *)(v12 + 56)];
  uint64_t v63 = v26;
  sub_249F6E6C8(v26, (uint64_t)v14, &qword_2697510F8);
  sub_249F6E6C8((uint64_t)v24, v28, &qword_2697510F8);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v29((uint64_t)v14, 1, v27) == 1)
  {
    sub_249F6E790((uint64_t)v24, &qword_2697510F8);
    if (v29(v28, 1, v27) == 1) {
      return sub_249F6E790((uint64_t)v14, &qword_2697510F8);
    }
    uint64_t v59 = v27;
    uint64_t v34 = &qword_2697510F0;
    uint64_t v36 = (uint64_t)v14;
    goto LABEL_23;
  }
  uint64_t v53 = v7 + 56;
  uint64_t v31 = (uint64_t)v61;
  uint64_t v32 = v62;
  uint64_t v33 = (uint64_t)v60;
  uint64_t v54 = v14;
  sub_249F6E6C8((uint64_t)v14, (uint64_t)v22, &qword_2697510F8);
  uint64_t v59 = v27;
  if (v29(v28, 1, v27) == 1)
  {
    uint64_t v34 = &qword_2697510F0;
    uint64_t v35 = (uint64_t)v22;
    uint64_t v36 = (uint64_t)v54;
LABEL_22:
    sub_249F6E790((uint64_t)v24, &qword_2697510F8);
    sub_249F6E790(v35, &qword_2697510E8);
LABEL_23:
    sub_249F6E790(v36, v34);
    goto LABEL_24;
  }
  uint64_t v37 = v33;
  sub_249F6E664(v28, v33, &qword_2697510E8);
  uint64_t v38 = v31;
  uint64_t v39 = v31 + *(int *)(v32 + 48);
  sub_249F6E6C8((uint64_t)v22, v31, &qword_2697510E8);
  sub_249F6E6C8(v33, v39, &qword_2697510E8);
  uint64_t v40 = v58;
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  int v42 = v41(v31, 1, v58);
  uint64_t v35 = (uint64_t)v22;
  if (v42 == 1)
  {
    if (v41(v39, 1, v40) == 1)
    {
      sub_249F6E790(v38, &qword_2697510E8);
      sub_249F6E790(v37, &qword_2697510E8);
      sub_249F6E790((uint64_t)v24, &qword_2697510F8);
      sub_249F6E790((uint64_t)v22, &qword_2697510E8);
      return sub_249F6E790((uint64_t)v54, &qword_2697510F8);
    }
    uint64_t v44 = &qword_2697510E0;
    uint64_t v36 = (uint64_t)v54;
    goto LABEL_21;
  }
  uint64_t v43 = v56;
  sub_249F6E6C8(v38, (uint64_t)v56, &qword_2697510E8);
  if (v41(v39, 1, v40) == 1)
  {
    uint64_t v44 = &qword_2697510E0;
    uint64_t v36 = (uint64_t)v54;
LABEL_20:
    sub_24A003D90((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for City);
LABEL_21:
    sub_249F6E790(v38, v44);
    sub_249F6E790(v37, &qword_2697510E8);
    uint64_t v34 = &qword_2697510F8;
    goto LABEL_22;
  }
  uint64_t v45 = v55;
  sub_24A003DF0(v39, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for City);
  uint64_t v36 = (uint64_t)v54;
  if ((*v43 != *v45 || v43[1] != v45[1]) && (sub_24A057D48() & 1) == 0
    || (sub_249FCFCA0(0, (unint64_t *)&qword_269752090), (sub_24A057938() & 1) == 0))
  {
    sub_24A003D90((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for City);
    uint64_t v44 = &qword_2697510E8;
    goto LABEL_20;
  }
  char v46 = MEMORY[0x24C5B7BF0]((char *)v43 + *(int *)(v40 + 24), (char *)v45 + *(int *)(v40 + 24));
  sub_24A003D90((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for City);
  sub_24A003D90((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for City);
  sub_249F6E790(v38, &qword_2697510E8);
  sub_249F6E790(v37, &qword_2697510E8);
  sub_249F6E790((uint64_t)v24, &qword_2697510F8);
  sub_249F6E790(v35, &qword_2697510E8);
  uint64_t result = sub_249F6E790(v36, &qword_2697510F8);
  if ((v46 & 1) == 0)
  {
LABEL_24:
    uint64_t v47 = v66;
    sub_249F6E6C8(v68, v66, &qword_2697510E8);
    v65((char *)v47, 0, 1, v59);
    uint64_t v48 = v47;
    uint64_t v49 = v67;
    sub_249F6E664(v48, v67, &qword_2697510F8);
    uint64_t v50 = v63;
    swift_beginAccess();
    sub_24A003F9C(v49, v50, &qword_2697510F8);
    swift_endAccess();
    uint64_t v51 = v64;
    swift_beginAccess();
    swift_retain();
    uint64_t v52 = swift_bridgeObjectRetain();
    sub_24A002840(v52, v51, &qword_269751100, &qword_2697510F8, &qword_2697510E8, &qword_269751108);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF4E7C(uint64_t a1)
{
  uint64_t v3 = sub_24A056238();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_269751040);
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v54 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (uint64_t)&v52 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751048);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FEB0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v64 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v63 = (uint64_t)&v52 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v52 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v52 - v24;
  uint64_t v26 = *(void *)(*(void *)v1 + 96);
  uint64_t v61 = v1;
  uint64_t v27 = v1 + v26;
  swift_beginAccess();
  uint64_t v65 = a1;
  sub_249F6E6C8(a1, (uint64_t)v25, &qword_2697515A0);
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
  uint64_t v60 = v8 + 56;
  v28(v25, 0, 1, v7);
  uint64_t v29 = (uint64_t)&v15[*(int *)(v13 + 56)];
  uint64_t v62 = v27;
  uint64_t v30 = v27;
  uint64_t v31 = v7;
  sub_249F6E6C8(v30, (uint64_t)v15, &qword_26974FEB0);
  sub_249F6E6C8((uint64_t)v25, v29, &qword_26974FEB0);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v32((uint64_t)v15, 1, v7) == 1)
  {
    sub_249F6E790((uint64_t)v25, &qword_26974FEB0);
    if (v32(v29, 1, v7) == 1)
    {
      uint64_t v33 = (uint64_t)v15;
      return sub_249F6E790(v33, &qword_26974FEB0);
    }
    uint64_t v34 = &qword_269751048;
    goto LABEL_15;
  }
  sub_249F6E6C8((uint64_t)v15, (uint64_t)v23, &qword_26974FEB0);
  if (v32(v29, 1, v7) == 1)
  {
    uint64_t v34 = &qword_269751048;
LABEL_14:
    sub_249F6E790((uint64_t)v25, &qword_26974FEB0);
    sub_249F6E790((uint64_t)v23, &qword_2697515A0);
LABEL_15:
    sub_249F6E790((uint64_t)v15, v34);
LABEL_16:
    uint64_t v42 = v63;
    sub_249F6E6C8(v65, v63, &qword_2697515A0);
    v28((char *)v42, 0, 1, v31);
    uint64_t v43 = v42;
    uint64_t v44 = v64;
    sub_249F6E664(v43, v64, &qword_26974FEB0);
    uint64_t v45 = v62;
    swift_beginAccess();
    sub_24A003F9C(v44, v45, &qword_26974FEB0);
    swift_endAccess();
    uint64_t v46 = v61;
    swift_beginAccess();
    swift_retain();
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_24A002840(v47, v46, &qword_269751030, &qword_26974FEB0, &qword_2697515A0, &qword_269751038);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v52 = v28;
  uint64_t v35 = v59;
  sub_249F6E664(v29, v59, &qword_2697515A0);
  uint64_t v36 = v58;
  uint64_t v37 = v58 + *((int *)v55 + 12);
  uint64_t v55 = v23;
  sub_249F6E6C8((uint64_t)v23, v58, &qword_2697515A0);
  sub_249F6E6C8(v35, v37, &qword_2697515A0);
  uint64_t v38 = v56;
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v39(v36, 1, v56) == 1)
  {
    if (v39(v37, 1, v38) == 1)
    {
      sub_249F6E790(v58, &qword_2697515A0);
      sub_249F6E790(v59, &qword_2697515A0);
      sub_249F6E790((uint64_t)v25, &qword_26974FEB0);
      sub_249F6E790((uint64_t)v55, &qword_2697515A0);
      uint64_t v33 = (uint64_t)v15;
      return sub_249F6E790(v33, &qword_26974FEB0);
    }
    goto LABEL_13;
  }
  uint64_t v41 = v54;
  sub_249F6E6C8(v36, v54, &qword_2697515A0);
  if (v39(v37, 1, v38) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v41, v38);
LABEL_13:
    sub_249F6E790(v58, &qword_269751040);
    sub_249F6E790(v59, &qword_2697515A0);
    uint64_t v34 = &qword_26974FEB0;
    uint64_t v28 = v52;
    uint64_t v23 = v55;
    goto LABEL_14;
  }
  uint64_t v48 = v57;
  uint64_t v49 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v53, v37, v38);
  sub_24A0034F8(&qword_26974FC20, MEMORY[0x263F07490]);
  char v50 = sub_24A057358();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v48 + 8);
  v51(v49, v38);
  v51((char *)v41, v38);
  sub_249F6E790(v36, &qword_2697515A0);
  sub_249F6E790(v59, &qword_2697515A0);
  sub_249F6E790((uint64_t)v25, &qword_26974FEB0);
  sub_249F6E790((uint64_t)v55, &qword_2697515A0);
  uint64_t result = sub_249F6E790((uint64_t)v15, &qword_26974FEB0);
  uint64_t v28 = v52;
  if ((v50 & 1) == 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_249FF561C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Alarm();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2697510B0);
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF18);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v55 = (uint64_t)&v47 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510B8);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974FF20);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v59 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v58 = (uint64_t)&v47 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v47 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v47 - v23;
  uint64_t v25 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v60 = a1;
  sub_249F6E6C8(a1, (uint64_t)v24, &qword_26974FF18);
  uint64_t v56 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  v56(v24, 0, 1, v6);
  uint64_t v26 = (uint64_t)&v14[*(int *)(v12 + 56)];
  uint64_t v57 = v25;
  sub_249F6E6C8(v25, (uint64_t)v14, &qword_26974FF20);
  uint64_t v27 = v6;
  sub_249F6E6C8((uint64_t)v24, v26, &qword_26974FF20);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v28((uint64_t)v14, 1, v27) == 1)
  {
    sub_249F6E790((uint64_t)v24, &qword_26974FF20);
    if (v28(v26, 1, v27) == 1) {
      return sub_249F6E790((uint64_t)v14, &qword_26974FF20);
    }
    uint64_t v30 = &qword_2697510B8;
    goto LABEL_20;
  }
  sub_249F6E6C8((uint64_t)v14, (uint64_t)v21, &qword_26974FF20);
  if (v28(v26, 1, v27) == 1)
  {
    uint64_t v30 = &qword_2697510B8;
LABEL_19:
    sub_249F6E790((uint64_t)v24, &qword_26974FF20);
    sub_249F6E790((uint64_t)v21, &qword_26974FF18);
LABEL_20:
    sub_249F6E790((uint64_t)v14, v30);
    goto LABEL_21;
  }
  uint64_t v48 = v27;
  uint64_t v31 = v55;
  sub_249F6E664(v26, v55, &qword_26974FF18);
  uint64_t v32 = v54;
  uint64_t v33 = v54 + *((int *)v51 + 12);
  uint64_t v51 = v21;
  sub_249F6E6C8((uint64_t)v21, v54, &qword_26974FF18);
  sub_249F6E6C8(v31, v33, &qword_26974FF18);
  uint64_t v34 = v53;
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v35(v32, 1, v53) == 1)
  {
    if (v35(v33, 1, v34) == 1)
    {
      sub_249F6E790(v32, &qword_26974FF18);
      sub_249F6E790(v31, &qword_26974FF18);
      sub_249F6E790((uint64_t)v24, &qword_26974FF20);
      sub_249F6E790((uint64_t)v51, &qword_26974FF18);
      return sub_249F6E790((uint64_t)v14, &qword_26974FF20);
    }
    uint64_t v37 = &qword_2697510B0;
    goto LABEL_18;
  }
  uint64_t v36 = v50;
  sub_249F6E6C8(v32, v50, &qword_26974FF18);
  if (v35(v33, 1, v34) == 1)
  {
    uint64_t v37 = &qword_2697510B0;
LABEL_17:
    sub_24A003D90(v36, (uint64_t (*)(void))type metadata accessor for Alarm);
    uint64_t v31 = v55;
LABEL_18:
    sub_249F6E790(v32, v37);
    sub_249F6E790(v31, &qword_26974FF18);
    uint64_t v30 = &qword_26974FF20;
    uint64_t v21 = v51;
    uint64_t v27 = v48;
    goto LABEL_19;
  }
  uint64_t v38 = v33;
  uint64_t v39 = v49;
  sub_24A003DF0(v38, v49, (uint64_t (*)(void))type metadata accessor for Alarm);
  if ((sub_24A0561D8() & 1) == 0)
  {
    sub_24A003D90(v39, (uint64_t (*)(void))type metadata accessor for Alarm);
    uint64_t v37 = &qword_26974FF18;
    goto LABEL_17;
  }
  uint64_t v40 = *(int *)(v34 + 20);
  int v41 = *(unsigned __int8 *)(v36 + v40);
  int v42 = *(unsigned __int8 *)(v39 + v40);
  sub_24A003D90(v39, (uint64_t (*)(void))type metadata accessor for Alarm);
  sub_24A003D90(v36, (uint64_t (*)(void))type metadata accessor for Alarm);
  sub_249F6E790(v32, &qword_26974FF18);
  sub_249F6E790(v55, &qword_26974FF18);
  sub_249F6E790((uint64_t)v24, &qword_26974FF20);
  sub_249F6E790((uint64_t)v51, &qword_26974FF18);
  uint64_t result = sub_249F6E790((uint64_t)v14, &qword_26974FF20);
  uint64_t v27 = v48;
  if (v41 != v42)
  {
LABEL_21:
    uint64_t v43 = v58;
    sub_249F6E6C8(v60, v58, &qword_26974FF18);
    v56((char *)v43, 0, 1, v27);
    uint64_t v44 = v59;
    sub_249F6E664(v43, v59, &qword_26974FF20);
    uint64_t v45 = v57;
    swift_beginAccess();
    sub_24A003F9C(v44, v45, &qword_26974FF20);
    swift_endAccess();
    swift_beginAccess();
    swift_retain();
    uint64_t v46 = swift_bridgeObjectRetain();
    sub_24A002840(v46, v1, &qword_2697510C0, &qword_26974FF20, &qword_26974FF18, &qword_2697510C8);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_249FF5DC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(v4 + 24);
  uint64_t v11 = *(void *)(v4 + 32);
  char v12 = *(unsigned char *)(v4 + 40);
  if (!v10)
  {
    sub_249F9C378(*(void *)(v4 + 16), 0);
    if (!a2) {
      return;
    }
    goto LABEL_13;
  }
  if (v10 == 1 || a2 == 0) {
    goto LABEL_13;
  }
  if (((a1 ^ ((*(void *)(v4 + 16) & 1) == 0)) & 1) == 0) {
    goto LABEL_13;
  }
  sub_24A04CBA8(v10, a2, v9);
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
  if (v12)
  {
    if (a4) {
      return;
    }
    goto LABEL_13;
  }
  if ((a4 & 1) != 0 || v11 != a3)
  {
LABEL_13:
    uint64_t v15 = *(void *)(v4 + 16);
    uint64_t v16 = *(void *)(v4 + 24);
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    *(void *)(v4 + 32) = a3;
    *(unsigned char *)(v4 + 40) = a4;
    swift_bridgeObjectRetain();
    sub_249F9C378(v15, v16);
    swift_beginAccess();
    swift_retain();
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_249FAA2A4(v17, v4);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_249FF5F04(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CurrentLocationResult(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751060);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  int32x2_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697520E0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v33 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v32 = (uint64_t)&v30 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v34 = a1;
  sub_24A003BA4(a1, (uint64_t)v19, type metadata accessor for CurrentLocationResult);
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
  v31(v19, 0, 1, v3);
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_249F6E6C8(v20, (uint64_t)v9, &qword_2697520E0);
  sub_249F6E6C8((uint64_t)v19, v21, &qword_2697520E0);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_249F6E790((uint64_t)v19, &qword_2697520E0);
    if (v22(v21, 1, v3) == 1) {
      return sub_249F6E790((uint64_t)v9, &qword_2697520E0);
    }
  }
  else
  {
    sub_249F6E6C8((uint64_t)v9, (uint64_t)v16, &qword_2697520E0);
    if (v22(v21, 1, v3) != 1)
    {
      uint64_t v24 = v30;
      sub_24A003DF0(v21, v30, type metadata accessor for CurrentLocationResult);
      BOOL v25 = sub_24A049224((uint64_t)v16, v24);
      sub_24A003D90(v24, type metadata accessor for CurrentLocationResult);
      sub_249F6E790((uint64_t)v19, &qword_2697520E0);
      sub_24A003D90((uint64_t)v16, type metadata accessor for CurrentLocationResult);
      uint64_t result = sub_249F6E790((uint64_t)v9, &qword_2697520E0);
      if (v25) {
        return result;
      }
      goto LABEL_8;
    }
    sub_249F6E790((uint64_t)v19, &qword_2697520E0);
    sub_24A003D90((uint64_t)v16, type metadata accessor for CurrentLocationResult);
  }
  sub_249F6E790((uint64_t)v9, &qword_269751060);
LABEL_8:
  uint64_t v26 = v32;
  sub_24A003BA4(v34, v32, type metadata accessor for CurrentLocationResult);
  v31((char *)v26, 0, 1, v3);
  uint64_t v27 = v26;
  uint64_t v28 = v33;
  sub_249F6E664(v27, v33, &qword_2697520E0);
  swift_beginAccess();
  sub_24A003F9C(v28, v20, &qword_2697520E0);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_24A002E38(v29, v1);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_249FF63B0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CurrentLocationSolarPosition(0);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_269751218);
  MEMORY[0x270FA5388](v54);
  uint64_t v57 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503D8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (uint64_t)&v50 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751220);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750AA8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v62 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v61 = (uint64_t)&v50 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v50 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v50 - v23;
  uint64_t v25 = *(void *)(*(void *)v1 + 96);
  uint64_t v59 = v1;
  uint64_t v26 = v1 + v25;
  swift_beginAccess();
  uint64_t v63 = a1;
  sub_249F6E6C8(a1, (uint64_t)v24, &qword_2697503D8);
  uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  v27(v24, 0, 1, v6);
  uint64_t v28 = (uint64_t)&v14[*(int *)(v12 + 56)];
  uint64_t v60 = v26;
  uint64_t v29 = v26;
  uint64_t v30 = v6;
  sub_249F6E6C8(v29, (uint64_t)v14, &qword_269750AA8);
  sub_249F6E6C8((uint64_t)v24, v28, &qword_269750AA8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v31((uint64_t)v14, 1, v6) == 1)
  {
    sub_249F6E790((uint64_t)v24, &qword_269750AA8);
    if (v31(v28, 1, v6) == 1)
    {
      uint64_t v32 = (uint64_t)v14;
      return sub_249F6E790(v32, &qword_269750AA8);
    }
    uint64_t v33 = &qword_269751220;
    goto LABEL_15;
  }
  sub_249F6E6C8((uint64_t)v14, (uint64_t)v21, &qword_269750AA8);
  if (v31(v28, 1, v6) == 1)
  {
    uint64_t v33 = &qword_269751220;
LABEL_14:
    sub_249F6E790((uint64_t)v24, &qword_269750AA8);
    sub_249F6E790((uint64_t)v21, &qword_2697503D8);
LABEL_15:
    sub_249F6E790((uint64_t)v14, v33);
LABEL_16:
    uint64_t v41 = v61;
    sub_249F6E6C8(v63, v61, &qword_2697503D8);
    v27((char *)v41, 0, 1, v30);
    uint64_t v42 = v41;
    uint64_t v43 = v62;
    sub_249F6E664(v42, v62, &qword_269750AA8);
    uint64_t v44 = v60;
    swift_beginAccess();
    sub_24A003F9C(v43, v44, &qword_269750AA8);
    swift_endAccess();
    uint64_t v45 = v59;
    swift_beginAccess();
    swift_retain();
    uint64_t v46 = swift_bridgeObjectRetain();
    sub_24A002840(v46, v45, &qword_269751228, &qword_269750AA8, &qword_2697503D8, &qword_269751230);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v51 = v27;
  uint64_t v34 = v58;
  sub_249F6E664(v28, v58, &qword_2697503D8);
  uint64_t v35 = v57;
  uint64_t v36 = v57 + *((int *)v54 + 12);
  uint64_t v54 = v21;
  sub_249F6E6C8((uint64_t)v21, v57, &qword_2697503D8);
  sub_249F6E6C8(v34, v36, &qword_2697503D8);
  uint64_t v37 = v56;
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v38(v35, 1, v56) == 1)
  {
    if (v38(v36, 1, v37) == 1)
    {
      sub_249F6E790(v35, &qword_2697503D8);
      sub_249F6E790(v58, &qword_2697503D8);
      sub_249F6E790((uint64_t)v24, &qword_269750AA8);
      sub_249F6E790((uint64_t)v54, &qword_2697503D8);
      uint64_t v32 = (uint64_t)v14;
      return sub_249F6E790(v32, &qword_269750AA8);
    }
    goto LABEL_13;
  }
  uint64_t v40 = v53;
  sub_249F6E6C8(v35, v53, &qword_2697503D8);
  if (v38(v36, 1, v37) == 1)
  {
    sub_24A003D90(v40, type metadata accessor for CurrentLocationSolarPosition);
LABEL_13:
    sub_249F6E790(v35, &qword_269751218);
    sub_249F6E790(v58, &qword_2697503D8);
    uint64_t v33 = &qword_269750AA8;
    uint64_t v27 = v51;
    uint64_t v21 = v54;
    goto LABEL_14;
  }
  uint64_t v47 = v40;
  uint64_t v48 = v52;
  sub_24A003DF0(v36, v52, type metadata accessor for CurrentLocationSolarPosition);
  BOOL v49 = sub_249FA9CE4(v47, v48);
  sub_24A003D90(v48, type metadata accessor for CurrentLocationSolarPosition);
  sub_24A003D90(v47, type metadata accessor for CurrentLocationSolarPosition);
  sub_249F6E790(v35, &qword_2697503D8);
  sub_249F6E790(v58, &qword_2697503D8);
  sub_249F6E790((uint64_t)v24, &qword_269750AA8);
  sub_249F6E790((uint64_t)v54, &qword_2697503D8);
  uint64_t result = sub_249F6E790((uint64_t)v14, &qword_269750AA8);
  uint64_t v27 = v51;
  if (!v49) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_249FF6B0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A056238();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751040);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v40 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v39 = &v33[-v14];
  MEMORY[0x270FA5388](v15);
  uint64_t v42 = &v33[-v16];
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = &v33[-v18];
  uint64_t v20 = v2 + *(void *)(*(void *)v2 + 96);
  swift_beginAccess();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v41 = a1;
  uint64_t v36 = v21;
  v21(v19, a1, v4);
  uint64_t v37 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56);
  v37(v19, 0, 1, v4);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 56)];
  uint64_t v38 = v20;
  sub_249F6E6C8(v20, (uint64_t)v10, &qword_2697515A0);
  sub_249F6E6C8((uint64_t)v19, v22, &qword_2697515A0);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_249F6E790((uint64_t)v19, &qword_2697515A0);
    if (v23(v22, 1, v4) == 1) {
      return sub_249F6E790((uint64_t)v10, &qword_2697515A0);
    }
  }
  else
  {
    sub_249F6E6C8((uint64_t)v10, (uint64_t)v42, &qword_2697515A0);
    if (v23(v22, 1, v4) != 1)
    {
      uint64_t v25 = v35;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32))(v35, v22, v4);
      sub_24A0034F8(&qword_26974FC20, MEMORY[0x263F07490]);
      uint64_t v26 = v42;
      int v34 = sub_24A057358();
      uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v27(v25, v4);
      sub_249F6E790((uint64_t)v19, &qword_2697515A0);
      v27(v26, v4);
      uint64_t result = sub_249F6E790((uint64_t)v10, &qword_2697515A0);
      if (v34) {
        return result;
      }
      goto LABEL_8;
    }
    sub_249F6E790((uint64_t)v19, &qword_2697515A0);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v42, v4);
  }
  sub_249F6E790((uint64_t)v10, &qword_269751040);
LABEL_8:
  uint64_t v28 = v39;
  v36(v39, v41, v4);
  v37(v28, 0, 1, v4);
  uint64_t v29 = (uint64_t)v28;
  uint64_t v30 = v40;
  sub_249F6E664(v29, (uint64_t)v40, &qword_2697515A0);
  uint64_t v31 = v38;
  swift_beginAccess();
  sub_24A003F9C((uint64_t)v30, v31, &qword_2697515A0);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  uint64_t v32 = swift_bridgeObjectRetain();
  sub_24A003540(v32, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_249FF700C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750BE8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_2697511D0);
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750C48);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (uint64_t)&v52 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697511D8);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269750CA8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v64 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v63 = (uint64_t)&v52 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v52 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v52 - v24;
  uint64_t v26 = *(void *)(*(void *)v1 + 96);
  uint64_t v61 = v1;
  uint64_t v27 = v1 + v26;
  swift_beginAccess();
  uint64_t v65 = a1;
  sub_249F6E6C8(a1, (uint64_t)v25, &qword_269750C48);
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
  uint64_t v60 = v8 + 56;
  v28(v25, 0, 1, v7);
  uint64_t v29 = (uint64_t)&v15[*(int *)(v13 + 56)];
  uint64_t v62 = v27;
  uint64_t v30 = v27;
  uint64_t v31 = v7;
  sub_249F6E6C8(v30, (uint64_t)v15, &qword_269750CA8);
  sub_249F6E6C8((uint64_t)v25, v29, &qword_269750CA8);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v32((uint64_t)v15, 1, v7) == 1)
  {
    sub_249F6E790((uint64_t)v25, &qword_269750CA8);
    if (v32(v29, 1, v7) == 1)
    {
      uint64_t v33 = (uint64_t)v15;
      return sub_249F6E790(v33, &qword_269750CA8);
    }
    int v34 = &qword_2697511D8;
    goto LABEL_15;
  }
  sub_249F6E6C8((uint64_t)v15, (uint64_t)v22, &qword_269750CA8);
  if (v32(v29, 1, v7) == 1)
  {
    int v34 = &qword_2697511D8;
LABEL_14:
    sub_249F6E790((uint64_t)v25, &qword_269750CA8);
    sub_249F6E790((uint64_t)v22, &qword_269750C48);
LABEL_15:
    sub_249F6E790((uint64_t)v15, v34);
LABEL_16:
    uint64_t v42 = v63;
    sub_249F6E6C8(v65, v63, &qword_269750C48);
    v28((char *)v42, 0, 1, v31);
    uint64_t v43 = v42;
    uint64_t v44 = v64;
    sub_249F6E664(v43, v64, &qword_269750CA8);
    uint64_t v45 = v62;
    swift_beginAccess();
    sub_24A003F9C(v44, v45, &qword_269750CA8);
    swift_endAccess();
    uint64_t v46 = v61;
    swift_beginAccess();
    swift_retain();
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_24A002840(v47, v46, &qword_2697511E8, &qword_269750CA8, &qword_269750C48, &qword_2697511F0);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v52 = v28;
  uint64_t v35 = v59;
  sub_249F6E664(v29, v59, &qword_269750C48);
  uint64_t v36 = v58;
  uint64_t v37 = v58 + *((int *)v55 + 12);
  uint64_t v55 = v22;
  sub_249F6E6C8((uint64_t)v22, v58, &qword_269750C48);
  sub_249F6E6C8(v35, v37, &qword_269750C48);
  uint64_t v38 = v56;
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v39(v36, 1, v56) == 1)
  {
    if (v39(v37, 1, v38) == 1)
    {
      sub_249F6E790(v58, &qword_269750C48);
      sub_249F6E790(v59, &qword_269750C48);
      sub_249F6E790((uint64_t)v25, &qword_269750CA8);
      sub_249F6E790((uint64_t)v55, &qword_269750C48);
      uint64_t v33 = (uint64_t)v15;
      return sub_249F6E790(v33, &qword_269750CA8);
    }
    goto LABEL_13;
  }
  uint64_t v41 = v54;
  sub_249F6E6C8(v36, v54, &qword_269750C48);
  if (v39(v37, 1, v38) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v41, v38);
LABEL_13:
    sub_249F6E790(v58, &qword_2697511D0);
    sub_249F6E790(v59, &qword_269750C48);
    int v34 = &qword_269750CA8;
    uint64_t v28 = v52;
    uint64_t v22 = v55;
    goto LABEL_14;
  }
  uint64_t v48 = v57;
  BOOL v49 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v53, v37, v38);
  sub_249F6EE60(&qword_2697511E0, &qword_269750BE8);
  char v50 = sub_24A057358();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v48 + 8);
  v51(v49, v38);
  v51((char *)v41, v38);
  sub_249F6E790(v36, &qword_269750C48);
  sub_249F6E790(v59, &qword_269750C48);
  sub_249F6E790((uint64_t)v25, &qword_269750CA8);
  sub_249F6E790((uint64_t)v55, &qword_269750C48);
  uint64_t result = sub_249F6E790((uint64_t)v15, &qword_269750CA8);
  uint64_t v28 = v52;
  if ((v50 & 1) == 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_249FF77A4(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751160);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v8, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751120);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v8, &qword_269751160, &qword_269751120, &qword_269751168);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v8, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v8, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF7AA4(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751050);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751038);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v7, &qword_269751050, &qword_269751038, &qword_269751058);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v7, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF7DA4(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510D0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697510C8);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v7, &qword_2697510D0, &qword_2697510C8, &qword_2697510D8);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v7, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF80A4(uint64_t a1)
{
  _OWORD v18[2] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751298);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056268();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_24A056258();
  v18[0] = *(void *)(v6 + 16);
  ((void (*)(char *, char *, uint64_t))v18[0])(v8, v11, v5);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697503F8);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v4, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v4, (uint64_t)v8, &qword_269751298, &qword_2697503F8, &qword_2697512A0);
  swift_endAccess();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  ((void (*)(char *, char *, uint64_t))v18[0])(v8, v11, v5);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, v8, v5);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_249FF8394(uint64_t a1)
{
  _OWORD v18[2] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751270);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A056268();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v18 - v10;
  sub_24A056258();
  v18[0] = *(void *)(v6 + 16);
  ((void (*)(char *, char *, uint64_t))v18[0])(v8, v11, v5);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751268);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v4, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v4, (uint64_t)v8, &qword_269751270, &qword_269751268, &qword_269751278);
  swift_endAccess();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  ((void (*)(char *, char *, uint64_t))v18[0])(v8, v11, v5);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, v8, v5);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_249FF8684(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751078);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751070);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v7, &qword_269751078, &qword_269751070, &qword_269751080);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v7, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF8984(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751238);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751230);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v7, &qword_269751238, &qword_269751230, &qword_269751240);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v7, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF8C84(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697511B0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751140);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v7, &qword_2697511B0, &qword_269751140, &qword_2697511B8);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v7, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF8F84(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697511F8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_24A056258();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697511F0);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v3, v19, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v11);
  swift_beginAccess();
  sub_249FEF0C0((uint64_t)v3, (uint64_t)v7, &qword_2697511F8, &qword_2697511F0, &qword_269751200);
  swift_endAccess();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  v18(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v7, v4);
  swift_retain();
  sub_24A057638();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return swift_release();
}

uint64_t sub_249FF9284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_249FF9318(a3, a4, a5, a6, a7);
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF9318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v26 = a1;
  uint64_t v27 = a3;
  uint64_t v24 = a2;
  uint64_t v30 = sub_24A057278();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A0572B8();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A056268();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = sub_24A057288();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249FCFCA0(0, (unint64_t *)&qword_2697515B0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F040], v13);
  uint64_t v25 = sub_24A057878();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = v28;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249F892E0;
  aBlock[3] = v29;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  sub_24A057298();
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_24A0034F8((unint64_t *)&qword_2697509A8, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697509B0);
  sub_249F6EE60((unint64_t *)&qword_2697509B8, &qword_2697509B0);
  uint64_t v21 = v30;
  sub_24A0579C8();
  uint64_t v22 = (void *)v25;
  MEMORY[0x24C5B9070](0, v9, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  swift_release();
  return swift_release();
}

uint64_t sub_249FF97A0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = (os_unfair_lock_s *)(*(void *)(result + *(void *)(*(void *)result + 104)) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v13);
    swift_endAccess();
    swift_beginAccess();
    sub_249FFA584(a2, a4, a5, (uint64_t)v11);
    sub_249F6E790((uint64_t)v11, a3);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v13);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF9920(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751298);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = (os_unfair_lock_s *)(*(void *)(result + 48) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v7);
    swift_endAccess();
    swift_beginAccess();
    sub_249FFA584(a2, &qword_2697503F8, &qword_2697512A0, (uint64_t)v5);
    sub_249F6E790((uint64_t)v5, &qword_269751298);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF9A70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751270);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = (os_unfair_lock_s *)(*(void *)(result + 24) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v7);
    swift_endAccess();
    swift_beginAccess();
    sub_249FFA584(a2, &qword_269751268, &qword_269751278, (uint64_t)v5);
    sub_249F6E790((uint64_t)v5, &qword_269751270);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_249FF9BC0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_24A057968();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_249FF9C80()
{
  sub_249FF9BC0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservationStream()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_249FF9CF0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_249FF9D44@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  uint64_t v11 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a2 + 24);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_24A0156DC(a1), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751190);
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v15 + *(void *)(*(void *)v15 + 96);
    uint64_t v17 = sub_24A056238();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = *(void *)(*(void *)v15 + 104);
    type metadata accessor for CPUnfairLock();
    uint64_t v19 = swift_allocObject();
    *(_DWORD *)(v19 + 16) = 0;
    *(void *)(v15 + v18) = v19;
    *(void *)(v15 + *(void *)(*(void *)v15 + 112)) = MEMORY[0x263F8EE80];
    *(unsigned char *)(v15 + *(void *)(*(void *)v15 + 120)) = 0;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    sub_249FFF29C(v15, a1, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = v22;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  swift_retain();
  swift_retain();
  sub_249FF1DE4(v15, a2, a3, a4, a5);
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_release_n();
  return swift_release();
}

uint64_t sub_249FF9FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  uint64_t v12 = sub_24A057628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_24A057608();
  swift_retain();
  uint64_t v13 = sub_24A0575F8();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v15;
  *(void *)(v14 + 32) = a2;
  *(unsigned char *)(v14 + 40) = a3;
  sub_24A04CE18((uint64_t)v10, (uint64_t)&unk_2697511A8, v14);
  swift_release();
  sub_24A006BDC(a4);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_249FFA148()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_249FFA170()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservationStreamCollection()
{
  return swift_getGenericMetadata();
}

uint64_t sub_249FFA1C8(uint64_t a1)
{
  return sub_249FF26DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_249FFA1D0(char a1, uint64_t a2, void *a3)
{
  sub_24A057E28();
  sub_24A057E58();
  sub_24A057E68();
  unint64_t result = sub_24A0579E8();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_249FFA28C(char a1, uint64_t a2, void *a3)
{
  sub_24A057E28();
  sub_24A057E58();
  sub_24A057E68();
  unint64_t v6 = sub_24A0579E8();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  *(unsigned char *)(a3[6] + v6) = a1;
  uint64_t v7 = a3[7];
  uint64_t v8 = sub_24A056238();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * v6, a2, v8);
  ++a3[2];
  return result;
}

double sub_249FFA390@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24A0153B0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A00074C();
      uint64_t v9 = v11;
    }
    sub_249F75BD8(*(void *)(v9 + 48) + 104 * v6);
    sub_249F7B5E8((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_249FFD844(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_249FFA494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24A0152F0(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A001098();
      uint64_t v12 = v13;
    }
    swift_bridgeObjectRelease();
    sub_249F6E664(*(void *)(v12 + 56) + 32 * v8, (uint64_t)a3, &qword_2697504A8);
    sub_249FFE1EC(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    a3[3] = 1;
  }
  return result;
}

uint64_t sub_249FFA584@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_24A0150F4(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v7;
    uint64_t v25 = *v7;
    *char v7 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A001298(a2, a3);
      uint64_t v13 = v25;
    }
    uint64_t v14 = *(void *)(v13 + 48);
    uint64_t v15 = sub_24A056268();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * v10, v15);
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v24 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 32))(a4, v16 + *(void *)(v24 + 72) * v10, v17);
    sub_249FFDC94(v10, v13, a2);
    *char v7 = v13;
    swift_bridgeObjectRelease();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v19 = a4;
    uint64_t v20 = 0;
    uint64_t v21 = v17;
  }
  else
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v21 = v22;
    uint64_t v19 = a4;
    uint64_t v20 = 1;
  }

  return v18(v19, v20, 1, v21);
}

uint64_t sub_249FFA770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24A0150F4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A001CF0();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24A056268();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for ScheduledTask();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24A003DF0(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    sub_249FFE5C0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ScheduledTask();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_249FFA93C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_24A0150F4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24A002030();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_24A056268();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_249FFE908(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_249FFAA34(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TextClockDescriptor(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751170);
  int v42 = a2;
  uint64_t v9 = sub_24A057BF8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    uint64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42)
    {
      sub_24A003DF0(v26, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_24A003BA4(v26, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_retain();
    }
    sub_24A057E28();
    sub_24A057E58();
    sub_24A0563F8();
    sub_24A0034F8((unint64_t *)&unk_269751570, MEMORY[0x263F079C8]);
    sub_24A057318();
    uint64_t result = sub_24A057E68();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_24A003DF0((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, type metadata accessor for TextClockDescriptor);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_249FFAE78(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697512A8);
  uint64_t v6 = sub_24A057BF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v31 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v30) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v31 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v30)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v30) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v31 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(v5 + 48) + 104 * v16;
    if (a2)
    {
      sub_249F7B58C(v21, (uint64_t)v33);
      sub_249F7B5E8((long long *)(*(void *)(v5 + 56) + 40 * v16), (uint64_t)v32);
    }
    else
    {
      sub_249F75B7C(v21, (uint64_t)v33);
      sub_249F7B37C(*(void *)(v5 + 56) + 40 * v16, (uint64_t)v32);
    }
    sub_24A057E28();
    ClockFaceLook.hash(into:)();
    uint64_t result = sub_24A057E68();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    sub_249F7B58C((uint64_t)v33, *(void *)(v7 + 48) + 104 * v14);
    uint64_t result = sub_249F7B5E8(v32, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
  if (v29 >= 64) {
    bzero(v18, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v29;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_249FFB1A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_2697512B0);
  uint64_t v6 = sub_24A057BF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v12];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v12 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v21 = v32[v12];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v22;
      }
    }
LABEL_30:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_31:
    char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_24A057E28();
    sub_24A057408();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_24A057E68();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x249FFB504);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_249FFB518(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A056268();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v53 = a2;
  uint64_t v15 = sub_24A057BF8();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v18 = *(void *)(v14 + 64);
  uint64_t v47 = (void *)(v14 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  uint64_t v45 = v4;
  int64_t v46 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v48 = v8 + 16;
  BOOL v49 = (void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v51 = v8;
  uint64_t v52 = v11;
  unint64_t v21 = (void (**)(char *, unint64_t, uint64_t))(v11 + 32);
  uint64_t v54 = (uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v22 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  for (i = v14; ; uint64_t v14 = i)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v27 = v26 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v46) {
      break;
    }
    uint64_t v29 = v47;
    unint64_t v30 = v47[v28];
    ++v24;
    if (!v30)
    {
      int64_t v24 = v28 + 1;
      if (v28 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v30 = v47[v24];
      if (!v30)
      {
        int64_t v31 = v28 + 2;
        if (v31 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v30 = v47[v31];
        if (!v30)
        {
          while (1)
          {
            int64_t v24 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v46) {
              goto LABEL_34;
            }
            unint64_t v30 = v47[v24];
            ++v31;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v31;
      }
    }
LABEL_21:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_22:
    uint64_t v32 = *(void *)(v52 + 72);
    unint64_t v33 = *(void *)(v14 + 48) + v32 * v27;
    if (v53)
    {
      (*v21)(v13, v33, v10);
      uint64_t v34 = *(void *)(v14 + 56);
      uint64_t v35 = *(void *)(v51 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v51 + 32))(v55, v34 + v35 * v27, v56);
    }
    else
    {
      (*v49)(v13, v33, v10);
      uint64_t v36 = *(void *)(v14 + 56);
      uint64_t v35 = *(void *)(v51 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v55, v36 + v35 * v27, v56);
    }
    sub_24A0034F8(&qword_269750B70, MEMORY[0x263F07508]);
    uint64_t result = sub_24A057308();
    uint64_t v37 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v22 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v38) & ~*(void *)(v22 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v22 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v25 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*v21)((char *)(*(void *)(v16 + 48) + v32 * v25), (unint64_t)v13, v10);
    uint64_t result = (*v54)(*(void *)(v16 + 56) + v35 * v25, v55, v56);
    ++*(void *)(v16 + 16);
  }
  swift_release();
  uint64_t v6 = v45;
  uint64_t v29 = v47;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v14 + 32);
  if (v44 >= 64) {
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v29 = -1 << v44;
  }
  *(void *)(v14 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v6 = v16;
  return result;
}

uint64_t sub_249FFBA14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751178);
  uint64_t result = sub_24A057BF8();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    uint64_t v34 = v2;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v36 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(v8 + 56);
      long long v38 = *(_OWORD *)(*(void *)(v8 + 48) + 16 * v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = v23 + v24 * v19;
      if (a2) {
        sub_24A003DF0(v25, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
      }
      else {
        sub_24A003BA4(v25, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
      }
      sub_24A057E28();
      sub_24A057E58();
      sub_24A057E58();
      uint64_t result = sub_24A057E68();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(void *)(v10 + 48) + 16 * v17) = v38;
      uint64_t result = sub_24A003DF0((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, type metadata accessor for WorldViewModel.Pin);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_249FFBDD0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751148);
  char v6 = a2;
  uint64_t v7 = sub_24A057BF8();
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v33 = v2;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((v6 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    unint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v6 & 1) == 0) {
      id v31 = v30;
    }
    sub_24A057E28();
    sub_24A057408();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24A057E68();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v8 + 48) + v18) = v29;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v30;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v22 = (void *)(v5 + 64);
  if ((v6 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

unint64_t sub_249FFC104(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697511C0);
  char v6 = (void *)sub_24A057BF8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      unint64_t result = sub_249FFA1D0(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_249FFC2E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751188);
  char v36 = a2;
  uint64_t v6 = sub_24A057BF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    char v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    int64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(v5 + 56) + 32 * v17;
    if (v36)
    {
      sub_249F6E664(v25, (uint64_t)v37, &qword_2697504A8);
    }
    else
    {
      sub_249F6E6C8(v25, (uint64_t)v37, &qword_2697504A8);
      swift_bridgeObjectRetain();
    }
    sub_24A057E28();
    sub_24A057408();
    uint64_t result = sub_24A057E68();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_249F6E664((uint64_t)v37, *(void *)(v7 + 56) + 32 * v14, &qword_2697504A8);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v19 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_249FFC624(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751130);
  uint64_t v6 = (void *)sub_24A057BF8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v22;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      unint64_t v20 = *(void **)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        id v21 = v20;
      }
      unint64_t result = sub_249FFA1D0(v19, (uint64_t)v20, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_249FFC804(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TextClockDescriptor(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751128);
  int v42 = a2;
  uint64_t v9 = sub_24A057BF8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    uint64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42)
    {
      sub_24A003DF0(v26, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
      id v27 = *(id *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_24A003BA4(v26, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
      id v27 = *(id *)(*(void *)(v8 + 56) + 8 * v20);
    }
    sub_24A057E28();
    sub_24A057E58();
    sub_24A0563F8();
    sub_24A0034F8((unint64_t *)&unk_269751570, MEMORY[0x263F079C8]);
    sub_24A057318();
    uint64_t result = sub_24A057E68();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_24A003DF0((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, type metadata accessor for TextClockDescriptor);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_249FFCC48(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = sub_24A056238();
  uint64_t v5 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697511C8);
  char v9 = a2;
  unint64_t v29 = (void *)sub_24A057BF8();
  if (*(void *)(v8 + 16))
  {
    uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v11 = *(void *)(v8 + 64);
    uint64_t v26 = v2;
    id v27 = (void *)(v8 + 64);
    uint64_t v12 = -1;
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    unint64_t v13 = v12 & v11;
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v18 = v17 | (v16 << 6);
      }
      else
      {
        int64_t v19 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        unint64_t v20 = v27;
        if (v19 >= v14) {
          goto LABEL_23;
        }
        unint64_t v21 = v27[v19];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v19 + 1;
          if (v19 + 1 >= v14) {
            goto LABEL_23;
          }
          unint64_t v21 = v27[v16];
          if (!v21)
          {
            int64_t v22 = v19 + 2;
            if (v22 >= v14)
            {
LABEL_23:
              swift_release();
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v26;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v8 + 32);
              if (v25 >= 64) {
                bzero(v20, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v20 = -1 << v25;
              }
              uint64_t v3 = v26;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v27[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_32;
                }
                if (v16 >= v14) {
                  goto LABEL_23;
                }
                unint64_t v21 = v27[v16];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v16 = v22;
          }
        }
LABEL_20:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v18 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      char v23 = *(unsigned char *)(*(void *)(v8 + 48) + v18);
      unint64_t v24 = *(void *)(v8 + 56) + *(void *)(v5 + 72) * v18;
      if (v9) {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 32))(v7, v24, v28);
      }
      else {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v24, v28);
      }
      uint64_t result = sub_249FFA28C(v23, (uint64_t)v7, v29);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v29;
  return result;
}

uint64_t sub_249FFCF08(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ScheduledTask();
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A056268();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751098);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_24A057BF8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  unint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    uint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    unint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24A003DF0(v32 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24A003BA4(v34 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    }
    sub_24A0034F8(&qword_269750B70, MEMORY[0x263F07508]);
    uint64_t result = sub_24A057308();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      unint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_24A003DF0(v54, *(void *)(v13 + 56) + v33 * v22, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_249FFD420(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24A056268();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751088);
  int v46 = a2;
  uint64_t v10 = sub_24A057BF8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_24A0034F8(&qword_269750B70, MEMORY[0x263F07508]);
    uint64_t result = sub_24A057308();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

unint64_t sub_249FFD844(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24A0579D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v11 = 104 * v6;
        sub_249F75B7C(*(void *)(a2 + 48) + 104 * v6, (uint64_t)v26);
        sub_24A057E28();
        ClockFaceLook.hash(into:)();
        uint64_t v12 = sub_24A057E68();
        uint64_t result = sub_249F75BD8((uint64_t)v26);
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t result = v14 + 104 * v3;
          uint64_t v15 = (const void *)(v14 + v11);
          if (104 * v3 < v11 || (result < (unint64_t)v15 + 104 ? (BOOL v16 = v3 == v6) : (BOOL v16 = 0), !v16)) {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x68uLL);
          }
          uint64_t v17 = *(void *)(a2 + 56);
          unint64_t v18 = v17 + 40 * v3;
          int64_t v19 = (long long *)(v17 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= (unint64_t)v19 + 40))
          {
            long long v9 = *v19;
            long long v10 = v19[1];
            *(void *)(v18 + 32) = *((void *)v19 + 4);
            *(_OWORD *)unint64_t v18 = v9;
            *(_OWORD *)(v18 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FFDA3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24A0579D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24A057E28();
        sub_24A057408();
        swift_bridgeObjectRelease();
        uint64_t result = sub_24A057E68();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *BOOL v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x249FFDC80);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_249FFDC94(int64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_24A056268();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_24A0579D8();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_24A0034F8(&qword_269750B70, MEMORY[0x263F07508]);
        uint64_t v20 = sub_24A057308();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(v37) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  uint64_t *v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FFDFE0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24A0579D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24A057E28();
        sub_24A057E58();
        sub_24A057E58();
        unint64_t result = sub_24A057E68();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (_OWORD *)(v10 + 16 * v3);
        unint64_t v12 = (_OWORD *)(v10 + 16 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for WorldViewModel.Pin(0) - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *int64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FFE1EC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24A0579D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24A057E28();
        swift_bridgeObjectRetain();
        sub_24A057408();
        uint64_t v10 = sub_24A057E68();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          int64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *int64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_249FFE3C4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24A0579D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24A057E28();
        sub_24A057E58();
        unint64_t result = sub_24A057E68();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *unint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_24A056238() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_249FFE5C0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = sub_24A0579D8();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v40 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v41 = v13;
      uint64_t v38 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v39 = v14;
      uint64_t v37 = v11;
      do
      {
        uint64_t v16 = v8;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v10;
        v39(v7, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_24A0034F8(&qword_269750B70, MEMORY[0x263F07508]);
        uint64_t v19 = sub_24A057308();
        (*v38)(v7, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v40)
        {
          if (v20 >= v40 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for ScheduledTask() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t v26 = v23 + v24 * a1;
            int64_t v27 = v24 * v10;
            unint64_t v28 = v23 + v24 * v10 + v24;
            BOOL v29 = v25 < v27 || v26 >= v28;
            uint64_t v8 = v16;
            if (v29)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v11 = v37;
            }
            else
            {
              a1 = v10;
              uint64_t v11 = v37;
              if (v25 != v27)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v40 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v8 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  uint64_t *v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_249FFE908(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_24A0579D8();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_24A0034F8(&qword_269750B70, MEMORY[0x263F07508]);
        uint64_t v17 = sub_24A057308();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              void *v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_249FFEC00(uint64_t a1, double *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_24A01518C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_24A0004C4();
    goto LABEL_7;
  }
  sub_249FFAA34(v16, a3 & 1);
  unint64_t v22 = sub_24A01518C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24A003BA4((uint64_t)a2, (uint64_t)v10, type metadata accessor for TextClockDescriptor);
  return sub_24A0001BC(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_249FFED80(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24A0153B0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24A00074C();
      goto LABEL_7;
    }
    sub_249FFAE78(v13, a3 & 1);
    unint64_t v19 = sub_24A0153B0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_249F75B7C(a2, (uint64_t)v21);
      return sub_249FFFED4(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 40 * v10;
  __swift_destroy_boxed_opaque_existential_1Tm(v17);

  return sub_249F7B5E8(a1, v17);
}

uint64_t sub_249FFEED0(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24A01541C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24A00092C();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FFB1A0(result, a3 & 1);
  uint64_t result = sub_24A01541C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24A057D78();
  __break(1u);
  return result;
}

uint64_t sub_249FFF008(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24A0155B8(a3, a4);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a2 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for WorldViewModel.Pin(0);
      return sub_24A003B3C(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, type metadata accessor for WorldViewModel.Pin);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_24A000AD0();
    goto LABEL_7;
  }
  sub_249FFBA14(v15, a2 & 1);
  unint64_t v22 = sub_24A0155B8(a3, a4);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    type metadata accessor for CLLocationCoordinate2D(0);
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_249FFFFA4(v12, a1, v18, a3, a4);
}

void sub_249FFF164(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24A01562C(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_24A000D50();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_249FFBDD0(v13, a3 & 1);
  unint64_t v18 = sub_24A01562C(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_24A057D78();
  __break(1u);
}

uint64_t sub_249FFF29C(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24A0156DC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24A000EF4();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_249FFC104(result, a3 & 1);
  uint64_t result = sub_24A0156DC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24A057D78();
  __break(1u);
  return result;
}

uint64_t sub_249FFF3D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24A0152F0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16) {
      return sub_24A003F9C(a1, v18[7] + 32 * v12, &qword_2697504A8);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24A001098();
    goto LABEL_7;
  }
  sub_249FFC2E8(v15, a4 & 1);
  unint64_t v20 = sub_24A0152F0(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
  unint64_t v12 = v20;
  char v18 = *v5;
  if (v16) {
    return sub_24A003F9C(a1, v18[7] + 32 * v12, &qword_2697504A8);
  }
LABEL_11:
  sub_24A000050(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_249FFF518(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v33 = a5;
  uint64_t v34 = a1;
  char v7 = (void **)v5;
  uint64_t v10 = sub_24A056268();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = (void *)*v5;
  unint64_t v16 = sub_24A0150F4(a2);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a3 & 1) == 0)
  {
    if (v21 >= v19 && (a3 & 1) == 0)
    {
      sub_24A001298(a4, v33);
      goto LABEL_7;
    }
    sub_249FFB518(v19, a3 & 1, a4, v33);
    unint64_t v31 = sub_24A0150F4(a2);
    if ((v20 & 1) == (v32 & 1))
    {
      unint64_t v16 = v31;
      uint64_t v22 = *v7;
      if (v20) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
      return sub_24A0000C4(v16, (uint64_t)v13, v34, v22, a4);
    }
LABEL_15:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v22 = *v7;
  if ((v20 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v23 = v22[7];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  uint64_t v27 = v24;
  uint64_t v28 = v23 + *(void *)(v25 + 72) * v16;
  uint64_t v29 = v34;

  return v26(v28, v29, v27);
}

void sub_249FFF738(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24A0156DC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_24A00163C();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_249FFC624(v13, a3 & 1);
  unint64_t v18 = sub_24A0156DC(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_24A057D78();
  __break(1u);
}

void sub_249FFF870(uint64_t a1, double *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_24A01518C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    char v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];

      *(void *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_24A0017E0();
    goto LABEL_7;
  }
  sub_249FFC804(v16, a3 & 1);
  unint64_t v21 = sub_24A01518C(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_24A057D78();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  char v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24A003BA4((uint64_t)a2, (uint64_t)v10, type metadata accessor for TextClockDescriptor);
  sub_24A0001BC(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_249FFF9F0(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24A0156DC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24A001A64();
      goto LABEL_7;
    }
    sub_249FFCC48(v13, a3 & 1);
    unint64_t v24 = sub_24A0156DC(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_24A056238();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_24A000270(v10, a2, a1, v16);
}

uint64_t sub_249FFFB58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24A056268();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_24A0150F4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for ScheduledTask();
      return sub_24A003B3C(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24A001CF0();
    goto LABEL_7;
  }
  sub_249FFCF08(v17, a3 & 1);
  unint64_t v24 = sub_24A0150F4(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24A00031C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_249FFFD2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24A056268();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_24A0150F4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24A002030();
    goto LABEL_7;
  }
  sub_249FFD420(v17, a3 & 1);
  unint64_t v23 = sub_24A0150F4(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_24A057D78();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24A00040C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_249FFFED4(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  sub_249F7B58C(a2, a4[6] + 104 * a1);
  uint64_t result = sub_249F7B5E8(a3, a4[7] + 40 * a1);
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_249FFFF60(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_249FFFFA4(unint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (double *)(a3[6] + 16 * a1);
  *uint64_t v8 = a4;
  v8[1] = a5;
  uint64_t v9 = a3[7];
  uint64_t v10 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t result = sub_24A003DF0(a2, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for WorldViewModel.Pin);
  uint64_t v12 = a3[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a3[2] = v14;
  }
  return result;
}

uint64_t sub_24A000050(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_249F6E664(a4, a5[7] + 32 * a1, &qword_2697504A8);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_24A0000C4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a4[6];
  uint64_t v11 = sub_24A056268();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v12 = a4[7];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a3, v13);
  uint64_t v15 = a4[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a4[2] = v17;
  }
  return result;
}

uint64_t sub_24A0001BC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for TextClockDescriptor(0);
  uint64_t result = sub_24A003DF0(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for TextClockDescriptor);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_24A000270(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_24A056238();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_24A00031C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24A056268();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for ScheduledTask();
  uint64_t result = sub_24A003DF0(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_24A00040C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24A056268();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_24A0004C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TextClockDescriptor(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751170);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24A057BE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  char v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_24A003BA4(*(void *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for TextClockDescriptor);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_24A003DF0((uint64_t)v4, *(void *)(v7 + 48) + v18, type metadata accessor for TextClockDescriptor);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24A00074C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697512A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057BE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 104 * v15;
    sub_249F75B7C(*(void *)(v2 + 48) + 104 * v15, (uint64_t)v22);
    uint64_t v17 = 40 * v15;
    sub_249F7B37C(*(void *)(v2 + 56) + v17, (uint64_t)v21);
    sub_249F7B58C((uint64_t)v22, *(void *)(v4 + 48) + v16);
    uint64_t result = (void *)sub_249F7B5E8(v21, *(void *)(v4 + 56) + v17);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A00092C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_2697512B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057BE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A000AD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WorldViewModel.Pin(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751178);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24A057BE8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v26 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    uint64_t v19 = 16 * v18;
    unint64_t v20 = *(void *)(v3 + 72) * v18;
    uint64_t v21 = *(void *)(v6 + 56) + v20;
    long long v27 = *(_OWORD *)(*(void *)(v6 + 48) + 16 * v18);
    sub_24A003BA4(v21, (uint64_t)v5, type metadata accessor for WorldViewModel.Pin);
    *(_OWORD *)(*(void *)(v8 + 48) + v19) = v27;
    uint64_t result = (void *)sub_24A003DF0((uint64_t)v5, *(void *)(v8 + 56) + v20, type metadata accessor for WorldViewModel.Pin);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_24A000D50()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751148);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057BE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    int64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A000EF4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697511C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057BE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A001098()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751188);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057BE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  }
  uint64_t v25 = v2 + 64;
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v12) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v8);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 32 * v14;
    sub_249F6E6C8(*(void *)(v2 + 56) + 32 * v14, (uint64_t)v26, &qword_2697504A8);
    unint64_t v20 = (void *)(*(void *)(v4 + 48) + v15);
    void *v20 = v17;
    v20[1] = v18;
    sub_249F6E664((uint64_t)v26, *(void *)(v4 + 56) + v19, &qword_2697504A8);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v12)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v8);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24A001298(uint64_t *a1, uint64_t *a2)
{
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v48 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_24A056268();
  uint64_t v47 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v35 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24A057BE8();
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v49 = v7;
  if (!v8)
  {
    id result = (void *)swift_release();
    uint64_t v34 = v49;
    uint64_t v33 = v35;
LABEL_25:
    *uint64_t v33 = v34;
    return result;
  }
  uint64_t v9 = v7;
  id result = (void *)(v7 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
  {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
    uint64_t v9 = v49;
  }
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  uint64_t v46 = v6;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  uint64_t v36 = v6 + 64;
  int64_t v37 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = v48;
  uint64_t v17 = v47;
  uint64_t v40 = v48 + 16;
  uint64_t v41 = v47 + 16;
  uint64_t v38 = v48 + 32;
  uint64_t v39 = v47 + 32;
  uint64_t v18 = v42;
  uint64_t v19 = v43;
  uint64_t v20 = v45;
  uint64_t v21 = v49;
  while (1)
  {
    if (v15)
    {
      unint64_t v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      int64_t v50 = v12;
      unint64_t v23 = v22 | (v12 << 6);
      uint64_t v24 = v46;
      goto LABEL_9;
    }
    int64_t v29 = v12 + 1;
    uint64_t v24 = v46;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v37) {
      goto LABEL_23;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v29);
    int64_t v31 = v12 + 1;
    if (!v30)
    {
      int64_t v31 = v29 + 1;
      if (v29 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v30 = *(void *)(v36 + 8 * v31);
      if (!v30) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v30 - 1) & v30;
    int64_t v50 = v31;
    unint64_t v23 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_9:
    unint64_t v25 = *(void *)(v17 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v18, *(void *)(v24 + 48) + v25, v19);
    unint64_t v26 = *(void *)(v16 + 72) * v23;
    unint64_t v27 = *(void *)(v24 + 56) + v26;
    uint64_t v28 = v44;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v44, v27, v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v21 + 48) + v25, v18, v19);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v21 + 56) + v26, v28, v20);
    int64_t v12 = v50;
  }
  int64_t v32 = v29 + 2;
  if (v32 >= v37)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v33 = v35;
    uint64_t v34 = v49;
    goto LABEL_25;
  }
  unint64_t v30 = *(void *)(v36 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v37) {
      goto LABEL_23;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_24A00163C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751130);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A057BE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24A0017E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TextClockDescriptor(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751128);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24A057BE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_24A003BA4(*(void *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for TextClockDescriptor);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void **)(*(void *)(v5 + 56) + v19);
    sub_24A003DF0((uint64_t)v4, *(void *)(v7 + 48) + v18, type metadata accessor for TextClockDescriptor);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24A001A64()
{
  uint64_t v1 = sub_24A056238();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697511C8);
  unint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24A057BE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24A001CF0()
{
  uint64_t v1 = type metadata accessor for ScheduledTask();
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A056268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751098);
  int64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_24A057BE8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v24 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_24A003BA4(*(void *)(v8 + 56) + v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    id result = (void *)sub_24A003DF0((uint64_t)v3, *(void *)(v10 + 56) + v20, (uint64_t (*)(void))type metadata accessor for ScheduledTask);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24A002030()
{
  uint64_t v1 = sub_24A056268();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751088);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24A057BE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24A0022C8(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751118);
  uint64_t v57 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)&unk_269751600;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for TimeString(0);
  uint64_t v52 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v55 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v55);
  uint64_t v46 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v45 = (uint64_t)&v41 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751120);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v54 = (char *)&v41 - v17;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v22 = a2 + *(void *)(*(void *)a2 + 96);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  uint64_t v24 = 0;
  unint64_t v25 = v19 + 63;
  uint64_t v26 = v12;
  v52 += 6;
  uint64_t v53 = v13 + 32;
  uint64_t v42 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v43 = v8;
  int64_t v50 = v25 >> 6;
  uint64_t v51 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
  uint64_t v44 = v13;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      uint64_t v57 = v24;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_24;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v50) {
      return swift_release();
    }
    unint64_t v30 = *(void *)(v49 + 8 * v29);
    int64_t v31 = v24 + 1;
    if (!v30)
    {
      int64_t v31 = v24 + 2;
      if (v24 + 2 >= v50) {
        return swift_release();
      }
      unint64_t v30 = *(void *)(v49 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v24 + 3;
        if (v24 + 3 >= v50) {
          return swift_release();
        }
        unint64_t v30 = *(void *)(v49 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v24 + 4;
          if (v24 + 4 >= v50) {
            return swift_release();
          }
          unint64_t v30 = *(void *)(v49 + 8 * v31);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v21 = (v30 - 1) & v30;
    uint64_t v57 = v31;
    unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    uint64_t v33 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v54, *(void *)(v56 + 56) + *(void *)(v13 + 72) * v28, v26);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v33, v26);
    sub_249F6E6C8(v22, (uint64_t)v8, v5);
    if ((*v52)(v8, 1, v55) == 1)
    {
      sub_249F6E790((uint64_t)v8, v5);
    }
    else
    {
      uint64_t v34 = (uint64_t)v8;
      uint64_t v35 = v45;
      sub_24A003DF0(v34, v45, type metadata accessor for TimeString);
      sub_24A003BA4(v35, v46, type metadata accessor for TimeString);
      uint64_t v36 = v22;
      int64_t v37 = v5;
      uint64_t v38 = v47;
      sub_24A057648();
      uint64_t v39 = v38;
      uint64_t v5 = v37;
      uint64_t v22 = v36;
      (*v42)(v39, v48);
      uint64_t v40 = v35;
      uint64_t v8 = v43;
      uint64_t v13 = v44;
      sub_24A003D90(v40, type metadata accessor for TimeString);
    }
    uint64_t result = (*v51)(v16, v26);
    uint64_t v24 = v57;
  }
  uint64_t v32 = v24 + 5;
  if (v24 + 5 >= v50) {
    return swift_release();
  }
  unint64_t v30 = *(void *)(v49 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v24 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v50) {
      return swift_release();
    }
    unint64_t v30 = *(void *)(v49 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A002840(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(a3);
  int64_t v67 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a5;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v62 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v55 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v54 = (uint64_t)&v49 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  int64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v66 = (char *)&v49 - v24;
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v59 = a1 + 64;
  uint64_t v26 = a1;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v25;
  uint64_t v30 = a2 + *(void *)(*(void *)a2 + 96);
  uint64_t v31 = v26;
  swift_bridgeObjectRetain();
  uint64_t v65 = v30;
  uint64_t result = swift_beginAccess();
  int64_t v33 = 0;
  uint64_t v64 = v20 + 16;
  uint64_t v63 = v20 + 32;
  v62 += 6;
  int64_t v50 = (void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v51 = v31;
  int64_t v60 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v52 = v20;
  uint64_t v53 = a4;
  while (1)
  {
    if (v29)
    {
      unint64_t v36 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      int64_t v67 = v33;
      unint64_t v37 = v36 | (v33 << 6);
      goto LABEL_24;
    }
    int64_t v38 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v60) {
      return swift_release();
    }
    unint64_t v39 = *(void *)(v59 + 8 * v38);
    int64_t v40 = v33 + 1;
    if (!v39)
    {
      int64_t v40 = v33 + 2;
      if (v33 + 2 >= v60) {
        return swift_release();
      }
      unint64_t v39 = *(void *)(v59 + 8 * v40);
      if (!v39)
      {
        int64_t v40 = v33 + 3;
        if (v33 + 3 >= v60) {
          return swift_release();
        }
        unint64_t v39 = *(void *)(v59 + 8 * v40);
        if (!v39)
        {
          int64_t v40 = v33 + 4;
          if (v33 + 4 >= v60) {
            return swift_release();
          }
          unint64_t v39 = *(void *)(v59 + 8 * v40);
          if (!v39) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v29 = (v39 - 1) & v39;
    int64_t v67 = v40;
    unint64_t v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_24:
    uint64_t v42 = v66;
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v66, *(void *)(v31 + 56) + *(void *)(v20 + 72) * v37, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v42, v19);
    sub_249F6E6C8(v65, (uint64_t)v14, a4);
    if ((*v62)(v14, 1, v15) == 1)
    {
      uint64_t v34 = (uint64_t)v14;
      uint64_t v35 = a4;
    }
    else
    {
      uint64_t v43 = v54;
      uint64_t v44 = v58;
      sub_249F6E664((uint64_t)v14, v54, v58);
      sub_249F6E6C8(v43, v55, v44);
      uint64_t v45 = v15;
      uint64_t v46 = v14;
      uint64_t v47 = v56;
      sub_24A057648();
      uint64_t v48 = v47;
      uint64_t v14 = v46;
      uint64_t v15 = v45;
      (*v50)(v48, v57);
      uint64_t v34 = v43;
      uint64_t v35 = v44;
      uint64_t v20 = v52;
      a4 = v53;
      uint64_t v31 = v51;
    }
    sub_249F6E790(v34, v35);
    uint64_t result = (*v61)(v23, v19);
    int64_t v33 = v67;
  }
  uint64_t v41 = v33 + 5;
  if (v33 + 5 >= v60) {
    return swift_release();
  }
  unint64_t v39 = *(void *)(v59 + 8 * v41);
  if (v39)
  {
    int64_t v40 = v33 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v40 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v40 >= v60) {
      return swift_release();
    }
    unint64_t v39 = *(void *)(v59 + 8 * v40);
    ++v41;
    if (v39) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A002D94()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A002DD0(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA148, (uint64_t)&unk_26FDEA198, (uint64_t)sub_24A002E04, (uint64_t)&block_descriptor_9);
}

uint64_t sub_24A002E04()
{
  return sub_24A003EAC(&qword_269751050, &qword_269751038, &qword_269751058);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_24A002E38(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751068);
  uint64_t v57 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &qword_2697520E0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697520E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for CurrentLocationResult(0);
  uint64_t v52 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v46 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v45 = (uint64_t)&v41 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751070);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v54 = (char *)&v41 - v17;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v22 = a2 + *(void *)(*(void *)a2 + 96);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  uint64_t v24 = 0;
  unint64_t v25 = v19 + 63;
  uint64_t v26 = v12;
  v52 += 6;
  uint64_t v53 = v13 + 32;
  uint64_t v42 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v43 = v8;
  int64_t v50 = v25 >> 6;
  uint64_t v51 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
  uint64_t v44 = v13;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      uint64_t v57 = v24;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_24;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v50) {
      return swift_release();
    }
    unint64_t v30 = *(void *)(v49 + 8 * v29);
    int64_t v31 = v24 + 1;
    if (!v30)
    {
      int64_t v31 = v24 + 2;
      if (v24 + 2 >= v50) {
        return swift_release();
      }
      unint64_t v30 = *(void *)(v49 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v24 + 3;
        if (v24 + 3 >= v50) {
          return swift_release();
        }
        unint64_t v30 = *(void *)(v49 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v24 + 4;
          if (v24 + 4 >= v50) {
            return swift_release();
          }
          unint64_t v30 = *(void *)(v49 + 8 * v31);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v21 = (v30 - 1) & v30;
    uint64_t v57 = v31;
    unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    int64_t v33 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v54, *(void *)(v56 + 56) + *(void *)(v13 + 72) * v28, v26);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v33, v26);
    sub_249F6E6C8(v22, (uint64_t)v8, v5);
    if ((*v52)(v8, 1, v55) == 1)
    {
      sub_249F6E790((uint64_t)v8, v5);
    }
    else
    {
      uint64_t v34 = (uint64_t)v8;
      uint64_t v35 = v45;
      sub_24A003DF0(v34, v45, type metadata accessor for CurrentLocationResult);
      sub_24A003BA4(v35, v46, type metadata accessor for CurrentLocationResult);
      uint64_t v36 = v22;
      unint64_t v37 = v5;
      int64_t v38 = v47;
      sub_24A057648();
      unint64_t v39 = v38;
      uint64_t v5 = v37;
      uint64_t v22 = v36;
      (*v42)(v39, v48);
      uint64_t v40 = v35;
      uint64_t v8 = v43;
      uint64_t v13 = v44;
      sub_24A003D90(v40, type metadata accessor for CurrentLocationResult);
    }
    uint64_t result = (*v51)(v15, v26);
    uint64_t v24 = v57;
  }
  uint64_t v32 = v24 + 5;
  if (v24 + 5 >= v50) {
    return swift_release();
  }
  unint64_t v30 = *(void *)(v49 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v24 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v50) {
      return swift_release();
    }
    unint64_t v30 = *(void *)(v49 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A0033B4(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA1E8, (uint64_t)&unk_26FDEA238, (uint64_t)sub_24A003480, (uint64_t)&block_descriptor_21_0);
}

uint64_t sub_24A0033E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(sub_24A056268() - 8);
  return sub_249FF9284(a1, *(void *)(v5 + 16), v5 + ((*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, a3, a4, a5);
}

uint64_t sub_24A003480()
{
  return sub_24A003EAC(&qword_269751078, &qword_269751070, &qword_269751080);
}

uint64_t sub_24A00349C(uint64_t a1)
{
  return sub_249FF2A80(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24A0034A8(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA288, (uint64_t)&unk_26FDEA2D8, (uint64_t)sub_24A0034DC, (uint64_t)&block_descriptor_34);
}

uint64_t sub_24A0034DC()
{
  return sub_24A003EAC(&qword_2697510D0, &qword_2697510C8, &qword_2697510D8);
}

uint64_t sub_24A0034F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A003540(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751138);
  int64_t v57 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A056238();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v46 = (char *)&v39 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751140);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v50 = a1 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v24 = a2 + *(void *)(*(void *)a2 + 96);
  uint64_t v54 = a1;
  swift_bridgeObjectRetain();
  uint64_t v53 = v24;
  uint64_t result = swift_beginAccess();
  uint64_t v26 = 0;
  unint64_t v27 = (unint64_t)(v21 + 63) >> 6;
  unint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v41 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v40 = (void (**)(char *, uint64_t))(v56 + 8);
  int64_t v51 = v27;
  uint64_t v52 = (uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v45 = v19;
  while (1)
  {
    if (v23)
    {
      uint64_t v56 = (v23 - 1) & v23;
      int64_t v57 = v26;
      unint64_t v29 = __clz(__rbit64(v23)) | (v26 << 6);
      uint64_t v30 = v55;
      goto LABEL_24;
    }
    int64_t v31 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v30 = v55;
    if (v31 >= v51) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v50 + 8 * v31);
    int64_t v33 = v26 + 1;
    if (!v32)
    {
      int64_t v33 = v26 + 2;
      if (v26 + 2 >= v51) {
        return swift_release();
      }
      unint64_t v32 = *(void *)(v50 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = v26 + 3;
        if (v26 + 3 >= v51) {
          return swift_release();
        }
        unint64_t v32 = *(void *)(v50 + 8 * v33);
        if (!v32)
        {
          int64_t v33 = v26 + 4;
          if (v26 + 4 >= v51) {
            return swift_release();
          }
          unint64_t v32 = *(void *)(v50 + 8 * v33);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v56 = (v32 - 1) & v32;
    int64_t v57 = v33;
    unint64_t v29 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v19, *(void *)(v54 + 56) + *(void *)(v14 + 72) * v29, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    sub_249F6E6C8(v53, (uint64_t)v7, &qword_2697515A0);
    if ((*v28)(v7, 1, v30) == 1)
    {
      sub_249F6E790((uint64_t)v7, &qword_2697515A0);
    }
    else
    {
      uint64_t v35 = v16;
      uint64_t v36 = v46;
      (*v43)(v46, v7, v30);
      (*v42)(v47, v36, v30);
      unint64_t v37 = v48;
      sub_24A057648();
      unint64_t v28 = v44;
      (*v41)(v37, v49);
      int64_t v38 = v36;
      uint64_t v16 = v35;
      uint64_t v19 = v45;
      (*v40)(v38, v55);
    }
    unint64_t v23 = v56;
    uint64_t result = (*v52)(v16, v13);
    uint64_t v26 = v57;
  }
  uint64_t v34 = v26 + 5;
  if (v26 + 5 >= v51) {
    return swift_release();
  }
  unint64_t v32 = *(void *)(v50 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v26 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v51) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v50 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A003AE0(uint64_t a1)
{
  return sub_249FF22EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24A003AEC(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA328, (uint64_t)&unk_26FDEA378, (uint64_t)sub_24A003B20, (uint64_t)&block_descriptor_47);
}

uint64_t sub_24A003B20()
{
  return sub_24A003EAC(&qword_269751160, &qword_269751120, &qword_269751168);
}

uint64_t sub_24A003B3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A003BA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A003C0C(uint64_t a1)
{
  return sub_249FF39E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24A003C14()
{
  return objectdestroy_50Tm(41);
}

uint64_t sub_24A003C1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_249F6C87C;
  return sub_24A008228(a1, v4, v5, v6, v7);
}

uint64_t sub_24A003CE4(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA3F0, (uint64_t)&unk_26FDEA440, (uint64_t)sub_24A003D18, (uint64_t)&block_descriptor_65);
}

uint64_t sub_24A003D18()
{
  return sub_24A003EAC(&qword_2697511B0, &qword_269751140, &qword_2697511B8);
}

uint64_t sub_24A003D38(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA490, (uint64_t)&unk_26FDEA4E0, (uint64_t)sub_24A003D6C, (uint64_t)&block_descriptor_78);
}

uint64_t sub_24A003D6C()
{
  return sub_24A003EAC(&qword_2697511F8, &qword_2697511F0, &qword_269751200);
}

uint64_t sub_24A003D88(uint64_t a1)
{
  return sub_249FF3644(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24A003D90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24A003DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A003E5C(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA530, (uint64_t)&unk_26FDEA580, (uint64_t)sub_24A003E90, (uint64_t)&block_descriptor_91);
}

uint64_t sub_24A003E90()
{
  return sub_24A003EAC(&qword_269751238, &qword_269751230, &qword_269751240);
}

uint64_t sub_24A003EAC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v7 = *(void *)(sub_24A056268() - 8);
  return sub_249FF97A0(*(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a1, a2, a3);
}

uint64_t sub_24A003F2C(uint64_t a1)
{
  return sub_249FF3008(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_24A003F34(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24A003F48(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA5D0, (uint64_t)&unk_26FDEA620, (uint64_t)sub_24A003F7C, (uint64_t)&block_descriptor_104);
}

uint64_t sub_24A003F7C()
{
  return sub_24A004170(sub_249FF9A70);
}

uint64_t sub_24A003F94(uint64_t a1)
{
  return sub_249FF2E24(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24A003F9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A004000()
{
  return objectdestroy_50Tm(40);
}

uint64_t objectdestroy_50Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24A004058(uint64_t a1)
{
  return sub_24A0033E4(a1, (uint64_t)&unk_26FDEA6C0, (uint64_t)&unk_26FDEA710, (uint64_t)sub_24A004158, (uint64_t)&block_descriptor_124);
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = sub_24A056268();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24A004158()
{
  return sub_24A004170(sub_249FF9920);
}

uint64_t sub_24A004170(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_24A056268() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_24A0041E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

unsigned char *sub_24A0041F0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A00428CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for ObservationStreamCollection.ObservationError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24A0042CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24A004350@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)aBlock - v10;
  if (objc_msgSend(self, sel_isMainThread)) {
    return a1();
  }
  uint64_t v13 = type metadata accessor for TimeString(0);
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v13);
  sub_249FCFCA0(0, (unint64_t *)&qword_2697515B0);
  uint64_t v15 = sub_24A057848();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v11;
  v16[3] = a1;
  void v16[4] = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24A0116C4;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_24A011DE0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A040C30;
  aBlock[3] = &block_descriptor_119;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v18)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_249F6E6C8((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_269751600);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_24A011248((uint64_t)v9, a3, type metadata accessor for TimeString);
  sub_249F6E790((uint64_t)v11, (uint64_t *)&unk_269751600);
  return swift_release();
}

uint64_t sub_24A004650(void (*a1)(void *__return_ptr), uint64_t a2)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    a1(aBlock);
    return LOBYTE(aBlock[0]);
  }
  __int16 v11 = 256;
  sub_249FCFCA0(0, (unint64_t *)&qword_2697515B0);
  uint64_t v5 = sub_24A057848();
  uint64_t v6 = (void *)swift_allocObject();
  long long v6[2] = &v11;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24A0111DC;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_249F708EC;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A040C30;
  aBlock[3] = &block_descriptor_10;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v8);

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((v11 & 0x100) != 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  char v9 = v11;
  swift_release();
  return v9 & 1;
}

uint64_t sub_24A00481C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269751600);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v5);
  uint64_t v8 = type metadata accessor for TimeString(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  return sub_24A003F9C((uint64_t)v7, a1, (uint64_t *)&unk_269751600);
}

uint64_t sub_24A004900()
{
  return sub_24A057E68();
}

uint64_t sub_24A004954()
{
  return sub_24A057E68();
}

void sub_24A004A48(void *a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515D0);
  uint64_t v2 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TextClockDescriptor(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751610);
  MEMORY[0x270FA5388](v9 - 8);
  __int16 v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515E8);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v20 = v1[2];
  int64_t v19 = v1[3];
  int64_t v21 = v19;
  unint64_t v22 = v1[4];
  uint64_t v43 = v16;
  uint64_t v44 = v4;
  uint64_t v47 = v20;
  uint64_t v48 = v18;
  if (v22)
  {
    uint64_t v45 = v2;
    uint64_t v23 = (v22 - 1) & v22;
    unint64_t v24 = __clz(__rbit64(v22)) | (v19 << 6);
LABEL_3:
    uint64_t v25 = *(void *)(v17 + 48) + *(void *)(v6 + 72) * v24;
    uint64_t v26 = v17;
    sub_24A0112B0(v25, (uint64_t)v8, type metadata accessor for TextClockDescriptor);
    unint64_t v27 = *(void **)(*(void *)(v26 + 56) + 8 * v24);
    uint64_t v28 = *(int *)(v12 + 48);
    sub_24A011248((uint64_t)v8, (uint64_t)v11, type metadata accessor for TextClockDescriptor);
    *(void *)&v11[v28] = v27;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    id v29 = v27;
    uint64_t v2 = v45;
    goto LABEL_23;
  }
  int64_t v30 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
LABEL_29:
    __break(1u);
    return;
  }
  int64_t v31 = (unint64_t)(v20 + 64) >> 6;
  if (v30 < v31)
  {
    unint64_t v32 = *(void *)(v18 + 8 * v30);
    if (v32)
    {
LABEL_7:
      uint64_t v45 = v2;
      uint64_t v23 = (v32 - 1) & v32;
      unint64_t v24 = __clz(__rbit64(v32)) + (v30 << 6);
      int64_t v21 = v30;
      goto LABEL_3;
    }
    int64_t v33 = v19 + 2;
    int64_t v21 = v19 + 1;
    if (v19 + 2 < v31)
    {
      unint64_t v32 = *(void *)(v18 + 8 * v33);
      if (v32)
      {
LABEL_10:
        int64_t v30 = v33;
        goto LABEL_7;
      }
      int64_t v21 = v19 + 2;
      if (v19 + 3 < v31)
      {
        unint64_t v32 = *(void *)(v18 + 8 * (v19 + 3));
        if (v32)
        {
          int64_t v30 = v19 + 3;
          goto LABEL_7;
        }
        int64_t v33 = v19 + 4;
        int64_t v21 = v19 + 3;
        if (v19 + 4 < v31)
        {
          unint64_t v32 = *(void *)(v18 + 8 * v33);
          if (v32) {
            goto LABEL_10;
          }
          int64_t v30 = v19 + 5;
          int64_t v21 = v19 + 4;
          if (v19 + 5 < v31)
          {
            unint64_t v32 = *(void *)(v18 + 8 * v30);
            if (v32) {
              goto LABEL_7;
            }
            int64_t v21 = v31 - 1;
            int64_t v34 = v19 + 6;
            while (v31 != v34)
            {
              unint64_t v32 = *(void *)(v18 + 8 * v34++);
              if (v32)
              {
                int64_t v30 = v34 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v26 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v11, 1, 1, v12, v14);
  uint64_t v23 = 0;
LABEL_23:
  uint64_t v35 = v48;
  uint64_t *v1 = v26;
  v1[1] = v35;
  void v1[2] = v47;
  v1[3] = v21;
  v1[4] = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_249F6E790((uint64_t)v11, &qword_269751610);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v46, 1, 1, v49);
    return;
  }
  uint64_t v36 = (uint64_t)v43;
  sub_249F6E664((uint64_t)v11, (uint64_t)v43, &qword_2697515E8);
  uint64_t v37 = (uint64_t)&v44[*(int *)(v49 + 48)];
  uint64_t v38 = v1[5];
  sub_249F6E664(v36, v37, &qword_2697515E8);
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  v1[5] = v38 + 1;
  uint64_t v39 = v49;
  uint64_t v40 = v46;
  uint64_t v41 = (uint64_t)v46 + *(int *)(v49 + 48);
  *uint64_t v46 = v38;
  sub_249F6E664(v37, v41, &qword_2697515E8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v2 + 56))(v40, 0, 1, v39);
}

void sub_24A004EF8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  id v27 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515C0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = ~v11;
  uint64_t v14 = -v11;
  uint64_t v21 = a1;
  uint64_t v22 = a1 + 64;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  else {
    uint64_t v15 = -1;
  }
  uint64_t v23 = v13;
  uint64_t v24 = 0;
  uint64_t v25 = v15 & v12;
  uint64_t v26 = 0;
  swift_bridgeObjectRetain();
  sub_24A004A48(v10);
  uint64_t v19 = v5;
  uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48);
  if (v16(v10, 1, v4) == 1)
  {
LABEL_7:
    sub_249F71790();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, 1, 1, v4);
  }
  else
  {
    while (1)
    {
      sub_249F6E664((uint64_t)v10, (uint64_t)v7, &qword_2697515D0);
      sub_249FCFCA0(0, (unint64_t *)&qword_269752090);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697515E8);
      if (sub_24A057938()) {
        break;
      }
      sub_249F6E790((uint64_t)v7, &qword_2697515D0);
      sub_24A004A48(v10);
      if (v16(v10, 1, v4) == 1) {
        goto LABEL_7;
      }
    }
    sub_249F71790();
    uint64_t v17 = v20;
    sub_249F6E664((uint64_t)v7, v20, &qword_2697515D0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v4);
  }
}

uint64_t sub_24A005190(void (*a1)(char *, uint64_t))
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v3);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v9 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_6;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v15 >= v9) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    int64_t v17 = v11 + 1;
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      if (v11 + 2 >= v9) {
        goto LABEL_22;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v11 + 3;
        if (v11 + 3 >= v9) {
          goto LABEL_22;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v11 = v17;
LABEL_6:
    uint64_t v14 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    v19[0] = *(unsigned char *)(*(void *)(v4 + 48) + v13);
    swift_retain();
    a1(v19, v14);
    uint64_t result = swift_release();
  }
  int64_t v18 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_22:
    sub_249F71790();
    swift_beginAccess();
    os_unfair_lock_unlock(v3);
    return swift_endAccess();
  }
  unint64_t v16 = *(void *)(v5 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v11 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v9) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_24A00538C(uint64_t a1, char a2)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_24A0156DC(a2), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v9 + *(void *)(*(void *)v9 + 104)) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v10);
    swift_endAccess();
    sub_249FF6B0C(a1);
    swift_beginAccess();
    os_unfair_lock_unlock(v10);
    swift_endAccess();
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269751630);
    sub_249F6EE60(&qword_269751638, &qword_269751630);
    swift_allocError();
    swift_willThrow();
  }
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_24A00552C(uint64_t a1, double *a2)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_24A01518C(a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697515F0);
    sub_249F6EE60(&qword_2697515F8, &qword_2697515F0);
    swift_allocError();
    swift_willThrow();
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v9 + *(void *)(*(void *)v9 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  sub_249FF4188(a1);
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_release();
LABEL_6:
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

BOOL static ClockTimeInterval.< infix(_:_:)(char *a1, char *a2)
{
  return dbl_24A060F08[*a1] < dbl_24A060F08[*a2];
}

double ClockTimeInterval.rawValue.getter()
{
  return dbl_24A060F08[*v0];
}

ClockPoster::ClockTimeInterval_optional __swiftcall ClockTimeInterval.init(rawValue:)(Swift::Double rawValue)
{
  if (rawValue == 0.01666)
  {
    char *v1 = 0;
  }
  else
  {
    if (rawValue == 60.0) {
      char v2 = 2;
    }
    else {
      char v2 = 3;
    }
    if (rawValue == 1.0) {
      char v3 = 1;
    }
    else {
      char v3 = v2;
    }
    char *v1 = v3;
  }
  return result;
}

void *static ClockTimeInterval.allCases.getter()
{
  return &unk_26FDE6208;
}

BOOL sub_24A005774(char *a1, char *a2)
{
  return dbl_24A060F08[*a1] == dbl_24A060F08[*a2];
}

uint64_t sub_24A005798()
{
  return sub_24A004900();
}

uint64_t sub_24A0057A0()
{
  return sub_24A057E58();
}

uint64_t sub_24A0057D8()
{
  return sub_249FEEEC0();
}

ClockPoster::ClockTimeInterval_optional sub_24A0057E0(Swift::Double *a1)
{
  return ClockTimeInterval.init(rawValue:)(*a1);
}

double sub_24A0057E8@<D0>(double *a1@<X8>)
{
  double result = dbl_24A060F08[*v1];
  *a1 = result;
  return result;
}

void sub_24A005800(void *a1@<X8>)
{
  *a1 = &unk_26FDE6230;
}

BOOL sub_24A005810(char *a1, char *a2)
{
  return dbl_24A060F08[*a1] < dbl_24A060F08[*a2];
}

BOOL sub_24A005834(char *a1, char *a2)
{
  return dbl_24A060F08[*a2] >= dbl_24A060F08[*a1];
}

BOOL sub_24A005858(char *a1, char *a2)
{
  return dbl_24A060F08[*a1] >= dbl_24A060F08[*a2];
}

BOOL sub_24A00587C(char *a1, char *a2)
{
  return dbl_24A060F08[*a2] < dbl_24A060F08[*a1];
}

uint64_t sub_24A0058A0()
{
  return sub_249F744B0(*v0);
}

uint64_t OverrideTime.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24A056238();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t OverrideTime.date.setter(uint64_t a1)
{
  uint64_t v3 = sub_24A056238();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*OverrideTime.date.modify())()
{
  return CGSizeMake;
}

__n128 OverrideTime.advancingRate.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OverrideTime(0) + 20);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

uint64_t type metadata accessor for OverrideTime(uint64_t a1)
{
  return sub_249F95920(a1, (uint64_t *)&unk_269751410);
}

__n128 OverrideTime.advancingRate.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
  __n128 result = v6;
  *uint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

double (*OverrideTime.advancingRate.modify())(double, double)
{
  return CGSizeMake;
}

uint64_t OverrideTime.AdvancingRate.offset.getter()
{
  return *(void *)v0;
}

uint64_t OverrideTime.AdvancingRate.offset.setter(uint64_t result, uint64_t a2)
{
  *unint64_t v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*OverrideTime.AdvancingRate.offset.modify())()
{
  return CGSizeMake;
}

uint64_t OverrideTime.AdvancingRate.interval.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t OverrideTime.AdvancingRate.interval.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OverrideTime.AdvancingRate.interval.modify())()
{
  return CGSizeMake;
}

uint64_t OverrideTime.AdvancingRate.init(offset:interval:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

Swift::Void __swiftcall OverrideTime.AdvancingRate.pause()()
{
  *(void *)(v0 + 16) = sub_24A057F08();
  *(void *)(v0 + 24) = v1;
}

uint64_t static OverrideTime.AdvancingRate.paused.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24A057F08();
  uint64_t v4 = v3;
  uint64_t result = sub_24A057F08();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = result;
  a1[3] = v6;
  return result;
}

uint64_t static OverrideTime.AdvancingRate.== infix(_:_:)()
{
  if ((sub_24A057EF8() & 1) == 0) {
    return 0;
  }

  return sub_24A057EF8();
}

uint64_t sub_24A005BCC()
{
  if (*v0) {
    return 0x6C61767265746E69;
  }
  else {
    return 0x74657366666FLL;
  }
}

uint64_t sub_24A005C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A010EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A005C2C(uint64_t a1)
{
  unint64_t v2 = sub_24A005E48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A005C68(uint64_t a1)
{
  unint64_t v2 = sub_24A005E48();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OverrideTime.AdvancingRate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751348);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A005E48();
  sub_24A057EC8();
  uint64_t v16 = v8;
  uint64_t v17 = v7;
  char v18 = 0;
  uint64_t v10 = v15;
  sub_24A057CD8();
  if (!v10)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    char v18 = 1;
    sub_24A057CD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24A005E48()
{
  unint64_t result = qword_269751350;
  if (!qword_269751350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269751350);
  }
  return result;
}

uint64_t OverrideTime.AdvancingRate.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751358);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A005E48();
  sub_24A057EB8();
  if (!v2)
  {
    char v13 = 0;
    sub_24A057C88();
    long long v9 = v12;
    char v13 = 1;
    sub_24A057C88();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v12;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_24A006070@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return OverrideTime.AdvancingRate.init(from:)(a1, a2);
}

uint64_t sub_24A006088(void *a1)
{
  return OverrideTime.AdvancingRate.encode(to:)(a1);
}

uint64_t sub_24A0060A0()
{
  if ((sub_24A057EF8() & 1) == 0) {
    return 0;
  }

  return sub_24A057EF8();
}

__n128 OverrideTime.init(date:advancingRate:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v10 = *a2;
  unint64_t v5 = a2[1].n128_u64[0];
  unint64_t v6 = a2[1].n128_u64[1];
  uint64_t v7 = sub_24A056238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t v8 = (__n128 *)(a3 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
  __n128 result = v10;
  *uint64_t v8 = v10;
  v8[1].n128_u64[0] = v5;
  v8[1].n128_u64[1] = v6;
  return result;
}

BOOL static OverrideTime.== infix(_:_:)()
{
  BOOL result = 0;
  if (sub_24A0561D8())
  {
    type metadata accessor for OverrideTime(0);
    if (sub_24A057EF8() & 1) != 0 && (sub_24A057EF8()) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_24A006234()
{
  if (*v0) {
    return 0x6E69636E61766461;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_24A006274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A010FA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A00629C(uint64_t a1)
{
  unint64_t v2 = sub_24A0064E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A0062D8(uint64_t a1)
{
  unint64_t v2 = sub_24A0064E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OverrideTime.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751360);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A0064E4();
  sub_24A057EC8();
  LOBYTE(v13) = 0;
  sub_24A056238();
  sub_24A006908(&qword_269751370, MEMORY[0x263F07490]);
  sub_24A057CD8();
  if (!v2)
  {
    long long v9 = (long long *)(v3 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
    long long v10 = v9[1];
    long long v13 = *v9;
    long long v14 = v10;
    void v12[15] = 1;
    sub_24A006538();
    sub_24A057CD8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24A0064E4()
{
  unint64_t result = qword_269751368;
  if (!qword_269751368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269751368);
  }
  return result;
}

unint64_t sub_24A006538()
{
  unint64_t result = qword_269751378;
  if (!qword_269751378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269751378);
  }
  return result;
}

uint64_t OverrideTime.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v29 = sub_24A056238();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751380);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OverrideTime(0);
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A0064E4();
  sub_24A057EB8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v24 = v10;
  long long v13 = v12;
  uint64_t v14 = v26;
  LOBYTE(v30) = 0;
  sub_24A006908(&qword_269751388, MEMORY[0x263F07490]);
  uint64_t v15 = v29;
  uint64_t v16 = v27;
  sub_24A057C88();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v23 = (uint64_t)v13;
  v17(v13, v5, v15);
  char v32 = 1;
  sub_24A006950();
  sub_24A057C88();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v16);
  uint64_t v18 = v23;
  uint64_t v19 = (_OWORD *)(v23 + *(int *)(v24 + 20));
  long long v20 = v31;
  *uint64_t v19 = v30;
  v19[1] = v20;
  sub_24A0112B0(v18, v25, type metadata accessor for OverrideTime);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_24A011654(v18, type metadata accessor for OverrideTime);
}

uint64_t sub_24A006908(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A006950()
{
  unint64_t result = qword_269751390;
  if (!qword_269751390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269751390);
  }
  return result;
}

uint64_t sub_24A0069A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OverrideTime.init(from:)(a1, a2);
}

uint64_t sub_24A0069BC(void *a1)
{
  return OverrideTime.encode(to:)(a1);
}

BOOL sub_24A0069D4()
{
  return (sub_24A0561D8() & 1) != 0 && (sub_24A057EF8() & 1) != 0 && (sub_24A057EF8() & 1) != 0;
}

BOOL sub_24A006A64(uint64_t a1, uint64_t a2)
{
  return (_s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0(a2) & 1) == 0;
}

BOOL sub_24A006A90(uint64_t a1)
{
  return (_s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0(a1) & 1) == 0;
}

uint64_t sub_24A006AB0(uint64_t a1, uint64_t a2)
{
  return _s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0(a2);
}

uint64_t sub_24A006AC0()
{
  if (MEMORY[0x24C5B9AB0]("Clock:shared"))
  {
    type metadata accessor for SystemSystemStatusBarOverrideProvider();
    uint64_t v0 = (void *)swift_allocObject();
    v0[2] = 0;
    v0[3] = 0;
    v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7C2F8]), sel_init);
    type metadata accessor for SystemOverrideClock();
    uint64_t v1 = (void *)swift_allocObject();
    sub_24A00EB70((uint64_t)v0, v1);
    swift_release();
  }
  type metadata accessor for Clock(0);
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_24A007880();
  qword_269751340 = v2;
  return result;
}

uint64_t static Clock.shared.getter()
{
  if (qword_26974F328 != -1) {
    swift_once();
  }

  return swift_retain();
}

void sub_24A006BDC(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751398);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for OverrideTime(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
  uint64_t v14 = (os_unfair_lock_s *)(*(void *)(v13 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v14);
  swift_endAccess();
  uint64_t v15 = v13 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_249F6E790((uint64_t)v6, &qword_269751398);
  sub_249F6E6C8(v15, (uint64_t)v6, &qword_269751398);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  sub_249F6E664((uint64_t)v6, (uint64_t)v8, &qword_269751398);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_249F6E790((uint64_t)v8, &qword_269751398);
    id v16 = objc_msgSend(self, sel_now);
    sub_24A0561E8();
  }
  else
  {
    sub_24A011248((uint64_t)v8, (uint64_t)v12, type metadata accessor for OverrideTime);
    uint64_t v17 = sub_24A056238();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, v12, v17);
  }
}

uint64_t sub_24A006EA0()
{
  uint64_t v0 = sub_24A056238();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  uint64_t v5 = (void *)sub_24A057368();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  sub_24A006BDC((uint64_t)v3);
  uint64_t v6 = (void *)sub_24A056198();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  uint64_t v8 = sub_24A0573A8();
  return v8;
}

BOOL sub_24A00700C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751398);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  uint64_t v8 = type metadata accessor for OverrideTime(0);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v3, 1, 1, v8);
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v7 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  uint64_t v11 = v7 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_249F6E790((uint64_t)v3, &qword_269751398);
  sub_249F6E6C8(v11, (uint64_t)v3, &qword_269751398);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  sub_249F6E664((uint64_t)v3, (uint64_t)v6, &qword_269751398);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1;
  sub_249F6E790((uint64_t)v6, &qword_269751398);
  return v12;
}

uint64_t sub_24A0071F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*a1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  uint64_t v4 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  uint64_t v6 = v3 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_249F6E790(a2, &qword_269751398);
  sub_249F6E6C8(v6, a2, &qword_269751398);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_24A007310(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751398);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249F6E6C8(a1, (uint64_t)v4, &qword_269751398);
  return sub_24A0073A8((uint64_t)v4);
}

uint64_t sub_24A0073A8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269751398);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  uint64_t v10 = type metadata accessor for OverrideTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = (os_unfair_lock_s *)(*(void *)(v9 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  uint64_t v12 = v9 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_249F6E790((uint64_t)v5, &qword_269751398);
  sub_249F6E6C8(v12, (uint64_t)v5, &qword_269751398);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  sub_249F6E664((uint64_t)v5, (uint64_t)v8, &qword_269751398);
  uint64_t v13 = v1 + OBJC_IVAR____TtC11ClockPoster5Clock_lastOverrideTime;
  swift_beginAccess();
  sub_24A003F9C((uint64_t)v8, v13, &qword_269751398);
  swift_endAccess();
  sub_249F6E6C8(a1, (uint64_t)v8, &qword_269751398);
  sub_24A00B93C((uint64_t)v8);
  return sub_249F6E790(a1, &qword_269751398);
}

uint64_t sub_24A0075A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  uint64_t v4 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  uint64_t v6 = v3 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_249F6E790(a1, &qword_269751398);
  sub_249F6E6C8(v6, a1, &qword_269751398);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

void (*sub_24A0076BC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[9] = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269751398) - 8) + 64);
  uint64_t v5 = malloc(v4);
  v3[10] = v5;
  uint64_t v6 = malloc(v4);
  v3[11] = v6;
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  uint64_t v8 = type metadata accessor for OverrideTime(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  uint64_t v9 = (os_unfair_lock_s *)(*(void *)(v7 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  uint64_t v10 = v7 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_249F6E790((uint64_t)v5, &qword_269751398);
  sub_249F6E6C8(v10, (uint64_t)v5, &qword_269751398);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  sub_249F6E664((uint64_t)v5, (uint64_t)v6, &qword_269751398);
  return sub_24A007868;
}

void sub_24A007868(uint64_t a1, char a2)
{
}

uint64_t sub_24A007880()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26974F450);
  MEMORY[0x270FA5388](v2 - 8);
  size_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC11ClockPoster5Clock_lastOverrideTime;
  uint64_t v6 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_24A056228();
  uint64_t v7 = OBJC_IVAR____TtC11ClockPoster5Clock_atomicClock;
  type metadata accessor for AtomicClock();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = MEMORY[0x263F8EE80];
  *(void *)(v8 + 32) = MEMORY[0x263F8EE80];
  *(void *)(v1 + v7) = v8;
  uint64_t v10 = OBJC_IVAR____TtC11ClockPoster5Clock_textClock;
  *(void *)(v1 + v10) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TextClock(0)), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751660);
  uint64_t v12 = swift_allocObject();
  type metadata accessor for CPUnfairLock();
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(void *)(v12 + 16) = v13;
  *(void *)(v12 + 24) = v9;
  *(void *)(v1 + v11) = v12;
  uint64_t v14 = OBJC_IVAR____TtC11ClockPoster5Clock_textClockStreamObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751668);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(void *)(v15 + 16) = v16;
  *(void *)(v15 + 24) = v9;
  *(void *)(v1 + v14) = v15;
  uint64_t v17 = OBJC_IVAR____TtC11ClockPoster5Clock__lastOverridePublishTimeByInterval;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751670);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(void *)(v18 + 16) = v19;
  *(void *)(v18 + 24) = v9;
  *(void *)(v1 + v17) = v18;
  uint64_t v20 = OBJC_IVAR____TtC11ClockPoster5Clock_overrideDateStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269751650);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 96);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697515A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = *(void *)(*(void *)v21 + 104);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  *(void *)(v21 + v24) = v25;
  *(void *)(v21 + *(void *)(*(void *)v21 + 112)) = v9;
  *(unsigned char *)(v21 + *(void *)(*(void *)v21 + 120)) = 0;
  *(void *)(v1 + v20) = v21;
  type metadata accessor for OverrideClock(0);
  swift_allocObject();
  uint64_t v26 = swift_retain();
  *(void *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock) = sub_24A00C294(v26);
  uint64_t v27 = sub_24A057628();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v4, 1, 1, v27);
  sub_24A057608();
  swift_retain();
  uint64_t v28 = sub_24A0575F8();
  uint64_t v29 = (void *)swift_allocObject();
  uint64_t v30 = MEMORY[0x263F8F500];
  void v29[2] = v28;
  v29[3] = v30;
  _OWORD v29[4] = v1;
  sub_24A04CE18((uint64_t)v4, (uint64_t)&unk_269751680, (uint64_t)v29);
  swift_release();
  swift_release();
  *(void *)(*(void *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock) + 24) = &off_26FDEA7F0;
  swift_unknownObjectWeakAssign();
  return v1;
}

uint64_t sub_24A007C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_24A057608();
  *(void *)(v4 + 24) = sub_24A0575F8();
  uint64_t v6 = sub_24A0575D8();
  return MEMORY[0x270FA2498](sub_24A007D10, v6, v5);
}