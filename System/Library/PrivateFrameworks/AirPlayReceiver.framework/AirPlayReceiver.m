void *sub_22B31B548(void *result)
{
  *result = ++qword_2684028A0;
  return result;
}

uint64_t sub_22B31B564(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x263EF80C8];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x263EF8B00])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_22B31B7C0(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x263EF80C8];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x263EF8B00])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_22B31B950(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x263EF80C8];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x263EF8B00])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_22B31BB40(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x263EF8B00])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t XtCqEf5X(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (dword_2683EB118 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B473700[byte_22B497360[(-121 * (dword_2683EB118 ^ 0x4D ^ qword_2683EB0F0))] ^ 0x9E])
                + 231);
  uint64_t v5 = *(void *)(v4 - 4);
  uint64_t v6 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 - v5) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 - v5) ^ 0x4D))] ^ 0x4F])
                + 14);
  unint64_t v7 = (unint64_t)&v9[v5 + *(void *)(v6 - 4)];
  *(void *)(v4 - 4) = 2059148423 * v7 + 0x6612F2EFA3D4CE9BLL;
  *(void *)(v6 - 4) = 2059148423 * (v7 ^ 0xD2361EE8B96764DLL);
  unsigned int v11 = 2009815553 * ((2 * (v10 & 0x14594FB8) - v10 + 1806086208) ^ 0x9AAD9E05) + 3165;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  v10[0] = a3;
  v10[1] = a4;
  LOBYTE(v6) = -121 * (*(_DWORD *)(v4 - 4) ^ 0x4D ^ *(_DWORD *)(v6 - 4));
  (*((void (**)(void *))*(&off_26DE9F480
                                     + ((-121
                                                                      * ((qword_2683EB0F0 + dword_2683EB118) ^ 0x4D)) ^ byte_22B47E780[byte_22B473800[(-121 * ((qword_2683EB0F0 + dword_2683EB118) ^ 0x4D))] ^ 0x9B])
                                     + 215)
   + (*((unsigned char *)off_26DE9FFD8
                                     + (*((unsigned __int8 *)off_26DE9FEC8 + v6 - 4) ^ 0xABu)
                                     - 8) ^ v6)
   + 4104))(v10);
  return v12 ^ 0xDBFEEC4B;
}

uint64_t VONlh32NYbFTEnv()
{
  return 2;
}

uint64_t sub_22B31BEE0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_26DE9FFD8
         + (*((unsigned char *)off_26DE9FEC8 + a2 - 4) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_22B31BF0C(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FFD8 + (*((unsigned __int8 *)off_26DE9FEC8 + a1 - 4) ^ 3u) - 8) ^ a1;
}

uint64_t sub_22B31BF38(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_26DE9FD38
         + (*((unsigned char *)off_26DE9F7D0 + a2 - 4) ^ a1)
         - 12) ^ a2;
}

uint64_t sub_22B31BF64(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FD38
         + (*((unsigned __int8 *)off_26DE9F7D0 + a1 - 4) ^ 0x9Eu)
         - 12) ^ a1;
}

uint64_t sub_22B31BF94(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_26DEA0388 + (*((unsigned char *)off_26DE9F930 + a2) ^ a1)
                                            - 4) ^ a2;
}

uint64_t sub_22B31BFC0(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DEA0388 + (*((unsigned __int8 *)off_26DE9F930 + a1) ^ 0x64u) - 4) ^ a1;
}

uint64_t sub_22B31BFF0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_26DE9F978 + (*((unsigned char *)off_26DEA0418 + a2) ^ a1)) ^ a2;
}

uint64_t sub_22B31C01C(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9F978 + (*((unsigned __int8 *)off_26DEA0418 + a1) ^ 0x27u)) ^ a1;
}

uint64_t sub_22B31C048(unsigned int a1)
{
  return (*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78 + a1 - 8) ^ 0xE1] ^ a1;
}

uint64_t sub_22B31C074(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FD38
         + (*((unsigned __int8 *)off_26DE9F7D0 + a1 - 4) ^ 0xE7u)
         - 12) ^ a1;
}

uint64_t sub_22B31C0A4(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FDA0 + (*((unsigned __int8 *)off_26DEA02C0 + a1 - 8) ^ 0x45u)
                                            - 8) ^ a1;
}

uint64_t sub_22B31C0D4(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FD38
         + (*((unsigned __int8 *)off_26DE9F7D0 + a1 - 4) ^ 0x2Au)
         - 12) ^ a1;
}

uint64_t sub_22B31C104(unsigned int a1)
{
  return (*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78 + a1 - 8) ^ 0x9B] ^ a1;
}

uint64_t sub_22B31C130(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v1 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 - dword_268401448) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 - dword_268401448) ^ 0x4D))] ^ 0x4F])
                + 232);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (v2 ^ qword_2683EB0F0 ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * (v2 ^ qword_2683EB0F0 ^ 0x4D))] ^ 0x4F])
                + 14);
  unint64_t v4 = (*(void *)(v3 - 4) + v2) ^ (unint64_t)&v6;
  *(void *)(v1 - 4) = 2059148423 * v4 + 0xD2361EE8B96764DLL;
  *(void *)(v3 - 4) = 2059148423 * (v4 ^ 0xD2361EE8B96764DLL);
  unsigned int v7 = 2568 - 1328090399 * ((2 * (&v7 & 0x22FFE9A8) - &v7 + 1560286802) ^ 0xA2D37268);
  uint64_t v8 = a1;
  LOBYTE(v3) = -121 * ((*(_DWORD *)(v3 - 4) - *(_DWORD *)(v1 - 4)) ^ 0x4D);
  return (*((uint64_t (**)(unsigned int *))*(&off_26DE9F480
                                                     + ((-121
                                                                                      * ((qword_2683EB0F0
                                                                                        - dword_268401448) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 - dword_268401448) ^ 0x4D))] ^ 0xE7])
                                                     + 164)
          + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78 + v3
                                                                                                - 8) ^ 0xE1] ^ v3)
          + 4074))(&v7);
}

uint64_t sub_22B31C31C(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(&off_26DE9F480
       + ((-121 * ((qword_2683EB0F0 - dword_268401430) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 - dword_268401430) ^ 0x4D))] ^ 0x9E])
       + 242);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 + *v1) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 + *v1) ^ 0x4D))] ^ 3])
                + 37);
  uint64_t v3 = *v1 - (void)&v5 + *(void *)(v2 - 4);
  *uint64_t v1 = 2059148423 * (v3 - 0xD2361EE8B96764DLL);
  *(void *)(v2 - 4) = 2059148423 * (v3 ^ 0xD2361EE8B96764DLL);
  uint64_t v7 = a1;
  unsigned int v6 = 1990461019 * (((&v6 | 0x1341DF9F) - (&v6 & 0x1341DF9F)) ^ 0x3CA57D16) + 320;
  LOBYTE(v2) = -121 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v1) ^ 0x4D);
  return (*((uint64_t (**)(unsigned int *))*(&off_26DE9F480
                                                     + ((-121
                                                                                      * ((qword_2683EB0F0
                                                                                        + dword_268401430) ^ 0x4D)) ^ byte_22B47E780[byte_22B473800[(-121 * ((qword_2683EB0F0 + dword_268401430) ^ 0x4D))] ^ 0x9B])
                                                     + 215)
          + (*((unsigned char *)off_26DE9F978
                                            + (*((unsigned __int8 *)off_26DEA0418 + v2) ^ 0x27u)) ^ v2)
          + 3896))(&v6);
}

uint64_t sub_22B31C518(char a1, unsigned int a2)
{
  return (*off_26DE9F610)[(*((unsigned char *)off_26DE9FB78 + a2 - 8) ^ a1)] ^ a2;
}

uint64_t sub_22B31C544(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_26DE9FDA0
         + (*((unsigned char *)off_26DEA02C0 + a2 - 8) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_22B31C570(unsigned int a1)
{
  return (*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78 + a1 - 8) ^ 7] ^ a1;
}

uint64_t sub_22B31C598(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DEA0388 + ~*((unsigned char *)off_26DE9F930 + a1) - 4) ^ a1;
}

uint64_t sub_22B31C5C4(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FFD8 + (*((unsigned __int8 *)off_26DE9FEC8 + a1 - 4) ^ 0xABu)
                                            - 8) ^ a1;
}

uint64_t sub_22B31C5F4(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FFD8 + (*((unsigned __int8 *)off_26DE9FEC8 + a1 - 4) ^ 0x85u)
                                            - 8) ^ a1;
}

uint64_t sub_22B31C624(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(&off_26DE9F480
       + ((-121 * (dword_2683F6228 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B497260[byte_22B48A380[(-121 * (dword_2683F6228 ^ 0x4D ^ qword_2683EB0F0))] ^ 3])
       + 48);
  uint64_t v2 = (char *)off_26DE9F7D0 - 4;
  uint64_t v3 = (char *)off_26DE9FD38 - 12;
  uint64_t v4 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9FD38
                                                  + (*((unsigned __int8 *)off_26DE9F7D0
                                                     + (-121 * (*v1 ^ qword_2683EB0F0 ^ 0x4D))
                                                     - 4) ^ 0x2Au)
                                                  - 12) ^ (-121 * (*v1 ^ qword_2683EB0F0 ^ 0x4D)))
                + 105);
  unint64_t v5 = *v1 ^ (unint64_t)&v7 ^ *(void *)(v4 - 4);
  *uint64_t v1 = 2059148423 * v5 + 0x6612F2EFA3D4CE9BLL;
  *(void *)(v4 - 4) = 2059148423 * (v5 ^ 0xD2361EE8B96764DLL);
  uint64_t v9 = a1;
  unsigned int v8 = 1855 - 1990461019 * (((&v8 | 0xCE87B0A9) - (&v8 & 0xCE87B0A9)) ^ 0xE1631220);
  LOBYTE(v4) = -121 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)v1) ^ 0x4D);
  (*((void (**)(unsigned int *))*(&off_26DE9F480
                                           + ((-121
                                                                            * (dword_2683F6228 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B497260[byte_22B48A380[(-121 * (dword_2683F6228 ^ 0x4D ^ qword_2683EB0F0))] ^ 0x85])
                                           + 306)
   + (v4 ^ v3[v2[v4] ^ 0x2A])
   + 3976))(&v8);
  return v10;
}

uint64_t wmhYOjgJkR()
{
  return 2;
}

uint64_t VLxCLgDpiF(int a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v1 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (dword_2683EB120 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B47E780[byte_22B473800[(-121 * (dword_2683EB120 ^ 0x4D ^ qword_2683EB0F0))] ^ 7])
                + 32);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_26DE9F480
                + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                   + (-121
                                                                                     * ((qword_2683EB0F0 + v2) ^ 0x4D))
                                                                   - 8) ^ 0x9B] ^ (-121 * ((qword_2683EB0F0 + v2) ^ 0x4D)))
                + 122);
  unint64_t v4 = (*(void *)(v3 - 4) + v2) ^ (unint64_t)&v7;
  *(void *)(v1 - 4) = 2059148423 * (v4 - 0xD2361EE8B96764DLL);
  *(void *)(v3 - 4) = 2059148423 * (v4 ^ 0xD2361EE8B96764DLL);
  unsigned int v5 = 1734664879 * ((-1249393154 - (v8 | 0xB587C5FE) + (v8 | 0x4A783A01)) ^ 0x65A3121B);
  v8[0] = v5 ^ (a1 - ((2 * a1) & 0xD64500C2) - 350060447);
  v8[1] = v5 + 490;
  LOBYTE(v3) = -121 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)(v1 - 4)) ^ 0x4D);
  (*((void (**)(_DWORD *))*(&off_26DE9F480
                                     + ((-121
                                                                      * ((qword_2683EB0F0 + dword_2683EB120) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 + dword_2683EB120) ^ 0x4D))] ^ 0x4F])
                                     + 124)
   + (*((unsigned char *)off_26DE9FFD8
                                     + (*((unsigned __int8 *)off_26DE9FEC8 + v3 - 4) ^ 0x85u)
                                     - 8) ^ v3)
   + 4160))(v8);
  return v8[2] ^ 0xDBFEEC4B;
}

uint64_t sub_22B31CA40(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FDA0 + (*((unsigned __int8 *)off_26DEA02C0 + a1 - 8) ^ 0xE6u)
                                            - 8) ^ a1;
}

uint64_t sub_22B31CA70(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9F978 + (*((unsigned __int8 *)off_26DEA0418 + a1) ^ 0x1Cu)) ^ a1;
}

uint64_t sub_22B31CA98(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FFD8 + (*((unsigned __int8 *)off_26DE9FEC8 + a1 - 4) ^ 0x4Fu)
                                            - 8) ^ a1;
}

uint64_t sub_22B31CAC8(unsigned int a1)
{
  return *((unsigned __int8 *)off_26DE9FD38
         + (*((unsigned __int8 *)off_26DE9F7D0 + a1 - 4) ^ 0x4Fu)
         - 12) ^ a1;
}

void sub_22B31CAFC(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    BOOL v2 = *(void *)(a1 + 24) == 0x5E30592FF90A5404;
  }
  else {
    BOOL v2 = 1;
  }
  char v5 = v2 || *(void *)(a1 + 8) == 0x101D446ABDECEE38 || *(void *)(a1 + 16) == 0x717BE438C5D0856CLL;
  int v1 = *(_DWORD *)(a1 + 40) ^ (1438293641 * ((a1 - 149414616 - 2 * (a1 & 0xF7181D28)) ^ 0x4FDF4857));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B31CBCC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((74 * (((v2 == 0xF6979242) ^ (v1 - 45)) & 1)) | v1)))(a1, 338197469);
}

void sub_22B31CC18()
{
  *unsigned int v1 = v0;
}

void sub_22B31CC5C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1734664879 * ((-2 - ((a1 | 0xBFDEA4E0) + (~a1 | 0x40215B1F))) ^ 0x6FFA7305));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_22B31CDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unsigned char *a44,uint64_t a45)
{
  *a44 = v47 - 7;
  int v49 = 1503746353 * ((~((v48 - 152) | 0x182ACDF5) + ((v48 - 152) & 0x182ACDF5)) ^ 0xC1B4F0BC);
  *(_DWORD *)(v48 - 152) = v49 + 1331781508;
  *(_DWORD *)(v48 - 128) = v46 - v49 - 1545;
  STACK[0xDA8] = v45;
  STACK[0xDA0] = (unint64_t)a44;
  (*(void (**)(uint64_t))(a4 + 8 * (v46 ^ 0x343)))(v48 - 152);
  STACK[0xDA0] = a40 + 16 * (int)v47 + 725434256;
  STACK[0xD98] = v45;
  *(_DWORD *)(v48 - 136) = (v46 - 2844) ^ (731811679
                                         * ((~((v48 - 152) | 0x1A3B3226) + ((v48 - 152) & 0x1A3B3226)) ^ 0xAC326B9D));
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(a45 + 8 * (v46 + 841)))(v48 - 152);
  return (*(uint64_t (**)(uint64_t))(a45
                                            + 8
                                            * ((63
                                              * (v47 + ((v46 - 974) ^ 0xBC3u) + ((v46 - 974) | 0x338u) != 1833712402)) ^ v46)))(v50);
}

uint64_t sub_22B31CF50()
{
  BOOL v4 = v3 - 484148410 >= v1 + ((v0 + 1145705558) & 0xBBB5ED9D) - 1716 + 1732;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v4) | (16 * v4)) ^ v0)))();
}

uint64_t sub_22B31CFA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v5 + 8
                                   * (((v4 + 1457 + v1 + v3) * ((unint64_t)(v2 - a1) > 0x1F)) ^ (v4 + 1457))))();
}

uint64_t sub_22B31CFD8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v8 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A67D93) = v6 + 4;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((1551 * (*v5 == (a5 ^ 0xC22) + a2 + 15 * (a5 ^ 0x8B0))) ^ a5)))(86);
}

uint64_t sub_22B31D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (int)(((a10 != v10) * (((v12 + 2004006922) & 0x888D4DFD) - 2804)) ^ v12)))();
}

uint64_t sub_22B31D0A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * ((((9 * (v7 ^ 0xFB0)) ^ ((v7 ^ 0x4F8) - 731876707) & 0x2B9F8FEC ^ 0x36F)
                                                       * ((a3 + a7 - 16) < 0xFFFFFFF0)) ^ v7 ^ 0x4F8)))(a1, a2);
}

uint64_t sub_22B31D108@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18)
{
  BOOL v19 = a2 - 894204597 < (int)(a18 + 26895013);
  if (a2 - 894204597 < -2120588635 != a18 > 115 * (a1 ^ 0x1B5u) + 2120588289) {
    BOOL v19 = a18 > 115 * (a1 ^ 0x1B5u) + 2120588289;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * (a1 ^ (8 * (((((a1 ^ 0x1B5) + 2265) ^ v19) & 1) == 0)))))();
}

uint64_t sub_22B31D18C(int a1, uint64_t a2, int a3, int a4, int a5)
{
  *(void *)(v8 + (v6 + a5 + v5)) = *(void *)(v7 + (v6 + a5 + v5));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a4 + a5 != 8) * a1) ^ a3)))();
}

uint64_t sub_22B31D1C0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v7 = (_DWORD *)(v2 + 4 * (a1 + v6));
  int v8 = *(v7 - 8) ^ *(_DWORD *)(v2 + 4 * ((a2 ^ 0x471u ^ (unint64_t)(v6 - 1216)) + a1));
  unsigned int v9 = v8 + v5 - ((2 * v8) & 0xB7FDD896);
  int v10 = *(v7 - 16) ^ *(v7 - 14);
  HIDWORD(v11) = v10 ^ 0x5BFEEC4B ^ v9;
  LODWORD(v11) = v10 ^ ~v9;
  *uint64_t v7 = (v11 >> 31) + v5 - ((2 * (v11 >> 31)) & 0xB7FDD896);
  return (*(uint64_t (**)(void))(v3 + 8 * ((2499 * (a1 + 1 == v4 + 80)) ^ (a2 + 1003))))();
}

uint64_t sub_22B31D264(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 8) = a3;
  return result;
}

uint64_t sub_22B31D274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unint64_t v22 = (0x65DA6504557CB416 - ((v21 - 144) | 0x65DA6504557CB416) + a17) ^ 0xA5EBD6028567E960;
  v18[3] = **(unsigned int **)(v20 + 8 * (v17 - 1708)) - 1990461019 * v22;
  *(_DWORD *)(v21 - 136) = 1990461019 * v22;
  *(_DWORD *)(v21 - 120) = (v17 - 1084415377) ^ (1990461019 * v22);
  *(_DWORD *)(v21 - 116) = v17 + 1017353286 + 1990461019 * v22;
  *(_DWORD *)(v21 - 112) = ((v17 + 1017353286) ^ 0xAC) + 1990461019 * v22;
  *(_DWORD *)(v21 - 108) = ((v17 + 1017353286) ^ 0x68) + 1990461019 * v22;
  *uint64_t v18 = 0x9908B0DF00000000;
  v18[1] = -1990461019 * v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v17 + 2186)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * *(int *)(v21 - 132)))(v23);
}

uint64_t sub_22B31D374@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 - 0x66E5C4D1D99E9762) = 0;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((*(unsigned __int8 *)(v3 - 0x717BE438C5D0855BLL) == (((v2 + 21) & 0xEF) - 24))
                                     * ((v2 + 1191733669) & 0xB8F79FFE ^ 0xBD9)) ^ v2)))();
}

void sub_22B31D400(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) != 0x3FB394992CBB4F6FLL && *(void *)(a1 + 16) != 0 && *(void *)(a1 + 8) != 0;
  int v1 = *(_DWORD *)a1 ^ (1866394843 * ((((2 * a1) | 0x78D0C56E) - a1 + 1134009673) ^ 0x567F5543));
  __asm { BRAA            X12, X17 }
}

uint64_t sub_22B31D504()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((57 * (v1 < ((3 * ((v0 + 96171517) & 0xFA448FF6 ^ 0x9A3)) ^ 0x689))) ^ v0)))();
}

uint64_t sub_22B31D554()
{
  return v0();
}

uint64_t sub_22B31D5A0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  uint64_t v8 = v4 - 1;
  *(void *)(a1 + 144) = v8;
  *(unsigned char *)(a2 + v8) = ((v3 + 1) ^ v5) * (v3 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((*(void *)(a1 + 144) == 0) * ((v2 - 1262) ^ v6)) | v2)))();
}

uint64_t sub_22B31D5AC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,unsigned __int8 a37,int a38,char a39,char a40,char a41,unsigned __int8 a42,char a43,char a44,unsigned __int8 a45,__int16 a46,char a47,__int16 a48,char a49,char a50,__int16 a51,char a52,char a53,__int16 a54,char a55,char a56,__int16 a57,char a58,char a59,int a60,unsigned __int8 a61,char a62,char a63)
{
  HIDWORD(a15) = a1 - 2544;
  int v83 = BYTE2(a31) ^ v76;
  uint64_t v84 = *(void *)(v79 + 8 * (a1 ^ 0xB3E));
  unsigned int v85 = *(unsigned __int8 *)(v84 + (a74 ^ v76) % ((a1 + 16) ^ 0xBAu)) ^ v76;
  *(unsigned char *)(v81 - 139) = ((*(unsigned char *)(v84
                                     + (unsigned __int16)(((v85 >> 4) | (16 * v85))
                                                        - 21 * ((3121 * ((v85 >> 4) | (16 * v85))) >> 16))) ^ v76) & ((((171 * v83) >> 9) & 0x23 | HIBYTE(a26) & 0x5C) ^ 0x18))
                        - 108;
  unsigned int v86 = ((205 * v83) >> 10) * ((205 * v83) >> 10);
  BYTE3(a19) = 2 * v86 - ((4 * v86) & 0x34) + 27;
  *(unsigned char *)(v81 - 117) = 56;
  int v87 = (*(unsigned __int8 *)(v84
                            + ((a73 ^ v76)
                                              - 21
                                              * ((((unsigned __int16)(135 * (a73 ^ v76)) >> 8)
                                                                 + ((((a73 ^ v76)
                                                                                     - ((unsigned __int16)(135 * (a73 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) >> 1) & 0x10 | 8;
  *(unsigned char *)(v81 - 113) = v87;
  char v88 = (*(unsigned char *)(v81 - 100) ^ v76) - ((2 * (*(unsigned char *)(v81 - 100) ^ v76) + 32) & v77) - 85;
  *(unsigned char *)(v81 - 100) = v88;
  *(unsigned char *)(v81 - 103) = (*(unsigned char *)(v81 - 103) ^ v76) - ((2 * (*(unsigned char *)(v81 - 103) ^ v76) + 22) & v77) - 90;
  unsigned int v89 = *(unsigned __int8 *)(v81 - 125);
  unsigned int v90 = (a23 ^ v76)
      - ((*(unsigned __int8 *)(v81 - 127) ^ 0x80) & ((171 * (v89 ^ 0x80)) >> 9) & ((BYTE2(a20) ^ v76) & (*(unsigned __int8 *)(v81 - 101) ^ 0x64) | *(unsigned char *)(v81 - 101) & 0x38 ^ 0x18) | (*(unsigned __int8 *)(v84 + ((BYTE3(a23) ^ v76) - 21 * ((((unsigned __int16)(135 * (BYTE3(a23) ^ v76)) >> 8) + ((((BYTE3(a23) ^ v76) - ((unsigned __int16)(135 * (BYTE3(a23) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) & (*(unsigned __int8 *)(v81 - 127) ^ 0x7F));
  LOBYTE(a23) = v90 - (v77 & (2 * v90)) + 27;
  char v91 = *(unsigned char *)(v81 - 104);
  int v92 = *(unsigned __int8 *)(v81
                           - 151
                           + ((BYTE2(a27) ^ v76)
                                             - 35 * ((235 * (BYTE2(a27) ^ v76)) >> 13)));
  *(unsigned char *)(v81 - 139) = (((*(unsigned char *)(v81 - 129) ^ 0x80) & (v88 ^ v76) | (v88 & v77) ^ 0x24u)
                         / 5) | 0x80;
  int v93 = (((v89 >> 1) & 0x5E ^ 0x60) - (v89 & 0x14) + 10) ^ 0xA;
  char v94 = (*(unsigned char *)(v81 - 123) ^ 0x80) & (v91 ^ v76 | 0x50) | (v91 ^ v76) & 0x50;
  BYTE1(a19) = (BYTE1(a19) ^ v76) - v94 * v94 - (v77 & (2 * ((BYTE1(a19) ^ v76) - v94 * v94))) + 27;
  int v95 = *(unsigned __int8 *)(v81
                           - 151
                           + ((HIBYTE(a22) ^ v76)
                                             - 35 * ((235 * (HIBYTE(a22) ^ v76)) >> 13))) ^ 0x7F;
  int v215 = *(unsigned __int8 *)(v81
                            - 151
                            + ((BYTE6(a20) ^ v76)
                                              - 35 * ((235 * (BYTE6(a20) ^ v76)) >> 13)))
       + v93 * v93 * v93
       + 38;
  unsigned int v96 = (v215 ^ 0xF4DDB5DF) + ((2 * v215) & 0x1BE) + 186796577;
  int v97 = *(unsigned __int8 *)(v81 - 116 + (a65 ^ v76) % 0x14u);
  int v98 = *(unsigned __int8 *)(v84
                           + ((BYTE1(a26) ^ v76)
                                             - 21
                                             * ((((unsigned __int16)(135
                                                                                    * (BYTE1(a26) ^ v76)) >> 8)
                                                                + ((((BYTE1(a26) ^ v76)
                                                                                    - ((unsigned __int16)(135 * (BYTE1(a26) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(unsigned char *)(v81 - 97) = v98;
  unsigned int v99 = (BYTE1(a23) ^ v76) + ((205 * (*(unsigned __int8 *)(v84 + v96 % 0x15) ^ v76)) >> 10);
  BYTE1(a23) = v99 - (v77 & (2 * v99)) + 27;
  HIDWORD(a17) = v95 + (~(2 * v95 + 58) | 0xFFFFFFA1) - 115;
  LODWORD(a18) = (v95 + (~(2 * v95 + 58) | 0xA1) - 115) ^ 0x2F;
  unsigned __int16 v100 = a18 + 9998 - ((2 * a18) & 0x1C);
  uint64_t v101 = v96 % 0x14;
  unsigned int v102 = ((((BYTE4(a17) ^ 0xF) & ~*(unsigned char *)(v81 - 146) & *(unsigned char *)(v81 - 133) | (*(unsigned char *)(v81 - 146) & ~*(unsigned char *)(v81 - 104))) & 0x19 | (*(unsigned __int8 *)(v81 - 116 + v101) >> 1) & 0x66) ^ 0xFFFFFFE2)
       + (v98 ^ v76);
  *(unsigned char *)(v81 - 97) = v102 - (v77 & (2 * v102)) + 27;
  char v103 = *(unsigned char *)(v81
                  - 151
                  + ((a65 ^ v76) - 35 * ((235 * (a65 ^ v76)) >> 13))) ^ 0x80;
  LOBYTE(v102) = *(unsigned char *)(v84
                          + ((a69 ^ v76)
                                            - 21
                                            * ((((unsigned __int16)(135 * (a69 ^ v76)) >> 8)
                                                               + ((((a69 ^ v76)
                                                                                   - ((unsigned __int16)(135 * (a69 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4)));
  char v104 = *(unsigned char *)(v84
                  + ((BYTE5(a34) ^ v76)
                                    - 21
                                    * ((((unsigned __int16)(135 * (BYTE5(a34) ^ v76)) >> 8)
                                                       + ((((BYTE5(a34) ^ v76)
                                                                           - ((unsigned __int16)(135
                                                                                               * (BYTE5(a34) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(unsigned char *)(v81 - 101) ^= v103 * v103 * v103;
  char v105 = 92
       - (*(unsigned char *)(v81 - 116 + (unsigned __int16)((v100 ^ 0x270E) - 20 * (((v100 ^ 0x270E) & 0x3FFFu) / 0x14))) ^ v76);
  char v106 = (v105 | a32 ^ 0xE4) & (*(unsigned char *)(v81 - 114) ^ v76) | v105 & (a32 ^ 0xE4);
  char v107 = (v106 + 27 + (~(2 * v106) | 0xCB)) ^ v82;
  char v108 = *(unsigned char *)(v81 - 150) + v107 * v107 * v107;
  unsigned int v212 = (((v97 & 0xFFFFFFB3 ^ 0x57) << (((v91 ^ 3) + 2) & 7)) ^ ((v97 & 0xB3 ^ 0x57) >> (((v91 ^ 4) - 1) & 7))) & (v87 ^ v76) | (v92 ^ 0xFFFFFF80) & (v87 ^ 0xFFFFFFE4);
  BYTE6(a20) ^= 3
              * ((((HIBYTE(a27) ^ v76) << (((v102 ^ 4) + 1) & 7)) ^ ((HIBYTE(a27) ^ v76) >> (v102 & 7 ^ 3)))
               - 3 * (v104 ^ v76));
  *(unsigned char *)(v81 - 147) ^= (171 * (a72 ^ v76)) >> 9;
  *(unsigned char *)(v81 - 150) = v108;
  *(unsigned char *)(v81 - 97) ^= (43691
                         * (~*(unsigned __int8 *)(v84
                                                + ((BYTE3(a30) ^ v76)
                                                                  - 21
                                                                  * ((((unsigned __int16)(135 * (BYTE3(a30) ^ v76)) >> 8)
                                                                                     + ((((BYTE3(a30) ^ v76) - ((unsigned __int16)(135 * (BYTE3(a30) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x1B | 0xE0)
                         * (*(unsigned __int8 *)(v81
                                               - 151
                                               + ((a24 ^ v76)
                                                                 - 35
                                                                 * ((235 * (a24 ^ v76)) >> 13))) ^ 0x80u)) >> 17;
  LOBYTE(v86) = *(unsigned char *)(v81
                         - 151
                         + ((BYTE3(a20) ^ v76)
                                           - 35 * ((235 * (BYTE3(a20) ^ v76)) >> 13))) ^ BYTE3(a19) ^ 0x64;
  *(unsigned char *)(v81 - 139) += (v86 | a66) & 0xC0 | v86 & (a66 ^ v76);
  BYTE3(a23) = (BYTE3(a23) ^ v76) - ((2 * (BYTE3(a23) ^ v76) + 58) & v77) - 104;
  int v109 = (*(unsigned __int8 *)(v81 - 129) ^ 0x80 | a37 ^ v76) & (*(unsigned __int8 *)(v81 - 101) ^ v76) | (*(unsigned __int8 *)(v81 - 129) ^ 0x80) & (a37 ^ v76);
  int v110 = *(unsigned __int8 *)(v81 - 116 + (BYTE2(a24) ^ v76) % 0x14u) ^ v76;
  int v111 = *(unsigned __int8 *)(v81 - 115);
  unsigned int v112 = (v109 | v110) & (v111 ^ v76) | v109 & v110;
  LOBYTE(v110) = 2
               * *(unsigned char *)(v81
                          - 151
                          + ((a69 ^ v76)
                                            - 35 * ((235 * (a69 ^ v76)) >> 13)));
  int v113 = (v112 << (-(v110 & (*(unsigned char *)(v81 - 116) ^ 4) | *(unsigned char *)(v81 - 116) & 4) & 6)) ^ (v112 >> (v110 & (*(unsigned char *)(v81 - 116) & 6 ^ 4) | *(unsigned char *)(v81 - 116) & 4));
  BYTE3(a34) = v113 - (v77 & (2 * v113)) + 27;
  LODWORD(v101) = *(unsigned __int8 *)(v81 - 116 + v101);
  int v114 = ((v101 ^ 8) & (v111 & 0x4C ^ 8) | ~v111 & 4) & ((2
                                                        * *(unsigned __int8 *)(v84
                                                                             + ((BYTE3(a27) ^ v76)
                                                                                               - 21
                                                                                               * ((((unsigned __int16)(135 * (BYTE3(a27) ^ v76)) >> 8) + ((((BYTE3(a27) ^ v76) - ((unsigned __int16)(135 * (BYTE3(a27) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4)))) ^ 4);
  unsigned int v115 = (39324 * (a42 ^ v76)) >> 16;
  unsigned int v116 = ((*(unsigned __int8 *)(v84
                              + ((BYTE6(a28) ^ v76)
                                                - 21
                                                * ((((unsigned __int16)(135
                                                                                       * (BYTE6(a28) ^ v76)) >> 8)
                                                                   + ((((BYTE6(a28) ^ v76)
                                                                                       - ((unsigned __int16)(135 * (BYTE6(a28) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76)
        + (a61 ^ v76)) >> 1;
  int v117 = (v116 | v115) & (*(unsigned __int8 *)(v81 - 150) ^ 0x80);
  int v118 = v116 & v115;
  HIDWORD(a8) = (v100 ^ 0x270E) & 0x3FFF;
  uint64_t v204 = (unsigned __int16)((v100 ^ 0x270E) - 35 * (((v100 ^ 0x270E) & 0x3FFFu) / 0x23));
  int v119 = v117 | v118;
  char v210 = v117 | v118;
  LOBYTE(v118) = *(unsigned char *)(v81 - 151 + v204) & 0x97 ^ 0x88 | v101 ^ 0x13;
  LOBYTE(v116) = ((a23 ^ v76) >> (-*(unsigned char *)(v81 - 129) & 7)) ^ ((a23 ^ v76) << (*(unsigned char *)(v81 - 129) & 7));
  LOBYTE(v101) = (*(unsigned char *)(v81 - 110) & 0xA5 | *(unsigned char *)(v81 - 104) & 0x5A) ^ v76;
  *(unsigned char *)(v81 - 135) = v118 + *(unsigned char *)(v81 - 135) - ((v116 | v101) & 0xE3 | v116 & v101);
  LODWORD(v101) = (-34 - v119);
  *(unsigned char *)(v81 - 102) ^= *(unsigned char *)(v81 - 151 + (-34 - v119 - 35 * ((235 * v101) >> 13))) ^ 0x80;
  LOBYTE(v116) = *(unsigned char *)(v81 - 116 + (a71 ^ v76) % 0x14u) ^ v76;
  unsigned int v120 = *(unsigned __int8 *)(v84
                            + (v116
                                              - 21
                                              * ((((unsigned __int16)(135 * v116) >> 8)
                                                                 + (((v116
                                                                                     - ((unsigned __int16)(135 * v116) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  int v121 = (v120 << ((2
                  * (*(unsigned char *)(v81
                              - 151
                              + ((HIBYTE(a32) ^ v76)
                                                - 35
                                                * ((235 * (HIBYTE(a32) ^ v76)) >> 13))) ^ 0x80)) & 6)) ^ (v120 >> ((-2 * (*(unsigned char *)(v81 - 151 + ((HIBYTE(a32) ^ v76) - 35 * ((235 * (HIBYTE(a32) ^ v76)) >> 13))) ^ 0x80)) & 6));
  unsigned int v122 = (205
        * ((*(unsigned char *)(v81 - 116 + (a75 ^ v76) % 0x14u) & 0x83 | *(unsigned char *)(v81
                                                                                           - 116
                                                                                           + (a53 ^ v76)
                                                                                           % 0x14u) & 0x7C) ^ v76)) >> 10;
  LOBYTE(v121) = ((v122 | v121) & 0x25 | v122 & v121) + (BYTE2(a21) ^ v76);
  BYTE2(a21) = v121 + (~(2 * v121) | 0xC9) + 28;
  LOBYTE(v121) = (*(unsigned char *)(v84
                           + ((BYTE4(a24) ^ v76)
                                             - 21
                                             * ((((unsigned __int16)(135
                                                                                    * (BYTE4(a24) ^ v76)) >> 8)
                                                                + ((((BYTE4(a24) ^ v76)
                                                                                    - ((unsigned __int16)(135 * (BYTE4(a24) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76)
               + 92;
  int v123 = *(unsigned __int8 *)(v81 - 116 + (BYTE2(a29) ^ v76) % 0x14u);
  *(unsigned char *)(v81 - 143) = BYTE4(a17) ^ 0xAF ^ (0x8Cu >> ((v121 * v121) & 7)) ^ (140 << (-(char)(v121 * v121) & 7));
  BYTE4(a25) = ((205 * (*(unsigned __int8 *)(v81 - 110) ^ v76 | v123 ^ v76)) >> 10) ^ 0xE4;
  LOBYTE(v121) = (*(unsigned char *)(v81 - 103) ^ v76) + (*(unsigned char *)(v81 - 116 + (a24 ^ v76) % 0x14u) ^ v76);
  *(unsigned char *)(v81 - 103) = v121 + (~(2 * v121) | 0xC9) + 28;
  int v124 = BYTE1(a19) ^ v76;
  int v125 = *(unsigned __int8 *)(v81 - 151 + v204) ^ 0x80;
  unsigned int v126 = 137 * ((v125 | v124) & (222 - v119) | v125 & v124);
  *(unsigned char *)(v81 - 106) = ((unsigned __int16)v126 >> 11) - (v77 & (v126 >> 10)) + 27;
  unsigned __int8 v217 = *(unsigned char *)(v81 - 104);
  int v127 = v114 ^ 0x4C;
  int v128 = (*(unsigned __int8 *)(v84
                             + (v124
                                               - 21
                                               * ((((unsigned __int16)(135 * v124) >> 8)
                                                                  + (((v124
                                                                                      - ((unsigned __int16)(135 * v124) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) & (*(unsigned __int8 *)(v81 - 124) ^ 0x80) | (*(unsigned __int8 *)(v81 - 124) ^ 0x7F) & (v217 ^ v76);
  int v206 = v127;
  int v129 = *(unsigned __int8 *)(v81 - 151 + (v127 - 35 * ((59 * v127) >> 11)));
  int v130 = (v128 | v129) & 0x2A | v128 & (v129 ^ 0x80);
  LODWORD(v213) = ((2 * v130 * v130) & 0x1EFFA) + ((v130 * v130) ^ 0x6EFFF7FD);
  int v131 = -593855808 - v213 - ((-570429262 - 2 * v213) & 0xDB3504CE);
  LOWORD(v124) = *(unsigned __int8 *)(v84
                                    + (unsigned __int16)((v100 ^ 0x270E)
                                                       - 21
                                                       * ((((34329 * HIDWORD(a8)) >> 16)
                                                         + ((unsigned __int16)(((v100 ^ 0x270E)
                                                                              - ((34329 * HIDWORD(a8)) >> 16)) & 0xFFFE) >> 1)) >> 4)));
  LOWORD(v129) = v124 ^ v76;
  *(unsigned char *)(v81 - 138) ^= v124 ^ v76;
  LOBYTE(v130) = (*(unsigned char *)(v81
                           - 151
                           + ((a63 ^ v76)
                                             - 35 * ((235 * (a63 ^ v76)) >> 13))) ^ 0x80)
               - 38;
  LOBYTE(v118) = (v130 | (-34 - v119)) & (*(unsigned char *)(v81 - 132) ^ 0x80) | v101 & v130;
  char v201 = v118 * v118 + 92;
  LOBYTE(v124) = v124 ^ 0xE4;
  int v132 = v124 & 0x79;
  LOBYTE(v124) = ((v131 ^ 0x67) + ((*(unsigned char *)(v81 - 129) ^ 0x80) & a18)) & (v124 | 0x79);
  int v133 = v124 | v132;
  BYTE6(a24) ^= (((v124 | v132) ^ 0xA6) & ((a18 + 14 - ((2 * a18) & 0x1C)) ^ 0xE) | ((-25
                                                                                    - (a18
                                                                                     + 14
                                                                                     - ((2 * a18) & 0x1C))) | ~(_BYTE)v124) & 4)
              + *(unsigned char *)(v81
                         - 151
                         + ((a30 ^ v76)
                                           - 35 * ((235 * (a30 ^ v76)) >> 13)))
              + 0x80;
  BYTE2(a34) ^= 0xDDu;
  LOWORD(v129) = v129 - ((2 * v129) & 0x3A) + 9501;
  unsigned int v134 = v96 % 0x23;
  int v135 = (*(unsigned __int8 *)(v81 - 141) ^ 0x80) & (((_BYTE)a18 + 14 - ((2 * (_BYTE)a18) & 0x1C)) & 0xA3 ^ 0x5E) | ((_BYTE)a18 + 14 - ((2 * (_BYTE)a18) & 0x1C)) & 0x5C ^ 0xC;
  int v136 = (a45 ^ v76) - ((2 * (a45 ^ v76)) & 0x1E4) - 146037262;
  int v137 = v136 ^ 0xF2;
  int v138 = (v135 | v136 ^ 0xF2) & (*(unsigned __int8 *)(v81 - 134) ^ 0x80);
  v136 ^= 0xF74BA5F2;
  int v139 = *(unsigned __int8 *)(v81 - 151 + v134) ^ 0x80;
  unsigned int v140 = ((unsigned __int16)v129 ^ 0x251Du) / 3 - v139 - (v138 | v135 & v136);
  char v199 = a18 + 14 - ((2 * a18) & 0x1C);
  unsigned int v141 = v133 ^ (-1160303071
               - (v199 & 0xC0)
               + (((a18 - 995809522 - ((2 * a18) & 0x1Cu)) >> 1) & 0x65 ^ 5)
               + 73);
  int v142 = *(unsigned __int8 *)(v81 - 132) ^ 0x80;
  unsigned int v143 = v142 & 0xFFFFFFFD | v129 & 0xFC ^ 0x1C;
  unsigned int v214 = v140 - ((2 * v140) & 0xC3BC5F58) - 505532500;
  LODWORD(a18) = v214 ^ 0xAC;
  int v144 = (v214 ^ 0xAC | v137) & v142 | (v214 ^ 0x7AC) & v136;
  *(unsigned char *)(v81 - 118) ^= BYTE1(a22) ^ v76;
  BYTE1(a32) ^= ((v131 ^ 0x67) - (v77 & (2 * (v131 ^ 0x67))) + 27) ^ 0x9E;
  int v145 = ((v143 & 0xE4 & v144 | v139 & v76 | (v144 | v143) & 0xC4) + v215);
  HIDWORD(v209) = (v143 & 0xE4 & v144 | v139 & v76 | (v144 | v143) & 0xC4) + v215;
  *(unsigned char *)(v81 - 121) = *(unsigned char *)(v81 - 116 + (BYTE1(a34) ^ v76) % 0x14u) ^ 0x9B ^ ((BYTE4(a17) & 0xE4 ^ 0xC9) + ((v143 & 0xE4 & v144 | v139 & v76 | (v144 | v143) & 0xC4) + v215) / 3u);
  LOBYTE(v143) = *(unsigned char *)(v81
                          - 151
                          + ((BYTE1(a30) ^ v76)
                                            - 35 * ((235 * (BYTE1(a30) ^ v76)) >> 13)));
  BYTE5(a21) = (v143 & v76) - (v77 & (2 * v143)) + 95;
  int v146 = (v212 - 15);
  HIDWORD(v198) = v212 - 15;
  int v147 = (((*(unsigned char *)(v81 - 151 + ((unsigned __int16)v141 ^ 0x2E21u) % 0x23) ^ 0x80) & (*(unsigned char *)(v81 - 117) ^ 0x7F) | (*(unsigned char *)(v84 + (v212 - 15 - 21 * ((((unsigned __int16)(135 * v146) >> 8) + (((v212 - 15 - ((unsigned __int16)(135 * v146) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) & (*(unsigned char *)(v81 - 117) ^ 0x80)) ^ 0x4F55BFFB)
       + ((2
         * ((*(unsigned __int8 *)(v81 - 151 + ((unsigned __int16)v141 ^ 0x2E21u) % 0x23) ^ 0x80) & (*(unsigned __int8 *)(v81 - 117) ^ 0x7F) | (*(unsigned __int8 *)(v84 + (v212 - 15 - 21 * ((((unsigned __int16)(135 * v146) >> 8) + (((v212 - 15 - ((unsigned __int16)(135 * v146) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) & (*(unsigned __int8 *)(v81 - 117) ^ 0x80))) & 0x1F6)
       + 5;
  LOBYTE(v136) = *(unsigned char *)(v81 - 133) + ((v147 * v147 * v147) >> 1);
  *(unsigned char *)(v81 - 133) = v136;
  *(unsigned char *)(v81 - 146) += (*(unsigned char *)(v84
                                     + ((BYTE3(a30) ^ v76)
                                                       - 21
                                                       * ((((unsigned __int16)(135
                                                                                              * (BYTE3(a30) ^ v76)) >> 8)
                                                                          + ((((BYTE3(a30) ^ v76)
                                                                                              - ((unsigned __int16)(135 * (BYTE3(a30) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ 0xE4)
                         + 1;
  unsigned int v148 = ((-64 - v213 - ((-78 - 2 * v213) & 0xCE)) ^ 0x9B7FEFB8)
       + 1686114337
       + ((2 * v131) & 0x1BE ^ 0x8E);
  uint64_t v203 = v148 % 0x23;
  *(unsigned char *)(v81 - 133) = (((a21 ^ v76) & (v141 ^ 0xDE) | (*(unsigned char *)(v81
                                                                    - 116
                                                                    + (BYTE2(a26) ^ v76) % 0x14u) ^ v76) & (v141 ^ 0x21))
                         * (((a24 ^ v76) & (*(unsigned char *)(v81 - 109) ^ 0xE4) | (*(unsigned char *)(v81
                                                                                      - 151
                                                                                      + ((a67 ^ v76) - 35 * ((235 * (a67 ^ v76)) >> 13))) ^ 0x80) & (*(unsigned char *)(v81 - 109) ^ v76)) & (v213 - 90) | (*(unsigned char *)(v81 - 151 + v203) ^ 0x80) & (v131 ^ 0x67))) ^ v136;
  LOBYTE(v130) = ((*(unsigned char *)(v81 - 116 + (BYTE4(a30) ^ v76) % 0x14u) ^ v76) & (*(unsigned char *)(v81 - 102) ^ 0xE4) | (*(unsigned char *)(v81 - 102) ^ 0x33) & 0x96) & (*(unsigned char *)(v81 - 140) ^ 0x7F) | (BYTE6(a19) ^ v76) & (*(unsigned char *)(v81 - 140) ^ 0x80);
  unsigned int v149 = BYTE2(a20) ^ v76;
  LOBYTE(v101) = *(unsigned char *)(v81
                          - 151
                          + ((BYTE3(a22) ^ v76)
                                            - 35 * ((235 * (BYTE3(a22) ^ v76)) >> 13)));
  unsigned int v150 = v149 >> (v101 & 7);
  LODWORD(v101) = v149 << (-(char)v101 & 7);
  unsigned int v151 = *(unsigned __int8 *)(v81 - 151 + v204) ^ 0x80;
  LOBYTE(v101) = (v151 << ((v101 ^ v150) & 7)) ^ (v151 >> (-(v101 ^ v150) & 7));
  *(unsigned char *)(v81 - 129) += (v101 | v130) & (*(unsigned char *)(v81 - 118) ^ 0x80) | v101 & v130;
  LOBYTE(v130) = *(unsigned char *)(v81 - 116 + (BYTE6(a23) ^ v76) % 0x14u) ^ 0xC2;
  LOBYTE(v127) = (*(unsigned char *)(v81 - 145) ^ 0x80) & (v131 ^ 0x67 | v100 ^ 0xE) | (v131 ^ 0x67) & (v199 ^ 0xE);
  LOBYTE(v130) = *(unsigned char *)(v84
                          + (v130
                                            - 21
                                            * ((((unsigned __int16)(135 * v130) >> 8)
                                                               + (((v130
                                                                                   - ((unsigned __int16)(135 * v130) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  LOBYTE(v127) = (*(unsigned char *)(v81 - 101) ^ v76) - ((v127 | v130) & v201 | v127 & v130);
  *(unsigned char *)(v81 - 101) = v127 - (v77 & (2 * v127)) + 27;
  LODWORD(v209) = v145 + 437890319 + (~(2 * HIDWORD(v209)) | 0xFFFFFFE3);
  LOWORD(v127) = (v145 - 21233 + (~(2 * WORD2(v209)) | 0xFFE3)) ^ 0xAD0E;
  LOBYTE(v151) = *(unsigned char *)(v81
                          - 116
                          + (unsigned __int16)(v127 - 20 * ((3277 * (unsigned __int16)v127) >> 16))) ^ v76;
  LOBYTE(v130) = *(unsigned char *)(v81
                          - 151
                          + ((a26 ^ v76)
                                            - 35 * ((235 * (a26 ^ v76)) >> 13))) ^ 0x80;
  unsigned __int8 v152 = (((43691 * HIDWORD(a8)) >> 17) - (BYTE5(a21) ^ v76 | v145)) ^ v201 ^ (((v130 | v151) & (*(unsigned char *)(v81 - 115) ^ v76) | v130 & v151 | v209 & 0x2D ^ 0x5E) & (*(unsigned char *)(v81 - 120) ^ 0x80) | ((v130 | v151) & (*(unsigned char *)(v81 - 115) ^ v76) | v130 & v151) & (v209 & 0x2D ^ 0x5E));
  unsigned int v153 = *(unsigned __int8 *)(v81 - 116 + (a45 ^ v76) % 0x14u) ^ v76 | *(unsigned __int8 *)(v84 + ((a72 ^ v76) - 21 * ((((unsigned __int16)(135 * (a72 ^ v76)) >> 8) + ((((a72 ^ v76) - ((unsigned __int16)(135 * (a72 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  LOBYTE(v101) = *(unsigned char *)(v81 - 116 + (BYTE1(a25) ^ v76) % 0x14u) & 7 ^ 3;
  int v154 = (v153 >> (-(char)v101 & 7)) ^ (v153 << v101);
  int v155 = (unint64_t)(13108
                          * (((*(unsigned char *)(v84
                                        + ((BYTE6(a23) ^ v76)
                                                          - 21
                                                          * ((((unsigned __int16)(135
                                                                                                 * (BYTE6(a23) ^ v76)) >> 8)
                                                                             + ((((BYTE6(a23) ^ v76)
                                                                                                 - ((unsigned __int16)(135 * (BYTE6(a23) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xEE | a23 & 0x11) ^ v76)
                           + ((*(unsigned char *)(v81
                                        - 151
                                        + ((a37 ^ v76)
                                                          - 35
                                                          * ((235 * (a37 ^ v76)) >> 13))) ^ 0x80) & (*(unsigned char *)(v81 - 135) ^ 0x7F) | (*(unsigned char *)(v81 - 116 + v152 % 0x14u) ^ v76) & (*(unsigned char *)(v81 - 135) ^ 0x80)))) >> 16;
  LODWORD(v101) = *(unsigned __int8 *)(v81 - 116 + (BYTE3(a19) ^ v76) % 0x14u) ^ v76;
  HIDWORD(a2) = ((v101 | v155) & (*(unsigned __int8 *)(v81 - 100) ^ v76) | v101 & v155) + v154 + v206;
  int v156 = *(unsigned __int8 *)(v81 - 116 + (BYTE2(a31) ^ v76) % 0x14u) ^ v76;
  uint64_t v200 = (unsigned __int16)(v127 - 35 * ((1873 * (unsigned __int16)v127) >> 16));
  unsigned int v157 = (v156 * v156 * v156 * v156) | *(unsigned __int8 *)(v81 - 151 + v200) ^ 0xFFFFFF80;
  LOBYTE(v156) = *(unsigned char *)(v81 - 151 + (v212 - 15 - 35 * ((235 * v146) >> 13))) ^ 0x80;
  int v158 = *(unsigned __int8 *)(v81 - 116 + (a76 ^ v76) % 0x14u);
  int v159 = (2
        * *(unsigned __int8 *)(v84
                             + (v156
                                               - 21
                                               * ((((unsigned __int16)(135 * v156) >> 8)
                                                                  + (((v156
                                                                                      - ((unsigned __int16)(135 * v156) >> 8)) & 0xFE) >> 1)) >> 4)))) & 0xFFB8;
  LODWORD(v198) = v157;
  int v160 = *(unsigned __int8 *)(v81
                            - 151
                            + (v157 - 35 * ((235 * v157) >> 13)));
  LODWORD(v101) = *(unsigned __int8 *)(v81 - 106);
  int v161 = (((*(unsigned __int8 *)(v84
                               + ((BYTE6(a34) ^ v76)
                                                 - 21
                                                 * ((((unsigned __int16)(135
                                                                                        * (BYTE6(a34) ^ v76)) >> 8)
                                                                    + ((((BYTE6(a34) ^ v76)
                                                                                        - ((unsigned __int16)(135 * (BYTE6(a34) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) << (v160 & 7)) ^ ((*(unsigned char *)(v84 + ((BYTE6(a34) ^ v76) - 21 * ((((unsigned __int16)(135 * (BYTE6(a34) ^ v76)) >> 8) + ((((BYTE6(a34) ^ v76) - ((unsigned __int16)(135 * (BYTE6(a34) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) >> (-(char)v160 & 7))) & (v101 ^ 0x44) | ((v160 ^ 0xFFFFFF80 | v158 ^ v76) & (*(unsigned __int8 *)(v81 - 109) ^ 3) | (v158 ^ 3) & v160) & (v101 ^ 3);
  int v162 = ((v161 & 0x47 | v159) ^ 0x30) - 2 * (((v161 & 0x47 | v159) ^ 0x30) & 0x3E ^ v161 & 2) - 68;
  HIDWORD(v211) = v162 ^ 0xFFFFFFBC;
  uint64_t v207 = (unsigned __int16)(v127 - 21 * ((3121 * (unsigned __int16)v127) >> 16));
  uint64_t v202 = v148 % 0x14;
  LOBYTE(v101) = *(unsigned char *)(v81
                          - 151
                          + ((BYTE5(a20) ^ v76)
                                            - 35 * ((235 * (BYTE5(a20) ^ v76)) >> 13)));
  *(unsigned char *)(v81 - 149) += ((*(unsigned char *)(v84
                                      + ((v217 ^ v76)
                                                        - 21
                                                        * ((((unsigned __int16)(135
                                                                                               * (v217 ^ v76)) >> 8)
                                                                           + ((((v217 ^ v76)
                                                                                               - ((unsigned __int16)(135 * (v217 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x60 | (2 * *(unsigned char *)(v81 - 116 + v202)) & 0x9F) ^ 0x16) & (((*(unsigned char *)(v81 - 116 + (a22 ^ v76) % 0x14u) & 0x91 | *(unsigned char *)(v84 + v207) & 0x6E) ^ v76) & (*(unsigned char *)(v81 - 116) ^ 0xE4) | (a22 ^ v76) & (*(unsigned char *)(v81 - 116) ^ v76));
  *(unsigned char *)(v81 - 137) += ((((*(unsigned char *)(v81
                                        - 151
                                        + ((BYTE3(a31) ^ v76)
                                                          - 35
                                                          * ((235 * (BYTE3(a31) ^ v76)) >> 13))) ^ v162) & 0xDD ^ 0x1C) & (*(unsigned char *)(v81 - 151 + v203) ^ 0x80) | a31 & 0x22) ^ 0xFD)
                         + 1;
  LOBYTE(v160) = *(unsigned char *)(v81 - 116 + (a39 ^ v76) % 0x14u);
  *(unsigned char *)(v81 - 99) = (*(unsigned char *)(v81 - 99) ^ v76) - ((2 * (*(unsigned char *)(v81 - 99) ^ v76) + 4) & v77) - 67;
  LOBYTE(v127) = (v162 ^ 0xBC) - ((2 * (v162 ^ 0xBC)) & 0x7A) - 67;
  LOBYTE(v126) = *(unsigned char *)(v84
                          + ((a21 ^ v76)
                                            - 21
                                            * ((((unsigned __int16)(135 * (a21 ^ v76)) >> 8)
                                                               + ((((a21 ^ v76)
                                                                                   - ((unsigned __int16)(135 * (a21 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  LOBYTE(v126) = (v126 | *(unsigned char *)(v81 - 116 + v202) ^ v76) & (v127 ^ 0xBD) | v126 & (*(unsigned char *)(v81 - 116 + v202) ^ v76);
  uint64_t v205 = v214 ^ 0xFFFFFFAC;
  HIDWORD(a8) = v214 ^ 0xAC;
  uint64_t v216 = (v214 ^ 0xACu) % 0x14;
  BYTE6(a21) ^= 2
              * ((v126 | ((171 * (BYTE1(a25) ^ v76)) >> 9)) & *(unsigned char *)(v81 - 141) | v126 & ((171 * (BYTE1(a25) ^ v76)) >> 9));
  unsigned int v163 = ((*(unsigned __int8 *)(v81 - 116 + v216) ^ 0x10 | BYTE1(a20) ^ 0x10) & 0x50 | (BYTE1(a20) & 0xD0 ^ 0x10) & (*(unsigned __int8 *)(v81 - 116 + v216) ^ 0x10) | (2 * *(unsigned __int8 *)(v81 - 116 + (BYTE6(a23) ^ v76) % 0x14u)) & 0x2Eu) >> 1;
  *(unsigned char *)(v81 - 103) = (v163 ^ 0x13) - 2 * ((v163 ^ 0x13) & 0x1F ^ v163 & 4) + 27;
  *(unsigned char *)(v81 - 118) += (a33 | 0xF6) + 1;
  HIDWORD(v213) = v131 ^ 0x67;
  *(unsigned char *)(v81 - 123) = ((*(unsigned char *)(v81 - 123) ^ 0x80)
                         - (((BYTE5(a32) >> 1) & 0x6E ^ 0xD) & (*(unsigned char *)(v81 - 108) ^ 0xE4) | (*(unsigned char *)(v81 - 108) ^ v76) & (v131 ^ 0x67))) ^ 0x80;
  unsigned int v164 = (BYTE4(a2) ^ 0xC7DFADFF) + 2 * BYTE4(a2) + 941642241;
  LOBYTE(v163) = *(unsigned char *)(v84 + v164 % 0x15) ^ v76;
  LOBYTE(v163) = (v163 | a18) & (*(unsigned char *)(v81 - 128) ^ 0x80) | v163 & a18;
  LOBYTE(v163) = (v163 - ((2 * v163) & 0x99) - 52) ^ 0xCC;
  uint64_t v165 = v148 % 0x15;
  LOBYTE(v163) = (v163 * v163 * v163) & ((((*(unsigned char *)(v84 + v165) ^ v76) - 48) | a68 ^ 0xE4) & 0xBD | ((*(unsigned char *)(v84 + v165) ^ v76) - 48) & (a68 ^ 0xE4));
  *(unsigned char *)(v81 - 129) += a67 ^ v76;
  LOBYTE(v132) = (a62 ^ v76)
               - 21
               * ((((unsigned __int16)(135 * (a62 ^ v76)) >> 8)
                                  + ((((a62 ^ v76)
                                                      - ((unsigned __int16)(135 * (a62 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4);
  LOBYTE(v163) = v163 + (~(2 * v163) | 0xC9) + 28;
  *(unsigned char *)(v81 - 101) = v163;
  unsigned int v166 = *(unsigned __int8 *)(v81 - 151 + v164 % 0x23) ^ 0xFFFFFF80;
  unsigned int v167 = HIDWORD(v198)
       + 99
       * (*(unsigned __int8 *)(v81 - 116 + (BYTE4(a20) ^ v76) % 0x14u) ^ v76)
       * ((*(unsigned __int8 *)(v84 + v132) ^ 0x3F | v166) & 0xFFFFFFD1 | (*(unsigned __int8 *)(v84 + v132) ^ v76) & v166)
       * (*(unsigned char *)(v84
                   + ((BYTE1(a22) ^ v76)
                                     - 21
                                     * ((((unsigned __int16)(135 * (BYTE1(a22) ^ v76)) >> 8)
                                                        + ((((BYTE1(a22) ^ v76)
                                                                            - ((unsigned __int16)(135
                                                                                                * (BYTE1(a22) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xFE ^ v82);
  char v168 = 43
       - ((((v101 ^ 0x80) * (v101 ^ 0x80)) & (*(unsigned char *)(v81 - 114) ^ v76))
        + v210)
       - ((v160 ^ 0xA7 ^ v162) & (*(unsigned char *)(v81 - 114) ^ 0xE4));
  LODWORD(v101) = *(unsigned char *)(v81 - 151 + v200) & 0xF5 | *(unsigned char *)(v81 - 151 + v203) & 0xA;
  int v169 = v167;
  int v170 = ((2 * v167) & 0x1DE) + (v167 ^ 0x6EFBCFEF);
  LOBYTE(v150) = *(unsigned char *)(v81 - 116 + v157 % 0x14u);
  LOBYTE(v150) = ((v150 & 0xAE ^ 0x5B) + ((2 * v150) & 8 ^ 0xFD) + 6) ^ 5;
  LODWORD(v203) = *(unsigned __int8 *)(v84
                                     + ((a19 ^ v76)
                                                       - 21
                                                       * ((((unsigned __int16)(135
                                                                                              * (a19 ^ v76)) >> 8)
                                                                          + ((((a19 ^ v76)
                                                                                              - ((unsigned __int16)(135 * (a19 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(unsigned char *)(v81 - 133) = ((*(unsigned char *)(v81 - 133) ^ 0x80)
                         - ((v150 * v150 * v150) & (v163 ^ 0xE4) | (v163 ^ v76) & ((137 * v169) >> 11))) ^ 0x80;
  LOBYTE(v164) = *(unsigned char *)(v81 - 116 + v164 % 0x14) ^ v76;
  unsigned int v171 = HIDWORD(a2)
       + (*(unsigned __int8 *)(v81 - 116 + (a50 ^ v76) % 0x14u) ^ 0xFFFFFFE4)
       + ((171
         * (*(unsigned __int8 *)(v84
                               + (v164
                                                 - 21
                                                 * ((((unsigned __int16)(135 * v164) >> 8)
                                                                    + (((v164
                                                                                        - ((unsigned __int16)(135 * v164) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76)) >> 9);
  LOBYTE(v164) = *(unsigned char *)(v84
                          + ((BYTE4(a27) ^ v76)
                                            - 21
                                            * ((((unsigned __int16)(135
                                                                                   * (BYTE4(a27) ^ v76)) >> 8)
                                                               + ((((BYTE4(a27) ^ v76)
                                                                                   - ((unsigned __int16)(135 * (BYTE4(a27) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  LOBYTE(v164) = ((v164 | a59 ^ v76) & v168 | v164 & (a59 ^ v76)) & 0xFA | 1;
  LOBYTE(v164) = (*(unsigned char *)(v81 - 100) ^ v76)
               - ((v164 | v127 ^ 0xBD) & (*(unsigned char *)(v81 - 114) ^ v76) | v164 & (v127 ^ 0xBD));
  *(unsigned char *)(v81 - 100) = v164 - (v77 & (2 * v164)) + 27;
  int v172 = *(unsigned __int8 *)(v84
                            + ((a47 ^ v76)
                                              - 21
                                              * ((((unsigned __int16)(135 * (a47 ^ v76)) >> 8)
                                                                 + ((((a47 ^ v76)
                                                                                     - ((unsigned __int16)(135 * (a47 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  unsigned int v173 = (v172 | a32 ^ v76) & 0x8D | v172 & (a32 ^ v76);
  LOBYTE(v127) = *(unsigned char *)(v81 - 116 + (BYTE4(a22) ^ v76) % 0x14u) ^ v76;
  LOBYTE(v148) = *(unsigned char *)(v84
                          + ((a56 ^ v76)
                                            - 21
                                            * ((((unsigned __int16)(135 * (a56 ^ v76)) >> 8)
                                                               + ((((a56 ^ v76)
                                                                                   - ((unsigned __int16)(135 * (a56 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76;
  LOBYTE(v127) = (v148 | v127) & 6 | v127 & v148 & 7;
  int v174 = (v173 >> (-(char)v127 & 7)) ^ (v173 << v127);
  LOBYTE(v174) = (*(unsigned char *)(v84
                           + (unsigned __int16)(v174
                                              - 21
                                              * ((unsigned __int16)(((34329 * v174) >> 16)
                                                                  + ((unsigned __int16)((v174
                                                                                       - ((34329 * v174) >> 16)) & 0xFFFE) >> 1)) >> 4))) ^ 0xE4)
               + (*(unsigned char *)(v81 - 113) ^ v76)
               + 1;
  *(unsigned char *)(v81 - 113) = v174 - (v77 & (2 * v174)) + 27;
  LODWORD(v211) = v101 ^ 0x80;
  unsigned int v175 = (v101 ^ 0x7F5FCB6F) - 2136984559 + ((2 * (v101 ^ 0x80)) & 0xFFFFFFDF);
  unsigned int v176 = 205 * (*(unsigned __int8 *)(v81 - 116 + (BYTE4(a26) ^ v76) % 0x14u) ^ v76);
  unsigned int v177 = ((*(unsigned __int8 *)(v81 - 104) ^ v76) >> ((v176 >> 10) & 7)) ^ ((*(unsigned __int8 *)(v81 - 104) ^ v76) << (-(char)(v176 >> 10) & 7)) ^ ((*(unsigned __int8 *)(v81 - 151 + v175 % 0x23) ^ 0xFFFFFF7F) / 5);
  BYTE4(a19) = v177 - (v77 & (2 * v177)) + 27;
  unsigned int v178 = (0x8Bu >> ((v170 + 1) & 7)) ^ (139 << ((7 - v170) & 7));
  int v179 = *(unsigned __int8 *)(v81 - 116 + v202) ^ v76;
  LOBYTE(v163) = v179 | v178;
  int v180 = v179 & v178;
  unsigned int v181 = (*(unsigned __int8 *)(v84 + v207) ^ 0xBAFFAFE4) + 2 * (*(unsigned __int8 *)(v84 + v207) ^ v76) + 1;
  uint64_t v208 = v163 & 0xC | v180 | (*(unsigned __int8 *)(v81 - 116 + v216) ^ v76) & (*(unsigned __int8 *)(v81 - 115) ^ 0xFFFFFFE4) | (v181 * v181 * v181) & (*(unsigned __int8 *)(v81 - 115) ^ v76);
  *(unsigned char *)(v81 - 139) += ((v163 & 0xC | (v180 | (*(unsigned char *)(v81 - 116 + v216) ^ v76) & (*(unsigned char *)(v81 - 115) ^ 0xE4)) | (v181 * (_BYTE)v181 * (_BYTE)v181) & (*(unsigned char *)(v81 - 115) ^ v76)) & (BYTE6(a31) & 0xE3 ^ 0x13 | 0x2C) | (BYTE6(a31) & 0xE3 ^ 0x13) & 0x30)
                         / 3;
  *(unsigned char *)(v81 - 122) = 34;
  uint64_t v182 = v171 + 1;
  int v183 = (v171 + 1);
  uint64_t v184 = (v182
                         - 21
                         * ((((unsigned __int16)(135 * v183) >> 8)
                                            + (((v182 - ((unsigned __int16)(135 * v183) >> 8)) & 0xFE) >> 1)) >> 4));
  unsigned int v185 = ((*(unsigned char *)(v84 + v184) & 0xA0 | *(unsigned char *)(v81 - 116 + (BYTE4(a34) ^ v76) % 0x14u) & 0x5Eu) >> 1) ^ 0xD;
  LOBYTE(v181) = *(unsigned char *)(v81
                          - 151
                          + ((a43 ^ v76)
                                            - 35 * ((235 * (a43 ^ v76)) >> 13))) ^ ((BYTE2(a24) ^ v76) * (BYTE2(a24) ^ v76)) ^ 0x80;
  LOBYTE(v185) = ((v181 | v185) & (*(unsigned char *)(v81 - 99) ^ v76) | v181 & v185) + (*(unsigned char *)(v81 - 101) ^ v76);
  *(unsigned char *)(v81 - 101) = v185 + (~(2 * v185) | 0xC9) + 28;
  BYTE6(a30) = *(unsigned char *)(v84 + v165);
  LOBYTE(v181) = *(unsigned char *)(v81
                          - 151
                          + ((a21 ^ v76)
                                            - 35 * ((235 * (a21 ^ v76)) >> 13)));
  LOBYTE(v181) = (v181 ^ 0xDB) - 91 + ((2 * v181) & 0xB6);
  unsigned int v186 = *(unsigned __int8 *)(v81 - 151 + (v170 - 1861996527) % 0x23u) ^ 0x80;
  int v187 = (v186 >> ((v181 * v181 * v181) & 7)) ^ (v186 << (-(char)(v181 * v181 * v181) & 7));
  LOBYTE(v187) = (*(unsigned char *)(v81 - 109) ^ v76) - v187 * v187;
  LOBYTE(v181) = (a72 ^ v76)
               - 21
               * ((((unsigned __int16)(135 * (a72 ^ v76)) >> 8)
                                  + ((((a72 ^ v76)
                                                      - ((unsigned __int16)(135 * (a72 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4);
  LOBYTE(v170) = (a68 ^ 0xE4) + *(unsigned char *)(v81 - 143);
  int v188 = *(unsigned __int8 *)(v81 - 116 + v216);
  LOBYTE(v165) = v187 - (v77 & (2 * v187)) + 27;
  *(unsigned char *)(v81 - 109) = v165;
  LODWORD(a14) = *v80 + a14;
  LOBYTE(v187) = (3 * (v203 ^ v76) - ((6 * (v203 ^ v76)) & 0x5E) + 47) ^ BYTE4(a17);
  unsigned int v189 = HIDWORD(v209) + (v188 ^ 0xFFFFFFE4);
  *(unsigned char *)(v81 - 143) = v170
                        + (*(unsigned char *)(v84 + v181) ^ v76)
                        * (*(unsigned char *)(v84 + v181) ^ v76)
                        * (*(unsigned char *)(v84 + v181) ^ v76)
                        + 1;
  LOBYTE(v181) = *(unsigned char *)(v81
                          - 151
                          + ((BYTE5(a31) ^ v76)
                                            - 35 * ((235 * (BYTE5(a31) ^ v76)) >> 13)));
  *(unsigned char *)(v81 - 100) = ((2 * v181) ^ 0x31) & 0xF0 ^ (((4 * v181) & 8) - (((2 * v181) ^ 0x31) & 0x74) - 7) & 0xFC ^ 0xE3;
  int v190 = v157 ^ (*(unsigned __int8 *)(v84
                                    + (v205
                                                      - 21
                                                      * ((((unsigned __int16)(135 * WORD2(a8)) >> 8)
                                                                         + (((v205
                                                                                             - ((unsigned __int16)(135 * WORD2(a8)) >> 8)) & 0xFE) >> 1)) >> 4))) >> 1) ^ 0xD;
  LOBYTE(v188) = *(unsigned char *)(v84 + v184) ^ v76;
  LOBYTE(v126) = (*(unsigned char *)(v81 - 116 + (a70 ^ v76) % 0x14u) ^ 0xE4)
               + (v165 ^ v76)
               + ((v77 ^ (2
                        * *(unsigned char *)(v84
                                   + ((HIBYTE(a28) ^ v76)
                                                     - 21
                                                     * ((((unsigned __int16)(135
                                                                                            * (HIBYTE(a28) ^ v76)) >> 8)
                                                                        + ((((HIBYTE(a28) ^ v76)
                                                                                            - ((unsigned __int16)(135 * (HIBYTE(a28) ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))))) & (*(unsigned char *)(v81 - 132) ^ 0x7F) | (*(unsigned char *)(v84 + (v188 - 21 * ((((unsigned __int16)(135 * v188) >> 8) + (((v188 - ((unsigned __int16)(135 * v188) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76) & (*(unsigned char *)(v81 - 132) ^ 0x80))
               + 1;
  *(unsigned char *)(v81 - 109) = v126 - (v77 & (2 * v126)) + 27;
  *(unsigned char *)(v81 - 110) = *(unsigned char *)(v81 - 116 + (BYTE6(a33) ^ v76) % 0x14u);
  int v191 = *(unsigned __int8 *)(v81 - 151 + (v182 - 35 * ((235 * v183) >> 13)));
  uint64_t v192 = v189 + 1;
  unsigned int v193 = 205
       * (v191 & (HIBYTE(a22) ^ 0x12) & 0x56 | (-25
                                                               * (*(unsigned __int8 *)(v84
                                                                                     + ((a26 ^ v76) - 21 * ((((unsigned __int16)(135 * (a26 ^ v76)) >> 8) + ((((a26 ^ v76) - ((unsigned __int16)(135 * (a26 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v76)) & 0xA9 | (HIBYTE(a22) ^ 0x12 | v191) & 0x16);
  uint64_t v194 = (v189 + 1) % 0x14u;
  LOBYTE(v188) = (*(unsigned char *)(v84
                           + ((v217 ^ v76)
                                             - 21
                                             * ((((unsigned __int16)(135 * (v217 ^ v76)) >> 8)
                                                                + ((((v217 ^ v76)
                                                                                    - ((unsigned __int16)(135 * (v217 ^ v76)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x2E | BYTE5(a33) & 0xD1) ^ v76;
  LOBYTE(v157) = (*(unsigned char *)(v81 - 116 + v194) ^ v76) * (*(unsigned char *)(v81 - 116 + v194) ^ v76);
  LOBYTE(v183) = (*(unsigned char *)(v81 - 116 + v175 % 0x14) ^ ((*(unsigned char *)(v81
                                                                   - 151
                                                                   + ((BYTE6(a27) ^ v76)
                                                                                     - 35
                                                                                     * ((235
                                                                                       * (BYTE6(a27) ^ v76)) >> 13))) ^ 0x80)
                                                       + (*(unsigned char *)(v81
                                                                   - 151
                                                                   + ((BYTE6(a20) ^ v76)
                                                                                     - 35
                                                                                     * ((235
                                                                                       * (BYTE6(a20) ^ v76)) >> 13))) ^ 0x80)) ^ v76) & ((v157 | v188) & v76 | v157 & v188);
  *(unsigned char *)(v81 - 104) = v183 - (v77 & (2 * v183)) + 27;
  int v195 = *(unsigned __int8 *)(v84
                            + (v190
                                              - 21
                                              * ((((unsigned __int16)(135 * v190) >> 8)
                                                                 + (((v190
                                                                                     - ((unsigned __int16)(135 * v190) >> 8)) & 0xFE) >> 1)) >> 4)));
  uint64_t v196 = (v195 ^ 0xF72577E4) + 2 * (v195 ^ v76);
  *(unsigned char *)(v81 - 126) ^= 2 * (*(unsigned char *)(v81 - 116 + v194) ^ v76) * (BYTE4(a19) ^ v76)
                         - ((((_BYTE)v187 << ((v196 + 1) & 7)) ^ (v187 >> ((7 - v196) & 7))) & (-57 - v213));
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 8 * ((81 * (a14 != 0xFDB72994)) ^ a1)))(v196, v192, (a1 - 2544), 20, (a1 - 2544) ^ 0xF19u, (49 * (v193 >> 10)) >> 10, v182, (v196 + 1), a2, v198, v200, v202, v203, v205, a8, v208, v209, v211, v80,
           v213,
           a14,
           a15,
           v216,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_22B320154@<X0>(char a1@<W1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v4 + a2 - 1) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((3941 * ((unint64_t)(a3 + v4) < 0x38)) ^ ((v3 - 628) | 0x111))))();
}

uint64_t sub_22B32018C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v5 - 799) | 0x124) ^ (v5 - 456)) * (v4 == a3)) ^ v5)))(0);
}

uint64_t sub_22B3201C0@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  int v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 ^ 0x173A)))(**(unsigned int **)(v2 + 8 * (v4 ^ 0x729)), va, ((a1 - 1200444765 + (v4 ^ 0x61D) + 2473) & 0xFFFFF000 ^ 0xF73EC92F)+ (((8 * (v4 ^ 0x61D)) ^ 0xEE7D8B08) & (2 * (a1 - 1200444765 + (v4 ^ 0x61D) + 2473)))+ 146880209, 1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((202 * (((2 * v5) & 0x7BFA6FBE) + (v5 ^ 0x3DFD37DF) != 1040005087)) ^ v4)))();
}

uint64_t sub_22B320278()
{
  STACK[0xD90] = v3 + 12;
  *(_DWORD *)(v5 - 140) = v4 + 1328090399 * ((v5 + 596966404 - 2 * ((v5 - 152) & 0x2394FC9C)) ^ 0xDC4798A6) + 1868;
  STACK[0xD78] = (unint64_t)&STACK[0x1AD13B37B10194A6];
  STACK[0xD88] = v0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0x147D)))(v5 - 152);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((2107
                                              * (*(_DWORD *)(v5 - 144) == v1 - 604050357 + 18 * (v4 ^ 0x410) - 1825)) ^ v4)))(v6);
}

uint64_t sub_22B32034C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1009 * (v7 + 1 == v9 + 20)) ^ a7)))();
}

uint64_t sub_22B32041C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(v2 - 0x19157D3ABD2659CALL) & 1) != ((v0 + 839501117) & 0xCDF63FFE)
                                                                                 - 1916)
                                * (((v0 - 1450439350) & 0x5673FB7F) - 2628)) ^ (v0 + 1300))))();
}

uint64_t sub_22B32048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v13 = (((v12 + 2002) | 6) ^ 0xFE5ECBEB) + v10;
  int v14 = *a10 - 27344123;
  BOOL v15 = v13 < -1254265866;
  BOOL v16 = v13 > v14;
  if (v14 < -1254265866 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((2644 * v16) ^ v12)))();
}

uint64_t sub_22B3204F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, unsigned int a11, unsigned int a12, uint64_t a13, int a14)
{
  unsigned int v17 = 731811679 * ((2 * (&a10 & 0x17638A58) - &a10 - 392399450) ^ 0xA16AD3E2);
  a14 = v17 + v14 - 324;
  a13 = v15;
  a11 = v17 + 1399495950;
  a12 = v17 - 314449378;
  a10 = &STACK[0xB8308F1D17695A];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v14 + 3340)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((3595 * (*(_DWORD *)(v15 - 0x19157D3ABD2659C6) == -604050357)) ^ v14)))(v18);
}

uint64_t sub_22B3205D0@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v41 = v29 + a4;
  int v42 = v29 + 1;
  uint64_t v43 = 4 * (v42 + a4);
  unint64_t v44 = (*(_DWORD *)(a28 + v43 + a7) ^ v28) + (a3 ^ HIDWORD(a6));
  unint64_t v45 = (*(_DWORD *)(*v38 + v43 + a7) ^ v28) * a5
      + HIDWORD(a1)
      + ((v33 + ((a8 + v40) & v34) + v44 - (v32 & (2 * v44)) - 388) ^ a2);
  *(_DWORD *)(a28 + 4 * v41 + a7) = v45 + v28 - (v30 & (2 * v45));
  BOOL v47 = v42 + v36 > v37 + 380 || v42 + v36 < v39;
  return (*(uint64_t (**)(void))(v35 + 8 * ((v47 * v31) ^ a8)))();
}

uint64_t sub_22B320674@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a1 + a2;
  uint64_t v5 = 56;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((237
                                * (((((v2 ^ 0x56E) + 2794) ^ (v5
                                                            - a2
                                                            + 2118370278
                                                            + (unint64_t)(191 * (v2 ^ 0x56Eu)) < 8)) & 1) == 0)) ^ v2)))();
}

uint64_t sub_22B3206E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,_DWORD *a43)
{
  *a43 ^= a42;
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * (int)(((v44 != 1744139808)
                                     * (((((v43 - 1011928796) & 0x3C50CF6F) - 537003432) & 0xBF8F7975) + 1618118378)) ^ (v43 - 1011928796) & 0x3C50CF6F)))();
}

uint64_t sub_22B320764@<X0>(int a1@<W8>, uint64_t a2, char a3)
{
  unint64_t v5 = ((unint64_t)&a3 ^ 0x6FF5E7BBE9BB7C6ALL)
     - 0x209004800902236ALL
     + ((2 * (void)&a3) & 0xDFEBCF77D376F8D0);
  *(unsigned char *)(v3 + 263) = (v5 ^ 0xBA) * (v5 + 17);
  *(unsigned char *)(v3 + ((a1 - 1644) ^ 0x211)) = ((v5 | 1) ^ 0xBA) * (v5 + 18);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (a1 - 1644)))(v3);
}

uint64_t sub_22B32076C@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X6>, uint64_t a4@<X7>, unsigned int a5@<W8>)
{
  int v7 = v5 + 1;
  *(unsigned char *)(a2 + (v7 + a1)) = *(unsigned char *)(a3 + ((a5 + 2005793627) & 0x8871FDDB ^ 0xFFFFFFFFDD55BF66)
                                                           + a4);
  return (*(uint64_t (**)(void))(v6 + 8 * ((209 * ((a1 + v7 + 1) < 0x40)) ^ a5)))();
}

uint64_t sub_22B320774()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2589 * (v0 < ((-1618118347 - v1) ^ 0xFBBC064C))) ^ 0x241)))();
}

uint64_t sub_22B3207C8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((86
                                * (v2 + v0 + (((v1 + 3572) | 0x6264008) ^ 0x96644A38) >= ((v1 + 806289089) & 0xCFF0FFFF ^ 0xF7))) ^ v1)))();
}

uint64_t sub_22B320840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((*(_DWORD *)(v11 + v10 * (uint64_t)v9 + 36) != a8)
                                     * ((v8 + 522055217) & 0xE0E20EDB ^ ((v8 ^ 0xFE5) - 2951))) ^ v8)))();
}

uint64_t sub_22B32088C()
{
  BOOL v5 = v3 != 1636710095 || v1 != ((v0 + 1420295527) & 0xAB580F65 ^ 0x3DCFD0BE);
  return (*(uint64_t (**)(void))(v2 + 8 * ((215 * v5) ^ v0)))();
}

void sub_22B3208E8(_DWORD *a1)
{
  unsigned int v1 = *a1 + 225134719 * ((2 * (a1 & 0x58D3AC36) - a1 - 1490267191) ^ 0xB1DC16E3);
  uint64_t v2 = (char *)*(&off_26DE9F480 + (int)(v1 ^ 0x13)) - 8;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0xE9D)])(32, 0x101004023FF3BD5) == 0)
                      * (16 * (v1 ^ 0x160) - 167)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

void sub_22B3209A8()
{
  *uint64_t v2 = -1;
  *(_DWORD *)(v1 + 32) = v0;
}

uint64_t sub_22B3209F0@<X0>(int a1@<W8>, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unint64_t a45,unsigned int *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned int *a54)
{
  uint64_t v63 = *a54;
  uint64_t v64 = ((a1 - 1215) | 0x841) + a54[13] - 2031139927;
  v65 = *(uint64_t (**)(uint64_t, void, void, uint64_t, unint64_t *, uint64_t, uint64_t, unint64_t *))(v62 + 8 * (a1 + 1930));
  a2 = &STACK[0x500];
  a3 = &STACK[0x350];
  uint64_t v66 = v65(v63, (v54 + v55 + 2), a28 ^ 0x313E5765u, v64, &STACK[0x1870], v56, v57, &STACK[0x1848]);
  int v68 = (v66 ^ 0x3FAE6FFA) - 807936544 + ((2 * v66) & 0x7F5CDFF4);
  unint64_t v69 = STACK[0x278];
  if (v68 == 528895453) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x270]
  }
                                                       + 8
                                                       * (int)((v69 - 161) ^ (126
                                                                            * ((LODWORD(STACK[0x258])
                                                                                            - 91771734) < 3)))))(v66, v67);
  unint64_t v70 = STACK[0x270];
  if (v68 == 260459994)
  {
    (*(void (**)(void, uint64_t, uint64_t))(v70 + 8 * ((int)v69 + 863)))(*a46, v56, v57);
    STACK[0x4B0] = 0;
    LODWORD(STACK[0x368]) = 0;
    unsigned int v74 = a54[13];
    unsigned int v75 = a28 & 0x7FFFFFFF ^ 0xCEC1B888;
    int v76 = LODWORD(STACK[0x350]) ^ 0x17E4B97F;
    int v77 = (2 * LODWORD(STACK[0x350])) & 0x2FC972FE;
    int v78 = 1328090399 * ((((v61 - 192) | 0x7393AF50) - ((v61 - 192) & 0x7393AF50)) ^ 0x8C40CB6A);
    int v79 = STACK[0x278] - v78 - 3101;
    STACK[0x1958] = STACK[0x500];
    *(_DWORD *)(v61 - 176) = v79;
    *(_DWORD *)(v61 - 160) = v78 + v75 + (v58 & 0xFFFFDFDA ^ 0x627C8ECA) - 87711812;
    *(_DWORD *)(v61 - 156) = v78 + v76 + v77 - 106989665;
    *(_DWORD *)(v61 - 152) = v74 - v78 + 28630949;
    unint64_t v80 = a45;
    STACK[0x1940] = (unint64_t)&STACK[0x1848];
    STACK[0x1948] = v80;
    uint64_t v81 = (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * (int)(STACK[0x278] ^ 0x1C40)))(v61 - 192);
    unint64_t v82 = STACK[0x270];
    int v83 = *(_DWORD *)(v61 - 148);
    LODWORD(STACK[0x290]) = v83;
    return (*(uint64_t (**)(uint64_t))(v82 + 8 * (((v83 != v59) | (2 * (v83 != v59))) ^ ((int)v69 + 746))))(v81);
  }
  else
  {
    int v71 = 225134719 * (((v61 - 192) & 0xF3FB2354 | ~((v61 - 192) | 0xF3FB2354)) ^ 0x1AF49981);
    LODWORD(STACK[0x260]) = v68;
    *(_DWORD *)(v61 - 184) = v68 - v71 - ((2 * v68 - 520919988) & 0xB7FDD896) - 864510351;
    *(_DWORD *)(v61 - 180) = (v69 + 766) ^ v71;
    STACK[0x1940] = a24;
    uint64_t v72 = (*(uint64_t (**)(uint64_t))(v70 + 8 * (int)(v69 ^ 0x1C59)))(v61 - 192);
    unint64_t v73 = STACK[0x270];
    unsigned int v86 = (char *)&a2 + v60 - 0x3D63BD92DA195D22;
    STACK[0x240] = (unint64_t)(v86 + 2048);
    STACK[0x248] = (unint64_t)(v86 + 2176);
    STACK[0x250] = (unint64_t)(v86 + 2304);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v73
                                                       + 8
                                                       * ((50
                                                         * (LODWORD(STACK[0x290]) != ((((v69 - 2107) | 0xE2)
                                                                                     - 1025) ^ 0xDBFEECB2))) ^ ((int)v69 - 1473))))(v72, v84);
  }
}

uint64_t sub_22B320AAC()
{
  return 4294925273;
}

uint64_t sub_22B320AC0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 3193) | 0x82D) - 1741) * (v0 == v1)) ^ (v2 + 477))))();
}

uint64_t sub_22B320AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  BOOL v36 = v33 > v32;
  int v37 = (v28 - 114369136) & 0x6D117FB;
  int v38 = v28 - 2945;
  unint64_t v39 = (*(_DWORD *)(a27 + v35 + a6) ^ v27) + HIDWORD(v30);
  *(_DWORD *)(a27 + 4 * a5 + a6) = v39 + v27 - (v29 & (2 * v39));
  *(_DWORD *)(a27 + v35 + a6) = v27 + v37 + HIDWORD(v39) - 2 * HIDWORD(v39) - 715;
  if (v36 == a7 - 894204596 < -2120588635) {
    BOOL v36 = a7 - 894204596 < v31;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (v38 ^ (3103 * v36))))(a1, a2, a3, a4);
}

uint64_t sub_22B320BAC@<X0>(int a1@<W8>)
{
  unsigned int v5 = v3 + 211222920;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((13 * (((-a1 - 211222920 - v2 + v5 < 0xF) ^ v1) & 1)) ^ v1)))();
}

void sub_22B320C50(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 4) - 1988622253 * ((934503921 - (a1 | 0x37B365F1) + (a1 | 0xC84C9A0E)) ^ 0x3E54DAAE);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x281D12643933BF1FLL);
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v4 = v1 + 1734664879 * ((&v4 & 0x8A19A5D4 | ~(&v4 | 0x8A19A5D4)) ^ 0x5A3D7231) - 2209;
  int v3 = (char *)*(&off_26DE9F480 + v1 - 2644) - 8;
  (*(void (**)(unsigned int *))&v3[8 * (v1 ^ 0x444)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B320D98()
{
  uint64_t v5 = v0 - 1;
  *(unsigned char *)(v4 + v5) = ((v1 - 68) ^ 0xBA) * (v1 - 51);
  return (*(uint64_t (**)(void))(v3 + 8 * ((559 * (v5 == 0)) ^ v2)))();
}

uint64_t sub_22B320DDC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  int v7 = v4 ^ 0xFF0;
  (*(void (**)(void, void, void))(v5 + 8 * (v4 + 1511)))(**(unsigned int **)(a1 + 8 * (v4 - 2422)), *v3, (v4 ^ 0xFF0u) + v2 + *(_DWORD *)(v6 - 0x19157D3ABD2659D6));
  unint64_t v8 = ((unint64_t)&a2 ^ 0x7EF8FFBBFAA99F7BLL)
     - 0x3688E32142809812
     + ((2 * (void)&a2) & 0xFDF1FF77F5533EF0);
  *(unsigned char *)(v6 - 0x19157D3ABD2659BFLL) = ((v8 + (((v7 - 55) | 0x10) ^ 0x83)) ^ 0xBA) * (v8 - 88);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * v7))(v6 - 0x19157D3ABD2659DELL);
}

uint64_t sub_22B320EDC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((v0 + 539918870) ^ 0x66C) * (LODWORD(STACK[0x200]) == 100)) ^ (v0 + 539919456))))();
}

uint64_t sub_22B320F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((35 * (a7 + 1 == v10 + 44)) | v8)))(v7);
}

uint64_t sub_22B320FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8 * (((((v32 - 146747243) & 0x8BF23FE) + 1708) * (v34 == v33)) ^ v32)))(a32);
}

uint64_t sub_22B321030(uint64_t a1)
{
  int v1 = 1292559617 * (((a1 | 0xA2B58977) - a1 + (a1 & 0x5D4A7688)) ^ 0x5E6E11E);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = *(_DWORD *)(a1 + 12) ^ v1;
  unsigned int v5 = v3 - 1391213357;
  BOOL v4 = v3 - 1391213357 < 0;
  LODWORD(v6) = 1391213357 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + v2 - 1236) + ((99 * (v6 != ((2 * v6) & 0x4ACD8F2))) ^ v2) - 1))();
}

void sub_22B3210E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1292559617 * ((2 * (a1 & 0x5560BB64) - a1 - 1432402789) ^ 0xDCC2CF2));
  __asm { BRAA            X0, X17 }
}

uint64_t sub_22B321234()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((235 * (v0 + 1 == v3 + 48)) ^ v1)))();
}

uint64_t sub_22B321310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  return (*(uint64_t (**)(void))(v17 + 8 * (a17 + 1558)))();
}

uint64_t sub_22B321370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v23 = 1948972247 * ((v22 - 128) ^ 0xB59EF5EE);
  *(void *)(v22 - 120) = a20;
  *(_DWORD *)(v22 - 128) = v23 + a7 + 1203724089;
  *(_DWORD *)(v22 - 112) = v20 - v23 - 262;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0xCD6u)))(v22 - 128);
  return a13(v24);
}

uint64_t sub_22B3213DC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned __int8 *a63)
{
  v65 = (char *)*(&off_26DE9F480 + a44 - 3405) - 12;
  int v66 = v65[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D75) ^ 0xDBLL];
  HIDWORD(v67) = v66 ^ 0x14;
  LODWORD(v67) = ~v66 << 24;
  int v68 = (v67 >> 30) ^ 0x93;
  int v69 = v65[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D6DLL) ^ 0x43];
  HIDWORD(v67) = v69 ^ (a44 - 1840);
  LODWORD(v67) = ~v69 << 24;
  int v71 = (char *)*(&off_26DE9F480 + a44 - 3829) - 8;
  int v72 = (v68 << 8) | ((v71[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D77) ^ 0xBBLL] ^ 0x8C) << 24);
  uint64_t v73 = (uint64_t)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x8EB));
  unsigned int v74 = (char *)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x825)) - 12;
  unsigned __int8 v75 = -119 - v74[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D68) ^ 0xALL];
  uint64_t v76 = v71[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D6BLL) ^ 0xE8] ^ 0xF1;
  int v77 = (v74[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D6CLL) ^ 0x82] + 118) ^ 0x1E | (((v67 >> 30) ^ 0x61) << 8) | ((*(unsigned __int8 *)(v73 + (*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D6ELL) ^ 0x94)) ^ 0x78) << 16);
  int v78 = ((*(unsigned __int8 *)(v73 + (*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D72) ^ 0xC6)) ^ 0xBD) << 16) | ((v71[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D73) ^ 0x9FLL] ^ 0xCB) << 24);
  uint64_t v79 = *(unsigned __int8 *)(v73 + (*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D6ALL) ^ 0x24)) ^ 0x96;
  int v80 = v65[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D71) ^ 0xC0];
  HIDWORD(v67) = v80 ^ 0x14;
  LODWORD(v67) = ~v80 << 24;
  LODWORD(v73) = *(unsigned __int8 *)(v73 + (*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D76) ^ 0x3FLL)) ^ 0xF2;
  int v308 = v63;
  unsigned int v81 = v78 & 0xFFFF0000 | (((v67 >> 30) ^ 0x8F) << 8) | (v74[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D70) ^ 0x74]
                                                                                          + 118) ^ 0xF0;
  int v82 = v77 | ((v71[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D6FLL) ^ 0x1FLL] ^ 0x30) << 24);
  LOBYTE(v77) = v74[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D74) ^ 0xF1];
  int v83 = v65[*(unsigned __int8 *)(v64 - 0x4AAEAB593A0D69) ^ 0xA4];
  unsigned int v84 = v72 & 0xFFFFFF00 | (v73 << 16) | (v77 + 118) ^ 0x25;
  HIDWORD(v67) = v83 ^ 0x14;
  LODWORD(v67) = ~v83 << 24;
  unint64_t v85 = (v76 << 24) | (((v67 >> 30) ^ 0x21) << 8) | (v79 << 16);
  unsigned int v86 = (char *)*(&off_26DE9F480 + a44 - 3763) - 12;
  int v87 = (((v67 >> 30) ^ 0x62) - ((2 * ((v85 >> 8) ^ 0xB31943)) & 0xF8) + 225393276) ^ *(_DWORD *)&v86[4 * ((v67 >> 30) ^ 0x80)];
  uint64_t v88 = (uint64_t)*(&off_26DE9F480 + a44 - 3433);
  unsigned int v89 = (v87 - ((2 * v87) & 0xA42B9A34) + 1377160474) ^ *(_DWORD *)(v88 + 4 * (v79 ^ 0xB7));
  unsigned int v90 = (char *)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x9ED)) - 12;
  unsigned int v91 = v85 & 0xFFFFFF00 | v75;
  uint64_t v92 = (uint64_t)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x9D9));
  HIDWORD(v302) = v84;
  LODWORD(v85) = v84 ^ v76 ^ *(_DWORD *)&v90[4 * (v76 ^ 0x6A)] ^ (2040089223
                                                                              * *(_DWORD *)(v92 + 4 * (v75 ^ 0x90u))
                                                                              + 1758920284) ^ (v89
                                                                                             - ((2 * v89) & 0xF653EF96)
                                                                                             - 81135669);
  unsigned int v93 = v85 ^ 0x1A269073;
  LODWORD(v303) = v81;
  LODWORD(v85) = v85 ^ v81;
  LODWORD(v302) = v82;
  int v94 = v85 ^ v82;
  int v95 = *(_DWORD *)(v92 + 4 * ~(v94 ^ v91));
  LODWORD(v65) = (v94 ^ v91) >> 8;
  unint64_t v301 = __PAIR64__(v91, v93);
  int v96 = (2040089223 * v95 - ((858952974 * v95 + 296615096) & 0x2DAADDC4) - 5477058) ^ *(_DWORD *)&v86[4 * (v65 ^ 0xDE)] ^ v93 ^ ((v65 ^ 0x3C) - 2 * ((v65 ^ 0x3C) & 0x7E ^ v65 & 2) + 225393276);
  unsigned int v97 = (v96 - ((2 * v96) & 0xA42B9A34) + 1377160474) ^ *(_DWORD *)(v88
                                                                  + 4 * (((v94 ^ v91) >> 16) ^ 0x9Au));
  LODWORD(v299) = ((v94 ^ v91) >> 24) ^ *(_DWORD *)&v90[4 * (((v94 ^ v91) >> 24) ^ 0x3C)] ^ (v97
                                                                                           - ((2 * v97) & 0xF653EF96)
                                                                                           - 81135669);
  HIDWORD(v299) = v94 ^ v91 ^ 0x6FE88262;
  LODWORD(v300) = v94;
  HIDWORD(v300) = v85 ^ 0x23AECFF5;
  HIDWORD(v298) = ((v299 ^ 0x8CF3FEC7) - ((2 * (v299 ^ 0x8CF3FEC7)) & 0x5EBA62C8) - 1352847004) ^ v85 ^ 0x23AECFF5;
  LODWORD(v65) = HIDWORD(v298) ^ 0x25DD508A ^ v94;
  LODWORD(v298) = v65 ^ 0x5D1F561A;
  unsigned int v98 = v65 ^ 0x5D1F561A ^ HIDWORD(v299);
  LODWORD(v85) = (2040089223 * *(_DWORD *)(v92 + 4 * (v65 ^ 0x1A ^ BYTE4(v299) ^ 0x52u)) + 1758920284) ^ *(_DWORD *)&v86[4 * (BYTE1(v98) ^ 0xF5)] ^ v299 ^ 0x8CF3FEC7 ^ ((BYTE1(v98) ^ 0x17) - ((2 * ((v98 >> 8) ^ 0x94E417)) & 0xF8) + 225393276);
  LODWORD(v85) = (v85 - ((2 * v85) & 0xA42B9A34) + 1377160474) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v98) ^ 0x4Au));
  int v99 = *(_DWORD *)&v90[4 * (HIBYTE(v98) ^ 0x4D)] ^ HIBYTE(v98) ^ 0x1BB9065 ^ (v85 - ((2 * v85) & 0xF653EF96) - 81135669);
  LODWORD(v297) = v99 ^ ((HIDWORD(v298) ^ 0x25DD508A) - ((2 * (HIDWORD(v298) ^ 0x25DD508A)) & 0x37721E2) + 29069553);
  int v100 = v297 ^ 0x30810FBC ^ v65;
  HIDWORD(v303) = v100 ^ 0xF482F531;
  unsigned int v101 = v100 ^ 0xF482F531 ^ v98;
  int v102 = *(_DWORD *)(v92 + 4 * (v101 ^ 0xE8u));
  unsigned int v103 = (2040089223 * v102 - ((-214788850 * v102 - 777126728) & 0xF653EF96) + 1677784615) ^ *(_DWORD *)&v90[4 * (HIBYTE(v101) ^ 0x5F)];
  HIDWORD(v296) = v101;
  unsigned int v104 = *(_DWORD *)&v86[4 * (BYTE1(v101) ^ 0x7E)] ^ *(_DWORD *)(v88
                                                               + 4
                                                               * (((v101 ^ 0xB791E0FE) >> 16) ^ 0xABu)) ^ ((BYTE1(v101) ^ 0x9C) - 2 * ((BYTE1(v101) ^ 0x9C) & 0x7E ^ (v101 >> 8) & 2) + 225393276) ^ (v103 - ((2 * v103) & 0xA42B9A34) + 1377160474);
  HIDWORD(v297) = v99;
  LODWORD(v296) = HIBYTE(v101) ^ v99 ^ (v104 - ((2 * v104) & 0x37721E2) + 29069553);
  HIDWORD(v295) = v296 ^ 0xFEA77046 ^ v297 ^ 0x30810FBC;
  unsigned int v105 = 2 * (HIDWORD(v295) ^ 0xF20A80BA);
  unsigned int v306 = (HIDWORD(v295) ^ 0xF20A80BA) - (v105 & 0xF0E21740) + 2020674464;
  int v106 = *(_DWORD *)(v92 + 4 * ((((BYTE4(v295) ^ 0xBA) - (v105 & 0x40) - 96) ^ v98) ^ 0x6Cu));
  unsigned int v107 = (2040089223 * v106 - ((-214788850 * v106 - 777126728) & 0xA42B9A34) - 1158886538) ^ *(_DWORD *)(v88 + 4 * (((v306 ^ v98 ^ 0x7845E1BA) >> 16) ^ 0xCu));
  unsigned int v108 = (v306 ^ v98) >> 8;
  int v109 = *(_DWORD *)&v86[4 * (v108 ^ 0xF)] ^ *(_DWORD *)&v90[4 * (((v306 ^ v98) >> 24) ^ 0x41)] ^ v296 ^ 0xFEA77046 ^ ((v306 ^ v98) >> 24) ^ ((v108 ^ 0xED) - 2 * ((v108 ^ 0xED) & 0x7E ^ v108 & 2) + 225393276) ^ (v107 - ((2 * v107) & 0xF653EF96) - 81135669);
  unsigned int v110 = v109 ^ 0x8C28EB41;
  LODWORD(v294) = v109 ^ v100;
  int v111 = v109 ^ v100 ^ 0xC5B27BA;
  unsigned int v112 = v111 ^ v306 ^ v98;
  int v113 = *(_DWORD *)(v92 + 4 * ((v111 ^ ((BYTE4(v295) ^ 0xBA) - (v105 & 0x40) - 96) ^ v98) ^ 0x5Du));
  unsigned int v114 = *(_DWORD *)&v86[4 * (BYTE1(v112) ^ 0x28)] ^ *(_DWORD *)&v90[4 * (HIBYTE(v112) ^ 0x90)] ^ ((BYTE1(v112) ^ 0xCA)
                                                                                                 - ((2 * ((v112 >> 8) ^ 0x49B7CA)) & 0xF8)
                                                                                                 + 225393276) ^ (2040089223 * v113 - ((-214788850 * v113 - 777126728) & 0xF653EF96) + 1677784615);
  HIDWORD(v293) = v112;
  unsigned int v115 = (v114 - ((2 * v114) & 0xA42B9A34) + 1377160474) ^ *(_DWORD *)(v88 + 4 * (BYTE2(v112) ^ 0x19u));
  HIDWORD(v294) = v110;
  HIDWORD(v292) = v110 ^ ((HIDWORD(v295) ^ 0xF20A80BA) - (v105 & 0x1851D7B2) - 1943475239);
  LODWORD(v293) = HIBYTE(v112) ^ v110 ^ (v115 - ((2 * v115) & 0x1851D7B2) - 1943475239);
  LODWORD(v292) = v293 ^ 0xD5DA9EFE ^ HIDWORD(v292);
  int v116 = 2 * (v292 ^ 0x888E1055);
  int v305 = (v292 ^ 0x888E1055) - (v116 & 0xC0AAB7C4) - 531276830;
  LODWORD(v295) = v306 ^ v98;
  unsigned int v117 = v305 ^ v306 ^ v98;
  int v118 = *(_DWORD *)(v92 + 4 * ((v305 ^ ((BYTE4(v295) ^ 0xBA) - (v105 & 0x40) - 96) ^ v98) ^ 0x10u));
  unsigned int v119 = (2040089223 * v118 - ((-214788850 * v118 - 777126728) & 0xF653EF96) + 1677784615) ^ *(_DWORD *)&v90[4 * (HIBYTE(v117) ^ 0x5A)];
  int v120 = *(_DWORD *)(v88 + 4 * (BYTE2(v117) ^ 0x6Eu)) ^ 0x51CDF6AE ^ *(_DWORD *)&v86[4 * (BYTE1(v117) ^ 0xA5)] ^ v293 ^ 0xD5DA9EFE ^ HIBYTE(v117) ^ ((BYTE1(v117) ^ 0x47) - ((2 * ((v117 >> 8) ^ 0x83C047)) & 0xF8) + 225393276) ^ (v119 - ((2 * v119) & 0xA42B9A34) + 1377160474);
  HIDWORD(v291) = v117;
  unsigned int v121 = ((v117 ^ 0x7FDE45AB) + (v117 ^ 0x98818919 ^ v120 ^ v111) + 1) ^ ((v120 ^ v111 ^ 0xE75FCCB2) + 1);
  int v122 = v120 ^ v111 ^ 0x6B305634;
  unsigned int v123 = ((v121 - ((2 * v121) & 0xE720CAF2) + 1938843001) ^ v122) + (v117 ^ 0x7FDE45AB);
  unsigned int v124 = v123 - ((2 * v123) & 0x37269868) - 1684845516;
  int v125 = 2040089223 * *(_DWORD *)(v92 + 4 * ((v123 - ((2 * v123) & 0x68) + 52) ^ 0xF1u));
  int v126 = (v125 - 2 * ((v125 + 1758920284) & 0x5215CD1B ^ v125 & 1) - 1158886538) ^ *(_DWORD *)(v88
                                                                                             + 4
                                                                                             * (BYTE2(v124) ^ 0x3Du));
  int v127 = *(_DWORD *)&v90[4 * (HIBYTE(v124) ^ 0x42)] ^ *(_DWORD *)&v86[4 * (BYTE1(v124) ^ 0xAE)] ^ ((HIBYTE(v124) ^ 0x9B)
                                                                                                 - ((2 * (HIBYTE(v124) ^ 0x9B)) & 0x196)
                                                                                                 - 81135669) ^ (v126 - ((2 * v126) & 0x1ADE74F8) + 225393276);
  LODWORD(v291) = v120;
  LODWORD(v289) = v120 ^ ((v292 ^ 0x888E1055) - (v116 & 0xA39BEC5A) + 1372452397);
  HIDWORD(v289) = BYTE1(v124) ^ v120 ^ (v127 - ((2 * v127) & 0xA39BEC5A) + 1372452397);
  LODWORD(v65) = HIDWORD(v289) ^ 0xC7059F1F ^ v289;
  LODWORD(v290) = v124;
  LODWORD(v288) = ((v65 ^ 0x58548EE2) - ((2 * (v65 ^ 0x58548EE2)) & 0xE720CAF2) + 1938843001) ^ v122;
  unsigned int v128 = v288 ^ v124;
  int v129 = *(_DWORD *)(v92 + 4 * (v128 ^ 0x42u));
  unsigned int v130 = (2040089223 * v129 - ((-214788850 * v129 - 777126728) & 0xF653EF96) + 1677784615) ^ *(_DWORD *)&v90[4 * HIBYTE(v128)] ^ HIDWORD(v289) ^ 0xC7059F1F ^ HIBYTE(v128);
  int v131 = ((BYTE1(v128) ^ 0x20) - 2 * ((BYTE1(v128) ^ 0x20) & 0x7F ^ (v128 >> 8) & 3) + 225393276) ^ *(_DWORD *)&v86[4 * (BYTE1(v128) ^ 0xC2)];
  unsigned int v132 = (v130 ^ 0x6423E0F2 ^ -(v130 ^ 0x6423E0F2) ^ ((((v130 ^ 0xD9) - ((2 * (v130 ^ 0xD9)) & 0xF02AF284) + 2014673218) ^ v131 ^ 0x8119789F)
                                                    + (v131 ^ 0x62D01E09)
                                                    + 1))
       + (v131 ^ 0x62D01E09);
  int v133 = (v132 + 1377160475 + (~(2 * v132) | 0x5BD465CB)) ^ *(_DWORD *)(v88
                                                                      + 4
                                                                      * (((v128 ^ 0x2A88D119) >> 16) ^ 0xDCu));
  HIDWORD(v288) = v65;
  HIDWORD(v290) = v120 ^ v111;
  int v134 = v133 ^ v120 ^ v111;
  unsigned int v135 = ((v134 ^ 0xBD75B213) - 2 * ((v134 ^ 0xBD75B213) & 0x34CEDB3E ^ v134 & 0xC) + 885971762) ^ v128;
  unsigned int v136 = (v135 ^ 0x9288F5D8) >> 24;
  int v137 = *(_DWORD *)&v90[4 * (v136 ^ 0xD9)];
  LODWORD(v90) = *(_DWORD *)(v92
                           + 4
                           * ((((v134 ^ 0x13) - 2 * ((v134 ^ 0x13) & 0x3E ^ v134 & 0xC) + 50) ^ v128) ^ 0xEu));
  unsigned int v138 = (((2040089223 * v90 - ((-214788850 * v90 - 777126728) & 0xF653EF96) + 1677784615) ^ v137)
        + 1377160475
        + (~(2 * ((2040089223 * v90 - ((-214788850 * v90 - 777126728) & 0xF653EF96) + 1677784615) ^ v137)) | 0x5BD465CB)) ^ *(_DWORD *)(v88 + 4 * (((v135 ^ 0x9288F5D8) >> 16) ^ 0xCu)) ^ v136;
  unint64_t v287 = __PAIR64__(v128, v133);
  HIDWORD(v285) = v133 ^ 0x82C7D50 ^ ((BYTE1(v135) ^ 0xF9)
                                    + 225393276
                                    + (~(2 * ((v135 >> 8) ^ 0x922AF9)) | 0xFFFFFF07)
                                    + 1) ^ *(_DWORD *)&v86[4 * (BYTE1(v135) ^ 0x1B)] ^ (v138
                                                                                      - ((2 * v138) & 0x5BF3F81C)
                                                                                      - 1376125938);
  LODWORD(v286) = ((v65 ^ 0x58548EE2)
                 - 2 * ((v65 ^ 0x58548EE2) & 0x2DF9FC1E ^ v65 & 0x10)
                 - 1376125938) ^ 0x6A00E380 ^ v133 ^ 0x82C7D50;
  LODWORD(v285) = v134 ^ 0xCA1941F3;
  LODWORD(v284) = HIDWORD(v285) ^ v286;
  HIDWORD(a22) = HIDWORD(v285) ^ v286 ^ v134 ^ 0xCA1941F3;
  int v139 = (char *)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x996)) - 12;
  unsigned int v140 = (char *)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x9A9)) - 8;
  unsigned int v141 = (char *)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x9D6)) - 8;
  uint64_t v142 = (uint64_t)*(&off_26DE9F480 + ((a44 - 1839) ^ 0x9F9));
  HIDWORD(v284) = v98 ^ 0x5306FB9F;
  v282 = v141;
  v283 = v139;
  unsigned int v143 = ((a1[7] - ((2 * a1[7]) & 0x6E) - 73) ^ v140[a1[7] ^ 0x37] | ((v141[a1[(v98 ^ 0x5306FB9F) % 5 + 5 - (v98 ^ 0x5306FB9F) % 5] ^ 0x78] ^ 3) << 16) | ((*(unsigned __int8 *)(v142 + (a1[6] ^ 0x3ALL)) ^ 0xA6) << 8) | (((v139[a1[4] ^ 0x59] + 95) ^ 0x53) << 24)) ^ 0xFAD8521B;
  LODWORD(v88) = (v140[a1[15] ^ 0x42] ^ (a1[15] - ((2 * a1[15]) & 0x6E) - 73) ^ 0xE2 | ((v141[a1[13] ^ 0x6BLL] ^ 0x59) << 16) | (((v139[a1[12] ^ 0x14] + 95) ^ 0xB1) << 24) | ((*(unsigned __int8 *)(v142 + (a1[14] ^ 0xF6)) ^ 0x6F) << 8)) ^ 0xC39DA350;
  LODWORD(v92) = (v140[a1[3] ^ 0x6BLL] ^ (a1[3] - ((2 * a1[3]) & 0x6E) - 73) ^ 0x65 | (((v139[*a1 ^ 0x30] + 95) ^ 0xF6) << 24) | ((v141[a1[1] ^ 0x3CLL] ^ 0x97) << 16) | ((*(unsigned __int8 *)(v142 + (a1[2] ^ 0x44)) ^ 0xB9) << 8)) ^ 0x9286286;
  unsigned int v144 = ((a1[11] - ((2 * a1[11]) & 0x6E) - 73) ^ v140[a1[11] ^ 0x7BLL] | ((*(unsigned __int8 *)(v142 + (a1[10] ^ 0xE0)) ^ 0x1D) << 8) | ((v141[a1[9] ^ 0xBBLL] ^ 0xC3) << 16) | (((v139[a1[8] ^ 0x31] + 95) ^ 0xA5) << 24)) ^ 0xA26DF933;
  HIDWORD(v281) = v308 + 1667776531;
  LODWORD(v281) = v305 ^ v111;
  int v145 = (a44 - 3392) | 0x800;
  HIDWORD(v280) = v145 ^ 0xBE9;
  LODWORD(v280) = v145 ^ 0xAF6;
  HIDWORD(v279) = v145 ^ 0xB5F;
  LODWORD(v279) = v306 ^ HIDWORD(v303);
  HIDWORD(v286) = v135 ^ 0x61ED1D4;
  LODWORD(v278) = ((HIDWORD(a22) ^ 0x29267F7C) - ((2 * (HIDWORD(a22) ^ 0x29267F7C)) & 0x2868503E) - 1808521185) ^ v135 ^ 0x61ED1D4;
  HIDWORD(v278) = v145 ^ 0xB71;
  HIDWORD(v277) = v145 ^ 0xAC2;
  LODWORD(v277) = v145 ^ 0xB21;
  unsigned int v309 = v145;
  HIDWORD(a12) = v145 ^ 0xA0C;
  LODWORD(v304) = 0;
  HIDWORD(v304) = v145 + 1344;
  uint64_t v307 = (v145 + 1344) ^ 0xF49u;
  int v146 = v140[a63[15] ^ 0xC1] ^ (a63[15] - ((2 * a63[15]) & 0x6E) - 73) ^ 0x18;
  LODWORD(v139) = (((v139[*a63 ^ 0xA0] + 95) ^ 0x34) << 24) | ((v141[a63[1] ^ 0xFELL] ^ 0x5A) << 16) | ((*(unsigned __int8 *)(v142 + (a63[2] ^ 0xF1)) ^ 0x23) << 8);
  LODWORD(v85) = v140[a63[3] ^ 0xE5] ^ (a63[3] - ((2 * a63[3]) & 0x6E) - 73) ^ 0xA6;
  int v147 = v140[a63[7] ^ 0x88] ^ (a63[7] + (~(2 * a63[7]) | 0x91) - 72) ^ 0x93;
  int v148 = (((v283[a63[12] ^ 0xCLL] + 95) ^ 0xF4) << 24) | ((*(unsigned __int8 *)(v142
                                                                                               + (a63[14] ^ 0x30)) ^ 0x84) << 8) | v146 | ((v141[a63[v307] ^ 0x6CLL] ^ 0x8D) << 16);
  int v149 = ((*(unsigned __int8 *)(v142 + (a63[6] ^ 0x95)) ^ 0x8D) << 8) | (((v283[a63[4] ^ 0x98] + 95) ^ 0x82) << 24) | ((v141[a63[5] ^ 0xE2] ^ 0xEA) << 16) | v147;
  LODWORD(v85) = (v85 | v139) - 2 * ((v85 | v139) & 0x63C2887E ^ v85 & 0x12) - 473790356;
  LODWORD(v139) = v149 + 271759601 - 2 * (v149 & 0x1032B8FB ^ v147 & 0xA);
  int v150 = v140[a63[11] ^ 0xCDLL] ^ (a63[11] - ((2 * a63[11]) & 0x6E) - 73) ^ 0x85 | (((v283[a63[8] ^ 0xF3] + 95) ^ 0x49) << 24) | ((v141[a63[9] ^ 0x64] ^ 0xB3) << 16) | ((*(unsigned __int8 *)(v142 + (a63[10] ^ 0x3BLL)) ^ 0xB) << 8);
  int v151 = (v148 + 695683514 - 2 * (v148 & 0x297749BB ^ v146 & 1)) ^ v88;
  unsigned int v152 = v144 ^ v302 ^ (v150 - ((2 * v150) & 0x910E27B2) + 1216811993);
  unsigned int v153 = v143 ^ v303 ^ v139;
  LODWORD(v73) = (v151 - ((2 * v151) & 0xD69C2E12) + 1800279817) ^ HIDWORD(v301);
  int v154 = (char *)*(&off_26DE9F480 + (v145 ^ 0xBE9)) - 4;
  int v155 = *(_DWORD *)&v154[4 * (((v151 - ((2 * v151) & 0x12) + 9) ^ BYTE4(v301)) ^ 0x8A)];
  uint64_t v156 = (uint64_t)*(&off_26DE9F480 + (int)(v309 - 2329));
  unsigned int v157 = (char *)*(&off_26DE9F480 + (int)v280) - 8;
  HIDWORD(v67) = ~v155;
  LODWORD(v67) = v155 ^ 0xA1495300;
  int v158 = *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0xFE)];
  LODWORD(v85) = v92 ^ HIDWORD(v302) ^ v85;
  LODWORD(v139) = (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v153) ^ 0xC4)] - 1663231611) ^ (v67 >> 5);
  uint64_t v159 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(v279));
  unsigned int v160 = (134253175 * v158 + 342004310 - ((268506350 * v158 + 968504074) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v85) ^ 0xD1u));
  int v161 = *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0x93)];
  LODWORD(v139) = (v139 + 2005235921 - ((2 * v139) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159
                                                                                              + 4
                                                                                              * (BYTE1(v152) ^ 0x4Bu));
  unsigned int v162 = (134253175 * v161 + 342004310 - ((268506350 * v161 + 968504074) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v153) ^ 0x85u));
  unsigned int v163 = *(_DWORD *)(v156 + 4 * (HIBYTE(v153) ^ 0xB1)) ^ 0x99313CB5 ^ (134253175
                                                                       * *(_DWORD *)&v157[4 * (BYTE2(v152) ^ 0x1E)]
                                                                       - 1663231611);
  LODWORD(a1) = *(_DWORD *)&v154[4 * (v152 ^ 0xA6)];
  HIDWORD(v67) = ~a1;
  LODWORD(v67) = a1 ^ 0xA1495300;
  int v164 = (v162 - 1374052700 - ((2 * v162) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0x61)) ^ (v67 >> 5);
  LODWORD(v139) = *(_DWORD *)(v156 + 4 * (BYTE3(v85) ^ 0xAB)) ^ (v139
                                                                 - 1374052700
                                                                 - ((2 * v139) & 0x5C333D48));
  LODWORD(v85) = *(_DWORD *)&v154[4 * (v85 ^ 0xE0)];
  HIDWORD(v67) = ~v85;
  LODWORD(v67) = v85 ^ 0xA1495300;
  LODWORD(v85) = (v163 + 2005235921 - ((2 * v163) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0x2Au)) ^ (v67 >> 5);
  int v165 = *(_DWORD *)&v154[4 * (v153 ^ 0x37)];
  HIDWORD(v67) = ~v165;
  LODWORD(v67) = v165 ^ 0xA1495300;
  int v166 = (v160 - 1374052700 - ((2 * v160) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v152) ^ 0x75)) ^ (v67 >> 5);
  unsigned int v167 = (v139 - ((2 * v139) & 0x2DAADDC4) - 1764397342) ^ v301;
  LODWORD(a1) = (v166 - ((2 * v166) & 0xDCFD8D5C) + 1853802158) ^ v300;
  unsigned int v168 = (v85 - 1352847004 - ((2 * v85) & 0x5EBA62C8)) ^ HIDWORD(v300);
  LODWORD(v73) = (v164 - ((2 * v164) & 0x15B97CB0) - 1965244840) ^ HIDWORD(v299);
  LODWORD(v85) = *(_DWORD *)&v154[4 * (((v164 - ((2 * v164) & 0xB0) + 88) ^ BYTE4(v299)) ^ 0xDB)];
  HIDWORD(v67) = ~v85;
  LODWORD(v67) = v85 ^ 0xA1495300;
  int v169 = *(_DWORD *)&v157[4 * (BYTE2(a1) ^ 0x6C)];
  LODWORD(v85) = (v67 >> 5) + 2005235921 - ((2 * (v67 >> 5)) & 0xEF0AF1A2);
  int v170 = *(_DWORD *)&v157[4 * (BYTE2(v167) ^ 0x92)];
  LODWORD(v139) = (134253175 * v170 + 342004310 - ((268506350 * v170 + 968504074) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v168) ^ 0xC7u));
  int v171 = *(_DWORD *)&v154[4 * (v167 ^ 0xF0)];
  HIDWORD(v67) = ~v171;
  LODWORD(v67) = v171 ^ 0xA1495300;
  int v172 = (134253175 * v169 + 342004310 - ((268506350 * v169 + 968504074) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 9u)) ^ (v67 >> 5);
  int v173 = *(_DWORD *)&v154[4 * (v168 ^ 0x11)];
  HIDWORD(v67) = ~v173;
  LODWORD(v67) = v173 ^ 0xA1495300;
  int v174 = ((v67 >> 5) + 2005235921 - ((2 * (v67 >> 5)) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v167) ^ 0xC5u));
  LODWORD(v85) = v85 ^ *(_DWORD *)(v159 + 4 * (BYTE1(a1) ^ 0x8Cu)) ^ (134253175
                                                                      * *(_DWORD *)&v157[4 * (BYTE2(v168) ^ 0xCA)]
                                                                      - 1663231611);
  int v175 = v85 - 1374052700 - ((2 * v85) & 0x5C333D48);
  LODWORD(v85) = v174 - 1374052700 - ((2 * v174) & 0x5C333D48);
  int v176 = *(_DWORD *)&v154[4 * (a1 ^ 0x4B)];
  HIDWORD(v67) = ~v176;
  LODWORD(v67) = v176 ^ 0xA1495300;
  int v177 = *(_DWORD *)(v156 + 4 * ((a1 >> 24) ^ 0x9C)) ^ (134253175
                                                                      * *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0xA6)]
                                                                      - 1663231611);
  LODWORD(a1) = *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0x2A));
  LODWORD(v85) = ((v85 ^ v177) - ((2 * (v85 ^ v177)) & 0xA3D95116) - 773019509) ^ v298;
  unsigned int v178 = *(_DWORD *)(v156 + 4 * (HIBYTE(v167) ^ 0x72)) ^ v299 ^ v175;
  LODWORD(v73) = (v172 - 1374052700 - ((2 * v172) & 0x5C333D48)) ^ HIDWORD(v298) ^ *(_DWORD *)(v156
                                                                                             + 4
                                                                                             * (HIBYTE(v168) ^ 0xB6));
  unsigned int v179 = a1 ^ HIDWORD(v284) ^ (v67 >> 5) ^ (v139 - 1374052700 - ((2 * v139) & 0x5C333D48));
  int v180 = *(_DWORD *)&v154[4 * (v178 ^ 0xF7)];
  int v181 = *(_DWORD *)&v157[4 * (BYTE2(v179) ^ 0x44)];
  HIDWORD(v67) = ~v180;
  LODWORD(v67) = v180 ^ 0xA1495300;
  LODWORD(v139) = (134253175 * v181 + 1257682985 - ((268506350 * v181 + 968504074) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v85) ^ 0x6B));
  LODWORD(a1) = v139 + 2005235921 - ((2 * v139) & 0xEF0AF1A2);
  LODWORD(v139) = *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0xE8)];
  int v182 = (v67 >> 5) - 1374052700 - ((2 * (v67 >> 5)) & 0x5C333D48);
  int v183 = *(_DWORD *)&v154[4 * (v85 ^ 0xCE)];
  HIDWORD(v67) = ~v183;
  LODWORD(v67) = v183 ^ 0xA1495300;
  int v184 = (v67 >> 5) ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v178) ^ 0xC6)] - 1663231611);
  unsigned int v185 = (v184 + 2005235921 - ((2 * v184) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0xE5u));
  int v186 = *(_DWORD *)&v154[4 * (v179 ^ 0xD3)];
  int v187 = *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0x94)) ^ v182 ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0xEB)]
                                                               - 1663231611);
  HIDWORD(v67) = ~v186;
  LODWORD(v67) = v186 ^ 0xA1495300;
  LODWORD(v85) = (134253175 * v139 + 342004310 - ((268506350 * v139 + 968504074) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v85) ^ 0x34u)) ^ (v67 >> 5);
  LODWORD(v85) = (v85 - 1374052700 - ((2 * v85) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v178) ^ 0x3D));
  LODWORD(v139) = (v185 - 1374052700 - ((2 * v185) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v179) ^ 0xED));
  int v188 = *(_DWORD *)&v154[4 * (v73 ^ 0xBA)];
  LODWORD(v73) = (v85 + 29069553 - ((2 * v85) & 0x37721E2)) ^ HIDWORD(v297);
  HIDWORD(v67) = ~v188;
  LODWORD(v67) = v188 ^ 0xA1495300;
  LODWORD(v85) = a1 ^ *(_DWORD *)(v159 + 4 * (BYTE1(v178) ^ 0x4Bu)) ^ (v67 >> 5);
  unsigned int v189 = *(_DWORD *)(v159 + 4 * (BYTE1(v179) ^ 0xE5u)) ^ v297 ^ (v187 + 2005235921 - ((2 * v187) & 0xEF0AF1A2));
  LODWORD(a1) = (v139 - ((2 * v139) & 0x6A8D763A) + 893827869) ^ HIDWORD(v296);
  int v190 = *(_DWORD *)&v154[4 * ((((_BYTE)v139 - ((2 * (_BYTE)v139) & 0x3A) + 29) ^ BYTE4(v296)) ^ 0xEB)];
  HIDWORD(v67) = ~v190;
  LODWORD(v67) = v190 ^ 0xA1495300;
  int v191 = v67 >> 5;
  int v192 = *(_DWORD *)&v154[4
                        * ((*(unsigned char *)(v159 + 4 * (BYTE1(v179) ^ 0xE5u)) ^ v297 ^ (v187 - 47 - ((2 * v187) & 0xA2))) ^ 0x68)];
  HIDWORD(v67) = ~v192;
  LODWORD(v67) = v192 ^ 0xA1495300;
  LODWORD(v85) = (v85 + 2020674464 - ((2 * v85) & 0xF0E21740)) ^ HIDWORD(v303);
  int v193 = ((v67 >> 5) + 2005235921 - ((2 * (v67 >> 5)) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0x3Bu));
  int v194 = *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0x61)];
  int v195 = (v191 - 1374052700 - ((2 * v191) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0x24)) ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v189) ^ 0x6B)] - 1663231611);
  int v196 = v193 - 1374052700 - ((2 * v193) & 0x5C333D48);
  LODWORD(v139) = (134253175 * v194 + 342004310 - ((268506350 * v194 + 968504074) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * ((unsigned __int16)(v189 ^ 0xBB68) >> 8));
  int v197 = *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0x3E)];
  LODWORD(v73) = *(_DWORD *)&v154[4 * (v73 ^ 0xD2)];
  HIDWORD(v67) = ~v73;
  LODWORD(v67) = v73 ^ 0xA1495300;
  unsigned int v198 = *(_DWORD *)&v154[4 * (v85 ^ 0x90)];
  LODWORD(v139) = *(_DWORD *)(v156 + 4 * ((a1 >> 24) ^ 0x99)) ^ (v139
                                                                               - 1374052700
                                                                               - ((2 * v139) & 0x5C333D48)) ^ (v198 >> 5) ^ (~v198 << 27);
  LODWORD(v73) = *(_DWORD *)(v159 + 4 * (BYTE1(a1) ^ 0x2Eu)) ^ (v67 >> 5);
  int v199 = 134253175 * *(_DWORD *)&v157[4 * (BYTE2(a1) ^ 0x74)] - 1663231611;
  LODWORD(a1) = *(_DWORD *)(v156 + 4 * (HIBYTE(v189) ^ 0x31));
  int v200 = (134253175 * v197 + 342004310 - ((268506350 * v197 + 968504074) & 0xEF0AF1A2)) ^ v73;
  unsigned int v201 = (v195 + 2005235921 - ((2 * v195) & 0xEF0AF1A2)) ^ v296 ^ *(_DWORD *)(v159 + 4 * (BYTE1(v85) ^ 0xB5u));
  LODWORD(v73) = ((v139 ^ 0x50A4A98) - ((2 * (v139 ^ 0x50A4A98)) & 0x9CE15C00) + 1316007424) ^ v295;
  unsigned int v202 = a1 ^ HIDWORD(v295) ^ (v200 - 1374052700 - ((2 * v200) & 0x5C333D48));
  LODWORD(a1) = v279 ^ *(_DWORD *)(v156 + 4 * (BYTE3(v85) ^ 0xCE)) ^ v196 ^ v199;
  int v203 = *(_DWORD *)&v154[4 * (v202 ^ 0xAE)];
  HIDWORD(v67) = ~v203;
  LODWORD(v67) = v203 ^ 0xA1495300;
  int v204 = (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0x31)] - 1663231611) ^ (v67 >> 5);
  LODWORD(v85) = (v204 - 1374052700 - ((2 * v204) & 0x5C333D48)) ^ *(_DWORD *)(v156
                                                                             + 4 * ((a1 >> 24) ^ 0xBA));
  int v205 = *(_DWORD *)&v154[4 * (a1 ^ 0xE)];
  HIDWORD(v67) = ~v205;
  LODWORD(v67) = v205 ^ 0xA1495300;
  int v206 = ((v67 >> 5) - 1374052700 - ((2 * (v67 >> 5)) & 0x5C333D48)) ^ (134253175
                                                                      * *(_DWORD *)&v157[4 * (BYTE2(v201) ^ 0x35)]
                                                                      - 1663231611);
  int v207 = *(_DWORD *)&v154[4 * (v201 ^ 0xB6)];
  HIDWORD(v67) = ~v207;
  LODWORD(v67) = v207 ^ 0xA1495300;
  int v208 = v67 >> 5;
  LODWORD(v139) = v206 ^ *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0xFC));
  int v209 = *(_DWORD *)&v154[4 * (v73 ^ 0x72)];
  LODWORD(v139) = (v139 + 2005235921 - ((2 * v139) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159
                                                                                              + 4
                                                                                              * (BYTE1(v202) ^ 0x44u));
  HIDWORD(v67) = ~v209;
  LODWORD(v67) = v209 ^ 0xA1495300;
  unsigned int v210 = *(_DWORD *)(v156 + 4 * (HIBYTE(v201) ^ 0x79)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(a1) ^ 0x44u)) ^ 0xD99CE675 ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v202) ^ 0x47)] - 1663231611);
  int v211 = *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0x4Au));
  int v212 = *(_DWORD *)(v159 + 4 * (BYTE1(v201) ^ 0xB5u));
  unsigned int v213 = (v139 - ((2 * v139) & 0x7A592EC4) - 1121151134) ^ v112;
  LODWORD(v73) = ((v210 ^ (v67 >> 5)) - 1943475239 - ((2 * (v210 ^ (v67 >> 5))) & 0x1851D7B2)) ^ HIDWORD(v294);
  unsigned int v214 = v212 ^ v294 ^ (v85 + 2005235921 - ((2 * v85) & 0xEF0AF1A2));
  int v215 = *(_DWORD *)&v154[4 * ((v212 ^ v294 ^ (v85 - 47 - ((2 * v85) & 0xA2))) ^ 1)];
  LODWORD(v85) = v211 ^ HIDWORD(v292) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v202) ^ 0x22)) ^ (134253175
                                                                                         * *(_DWORD *)&v157[4 * (BYTE2(a1) ^ 0x4C)]
                                                                                         - 1663231611) ^ v208;
  HIDWORD(v67) = ~v215;
  LODWORD(v67) = v215 ^ 0xA1495300;
  int v216 = *(_DWORD *)&v154[4
                        * ((v211 ^ BYTE4(v292) ^ *(unsigned char *)(v156 + 4 * (HIBYTE(v202) ^ 0x22)) ^ (119 * v157[4 * (BYTE2(a1) ^ 0x4C)] - 123) ^ v208) ^ 0xF9)];
  LODWORD(v139) = (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0xC6)] - 1663231611) ^ (v67 >> 5);
  HIDWORD(v67) = ~v216;
  LODWORD(v67) = v216 ^ 0xA1495300;
  int v217 = *(_DWORD *)&v157[4 * (BYTE2(v214) ^ 0x34)];
  int v218 = ((v67 >> 5) + 2005235921 - ((2 * (v67 >> 5)) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0x4Bu));
  unsigned int v219 = 134253175 * v217 + 342004310 - ((268506350 * v217 + 968504074) & 0xEF0AF1A2);
  int v220 = *(_DWORD *)&v154[4 * (v213 ^ 0x21)];
  HIDWORD(v67) = ~v220;
  LODWORD(v67) = v220 ^ 0xA1495300;
  int v221 = (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0x28)] - 1663231611) ^ *(_DWORD *)(v159
                                                                                          + 4 * (BYTE1(v214) ^ 0x35u)) ^ ((v67 >> 5) + 2005235921 - ((2 * (v67 >> 5)) & 0xEF0AF1A2));
  int v222 = *(_DWORD *)&v154[4 * (v73 ^ 0x12)];
  HIDWORD(v67) = ~v222;
  LODWORD(v67) = v222 ^ 0xA1495300;
  int v223 = v219 ^ *(_DWORD *)(v159 + 4 * (BYTE1(v213) ^ 0x54u)) ^ (v67 >> 5);
  LODWORD(a1) = BYTE3(v85) ^ 0x32;
  LODWORD(v85) = *(_DWORD *)(v159 + 4 * (BYTE1(v85) ^ 0x5Cu)) ^ (v139
                                                                 + 2005235921
                                                                 - ((2 * v139) & 0xEF0AF1A2));
  int v224 = 134253175 * *(_DWORD *)&v157[4 * (BYTE2(v213) ^ 0x3D)] - 1663231611;
  LODWORD(v85) = (v85 - 1374052700 - ((2 * v85) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v213) ^ 0xDE));
  unsigned int v225 = (v85 - ((2 * v85) & 0x62D03FEC) + 828907510) ^ HIDWORD(v291);
  LODWORD(v85) = v305 ^ v111 ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v214) ^ 0x79)) ^ v224 ^ (v218
                                                                                       - 1374052700
                                                                                       - ((2 * v218) & 0x5C333D48));
  LODWORD(v73) = *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0x9F)) ^ v293 ^ (v221 - 1374052700 - ((2 * v221) & 0x5C333D48));
  LODWORD(v139) = *(_DWORD *)(v156 + 4 * a1) ^ v292 ^ (v223 - 1374052700 - ((2 * v223) & 0x5C333D48));
  int v226 = *(_DWORD *)&v154[4 * (v225 ^ 0xF8)];
  HIDWORD(v67) = ~v226;
  LODWORD(v67) = v226 ^ 0xA1495300;
  int v227 = (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v139) ^ 0xC3)] - 1663231611) ^ (v67 >> 5);
  int v228 = (v227 - 1374052700 - ((2 * v227) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0x4D));
  int v229 = *(_DWORD *)&v154[4
                        * ((*(unsigned char *)(v156 + 4 * a1) ^ v292 ^ (v223
                                                                                               - 92
                                                                                               - ((2 * v223) & 0x48))) ^ 0x41)];
  HIDWORD(v67) = ~v229;
  LODWORD(v67) = v229 ^ 0xA1495300;
  int v230 = ((v67 >> 5) - 1374052700 - ((2 * (v67 >> 5)) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v85) ^ 0x6E));
  int v231 = *(_DWORD *)&v154[4 * (v73 ^ 0xB9)];
  unsigned int v232 = (v228 + 2005235921 - ((2 * v228) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v85) ^ 0xB8u));
  HIDWORD(v67) = ~v231;
  LODWORD(v67) = v231 ^ 0xA1495300;
  LODWORD(a1) = *(_DWORD *)(v156 + 4 * (HIBYTE(v225) ^ 0x98));
  int v233 = ((v67 >> 5) - 1374052700 - ((2 * (v67 >> 5)) & 0x5C333D48)) ^ *(_DWORD *)(v156
                                                                                 + 4
                                                                                 * ((v139 >> 24) ^ 0xD7));
  int v234 = v230 ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v225) ^ 0xE)] - 1663231611);
  LODWORD(v139) = *(_DWORD *)(v159 + 4 * (BYTE1(v139) ^ 0xD4u)) ^ (134253175
                                                                   * *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0x92)]
                                                                   - 1663231611);
  int v235 = *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0x48)];
  LODWORD(v85) = *(_DWORD *)&v154[4 * (v85 ^ 0xC7)];
  HIDWORD(v67) = ~v85;
  LODWORD(v67) = v85 ^ 0xA1495300;
  unsigned int v236 = *(_DWORD *)(v159 + 4 * (BYTE1(v225) ^ 0x51u)) ^ v289 ^ (134253175 * v235 - 1663231611) ^ (v233 + 2005235921 - ((2 * v233) & 0xEF0AF1A2));
  unsigned int v237 = (v234 + 2005235921 - ((2 * v234) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0xC5u));
  LODWORD(a1) = ((v139 ^ (v67 >> 5) ^ a1 ^ 0xD99CE675)
               - 1684845516
               - 2
               * ((v139 ^ (v67 >> 5) ^ a1 ^ 0xD99CE675) & 0x1B934C36 ^ (v139 ^ (v67 >> 5) ^ a1) & 2)) ^ v290;
  LODWORD(v73) = (v232 + 1372452397 - ((2 * v232) & 0xA39BEC5A)) ^ v291;
  LODWORD(v85) = (v237 - ((2 * v237) & 0x63315B9E) - 1315394097) ^ HIDWORD(v290);
  int v238 = *(_DWORD *)&v154[4 * (((v237 - ((2 * v237) & 0x9E) - 49) ^ BYTE4(v290)) ^ 0x76)];
  HIDWORD(v67) = ~v238;
  LODWORD(v67) = v238 ^ 0xA1495300;
  LODWORD(v139) = (v67 >> 5) ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0x1C)] - 1663231611);
  int v239 = *(_DWORD *)&v154[4 * (v73 ^ 0xA5)];
  HIDWORD(v67) = ~v239;
  LODWORD(v67) = v239 ^ 0xA1495300;
  int v240 = v67 >> 5;
  int v241 = *(_DWORD *)&v154[4 * (a1 ^ 0xDB)];
  HIDWORD(v67) = ~v241;
  LODWORD(v67) = v241 ^ 0xA1495300;
  int v242 = v67 >> 5;
  int v243 = *(_DWORD *)&v154[4 * (v236 ^ 0x3B)];
  HIDWORD(v67) = ~v243;
  LODWORD(v67) = v243 ^ 0xA1495300;
  int v244 = (v67 >> 5) ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(a1) ^ 0xA6)] - 1663231611);
  LODWORD(v139) = *(_DWORD *)(v159 + 4 * (BYTE1(v236) ^ 0x24u)) ^ (v139
                                                                   + 2005235921
                                                                   - ((2 * v139) & 0xEF0AF1A2));
  int v245 = (v240 - 1374052700 - ((2 * v240) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v236) ^ 0x3B)) ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0x19)] - 1663231611);
  int v246 = (v244 - 1374052700 - ((2 * v244) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v85) ^ 0xF1));
  LODWORD(v139) = (v139 - 1374052700 - ((2 * v139) & 0x5C333D48)) ^ *(_DWORD *)(v156
                                                                                              + 4
                                                                                              * ((a1 >> 24) ^ 0x2A));
  LODWORD(v85) = *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0xC0)) ^ HIDWORD(v289) ^ *(_DWORD *)(v159
                                                                                           + 4 * (BYTE1(v85) ^ 0xA9u)) ^ v242 ^ (134253175 * *(_DWORD *)&v157[4 * (BYTE2(v236) ^ 0x6E)] - 1663231611);
  unsigned int v247 = (v139 - ((2 * v139) & 0xA5F4113E) - 755365729) ^ HIDWORD(v287);
  LODWORD(v73) = *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0xD5u)) ^ v288 ^ (v246 + 2005235921 - ((2 * v246) & 0xEF0AF1A2));
  unsigned int v248 = *(_DWORD *)(v159 + 4 * (BYTE1(a1) ^ 9u)) ^ HIDWORD(v288) ^ (v245 + 2005235921 - ((2 * v245) & 0xEF0AF1A2));
  LODWORD(v139) = *(_DWORD *)&v157[4 * (BYTE2(v85) ^ 0xD4)];
  int v249 = *(_DWORD *)&v157[4 * (BYTE2(v73) ^ 0x56)];
  LODWORD(a1) = *(_DWORD *)&v157[4 * (BYTE2(v248) ^ 0x1C)];
  LODWORD(v157) = *(_DWORD *)&v157[4 * (BYTE2(v247) ^ 0xA6)];
  int v250 = (134253175 * v249 + 1257682985 - ((268506350 * v249 + 968504074) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v248) ^ 0x42));
  unsigned int v251 = v250 + 2005235921 - ((2 * v250) & 0xEF0AF1A2);
  int v252 = *(_DWORD *)&v154[4 * (v247 ^ 0xC3)];
  HIDWORD(v67) = ~v252;
  LODWORD(v67) = v252 ^ 0xA1495300;
  int v253 = (134253175 * a1 + 1257682985 - ((268506350 * a1 + 968504074) & 0x5C333D48)) ^ *(_DWORD *)(v156 + 4 * (BYTE3(v85) ^ 0xC3)) ^ (v67 >> 5);
  int v254 = *(_DWORD *)&v154[4 * (v85 ^ 0x7E)];
  HIDWORD(v67) = ~v254;
  LODWORD(v67) = v254 ^ 0xA1495300;
  int v255 = v67 >> 5;
  LODWORD(a1) = *(_DWORD *)(v159 + 4 * (BYTE1(v247) ^ 0x21u));
  int v256 = *(_DWORD *)&v154[4 * (v73 ^ 0x39)];
  HIDWORD(v67) = ~v256;
  LODWORD(v67) = v256 ^ 0xA1495300;
  LODWORD(v139) = (134253175 * v139 + 1257682985 - ((268506350 * v139 + 968504074) & 0x5C333D48)) ^ (v67 >> 5) ^ *(_DWORD *)(v156 + 4 * (HIBYTE(v247) ^ 0x21));
  LODWORD(v154) = *(_DWORD *)&v154[4 * (v248 ^ 0xA5)];
  HIDWORD(v67) = ~v154;
  LODWORD(v67) = v154 ^ 0xA1495300;
  LODWORD(v139) = (v139 + 2005235921 - ((2 * v139) & 0xEF0AF1A2)) ^ *(_DWORD *)(v159
                                                                                              + 4
                                                                                              * (BYTE1(v248) ^ 0xD5u));
  LODWORD(v85) = *(_DWORD *)(v159 + 4 * (BYTE1(v85) ^ 0xBDu)) ^ (v67 >> 5) ^ (134253175 * v157
                                                                              + 342004310
                                                                              - ((268506350 * v157 + 968504074) & 0xEF0AF1A2));
  LODWORD(v154) = *(_DWORD *)(v159 + 4 * (BYTE1(v73) ^ 0x59u)) ^ v287 ^ (v253 + 2005235921 - ((2 * v253) & 0xEF0AF1A2));
  unsigned int v257 = *(_DWORD *)(v156 + 4 * (BYTE3(v73) ^ 0xE6)) ^ v285 ^ (v85 - 1374052700 - ((2 * v85) & 0x5C333D48));
  unsigned int v258 = (a1 ^ v286 ^ v251 ^ v255 ^ 0x472BD5B4 ^ -(a1 ^ v286 ^ v251 ^ v255 ^ 0x472BD5B4) ^ ((a1 ^ v286 ^ v251 ^ v255 ^ 0xF2FAEC9B) + 1244579537))
       + 1244579536;
  LODWORD(a1) = (v139 - 1808521185 - ((2 * v139) & 0x2868503E)) ^ HIDWORD(v286);
  v259 = (char *)*(&off_26DE9F480 + SHIDWORD(v278)) - 12;
  LODWORD(v157) = *(_DWORD *)&v259[4 * (BYTE2(a1) ^ 0xAF)];
  LODWORD(v156) = *(_DWORD *)&v259[4 * (BYTE2(v154) ^ 0xE3)];
  uint64_t v260 = (uint64_t)*(&off_26DE9F480 + (int)(v309 - 2153));
  LODWORD(v159) = *(_DWORD *)&v259[4 * (BYTE2(v257) ^ 0x44)];
  int v261 = *(_DWORD *)(v260 + 4 * (a1 ^ 0x5Au));
  LODWORD(v259) = (v261 + 184677208 - 2 * ((v261 + 555590104) & 0x29E45182 ^ v261 & 2)) ^ *(_DWORD *)&v259[4 * (BYTE2(v258) ^ 0x44)];
  int v262 = *(_DWORD *)(v260 + 4 * (v257 ^ 0x95u));
  v263 = (char *)*(&off_26DE9F480 + (int)(v309 - 2487)) - 4;
  LODWORD(v259) = (v259 - 147008254 - ((2 * v259) & 0xEE79AA04)) ^ *(_DWORD *)&v263[4 * ((v154 ^ 0xA1A71F55) >> 24)];
  int v264 = *(_DWORD *)(v260 + 4 * (v258 ^ 0x22u));
  int v265 = *(_DWORD *)(v260 + 4 * (v154 ^ 0x55u));
  int v266 = *(_DWORD *)&v263[4 * (HIBYTE(v257) ^ 0x8F)];
  int v267 = *(_DWORD *)&v263[4 * ((a1 >> 24) ^ 9)];
  LODWORD(v260) = *(_DWORD *)&v263[4 * (HIBYTE(v258) ^ 0xDD)];
  v268 = (char *)*(&off_26DE9F480 + (int)(v309 - 2250)) - 4;
  LODWORD(v263) = *(_DWORD *)&v268[4 * (BYTE1(v258) ^ 0x7F)];
  LODWORD(v141) = *(_DWORD *)&v268[4 * (BYTE1(v154) ^ 0x60)];
  int v269 = *(_DWORD *)&v268[4 * (BYTE1(a1) ^ 0xDD)];
  LODWORD(v154) = *(_DWORD *)&v268[4 * (BYTE1(v257) ^ 0x10)] ^ HIDWORD(v285) ^ (v259
                                                                              - 1846256025
                                                                              - ((2 * v259) & 0x23E8BCCE));
  v270 = (char *)*(&off_26DE9F480 + (int)(v309 - 2139)) - 8;
  a63[1] = v270[BYTE2(v154) ^ 0xD4] ^ 8;
  v271 = (char *)*(&off_26DE9F480 + SHIDWORD(v277)) - 12;
  a63[2] = (-91 - 55 * v271[BYTE1(v154) ^ 0xF8]) ^ 0xDE;
  HIDWORD(v67) = v157 ^ 0xD2364F5A;
  LODWORD(v67) = v157 ^ 0xD2364F5A;
  LODWORD(v259) = (v67 >> 13) ^ __ROR4__(v266 ^ 0x1C501898, 13);
  int v272 = (v262 + 184677208 - ((2 * v262 + 1111180208) & 0x53C8A300)) ^ v156;
  LODWORD(v263) = (v272 - 1846256025 - ((2 * v272) & 0x23E8BCCE)) ^ v263;
  LODWORD(v67) = __ROR4__(v259 ^ 0x800D72AA, 19);
  LODWORD(v259) = v141 ^ HIDWORD(a22) ^ (((v264 - 518151720) ^ v67)
                                                     - 1846256025
                                                     - ((2 * ((v264 - 518151720) ^ v67)) & 0x23E8BCCE));
  LODWORD(v263) = v278 ^ v267 ^ (v263 - 147008254 - ((2 * v263) & 0xEE79AA04));
  a63[9] = v270[BYTE2(v259) ^ 0x19] ^ 0x3B;
  uint64_t v273 = (uint64_t)*(&off_26DE9F480 + (int)v277);
  a63[15] = *(unsigned char *)(v273 + (v263 ^ 0x3FLL)) ^ 0x26;
  a63[3] = *(unsigned char *)(v273 + (v154 ^ 0x2CLL)) ^ 0xD2;
  v274 = (char *)*(&off_26DE9F480 + SHIDWORD(a12)) - 4;
  a63[8] = (v274[(v259 >> 24) ^ 0x1DLL] - 100) ^ 0x5F;
  LODWORD(v141) = (v265 + 184677208 - 2 * ((v265 + 555590104) & 0x29E45182 ^ v265 & 2)) ^ v159;
  LODWORD(v260) = (v141 - 147008254 - ((2 * v141) & 0xEE79AA04)) ^ v260;
  uint64_t v275 = v269 ^ HIDWORD(v285) ^ v286 ^ (v260 - 1846256025 - ((2 * v260) & 0x23E8BCCE));
  *a63 = (v274[(v154 >> 24) ^ 0x67] - 100) ^ 0xAC;
  a63[7] = *(unsigned char *)(v273 + ((v269 ^ BYTE4(v285) ^ v286 ^ (v260 + 103 - ((2 * v260) & 0xCE))) ^ 0x3DLL)) ^ 0xAB;
  a63[10] = (-91 - 55 * v271[BYTE1(v259) ^ 0x93]) ^ 0x87;
  a63[14] = (-91 - 55 * v271[BYTE1(v263) ^ 0x22]) ^ 0x47;
  a63[5] = v270[BYTE2(v275) ^ 0xF1] ^ 0xB2;
  a63[6] = (-91
          - 55
          * v271[((unsigned __int16)(v269 ^ WORD2(v285) ^ v286 ^ (v260 + 24167 - ((2 * v260) & 0xBCCE))) >> 8) ^ 0xA1]) ^ 0x6C;
  a63[v307] = v270[BYTE2(v263) ^ 0xEFLL] ^ 0xA;
  a63[4] = (v274[BYTE3(v275) ^ 0xF1] - 100) ^ 0xE5;
  a63[12] = (v274[(v263 >> 24) ^ 0x97] ^ 1) - 100;
  a63[11] = *(unsigned char *)(v273 + (v259 ^ 0xBELL)) ^ 0x8B;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a45 + 8 * (int)((58 * (HIDWORD(v281) > 0x10)) ^ (v309 - 1012))))(702828930, v275, v273, v270, v309, 2448711271, 4000950788, 4147959042, a9, a10, a11, a12, v277, v278, v279, v280, v281, v142, v282,
           v140,
           v283,
           a22,
           v284,
           v285,
           v286,
           v287,
           v288,
           v289,
           v290,
           v291,
           v292,
           v293,
           v294,
           v295,
           v296,
           v297,
           v298,
           v299,
           v300,
           v301,
           v302,
           v303,
           v304,
           a45,
           9,
           10,
           1,
           2,
           5,
           14,
           7,
           3);
}

uint64_t sub_22B324194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a8 - 1163) | 0x100) ^ 0x5D3) * (v8 == a6)) ^ a8)))();
}

uint64_t sub_22B3241C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((a10 ^ 0x38D ^ a10 ^ 0x2B3 ^ 0x114) * (a1 == v10)) ^ a10)))();
}

uint64_t sub_22B324200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, int a19, uint64_t a20,unsigned int a21,uint64_t a22)
{
  unsigned int v27 = ((2 * (&a15 & 0x311FD480) - &a15 + 1323314043) ^ 0xA4F71C8F) * v22;
  a21 = ((a10 & 0xBBFBFEFE) - 1495010355 + (((v25 ^ 0xEF2) + 1576924660) ^ a13)) ^ v27;
  a20 = v24 + 36;
  a17 = ((2 * (&a15 & 0x80) - &a15 + 123) ^ 0x8F) * v22 + 116;
  a22 = v24;
  a19 = v27 + v25 + 399;
  a15 = v26;
  a16 = a11;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v23 + 8 * (v25 + 2259)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((3132 * (a18 == -604050357)) ^ v25)))(v28);
}

uint64_t sub_22B3242E4()
{
  uint64_t v11 = v6;
  uint64_t v12 = v0;
  v9[1] = v4 + v1 + 1866394843 * ((v9 & 0x47ADE70 | ~(v9 | 0x47ADE70)) ^ 0x1192167B) + 2436;
  uint64_t v10 = 0x58E95394ECD70C04;
  (*(void (**)(_DWORD *))(v3 + 8 * (v4 + v1 + 2742)))(v9);
  LODWORD(v11) = v4 - 1734664879 * (v9 ^ 0x2FDB281A) + v1 + 1687;
  uint64_t v10 = v6;
  (*(void (**)(_DWORD *))(v3 + 8 * (v4 + v1 + 2546)))(v9);
  uint64_t v10 = v6;
  v9[0] = (v4 + v1 + 1058) ^ (225134719
                            * ((v9 & 0x77BD3227 | ~(v9 | 0x77BD3227)) ^ 0x9EB288F2));
  (*(void (**)(_DWORD *))(v3 + 8 * (v1 ^ 0x5B604C94)))(v9);
  v9[0] = ((v1 ^ 0x5B604A64) + 162) ^ (225134719
                                     * ((((2 * v9) | 0x303A7E3E) - v9 - 404569887) ^ 0xEED7A35));
  uint64_t v10 = v8;
  (*(void (**)(_DWORD *))(v3 + 8 * (v1 ^ 0x5B604C94)))(v9);
  return v7 ^ v2;
}

uint64_t sub_22B32435C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v12 = v8 + v7 + v6 - v10 + ((a3 + 1212) ^ v4);
  *(void *)(v3 - 7 + v12) = *(void *)(a2 - 7 + v12);
  return (*(uint64_t (**)(void))(v11 + 8 * ((449 * (v10 - (v5 & 0xFFFFFFF8) == -8)) ^ a3)))(v9 - (v5 & 0xFFFFFFF8));
}

uint64_t sub_22B3243B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v26 = 983 * (v22 ^ 0xB84);
  __int16 v27 = ((v26 + *(_WORD *)(v25 - 136) + 14420) ^ 0xEFBB)
      + 31231
      + ((2 * (v26 + *(_WORD *)(v25 - 136) + 14420)) & 0xDF76);
  memset(&STACK[0x22C], 42, 64);
  memset((void *)(a14 - 0x1C88CB57747EAEC5), 42, 64);
  int v28 = a6
      + (unsigned __int16)(v27 + ((v26 - 258) ^ 0x9CC5))
      - (((unsigned __int16)(v27 + ((v26 - 258) ^ 0x9CC5)) << (v26 ^ 0x84)) & 0x1437E)
      + 1173;
  BOOL v29 = (a8 & (2 * v28) ^ v23) + (v28 ^ 0x43B9C55) + a7 != a5;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((30 * v29) ^ v26)))((32 * v29), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_22B324544(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  unsigned int v10 = a4 - 32;
  uint64_t v11 = v7 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 == 32) * a7) ^ (v8 + a2 + 1915))))();
}

uint64_t sub_22B324550@<X0>(int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v10 = v4 + 1;
  *(unsigned char *)(v8 + (v10 + a1)) = *(unsigned char *)(a2 + a3 + v6);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 + (a4 ^ (a1 + 56)) < 0x40) * v7) ^ v5)))();
}

uint64_t sub_22B324558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50)
{
  unsigned int v55 = v50 & 0x9BBE87BB;
  v53[393] = a23;
  *(_DWORD *)(v54 - 128) = (v55 - 101) ^ (225134719
                                        * ((((v54 - 152) ^ 0xB1D83818) & 0x69FAE35A | ~((v54 - 152) ^ 0xB1D83818 | 0x69FAE35A)) ^ 0x312D6197));
  v53[395] = v52 - 0x134B8B08CCC6315CLL;
  v53[394] = v51 + (a50 - 230568399);
  v53[397] = v52;
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(a6 + 8 * (int)(v55 ^ 0x157F)))(v54 - 152);
  return (*(uint64_t (**)(uint64_t))(a45
                                            + 8
                                            * (int)(((*(_DWORD *)(v54 - 112) == -604050357) * ((v55 ^ 0x22D) + 1916)) ^ v55)))(v56);
}

uint64_t sub_22B324640(uint64_t a1, uint64_t a2)
{
  *(void *)(v5 + (v3 ^ a1) + a2) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 != a2) * v6) ^ v2)))();
}

uint64_t sub_22B32466C()
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) * v3) ^ v0)))();
}

uint64_t sub_22B324690()
{
  int v3 = *(_DWORD *)(v1 - 0x24B64731C5A67D97);
  LODWORD(STACK[0x268]) = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v3 != (((v0 - 1768) | 5) ^ 0x3BB832F2)) * (((v0 - 1296) | 0x453) - 3038)) ^ v0)))();
}

uint64_t sub_22B3246EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  int v12 = 8 * (a1 ^ 0x29F);
  unsigned int v13 = 1503746353 * (((~&a9 | 0xCB1195D4) + (&a9 | 0x34EE6A2B)) ^ 0x128FA89C);
  a9 = a1 - v13 + 1111;
  a10 = v13 + 86;
  uint64_t v14 = (*(uint64_t (**)(int *))(v10 + 8 * (a1 + 3380)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (int)(((**(_DWORD **)(v11 + 8 * (v12 ^ 0x7B2)) == 0)
                                                   * (((v12 + 1701722525) & 0x9A91CCBB ^ 0xB83) + v12 - 18)) ^ v12)))(v14);
}

uint64_t sub_22B32475C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  int v10 = *(unsigned __int8 *)(a2 + v3 + v7 + 3) ^ v6;
  int v11 = ((*(unsigned __int8 *)(a2 + v3 + v7) ^ v6) << 24) | ((*(unsigned __int8 *)(v3
                                                                                 + v7
                                                                                 + a2
                                                                                 + ((v4 - 2073) | 0x10u)
                                                                                 - 148) ^ v6) << 16) | ((*(unsigned __int8 *)(a2 + v3 + v7 + 2) ^ v6) << 8) | v10;
  *(_DWORD *)(a3 + ((v3 + v7) & 0xFFFFFFFFFFFFFFFCLL)) = v11 + v5 - 2 * (v11 & 0x5BFEEC4F ^ v10 & 4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8
                                                          * ((321 * ((unint64_t)(v3 + 4 + v7) < 0x40)) ^ v4)))(a1, v9 + 16);
}

void sub_22B3247F8(uint64_t a1)
{
  int v1 = 731811679 * (((a1 | 0x285D75D9) - a1 + (a1 & 0xD7A28A26)) ^ 0x61ABD39D);
  __asm { BRAA            X9, X17 }
}

void sub_22B3248C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4)
     - 1866394843 * (((a1 ^ 0x27A67F50) & 0x15387F8A | ~(a1 ^ 0x27A67F50 | 0x15387F8A)) ^ 0x2776C8D1);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B3249B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((197 * (v1 ^ 0xE0C)) ^ (v0 == 55)) & 1) == 0) | (32
                                                                                   * ((((197 * (v1 ^ 0xE0C)) ^ (v0 == 55)) & 1) == 0)) | v1)))();
}

uint64_t sub_22B3249FC(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((3 * (a1 ^ 0x6BE) - 1700120594) & 0x6555CFF7) + 1852) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_22B324A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(_OWORD *)(v4 + (v6 + a1)) = *(_OWORD *)(a2 + a1);
  BOOL v9 = v7 == a1;
  uint64_t v10 = a1 + 16;
  char v11 = v9;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((((v3 ^ v11) & 1) * a3) | v5)))(v10);
}

uint64_t sub_22B324A78@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((3945
                                * (((*(unsigned __int8 *)(v5 + 2) - 72) ^ v4)
                                 + v2
                                 + (v3 & (2 * (*(unsigned __int8 *)(v5 + 2) - 72))) == a2
                                                                                     + ((a1 + 565330566) & 0xDE4DBDF1)
                                                                                     - 1361)) ^ a1)))();
}

uint64_t sub_22B324AD0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((109 * (v1 - 1047474306 >= ((a1 + 621338205) & 0xDAF72FFB) - 3714)) ^ (a1 + 332))))();
}

uint64_t sub_22B324B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  int v27 = HIDWORD(a13) - ((((a7 + 322) ^ 0x5DEEA67E) + 2 * HIDWORD(a13)) & 0x773CABE0) - 1433032766;
  BOOL v29 = ((((2 * (_BYTE)v27) & 0xBA ^ (a26 + 26)) + (v27 ^ 0xAD) + 3) & 0xF) != 0
     || ((2 * v27) & 0xDCBFF6BA ^ (a26 + 1413258010)) + (v27 ^ 0xD5C1AEAD) == 1851784029;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((41 * ((((3 * ((a7 + 592425826) & 0xDCB04F35 ^ 0x5B2)) ^ v29) & 1) == 0)) ^ ((int)a7 + 322))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_22B324BF8(int a1@<W8>)
{
  *(_DWORD *)(v1 + 24) = a1;
}

uint64_t sub_22B324C38()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((((3 * (v0 ^ 0x425) - 2506) & v2) == 0) * ((1257 * (v0 ^ 0x761)) ^ 0x376)) ^ v0)))();
}

uint64_t sub_22B324C80(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v8 = a2 + a6 - 1649791627;
  unsigned int v9 = v6 - 501610125;
  int v10 = (v9 < 0x5E7A06E5) ^ (v8 < 0x5E7A06E5);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0x5E7A06E5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((49 * !v11) ^ (a3 + 569))))();
}

uint64_t sub_22B324CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a31 == 2) {
    return (*(uint64_t (**)(uint64_t))(v37
  }
                                              + 8
                                              * (int)(((LODWORD(STACK[0x2AC]) == 326024231)
                                                     * (((v38 + 1663336408) & 0x9CDB82B2) - 686)) ^ (v38 + 651))))(a15);
  if (a31 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37
  }
                                                       + 8
                                                       * ((1136 * (LODWORD(STACK[0x2AC]) != (v38 ^ 0x291) + 326023537)) ^ (v38 + 655))))(a1, a15);
  uint64_t v40 = (v38 + 584);
  unint64_t v41 = ((v40 - 0x5124144204248E86) ^ (unint64_t)&a37)
      + ((2 * (void)&a37) & 0x5DB7D77BF7B6E7D0)
      + 0x536CFE7FFFFF0017;
  LOBYTE(STACK[0x2AB]) = (v41 ^ 0xBA) * (v41 + 17);
  return (*(uint64_t (**)(void))(v37 + 8 * (int)v40))();
}

uint64_t sub_22B324E60(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((896 * (((v4 + a4 - (v5 & 3) + 370) & 0xFFFFFFFC) > a4 + (a1 ^ 0x310 ^ v4))) ^ a1)))();
}

uint64_t sub_22B324EB0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v1 + 998) ^ 0x69D) * (v2 != 1030434871)) ^ v1)))();
}

uint64_t sub_22B324EF4@<X0>(int a1@<W8>)
{
  int v7 = v4 - 270;
  *(_DWORD *)(*(void *)(v6 - 0x281D12643933BF1BLL) + 4 * (a1 + v7 + v3 - 1501094649) - 0x54EEBA8C0E75CADCLL) = *(_DWORD *)(*(void *)(v6 - 0x281D12643933BF1BLL) + 4 * (v3 + v2) - 0x54EEBA8C0E75CADCLL);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1292 * (v3 - 1 + v2 < (v7 + 866 + v1))) ^ v7)))(2793872647);
}

uint64_t sub_22B324F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v9 + 8
                                   * (((a4 - a7 + v8 < (unint64_t)(v7 ^ 0x2B3u) - 1914) * (v7 - 1242)) ^ v7)))();
}

uint64_t sub_22B324FB4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v1 + 2691) ^ (504 * (a1 - v2 != -1257992672)))))();
}

void sub_22B325030(_DWORD *a1@<X8>)
{
  if (v1 == v5 + 35 * (v3 ^ 0x151) - 3885) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v6;
  }
  *(void *)(v2 - 0x58E95394ECD70C04) = v7;
  *int v4 = *a1;
}

void sub_22B3250A0(_DWORD *a1)
{
  unsigned int v1 = *a1
     + 1292559617 * ((-1339336946 - (a1 | 0xB02B570E) + (a1 | 0x4FD4A8F1)) ^ 0xE887C098);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B32517C()
{
  int v8 = 1328090399 * (((~(v7 - 168) & 0x30F5DFD4) - (~(v7 - 168) | 0x30F5DFD5)) ^ 0xCF26BBEF);
  *(void *)(v7 - 160) = v12;
  *(_DWORD *)(v7 - 168) = v8 ^ (v10 - ((2 * v10) & 0xDB9B4904) + 1842193538);
  *(void *)(v7 - 120) = v5;
  *(void *)(v7 - 112) = v11;
  *(_DWORD *)(v7 - 152) = v8 + v1 + 539918870 + 2316;
  *(void *)(v7 - 144) = v3;
  *(void *)(v7 - 128) = v0;
  *(void *)(v7 - 104) = v2;
  (*(void (**)(uint64_t))(v6 + 8 * (v1 + 539921377)))(v7 - 168);
  return *(_DWORD *)(v7 - 136) ^ v4;
}

uint64_t sub_22B325234(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  *a33 = a45 + 1;
  uint64_t v48 = *a1;
  *(void *)(v47 - 104) = a19;
  *(_DWORD *)(v47 - 144) = ((v45 + 1820622220) ^ 0x1B) - a20;
  *(_DWORD *)(v47 - 140) = 84358355 - a20 + v45;
  *(_DWORD *)(v47 - 112) = -(int)a20;
  *(_DWORD *)(v47 - 128) = a20 ^ (v45 + 1820622220) ^ 0xF8;
  *(_DWORD *)(v47 - 136) = v45 + 1820622220 - a20;
  *(void *)(v47 - 120) = v48 + a20;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 1618122436)))(v47 - 144);
  return (*(uint64_t (**)(uint64_t))(v46 + 8 * *(int *)(v47 - 132)))(v49);
}

uint64_t sub_22B325244()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v0 != 1345165156) ^ (v1 + 3554))))(755338528);
}

void sub_22B325288()
{
}

uint64_t sub_22B325290(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (((((a20 - 1252) | 0x980) ^ 0x861) * ((a2 + a1 - 2139094399) > 7)) ^ a20)))();
}

uint64_t sub_22B3252FC(uint64_t a1, char a2, int a3)
{
  unsigned int v13 = v5 - 1;
  uint64_t v14 = v6 & v13;
  *(unsigned char *)(v3 + v13) = *(unsigned char *)(a1 + v13) ^ *(unsigned char *)(*(void *)(v11 + 8 * v8) + v14 - 12) ^ *(unsigned char *)(*(void *)(v11 + 8 * v7) + v14 - 4) ^ (v14 * v10) ^ *(unsigned char *)(*(void *)(v11 + 8 * v9) + v14 - 2) ^ a2;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v13 != 0) * a3) ^ v4)))();
}

void sub_22B325304(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    BOOL v2 = *(void *)(a1 + 8) == 0x7E9805B87EA7C92ELL;
  }
  else {
    BOOL v2 = 1;
  }
  char v4 = v2 || *(void *)(a1 + 24) == 0x717BE438C5D0856CLL;
  int v1 = *(_DWORD *)a1
     + 1990461019 * (((a1 ^ 0x2802D01F | 0xC43B402) - (a1 ^ 0x2802D01F) + ((a1 ^ 0x2802D01F) & 0xF3BC4BFD)) ^ 0xBA5C694);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B325404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (int)((44 * ((((a35 & 0x9E) - 97) ^ (v41 - 1 == (((a35 & 0x88C1779E) + 445199514) | 0x85044005) + 1741848313)) & 1)) ^ a35 & 0x88C1779E)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_22B32542C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((237
                                              * (((a4 == ((v4 - 184) ^ 0xC8)) | (2 * (a4 == ((v4 - 184) ^ 0xC8)))) != 0)) ^ (a2 + a3 + 1165))))(a1);
}

uint64_t sub_22B32547C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((31 * (v0 != 0)) ^ 0x867u)))();
}

void Mib5yocT()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 - dword_268401438) ^ 0x4D)) ^ byte_22B47E780[byte_22B473800[(-121 * ((qword_2683EB0F0 - dword_268401438) ^ 0x4D))] ^ 0x9B])
                - 143);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9FD38
                                                  + (*((unsigned __int8 *)off_26DE9F7D0
                                                     + (-121 * ((qword_2683EB0F0 + v1) ^ 0x4D))
                                                     - 4) ^ 0x4Fu)
                                                  - 12) ^ (-121 * ((qword_2683EB0F0 + v1) ^ 0x4D)))
                + 31);
  unint64_t v3 = (*(void *)(v2 - 4) - v1) ^ (unint64_t)&v5;
  *(void *)(v0 - 4) = 2059148423 * (v3 - 0xD2361EE8B96764DLL);
  *(void *)(v2 - 4) = 2059148423 * (v3 ^ 0xD2361EE8B96764DLL);
  v6[0] = (1292559617 * ((v6 & 0x1403FAE3 | ~(v6 | 0x1403FAE3)) ^ 0x4CAF6D75)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x4D);
  int v4 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_268401438) ^ 0x4D)) ^ byte_22B48A580[byte_22B47E680[(-121 * ((qword_2683EB0F0 + dword_268401438) ^ 0x4D))] ^ 0x27])
               + 147)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_26DE9FDA0
                                                          + (*((unsigned __int8 *)off_26DEA02C0 + v2
                                                                                                - 8) ^ 0xE6u)
                                                          - 8) ^ v2)
                                      + 31912])(v6);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B3256E8(char a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7)
{
  *(void *)(v13 - 256) = v12 - 7;
  *(void *)(v13 - 248) = v7 - 7;
  char v14 = a1 + a3 + a2 - a6;
  unsigned int v15 = a3 + a2 + a4 - a6;
  v17.val[0].i64[0] = v15 & 0xF;
  v17.val[0].i64[1] = (v14 + 75) & 0xF;
  v17.val[1].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a7 + a1 - (_BYTE)a6) & 0xF;
  v17.val[1].i64[1] = (v14 + 73) & 0xF;
  v17.val[2].i64[0] = (v14 + 72) & 0xF;
  v17.val[2].i64[1] = (v14 + 71) & 0xF;
  v17.val[3].i64[0] = (v14 + 70) & 0xF;
  v17.val[3].i64[1] = (v14 + 69) & 0xF;
  *(int8x8_t *)(*(void *)(v13 - 256) + v15) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v9 + v17.val[0].i64[0] - 7), *(int8x8_t *)(*(void *)(v13 - 248) + v15)), veor_s8(*(int8x8_t *)(v17.val[0].i64[0] + v8 - 5), *(int8x8_t *)(v10 + v17.val[0].i64[0] - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v17, (int8x16_t)xmmword_22B497560), (int8x8_t)0x2D2D2D2D2D2D2D2DLL)));
  return (*(uint64_t (**)(__n128))(*(void *)(v13 - 240)
                                           + 8 * ((3374 * (a6 - (v11 & 0xFFFFFFF8) == -8)) ^ (a7 - 2507))))((__n128)xmmword_22B497560);
}

uint64_t sub_22B325830(__n128 a1, __n128 a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128))(v18
                                                                   + 8
                                                                   * ((21
                                                                     * (a16
                                                                      + 79 * (v16 ^ 0x4E9)
                                                                      - 2939
                                                                      + ((((79 * (v16 ^ 0x4E9) - 2915) | 0x13) + 57) ^ 0xDDB15CF8) < 0x7FFFFFEF)) ^ (79 * (v16 ^ 0x4E9)))))(a1, a2, a3, *v17);
}

uint64_t sub_22B325858(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15)
{
  *a4 = 0;
  *a5 = 0;
  a14 = (1292559617 * ((-802674762 - (&a14 | 0xD02827B6) + (&a14 | 0x2FD7D849)) ^ 0x8884B020)) ^ 0x9B42BBAD;
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 32176))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((2752 * (a15 == v15)) ^ 0x3F3)))(v17);
}

uint64_t sub_22B325918()
{
  *(unsigned char *)(v7 + v1 + v5 + 24) = *(unsigned char *)(v3 + v1 + v5) ^ v6;
  BOOL v9 = ((v0 - 62) ^ v8) + v1 == v2 + 64;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2 * v9) | (4 * v9) | v0)))();
}

uint64_t sub_22B32595C(int a1, unsigned int a2, void *a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  unsigned int v16 = *(_DWORD *)(*a3 + 4 * (v15 + v11) + a6) ^ v9;
  *(_DWORD *)(*a3 + 4 * (v10 + v8) + a6) = ((v16 >> v12) | a7 ^ a8 ^ (a5 | 0xF0))
                                           + v9
                                           - ((a1 + 2) & (2 * ((v16 >> v12) | a7 ^ a8 ^ (a5 | 0xF0))));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v15 - 1 + v11 >= 0) * v14) ^ a2)))();
}

uint64_t sub_22B325964@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v12 = v9 > 0xF28E3CB7;
  *(unsigned char *)(a3 + (a2 - 1810840426)) = *(unsigned char *)(v4 + ((a2 - 1810840426) & 0xFLL)) ^ *(unsigned char *)(v3 + (a2 - 1810840426)) ^ *(unsigned char *)(v6 + (((_BYTE)a2 - 106) & 0xF)) ^ *(unsigned char *)((((_BYTE)a2 - 106) & 0xF) + v7 + 2) ^ (-47 * ((a2 - 106) & 0xF));
  unsigned int v13 = ((v5 - 1591870590) & 0x5EE20F7F ^ 0xA1828AFC) + a2;
  uint64_t v14 = (a2 + 1);
  int v15 = v12 ^ (v13 < v8);
  BOOL v16 = v13 < v10;
  if (!v15) {
    BOOL v12 = v16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((114 * !v12) ^ v5)))(a1, v14);
}

uint64_t sub_22B325A18(uint64_t result)
{
  *(_DWORD *)(result + 4) = 604091428;
  return result;
}

uint64_t sub_22B325A28@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W5>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(unsigned __int8 *)(v4 + a4 + a1) == ((a2 + 50) ^ (a2 - 4))) * a3) ^ a2)))();
}

uint64_t sub_22B325A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = a18 + v19;
  if (a18 + v19 < 0) {
    int v21 = -v21;
  }
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((((int)((v21 ^ 0xBFDFF9FF) + (((v20 ^ 0xBD1) + 2143282511) & (2 * v21)) + 1075840512) >= 0)
                                * ((v20 ^ 0xBD1) - 3491)) ^ v20 ^ 0xBD1)))();
}

uint64_t sub_22B325AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,unsigned int a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  if (a23 < 0xF4D281F != (a28 - 1853007927) < 0xDE19845D) {
    BOOL v30 = (a28 - 1853007927) < 0xDE19845D;
  }
  else {
    BOOL v30 = a28 - 1853007927 > a22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((2 * !v30) | (32 * !v30) | (v28 + 1172))))(a1, a2, a3, a4, a5, a6, a23, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_22B325B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = a1 + 1;
  *uint64_t v2 = ((v3 + v8) ^ v5) * (v4 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 91) * v6) ^ v1)))();
}

uint64_t sub_22B325B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(a27 + v28 - 0x2970AB8255B0AF54) = v31;
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (((a7 & ~(((v27 - 1856) | 0x71A) ^ (((((v27 - 1856) | 0x71A) ^ 0x702) & v29) == 8)))
                                * a8) ^ ((v27 - 1856) | 0x71A))))();
}

uint64_t sub_22B325BFC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((11 * (v0 ^ 0x89D)) ^ (27 * (v1 <= 11 * (v0 ^ 0x89Du) - 714)))))();
}

void sub_22B325D00(_DWORD *a1@<X8>)
{
  *a1 = v1;
  JUMPOUT(0x22B325060);
}

uint64_t sub_22B325D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1984 * (a1 + 1 != v7 + 64)) ^ a6)))();
}

uint64_t sub_22B325DD0()
{
  *(unsigned char *)(v3 + v1 - 664006803 + 24) = *(unsigned char *)(v5 + v1 - 664006803);
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((52 * (v1 + 1 == ((8 * v0) ^ 0x3228u ^ (unint64_t)(v4 + 3048)))) ^ v0)))();
}

uint64_t sub_22B325E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v14
                         + ((((2 * (v16 - 136)) | 0xAF4B1AE4) - (v16 - 136) + 677016206) ^ 0x3DB2BA86) * v13
                         + 2134;
  *(void *)(v16 - 112) = v15;
  *(void *)(v16 - 128) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v14 + 3457)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((*(_DWORD *)(v16 - 136) > (((v14 + 1105) | 5) ^ 0x64079FD4u))
                                              * (v14 - 415)) ^ v14)))(v17);
}

uint64_t sub_22B325EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v56 = (*(uint64_t (**)(void))(v54 + 8 * (v53 ^ 0xD8A)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54
                                                              + 8
                                                              * (((((v53 + 171) ^ 0xA80) + 633) * (v55 == v52)) ^ v53)))(v56, a52, a51);
}

uint64_t sub_22B325F08@<X0>(int a1@<W8>)
{
  BOOL v5 = (*(_DWORD *)(v2 + 48) ^ a1) == 0x6B17B555 || (*(void *)v2 | *(void *)(v2 + 24)) == 0;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 + 1) ^ v5) & 1) * (((v1 - 1031) | 0x806) ^ 0xB43)) ^ v1)))();
}

uint64_t sub_22B325F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v27 = ((((2 * (v26 - 144)) | 0xF706092A) - (v26 - 144) - 2072183957) ^ 0x91943361) * v25;
  *(void *)(v26 - 136) = a23;
  *(_DWORD *)(v26 - 144) = v24 - v27 + 724;
  *(_DWORD *)(v26 - 140) = v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 3485)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v26 - 128) == ((v24 + 416388489) & 0xE72E6F6F ^ 0x9B8287A5))
                                              * (((v24 + 1828) | 0x22) ^ 0x9B8)) ^ (v24 + 2341))))(v28);
}

uint64_t sub_22B326030(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  unsigned int v25 = a14 - 16;
  uint64_t v26 = (3 * v19 - 3069) & v25;
  uint64_t v27 = v26;
  v29.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v29.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v21, a5).u64[0];
  int8x16_t v30 = vrev64q_s8(vmulq_s8(v29, a6));
  *(int8x16_t *)(a12 + v25) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v26 - 15), *(int8x16_t *)(a12 + v25)), veorq_s8(*(int8x16_t *)(v26 + v15 - 12), *(int8x16_t *)(v14 + v26 - 15))), vextq_s8(v30, v30, 8uLL));
  return (*(uint64_t (**)(void))(v20 + 8 * ((7 * (v18 != 16)) ^ v17)))();
}

uint64_t sub_22B32603C@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, char a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  BOOL v29 = v23 < a3;
  *(&a23 + (a6 + a1)) = *(unsigned char *)(v28 + (v24 + a2))
                                    + (a5 ^ 0x4D)
                                    - ((2 * *(unsigned char *)(v28 + (v24 + a2))) & 0x55);
  unsigned int v30 = v24 + 1 + a4;
  int v31 = v29 ^ (v30 < a3);
  BOOL v32 = v30 < v23;
  if (!v31) {
    BOOL v29 = v32;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * ((!v29 * v25) ^ v26)))();
}

uint64_t sub_22B3260B0@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1438293641
     * ((((v3 - 168) | 0xC3FEFAFF5937F925) - (v3 - 168) + ((v3 - 168) & 0x3C010500A6C806D8)) ^ 0xD55B127BE1F0AC5ALL);
  STACK[0x2F8] = v1 ^ v4;
  int v5 = (a1 + 1643311107) ^ v4;
  STACK[0x2E8] = 1099166027 - v4;
  *(_DWORD *)(v3 - 160) = v4 + a1 + 1643311107 + 164;
  *(_DWORD *)(v3 - 156) = v5 ^ 0x32;
  *(_DWORD *)(v3 - 168) = v4;
  *(_DWORD *)(v3 - 164) = (a1 + 602453899) ^ v4;
  *(_DWORD *)(v3 - 140) = v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 4110)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 144)))(v6);
}

uint64_t sub_22B326190(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((75
                                * (((((a3 - 45) | 8) - 1) ^ (v3 < (((((a3 - 3373) | 0x808) - 2308) | 0x641) ^ 0x6F5u))) & 1)) ^ ((a3 - 3373) | 0x808))))();
}

uint64_t sub_22B3261E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((((((v5 - 1203) | 0x890) - 1301) ^ ((v5 - 1525) | 0x763)) * (v7 == a5)) ^ v5)))();
}

uint64_t sub_22B32621C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17)
{
  int v20 = v17;
  unsigned int v21 = 1503746353 * (((&a15 | 0xEE5D8647) - (&a15 & 0xEE5D8647)) ^ 0xC83C44F1);
  a15 = v21 + v19 - 1037;
  a16 = a11;
  LODWORD(a17) = v21 + 1299996386;
  (*(void (**)(int *))(v18 + 8 * (v19 + 829)))(&a15);
  a15 = 225134719 * ((2 * (&a15 & 0x2CF823C0) - &a15 - 754459589) ^ 0xC5F79911)
      - 157118744
      + v19;
  a16 = a10;
  a17 = a11;
  uint64_t v22 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 971)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((308
                                              * (((77 * (v19 ^ 0xCA4)) ^ 0xB09EA390) + v20 < ((v19 + 1410968899) & 0xABE64EFE ^ 0xFFFFF72A))) ^ v19)))(v22);
}

uint64_t sub_22B326364()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1611)))(v1);
}

uint64_t sub_22B326390(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 ^ 0x6F6) + 808) ^ 0xE17) * (v4 != a4)) ^ v5)))();
}

uint64_t sub_22B3263C4@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, unsigned int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  BOOL v14 = a5 < a4;
  *(unsigned char *)(a3 + (v9 + v11)) = *(unsigned char *)(v13 + (a9 + a2))
                                            - ((2 * *(unsigned char *)(v13 + (a9 + a2))) & 0x55)
                                            + 42;
  unsigned int v15 = ((v10 + a7) & a8) + a1 + a9;
  int v16 = v14 ^ (v15 < a4);
  BOOL v17 = v15 < a5;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * a6) ^ v10)))();
}

uint64_t sub_22B326438@<X0>(int a1@<W0>, int a2@<W1>, char a3@<W3>, int a4@<W4>, int a5@<W6>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v27 - 120) = v26;
  *(_DWORD *)(v27 - 128) = v26 & 0xFFFFFFF8;
  int v28 = -8 - v25;
  char v29 = a3 + a2 + a1;
  uint64_t v30 = (a2 + a1 + a4 + v28 + 8);
  v32.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a4 + (_BYTE)v28 + 8) & 0xF;
  v32.val[0].i64[1] = (v29 + 3 + (_BYTE)v28 + 8) & 0xF;
  v32.val[1].i64[0] = (v29 + 2 + (_BYTE)v28 + 8) & 0xF;
  v32.val[1].i64[1] = (v24 + (_BYTE)v28 + 8 + ((a5 + 30) ^ 0xFD)) & 0xF;
  v32.val[2].i64[0] = (v24 + (_BYTE)v28 + 8) & 0xF;
  v32.val[2].i64[1] = (v29 + 15 + (_BYTE)v28 + 8) & 0xF;
  v32.val[3].i64[0] = (v29 + 14 + (_BYTE)v28 + 8) & 0xF;
  v32.val[3].i64[1] = (v29 + 13 + (_BYTE)v28 + 8) & 0xF;
  *(int8x8_t *)(a6 - 7 + v30) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v21 + (v30 & 0xF) - 7), *(int8x8_t *)(a6 - 7 + v30)), veor_s8(*(int8x8_t *)((v30 & 0xF) + v22 - 5), *(int8x8_t *)((v30 & 0xF) + v23 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v32, (int8x16_t)xmmword_22B497560), (int8x8_t)0x8181818181818181)));
  return (*(uint64_t (**)(__n128))(a21 + 8 * ((28 * (-(v26 & 0xFFFFFFF8) == v28)) ^ a5)))((__n128)xmmword_22B497560);
}

void sub_22B326574()
{
}

uint64_t sub_22B326584(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((((v4 + v3 - 38) | 0xB4u) ^ 0xFFFFFFFFFFFFE4ALL) & v6) != 0) * (v3 - a3 + 56)) ^ (v4 + v3 + 2544))))();
}

uint64_t sub_22B3265CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((a16 - a1 - v16 - 0x3C9526DCFCC7733BLL < ((3 * ((a13 - 761) ^ 0x176u)) ^ 0x1F7uLL))
                                * (((a13 - 761) ^ 0x86B) - 2404)) ^ (a13 - 761))))();
}

uint64_t sub_22B326634()
{
  unsigned int v5 = (((v2 + 617279256) & 0x1B350BFF) + 692011756 + (v0 << ((v2 - 53) ^ 0x4A)) + 420) & 0xE5CD437E;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((21
                                * ((-(v3 + 2 * v5) & 0xEDBA7BD4 ^ 0xE5884354) + ((-v1 - v5) ^ 0x43B9C55) - 42286370 == 1951924424)) ^ v2)))();
}

uint64_t sub_22B3266E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  v11.i64[0] = 0xE4E4E4E4E4E4E4E4;
  v11.i64[1] = 0xE4E4E4E4E4E4E4E4;
  *(int8x16_t *)(v10 - 176) = veorq_s8(vaddq_s8(*(int8x16_t *)*(void *)(v8 + 24), v11), (int8x16_t)xmmword_22B497610);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9 + 8 * (a8 ^ (v10 != 176))))(a1, a2, (a8 - 581));
}

uint64_t sub_22B326740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = STACK[0x240];
  int v76 = LODWORD(STACK[0x240]) ^ 0x70;
  *a70 = v71 + 1;
  int v77 = ((v70 >> 11) - ((v70 >> 10) & 0xB16C0) + 1942326112) ^ v70;
  unsigned int v78 = (((v77 << 7) ^ 0xE2C5B000) - ((((v77 << 7) ^ 0xE2C5B000) << (v75 ^ 0x15)) & 0x1C2BEC00) + 236320279) & 0x9D2C5680 ^ 0x2C4C5E90;
  int v79 = (v78 - ((2 * v78) & 0x1288A020) - 1991978736) ^ v77;
  unsigned int v80 = (((v79 << 15) ^ 0xA9700000) - ((2 * ((v79 << 15) ^ 0xA9700000)) & 0x417F0000) + 549435236) & 0xEFC60000 ^ 0xB829028;
  unsigned int v81 = (-1057141128 - v80 + ((2 * v80) & 0x5E052000)) ^ v79;
  int v82 = (unsigned char *)(a68 + (v73 - 1749591050));
  unsigned int v83 = -1711036427
      * ((*(_DWORD *)(*(void *)STACK[0x210] + (*(_DWORD *)STACK[0x208] & 0x5C709008)) ^ v82) & 0x7FFFFFFF);
  unint64_t v84 = -1711036427 * (v83 ^ HIWORD(v83));
  char v85 = *(unsigned char *)(*(void *)(v72 + 8 * (v76 ^ 0x896)) + (v84 >> 24)) ^ *(unsigned char *)(*(void *)(v72
                                                                                                + 8 * (v76 - 2012))
                                                                                    + (v84 >> 24)
                                                                                    - 2) ^ ((v81 ^ (v81 >> 18) ^ 0xFC)
                                                                                          - ((2
                                                                                            * (v81 ^ (v81 >> 18) ^ 0xFC)) & 0x40)
                                                                                          + ((v76 - 107) & 0xBE)
                                                                                          - 24) ^ *(unsigned char *)(*(void *)(v72 + 8 * (v76 ^ 0x81C)) + (v84 >> 24) - 8) ^ v84 ^ (-77 * BYTE3(v84)) ^ 0xA0;
  *int v82 = v85;
  return (*(uint64_t (**)(void))(v74 + 8 * ((240 * (v73 - (v85 != 0) != 1749591049)) ^ v76)))();
}

uint64_t sub_22B3269AC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3514 * (((147 * (a2 ^ 0x778) - 3063) & v2) == (a2 ^ 0x76D))) ^ a2)))();
}

uint64_t sub_22B3269F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unint64_t a33)
{
  LODWORD(STACK[0x4AC]) = 2094922033;
  LODWORD(STACK[0x3AC]) = 128;
  uint64_t v37 = *(void *)(a7 + 456);
  unint64_t v38 = *(void *)(a7 + 120);
  int v39 = 1734664879 * ((((2 * (v35 - 192)) | 0x7E4AA72C) - (v35 - 192) - 1059410838) ^ 0x10FE7B8C);
  STACK[0x1948] = STACK[0x300];
  STACK[0x1950] = v37 + 0x366CB32738D3F1CLL;
  STACK[0x1940] = 0;
  *(_DWORD *)(v35 - 144) = v39 + v33 - 1904;
  *(_DWORD *)(v35 - 140) = 1635332340 - v39;
  STACK[0x1960] = v38;
  STACK[0x1968] = v37 + 0x366CB32738D3E0CLL;
  STACK[0x1978] = a33;
  STACK[0x1980] = 0;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v33 + 1791)))(v35 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * (((*(_DWORD *)(v35 - 168) == v34)
                                              * (((v33 - 352152450) & 0x14FD6E77) - 1674)) ^ v33)))(v40);
}

uint64_t sub_22B326B0C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v18 = v9 + v14;
  uint64_t v19 = v9 + 1;
  int v20 = *(_DWORD *)(v16 + 4 * (v19 + v14));
  int v21 = (v20 ^ a3) & a5 ^ a6 ^ (a2
                              - ((v20 ^ a3) & (((v8 - 937001332) & 0x37D98DFD) - 297700282) | a2)
                              + ((v20 ^ a3) & (((v8 - 937001332) & 0x37D98DFD) - 297700282) | a4));
  unsigned int v22 = ((a1 - (v21 | a1) + (v21 | a7)) | v10 & 0x80000000) ^ a8;
  *(_DWORD *)(v16 + 4 * v18) = *(_DWORD *)(v16 + 4 * v18 + 1588) ^ *(_DWORD *)(v13 + 4 * (v20 & 1)) ^ ((v22 - (v11 & (2 * v22)) + v12) >> 1) ^ v17;
  return (*(uint64_t (**)(void))(v15 + 8 * ((1407 * (v19 == 1906885088)) ^ v8)))();
}

uint64_t sub_22B326BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((1018 * ((v8 & 8) != ((a8 - 907) ^ 0x5A2))) ^ (a8 + 207))))();
}

uint64_t sub_22B326C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((125 * ((v16 - 882409295) & 0x34987FFF ^ 0x7FF) - 1017)
                                * (a14 + v18 - 220 + (unint64_t)(v15 + v14 - 1) > 0xF)) ^ v16)))();
}

uint64_t sub_22B326C70(uint64_t result)
{
  *int v1 = 36864;
  *(_DWORD *)(result + 8) = -604050357;
  return result;
}

uint64_t sub_22B326C88@<X0>(uint64_t a1@<X8>)
{
  char v4 = *v2;
  *int v2 = v2[3];
  v2[3] = v4;
  char v5 = v2[1];
  v2[1] = v2[2];
  v2[2] = v5;
  return (*(uint64_t (**)(void))(a1 + 8 * ((250 * (v1 - 1 == ((v3 - 1988373184) & 0x76842DFB ^ 0x659980AB))) ^ v3)))();
}

uint64_t sub_22B326D34(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((((a3 + 72 + v6) & (v5 + 91)) + 1) ^ (v4 + 1 == ((((a3 - 184) | 0x200) + v6 + v5) | v7) + v3)) & 1)
                                * v8) | (a3 - 184) | 0x200)))();
}

uint64_t sub_22B326D44(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((7 * (((a3 + 970 + a3 + 611 - 2697) & v3) == 0)) ^ a3)))((v4 - v5));
}

uint64_t sub_22B326D78@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 - 433310473)) = *(unsigned char *)(v4 + (a1 - 433310473))
                                                  - ((2 * *(unsigned char *)(v4 + (a1 - 433310473))) & 0x55)
                                                  + 42;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((31 * ((((_BYTE)a2 - 117) & 0x6B ^ (a1 - 1 == a3)) & 1)) ^ (a2 + 109572491) & 0xF9780E6B)))();
}

uint64_t sub_22B326DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, unint64_t *a17, unint64_t *a18)
{
  unsigned int v20 = v19 & 0x9D11AB2B;
  a16 = v20
      - 203
      - 1292559617
      * ((((2 * (&a16 ^ 0x7B501269)) | 0xC7B8148C) - (&a16 ^ 0x7B501269) - 1675364934) ^ 0xBFDF7046);
  a17 = &STACK[0x1367E3C5726D8FDB];
  a18 = a15;
  (*(void (**)(unsigned int *))(v18 + 8 * (int)(v20 ^ 0x1335)))(&a16);
  a16 = v20 - 203 - 1292559617 * (((&a16 | 0xECDA7279) - (&a16 & 0xECDA7279)) ^ 0x4B891A10);
  a17 = &STACK[0x1367E3C5726D8FD7];
  a18 = a15;
  (*(void (**)(unsigned int *))(v18 + 8 * (int)(v20 + 3315)))(&a16);
  LODWORD(a18) = v20
               - 1734664879
               * (((&a16 ^ 0x1865525A | 0xB7FA8918)
                 - (&a16 ^ 0x1865525A)
                 + ((&a16 ^ 0x1865525A) & 0x480576E2)) ^ 0x8044F358)
               + 2325;
  a17 = a15;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (int)(v20 + 3184)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (int)((3492 * (a16 == ((v20 + 2354) ^ 0xDBFEE016))) ^ v20)))(v21);
}

uint64_t sub_22B326F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25)
{
  int v27 = (a25 ^ a8) - ((2 * (a25 ^ a8)) & 0x72506B66) + v26 - 1188548407;
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * ((458
                                * (((v27 << a21) & 0xFEFFFAFE ^ 0x72506A66) + (v27 ^ 0xC657C8CC) - 876654972 == 1262439427)) ^ (v26 + 1518))))();
}

uint64_t sub_22B327008()
{
  int v5 = 225134719 * ((v4 + 252985728 - 2 * ((v4 - 192) & 0xF144240)) ^ 0x19E4076A);
  *(void *)(v3 + 264) = v7;
  *(_DWORD *)(v4 - 184) = v2 - v5 - ((2 * v2 - 1598865404) & 0xB7FDD896) + ((v1 + 2420) ^ 0xAC58801E);
  *(_DWORD *)(v4 - 180) = (v1 + 3186) ^ v5;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 3371)))(v4 - 192);
  *(_DWORD *)(v4 - 192) = (v1 + 1017761812) ^ (1948972247
                                             * ((((v4 - 192) | 0xBC1AD745) - ((v4 - 192) & 0xBC1AD745)) ^ 0x98422AB));
  (*(void (**)(uint64_t))(v9 + 8 * ((v1 + 2420) ^ 0x1C1D)))(v4 - 192);
  uint64_t result = v8;
  *(_DWORD *)(v8 + 12) = v10;
  return result;
}

uint64_t sub_22B3270A0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v4 + v3 + (a3 ^ 0x791u) - 1874719689 < 8)
                                     * ((a3 - 137400929) & 0xBAF6EBAF ^ 0xB2C663AC)) | a3)))();
}

uint64_t sub_22B327110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((*(unsigned char *)(v7 + 1 + a5) + ((v5 - 11) ^ 0xCC) - *(unsigned char *)(v6 + 1)) != 61)
                                * v8) ^ (v5 - 1621))))();
}

uint64_t sub_22B32711C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((v4 - 192 + ((v4 - 420229982) & 0x190C3CF7) - 171)
                                                                * (v2 == v3)) ^ v4)))(a1, a2, 631);
}

uint64_t sub_22B327168@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 - 0x124BD769AAC602A0) = a3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(void *)(v4 + 32) == 0x2A8EF3598CCBFA3ALL) * ((v3 & 0x786D6D7F ^ 0xBAF) - 638)) ^ v3 & 0x786D6D7F ^ 0xE83)))();
}

uint64_t sub_22B3271E8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x70D52A7E711E5026) = *(_DWORD *)(a2 - 0x48A9B556C05DE57DLL);
  *(void *)(a1 - 0x70D52A7E711E501ELL) = *(void *)(a2 - 0x48A9B556C05DE579);
  return 0;
}

void sub_22B327240(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1503746353 * (a1 ^ 0x2661C2B6);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_22B327344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  uint64_t v27 = a18 + 24 * v20;
  *(_DWORD *)(v27 + 8) = v24;
  *(_DWORD *)(v27 + 12) = v26;
  *(void *)(v27 + 16) = v22;
  *(_DWORD *)(v27 + 24) = a20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((((*(_DWORD *)(v25 + 48 * v21 + 32) + 1934182843) < 0x80000004) * (((a9 + 87) | 0x102) + 811)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_22B3273C8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 != ((v1 - 2429) | 0x906) + 1735341591) * (v1 - 2208)) ^ v1)))();
}

uint64_t sub_22B327418(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, void *a8)
{
  int v16 = v13 - 229;
  unint64_t v17 = (v16 ^ 0x1E7u ^ (unint64_t)(v9 + 2102))
      + a1
      + (*(_DWORD *)(v14 + 4 * v15 - 0x54EEBA8C0E75CADCLL) ^ v11)
      + v12 * (unint64_t)(v16 ^ 0x210 ^ (v11 - 1153) ^ *(_DWORD *)(*a8 + 4 * a3 - 0x54EEBA8C0E75CADCLL));
  *(_DWORD *)(v14 + 4 * v15 - 0x54EEBA8C0E75CADCLL) = v17 + v11 - (v10 & (2 * v17));
  uint64_t v18 = (HIDWORD(v17) ^ 0x4FBD5FD5EDBE7FFDLL) + ((v17 >> 31) & 0x1DB7CFFFALL) - 0xE140C10A1325510;
  int v19 = a3 + 1 + a4;
  BOOL v21 = v19 > 1232751038 || v19 < a5;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (v16 ^ (v21 | (32 * v21)))))(v18);
}

uint64_t sub_22B327504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v8 = *(unsigned char *)(v3 + 12);
  *(unsigned char *)(v7 - 140) = -41 * ((((v7 + 112) | 0x4A) - (v7 + 112) + ((v7 + 112) & 0xB0)) ^ 0xA4)
                       + ((v6 - 85) ^ 0xF8) * (v4 ^ 0x8D)
                       + 90;
  *(_DWORD *)(v7 - 136) = (v6 + 154046359) ^ (1948972247
                                            * ((((v7 - 144) | 0xDEC3664A) - (v7 - 144) + ((v7 - 144) & 0x213C99B0)) ^ 0x6B5D93A4));
  *(unsigned char *)(v7 - 132) = -41 * ((((v7 + 112) | 0x4A) - (v7 + 112) + ((v7 + 112) & 0xB0)) ^ 0xA4)
                       + (v8 ^ 0xEF)
                       + ((v6 - 102) & (2 * v8))
                       + 122;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v6 ^ 0x1262)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((3816 * (*(_DWORD *)(v7 - 144) == -604050357)) ^ v6)))(v9, a2, a3);
}

uint64_t sub_22B3275FC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 < 0x20) ^ a3) & 1) * ((a3 + 1135) ^ 0x77A)) ^ a3)))();
}

uint64_t sub_22B327630()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((475 * (((v0 > 0xDE47714E) ^ 0xF) & 1)) ^ 0x6D4)))();
}

uint64_t sub_22B327694@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *a5 = a11 ^ 0xBDD1ABEE1AEE679FLL;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a7 == v11) * (((a1 - 507) ^ 0xE59) - 1140)) ^ a1)))(0);
}

uint64_t sub_22B3276EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x320]) = 1801476204;
  uint64_t v6 = (v4 - 1085965428) & 0x40BA7FBF;
  uint64_t v7 = *(void *)(a4 + 208);
  unint64_t v8 = ((unint64_t)&STACK[0x2C8] ^ 0x3DFF4D7DBFDFFFF9)
     - 0x28840825948AA2F9
     + ((v6 ^ 0x7BFE9AFB7FBFF860) & (2 * (void)&STACK[0x2C8]));
  STACK[0x2C8] = 335;
  *(unsigned char *)(v7 + 335) = ((((v4 - 116) & 0xBF) - 8) & 0xFA ^ v8 ^ 0x28) * (v8 + 17);
  return (*(uint64_t (**)(void))(v5 + 8 * ((2324 * (STACK[0x2C8] == 0)) ^ v6)))();
}

uint64_t sub_22B327704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  LOBYTE(STACK[0xCA8]) = v51 + 92;
  int v54 = 1503746353 * ((((v53 - 144) | 0xAAA95D93) + (~(v53 - 144) | 0x5556A26C)) ^ 0x8CC89F24);
  *(_DWORD *)(v53 - 144) = v54 + 1331781508;
  *(_DWORD *)(v53 - 120) = v52 - v54 + 485;
  *(void *)(v53 - 136) = a49;
  *(void *)(v53 - 128) = v49;
  (*(void (**)(uint64_t))(v50 + 8 * (v52 ^ 0xB75)))(v53 - 144);
  *(_DWORD *)(v53 - 128) = (v52 - 814) ^ (731811679
                                        * (((((v53 - 144) | 0xB560AC04) ^ 0xFFFFFFFE) - (~(v53 - 144) | 0x4A9F53FB)) ^ 0x369F5BF));
  *(void *)(v53 - 144) = v49;
  *(void *)(v53 - 136) = a24 + v52 + 500 + 16 * (int)v51 + 886787880;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v52 + 2871)))(v53 - 144);
  return (*(uint64_t (**)(uint64_t))(v50
                                            + 8
                                            * ((2946 * (v51 + 1 == ((v52 - 1061) ^ 0x4CB24AD2))) ^ v52)))(v55);
}

uint64_t sub_22B327840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v69 = ((217 * (a8 ^ 0xA09)) ^ v67) + a7;
  *(unsigned char *)(a62 + v69) = *(unsigned char *)(v62 + v69) ^ *(unsigned char *)(v64 + (v69 & 0xF)) ^ *(unsigned char *)((v69 & 0xF) + v65 + 1) ^ *(unsigned char *)((v69 & 0xF) + v63 + 2) ^ (-93 * (v69 & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v68 + 8 * ((213 * (a7 - 1 == v66)) ^ (a8 - 655))))();
}

uint64_t sub_22B3278C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = 1948972247 * ((2 * ((v20 - 128) & 0x3EA7CEC8) - (v20 - 128) + 1096298803) ^ 0xF4C6C4DD);
  *(void *)(v20 - 120) = v18;
  *(_DWORD *)(v20 - 128) = (v19 + 1719) ^ v21;
  *(_DWORD *)(v20 - 124) = v19 - 924 - v21 + v14 - 677770485;
  (*(void (**)(uint64_t))(v16 + 8 * (v19 + 2483)))(v20 - 128);
  *(void *)(v20 - 120) = a14;
  *(void *)(v20 - 104) = v17;
  *(_DWORD *)(v20 - 112) = v19
                         - 924
                         + ((((v20 - 128) ^ 0x59C0138 | 0x7E838DCF) - (((v20 - 128) ^ 0x59C0138) & 0x7E838DCF)) ^ 0x9108BB03)
                         * v15
                         + 2034;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v19 + 2433)))(v20 - 128);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((343 * (*(_DWORD *)(v20 - 128) > ((v19 - 243) ^ 0x2E3u) + 1678217589)) ^ (v19 - 924))))(v22);
}

uint64_t sub_22B3279E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v24 = a9 + 1;
  *(unsigned char *)(v21 + (v20 & (v24 + v17))) = *(unsigned char *)(a17 + v22 + v19) - ((2 * *(unsigned char *)(a17 + v22 + v19)) & 0x55) + 42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((63 * ((a4 + v24 + 1) < 0x40)) ^ v18)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22B3279EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,uint64_t a23,void *a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t (*a34)(void),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unsigned char *a44,unsigned char *a45,unsigned char *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned char *a55,unsigned char *a56,unsigned char *a57,unsigned char *a58,unsigned char *a59,uint64_t a60,unsigned char *a61,unsigned char *a62,uint64_t a63)
{
  *a55 = *(unsigned char *)(*a25 + a5);
  *a56 = *(unsigned char *)(*a24 + v69);
  *a57 = *(unsigned char *)(*a22 + a2);
  *a58 = *(unsigned char *)(*a21 + v75);
  *a59 = *(unsigned char *)(*a20 + v78);
  *a61 = *(unsigned char *)(*a19 + v74);
  *a68 = *(unsigned char *)(*a18 + a4);
  *a69 = *(unsigned char *)(*a17 + v71);
  *a44 = *(unsigned char *)(*a16 + a3);
  *a45 = *(unsigned char *)(*a15 + a1);
  *a62 = *(unsigned char *)(*a14 + a6);
  *a64 = *(unsigned char *)(*a13 + v77);
  *a65 = *(unsigned char *)(*a12 + v76);
  *a66 = *(unsigned char *)(*a11 + v73);
  *a67 = *(unsigned char *)(*a10 + v72);
  *a46 = *(unsigned char *)(*a9 + v70);
  return a34();
}

uint64_t sub_22B327B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((876 * (a8 + 1 == v10 + 60)) ^ v9)))(v8);
}

uint64_t sub_22B327C14()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 == v0) ^ (v1 - 50)) & 1)
                                     * (v4 + ((v1 - 1244530226) & 0xCBFF4EFF) - 1397)) ^ v1)))();
}

uint64_t sub_22B327C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, int a17, uint64_t a18, int *a19, uint64_t a20,int a21,int a22)
{
  unsigned int v28 = 2009815553 * ((99060204 - (&a18 | 0x5E789EC) + (&a18 | 0xFA187613)) ^ 0xB135856);
  LODWORD(a19) = 673189867 - v28;
  HIDWORD(a19) = (v27 - 89) ^ v28;
  a18 = v25;
  (*(void (**)(uint64_t *))(v23 + 8 * (v27 ^ 0x7D8)))(&a18);
  LODWORD(a18) = (v27 + 425455653) ^ (225134719
                                    * (((&a18 | 0x3596CFD5)
                                      - &a18
                                      + (&a18 & 0xCA693028)) ^ 0x23668AFF));
  a19 = (int *)(v22 + 0xEB5904C50728E80);
  a20 = v25;
  (*(void (**)(uint64_t *))(v23 + 8 * (v27 ^ 0x1874)))(&a18);
  unsigned int v29 = (((&a18 | 0xEB41B06D) + (~&a18 | 0x14BE4F92)) ^ 0xC49A9876) * v24;
  a21 = v27 - v29 + 1360;
  a22 = v29 + v26;
  LODWORD(a18) = -38327932 - v29;
  a19 = &a14;
  a20 = v25;
  uint64_t v30 = (*(uint64_t (**)(uint64_t *))(v23 + 8 * (v27 + 2032)))(&a18);
  *(_DWORD *)(v22 - 0x21AEEC4F795AEEC7) += a14;
  *(_DWORD *)(v22 - 0x21AEEC4F795AEEC3) += a15;
  *(_DWORD *)(v22 - 0x21AEEC4F795AEEBFLL) += a16;
  *(_DWORD *)(v22 - 0x21AEEC4F795AEEBBLL) += a17;
  *(void *)(v22 - 0x21AEEC4F795AEEAFLL) = 0;
  return (*(uint64_t (**)(uint64_t, __n128))(v23
                                                    + 8 * ((117 * (((2 * v27) ^ 0x1062) == 56)) ^ v27)))(v30, (__n128)0);
}

uint64_t sub_22B327EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,unsigned char *a35,unsigned char *a36,unsigned char *a37,unsigned char *a38,unsigned char *a39,unsigned char *a40,unsigned char *a41,unsigned char *a42,unsigned char *a43,unsigned char *a44,unsigned char *a45,int a46,int a47,unsigned char *a48,unsigned char *a49,unsigned char *a50,unsigned char *a51)
{
  uint64_t v63 = (void *)(a4 + 128);
  uint64_t v88 = v58 + 1;
  uint64_t v64 = *(unsigned __int8 *)(*(v63 - 15) + v55);
  *a35 = v64;
  uint64_t v65 = *(unsigned __int8 *)(*(v63 - 11) + v54);
  *a36 = v65;
  uint64_t v66 = *(unsigned __int8 *)(*(v63 - 7) + v53);
  *a37 = v66;
  uint64_t v87 = *(unsigned __int8 *)(*(v63 - 3) + v61);
  *a38 = v87;
  uint64_t v67 = *(unsigned __int8 *)(*(v63 - 10) + a5);
  *a39 = v67;
  uint64_t v68 = *(unsigned __int8 *)(*(v63 - 6) + v52);
  *a40 = v68;
  uint64_t v85 = *(unsigned __int8 *)(*(v63 - 2) + v56);
  *a48 = v85;
  uint64_t v86 = *(unsigned __int8 *)(*(v63 - 14) + v51);
  *a49 = v86;
  uint64_t v69 = *(unsigned __int8 *)(*(v63 - 5) + v62);
  *a41 = v69;
  uint64_t v70 = *(unsigned __int8 *)(*(v63 - 13) + a6);
  *a42 = v70;
  uint64_t v71 = *(unsigned __int8 *)(*(v63 - 1) + a8);
  *a43 = v71;
  uint64_t v84 = *(unsigned __int8 *)(*(v63 - 9) + v59);
  *a50 = v84;
  uint64_t v82 = *(unsigned __int8 *)(*(v63 - 4) + a7);
  *a51 = v82;
  uint64_t v72 = *(unsigned __int8 *)(*(v63 - 8) + a2);
  *a44 = v72;
  uint64_t v73 = *(unsigned __int8 *)(*(v63 - 12) + a1);
  *a45 = v73;
  uint64_t v74 = *(unsigned __int8 *)(*v63 + v60);
  *a23 = v74;
  uint64_t v75 = (void *)(a17 + ((unint64_t)(((int)v58 + 1) % a19) << 7));
  LODWORD(v69) = *(_DWORD *)(v75[148] + 4 * v67) ^ *(_DWORD *)(v75[147] + 4 * v64) ^ *(_DWORD *)(v75[149] + 4 * v69) ^ *(_DWORD *)(v75[150] + 4 * v74);
  *a23 = BYTE3(v69);
  LODWORD(v74) = v69 >> (((a34 - 23) & 0xEF) - 95);
  *a41 = v74;
  *a39 = BYTE1(v69);
  *a35 = v69;
  uint64_t v76 = &v75[4 * a22 + 147];
  LODWORD(v68) = *(_DWORD *)(v76[1] + 4 * v68) ^ *(_DWORD *)(*v76 + 4 * v65) ^ *(_DWORD *)(v76[2] + 4 * v71) ^ *(_DWORD *)(v76[3] + 4 * v73);
  *a45 = BYTE3(v68);
  *a43 = BYTE2(v68);
  *a40 = BYTE1(v68);
  *a36 = v68;
  uint64_t v77 = &v75[4 * a21 + 147];
  int v78 = *(_DWORD *)(v77[1] + 4 * v85) ^ *(_DWORD *)(*v77 + 4 * v66) ^ *(_DWORD *)(v77[2] + 4 * v70) ^ *(_DWORD *)(v77[3] + 4 * v72);
  *a44 = HIBYTE(v78);
  *a42 = BYTE2(v78);
  *a48 = BYTE1(v78);
  *a37 = v78;
  int v79 = &v75[4 * a20 + 147];
  LODWORD(v70) = *(_DWORD *)(v79[1] + 4 * v86) ^ *(_DWORD *)(*v79 + 4 * v87) ^ *(_DWORD *)(v79[2] + 4 * v84) ^ *(_DWORD *)(v79[3] + 4 * v82);
  *a51 = BYTE3(v70);
  *a50 = BYTE2(v70);
  *a49 = BYTE1(v70);
  *a38 = v70;
  LODWORD(v73) = a46 + 16 - ((a47 + 32) & 0x77E22100);
  *a35 = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF1108C)) ^ v69;
  *a39 = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF1108D)) ^ BYTE1(v69);
  *a41 = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF1108E)) ^ v74;
  LOBYTE(v64) = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF1108F)) ^ BYTE3(v69);
  *a23 = v64;
  *a36 = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF11088)) ^ v68;
  *a40 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF11085)) ^ BYTE1(v68);
  *a43 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF11086)) ^ BYTE2(v68);
  LOBYTE(v79) = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF11087)) ^ BYTE3(v68);
  *a45 = (_BYTE)v79;
  *a37 = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF11084)) ^ v78;
  *a48 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF11089)) ^ BYTE1(v78);
  *a42 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF1108A)) ^ BYTE2(v78);
  *a44 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF1108B)) ^ HIBYTE(v78);
  *a38 = *(unsigned char *)(a25 + (int)(v73 ^ 0x3BF11080)) ^ v70;
  *a49 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF1108D)) ^ BYTE1(v70);
  *a50 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF1108E)) ^ BYTE2(v70);
  *a51 = *(unsigned char *)(a25 + (int)(v73 & 0xFFFFFFF0 ^ 0x3BF1108F)) ^ BYTE3(v70);
  return (*(uint64_t (**)(void, void))(v57 + 8 * ((37 * (v88 == 8)) ^ a34)))(v64, v79);
}

uint64_t sub_22B327ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  int v23 = 1948972247 * ((1077576451 - ((v22 - 168) | 0x403A8303) + ((v22 - 168) | 0xBFC57CFC)) ^ 0xA5B8912);
  STACK[0x2E0] = a20;
  *(_DWORD *)(v22 - 152) = v20 - v23 + 441;
  *(_DWORD *)(v22 - 168) = a13 + v23;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 + 3949)))(v22 - 168);
  unsigned int v25 = STACK[0x2A4] & 0x3F ^ (((v20 - 117) | 0x36) - 29);
  *((unsigned char *)&STACK[0x260] + v25) = -86;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((3440 * (v25 > 0x37)) ^ v20)))(v24, 42, 3091215624, 58);
}

uint64_t sub_22B327FE4@<X0>(int a1@<W8>)
{
  int v8 = 1866394843 * ((v7 - 168) ^ 0xEA1737F4);
  *(_DWORD *)(v7 - 112) = (v1 - ((((a1 - 867109050) | 0x13808452) + 2095348780) & (2 * v1)) + 1851457599) ^ v8;
  *(void *)(v7 - 144) = v10;
  *(void *)(v7 - 152) = v11;
  *(void *)(v7 - 104) = v2;
  *(_DWORD *)(v7 - 160) = (a1 + 1175) ^ v8;
  *(void *)(v7 - 128) = v5;
  *(void *)(v7 - 120) = v3;
  *(void *)(v7 - 168) = 0;
  (*(void (**)(uint64_t))(v6 + 8 * (a1 + 1979)))(v7 - 168);
  return *(_DWORD *)(v7 - 136) ^ v4;
}

uint64_t sub_22B328084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3049 * (v4 + 1 == a3 + 32)) ^ v5)))();
}

uint64_t sub_22B32814C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, unsigned int a6)
{
  int v7 = (((a5 + a3 + 344483911) < 8) ^ (a6 - 41 + (a6 ^ 0x13) + 1)) & 1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (8 * v7)) ^ a6)))();
}

uint64_t sub_22B3281AC(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v5 - a5 + a4)) = *(_DWORD *)(v6 + (v5 - a5 + a4));
  return (*(uint64_t (**)(void))(v8 + 8 * ((4 * (a5 + 4 == v7)) | (8 * (a5 + 4 == v7)) | a3)))();
}

uint64_t sub_22B3281E0()
{
  uint64_t v5 = v3 + v0;
  *(unsigned char *)(v5 - 1) = ((v1 - 115) ^ 0xBA) * (v1 - 98);
  *(unsigned char *)(v5 + (((v2 + 149) | 0x8Cu) ^ 0xFFFFFFFFFFFFFB72)) = ((v1 - 114) ^ 0xBA) * (v1 - 97);
  return (*(uint64_t (**)(void))(v4 + 8 * ((25 * ((v0 & 0xFFFFFFFE) == 2)) ^ v2)))();
}

uint64_t sub_22B32825C@<X0>(int a1@<W0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X6>, int a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v55 = a5 - 8;
  uint64_t v56 = (a4 + v55 + a1 + 8);
  v58.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v55 + (_BYTE)a1 + 8) & 0xF;
  v58.val[0].i64[1] = (v53 + (_BYTE)v55 + 8) & 0xF;
  v58.val[1].i64[0] = (v48 + (_BYTE)v55 + 8) & 0xF;
  v58.val[1].i64[1] = (v52 + (_BYTE)v55 + 8) & 0xF;
  v58.val[2].i64[0] = (v51 + (_BYTE)v55 + 8) & 0xF;
  v58.val[2].i64[1] = (v50 + (_BYTE)v55 + 8) & 0xF;
  v58.val[3].i64[0] = (a3 + (_BYTE)v55 + 8) & 0xF;
  v58.val[3].i64[1] = (a2 + (_BYTE)v55 + 8) & 0xF;
  *(int8x8_t *)(a6 + v56) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v47 + (v56 & 0xF) - 7), *(int8x8_t *)(a6 + v56)), veor_s8(*(int8x8_t *)((v56 & 0xF) + v46 - 5), *(int8x8_t *)(v45 + (v56 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v58, a8), a9)));
  return (*(uint64_t (**)(void))(a45 + 8 * (((v49 == v55) * a7) ^ v54)))();
}

uint64_t sub_22B328264@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v28 - 120) = v21 - 7;
  *(void *)(v28 - 128) = a6 - 7;
  *(_DWORD *)(v28 - 152) = v27 & 0xFFFFFFF8;
  *(_DWORD *)(v28 - 140) = v27;
  *(_DWORD *)(v28 - 136) = 8 - (v27 & 0xFFFFFFF8);
  int v29 = -a4;
  char v30 = v23 + a3 + a2;
  *(_DWORD *)(v28 - 160) = (a5 + 693101369) & 0xD6B0147F;
  uint64_t v31 = (a3 + a2 + a1 + v29);
  v33.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + (_BYTE)v29) & 0xF;
  v33.val[0].i64[1] = (v30 + 2 + (_BYTE)v29) & 0xF;
  v33.val[1].i64[0] = (v30 + 1 + (_BYTE)v29) & 0xF;
  v33.val[1].i64[1] = (v26 + (_BYTE)v29) & 0xF;
  v33.val[2].i64[0] = (v30 + 15 + (_BYTE)v29) & 0xF;
  v33.val[2].i64[1] = (v30 + 14 + (_BYTE)v29) & 0xF;
  v33.val[3].i64[0] = (v30 + 13 + (_BYTE)v29) & 0xF;
  v33.val[3].i64[1] = (v26 + (_BYTE)v29 + ((a5 + 57) ^ 7)) & 0xF;
  *(int8x8_t *)(*(void *)(v28 - 128) + v31) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v22 + (v31 & 0xF) - 7), *(int8x8_t *)(*(void *)(v28 - 120) + v31)), veor_s8(*(int8x8_t *)(v24 + (v31 & 0xF) - 7), *(int8x8_t *)((v31 & 0xF) + v25 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v33, (int8x16_t)xmmword_22B497560), (int8x8_t)0xD1D1D1D1D1D1D1D1)));
  return (*(uint64_t (**)(__n128))(a21 + 8 * ((*(_DWORD *)(v28 - 136) == v29) | a5)))((__n128)xmmword_22B497560);
}

uint64_t sub_22B3283B4@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  unsigned int v4 = ((*(_DWORD *)(*(void *)(v2 - 0x281D12643933BF1BLL) + 4 * v3 - 0x54EEBA8C0E75CADCLL) ^ 0x3B30BFADu) >> a2) ^ 0xEAC9FF8F;
  int v5 = ((2 * v4) & 0x5127C100) - (v4 & 0x38B3E1D8) - 785906305;
  *(_DWORD *)(result + 16) = ((v4 & 0x38B3E1D9 ^ 0xF9A9E4F7 ^ v5)
                            - ((2 * (v4 & 0x38B3E1D9 ^ 0xF9A9E4F7 ^ v5)) & 0x5E740EA2)
                            - 1355145357) ^ 0x1C397E3D;
  return result;
}

uint64_t sub_22B32846C@<X0>(uint64_t a1@<X8>)
{
  int v4 = (v3 - 874935944) & 0x34266DCC;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  unsigned int v6 = v4 - 1734664879 * ((&v6 & 0x2A434D73 | ~(&v6 | 0x2A434D73)) ^ 0xFA679A96) - 772;
  return (*(uint64_t (**)(unsigned int *))(a1 + 8 * (v4 + 2737)))(&v6);
}

uint64_t sub_22B3284E0()
{
  *(void *)(v2 + v1 + v4 - 0x21AEEC4F795AEEAELL) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 - (v0 & 0xFFFFFFF8) == -8) * ((v3 + 807) ^ 0xBBD)) ^ v3)))();
}

uint64_t sub_22B328538()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 + ((v2 - 2619) | 0x808) - 3472) * (v0 == v1)) ^ v2)))(2345);
}

uint64_t sub_22B328578(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((a4 + a3 + 1107661507 < ((a7 + 42260527) & 0xFD7B2D3D) - 3124) * (a7 - 1281)) ^ a7)))();
}

uint64_t sub_22B3285D0(uint64_t result)
{
  unint64_t v1 = 1438293641 * (((result | 0xFD7EFF5BBD5188CCLL) - result + (result & 0x28100A442AE7733)) ^ 0xEBDB17DF0596DDB3);
  unint64_t v2 = *(void *)(result + 32) ^ v1;
  unint64_t v3 = *(void *)(result + 16) + v1;
  BOOL v4 = v2 >= v3;
  BOOL v5 = v2 != v3;
  int v6 = v4;
  if ((*(_DWORD *)result ^ v1)) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 12;
  if (!v7) {
    uint64_t v8 = 28;
  }
  *(_DWORD *)(result + 24) = *(_DWORD *)(result + v8) ^ v1 ^ (*(_DWORD *)(result + 8) - v1);
  return result;
}

uint64_t sub_22B328678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(void))(a6
                              + 8
                              * ((3566
                                * (v36 == ((((a36 + 751311865) ^ 0x2CC820C9) - 604050425) ^ (a36 + 751311865) & 0xD337DF76))) ^ (a36 + 34))))();
}

uint64_t sub_22B3286D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((3667 * (v7 + 1 == v5 + 40)) ^ a5)))();
}

uint64_t sub_22B3287A0@<X0>(uint64_t a1@<X8>)
{
  v4.i64[0] = 0x3636363636363636;
  v4.i64[1] = 0x3636363636363636;
  *(int8x16_t *)((char *)&STACK[0x22C] + v1) = veorq_s8(*(int8x16_t *)((char *)&STACK[0x22C] + v1), v4);
  v4.i64[0] = 0x5C5C5C5C5C5C5C5CLL;
  v4.i64[1] = 0x5C5C5C5C5C5C5C5CLL;
  *(int8x16_t *)(a1 + v1) = veorq_s8(*(int8x16_t *)(a1 + v1), v4);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1781 * (v1 + 16 == (v2 - 719) - 37)) ^ (v2 + 2162))))();
}

uint64_t sub_22B3287F4@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = v5 + 32;
  int v9 = (char *)(v7 + 128);
  uint64_t v10 = (char *)(v4 + (v8 << a2));
  int8x16x4_t v12 = vld4q_s8(v10);
  v13.val[0] = v12.val[3];
  v13.val[1] = v12.val[2];
  int8x16x4_t v14 = vld4q_s8(v9);
  v13.val[2] = v12.val[1];
  v13.val[3] = v12.val[0];
  v12.val[0] = v14.val[3];
  v12.val[1] = v14.val[2];
  v12.val[2] = v14.val[1];
  v12.val[3] = v14.val[0];
  vst4q_s8(v10, v13);
  vst4q_s8(v9, v12);
  return (*(uint64_t (**)(void))(a4 + 8 * (((a1 == v8) * a3) ^ (v6 + 475))))();
}

void OowSGu()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 + dword_2683EB1A8) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 + dword_2683EB1A8) ^ 0x4D))] ^ 0xAB])
                + 389);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9F978
                                                  + (*((unsigned __int8 *)off_26DEA0418
                                                     + (-121 * ((qword_2683EB0F0 + v1) ^ 0x4D))) ^ 0x1Cu)) ^ (-121 * ((qword_2683EB0F0 + v1) ^ 0x4D)))
                + 253);
  uint64_t v3 = *(void *)(v2 - 4) - v1 - (void)&v5;
  *(void *)(v0 - 4) = 2059148423 * v3 - 0xD2361EE8B96764DLL;
  *(void *)(v2 - 4) = 2059148423 * (v3 ^ 0xD2361EE8B96764DLL);
  v6[0] = (1292559617 * (((v6 | 0xC6444001) - (v6 & 0xC6444001)) ^ 0x61172868)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x4D);
  uint64_t v4 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_2683EB1A8) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 + dword_2683EB1A8) ^ 0x4D))] ^ 0x9E])
               + 221)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                           + v2
                                                                           - 8) ^ 7] ^ v2)
                                      + 31320])(v6);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B328A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v30 = (v26 + 208793482) & 0xF38E07D6;
  int v31 = 1948972247 * ((((v29 - 128) | 0xD7A0E6F9) + (~(v29 - 128) | 0x285F1906)) ^ 0x623E1316);
  *(void *)(v29 - 120) = v28;
  *(_DWORD *)(v29 - 128) = (v26 + 389) ^ v31;
  *(_DWORD *)(v29 - 124) = v23 - v31 + v30 + 1231198403;
  (*(void (**)(uint64_t))(v25 + 8 * (v26 ^ 0x1B87)))(v29 - 128);
  *(_DWORD *)(v29 - 112) = v30
                         + ((((2 * (v29 - 128)) | 0x2D9A4A94) - (v29 - 128) + 1764940470) ^ 0x7CDA12BE) * v27
                         + 1987;
  *(void *)(v29 - 120) = a23;
  *(void *)(v29 - 104) = a21;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (int)(v30 ^ 0xCF6)))(v29 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (int)(((*(_DWORD *)(v29 - 128) > v24) * ((v30 + 2609) ^ v30 ^ 0xE3B)) ^ v30)))(v32);
}

uint64_t sub_22B328B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  v21.i64[0] = 0xB3B3B3B3B3B3B3B3;
  v21.i64[1] = 0xB3B3B3B3B3B3B3B3;
  *(int8x16_t *)(v20 - 112) = veorq_s8(vaddq_s8(*(int8x16_t *)*(void *)(v16 + 32), v21), (int8x16_t)xmmword_22B497600);
  BOOL v23 = v17 == 0x7CFCA23F2DDD02C1 || v18 == 0;
  HIDWORD(a12) = 2 * v15;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (int)(((((a6 - 1816197294) & 0x6C40EDFB) + 1712) * v23) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_22B328BCC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, unsigned __int8 a4@<W4>, unint64_t a5@<X5>, unsigned __int8 a6@<W6>, unsigned __int8 a7@<W7>, unsigned __int8 a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v85 = v72 - 16 - ((v76 - 32) & (a71 - 501151997));
  unsigned __int8 v86 = *(unsigned char *)(v81 + (v85 ^ 0x71108583)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128) + (v82 ^ a5));
  *(unsigned char *)(a2 - 16) = v86 ^ a5;
  unsigned __int8 v87 = *(unsigned char *)(v81 + (v85 ^ 0x71108587)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 32) + (v79 ^ a5));
  *(unsigned char *)(a2 - 12) = v87 ^ a5;
  unsigned __int8 v88 = *(unsigned char *)(v81 + (v85 ^ 0x7110858B)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 64) + (v80 ^ a5));
  *(unsigned char *)(a2 - 8) = v88 ^ a5;
  unsigned __int8 v89 = *(unsigned char *)(v81 + (v85 ^ 0x7110858F)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 96) + (v83 ^ a5));
  *(unsigned char *)(a2 - 4) = v89 ^ a5;
  unsigned __int8 v90 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x7110858D)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 104)
                                                                          + (a4 ^ a5));
  *(unsigned char *)(a2 - 3) = v90 ^ a5;
  unsigned __int8 v91 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x71108589)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 72)
                                                                          + (v75 ^ a5));
  *(unsigned char *)(a2 - 7) = v91 ^ a5;
  unsigned __int8 v92 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x71108585)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 40)
                                                                          + (v77 ^ a5));
  *(unsigned char *)(a2 - 11) = v92 ^ a5;
  unsigned __int8 v93 = *(unsigned char *)(v81 + (v85 ^ 0x71108582)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 8) + (v74 ^ a5));
  *(unsigned char *)(a2 - 15) = v93 ^ a5;
  unsigned __int8 v94 = *(unsigned char *)(v81 + (v85 ^ 0x71108581)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 16) + (v71 ^ a5));
  *(unsigned char *)(a2 - 14) = v94 ^ a5;
  unsigned __int8 v95 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x7110858A)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 80) + (a6 ^ a5));
  *(unsigned char *)(a2 - 6) = v95 ^ a5;
  unsigned __int8 v96 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x71108586)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 48)
                                                                          + (v73 ^ a5));
  *(unsigned char *)(a2 - 10) = v96 ^ a5;
  unsigned __int8 v97 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x7110858E)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 112)
                                                                          + (a7 ^ a5));
  *(unsigned char *)(a2 - 2) = v97 ^ a5;
  unsigned __int8 v98 = *(unsigned char *)(v81 + (v85 ^ 0x71108580)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 24) + (a8 ^ a5));
  *(unsigned char *)(a2 - 13) = v98 ^ a5;
  unsigned __int8 v99 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x71108587)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 56)
                                                                          + (v78 ^ a5));
  *(unsigned char *)(a2 - 9) = v99 ^ a5;
  unsigned __int8 v100 = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x7110858B)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 88)
                                                                           + (a1 ^ a5));
  *(unsigned char *)(a2 - 5) = v100 ^ a5;
  LOBYTE(v85) = *(unsigned char *)(v81 + (int)(v85 & 0xFFFFFFF0 ^ 0x7110858F)) ^ *(unsigned char *)(*(void *)(a64 + a70 - 128 + 120)
                                                                                  + (a3 ^ a5));
  *(unsigned char *)(a2 - 1) = v85 ^ a5;
  unsigned int v101 = (void *)(a63 + ((unint64_t)(((int)v84 + 7) % a69) << 7));
  int v102 = v101 + 147;
  LODWORD(v101) = *(_DWORD *)(v101[148] + 4 * v93) ^ *(_DWORD *)(v101[147] + 4 * v86) ^ *(_DWORD *)(v101[149] + 4 * v94) ^ *(_DWORD *)(v101[150] + 4 * v98);
  uint64_t v103 = (~(v101 >> 23) | 0xFFFFFFAB) + (v101 >> 24) + 43;
  *(unsigned char *)(a2 - 13) = (~(v101 >> 23) | 0xAB) + BYTE3(v101) + 43;
  uint64_t v104 = (~(v101 >> 15) | 0xFFFFFFAB) + (v101 >> 16) + 43;
  *(unsigned char *)(a2 - 14) = (~(v101 >> 15) | 0xAB) + BYTE2(v101) + 43;
  *(unsigned char *)(a2 - 15) = BYTE1(v101) - ((v101 >> 7) & 0x54) + 42;
  *(unsigned char *)(a2 - 16) = v101 ^ a5;
  unsigned int v105 = &v102[4 * a68];
  LODWORD(v105) = *(_DWORD *)(v105[1] + 4 * v92) ^ *(_DWORD *)(*v105 + 4 * v87) ^ *(_DWORD *)(v105[2] + 4 * v96) ^ *(_DWORD *)(v105[3] + 4 * v99);
  *(unsigned char *)(a2 - 9) = (~(v105 >> 23) | 0xAB) + BYTE3(v105) + 43;
  *(unsigned char *)(a2 - 10) = BYTE2(v105) - ((v105 >> 15) & 0x54) + 42;
  *(unsigned char *)(a2 - 11) = BYTE1(v105) - ((v105 >> 7) & 0x54) + 42;
  *(unsigned char *)(a2 - 12) = v105 ^ a5;
  int v106 = &v102[4 * a67];
  LODWORD(v106) = *(_DWORD *)(v106[1] + 4 * v91) ^ *(_DWORD *)(*v106 + 4 * v88) ^ *(_DWORD *)(v106[2] + 4 * v95) ^ *(_DWORD *)(v106[3] + 4 * v100);
  *(unsigned char *)(a2 - 5) = BYTE3(v106) - ((v106 >> 23) & 0x54) + 42;
  *(unsigned char *)(a2 - 6) = BYTE2(v106) - ((v106 >> 15) & 0x54) + 42;
  *(unsigned char *)(a2 - 7) = BYTE1(v106) - ((v106 >> 7) & 0x54) + 42;
  *(unsigned char *)(a2 - 8) = v106 ^ a5;
  unsigned int v107 = &v102[4 * a66];
  unsigned int v108 = *(_DWORD *)(v107[1] + 4 * v90) ^ *(_DWORD *)(*v107 + 4 * v89) ^ *(_DWORD *)(v107[2] + 4 * v97) ^ *(_DWORD *)(v107[3] + 4 * v85);
  *(unsigned char *)(a2 - 1) = HIBYTE(v108) - ((v108 >> 23) & 0x54) + 42;
  *(unsigned char *)(a2 - 2) = BYTE2(v108) - ((v108 >> 15) & 0x54) + 42;
  *(unsigned char *)(a2 - 3) = BYTE1(v108) - ((v108 >> 7) & 0x54) + 42;
  *(unsigned char *)(a2 - 4) = v108 ^ a5;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a65 + 8 * ((2047 * ((unint64_t)(v84 + 1503758726) > 0x59A1897F)) ^ a71)))(HIBYTE(v108) - ((v108 >> 23) & 0x54) + 42, a2, v103, v84 + 1503758726, (v106 >> 8) - ((v106 >> 7) & 0x54) + 42, a5, v104, (v105 >> 16) - ((v105 >> 15) & 0x54) + 42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_22B328BF0(uint64_t a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = STACK[0x278] ^ 0x512;
  int8x16_t v70 = (int8x16_t)vld1q_dup_f32((const float *)v67);
  v71.i64[0] = 0x8000000080000000;
  v71.i64[1] = 0x8000000080000000;
  a3.i64[0] = *(void *)(v67 + 4);
  a3.i32[2] = *(_DWORD *)(v67 + 12);
  int8x16_t v72 = vextq_s8(v70, a3, 0xCuLL);
  int8x16_t v73 = a3;
  v73.i32[3] = *(_DWORD *)(v67 + 16);
  int32x4_t v74 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v73, a67), vandq_s8(v72, v71)), 1uLL), *(int8x16_t *)(v67 + 1588));
  v72.i32[0] = *(_DWORD *)(v68 + 4 * (*(_DWORD *)(v67 + 4) & 1));
  v72.i32[1] = *(_DWORD *)(v68 + 4 * (*(_DWORD *)(v67 + 8) & 1));
  v72.i32[2] = *(_DWORD *)(v68 + 4 * (*(_DWORD *)(v67 + 12) & 1));
  v72.i32[3] = *(_DWORD *)(v68 + 4 * (v73.i8[12] & 1));
  *(int8x16_t *)uint64_t v67 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v74, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v74, v74), a66)), a65), v72);
  return (*(uint64_t (**)(void))(a1 + 8 * (v69 ^ 0x23)))();
}

uint64_t sub_22B328C04@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 - a2 - 3030) ^ a2) + v3 - 792) * (v2 == a1)) ^ v3)))();
}

uint64_t sub_22B328C34(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    BOOL v2 = *(void *)(a1 + 8) == 0x25B0145E0CD22388;
  }
  else {
    BOOL v2 = 1;
  }
  int v4 = v2 || *(void *)a1 == 0x717BE438C5D0856CLL;
  int v1 = *(_DWORD *)(a1 + 28) - 1734664879 * ((2 * (a1 & 0x7C799403) - a1 + 59141116) ^ 0x2C5D43E6);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v1 ^ 0x3C6)) + ((v4 * (v1 - 611)) ^ v1) - 1))();
}

uint64_t sub_22B328CD8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = (v2 + 601) ^ (225134719 * (&v6 ^ 0x16F0452A));
  uint64_t v7 = a1;
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v3 + 8 * (v2 + 2151)))(&v6);
  *(_DWORD *)(v1 + 16) = v4;
  return result;
}

uint64_t sub_22B328D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 104) = v27;
  *(_DWORD *)(v28 - 112) = v26
                         + ((((2 * (v28 - 128)) | 0xB2DBE0CC) - (v28 - 128) - 1500377190) ^ 0xB37AC792) * v24
                         + 589;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 1912)))(v28 - 128);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((((*(_DWORD *)(v28 - 128) - 1678219540) > 0xB53746B3)
                                              * (((47 * (v26 ^ 0x847) - 670) | 0xA) ^ 0x87A)) ^ v26)))(v29);
}

uint64_t sub_22B328DD0()
{
  int v5 = *(unsigned __int8 *)(v2 + 1);
  *int v4 = v0 + 2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2320 * (v5 == ((((v1 & 0x7D) + 8) | 0x41) ^ 0x89))) ^ v1 & 0x4BF31D7Du)))();
}

uint64_t sub_22B328E28()
{
  return 4294925278;
}

uint64_t sub_22B328E30@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v4
                                                            + 8
                                                            * (int)(((*(unsigned char *)(v2 + 5) == 1)
                                                                   * ((((a2 + 439572667) & 0xE5CCA7EF) + 2612) ^ (a2 + 1095515449) & 0xBEB3C29F)) ^ a2)))(a1, *(void *)(v3 + 8), *(void *)(v3 + 48));
}

uint64_t sub_22B328E98@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((a1 == ((v1 - 365) ^ 0x6B605BA1))
                                                   * (((v1 + 13648182) | 0x81010888) + 2116992282)) ^ v1)))(4294925278);
}

uint64_t sub_22B328EF0@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  unint64_t v7 = v3 + a1;
  *(unsigned char *)(v7 + a3 - 1) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v7 < (unint64_t)((v4 + 854) | 0x401u) - 3213) * a2) ^ (v4 - 997))))();
}

void sub_22B328F30()
{
}

uint64_t sub_22B328F38@<X0>(int a1@<W5>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 + v4 + 713)) = *(unsigned char *)(v3 + (a1 + v4 + 713));
  return (*(uint64_t (**)(void))(v6 + 8 * (((4 * (v4 - 1 == a2)) | (16 * (v4 - 1 == a2))) ^ (v5 - 430))))();
}

uint64_t sub_22B328F70@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = (v4 + 449270663) & 0xE538A7BF;
  int v7 = (v6 ^ (v1 - 1629)) + v2;
  int v8 = v2 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x281D12643933BF1BLL) + 4 * v7 - 0x54EEBA8C0E75CADCLL) = v5;
  *(_DWORD *)(v3 - 0x281D12643933BF1FLL) = v8;
  int v9 = v8 + v1;
  if (v8 + v1 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((2115
                                     * ((int)(v1
                                            + (v9 ^ 0xB6FFACF1)
                                            + 2145319936
                                            + (((v6 ^ 0x76) + 1845449239) & (2 * v9))
                                            + 283 * (v6 ^ 0x7BA)
                                            - 1982) > (int)((v6 ^ 0x7BA) - 8))) ^ v6 ^ 0x76)))();
}

void sub_22B329070(uint64_t a1)
{
  int v1 = 1948972247 * ((-2 - ((a1 | 0x89C340FF) + (~a1 | 0x763CBF00))) ^ 0xC3A24AEE);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x19157D3ABD2659D2) + 1106888700;
  unsigned int v3 = *(_DWORD *)(a1 + 16) + v1 + 1370126033;
  int v4 = (v3 < 0x9937D123) ^ (v2 < 0x9937D123);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0x9937D123;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_22B32919C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + 1 != v6 + 64) | (16 * (a6 + 1 != v6 + 64))) ^ a5)))();
}

uint64_t sub_22B329260(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  char v52 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * v46);
  char v53 = &a46 + a42;
  uint64_t v64 = a42 + 320;
  uint64_t v54 = *(unsigned int *)(a32 - 0x2970AB8229FC3CE2);
  int v55 = *(_DWORD *)(a32 - 0x2970AB8229FC3CDELL);
  uint64_t v56 = (_DWORD *)(a32 - 0x2970AB8229FC3CDALL);
  int v57 = *(_DWORD *)(a32 - 0x2970AB8229FC3CDALL);
  int v58 = *(unsigned __int8 *)(a32 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v58 == 2)
  {
    BOOL v63 = a3 < a31 + a42 && (unint64_t)v53 < a3 + 64;
    return (*(uint64_t (**)(void, uint64_t, unint64_t, uint64_t, void, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (int)(((a40 ^ (a4 + 47)) * v63) ^ (a4 - 589))))(a40, v54, a3, a4, *(unsigned int *)(a32 - 0x2970AB8229FC3CD6), a42, v56, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a32 - 0x2970AB8229FC3CD6,
             a31,
             a32,
             v50);
  }
  else if (v58 == 1)
  {
    BOOL v60 = a3 < a31 + a42 && (unint64_t)v53 < a3 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (((a41 + 81) * v60) ^ ((int)a4 - 972))))(a32, v54, a3, a4, v52, a42, v56, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             v50);
  }
  else
  {
    *(_DWORD *)(a32 - 0x2970AB8229FC3CE6) = 2 * (*(_DWORD *)(a32 - 0x2970AB8229FC3CE6) ^ v49)
                                            + v49
                                            - (v47 & (4 * (*(_DWORD *)(a32 - 0x2970AB8229FC3CE6) ^ v49)));
    *(_DWORD *)(a32 - 0x2970AB8229FC3CE2) = (*(_DWORD *)(a32 - 0x2970AB8229FC3CE2) ^ v49)
                                            + (v54 ^ v49)
                                            + v49
                                            - (v47 & (2 * ((*(_DWORD *)(a32 - 0x2970AB8229FC3CE2) ^ v49) + (v54 ^ v49))));
    *(_DWORD *)(a32 - 0x2970AB8229FC3CDELL) = (*(_DWORD *)(a32 - 0x2970AB8229FC3CDELL) ^ v49)
                                            + (v55 ^ v49)
                                            + v49
                                            - (v47 & (2 * ((*(_DWORD *)(a32 - 0x2970AB8229FC3CDELL) ^ v49) + (v55 ^ v49))));
    *uint64_t v56 = (*v56 ^ v49) + (v57 ^ v49) + v49 - (v47 & (2 * ((*v56 ^ v49) + (v57 ^ v49))));
    return v52(a32, v54, a3, a4, v52, v64 - 320, v56, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             v50);
  }
}

uint64_t sub_22B329274()
{
  *(void *)(*v2 - 0x24B64731C5A67D1FLL) = *v3;
  *(_DWORD *)(*v2 - 0x24B64731C5A67D27) = *v4;
  return v1 ^ 0xDBFEEC4B;
}

uint64_t sub_22B329300()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((LODWORD(STACK[0x22C]) == 1323516149) * (((v0 + 113388730) & 0xF93DD352) + 2817)) ^ (v0 + 113388730) & 0xF93DD352)))();
}

uint64_t sub_22B32934C@<X0>(int a1@<W8>)
{
  if (*(void *)(v2 + 32)) {
    BOOL v4 = (*(_DWORD *)(v2 + 40) ^ v1) == ((a1 + 1103887145) & 0xBE33FFDC) + 81914436;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((19 * (((a1 ^ v5) & 1) == 0)) ^ a1)))();
}

uint64_t sub_22B3293AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v5 == a5) ^ v6) & 1) * ((v6 - 1404214363) & 0x53B29F3F ^ 0xB2E)) ^ v6)))();
}

uint64_t sub_22B3293F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  unsigned int v51 = (v48 + 1333133849) & 0xB089FFDA;
  int v52 = v50 - 144;
  *(_DWORD *)(v50 - 136) = (v48 + 1935319212) ^ (((-261752167 - ((v50 - 144) | 0xF065FA99) + ((v50 - 144) | 0xF9A0566)) ^ 0xF049615C)
                                               * v49);
  *(void *)(v50 - 144) = &STACK[0x21AEEC4F795AFB7F];
  (*(void (**)(uint64_t))(v47 + 8 * (v48 ^ 0xB6C)))(v50 - 144);
  int v53 = v48 + 485;
  unsigned int v54 = 1503746353 * (((v52 | 0xB92ACD4C) - (v52 & 0xB92ACD4C)) ^ 0x9F4B0FFA);
  *(_DWORD *)(v50 - 120) = v48 + 485 - v54;
  *(void *)(v50 - 136) = (char *)*(&off_26DE9F480 + (v48 ^ 0x5E8)) - 4;
  *(void *)(v50 - 128) = &STACK[0x21AEEC4F795AFB7F];
  *(_DWORD *)(v50 - 144) = v54 + 1331781556;
  uint64_t v55 = 8 * (v48 + 2861);
  (*(void (**)(uint64_t))(v47 + v55))(v50 - 144);
  unsigned int v56 = 1503746353 * (((v52 | 0x555C479B) + (~v52 | 0xAAA3B864)) ^ 0x733D852C);
  *(_DWORD *)(v50 - 144) = v56 + 1331781541;
  *(_DWORD *)(v50 - 120) = v53 - v56;
  *(void *)(v50 - 136) = a47;
  *(void *)(v50 - 128) = &STACK[0x21AEEC4F795AFB7F];
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v47 + v55))(v50 - 144);
  STACK[0xD10] = STACK[0xCB8];
  LODWORD(STACK[0xD18]) = STACK[0xCC0];
  STACK[0xD1C] = STACK[0xCC4];
  LODWORD(STACK[0xD24]) = STACK[0xCCC];
  *(_OWORD *)&STACK[0xD28] = *(_OWORD *)&STACK[0xCD0];
  return (*(uint64_t (**)(uint64_t))(v47 + 8 * (int)(((v51 ^ 0x18) - 476) ^ 0x4BC ^ v51 ^ 0x18)))(v57);
}

uint64_t sub_22B329620@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  *(unsigned char *)(a2 + (v3 - 883562456)) = *(unsigned char *)(v5 + (v3 - 883562456))
                                                  + (~(2 * *(unsigned char *)(v5 + (v3 - 883562456))) | 0xAB)
                                                  + 43;
  unsigned int v7 = v3 - 750103757;
  int v8 = (v2 < a1) ^ (v7 < a1);
  BOOL v9 = v7 < v2;
  if (v8) {
    BOOL v9 = v2 < a1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((8 * v9) | (32 * v9)) ^ v6)))();
}

uint64_t sub_22B3296B4(char a1)
{
  int v3 = (a1 & 8) == ((v1 + 99391830) & 0xFA13679D) - 1689;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 << 8) | (v3 << 11)) ^ v1)))();
}

uint64_t sub_22B329700()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((v1 + (((v0 ^ 0xB71) + 1224900524) ^ (13 * (v0 ^ 0xB71u))) < 0xFFFFFFF0) | v0)))();
}

uint64_t sub_22B329744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a3 + 1) = *(unsigned char *)(a4 + (v5 - 347313665));
  return (*(uint64_t (**)(void))(v6 + 8 * ((53 * ((v5 & 0xFFFFFFFC) == ((v4 - 624) ^ 0x14B39627))) ^ v4)))();
}

uint64_t sub_22B3297B0@<X0>(uint64_t a1@<X8>)
{
  int v6 = v2 ^ 0x309;
  int v7 = v1 - (**(unsigned __int8 **)(v4 - 0x48A9B556C05DE579) == (v2 ^ 0xE5));
  *(_DWORD *)(*(void *)(v3 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68117) = 406907236;
  *(_DWORD *)(*(void *)(v3 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68113) = 920561905;
  int v8 = (v2 ^ 0x309) - 4785938;
  *(void *)(*(void *)(v3 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A6810FLL) = *(void *)(v3 - 0x70D52A7E711E4FFELL)
                                                                             + 0x3038735A48CF49D5;
  uint64_t v9 = *(void *)(v3 - 0x70D52A7E711E4FFELL) + 0x366CB32738D3E0CLL;
  uint64_t v10 = *(void *)(v4 - 0x48A9B556C05DE579) + (*v5 - v7);
  unsigned int v11 = 1988622253 * ((-1100245999 - (v14 | 0xBE6B9411) + (v14 | 0x41946BEE)) ^ 0xB78C2B4E);
  unsigned int v16 = v11 + v7 - 332667884;
  int v17 = v11 + v6 - 1401;
  v14[0] = v9;
  v14[1] = v10;
  (*(void (**)(void *))(a1 + 8 * (v6 ^ 0x158u)))(v14);
  int v12 = v15;
  *(void *)(*(void *)(v3 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68127) = *(void *)(v4 - 0x48A9B556C05DE579)
                                                                             + (*v5 - v7);
  return v12 * (v8 ^ 0x6FDC6355u) - 1951528465;
}

uint64_t sub_22B3297EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,unint64_t *a21,unint64_t *a22,int a23,unsigned int a24)
{
  a21 = &STACK[0xC6FBACBD8C97586];
  a22 = a16;
  a20 = &STACK[0xA039FA35F0E834F];
  a24 = (v24 + 2097) ^ (1990461019
                      * ((&a20 & 0xBD8A240E | ~(&a20 | 0xBD8A240E)) ^ 0x6D917978));
  (*(void (**)(unint64_t **))(v25 + 8 * (v24 + 2501)))(&a20);
  a24 = (v24 + 2097) ^ (1990461019
                      * ((&a20 & 0x589FD85E | ~(&a20 | 0x589FD85E)) ^ 0x88848528));
  a20 = &STACK[0xA039FA35F0E835F];
  a21 = &STACK[0xC6FBACBD8C975A6];
  a22 = a16;
  (*(void (**)(unint64_t **))(v25 + 8 * (v24 + 2501)))(&a20);
  LODWORD(a20) = v24
               - 1292559617 * ((&a20 + 900955137 - 2 * (&a20 & 0x35B37C01)) ^ 0x92E01468)
               - 1010;
  a21 = &STACK[0x1367E3C5726D9003];
  a22 = a16;
  (*(void (**)(unint64_t **))(v25 + 8 * (v24 ^ 0x164C)))(&a20);
  a21 = a16;
  LODWORD(a22) = v24
               - 1734664879
               * ((-1659109068 - (&a20 | 0x9D1C0134) + (&a20 | 0x62E3FECB)) ^ 0x4D38D6D1)
               + 1518;
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v24 + 2377)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((a20 != -604050357) * (((v24 - 766) | 0x402) - 1824)) ^ v24)))(v26);
}

uint64_t sub_22B329A0C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((452 * (v3 + v2 + (((a2 - 546) | 0x48) ^ 0x8922C0FC) >= 183 * (a2 ^ 0x4CDu) - 1639)) ^ a2)))();
}

uint64_t sub_22B329A64(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v5 - 191) ^ v5 ^ 0x7C1 ^ 0xFE) * (a3 < a4)) ^ v5)))();
}

uint64_t sub_22B329A94(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16)
{
  unsigned int v27 = a16 - 16;
  uint64_t v28 = v27 & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v24).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v24).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v27), *(int8x16_t *)(v17 + v28 - 15)), veorq_s8(*(int8x16_t *)(v28 + v18 - 13), *(int8x16_t *)(v28 + v19 - 14))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), v26), vmulq_s8(v30, v25)));
  *(int8x16_t *)(v16 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v23 + 8 * (((v20 == 16) * (((a14 + 669) | v21) ^ v22)) ^ a14)))();
}

uint64_t sub_22B329AA0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_22B329AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v67 = STACK[0x368];
  int v68 = *(_DWORD *)(a61 + 52) - 1262095898;
  int v69 = 1328090399 * ((((2 * (v65 - 192)) | 0xE034491E) - (v65 - 192) + 266722161) ^ 0xFC940B5);
  *(_DWORD *)(v65 - 152) = v62 - v69 - 701;
  *(_DWORD *)(v65 - 148) = (v67 ^ 0x32CD9EDF) - v69 + ((2 * v67) & 0x659B3DBE) - 268960918;
  STACK[0x1940] = v61;
  STACK[0x1950] = v63;
  STACK[0x1958] = (unint64_t)&STACK[0x1870];
  *(_DWORD *)(v65 - 184) = ((a35 ^ 0x9CE8E08F)
                          + 2147478016
                          + ((((v62 - 923198985) & 0x3706EF77) + 1538089857) & (2 * a35) ^ 0x422C2EC0)) ^ v69;
  *(_DWORD *)(v65 - 160) = v68 ^ v69;
  uint64_t v70 = (*(uint64_t (**)(uint64_t))(v66 + 8 * (v62 + 3466)))(v65 - 192);
  unint64_t v71 = STACK[0x270];
  int v72 = *(_DWORD *)(v65 - 156);
  LODWORD(STACK[0x290]) = v72;
  return (*(uint64_t (**)(uint64_t))(v71 + 8 * ((3679 * (v72 == v64)) ^ v62)))(v70);
}

uint64_t sub_22B329C00@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((3801
                                * (((*(unsigned __int8 *)(v4 + 2) - 72) ^ v3)
                                 + v1
                                 + (((3 * (v5 ^ 0x1A3)) ^ (v2 - 1699)) & (2 * (*(unsigned __int8 *)(v4 + 2) - 72))) == a1)) ^ v5)))();
}

uint64_t sub_22B329C50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (unsigned __int8 *)(*(void *)(v7 + 8 * (a5 ^ (a5 - 230))) - 4);
  uint64_t v18 = (a3 + 130927962) | v8;
  BOOL v20 = ((**v16 - (*v17 ^ v14)) ^ v13) + v15 + (v12 & (2 * (**v16 - (*v17 ^ v14)))) != v10 + v18 - 1187
     || a7 + 1968264931 + (v18 ^ a1) == 0;
  return (*(uint64_t (**)(void))(v11 + 8 * (int)((v20 * v9) ^ v18)))();
}

void sub_22B329C7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) + 1948972247 * ((a1 + 1757108041 - 2 * (a1 & 0x68BB5749)) ^ 0xDD25A2A7);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B329DE8(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unint64_t v40 = (*(_DWORD *)(a28 + 4 * (v39 + 1 + v31) + a7) ^ v28)
      + HIDWORD(v30)
      + a8 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (v39 + 1 + v31) + a7) ^ v28);
  *(_DWORD *)(a28 + 4 * (v39 + v31) + a7) = v40 + (a6 ^ v35 ^ (v28 - 3355)) - (v29 & (2 * v40));
  if (v32 > v34 != v39 + v36 < v37) {
    BOOL v41 = v32 > v34;
  }
  else {
    BOOL v41 = v39 + v36 < a3;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((v41 * v38) ^ a6)))();
}

uint64_t sub_22B329E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58
                                                                       + 8
                                                                       * ((a37 - a57 - 112 < (unint64_t)(((v57 + 2764) ^ 0x6E9u) - 1235)
                                                                                           - 1412) ^ (v57 + 2764))))(a1, a2, a3, -1959124371);
}

uint64_t sub_22B329ECC()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 2070)))(40, 2217100586) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (v1 - 1936)) ^ v1)))();
}

uint64_t sub_22B329F0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unint64_t v66 = STACK[0x358];
  STACK[0x2C0] = *(void *)(v65 + 8 * (v63 - 3139));
  *(void *)(a7 + 160) = v62 + 112;
  STACK[0x2D8] = v66;
  if (v66) {
    BOOL v67 = a62 == v64;
  }
  else {
    BOOL v67 = 1;
  }
  int v68 = !v67;
  return (*(uint64_t (**)(_UNKNOWN **))(v65
                                                + 8
                                                * (int)((v68
                                                       * ((631 * ((v63 + 951386000) & 0xC74AFDBD ^ 0x9A4)) ^ (((v63 + 951386000) & 0xC74AFDBD ^ 0x9AE) * a3) ^ 0xD53)) ^ (v63 + 951386000) & 0xC74AFDBD)))(&off_26DE9F480);
}

uint64_t sub_22B329F68(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  return (*(uint64_t (**)(void))(v47 + 8 * (((((a3 - 597) | 0xE42) ^ 0x6A2) * (*(_DWORD *)(v48 - 256) == a47)) ^ a3)))();
}

uint64_t sub_22B329FAC(int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  int v13 = ((v6 | v10) ^ v10) * a3;
  *(unsigned char *)(v8 + (v9 + v7 + v13 - 3155)) = *(unsigned char *)(a6 + (v9 + v7 + v13 - 3155));
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((v7 - 1 == a5) ^ (v13 - 78)) & 1) * (v13 ^ v11 ^ a1)) ^ (v13 - 1846))))();
}

uint64_t sub_22B329FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x230] = 0;
  unint64_t v66 = ((unint64_t)&STACK[0x220] ^ 0xA3A7BA77FFDFEFDBLL)
      + 0x7F5D7DFD4C7F0025
      + ((2 * (void)&STACK[0x220]) & 0x474F74EFFFBFDFB0);
  LOBYTE(STACK[0x33F]) = (v66 ^ 0xBA) * (v66 + 17);
  LOBYTE(STACK[0x33E]) = ((2 * (v65 - 97)) ^ 0xC4 ^ (v66 | 1) ^ 0xD2) * (v66 + 18);
  return (*(uint64_t (**)(void))(a65 + 8 * (v65 - 97)))();
}

uint64_t sub_22B32A0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v27 = v25 ^ 0x123;
  unsigned int v28 = (char *)*(&off_26DE9F480 + v25 - 892) - 8;
  unsigned int v29 = v28[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA655927FLL) ^ 0xD6];
  uint64_t v30 = (uint64_t)*(&off_26DE9F480 + (v25 ^ 0x266));
  uint64_t v31 = *(unsigned __int8 *)(v24 - 0x3FBE4A0FA655927ALL);
  unsigned int v32 = (char *)*(&off_26DE9F480 + v25 - 765) - 8;
  int v33 = (v29 ^ (((v29 >> 2) ^ (v29 >> 6) ^ 0xE)
                               + (v25 ^ 6 ^ (2 * ((v29 >> 2) ^ (v29 >> 6) ^ 0xE)) & 0xAA)
                               - 42)) ^ 0xEE | ((*(unsigned __int8 *)(v30
                                                                    + (*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559282) ^ 0x19)) ^ 0x4D) << 24);
  int v34 = (((v31 ^ 0xC) + (v31 ^ 0x2A) + 1) ^ 0xFFFFFFFE) + (v31 ^ 0x2A);
  int v35 = (v34 - ((2 * v34) & 0x56) + 43) ^ *(unsigned __int8 *)(v30 + (v31 ^ 0x9D));
  unsigned int v36 = ((v32[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559279) ^ 0x78] ^ 0xB) << 16) | ((v31 ^ 0x8B ^ (v35 - ((2 * v35) & 0x56) + 43)) << 24);
  LODWORD(v31) = v28[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA655927BLL) ^ 0xBBLL];
  LOBYTE(v29) = v31 ^ 0x9C ^ (((v31 >> 2) ^ (v31 >> 6) ^ 0xE)
                            - ((2 * ((v31 >> 2) ^ (v31 >> 6) ^ 0xE)) & 0xCF)
                            - 89);
  LODWORD(v31) = v28[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559277) ^ 0x87];
  uint64_t v37 = *(unsigned __int8 *)(v24 - 0x3FBE4A0FA655927CLL);
  int v38 = (char *)*(&off_26DE9F480 + v25 - 538) - 4;
  uint64_t v39 = *(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559278);
  int v40 = v38[v39 ^ 5] ^ ((v39 ^ 0x75)
                                                        + (v39 ^ 0xBF)
                                                        + 1
                                                        - ((2 * ((v39 ^ 0x75) + (v39 ^ 0xBF) + 1)) & 0xA6)
                                                        + 83) ^ 0xB9;
  v374 = v28;
  LODWORD(v39) = v28[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559273) ^ 0x1CLL];
  unsigned int v41 = v36 & 0xFFFFFF00 | (v31 ^ (((v31 >> 2) ^ 0xE ^ (v28[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559277) ^ 0x87] >> 6))
                                                  - ((2 * ((v31 >> 2) ^ 0xE)) & 0x18)
                                                  - 52)) ^ 0xF7 | (v40 << 8);
  v372 = v32;
  int v42 = v39 ^ 0x72 ^ (((v39 >> 2) ^ (v39 >> 6) ^ 0xE)
                                                      + (~(2
                                                         * ((v39 >> 2) ^ (v39 >> 6) ^ 0xE)) | 0xED)
                                                      + 74) | ((v32[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559275) ^ 0xA8] ^ 0xEC) << 16) | (*(unsigned __int8 *)(v30 + (*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559276) ^ 0x48)) << 24);
  uint64_t v43 = *(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559274);
  uint64_t v44 = *(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559280);
  int v45 = v42 | ((v38[v43 ^ 4] ^ ((v43 ^ 0x74)
                                                                + (v43 ^ 0xBE)
                                                                + 1
                                                                - ((2 * ((v43 ^ 0x74) + (v43 ^ 0xBE) + 1)) & 0xA6)
                                                                + 83) ^ 0x68) << 8);
  v371 = v38;
  int v46 = v33 | ((v32[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA6559281) ^ 0xC9] ^ 0x36) << 16) | ((v38[v44 ^ 0xD7] ^ ((v44 ^ 0xA7) + (v44 ^ 0x6D) + 1 - ((2 * ((v44 ^ 0xA7) + (v44 ^ 0x6D) + 1)) & 0xA6) + 83) ^ 0x47) << 8);
  uint64_t v373 = v30;
  *(_DWORD *)(v26 - 240) = (v29 | ((v38[v37 ^ 0xE1] ^ ((v37 ^ 0x91) + (v37 ^ 0x5B) + 1 - ((2 * ((v37 ^ 0x91) + (v37 ^ 0x5B) + 1)) & 0xA6) + 83) ^ 0x73) << 8) | ((v32[*(unsigned __int8 *)(v24 - 0x3FBE4A0FA655927DLL) ^ 0xCALL] ^ 0xF8) << 16) | ((*(unsigned __int8 *)(v30 + (*(unsigned __int8 *)(v24 - 0x3FBE4A0FA655927ELL) ^ 0xFLL)) ^ 0x86) << 24)) ^ 0xBA5E0C6B;
  *(_DWORD *)(v26 - 244) = v45 ^ 0xE17E6002;
  *(_DWORD *)(v26 - 236) = v41 ^ 0x2500C9A7;
  *(_DWORD *)(v26 - 248) = v46 ^ 0xF9EE949F;
  HIDWORD(a11) = v23 - 1995435775;
  LODWORD(v38) = (v27 + 644257059) & 0xD9996E3F;
  *(_DWORD *)(v26 - 256) = v38;
  *(_DWORD *)(v26 - 252) = 0;
  uint64_t v47 = *(unsigned __int8 **)(v26 - 200);
  uint64_t v48 = v47[6];
  int v49 = v371[v48 ^ 0x65];
  LODWORD(v384) = (v27 - 9) | 0x128;
  uint64_t v389 = v38 ^ 0xC5602DF1 ^ (v384 - 1030) & 0xC5602BCC;
  LODWORD(v48) = (v48 ^ 0x15) + (v48 ^ 0xFFFFFFDF) + 1;
  v49 ^= 0x53u;
  int v50 = v48 + v49;
  *(void *)(v26 - 208) = 9;
  LODWORD(v48) = v48 & v49;
  uint64_t v51 = v47[v389];
  *(_DWORD *)(v26 - 220) = v50 - 2 * v48;
  LOBYTE(v388) = *(unsigned char *)(v30 + (v51 ^ 0x56));
  uint64_t v52 = v47[14];
  unsigned __int8 v53 = ((v52 ^ 0x75) + (v52 ^ 0xBF) + 1 - ((2 * ((v52 ^ 0x75) + (v52 ^ 0xBF) + 1)) & 0xA6) + 83) ^ v371[v52 ^ 5];
  LODWORD(v48) = v28[v47[11] ^ 0xCALL];
  int v387 = v48 ^ (((v48 >> 2) ^ (v48 >> 6) ^ 0xE)
              - ((2 * ((v48 >> 2) ^ (v48 >> 6) ^ 0xE)) & 0x66666666)
              + 51);
  LODWORD(v48) = v28[v47[15] ^ 0xE5];
  LODWORD(v44) = v28[v47[7] ^ 0x30];
  int v54 = v27;
  int v55 = v44 ^ 0x89 ^ (((v44 >> 2) ^ (v44 >> 6) ^ 0xE)
                    + (~(2 * ((v44 >> 2) ^ (v44 >> 6) ^ 0xE)) | 0x9B)
                    - 77);
  unint64_t v56 = (v48 ^ (((v48 >> 2) ^ (v48 >> 6) ^ 0xE)
                               - ((2 * ((v48 >> 2) ^ (v48 >> 6) ^ 0xE)) & 0x55)
                               + 42)) ^ 0x11u | ((v32[v47[13] ^ 0x47] ^ 0x6ALL) << 16) | ((unint64_t)(v388 ^ 0x8Fu) << 24) | ((v53 ^ 0xB9) << 8);
  uint64_t v57 = v47[2];
  int v58 = (v57 ^ 0x55)
      + (v57 ^ 0xFFFFFF9F)
      + 1
      + (v371[v57 ^ 0x25] ^ 0x53)
      - 2 * (((v57 ^ 0x55) + (v57 ^ 0xFFFFFF9F) + 1) & (v371[v57 ^ 0x25] ^ 0x53));
  uint64_t v59 = v47[10];
  int v60 = v371[v59 ^ 0xD6] ^ ((v59 ^ 0xA6)
                                                            + (v59 ^ 0x6C)
                                                            + 1
                                                            - ((2 * ((v59 ^ 0xA6) + (v59 ^ 0x6C) + 1)) & 0xA6)
                                                            + 83);
  LODWORD(v59) = v374[v47[3] ^ 0x72];
  int v61 = v59 ^ 0xA7 ^ (((v59 >> 2) ^ 0xE ^ (v59 >> 6))
                    - ((2 * ((v59 >> 2) ^ 0xE)) & 0x38)
                    - 100);
  int v62 = v54;
  int v63 = (char *)*(&off_26DE9F480 + v54 - 603) - 12;
  unint64_t v383 = v56;
  unsigned __int8 v64 = v56 ^ 0xFE;
  LODWORD(v59) = *(_DWORD *)&v63[4 * ((v56 ^ 0x435A4CFE) >> 16)];
  HIDWORD(v65) = v59 ^ 0x2C8F8B6B;
  LODWORD(v65) = v59 ^ 0x40000000;
  *(void *)(v26 - 216) = 0;
  unint64_t v66 = (char *)*(&off_26DE9F480 + (v54 ^ 0x39F)) - 4;
  uint64_t v381 = *(unsigned __int8 *)(v30 + (*v47 ^ 0xBBLL));
  int v67 = ((*(_DWORD *)&v66[4 * (v381 ^ 0x67)] - 45399465) >> 4) & 0x9EA3CED ^ (*(_DWORD *)&v66[4 * (v381 ^ 0x67)]
                                                                                          - 45399465) ^ (v65 >> 30);
  HIDWORD(v388) = v62;
  int v68 = (char *)*(&off_26DE9F480 + v62 - 263) - 4;
  LODWORD(v382) = v60;
  LODWORD(v37) = *(_DWORD *)&v68[4 * (v60 ^ 0xC9)];
  HIDWORD(v65) = v37 ^ 0x3D28FED3;
  LODWORD(v65) = ~v37;
  int v69 = (v65 >> 30) - 1086565167 - ((2 * (v65 >> 30)) & 0x7E78A9A2);
  uint64_t v70 = v47[1] ^ 0x26;
  unsigned int v71 = v67 ^ v69 ^ 0xF05114D7;
  if (v70 == 218) {
    unsigned int v71 = v67 ^ 0xB092BFF9;
  }
  unsigned int v72 = v69 ^ 0xBF3C54D1;
  int8x16_t v73 = (char *)*(&off_26DE9F480 + v62 - 697) - 12;
  HIDWORD(a23) = v55;
  unsigned int v74 = -786474903 * *(_DWORD *)&v73[4 * (v55 ^ 0x41)] + 1834067052;
  int v75 = (v74 >> 1) & 0x3CF974E ^ v74 ^ (v72 | v67);
  uint64_t v380 = v32[v70];
  int v76 = *(_DWORD *)&v63[4 * (v380 ^ 0x4B)];
  HIDWORD(v78) = v76 ^ 0x2C8F8B6B;
  LODWORD(v78) = v76 ^ 0x40000000;
  int v77 = v78 >> 30;
  int v79 = *(_DWORD *)&v68[4 * (v53 ^ 0xBE)];
  HIDWORD(v78) = v79 ^ 0x3D28FED3;
  LODWORD(v78) = ~v79;
  uint64_t v379 = *(unsigned __int8 *)(v30 + (v47[4] ^ 0x95));
  unsigned int v80 = v75 ^ (v71 ^ 0xB092BFF9) & v72;
  unsigned int v81 = *(_DWORD *)&v66[4 * (v379 ^ 0xB0)] - 45399465;
  int v82 = (v81 >> 4) & 0x9EA3CED ^ v81 ^ v77 ^ (v78 >> 30);
  uint64_t v378 = v32[v47[5] ^ 0x45];
  int v83 = *(_DWORD *)&v63[4 * (v378 ^ 3)];
  HIDWORD(v78) = v83 ^ 0x2C8F8B6B;
  LODWORD(v78) = v83 ^ 0x40000000;
  int v84 = v78 >> 30;
  HIDWORD(v382) = v58;
  int v85 = *(_DWORD *)&v68[4 * (v58 ^ 0xB)];
  HIDWORD(v78) = v85 ^ 0x3D28FED3;
  LODWORD(v78) = ~v85;
  int v86 = v78 >> 30;
  uint64_t v377 = *(unsigned __int8 *)(v30 + (v47[8] ^ 0x6ELL));
  unsigned int v87 = *(_DWORD *)&v66[4 * (v377 ^ 0x19)] - 45399465;
  int v88 = (v87 >> 4) & 0x9EA3CED ^ v87 ^ v84;
  unsigned int v89 = -786474903 * *(_DWORD *)&v73[4 * v64] + 1834067052;
  unsigned int v90 = v88 ^ v86 ^ v89 ^ (v89 >> 1) & 0x3CF974E;
  uint64_t v376 = v32[v47[*(void *)(v26 - 208)] ^ 0xD0];
  int v91 = *(_DWORD *)&v63[4 * (v376 ^ 0x77)];
  HIDWORD(v78) = v91 ^ 0x2C8F8B6B;
  LODWORD(v78) = v91 ^ 0x40000000;
  int v92 = v78 >> 30;
  int v93 = *(_DWORD *)&v68[4 * (*(_DWORD *)(v26 - 220) ^ 0x19)];
  HIDWORD(v78) = v93 ^ 0x3D28FED3;
  LODWORD(v78) = ~v93;
  unsigned int v94 = *(_DWORD *)&v66[4 * (v388 ^ 0x5A)] - 45399465;
  HIDWORD(v375) = v61;
  unsigned int v95 = -786474903 * *(_DWORD *)&v73[4 * (v61 ^ 0x46)] + 1834067052;
  unsigned int v96 = (v94 >> 4) & 0x9EA3CED ^ v94 ^ v92 ^ (v78 >> 30) ^ v95 ^ (v95 >> 1) & 0x3CF974E;
  int v97 = *(_DWORD *)&v63[4 * (((v96 ^ 0xDB77D7E3) >> (v90 & 0x10) >> (v90 & 0x10 ^ 0x10)) ^ 0x69)];
  HIDWORD(v78) = v97 ^ 0x2C8F8B6B;
  LODWORD(v78) = v97 ^ 0x40000000;
  int v98 = v78 >> 30;
  int v99 = *(_DWORD *)&v68[4 * (BYTE1(v90) ^ 0x1F)];
  HIDWORD(v78) = v99 ^ 0x3D28FED3;
  LODWORD(v78) = ~v99;
  LODWORD(v375) = v387 ^ 8;
  unsigned int v100 = -786474903 * *(_DWORD *)&v73[4 * (v387 ^ 0xA0)] + 1834067052;
  int v101 = v82 ^ v100 ^ (v100 >> 1) & 0x3CF974E;
  unsigned int v102 = *(_DWORD *)&v66[4 * (HIBYTE(v80) ^ 0xC6)] - 45399465;
  int v103 = (v102 >> 4) & 0x9EA3CED ^ v102 ^ v98;
  unsigned int v104 = -786474903 * *(_DWORD *)&v73[4 * (v101 ^ 0x50)] + 1834067052;
  int v105 = (v78 >> 30) ^ v104 ^ (v104 >> 1) & 0x3CF974E;
  int v106 = *(_DWORD *)&v63[4 * ((v80 ^ 0x509D5A00) >> 16)];
  HIDWORD(v78) = v106 ^ 0x2C8F8B6B;
  LODWORD(v78) = v106 ^ 0x40000000;
  int v107 = v78 >> 30;
  int v108 = *(_DWORD *)&v68[4 * (BYTE1(v96) ^ 0x9C)];
  HIDWORD(v78) = v108 ^ 0x3D28FED3;
  LODWORD(v78) = ~v108;
  int v109 = v78 >> 30;
  unsigned __int8 v110 = BYTE1(v101) ^ 0x7C;
  unsigned int v111 = v103 ^ v105;
  unsigned int v112 = *(_DWORD *)&v66[4 * ((v101 ^ 0x36027C7Bu) >> 24)] - 45399465;
  int v113 = *(_DWORD *)&v63[4 * (BYTE2(v101) ^ 0x6B)];
  HIDWORD(v78) = v113 ^ 0x2C8F8B6B;
  LODWORD(v78) = v113 ^ 0x40000000;
  int v114 = v78 >> 30;
  int v115 = (v112 >> 4) & 0x9EA3CED ^ v112 ^ v109;
  int v116 = *(_DWORD *)&v68[4 * ((unsigned __int16)(v80 ^ 0x5A00) >> 8)];
  HIDWORD(v78) = v116 ^ 0x3D28FED3;
  LODWORD(v78) = ~v116;
  unsigned int v117 = *(_DWORD *)&v66[4 * (HIBYTE(v90) ^ 0x31)] - 45399465;
  int v118 = (v117 >> 4) & 0x9EA3CED ^ v117 ^ v114;
  unsigned int v119 = -786474903 * *(_DWORD *)&v73[4 * (v96 ^ 0xC8)] + 1834067052;
  unsigned int v120 = v118 ^ v119 ^ (v78 >> 30) ^ (v119 >> 1) & 0x3CF974E;
  int v121 = *(_DWORD *)&v63[4 * (BYTE2(v90) ^ 0x31)];
  HIDWORD(v78) = v121 ^ 0x2C8F8B6B;
  LODWORD(v78) = v121 ^ 0x40000000;
  int v122 = v78 >> 30;
  int v123 = *(_DWORD *)&v68[4 * v110];
  HIDWORD(v78) = v123 ^ 0x3D28FED3;
  LODWORD(v78) = ~v123;
  unsigned int v124 = *(_DWORD *)&v66[4 * (HIBYTE(v96) ^ 0x4D)] - 45399465;
  unsigned int v125 = -786474903 * *(_DWORD *)&v73[4 * v80] + 1834067052;
  unsigned int v126 = (v124 >> 4) & 0x9EA3CED ^ v124 ^ (v78 >> 30) ^ v122 ^ v125 ^ (v125 >> 1) & 0x3CF974E;
  int v127 = *(_DWORD *)&v63[4 * (BYTE2(v126) ^ 0x4E)];
  HIDWORD(v78) = v127 ^ 0x2C8F8B6B;
  LODWORD(v78) = v127 ^ 0x40000000;
  int v128 = v78 >> 30;
  unsigned int v129 = -786474903 * *(_DWORD *)&v73[4 * (v90 ^ 0x48)] + 1834067052;
  int v130 = *(_DWORD *)&v68[4 * (BYTE1(v120) ^ 0xC6)];
  HIDWORD(v78) = v130 ^ 0x3D28FED3;
  LODWORD(v78) = ~v130;
  unsigned int v131 = v115 ^ v129 ^ v107 ^ (v129 >> 1) & 0x3CF974E;
  unsigned int v132 = *(_DWORD *)&v66[4 * (HIBYTE(v111) ^ 0x15)] - 45399465;
  int v133 = v128 ^ (v78 >> 30);
  int v134 = *(_DWORD *)&v63[4 * (BYTE2(v111) ^ 0x66)];
  int v135 = (v132 >> 4) & 0x9EA3CED ^ v132 ^ v133;
  HIDWORD(v78) = v134 ^ 0x2C8F8B6B;
  LODWORD(v78) = v134 ^ 0x40000000;
  int v136 = v78 >> 30;
  unsigned int v137 = -786474903 * *(_DWORD *)&v73[4 * (v131 ^ 0xEA)] + 1834067052;
  unsigned int v138 = v135 ^ v137 ^ (v137 >> 1) & 0x3CF974E;
  int v139 = *(_DWORD *)&v68[4 * (BYTE1(v126) ^ 0x26)];
  HIDWORD(v78) = v139 ^ 0x3D28FED3;
  LODWORD(v78) = ~v139;
  unsigned int v140 = *(_DWORD *)&v66[4 * (HIBYTE(v131) ^ 0xBE)] - 45399465;
  int v141 = (v140 >> 4) & 0x9EA3CED ^ v140 ^ v136 ^ (v78 >> 30);
  int v142 = *(_DWORD *)&v63[4 * (BYTE2(v131) ^ 0x97)];
  HIDWORD(v78) = v142 ^ 0x2C8F8B6B;
  LODWORD(v78) = v142 ^ 0x40000000;
  int v143 = v78 >> 30;
  unsigned int v144 = -786474903 * *(_DWORD *)&v73[4 * (v120 ^ 0x89) + 176 + 4 * ((2 * v120) & 0x56 ^ 0xFFFFFFED)]
       + 1834067052;
  unsigned int v145 = v141 ^ v144 ^ (v144 >> 1) & 0x3CF974E;
  int v146 = *(_DWORD *)&v68[4 * (BYTE1(v111) ^ 0x8A)];
  HIDWORD(v78) = v146 ^ 0x3D28FED3;
  LODWORD(v78) = ~v146;
  unsigned int v147 = *(_DWORD *)&v66[4 * (HIBYTE(v120) ^ 0x49)] - 45399465;
  int v148 = (v147 >> 4) & 0x9EA3CED ^ v147 ^ v143 ^ (v78 >> 30);
  unsigned int v149 = -786474903 * *(_DWORD *)&v73[4 * (v126 ^ 0x3A)] + 1834067052;
  int v150 = v148 ^ v149 ^ (v149 >> 1) & 0x3CF974E;
  int v151 = *(_DWORD *)&v66[4 * (HIBYTE(v126) ^ 0x32)];
  unsigned int v152 = ((2 * (v151 & 1)) ^ 2) & 0xFFFFFFFE | v151 & 1;
  unsigned int v153 = v151 - 45399465;
  BOOL v154 = ((v152 - 1) & (v153 >> 4)) == 0;
  int v155 = v152 | 0x70E42854;
  int v156 = 1894000726 - v152;
  if (v154) {
    int v156 = v155;
  }
  int v157 = *(_DWORD *)&v63[4 * (BYTE2(v120) ^ 0x3B)];
  HIDWORD(v159) = v157 ^ 0x2C8F8B6B;
  LODWORD(v159) = v157 ^ 0x40000000;
  int v158 = v159 >> 30;
  int v160 = *(_DWORD *)&v68[4 * (BYTE1(v131) ^ 0x83)];
  HIDWORD(v159) = v160 ^ 0x3D28FED3;
  LODWORD(v159) = ~v160;
  unsigned int v161 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v111 ^ 0xCE)];
  unsigned int v162 = (1081441679
        - (((v161 >> 1) ^ 0x8725751F) & 0x80070 | 0x40757D8F)
        + (((v161 >> 1) ^ 0x8725751F) & 0x4035150B | 0xBF8A8270)) ^ ((v161 >> 1) ^ 0x8725751F) & 0x43F28235;
  int v163 = v158 ^ v153 & 0xFFFFFFFE ^ (v159 >> 30) ^ v161 ^ (((v153 >> 4) & 0x9EA3CED) - 1894000725 + v156);
  unsigned int v164 = (v162 & 0xEFACCD55 ^ 0x40004814) + (v162 & 0x105332AA ^ 0x1003122B) - 1;
  unsigned int v165 = (v163 ^ 0xC5A64926 ^ ((((v163 ^ 0x137332BF ^ v164) + (v164 ^ 0xEC8CCD40) + 1) ^ -v163)
                             - 978958042
                             - ((2 * (((v163 ^ 0x137332BF ^ v164) + (v164 ^ 0xEC8CCD40) + 1) ^ -v163)) & 0x8B4C924C)))
       + (v164 ^ 0xEC8CCD40);
  unsigned int v166 = v165 - ((2 * v165) & 0xDD3B21BA) + 1855819997;
  unsigned int v167 = v166 ^ 0x5B899ED4;
  int v168 = *(_DWORD *)&v63[4 * ((v166 ^ 0x5B899ED4) >> 16)];
  HIDWORD(v159) = v168 ^ 0x2C8F8B6B;
  LODWORD(v159) = v168 ^ 0x40000000;
  int v169 = v159 >> 30;
  int v170 = *(_DWORD *)&v68[4 * (BYTE1(v150) ^ 0xE0)];
  HIDWORD(v159) = v170 ^ 0x3D28FED3;
  LODWORD(v159) = ~v170;
  unsigned int v171 = *(_DWORD *)&v66[4 * (HIBYTE(v138) ^ 0x59)] - 45399465;
  unsigned int v172 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v145 ^ 0x9E)];
  unsigned int v173 = (v171 >> 4) & 0x9EA3CED ^ v171 ^ (v159 >> 30) ^ v172 ^ (v172 >> 1) & 0x3CF974E ^ v169;
  int v174 = *(_DWORD *)&v66[4 * (HIBYTE(v145) ^ 0xE5)] - 45399465;
  LOBYTE(v169) = v138 ^ 0x48;
  int v175 = *(_DWORD *)&v63[4 * ((v138 ^ 0xCF5F1448) >> 16)];
  HIDWORD(v159) = v175 ^ 0x2C8F8B6B;
  LODWORD(v159) = v175 ^ 0x40000000;
  int v176 = v159 >> 30;
  int v177 = *(_DWORD *)&v68[4 * (BYTE1(v166) ^ 0xD5)];
  HIDWORD(v159) = v177 ^ 0x3D28FED3;
  LODWORD(v159) = ~v177;
  int v178 = v159 >> 30;
  unsigned int v179 = v176 ^ v174 ^ ((v174 & 0x9EA3CED9) >> (v86 & 4) >> (v86 & 4 ^ 4));
  unsigned int v180 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v150 ^ 0xF2)];
  int v181 = v179 ^ v180 ^ (v180 >> 1) & 0x3CF974E;
  int v182 = *(_DWORD *)&v63[4 * (BYTE2(v145) ^ 0x90)];
  HIDWORD(v159) = v182 ^ 0x2C8F8B6B;
  LODWORD(v159) = v182 ^ 0x40000000;
  int v183 = v159 >> 30;
  int v184 = *(_DWORD *)&v68[4 * (BYTE1(v138) ^ 0x5F)];
  HIDWORD(v159) = v184 ^ 0x3D28FED3;
  LODWORD(v159) = ~v184;
  unsigned int v185 = v181 ^ v178;
  unsigned int v186 = *(_DWORD *)&v66[4 * ((v150 ^ 0xB9CDABD9) >> 24)] - 45399465;
  unsigned int v187 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * ~(_BYTE)v166];
  unsigned int v188 = (v186 >> 4) & 0x9EA3CED ^ v186 ^ (v159 >> 30) ^ v183 ^ v187 ^ (v187 >> 1) & 0x3CF974E;
  int v189 = *(_DWORD *)&v63[4 * ((v150 ^ 0xB9CDABD9) >> 16)];
  HIDWORD(v159) = v189 ^ 0x2C8F8B6B;
  LODWORD(v159) = v189 ^ 0x40000000;
  int v190 = v159 >> 30;
  int v191 = *(_DWORD *)&v68[4 * ((unsigned __int16)(v145 ^ 0xACB5) >> 8)];
  HIDWORD(v159) = v191 ^ 0x3D28FED3;
  LODWORD(v159) = ~v191;
  unsigned int v192 = *(_DWORD *)&v66[4 * HIBYTE(v167)] - 45399465;
  int v193 = v190 ^ v192 ^ (v159 >> 30) ^ (v192 >> 4) & 0x9EA3CED;
  unsigned int v194 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * v169];
  unsigned int v195 = v193 ^ v194 ^ (v194 >> 1) & 0x3CF974E;
  int v196 = *(_DWORD *)&v63[4 * (BYTE2(v195) ^ 0xB8)];
  HIDWORD(v159) = v196 ^ 0x2C8F8B6B;
  LODWORD(v159) = v196 ^ 0x40000000;
  int v197 = v159 >> 30;
  int v198 = *(_DWORD *)&v68[4 * (BYTE1(v188) ^ 0xE9)];
  HIDWORD(v159) = v198 ^ 0x3D28FED3;
  LODWORD(v159) = ~v198;
  int v199 = v159 >> 30;
  unsigned int v200 = *(_DWORD *)&v66[4 * (HIBYTE(v173) ^ 0xDC)] - 45399465;
  int v201 = (v200 >> 4) & 0x9EA3CED ^ v200 ^ v197;
  int v202 = *(_DWORD *)&v63[4 * (BYTE2(v173) ^ 0xE9)];
  HIDWORD(v159) = v202 ^ 0x2C8F8B6B;
  LODWORD(v159) = v202 ^ 0x40000000;
  int v203 = v159 >> 30;
  int v204 = v201 ^ v199;
  unsigned int v205 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v185 ^ 0x6C)];
  int v206 = *(_DWORD *)&v68[4 * (((v195 ^ 0x54D14B41) >> (v193 & 8) >> (v193 & 8 ^ 8)) ^ 0x4B)];
  unsigned int v207 = v204 ^ v205 ^ (v205 >> 1) & 0x3CF974E;
  HIDWORD(v159) = v206 ^ 0x3D28FED3;
  LODWORD(v159) = ~v206;
  unsigned int v208 = *(_DWORD *)&v66[4 * (HIBYTE(v185) ^ 0xF2)] - 45399465;
  int v209 = (v208 >> 4) & 0x9EA3CED ^ v208 ^ v203;
  unsigned int v210 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v188 ^ 0xD6)];
  int v211 = v209 ^ v210 ^ (v159 >> 30);
  int v212 = (v210 >> 1) & 0x3CF974E;
  int v213 = *(_DWORD *)&v63[4 * (BYTE2(v185) ^ 0xAE)];
  unsigned int v214 = v211 ^ v212;
  HIDWORD(v159) = v213 ^ 0x2C8F8B6B;
  LODWORD(v159) = v213 ^ 0x40000000;
  unsigned int v215 = *(_DWORD *)&v66[4 * (HIBYTE(v188) ^ 0x12)] - 45399465;
  int v216 = (v159 >> 30) ^ v215 ^ (v215 >> 4) & 0x9EA3CED;
  int v217 = *(_DWORD *)&v68[4 * (BYTE1(v173) ^ 0x6D)];
  unsigned int v218 = (4 * v217) ^ 0xF4A3FB4C;
  int v219 = v216 | v218;
  unsigned int v220 = v216 & v218 & 0xFFFFFFFC | (~v217 >> 30);
  unsigned int v221 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v195 ^ 0x6A)];
  unsigned int v222 = v219 ^ v221 ^ v220 ^ (v221 >> 1) & 0x3CF974E;
  unsigned int v223 = *(_DWORD *)&v66[4 * (HIBYTE(v195) ^ 0xC2)] - 45399465;
  int v224 = *(_DWORD *)&v68[4 * (BYTE1(v185) ^ 0x56)];
  unsigned int v225 = v223 ^ __ROR4__(*(_DWORD *)&v63[4 * (BYTE2(v188) ^ 0x3C)], 30) ^ (v223 >> 4) & 0x9EA3CED ^ (4 * v224) ^ (~v224 >> 30);
  unsigned int v226 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v173 ^ 0xCC)];
  unsigned int v227 = v225 ^ v226 ^ (v226 >> 1) & 0x3CF974E;
  int v228 = *(_DWORD *)&v63[4 * (BYTE2(v227) ^ 0x78)];
  HIDWORD(v159) = v228 ^ 0x2C8F8B6B;
  LODWORD(v159) = v228 ^ 0x40000000;
  int v229 = v159 >> 30;
  int v230 = *(_DWORD *)&v68[4 * (BYTE1(v222) ^ 0x1A)];
  HIDWORD(v159) = v230 ^ 0x3D28FED3;
  LODWORD(v159) = ~v230;
  int v231 = *(_DWORD *)&v66[4 * (HIBYTE(v214) ^ 0x60)];
  unsigned int v232 = *(_DWORD *)&v66[4 * (HIBYTE(v207) ^ 0x96)] - 45399465;
  int v233 = v229 ^ v232 ^ (v232 >> 4) & 0x9EA3CED;
  unsigned int v234 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v214 ^ 0x1A)];
  unsigned int v235 = v233 ^ (v159 >> 30) ^ v234 ^ (v234 >> 1) & 0x3CF974E;
  unsigned int v236 = v231 - ((2 * v231 + 43418798) & 0x4CE24F0) + 2142393551;
  unsigned int v237 = ((v236 >> 4) ^ 0x8267127) & 0x922100D ^ v236 & 0xF936521F | ((v236 >> 4) ^ 0x8267127) & 0xC82CE0 ^ v236 & 0x6C9ADE0;
  int v238 = *(_DWORD *)&v63[4 * (BYTE2(v207) ^ 0xCC)];
  int v239 = *(_DWORD *)&v68[4 * (BYTE1(v227) ^ 0x9A)];
  HIDWORD(v159) = v239 ^ v238 ^ 0x11A775B8;
  LODWORD(v159) = v238 ^ v239 ^ 0x80000000;
  unsigned int v240 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * v222];
  int v241 = (v159 >> 30) ^ v240 ^ (v240 >> 1) & 0x3CF974E;
  int v242 = *(_DWORD *)&v66[4 * (HIBYTE(v222) ^ 0xAE)];
  unsigned int v243 = ((2 * v242 + 425104634) & 0x613FEFB4) + ((v242 - 861189507) ^ 0x309FF7DA);
  int v244 = *(_DWORD *)&v63[4 * ((v214 ^ 0xF626D51A) >> 16)];
  int v245 = *(_DWORD *)&v68[4 * (BYTE1(v207) ^ 0x43)];
  HIDWORD(v159) = v245 ^ 0x3D28FED3 ^ v244 ^ 0x2C8F8B6B;
  LODWORD(v159) = v244 ^ v245 ^ 0x80000000;
  int v246 = v159 >> 30;
  int v247 = *(_DWORD *)&v63[4 * (BYTE2(v222) ^ 0xF3)];
  HIDWORD(v159) = v247 ^ 0x2C8F8B6B;
  LODWORD(v159) = v247 ^ 0x40000000;
  int v248 = v159 >> 30;
  int v249 = *(_DWORD *)&v68[4 * (BYTE1(v214) ^ 0x9E)];
  HIDWORD(v159) = v249 ^ 0x3D28FED3;
  LODWORD(v159) = ~v249;
  unsigned int v250 = *(_DWORD *)&v66[4 * (HIBYTE(v227) ^ 0xD8)] - 45399465;
  unsigned int v251 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v207 ^ 0x42)];
  unsigned int v252 = (v250 >> 4) & 0x9EA3CED ^ v250 ^ v248 ^ (v159 >> 30) ^ v251 ^ (v251 >> 1) & 0x3CF974E;
  unsigned int v253 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v227 ^ 0xE7)];
  int v254 = *(_DWORD *)&v63[4 * (BYTE2(v252) ^ 0x77)];
  int v255 = v246 ^ v243 ^ v253 ^ (v243 >> 4) & 0x9EA3CED;
  HIDWORD(v159) = v254 ^ 0x2C8F8B6B;
  LODWORD(v159) = v254 ^ 0x40000000;
  int v256 = v159 >> 30;
  unsigned int v257 = v255 ^ (v253 >> 1) & 0x3CF974E;
  int v258 = *(_DWORD *)&v68[4 * (BYTE1(v257) ^ 0x21)];
  HIDWORD(v159) = v258 ^ 0x3D28FED3;
  LODWORD(v159) = ~v258;
  unsigned int v259 = v241 ^ v237;
  unsigned int v260 = *(_DWORD *)&v66[4 * (HIBYTE(v235) ^ 0xF5)] - 45399465;
  int v261 = (v260 >> 4) & 0x9EA3CED ^ v260 ^ v256 ^ (v159 >> 30);
  unsigned int v262 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v259 ^ 0x9A)];
  unsigned int v263 = v261 ^ v262 ^ (v262 >> 1) & 0x3CF974E;
  int v264 = *(_DWORD *)&v63[4 * (BYTE2(v235) ^ 0x32)];
  HIDWORD(v159) = v264 ^ 0x2C8F8B6B;
  LODWORD(v159) = v264 ^ 0x40000000;
  int v265 = v159 >> 30;
  int v266 = *(_DWORD *)&v68[4 * (BYTE1(v252) ^ 0xF3)];
  HIDWORD(v159) = v266 ^ 0x3D28FED3;
  LODWORD(v159) = ~v266;
  unsigned int v267 = *(_DWORD *)&v66[4 * (HIBYTE(v259) ^ 0x3A)] - 45399465;
  unsigned int v268 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v257 ^ 0xA0)];
  int v269 = (v267 >> 4) & 0x9EA3CED ^ v267 ^ v265 ^ (v159 >> 30) ^ v268 ^ (v268 >> 1) & 0x3CF974E;
  int v270 = *(_DWORD *)&v63[4 * (BYTE2(v259) ^ 0xEC)];
  HIDWORD(v159) = v270 ^ 0x2C8F8B6B;
  LODWORD(v159) = v270 ^ 0x40000000;
  int v271 = v159 >> 30;
  int v272 = *(_DWORD *)&v68[4 * (BYTE1(v235) ^ 0xD0)];
  HIDWORD(v159) = v272 ^ 0x3D28FED3;
  LODWORD(v159) = ~v272;
  int v273 = *(_DWORD *)&v66[4 * (HIBYTE(v252) ^ 0x7E)];
  unsigned int v274 = ((2 * v273 + 425104634) & 0x613FEFB4) + ((v273 - 861189507) ^ 0x309FF7DA);
  unsigned int v275 = *(_DWORD *)&v66[4 * (HIBYTE(v257) ^ 0x80)] - 45399465;
  int v276 = (v275 >> 4) & 0x9EA3CED ^ v275 ^ (v159 >> 30) ^ v271;
  unsigned int v277 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v252 ^ 0xBC)];
  int v278 = *(_DWORD *)&v63[4 * (BYTE2(v257) ^ 0xB4)];
  int v279 = *(_DWORD *)&v68[4 * (BYTE1(v259) ^ 0x6A)];
  HIDWORD(v159) = v279 ^ v278 ^ 0x11A775B8;
  LODWORD(v159) = v278 ^ v279 ^ 0x80000000;
  unsigned int v280 = v276 ^ v277 ^ (v277 >> 1) & 0x3CF974E;
  unsigned int v281 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v235 ^ 0x5D)];
  unsigned int v282 = (v159 >> 30) ^ v274 ^ v281 ^ (v274 >> 4) & 0x9EA3CED ^ (v281 >> 1) & 0x3CF974E;
  int v283 = *(_DWORD *)&v68[4 * (BYTE1(v280) ^ 0xFC)];
  HIDWORD(v159) = v283 ^ 0x3D28FED3;
  LODWORD(v159) = ~v283;
  BYTE1(v278) = BYTE1(v269) ^ 0xD;
  unsigned int v284 = *(_DWORD *)&v66[4 * (HIBYTE(v263) ^ 0xA8)] - 45399465;
  int v285 = v284 ^ __ROR4__(*(_DWORD *)&v63[4 * (BYTE2(v282) ^ 0xA2)], 30) ^ (v284 >> 4) & 0x9EA3CED;
  unsigned int v286 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v269 ^ 5)];
  unsigned int v287 = v285 ^ (v159 >> 30) ^ v286 ^ (v286 >> 1) & 0x3CF974E;
  int v288 = *(_DWORD *)&v63[4 * (BYTE2(v263) ^ 0x95)];
  HIDWORD(v159) = v288 ^ 0x2C8F8B6B;
  LODWORD(v159) = v288 ^ 0x40000000;
  int v289 = v159 >> 30;
  int v290 = *(_DWORD *)&v68[4 * (BYTE1(v282) ^ 0x77)];
  HIDWORD(v159) = v290 ^ 0x3D28FED3;
  LODWORD(v159) = ~v290;
  unsigned int v291 = *(_DWORD *)&v66[4 * (((v269 ^ 0x95B10D2E) >> 24) - (((v269 ^ 0x95B10D2E) >> 23) & 0x12C)) + 600] - 45399465;
  unsigned int v292 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v280 ^ 0xF8)];
  unsigned int v293 = (v291 >> 4) & 0x9EA3CED ^ v291 ^ v289 ^ (v159 >> 30) ^ v292 ^ (v292 >> 1) & 0x3CF974E;
  int v294 = *(_DWORD *)&v63[4 * (BYTE2(v269) ^ 0xD8)];
  HIDWORD(v159) = v294 ^ 0x2C8F8B6B;
  LODWORD(v159) = v294 ^ 0x40000000;
  int v295 = v159 >> 30;
  int v296 = *(_DWORD *)&v68[4 * (BYTE1(v263) ^ 0x7C)];
  HIDWORD(v159) = v296 ^ 0x3D28FED3;
  LODWORD(v159) = ~v296;
  unsigned int v297 = *(_DWORD *)&v66[4 * (HIBYTE(v280) ^ 0x76)] - 45399465;
  unsigned int v298 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v282 ^ 0xA6)];
  unsigned int v299 = (v297 >> 4) & 0x9EA3CED ^ v297 ^ v295 ^ (v159 >> 30) ^ v298 ^ (v298 >> 1) & 0x3CF974E;
  unsigned int v300 = *(_DWORD *)&v66[4 * (HIBYTE(v282) ^ 0xB0)] - 45399465;
  int v301 = *(_DWORD *)&v63[4 * (BYTE2(v280) ^ 0x5E)];
  HIDWORD(v159) = v301 ^ 0x2C8F8B6B;
  LODWORD(v159) = v301 ^ 0x40000000;
  HIDWORD(v159) = v159 >> 30;
  LODWORD(v159) = HIDWORD(v159);
  int v302 = (v159 >> 22) ^ __ROR4__((v300 >> 4) & 0x9EA3CED ^ v300, 22);
  int v303 = *(_DWORD *)&v68[4 * BYTE1(v278)];
  HIDWORD(v159) = v303 ^ 0x3D28FED3;
  LODWORD(v159) = ~v303;
  unsigned int v304 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v263 ^ 0x4B)];
  unsigned int v305 = v304 ^ (v159 >> 30) ^ __ROR4__(v302 ^ 0x6F05017, 10) ^ (v304 >> 1) & 0x3CF974E;
  int v306 = *(_DWORD *)&v63[4 * (BYTE2(v305) ^ 0x5C)];
  HIDWORD(v159) = v306 ^ 0x2C8F8B6B;
  LODWORD(v159) = v306 ^ 0x40000000;
  int v307 = v159 >> 30;
  int v308 = *(_DWORD *)&v68[4 * (BYTE1(v299) ^ 0x54)];
  HIDWORD(v159) = v308 ^ 0x3D28FED3;
  LODWORD(v159) = ~v308;
  unsigned int v309 = (v293 ^ 0x73459FDF) >> ((v293 ^ 0xDF) & 8) >> ((v293 ^ 0xDF) & 8 ^ 8);
  unsigned int v310 = *(_DWORD *)&v66[4 * (HIBYTE(v287) ^ 0xFD)] - 45399465;
  int v311 = (v310 >> 4) & 0x9EA3CED ^ v310 ^ (v159 >> 30);
  unsigned int v312 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v293 ^ 0xF4)];
  int v313 = *(_DWORD *)&v63[4 * (BYTE2(v287) ^ 0xAC)];
  HIDWORD(v159) = v313 ^ 0x2C8F8B6B;
  LODWORD(v159) = v313 ^ 0x40000000;
  int v314 = v159 >> 30;
  unsigned int v315 = v311 ^ v312 ^ v307 ^ (v312 >> 1) & 0x3CF974E;
  int v316 = *(_DWORD *)&v68[4 * (BYTE1(v305) ^ 0x92)];
  HIDWORD(v159) = v316 ^ 0x3D28FED3;
  LODWORD(v159) = ~v316;
  int v317 = v159 >> 30;
  unsigned int v318 = *(_DWORD *)&v66[4 * (HIBYTE(v293) ^ 0xE5)] - 45399465;
  int v319 = (v318 >> 4) & 0x9EA3CED ^ v318 ^ v314;
  int v320 = *(_DWORD *)&v63[4 * (BYTE2(v293) ^ 0x2C)];
  HIDWORD(v159) = v320 ^ 0x2C8F8B6B;
  LODWORD(v159) = v320 ^ 0x40000000;
  int v321 = v159 >> 30;
  unsigned int v322 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v299 ^ 0x47)];
  int v323 = v319 ^ v322 ^ v317;
  int v324 = (v322 >> 1) & 0x3CF974E;
  LODWORD(v388) = v287;
  int v325 = *(_DWORD *)&v68[4 * (BYTE1(v287) ^ 0xD6)];
  unsigned int v326 = v323 ^ v324;
  HIDWORD(v159) = v325 ^ 0x3D28FED3;
  LODWORD(v159) = ~v325;
  unsigned int v327 = *(_DWORD *)&v66[4 * (HIBYTE(v299) ^ 0x3B)] - 45399465;
  int v328 = (v327 >> 4) & 0x9EA3CED ^ v327 ^ v321 ^ (v159 >> 30);
  unsigned int v329 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v305 ^ 0xF0)];
  unsigned int v330 = v328 ^ v329 ^ (v329 >> 1) & 0x3CF974E;
  int v331 = *(_DWORD *)&v63[4 * (BYTE2(v299) ^ 0xE7)];
  HIDWORD(v159) = v331 ^ 0x2C8F8B6B;
  LODWORD(v159) = v331 ^ 0x40000000;
  int v332 = *(_DWORD *)&v68[4 * (v309 ^ 0x4B)];
  unsigned int v333 = *(_DWORD *)&v66[4 * (HIBYTE(v305) ^ 0x8D)] - 45399465;
  unsigned int v334 = 1834067052 - 786474903 * *(_DWORD *)&v73[4 * (v287 ^ 0xEF)];
  unsigned int v335 = (v333 >> 4) & 0x9EA3CED ^ v333 ^ (v159 >> 30) ^ (~v332 >> 30) ^ (4 * v332) ^ v334 ^ (v334 >> 1) & 0x3CF974E;
  uint64_t v336 = (uint64_t)*(&off_26DE9F480 + v62 - 404);
  int v337 = *(_DWORD *)(v336 + 4 * (HIBYTE(v315) ^ 8));
  int v338 = (-347088973 * v337 - 606647114) ^ (-1388355892 * v337 + 671378424);
  unsigned int v339 = v335 ^ 0x29BB776B;
  v340 = (char *)*(&off_26DE9F480 + (v62 ^ 0x36B)) - 4;
  unsigned int v341 = (v338 - 196230590 - ((2 * v338) & 0xE89B8484)) ^ *(_DWORD *)&v340[4
                                                                         * ((((v335 ^ 0x29BB776B) >> 16) | 0x48) ^ ((v335 ^ 0x29BB776B) >> 16) & 0x48)];
  LODWORD(v386) = 2 * ((v330 >> 8) ^ 0x90E176);
  HIDWORD(v386) = BYTE1(v330) ^ 0x76;
  v342 = (char *)*(&off_26DE9F480 + v62 - 266) - 4;
  int v343 = (v341 + 546566665 - ((2 * v341) & 0x4127E412)) ^ *(_DWORD *)&v342[4 * (HIDWORD(v386) - (v386 & 0x160)) + 704];
  int v344 = *(_DWORD *)(v336 + 4 * (HIBYTE(v326) ^ 0xE4));
  int v345 = *(_DWORD *)(v336 + 4 * (HIBYTE(v330) ^ 0x90));
  LODWORD(v336) = *(_DWORD *)(v336 + 4 * (HIBYTE(v335) ^ 9));
  v346 = v47;
  HIDWORD(v384) = *(_DWORD *)&v340[4 * (BYTE2(v315) ^ 0x6F)];
  unsigned int v347 = v343 - 607312848 - ((2 * v343) & 0xB79A4860);
  HIDWORD(v385) = *(_DWORD *)&v340[4 * (BYTE2(v326) ^ 0x94)];
  LODWORD(v336) = (671378424 - 1388355892 * v336) ^ (-606647114 - 347088973 * v336);
  int v348 = ((unsigned __int16)(v335 ^ 0x776B) >> 8);
  int v349 = *(_DWORD *)&v342[4 * (v348 ^ 0xB0)];
  uint64_t v350 = (v315 >> 8) ^ 0x86FF3;
  LODWORD(v385) = *(_DWORD *)&v342[4 * (BYTE1(v315) ^ 0x43)];
  int v351 = *(_DWORD *)&v340[4 * (BYTE2(v330) ^ 0xE1)] ^ (BYTE1(v326) + 546566665 - ((v326 >> 7) & 0x12)) ^ *(_DWORD *)&v342[4 * (BYTE1(v326) ^ 0x69)] ^ (v336 - 196230590 - ((2 * v336) & 0xE89B8484));
  v352 = (char *)*(&off_26DE9F480 + v62 - 691) - 12;
  int v353 = *(_DWORD *)&v352[4 * (v330 ^ 0x63)];
  int v354 = *(_DWORD *)&v352[4 * (v335 ^ 0x3F)];
  uint64_t v355 = *(_DWORD *)&v352[4 * (v326 ^ 0x66)] ^ *(_DWORD *)(v26 - 248) ^ v347;
  unsigned int v356 = *(_DWORD *)&v352[4 * (v315 ^ 0xCC)] ^ *(_DWORD *)(v26 - 244) ^ (v351
                                                                                        - 607312848
                                                                                        - ((2 * v351) & 0xB79A4860));
  v357 = (char *)*(&off_26DE9F480 + (v62 ^ 0x222)) - 4;
  v346[*(void *)(v26 - 216)] = (5 - 27 * v357[BYTE3(v355) ^ 0xE9]) ^ 0x65;
  uint64_t v358 = (uint64_t)*(&off_26DE9F480 + (v62 ^ 0x3BC));
  v346[15] = *(unsigned char *)(v358 + (v356 ^ 0x71)) ^ 0x6D ^ (*(unsigned char *)(v358
                                                                                    + (v356 ^ 0x71)) >> 2) & 0x1A;
  LOBYTE(v347) = -77 * v344;
  int v359 = (-347088973 * v344 - 606647114) ^ (671378424 - 1388355892 * v344);
  int v360 = v349 ^ HIDWORD(v384) ^ (v348 + 546566665 - ((v339 >> 7) & 0x12)) ^ (v359
                                                                           - 196230590
                                                                           - 2 * (v359 & 0x744DC243 ^ v347 & 1));
  unsigned int v361 = v353 ^ *(_DWORD *)(v26 - 240) ^ (v360 - 607312848 - ((2 * v360) & 0xB79A4860));
  uint64_t v362 = (uint64_t)*(&off_26DE9F480 + v62 - 674);
  v346[5] = *(unsigned char *)(v362 + (BYTE2(v361) ^ 0x47)) ^ 5;
  v346[13] = *(unsigned char *)(v362 + (BYTE2(v356) ^ 0x52)) ^ 0xF7;
  int v363 = (671378424 - 1388355892 * v345) ^ (-347088973 * v345 - 606647114);
  int v364 = HIDWORD(v385) ^ ((BYTE1(v315) ^ 0xF3) + 546566665 - ((2 * v350) & 0x12)) ^ v385 ^ (v363
                                                                                          - 196230590
                                                                                          - ((2 * v363) & 0xE89B8484));
  uint64_t v365 = v354 ^ *(_DWORD *)(v26 - 236) ^ (v364 - 607312848 - ((2 * v364) & 0xB79A4860));
  v346[8] = (5 - 27 * v357[BYTE3(v365) ^ 0x1CLL]) ^ 0xCB;
  v346[4] = (5 - 27 * v357[HIBYTE(v361) ^ 0xB6]) ^ 0x98;
  unsigned int v366 = *(unsigned __int8 *)(v358 + (v361 ^ 0xCCLL));
  int v367 = (v366 >> 2) & 0x1A ^ v366;
  LOBYTE(v309) = ((v367 ^ 0x90) - 107) ^ ((v367 ^ 4) + 1);
  v346[7] = (v367 ^ 0xCE ^ (v309 - ((2 * v309) & 0x6A) + 53)) - 108;
  v346[*(void *)(v26 - 208)] = *(unsigned char *)(v362
                                          + (((((BYTE2(v365) ^ 0x47) + (BYTE2(v365) ^ 0xFFFFFF79) + 1) ^ 0xFFFFFFFE)
                                            + (BYTE2(v365) ^ 0x47)) ^ 0x5ELL)) ^ 0x70;
  v346[v389] = (5 - 27 * v357[HIBYTE(v356) ^ 0xB6]) ^ 0x4F;
  v346[11] = *(unsigned char *)(v358 + (v365 ^ 0xE7)) ^ 0xC9 ^ (*(unsigned char *)(v358
                                                                                    + (v365 ^ 0xE7)) >> 2) & 0x1A;
  v368 = (char *)*(&off_26DE9F480 + v62 - 341) - 12;
  v346[14] = v368[BYTE1(v356) ^ 0x24] ^ 0x4A;
  unsigned int v369 = *(unsigned __int8 *)(v358 + ((v355 ^ (BYTE4(v386) - (v386 & 0x1C) + 14)) ^ 0x6FLL));
  v346[3] = v369 ^ 0xD0 ^ (v369 >> 2) & 0x1A;
  v346[6] = v368[BYTE1(v361) ^ 0xBBLL] ^ 0x2E;
  v346[1] = *(unsigned char *)(v362
                     + (((unint64_t)(v355 ^ (HIDWORD(v386)
                                                                                 - (v386 & 0x1C)
                                                                                 + 744803598) ^ 0xDC15B5F8) >> (v388 & 0x10) >> (v388 & 0x10 ^ 0x10)) ^ 0x61)) ^ 0x94;
  v346[10] = v368[BYTE1(v365) ^ 0x3BLL] ^ 0x38;
  v346[2] = v368[BYTE1(v355) ^ 0xACLL] ^ 0xDC;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 232) + 8 * ((3064 * (((*(void *)(v26 - 216) - 983553076 - ((2 * *(void *)(v26 - 216) + 32) & 0x8AC05798) + 16) ^ 0xC5602BCC) < HIDWORD(a11))) ^ v62)))(v358, 546566665, 2906611404, v350, v365, 26, v355, 4294967269, a9, a10, a11, v371, v372, v373, v374, a16, v375, v376, v377,
           v378,
           v379,
           v380,
           a23,
           v381,
           v382,
           v383,
           v384,
           v385,
           v386,
           v388,
           5,
           8,
           4,
           1,
           3,
           15);
}

uint64_t sub_22B32C3B8@<X0>(int a1@<W8>)
{
  int v3 = (((*(uint64_t (**)(void, uint64_t))(v2 + 8 * (a1 + 598)))(v1 ^ 0xDBFEEC4B, 3166943530) == 0)
      * (((a1 - 3160) ^ 0x4FE) - 1477)) ^ (a1 + 127);
  return (*(uint64_t (**)(void))(v2 + 8 * v3))();
}

uint64_t sub_22B32C420@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v11 = a2 + 2;
  uint64_t v12 = v3 - 2;
  *(unsigned char *)(v12 + v8) = ((v4 + v11) ^ v9) * (v7 + v11);
  *(unsigned char *)(v12 + 903) = ((v6 + v11) ^ v9) * (v5 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v11 != 126) * a1) ^ v2)))();
}

uint64_t sub_22B32C42C@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v8 = (a1 - 1138) | 0x468;
  uint64_t v9 = v3 - v5 + ((v8 - 743) ^ (a2 + 638));
  *(void *)(v2 - 7 + v9) = *(void *)(v6 - 7 + v9);
  return (*(uint64_t (**)(void))(v7 + 8 * ((26 * (((v8 - 1393) & v4) - v5 != 8)) ^ v8)))();
}

uint64_t sub_22B32C494(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  long long v11 = *(_OWORD *)(v8 + (a2 - 1161873834) - 31);
  uint64_t v12 = v9 + (a2 - 1161873834);
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v8 + (a2 - 1161873834) - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((2618 * (((47 * (a7 ^ (a4 + 2768))) ^ 0x187) == (v10 & 0xFFFFFFE0))) ^ (a7 - 1694849892))))();
}

uint64_t sub_22B32C50C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 3132)))();
  unint64_t v4 = STACK[0x270];
  LODWORD(STACK[0x530]) = v1;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((v1 == (((v0 - 848) | 0xC11) ^ 0xDBFEE018)) * ((v0 ^ 0xFC1) + 316)) ^ v0)))(v3);
}

uint64_t sub_22B32C568@<X0>(int a1@<W0>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,arg30_22B32C568 a30)
{
  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a30.arr[4];
  return (*(uint64_t (**)(void))(v32
                              + 8 * (((((v31 + 1) & 0x1FFFFFFF0) == 16) * (((v30 - 271) | 0x211) + 2561)) ^ v30)))();
}

uint64_t sub_22B32C5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7 = *(_DWORD *)(*(void *)(a1 + 8) - 0x1C88CB57747EAEE5);
  uint64_t v8 = (((v6 + 2039) | 1) ^ 0x982) & v7 ^ 0xE3BF76FA;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v5
                                                                               + 8
                                                                               * ((2464
                                                                                 * (a4
                                                                                  - 1172544378
                                                                                  + v8
                                                                                  + ((2 * v7) & 0x46 ^ 2) < ((v6 - 381) | 0x600u) - 1672)) ^ v6)))(a1, v8, (2 * v7) & 0x46 ^ 2u, a4, a5);
}

uint64_t sub_22B32C65C()
{
  return v0();
}

uint64_t sub_22B32C664()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((190
                                * (((v1 + 592 + v1 - 1007 - 1467471376) ^ v0)
                                 - 604414524
                                 + ((2 * v0) & 0x5E6D7BDE ^ 0xE6D1140) == 187702195)) ^ v1)))();
}

uint64_t sub_22B32C6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  BOOL v22 = ((((v18 - 63) & a17) + ~(_BYTE)v19 + 1) & 0xF) != 0
     || ((v18 - 304097343) & a17) + (v19 ^ 0x76EFEEFF) == 1995435775;
  return (*(uint64_t (**)(void))(v20 + 8 * ((231 * ((v22 ^ (v17 + 93) ^ 0xE7) & 1)) ^ v17)))();
}

uint64_t sub_22B32C740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v50 = v49 - 152;
  *(_DWORD *)(v49 - 144) = (v46 + 1935317155) ^ (1328090399
                                               * ((((v49 - 152) | 0x70CE724A) - ((v49 - 152) & 0x70CE724A)) ^ 0x8F1D1670));
  v48[393] = v47;
  (*(void (**)(uint64_t))(a6 + 8 * (v46 + 795)))(v49 - 152);
  unsigned int v51 = 1503746353 * ((((2 * v50) | 0x9ED3498A) - v50 + 815160123) ^ 0xE9086673);
  v48[395] = v47;
  *(_DWORD *)(v49 - 128) = v46 - 1572 - v51;
  *(_DWORD *)(v49 - 152) = v51 + 1331781556;
  v48[394] = (char *)*(&off_26DE9F480 + v46 - 2809) - 12;
  (*(void (**)(uint64_t))(a45 + 8 * (v46 ^ 0x37C)))(v49 - 152);
  unsigned int v52 = 1503746353 * ((-2119124524 - (v50 | 0x81B0B9D4) + (v50 | 0x7E4F462B)) ^ 0x582E849D);
  *(_DWORD *)(v49 - 128) = v46 - 1572 - v52;
  *(_DWORD *)(v49 - 152) = v52 + 1331781512;
  v48[394] = a31;
  v48[395] = v47;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(a45 + 8 * (v46 + 804)))(v49 - 152);
  *(_DWORD *)(a46 - 0x21AEEC4F795AEEC7) = *(_DWORD *)(v47 - 0x21AEEC4F795AEEC7);
  *(_DWORD *)(a46 - 0x21AEEC4F795AEEC3) = *(_DWORD *)(v47 - 0x21AEEC4F795AEEC3);
  *(_DWORD *)(a46 - 0x21AEEC4F795AEEBFLL) = *(_DWORD *)(v47 - 0x21AEEC4F795AEEBFLL);
  *(_DWORD *)(a46 - 0x21AEEC4F795AEEBBLL) = *(_DWORD *)(v47 - 0x21AEEC4F795AEEBBLL);
  *(_DWORD *)(a46 - 0x21AEEC4F795AEEB7) = *(_DWORD *)(v47 - 0x21AEEC4F795AEEB7);
  *(_DWORD *)(a46 - 0x21AEEC4F795AEEB3) = *(_DWORD *)(v47 - 0x21AEEC4F795AEEB3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a45
                                                     + 8
                                                     * (int)((((v46 - 50) ^ 0x262 ^ (v46 + 1543852859) & 0xA3FAABF7)
                                                            * (a46 - v47 < ((v46 - 177) ^ 0xBECuLL))) ^ (v46 - 177))))(v53, 3042);
}

uint64_t sub_22B32CA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unint64_t *a17, int a18)
{
  a17 = &STACK[0x2B48C588999CF079];
  a16 = v19 - 225134719 * (&a16 ^ 0x16F0452A) - 1164;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v19 + 2553)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((a18 == ((v19 - 454) ^ (v20 - 983))) * ((v19 + 1624) ^ 0x782)) ^ v19)))(v21);
}

uint64_t sub_22B32CAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  *(_OWORD *)(a4 + (((v8 + 1635713733) & 0x9E80FD67 ^ 0xFFFFFA99) & (v7 + a2))) = *a7;
  return (*(uint64_t (**)(void))(v10 + 8 * ((3183 * (((v9 + 1) & 0x1FFFFFFF0) == 16)) ^ (v8 - 329))))();
}

uint64_t sub_22B32CB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  a56 = 1323516137;
  a60 = 230568399;
  a55 = 473653325;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * (((v60 ^ (v60 - 1997) ^ 0x903) * (&a9 == (uint64_t *)-512)) ^ (v60 - 417))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_22B32CBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, int a10, int a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v17 = 1292559617 * ((((2 * (v16 - 128)) | 0x5E32F8CE) - (v16 - 128) - 790199399) ^ 0x884A140E);
  *(void *)(v16 - 120) = a13;
  *(_DWORD *)(v16 - 128) = (a11 + 2795) ^ v17;
  *(_DWORD *)(v16 - 124) = v17
                         + ((32 * a15) ^ 0x3745AF9F)
                         + ((a15 << (((a11 ^ 0x45) - 19) ^ 0x78)) & ((5 * (a11 ^ 0x245)) ^ 0x6E8B5DD5))
                         - 88083080;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a11 ^ 0x128E)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((*a9 - 920561906) > 0x7FFFFFFE) ^ a11)))(v18);
}

uint64_t sub_22B32CC94@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7 = ((a1 - 827) ^ (v6 + 2878)) + a2;
  *(unsigned char *)(a5 + v7) = *(unsigned char *)(a4 + v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((235 * (a2 - 1 == a3)) ^ a1)))();
}

void sub_22B32CCD4()
{
}

uint64_t sub_22B32CD08()
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((((v2 + 2155) ^ 0x99B) + 1407) ^ ((v2 + 2155) | 0x400)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B32CD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  unsigned int v35 = (a27 & 0xDFFFFFFF ^ a8) + 1751060897 - ((2 * (a27 & 0xDFFFFFFF ^ a8)) & 0x90BE2342);
  unsigned int v36 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (v33 - 1245));
  unsigned int v37 = v27 + 132181209 + a4;
  uint64_t v38 = *v34;
  *(unsigned char *)(*v34 + v37) = (HIBYTE(v35) ^ v31) - 2 * ((HIBYTE(v35) ^ v31) & 0x2B ^ HIBYTE(v35) & 1) + 42;
  *(unsigned char *)(v38 + v37 + 1) = (v28 ^ BYTE2(v35)) - ((2 * (v28 ^ BYTE2(v35))) & 0x55) + 42;
  *(unsigned char *)(v38 + v37 + 2) = (BYTE1(v35) ^ 0x11) + (v32 | ~(v35 >> 7)) + 43;
  *(unsigned char *)(v38 + v37 + 3) = ((a27 ^ a8) - 95 - ((2 * (a27 ^ a8)) & 0x42)) ^ v29;
  return v36(755338528, 634835353, a21, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_22B32CED0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 64) != 0) * ((v0 ^ 0x7C0) - 3830)) ^ v0)))();
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B32CF7C@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v6 = a1;
  if ((a2 + 1282729728) <= 0x18 && (int v6 = a1, ((1 << a2) & 0x1000581) != 0)) {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((235 * (((a1 - 3154) & *(_DWORD *)(v4 + v3 * (uint64_t)v2 + 40)) == a1 - 3155)) ^ (a1 + 789))))();
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((2358
                                  * ((((v6 + 141098860) & 0xF796F7F6 ^ 0x3BE) & *(_DWORD *)(v4 + v3 * (uint64_t)v2 + 40)) == 0)) ^ (v6 - 2960))))();
}

uint64_t sub_22B32D004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23,int a24,int a25,uint64_t (*a26)(void))
{
  LODWORD(STACK[0x2D4]) = (v27 ^ v30) + (a22 ^ v30) + v30 - (v29 & (2 * ((v27 ^ v30) + (a22 ^ v30))));
  LODWORD(STACK[0x2D8]) = (a7 ^ v30) + (a23 ^ v30) + v30 - (v29 & (2 * ((a7 ^ v30) + (a23 ^ v30))));
  LODWORD(STACK[0x2DC]) = (v26 ^ v30) + (a24 ^ v30) + v30 - (v29 & (2 * ((v26 ^ v30) + (a24 ^ v30))));
  LODWORD(STACK[0x2E0]) = (v28 ^ v30) + (a25 ^ v30) + v30 - (v29 & (2 * ((v28 ^ v30) + (a25 ^ v30))));
  return a26();
}

uint64_t sub_22B32D0A0(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v7 + (v3 - 8 + v6)) = *(void *)(v5 + (v3 - 8 + v6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v4 == -8) * a3) ^ v8)))();
}

uint64_t sub_22B32D0AC@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2228));
  return v3(v1);
}

uint64_t sub_22B32D0DC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2277
                                * ((v1 & 8) == ((((v0 ^ 0x8B5) + 607) | 0x890) ^ 0xFFFFFF9E)
                                             + (((v0 ^ 0x8B5) - 479) | 0xCB0))) ^ v0 ^ 0x8B5)))();
}

uint64_t sub_22B32D130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,unsigned int a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27)
{
  int v28 = (((a26 ^ a8) + a27) ^ 0xFBFE272) - 92406336 + ((2 * ((a26 ^ a8) + a27)) & 0x1F7FC4E4);
  BOOL v29 = a21 < 0x81843C4D;
  if (v29 == (v28 + 2001099803) < 0x81843C4D) {
    BOOL v29 = v28 + 2001099803 < a21;
  }
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((142 * !v29) ^ a19)))(755338528);
}

uint64_t sub_22B32D224@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  HIDWORD(v220) = a3 ^ 0xF4236523;
  int v24 = v22 ^ 0x1AEF85F9;
  __int16 v221 = a1 ^ 0x7675;
  HIDWORD(a20) = 0;
  uint64_t v25 = v21 & 0xFFFFFFF8 ^ 0x8A49552F;
  *(void *)(v23 - 160) = v25;
  uint64_t v26 = ((a14 & 0x8211D7BE) - 1974907480) ^ v21 & 0xFFFFFFF1;
  *(void *)(v23 - 152) = v26;
  int v27 = *(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(a4 + v25) ^ 0x80));
  uint64_t v224 = v21 & 0xFFFFFFF6 ^ 0x8A49552D;
  char v28 = (*(unsigned char *)(a4 + v26) ^ 0x2C) + *(unsigned char *)(a19 + (*(unsigned __int8 *)(a4 + v26) ^ 0x42)) - 101;
  uint64_t v29 = v21 & 0xFFFFFFFE ^ 0x8A49552D;
  *(void *)(v23 - 128) = v29;
  char v30 = *(unsigned char *)(a16 + (*(unsigned __int8 *)(a4 + v224) ^ 0x6ELL));
  unsigned __int8 v31 = v28 ^ 0xE0;
  char v32 = *(unsigned char *)(a16 + (*(unsigned __int8 *)(a4 + v29) ^ 0x1DLL));
  uint64_t v226 = v21 & 0xFFFFFFFB ^ 0x8A49552C;
  int v33 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a4 + v226) ^ 0x54));
  uint64_t v34 = v21 & 0xFFFFFFFC ^ 0x8A49552F;
  uint64_t v35 = v21 & 0xFFFFFFF4 ^ 0x8A49552F;
  *(void *)(v23 - 144) = v34;
  *(void *)(v23 - 136) = v35;
  uint64_t v36 = *(unsigned __int8 *)(a4 + v34);
  unsigned int v37 = v27 ^ 0x8D | ((v33 ^ 0xFFFFFFFB) << 24);
  unsigned int v38 = (*(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(a4 + v35) ^ 0xCCLL)) ^ 0x8D) & 0xFF00FFFF | ((((a15 - 98 * v30) ^ (BYTE4(a15) - 23 * v30)) ^ 0x78) << 16);
  uint64_t v39 = v21 & 0xFFFFFFFD ^ 0x8A49552E;
  *(void *)(v23 - 192) = v39;
  LODWORD(v36) = (*(unsigned __int8 *)(a18 + (v36 ^ 0x8F)) ^ 0x8D) & 0xFF00FFFF | ((((a15 - 98 * v32) ^ (BYTE4(a15) - 23 * v32)) ^ 0xE) << 16);
  unsigned __int8 v40 = ((*(unsigned char *)(a4 + v39) ^ 0xCC) + *(unsigned char *)(a19 + (*(unsigned __int8 *)(a4 + v39) ^ 0xA2)) - 101) ^ 0x76;
  uint64_t v41 = v21 & 0xFFFFFFF5 ^ 0x8A49552E;
  *(void *)(v23 - 168) = v41;
  uint64_t v228 = v21 ^ 0x8A49552C;
  uint64_t v225 = v21 & 0xFFFFFFF7 ^ 0x8A49552C;
  uint64_t v227 = v21 & 0xFFFFFFFA ^ 0x8A49552D;
  unsigned int v42 = v38 & 0xFFFF00FF | (((*(unsigned char *)(a19 + (*(unsigned __int8 *)(a4 + v41) ^ 0xDDLL))
                                             + (*(unsigned char *)(a4 + v41) ^ 0xB3)
                                             - 101) ^ 0x60) << 8);
  char v43 = *(unsigned char *)(a16 + (*(unsigned __int8 *)(a4 + v227) ^ 0x19));
  int v44 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a4 + v225) ^ 0xD3)) ^ 0xA2;
  uint64_t v222 = v21 & 0xFFFFFFF9 ^ 0x8A49552E;
  uint64_t v45 = *(unsigned __int8 *)(a4 + v222);
  LODWORD(v36) = v36 & 0xFFFF00FF | (v40 << 8) | ((*(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a4 + v228) ^ 0x32)) ^ 0xC4) << 24);
  uint64_t v46 = v21 & 0xFFFFFFF0 ^ 0x8A49552F;
  char v47 = *(unsigned char *)(a19 + (v45 ^ 0xA5));
  uint64_t v48 = v21 & 0xFFFFFFF2 ^ 0x8A49552D;
  *(void *)(v23 - 184) = v48;
  *(void *)(v23 - 176) = v46;
  unsigned __int8 v49 = (v47 + (v45 ^ 0xCB) - 101) ^ 0x8A;
  LODWORD(v45) = (*(unsigned __int8 *)(a18 + (*(unsigned __int8 *)(a4 + v46) ^ 0xDCLL)) ^ 0x8D) & 0xFFFF00FF | (v31 << 8);
  char v50 = *(unsigned char *)(a16 + (*(unsigned __int8 *)(a4 + v48) ^ 0x18));
  unsigned int v51 = v37 & 0xFF0000FF | ((((a15 - 98 * v43) ^ (BYTE4(a15) - 23 * v43)) ^ 0x82) << 16) | (v49 << 8);
  uint64_t v223 = v21 & 0xFFFFFFF3 ^ 0x8A49552C;
  int v52 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a4 + v223) ^ 0x5ALL));
  int v53 = (v45 & 0xFF00FFFF | ((((BYTE4(a15) - 23 * v50) ^ (a15 - 98 * v50)) ^ 0x35) << 16) | ((v52 ^ 0x1E ^ -(v52 ^ 0x1E) ^ ((v52 ^ 0xDB) + 59)) << 24))
      + 973078528;
  unsigned int v54 = (v42 | (v44 << 24)) ^ a1 ^ 0x30987675;
  unsigned int v55 = v36 ^ a2 ^ 0x2EF017DA;
  LODWORD(v36) = v53 ^ HIDWORD(v220);
  int v56 = v51 ^ v24;
  uint64_t v57 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(a13));
  LODWORD(v35) = *(_DWORD *)(v23 - 116);
  int v58 = (char *)*(&off_26DE9F480 + (int)v35 - 3581) - 4;
  LODWORD(v25) = *(_DWORD *)&v58[4 * (BYTE2(v56) ^ 0x45)];
  LODWORD(v25) = (v25 ^ 0xE556F437) - 1221024071 + ((2 * v25) & 0x6E714D70 ^ 0xB5DEB79F);
  LODWORD(v25) = (v25 ^ 0x39F3B655) - 972273237 + ((2 * v25) & 0x73E76CAA);
  unsigned int v59 = *(_DWORD *)(v57 + 4 * (HIBYTE(v55) ^ 0x20)) ^ ((HIBYTE(v55) ^ 0x7D)
                                                       - 1330206589
                                                       - ((2 * (HIBYTE(v55) ^ 0x7D)) & 0xFFFFFF07)) ^ 0xA2E3EC45;
  int v60 = (v59 ^ -v59 ^ ((v59 ^ v25) + v25 - 2 * (v59 ^ v25))) + v25;
  uint64_t v61 = (char *)*(&off_26DE9F480 + (int)v35 - 3181) - 12;
  int v62 = (v60 - 1232366477 - ((2 * v60) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4
                                                                      * (((unsigned __int16)(v42 ^ v221) >> 8) ^ 0x55)];
  int v63 = (char *)*(&off_26DE9F480 + (int)v35 - 3559) - 4;
  unsigned int v64 = (v62 - 1331611657 - ((2 * v62) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v36 ^ 0x12)];
  unsigned int v65 = ((v56 ^ 0x70BD01C3u) >> 24) ^ *(_DWORD *)(v57 + 4 * (((v56 ^ 0x70BD01C3u) >> 24) ^ 0x27)) ^ *(_DWORD *)&v58[4 * (BYTE2(v54) ^ 0x83)] ^ 0x403B1633;
  LODWORD(v45) = *(_DWORD *)&v61[4 * (BYTE1(v36) ^ 6)] ^ 0x4912D246;
  unsigned int v66 = (v65 + v45 - 2 * (v65 & v45) - 1331611657 - ((2 * (v65 + v45 - 2 * (v65 & v45))) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v55 ^ 0xBD)];
  LODWORD(v45) = *(_DWORD *)(v57 + 4 * (HIBYTE(v54) ^ 0xDB)) ^ ((HIBYTE(v54) ^ 0x80)
                                                                - 1330206589
                                                                - 2
                                                                * ((HIBYTE(v54) ^ 0x80) & 0xFFFFFF8F ^ HIBYTE(v54) & 0xC));
  int v67 = *(_DWORD *)&v58[4 * (BYTE2(v36) ^ 0x6D)];
  int v68 = v45 ^ 0xA2E3EC43;
  LODWORD(v45) = v67 ^ 0x526E528F ^ -(v67 ^ 0x526E528F) ^ ((v67 ^ v45 ^ 0xF724133) + (v45 ^ 0xA2E3EC43) + 1);
  unsigned int v69 = BYTE3(v36);
  LODWORD(v36) = *(_DWORD *)&v63[4 * (v56 ^ 0x88)] ^ *(_DWORD *)&v61[4 * (BYTE1(v55) ^ 0xBE)] ^ (v45 + v68 - 1232366477 - ((2 * (v45 + v68)) & 0x6D1728E6));
  LODWORD(v45) = (v69 ^ 0x35) - ((2 * (v69 ^ 0x35)) & 0x68) + 1535010612;
  int v70 = (v45 - 1330206589 + ((2 * v45) & 0x5106 ^ 0xDF93FFFF) + 1) ^ *(_DWORD *)(v57 + 4 * (v69 ^ 0x12));
  unsigned int v71 = (v70 - 447286217 - ((2 * v70) & 0xCAADE86E)) ^ *(_DWORD *)&v58[4 * (BYTE2(v55) ^ 0x88)];
  LODWORD(v45) = *(_DWORD *)&v63[4 * (v54 ^ 0xEA)] ^ *(_DWORD *)&v61[4 * (BYTE1(v56) ^ 0x69)] ^ (v71 - 1232366477 - ((2 * v71) & 0x6D1728E6));
  unsigned int v72 = HIBYTE(v66);
  unsigned int v73 = v45 ^ 0xBCFCB7EA;
  int v74 = *(_DWORD *)(v57 + 4 * (HIBYTE(v64) ^ 0x90)) ^ *(_DWORD *)&v58[4 * (BYTE2(v66) ^ 0x89)] ^ 0x55E05CB4;
  int v75 = (v74 - 1232366477 - ((2 * v74) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v36) ^ 0x26)];
  unsigned int v76 = HIBYTE(v64) ^ *(_DWORD *)&v63[4 * (v45 ^ 0xA1)] ^ (v75 - 1331611657 - ((2 * v75) & 0x61426FEE));
  int v77 = *(_DWORD *)&v61[4 * (((unsigned __int16)(v45 ^ 0xB7EA) >> 8) ^ 0x68)] ^ *(_DWORD *)&v58[4 * (BYTE2(v36) ^ 0x75)] ^ 0x53DD6044;
  int v78 = (v77 - 1330206589 - ((2 * v77) & 0x616D5106)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v66) ^ 0xD6));
  unsigned int v79 = (v78 - 1331611657 - ((2 * v78) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v64 ^ 0xC1)];
  unsigned int v80 = BYTE3(v36);
  LODWORD(v45) = *(_DWORD *)&v58[4 * (BYTE2(v45) ^ 4)] ^ *(_DWORD *)(v57 + 4 * (BYTE3(v36) ^ 0xFA));
  LODWORD(v45) = ((v45 ^ 0x55E05CB4) - 1232366477 - 2 * ((v45 ^ 0x55E05CB4) & 0x368B947B ^ v45 & 8)) ^ *(_DWORD *)&v61[4 * (BYTE1(v64) ^ 0x59)];
  LODWORD(v45) = (v45 - 1331611657 - ((2 * v45) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v66 ^ 0x68)];
  v73 >>= 24;
  int v81 = *(_DWORD *)(v57 + 4 * (v73 ^ 0x27)) ^ 0x55E05CB4 ^ *(_DWORD *)&v58[4 * (BYTE2(v64) ^ 0x18)];
  int v82 = *(_DWORD *)&v63[4 * (v36 ^ 0x98)] ^ *(_DWORD *)&v61[4 * (BYTE1(v66) ^ 0x61)];
  LODWORD(v36) = HIBYTE(v76);
  unsigned int v83 = v82 ^ (v81 - 1232366477 - ((2 * v81) & 0x6D1728E6));
  int v84 = *(_DWORD *)(v57 + 4 * (HIBYTE(v76) ^ 0x8C)) ^ *(_DWORD *)&v58[4 * (BYTE2(v79) ^ 0x34)] ^ 0x55E05CB4;
  LOBYTE(v82) = v45 ^ v80;
  unsigned int v85 = v45 ^ v80 ^ 0xC852FDB8;
  int v86 = v84 - 1232366477 - ((2 * v84) & 0x6D1728E6);
  unsigned int v87 = HIBYTE(v79);
  unsigned int v88 = *(_DWORD *)&v63[4 * (v73 ^ 0x64 ^ v83)] ^ *(_DWORD *)&v61[4
                                                                                 * ((BYTE1(v85)
                                                                                   + (BYTE1(v85) ^ 0xFFFFFF97)
                                                                                   + 1) ^ 0xFFFFFFF0)
                                                                                 + 4 * BYTE1(v85)] ^ v86;
  LODWORD(v45) = *(_DWORD *)&v58[4 * (BYTE2(v45) ^ 0xAA)] ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v79) ^ 0x84));
  LODWORD(v45) = *(_DWORD *)&v63[4 * (v76 ^ 0xE0) + 304 + 4 * ((2 * v76) & 0x96 ^ 0xFFFFFF7F)] ^ *(_DWORD *)&v61[4 * (BYTE1(v83) ^ 0xB6)] ^ ((v45 ^ 0x55E05CB4) - 1232366477 - 2 * ((v45 ^ 0x55E05CB4) & 0x368B947B ^ v45 & 8));
  unsigned int v89 = HIBYTE(v85);
  LODWORD(v41) = *(_DWORD *)(v57 + 4 * (HIBYTE(v85) ^ 0x27)) ^ *(_DWORD *)&v58[4 * (BYTE2(v83) ^ 0x41)] ^ 0x55E05CB4;
  LODWORD(v41) = (v41 - 1232366477 - ((2 * v41) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v76) ^ 0xA3)];
  int v90 = (v41 - 1331611657 - ((2 * v41) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v72 ^ 0xE8 ^ v79)];
  unsigned int v91 = HIBYTE(v83);
  LODWORD(v41) = *(_DWORD *)(v57 + 4 * (HIBYTE(v83) ^ 0x1B));
  int v92 = HIBYTE(v83) ^ 0xEDAABB7F ^ v41;
  LODWORD(v41) = v41 ^ 0xB0B6A883;
  int v93 = (v92 + v41 + 1) ^ ((HIBYTE(v83) ^ 0x5D1C13FC) + 1);
  int v94 = (v91 ^ 0x4E2CE82E ^ (v93 - ((2 * v93) & 0xD99E085A) - 321977299)) + v41;
  unsigned int v95 = (v94 - 447286217 - ((2 * v94) & 0xCAADE86E)) ^ *(_DWORD *)&v58[4 * (BYTE2(v76) ^ 0x6E)];
  unsigned int v96 = *(_DWORD *)&v63[4 * (v82 ^ 0xF3)] ^ *(_DWORD *)&v61[4 * (BYTE1(v79) ^ 0x55)] ^ (v95 - 1232366477 - ((2 * v95) & 0x6D1728E6));
  LODWORD(v41) = HIBYTE(v88) ^ 0xA2E3EC9A;
  int v97 = *(_DWORD *)(v57 + 4 * (HIBYTE(v88) ^ 0x82));
  LOBYTE(v82) = v90 ^ v89;
  unsigned int v98 = v90 ^ v89 ^ 0x7ED2C8B5;
  unsigned int v99 = ((v98 >> 8) ^ 0xF1183311) & 0xA172CD44 ^ 0x639788C ^ ((((v98 >> 8) ^ 0xF1183311) & 0xB172CDBB)
                                                            - ((2 * ((v98 >> 8) ^ 0xF1183311)) & 0x42409332)
                                                            - 1490454115);
  unsigned int v100 = v99 - ((2 * v99) & 0x90BCD1D2) - 933336855;
  HIDWORD(v101) = v98 >> 8;
  LODWORD(v101) = v100 ^ 0x794E69E8;
  LODWORD(v101) = (v101 >> 2) ^ __ROR4__(v100 ^ 0x86D72FDC, 2) ^ 0x9CDE7CBE;
  HIDWORD(v101) = v101;
  int v102 = *(_DWORD *)&v61[4 * (v100 ^ 0x794E6981)] ^ *(_DWORD *)&v58[4 * (BYTE2(v45) ^ 0xB0)] ^ *(_DWORD *)&v63[4 * (v96 ^ 0x7A)] ^ ((v97 ^ 0xB0B6A883) + v41 - 2 * ((v97 ^ 0x20A2A883) & v41) - 447286217 - ((2 * ((v97 ^ 0xB0B6A883) + v41 - 2 * ((v97 ^ 0x20A2A883) & v41))) & 0xCAADE86E)) ^ ((v101 >> 30) - 1232366477 - ((2 * (v101 >> 30)) & 0x6D1728E6));
  LODWORD(v41) = *(_DWORD *)&v58[4 * (BYTE2(v90) ^ 0x2A)] ^ *(_DWORD *)(v57 + 4 * (BYTE3(v45) ^ 0x32)) ^ 0x55E05CB4;
  LODWORD(v41) = (v41 - 1232366477 - ((2 * v41) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v96) ^ 0x61)];
  v98 >>= 24;
  LODWORD(v41) = (v41 - 1331611657 - ((2 * v41) & 0x61426FEE)) ^ *(_DWORD *)&v63[4
                                                                               * (v36 ^ 0x95 ^ v88)];
  LODWORD(v36) = *(_DWORD *)(v57 + 4 * (v98 ^ 0x27)) ^ 0x55E05CB4 ^ *(_DWORD *)&v58[4 * (BYTE2(v96) ^ 0x19)];
  LODWORD(v36) = (v36 - 1232366477 - ((2 * v36) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v88) ^ 0x57)];
  int v103 = (v36 - 1331611657 - ((2 * v36) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v87 ^ 0x5B ^ v45)];
  v96 >>= 24;
  int v104 = *(_DWORD *)&v58[4 * (BYTE2(v88) ^ 0x15)] ^ 0x55E05CB4 ^ *(_DWORD *)(v57 + 4 * (v96 ^ 0xD4));
  int v105 = v41 ^ BYTE3(v45);
  LODWORD(v36) = *(_DWORD *)&v63[4 * (v82 ^ 0xFE)] ^ *(_DWORD *)&v61[4 * (BYTE1(v45) ^ 0x99)] ^ (v104 - 1232366477 - ((2 * v104) & 0x6D1728E6));
  unsigned int v106 = (v102 ^ 0x718E871u) >> 24;
  LODWORD(v41) = *(_DWORD *)(v57 + 4 * (v106 ^ 0x27)) ^ *(_DWORD *)&v58[4 * (BYTE2(v41) ^ 0xC2)] ^ 0x55E05CB4;
  LODWORD(v45) = v103 ^ v98;
  int v107 = (v41 - 1232366477 - ((2 * v41) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v103) ^ 0xE1)];
  BYTE1(v41) = BYTE1(v105) ^ 0xB2;
  unsigned int v108 = (v107 - 1331611657 - ((2 * v107) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v96 ^ 0xA5 ^ v36)];
  unsigned int v109 = (v105 ^ 0x2F3AB2B3u) >> 24;
  int v110 = *(_DWORD *)(v57 + 4 * (v109 ^ 0x27)) ^ 0x55E05CB4 ^ *(_DWORD *)&v58[4
                                                                             * (((v45 ^ 0x42818987) >> 16) ^ 0xF8)];
  int v111 = v110 - 1232366477 - ((2 * v110) & 0x6D1728E6);
  unsigned int v112 = (v45 ^ 0x42818987) >> 24;
  int v113 = *(_DWORD *)&v58[4 * (BYTE2(v36) ^ 0x12)] ^ 0x55E05CB4 ^ *(_DWORD *)(v57 + 4 * (v112 ^ 0x27));
  unsigned int v114 = v111 ^ *(_DWORD *)&v61[4 * (BYTE1(v36) ^ 0xF7)] ^ *(_DWORD *)&v63[4 * (v102 ^ 0x3A)];
  int v115 = (v113 - 1232366477 - ((2 * v113) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v102) ^ 0x80)];
  unsigned int v116 = (v115 - 1331611657 - ((2 * v115) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v105 ^ 0xF8)];
  LODWORD(v36) = BYTE3(v36);
  int v117 = *(_DWORD *)&v58[4 * (BYTE2(v102) ^ 0xE0)] ^ *(_DWORD *)(v57 + 4 * (v36 ^ 0x27));
  int v118 = ((v117 ^ 0x55E05CB4) - 1232366477 - 2 * ((v117 ^ 0x55E05CB4) & 0x368B947B ^ v117 & 8)) ^ *(_DWORD *)&v61[4 * (BYTE1(v41) ^ 0x68)];
  unsigned int v119 = *(_DWORD *)&v63[4 * (v45 ^ 0xCC)] ^ v36 ^ (v118 - 1331611657 - ((2 * v118) & 0x61426FEE));
  unsigned int v120 = (v119 ^ 0xD7E6AFC4) - 2 * (((v119 ^ 0xD7E6AFC4) + 966639344) & 0x470DB6DE ^ v119 & 0xA) - 2136246844;
  if ((v119 ^ 0xD7E6AFC0) < 0xC6624110) {
    unsigned int v120 = v119 ^ 0x90EB1910;
  }
  if ((v119 ^ 0xD7E6AFC0) <= 0xC662410F) {
    unsigned __int8 v121 = -44;
  }
  else {
    unsigned __int8 v121 = -60;
  }
  if (v120 != 1192081108) {
    unsigned __int8 v121 = v119 ^ 0x10;
  }
  unsigned int v122 = HIBYTE(v108);
  int v123 = *(_DWORD *)(v57 + 4 * (HIBYTE(v108) ^ 0x3E)) ^ *(_DWORD *)&v58[4 * (BYTE2(v114) ^ 0x75)] ^ 0x55E05CB4;
  int v124 = (v123 - 1232366477 - ((2 * v123) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v116) ^ 0x9C)];
  unsigned int v125 = HIBYTE(v114);
  unsigned int v126 = (v124 - 1331611657 - ((2 * v124) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v121 ^ 0x9F)];
  int v127 = *(_DWORD *)&v58[4 * (BYTE2(v116) ^ 0x3C)] ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v114) ^ 0xB2));
  unsigned int v128 = *(_DWORD *)&v61[4 * (BYTE1(v119) ^ 0xC7)] ^ *(_DWORD *)&v63[4 * (v106 ^ 0xD0 ^ v108)] ^ ((v127 ^ 0x55E05CB4) - 1232366477 - 2 * ((v127 ^ 0x55E05CB4) & 0x368B947B ^ v127 & 8));
  int v129 = *(_DWORD *)(v57 + 4 * (HIBYTE(v116) ^ 0x53)) ^ ((HIBYTE(v116) ^ 0x74) - 1330206589 - ((v116 >> 23) & 0x106)) ^ *(_DWORD *)&v58[4 * (BYTE2(v119) ^ 0x1E)];
  unsigned int v130 = ((v129 ^ 0xF08DBEB0) - 1232366477 - 2 * ((v129 ^ 0xF08DBEB0) & 0x368B9477 ^ v129 & 4)) ^ *(_DWORD *)&v61[4 * (BYTE1(v108) ^ 0xA7)];
  unsigned int v131 = (v130 - 1331611657 - ((2 * v130) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v109 ^ 0x15 ^ v114)];
  int v132 = *(_DWORD *)(v57 + 4 * (HIBYTE(v119) ^ 0xF0)) ^ *(_DWORD *)&v58[4 * (BYTE2(v108) ^ 0x87)] ^ 0x55E05CB4;
  unsigned int v133 = *(_DWORD *)&v63[4 * (v112 ^ 0xF1 ^ v116)] ^ *(_DWORD *)&v61[4 * (BYTE1(v114) ^ 0xD1)] ^ (v132 - 1232366477 - ((2 * v132) & 0x6D1728E6));
  int v134 = *(_DWORD *)&v61[4 * (BYTE1(v131) ^ 0x7C)] ^ *(_DWORD *)&v58[4 * (BYTE2(v128) ^ 0xDA)];
  int v135 = ((v134 ^ 0x53DD6044) - 1331611657 - 2 * ((v134 ^ 0x53DD6044) & 0x30A137FF ^ v134 & 8)) ^ *(_DWORD *)&v63[4 * (HIBYTE(v119) ^ 0xCB ^ v133)];
  unsigned int v136 = *(_DWORD *)(v57 + 4 * (HIBYTE(v126) ^ 4)) ^ HIBYTE(v126) ^ (v135 - 1330206589 - ((2 * v135) & 0x616D5106));
  int v137 = *(_DWORD *)&v58[4 * (BYTE2(v131) ^ 0xF5 ^ -(BYTE2(v131) ^ 0xF5) ^ ((BYTE2(v131) ^ 0xFFFFFFF2) + 249)) + 992];
  unsigned int v138 = *(_DWORD *)(v57 + 4 * (HIBYTE(v128) ^ 0x82)) ^ ((HIBYTE(v128) ^ 0xB0)
                                                         - 1330206589
                                                         - 2 * ((HIBYTE(v128) ^ 0xB0) & 0xFFFFFF8F ^ HIBYTE(v128) & 0xC));
  HIDWORD(v139) = v137 ^ 0x37;
  LODWORD(v139) = v137 ^ 0xE556F400;
  HIDWORD(v139) = (v139 >> 9) ^ 0xD0E93DFB;
  LODWORD(v139) = HIDWORD(v139);
  int v140 = (v139 >> 23) + 406210975 - ((2 * (v139 >> 23)) & 0x306C933E);
  unsigned int v141 = (v138 ^ 0xA2E3EC2A ^ -(v138 ^ 0xA2E3EC2A) ^ (((v138 + 406210975 - ((2 * v138) & 0x306C933E)) ^ 0x5D1C13D5 ^ v140)
                                                    + (v140 ^ 0x1836499F)
                                                    + 1))
       + (v140 ^ 0x1836499F);
  int v142 = v141 - 1232366477 - ((2 * v141) & 0x6D1728E6);
  unsigned int v143 = HIBYTE(v131);
  unsigned int v144 = *(_DWORD *)&v61[4 * (BYTE1(v133) ^ 0x5D)] ^ *(_DWORD *)&v63[4 * (v122 ^ 0xB1 ^ v126)] ^ v142;
  int v145 = *(_DWORD *)&v58[4 * (BYTE2(v133) ^ 0xF8)] ^ 0x55E05CB4 ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v131) ^ 0x40));
  unsigned int v146 = HIBYTE(v133);
  int v147 = *(_DWORD *)(v57 + 4 * (HIBYTE(v133) ^ 0x21));
  unsigned int v148 = *(_DWORD *)&v63[4 * (v125 ^ 0xF7 ^ v128)] ^ *(_DWORD *)&v61[4 * (BYTE1(v126) ^ 0x4C)] ^ (v145 - 1232366477 - ((2 * v145) & 0x6D1728E6));
  int v149 = v147 ^ 0x55E05CB4 ^ *(_DWORD *)&v58[4 * (BYTE2(v126) ^ 0x3E)];
  unsigned int v150 = *(_DWORD *)&v61[4 * (BYTE1(v128) ^ 6)] ^ __ROR4__(__ROR4__(*(_DWORD *)&v63[4 * (v131 ^ 0x3C)] ^ 0xEBE31EE9, 21) ^ 0x998669FD, 11) ^ (v149 - 1232366477 - ((2 * v149) & 0x6D1728E6));
  unsigned int v151 = ((v136 >> 23) & 0x7E ^ 0xFFFFFFAF) + (HIBYTE(v136) ^ 0xA8);
  int v152 = (v151 - 2 * ((v151 + 585362496) & 0x30B6A897 ^ v151 & 0x14) + 1402639555) ^ *(_DWORD *)(v57
                                                                                               + 4
                                                                                               * (HIBYTE(v136) ^ 0x8F));
  unsigned int v153 = (v152 - 447286217 - ((2 * v152) & 0xCAADE86E)) ^ *(_DWORD *)&v58[4 * (BYTE2(v144) ^ 0xD8)];
  unsigned int v154 = HIBYTE(v144);
  unsigned int v155 = *(_DWORD *)&v63[4 * (v146 ^ 0xF5 ^ v150)] ^ *(_DWORD *)&v61[4 * (BYTE1(v148) ^ 0x75)] ^ (v153 - 1232366477 - ((2 * v153) & 0x6D1728E6));
  LODWORD(v139) = __ROR4__(*(_DWORD *)&v58[4 * (BYTE2(v148) ^ 7)] ^ 0x8AFA53CB, 24) ^ 0x940144D8;
  HIDWORD(v139) = v139;
  int v156 = ((v139 >> 8) - 1330206589 - ((2 * (v139 >> 8)) & 0x616D5106)) ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v144) ^ 0x49));
  int v157 = (v156 - 1232366477 - ((2 * v156) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4
                                                                         * (BYTE1(v150) ^ 0x30F274A ^ -(BYTE1(v150) ^ 0x30F274A) ^ ((BYTE1(v150) ^ 0xFFFFFF55) + 51324897))
                                                                         + 205299584];
  int v158 = *(_DWORD *)(v57 + 4 * (HIBYTE(v148) ^ 0x58));
  unsigned int v159 = (v158 ^ 0xB0B6A883) + (HIBYTE(v148) ^ 0xA2E3EC40) - 2 * ((v158 ^ 0x20A2A883) & (HIBYTE(v148) ^ 0xA2E3EC40));
  unsigned int v160 = (v157 - 1331611657 - ((2 * v157) & 0x61426FEE)) ^ *(_DWORD *)&v63[4 * (v136 ^ 0x19)];
  int v161 = *(_DWORD *)&v58[4 * (BYTE2(v150) ^ 0x9F)];
  int v162 = (v161 & 0x10 | (32 * (((v161 & 0x10) >> 4) & 1))) ^ 0x72FFFFD7;
  BOOL v163 = ((v162 - 1929379799) & v159) == 0;
  int v164 = v162 - 840080199;
  int v165 = -1276287897 - v162;
  if (v163) {
    int v165 = v164;
  }
  unsigned int v166 = v161 & 0xFFFFFFEF ^ 0x526E528F ^ (v159 - 1089299600 + v165);
  int v167 = *(_DWORD *)&v61[4 * (BYTE1(v136) ^ 0x45)] ^ 0x4912D246;
  int v168 = (v166 + v167 - 2 * (v166 & v167)) ^ *(_DWORD *)&v63[4 * (v144 ^ 0x19)];
  unsigned int v169 = *(_DWORD *)(v57 + 4 * (HIBYTE(v150) ^ 0x29)) ^ ((HIBYTE(v150) ^ 0xE)
                                                         - 1330206589
                                                         - ((2 * (HIBYTE(v150) ^ 0xE)) & 0xFFFFFF07));
  int v170 = *(_DWORD *)&v58[4 * (BYTE2(v136) ^ 0xB)];
  unsigned int v171 = v169 ^ 0xB84AE7F7 ^ v170;
  v170 ^= 0xE556F437;
  int v172 = (v170 + v171 + 1) ^ ((v169 ^ 0x5D1C13C0) + 1);
  int v173 = *(_DWORD *)&v63[4 * (v143 ^ 0x84 ^ v148)];
  int v174 = (v169 ^ 0x48EDBECF ^ (v172 - ((2 * v172) & 0xD41CA5E0) - 368160016)) + v170;
  int v175 = (v174 - 1232366477 - ((2 * v174) & 0x6D1728E6)) ^ *(_DWORD *)&v61[4 * (BYTE1(v144) ^ 0xC3)];
  unsigned int v176 = HIBYTE(v155);
  LODWORD(v177) = __ROR4__(v173 ^ 0x2C50F95E ^ (v175 - 1331611657 - ((2 * v175) & 0x61426FEE)), 27) ^ 0x66EE9575;
  HIDWORD(v177) = v177;
  unsigned int v178 = (v177 >> 5) - ((2 * (v177 >> 5)) & 0x7E80CED4) + 1061185386;
  unsigned int v179 = *(_DWORD *)&v58[4 * (BYTE2(v160) ^ 0x38)] ^ *(_DWORD *)(v57 + 4 * (HIBYTE(v155) ^ 0x69)) ^ *(_DWORD *)&v61[4 * (BYTE1(v168) ^ 0x54)] ^ *(_DWORD *)&v63[4 * (((v177 >> 5) - ((2 * (v177 >> 5)) & 0xD4) + 106) ^ 0x51)];
  int v180 = *(_DWORD *)&v58[4 * ((v168 ^ 0x67D43C00u) >> 16)] ^ *(_DWORD *)(v57
                                                                                        + 4 * (HIBYTE(v160) ^ 0x71));
  int v181 = ((v180 ^ 0x55E05CB4) - 1232366477 - 2 * ((v180 ^ 0x55E05CB4) & 0x368B947B ^ v180 & 8)) ^ *(_DWORD *)&v61[4 * (BYTE1(v178) ^ 0x41)];
  int v182 = v181 - 1331611657 - ((2 * v181) & 0x61426FEE);
  unsigned int v183 = (v168 ^ 0x67D43C00u) >> 24;
  int v184 = v182 ^ *(_DWORD *)&v63[4 * (v155 ^ 0xA2)];
  int v185 = *(_DWORD *)(v57 + 4 * (v183 ^ 0x27)) ^ 0x55E05CB4 ^ *(_DWORD *)&v58[4 * (BYTE2(v178) ^ 0xC)];
  v178 >>= 24;
  int v186 = *(_DWORD *)(v57 + 4 * (v178 ^ 0x79));
  int v187 = *(_DWORD *)&v58[4 * (BYTE2(v155) ^ 0x32)];
  unsigned int v188 = *(_DWORD *)&v63[4 * (v154 ^ 0x13 ^ v160)] ^ *(_DWORD *)&v61[4 * (BYTE1(v155) ^ 0x19)] ^ (v185 - 1232366477 - ((2 * v185) & 0x6D1728E6));
  int v189 = v184 ^ HIBYTE(v160);
  int v190 = *(_DWORD *)&v61[4 * (BYTE1(v160) ^ 0x10)];
  int v191 = (v186 ^ v187 ^ 0x55E05CB4) - 1232366477 - ((2 * (v186 ^ v187 ^ 0x55E05CB4)) & 0x6D1728E6);
  unsigned int v192 = *(_DWORD *)&v63[4 * (v168 ^ 0x4B)] ^ 0xD4502E24;
  int v193 = (v190 ^ v178 ^ 0x39CCAC3B ^ v191) + v192 - 2 * ((v190 ^ v178 ^ 0x39CCAC3B ^ v191) & v192);
  unsigned int v194 = v193 - ((2 * v193) & 0x89AA7118) - 992659316;
  uint64_t v195 = *(unsigned int *)(v23 - 116);
  uint64_t v196 = (uint64_t)*(&off_26DE9F480 + (int)v195 - 3168);
  int v197 = (char *)*(&off_26DE9F480 + (int)a13) - 12;
  int v198 = *(_DWORD *)(v196 + 4 * ((v189 ^ 0x36239D1Fu) >> 16)) ^ *(_DWORD *)&v197[4 * (HIBYTE(v179) ^ 0x97)] ^ 0x30D9C8AE;
  int v199 = (char *)*(&off_26DE9F480 + SHIDWORD(a12)) - 4;
  unsigned int v200 = (char *)*(&off_26DE9F480 + (int)v195 - 3117) - 12;
  uint64_t v201 = (v198 + 677615865 - ((2 * v198) & 0x50C731F2u)) ^ *(_DWORD *)&v199[4 * (BYTE1(v188) ^ 0x38)] ^ *(_DWORD *)&v200[4 * (v194 ^ 0x90)];
  unsigned int v202 = v176 ^ 0x31 ^ v179;
  int v203 = *(_DWORD *)&v197[4 * ((v189 ^ 0x36239D1Fu) >> 24)] ^ *(_DWORD *)(v196 + 4 * (BYTE2(v188) ^ 0x24u)) ^ 0x30D9C8AE;
  unsigned int v204 = *(_DWORD *)&v199[4 * (BYTE1(v194) ^ 0x5E)] ^ *(_DWORD *)&v200[4 * v202] ^ (v203
                                                                                  + 677615865
                                                                                  - ((2 * v203) & 0x50C731F2));
  unsigned int v205 = *(_DWORD *)(v196 + 4 * (BYTE2(v194) ^ 0x34u)) ^ *(_DWORD *)&v197[4 * (HIBYTE(v188) ^ 0xA8)] ^ 0xBD2A2044;
  uint64_t v206 = v205 & 0xB70FB378 ^ *(_DWORD *)&v199[4 * (BYTE1(v179) ^ 0x29)] ^ *(_DWORD *)&v200[4
                                                                                         * (v189 ^ 3)] ^ ((v205 & 0x48F04C87) + 677615865 - ((2 * v205) & 0x10C01102));
  int v207 = *(_DWORD *)(v196 + 4 * (BYTE2(v179) ^ 0x78u)) ^ 0x30D9C8AE ^ *(_DWORD *)&v197[4 * (HIBYTE(v194) ^ 0xD6)];
  int v208 = *(_DWORD *)&v199[4 * (BYTE1(v184) ^ 0xFB)];
  LODWORD(v199) = v207 + 677615865 - ((2 * v207) & 0x50C731F2);
  int v209 = *(_DWORD *)&v200[4 * (v183 ^ 0x73 ^ v188)] ^ v208;
  unsigned int v210 = (char *)*(&off_26DE9F480 + (int)a12) - 8;
  *(unsigned char *)(a10 + v224) = v210[BYTE2(v206) ^ 0x6DLL] ^ 0x88;
  uint64_t v211 = v209 ^ v199;
  int v212 = (char *)*(&off_26DE9F480 + (int)v195 - 3474) - 8;
  *(unsigned char *)(a10 + v222) = BYTE1(v204) ^ 0x17 ^ ((BYTE1(v204) ^ 0x17) - ((2 * (BYTE1(v204) ^ 0x17) - 44) & 0x86) + 45) ^ 0x39 ^ v212[BYTE1(v204) ^ 0x91];
  uint64_t v213 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(a11));
  unsigned int v214 = *(unsigned __int8 *)(v213 + (HIBYTE(v204) ^ 7));
  *(unsigned char *)(a10 + v226) = v214 ^ 0x93 ^ (((v214 >> 1) & 0x4F ^ 0xD) - ((2 * ((v214 >> 1) & 0x4F ^ 0xD)) & 0x55) + 58);
  *(unsigned char *)(a10 + v223) = *(unsigned char *)(v213 + (BYTE3(v211) ^ 0x9CLL)) ^ 0x2E ^ (*(unsigned char *)(v213 + (BYTE3(v211) ^ 0x9CLL)) >> 1) & 0x4F;
  *(unsigned char *)(a10 + v225) = *(unsigned char *)(v213 + (BYTE3(v206) ^ 0xE1)) ^ (*(unsigned char *)(v213 + (BYTE3(v206) ^ 0xE1)) >> 1) & 0x4F ^ 0x7E;
  *(unsigned char *)(a10 + *(void *)(v23 - 192)) = ((unsigned __int16)(v201 ^ 0x91BF) >> 8) ^ 8 ^ ((((unsigned __int16)(v201 ^ 0x91BF) >> 8) ^ 8)
                                                                                           - ((2
                                                                                             * (((unsigned __int16)(v201 ^ 0x91BF) >> 8) ^ 8)
                                                                                             - 44) & 0x86)
                                                                                           + 45) ^ 0xEB ^ v212[((unsigned __int16)(v201 ^ 0x91BF) >> 8) ^ 0x8ELL];
  LODWORD(v213) = *(unsigned __int8 *)(v213 + (BYTE3(v201) ^ 0xC2));
  *(unsigned char *)(a10 + v228) = v213 ^ (v213 >> 1) & 0x4F ^ 0xCF;
  *(unsigned char *)(a10 + v227) = v210[BYTE2(v204) ^ 0x3DLL] ^ 0x6D;
  uint64_t v215 = (uint64_t)*(&off_26DE9F480 + (int)a11);
  LOBYTE(v194) = *(unsigned char *)(v215 + (v204 ^ 0x8ELL)) + 126;
  *(unsigned char *)(a10 + *(void *)(v23 - 160)) = v194 ^ (8 * v194) ^ 0xB2;
  *(unsigned char *)(a10 + *(void *)(v23 - 152)) = BYTE1(v211) ^ 0x97 ^ ((BYTE1(v211) ^ 0x97)
                                                                 - ((2 * (BYTE1(v211) ^ 0x97) - 44) & 0x86)
                                                                 + 45) ^ 0xB6 ^ v212[BYTE1(v211) ^ 0x11];
  *(unsigned char *)(a10 + *(void *)(v23 - 184)) = v210[BYTE2(v211) ^ 0x32] ^ 0x58;
  LOBYTE(v194) = *(unsigned char *)(v215 + (v211 ^ 0x6FLL)) + 126;
  *(unsigned char *)(a10 + *(void *)(v23 - 176)) = v194 ^ (8 * v194) ^ 0x85;
  LODWORD(v212) = v212[BYTE1(v206) ^ 0x5BLL];
  HIDWORD(v177) = v212 ^ 0x43;
  LODWORD(v177) = v212 << 24;
  LODWORD(v212) = v177 >> 31;
  unsigned int v216 = (v206 >> 8) ^ 0xFFFFFFDD;
  uint64_t v217 = v216 - 22;
  uint64_t v218 = v216 ^ v217 ^ (v212 << 7);
  *(unsigned char *)(a10 + *(void *)(v23 - 168)) = v218 ^ ((v212 & 0xFE) >> 1) ^ 0x2D;
  LOBYTE(v212) = *(unsigned char *)(v215 + (v201 ^ 0x72)) + 126;
  *(unsigned char *)(a10 + *(void *)(v23 - 144)) = v212 ^ (8 * (_BYTE)v212) ^ 0xD;
  LOBYTE(v212) = *(unsigned char *)(v215 + (v206 ^ 0xF9)) + 126;
  *(unsigned char *)(a10 + *(void *)(v23 - 136)) = v212 ^ (8 * (_BYTE)v212) ^ 0x71;
  *(unsigned char *)(a10 + *(void *)(v23 - 128)) = v210[(((v201 ^ 0xCFFA91BF) >> 16)
                                                 - (((v201 ^ 0xCFFA91BF) >> 15) & 0x1C4)
                                                 + 226) ^ 0xCELL] ^ 0xD9;
  LODWORD(v220) = a14 & 0x8211D7BE;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a21 + 8 * ((2082 * (((v228 - 1974905556 - ((2 * v228 + 32) & 0x1492AA58) + 16) ^ 0x8A49552C) < HIDWORD(a14))) ^ ((int)v195 - 2120))))(13, v218, v206, v217, v201, 113, v195, v211, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           v220);
}

uint64_t sub_22B32D264(uint64_t result)
{
  int v1 = 604092370;
  int v2 = (*(unsigned char *)(result + 4) - -41 * ((((2 * result) | 0x96) - result - 75) ^ 0xA5));
  if (v2 == 159 || v2 == 136)
  {
    if ((*(unsigned char *)(result + 12) - -41 * ((((2 * result) | 0x96) - result - 75) ^ 0xA5)) == 107) {
      int v1 = -604050357;
    }
    else {
      int v1 = 604092370;
    }
  }
  *(_DWORD *)uint64_t result = v1;
  return result;
}

uint64_t sub_22B32D2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned char *a25,uint64_t a26,uint64_t a27,unsigned char *a28,uint64_t a29,uint64_t a30,int a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(v66 - 136) = 1741 - 731811679 * ((((v66 - 168) | 0x2C544278) - ((v66 - 168) & 0x2C544278)) ^ 0x65A2E43C);
  *(void *)(v66 - 160) = a36 + 132;
  *(void *)(v66 - 144) = a63;
  *(unsigned char *)(v66 - 168) = 95 * ((((v66 + 88) | 0x78) - ((v66 + 88) & 0x78)) ^ 0x3C) + 32;
  *(unsigned char *)(v66 - 152) = (75 * a32 + 113) ^ (95 * ((((v66 + 88) | 0x78) - ((v66 + 88) & 0x78)) ^ 0x3C));
  (*(void (**)(uint64_t))(a66 + 33184))(v66 - 168);
  *(void *)STACK[0x218] = a41;
  *(_DWORD *)STACK[0x210] = a40;
  *a28 = 1;
  *a25 = 46;
  uint64_t v67 = bswap32(*(_DWORD *)(STACK[0x208] + 8));
  uint64_t v68 = (v67 + 12) & 0x1FFFFFFFELL;
  unint64_t v69 = ((unint64_t)&STACK[0x230] ^ 0xF7FD336DFFFF7B1BLL)
      + 0x3EFFEFBF4FBADFF8
      + ((2 * (void)&STACK[0x230]) & 0xEFFA66DBFFFEF630);
  int v70 = (unsigned char *)(v67 + STACK[0x208] + 11);
  *int v70 = ((v69 - 19) ^ 0xBA) * (v69 - 2);
  *(v70 - 1) = ((v69 - 18) ^ 0xBA) * (v69 - 1);
  return (*(uint64_t (**)(void))(a66 + 8 * ((143 * (v68 == 2)) ^ 0xD2Au)))();
}

uint64_t sub_22B32D48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, unsigned int a13, unint64_t *a14, uint64_t a15)
{
  a13 = v15
      - (((&a13 | 0x73E71310) - &a13 + (&a13 & 0x8C18ECE8)) ^ 0xD4B47B79)
      * v18
      - 1188;
  a14 = &STACK[0x1367E3C5726D8FBB];
  a15 = a9;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v15 ^ 0x171A)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((2142 * (a11 == v15 - v17 - 2137086045)) ^ v15)))(v19);
}

uint64_t sub_22B32D538(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  int v1 = 1990461019 * (((a1 | 0x514A27EE) - (a1 & 0x514A27EE)) ^ 0x7EAE8567);
  int v2 = *(_DWORD *)(a1 + 16) - v1;
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 20) + v1;
  unsigned int v6 = 1503746353 * (&v8 ^ 0x2661C2B6);
  unsigned int v11 = v2 - 1298780548 - v6;
  unsigned int v8 = (v5 ^ 0x2F1B72C7) + v6 + ((2 * v5) & 0x9FF3BEE8 ^ 0x81C11A60) - 9994240;
  uint64_t v9 = v4;
  uint64_t v10 = v3;
  return (*((uint64_t (**)(unsigned int *))*(&off_26DE9F480 + (v2 ^ 0x4D69D967)) + v2 - 1298778173))(&v8);
}

uint64_t sub_22B32D65C(uint64_t a1, unsigned int a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + a2) = *(void *)(v7 + a2);
  return (*(uint64_t (**)(uint64_t, void, void))(v8 + 8 * (((a3 == 0) * v6) | a5)))(a1, a2 - 8, (a3 + 8));
}

uint64_t sub_22B32D68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  *(unsigned char *)(v29 + ((int)a3 - 612759699) % v28) = (*(unsigned char *)(v29 + ((int)a3 - 612759699) % v28)
                                                 - (((v30 ^ 0x33) - 38) & (2
                                                                         * *(unsigned char *)(v29 + ((int)a3 - 612759699) % v28)))
                                                 + 27) ^ *(&a28 + a3 - 612759699);
  return (*(uint64_t (**)(void))(v32 + 8 * ((3388 * (a3 + 1 == v31 + 210)) ^ v30)))();
}

uint64_t sub_22B32D700@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v3 = (v2 & 0x18) == ((a1 + 235) | 0x6Au) - 638;
  return (*(uint64_t (**)(void))(a2 + 8 * ((v3 | (4 * v3)) ^ a1)))();
}

uint64_t sub_22B32D73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unsigned int *a53)
{
  if (v53 == 1187837918 || v53 == 1187837915)
  {
    LOBYTE(STACK[0x187F]) = LOBYTE(STACK[0x1847]) ^ 0x2A;
    LOBYTE(STACK[0x187E]) = LOBYTE(STACK[0x1846]) ^ 0x2A;
    LOBYTE(STACK[0x187D]) = LOBYTE(STACK[0x1845]) ^ 0x2A;
    LOBYTE(STACK[0x187C]) = LOBYTE(STACK[0x1844]) ^ 0x2A;
    LOBYTE(STACK[0x187B]) = LOBYTE(STACK[0x1843]) ^ 0x2A;
    LOBYTE(STACK[0x187A]) = LOBYTE(STACK[0x1842]) ^ 0x2A;
    LOBYTE(STACK[0x1879]) = LOBYTE(STACK[0x1841]) ^ 0x2A;
    LOBYTE(STACK[0x1878]) = LOBYTE(STACK[0x1840]) ^ 0x2A;
    LOBYTE(STACK[0x1877]) = LOBYTE(STACK[0x183F]) ^ 0x2A;
    LOBYTE(STACK[0x1876]) = LOBYTE(STACK[0x183E]) ^ 0x2A;
    LOBYTE(STACK[0x1875]) = LOBYTE(STACK[0x183D]) ^ 0x2A;
    LOBYTE(STACK[0x1874]) = LOBYTE(STACK[0x183C]) ^ 0x2A;
    LOBYTE(STACK[0x1873]) = LOBYTE(STACK[0x183B]) ^ 0x2A;
    LOBYTE(STACK[0x1872]) = LOBYTE(STACK[0x183A]) ^ 0x2A;
    LOBYTE(STACK[0x1871]) = LOBYTE(STACK[0x1839]) ^ 0x2A;
    LOBYTE(STACK[0x1870]) = LOBYTE(STACK[0x1838]) ^ 0x2A;
  }
  unint64_t v55 = STACK[0x278];
  int v56 = STACK[0x278] - 2848;
  int v57 = (*(uint64_t (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v54 + 8 * (int)(STACK[0x278] ^ 0x1C08)))(LODWORD(STACK[0x2B4]), (((STACK[0x278] - 3070) | 0x28A) ^ 0xB9330AF5) + v53, a35 ^ 0x313E5765u, LODWORD(STACK[0x508]) ^ 0x9BD17E9E, &STACK[0x1870], STACK[0x4B0], LODWORD(STACK[0x368]), &STACK[0x1848]);
  int v58 = ((2 * v57) & 0x5F4CBFFC) + (v57 ^ 0x2FA65FFE);
  uint64_t v59 = (*(uint64_t (**)(void, unint64_t, void))(STACK[0x270] + 8 * ((int)v55 + 863)))(*a53, STACK[0x4B0], LODWORD(STACK[0x368]));
  return (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * ((84 * (v58 != 799432702)) ^ v56)))(v59);
}

uint64_t sub_22B32D91C(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  unsigned int v14 = a4 - (v10 & 0xFFFFFFF8) + 8;
  int v15 = a2 + v13 + v11;
  char v16 = v15 - a4;
  char v17 = v15 - a4 + 100;
  unsigned int v18 = v15 + v9 - a4;
  v20.val[0].i64[0] = v18 & 0xF;
  v20.val[0].i64[1] = (v16 - 1) & 0xF;
  v20.val[1].i64[0] = (v16 + 14) & 0xF;
  v20.val[1].i64[1] = (v16 + 13) & 0xF;
  v20.val[2].i64[0] = (v16 + 12) & 0xF;
  v20.val[2].i64[1] = (v17 + (a5 ^ 7)) & 0xF;
  v20.val[3].i64[0] = (v16 + 10) & 0xF;
  v20.val[3].i64[1] = (v16 + 9) & 0xF;
  *(int8x8_t *)(*(void *)(v12 - 248) - 7 + v18) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v8 + v20.val[0].i64[0] - 7), *(int8x8_t *)(v5 - 7 + v18)), veor_s8(*(int8x8_t *)(v20.val[0].i64[0] + v7 - 2), *(int8x8_t *)(v20.val[0].i64[0] + v6 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v20, (int8x16_t)xmmword_22B497560), (int8x8_t)0x5D5D5D5D5D5D5D5DLL)));
  return (*(uint64_t (**)(__n128))(STACK[0x210] + 8 * (((v14 == 0) | (2 * (v14 == 0))) ^ a5)))((__n128)xmmword_22B497560);
}

uint64_t sub_22B32DA38@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  BOOL v11 = v8 + 2008326419 > ((a2 - 64) ^ 0x223A063D) || v8 + 2008326419 < a8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8 * ((53 * v11) ^ a2)))(a1, 3045566394, 2425338425);
}

void sub_22B32DAC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1948972247 * ((a1 - 2 * (a1 & 0x22E7C121) + 585613601) ^ 0x977934CF);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B32DB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((v12 + v10 + ((v10 - 1049749995) & 0x3E91EF7E ^ (a8 + 3079)) - 736)
                                * (v8 - v9 == 256582364)) ^ v10)))();
}

uint64_t sub_22B32DBEC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  BOOL v17 = a1 != ((v12 - 1087674828) & 0x40D49FCF) + v13 && a12 - v15 == ((v12 + 269548983) | 0x84BD00) - 1180324821;
  return (*(uint64_t (**)(void))(v14 + 8 * ((60 * v17) ^ v12)))();
}

uint64_t sub_22B32DC60@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((2158
                                * (v2
                                 + ((*(unsigned __int8 *)(v5 + 3) - 134) ^ v4)
                                 + ((a1 - 67) | 0x41)
                                 + (((*(unsigned __int8 *)(v5 + 3) - 134) << (a1 + 40)) & v3)
                                 - 1239 == a2)) ^ a1)))();
}

uint64_t sub_22B32DCB8(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  int v27 = a11 + v19;
  uint64_t v28 = (v18 + v27);
  uint64_t v29 = ((_BYTE)v18 + (_BYTE)v27) & 0xF;
  v31.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v31.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v32 = vrev64q_s8(vmulq_s8(v31, a6));
  *(int8x16_t *)(v17 + v28) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + (v28 & 0xF) - 15), *(int8x16_t *)(a13 + v28)), veorq_s8(*(int8x16_t *)((v28 & 0xF) + v15 - 10), *(int8x16_t *)((v28 & 0xF) + v14 - 13))), vextq_s8(v32, v32, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * (((v20 != v27) * v21) ^ a12)))();
}

uint64_t sub_22B32DCFC(uint64_t a1, int a2, int a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unsigned int v29 = v27 - 171596399;
  BOOL v30 = v29 < (a11 ^ 0x484u) + a3;
  unsigned int v31 = *(_DWORD *)(a27 - 0x2970AB8229FC3CE6 + ((a2 + 2096635341) & 0xFFFFFFFC));
  *(unsigned char *)(a7 + (a2 + 2096635341)) = v31 ^ 0x13;
  int v32 = (v31 >> ((((a11 ^ 0x84) - 46) | 0x45) + 67)) ^ 0x67;
  *(unsigned char *)(a7 + (a2 + 2096635342)) = v32 - ((2 * v32) & 0x55) + 42;
  *(unsigned char *)(a7 + (a2 + 2096635343)) = (a6 ^ BYTE2(v31)) + (~(v31 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a7 + (a2 + 2096635344)) = (HIBYTE(v31) ^ 0x11) - (a5 & (v31 >> 23)) + 42;
  if (v30 == (a3 + 430) > 0x93461BC) {
    BOOL v30 = v29 > 0x93461BC;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((1156 * v30) ^ a11 ^ 0x484)))();
}

uint64_t sub_22B32DE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, void, void, uint64_t, uint64_t))(v44 + 8 * (int)(((&a15[56 * *a15 + 24] == 0) * ((a35 - 3183) ^ 0x25F)) ^ (a35 - 1996))))(56, a2, a3, a35, &a44, 3268, 1, 90, a9, a10, a11, a12, a13, a14, a15, *(void *)(v44 + 8 * (int)(a35 - 3198)), 0, a18, a19);
}

void sub_22B32DE80()
{
}

uint64_t sub_22B32DEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  unsigned int v43 = a7 + v39 - 716 + v41 + 1256581994;
  unsigned int v44 = *(_DWORD *)(&a25 + (v43 & 0xFFFFFFFC) + 72);
  unsigned int v45 = v41 + v37;
  *(unsigned char *)(a4 + v43) = v44 ^ 0x13;
  *(unsigned char *)(a4 + v45 + 1) = (BYTE2(v44) ^ 0x95) + (~(v44 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a4 + v45) = (BYTE1(v44) ^ 0x67) - ((2 * (BYTE1(v44) ^ 0x67)) & 0x55) + 42;
  *(unsigned char *)(a4 + v45 + 2) = (HIBYTE(v44) ^ 0x11) - ((v44 >> 23) & 0x54) + 42;
  BOOL v46 = v41 + 1652466903 < (a37 - 2108117437);
  if (v41 + 1652466903 < v38 != a37 - 2108117437 < v38) {
    BOOL v46 = a37 - 2108117437 < v38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((v46 * v40) ^ v39)))();
}

uint64_t sub_22B32DFC8(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((213 * (v2 != v3)) ^ a2)))();
}

uint64_t sub_22B32E000@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((31 * (((v2 + 82) ^ (v1 < ((v2 - 81916590) ^ 0xFB1E1A80))) & 1)) ^ v2)))();
}

uint64_t sub_22B32E04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v35 + 8 * (int)(((((2 * (*(_DWORD *)(a19 - 0x2970AB8229FC3CEALL) & 0x3F)) ^ 0x32) + (*(_DWORD *)(a19 - 0x2970AB8229FC3CEALL) & 0x3F ^ 0x7CFCFFE6u) - 2096955327 < 0xFFFFFFC0) * (((((a35 - 1964380358) & 0x75160F76) - 2421) | 0x58) + 622)) ^ (a35 - 1964380358) & 0x75160F76)))(a19, a2, a3, a35, a5, a6, a13, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           *(void *)(v35 + 8 * (int)(a35 - 3137)));
}

uint64_t sub_22B32E058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(_DWORD *)(v9 + (v8 + a6) * (uint64_t)v6) == ((v7 + 55) ^ 0xCF5) + 299684678)
                                * (15 * ((v7 + 55) ^ 0xCF5) - 1676)) | (v7 + 55))))();
}

uint64_t sub_22B32E0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((29 * (a4 + 1 != v6 + 60)) ^ a5)))();
}

uint64_t sub_22B32E1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14, int a15, int a16, unsigned int a17)
{
  if (a17 < 0xAC943B59 != (a15 + a13) < 0xAC943B59) {
    BOOL v19 = (a15 + a13) < 0xAC943B59;
  }
  else {
    BOOL v19 = a15 + a13 > a17;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((1967 * !v19) ^ (v18 + 893))))();
}

uint64_t sub_22B32E230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  uint64_t v8 = v2;
  unsigned int v6 = v3 - 1734664879 * ((((2 * &v6) | 0xD31CFFE6) - &v6 + 376537101) ^ 0xC65557E9) - 758;
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v1 + 8 * (v3 + 2751)))(&v6);
  *uint64_t v4 = 1841123810 - *v4;
  return result;
}

uint64_t sub_22B32E2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                                + 8
                                                                                * ((3687
                                                                                  * ((((a17 - 1673) | 4) ^ 0x4F730348u) > 0x4F73030C)) ^ a18)))(a1, a2, a3, a4, a23);
}

uint64_t sub_22B32E2FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v2 ^ 0x9CC) + 1622) ^ 0xD95) * ((unint64_t)(v1 - a1) > 0x1F)) ^ v2)))();
}

uint64_t sub_22B32E334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  uint64_t v5 = v2;
  unsigned int v8 = v3
     + 731811679 * ((684655066 - (&v5 | 0x28CF01DA) + (&v5 | 0xD730FE25)) ^ 0x9EC65861)
     + 871;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x1570)))(&v5);
}

uint64_t sub_22B32E3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v33 = (unsigned __int16)(v32 - 9344) % 0xD2u;
  int v34 = *(&a28 + (v32 + v30 + 142) % 0xD2u);
  HIDWORD(v36) = v34 ^ 0x1B;
  LODWORD(v36) = v34 << 24;
  int v35 = v36 >> 29;
  int v37 = *(&a28 + (v32 + v30 + 98) % 0xD2u);
  HIDWORD(v36) = v37 ^ 3;
  LODWORD(v36) = (v37 ^ 0x18) << 24;
  int v38 = v36 >> 27;
  int v39 = *(&a28 + (v32 + v30) % 0xD2u);
  HIDWORD(v36) = ~v39;
  LODWORD(v36) = (v39 ^ 0x1A) << 24;
  int v40 = ((v35 - ((v35 << ((((v28 - 62) | 3) ^ 0x9C) & 0xFD)) & 0x36) + 27) ^ *(&a28 + v33))
      + v38
      - (v36 >> 25);
  *(&a28 + v33) = v40 - ((2 * v40) & 0x36) + 27;
  return (*(uint64_t (**)(void))(v29 + 8 * ((488 * (v32 + 1 != v31 + 840)) ^ v28)))();
}

void sub_22B32E4C8()
{
}

uint64_t sub_22B32E4E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8 * ((((a4 - 469615645) & 0x1BFDC756 ^ 0x622) * ((v4 & 0x18) == 0)) ^ a4)))((v5 - v6));
}

uint64_t sub_22B32E524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) = a2;
  return result;
}

void sub_22B32E52C()
{
  if (v0 == 609976655) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_22B32E590@<X0>(int a1@<W2>, int a2@<W3>, char a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  *(unsigned char *)(v7 + v6) = *(unsigned char *)(v9 + (v5 + a2))
                      + (a3 | ~(2 * *(unsigned char *)(v9 + (v5 + a2))))
                      + 43;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == 63) * a4) ^ (a1 + a5 + 794))))();
}

uint64_t sub_22B32E5D8(uint64_t a1, uint64_t a2)
{
  int v3 = STACK[0x278] - 1610;
  STACK[0x2F8] = *(void *)(v2 + 8 * (int)(STACK[0x278] - 3147));
  unint64_t v4 = STACK[0x250];
  BOOL v5 = STACK[0x250] != 0;
  STACK[0x3B8] = STACK[0x268];
  STACK[0x2E8] = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2
                                                              + 8
                                                              * (((((v3 - 1039795734) & 0x3DFA0C5F ^ 0xC7A) + v3 - 1505)
                                                                * v5) ^ v3)))(a1, a2, 631);
}

uint64_t sub_22B32E664(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = (v5 - 1947) | 0x84A;
  *(unsigned char *)(a3 + ((v8 - 2604) ^ (v6 + 66)) + v4) = *(unsigned char *)(a2 + a4 - 347313666);
  return (*(uint64_t (**)(void))(v7 + 8 * ((307 * ((v4 + a1) < 0x40)) ^ v8)))();
}

uint64_t sub_22B32E6C0@<X0>(int a1@<W8>)
{
  int v2 = a1 - 606;
  int v3 = a1 + 1521149207;
  int v4 = (v3 - 1521150783) | 0x416;
  unsigned int v5 = v3 & 0xA55516CE;
  BOOL v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 ^ 0xBEE)))(164, 1043326649) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((v5 ^ 0x6A5 ^ v4) * v6) ^ v2)))();
}

uint64_t sub_22B32E73C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((399 * (a4 + v5 - 16 < ((1282 * (v4 ^ 0x4EC)) ^ (73 * (v4 ^ 0x4FB)) ^ 0xFFFFF009))) ^ v4)))();
}

uint64_t sub_22B32E794(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3626
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ (v4 + v3 - 667)) == v4)) ^ v3)))();
}

uint64_t sub_22B32E7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * (int)(((v62 ^ 0xDFD188DE) * (v64 == v65)) ^ (v63 + v62 - 1458))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_22B32E814(int a1@<W8>)
{
  BOOL v8 = *(_DWORD *)(*v4 + 4 * (a1 + v2) + v5) == v3;
  *uint64_t v7 = ((v6 - 274) ^ 0xAAA409BA) - 1400692510 * (a1 - v8) + v1 + v1 * (v2 + a1 - v8);
}

uint64_t sub_22B32E85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v19 = (v14 - 21) | 2;
  int v20 = 1948972247 * ((((v18 - 136) | 0x22CE58E5) - (v18 - 136) + ((v18 - 136) & 0xDD31A718)) ^ 0x9750AD0B);
  *(void *)(v18 - 128) = v17;
  *(_DWORD *)(v18 - 136) = (v14 + 2811) ^ v20;
  *(_DWORD *)(v18 - 132) = v16 - v20 + (v19 ^ 0xE95E51F4);
  (*(void (**)(uint64_t))(v13 + 8 * (v14 + 3575)))(v18 - 136);
  *(void *)(v18 - 112) = v12;
  *(void *)(v18 - 128) = a12;
  *(_DWORD *)(v18 - 120) = v19
                         + ((((v18 - 136) ^ 0xCBF82531 | 0x6B9B954E)
                           - ((v18 - 136) ^ 0xCBF82531)
                           + (((v18 - 136) ^ 0xCBF82531) & 0x94646AB1)) ^ 0x4A74878B)
                         * v15
                         + 2221;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v19 + 3544)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((43
                                              * (((v19 - 29) ^ (*(_DWORD *)(v18 - 136)
                                                                               - 1678219539
                                                                               + ((v19 + 146) | 0x100u)
                                                                               - 940 < 0xEC408563)) & 1)) ^ v19)))(v21);
}

uint64_t sub_22B32E9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v24 - 104) = a20;
  *(_DWORD *)(v24 - 112) = v23
                         - 1948972247
                         * ((673976353 - ((v24 - 144) | 0x282C1021) + ((v24 - 144) | 0xD7D3EFDE)) ^ 0x624D1A30)
                         + 1372;
  *(void *)(v24 - 128) = a22;
  *(void *)(v24 - 120) = a21;
  *(void *)(v24 - 144) = a10;
  *(void *)(v24 - 136) = a20;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v23 + 3484)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((((((v23 + 88) ^ (a18 - 484148408 < ((v23 + 1733) ^ 0x7FFFF6D1u))) & 1) << 6) & 0x7F | ((((v23 + 600) ^ (a18 - 484148408 < ((v23 + 1733) ^ 0x7FFFF6D1u))) & 1) << 7)) ^ (v23 + 1524))))(v25);
}

uint64_t sub_22B32EA84@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int8x16_t *a35)
{
  *(int8x16_t *)(a5 + (a9 + v37)) = vaddq_s8(vsubq_s8(*a35, vandq_s8(vaddq_s8(*a35, *a35), v40)), v39);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((v36 - 16) ^ (16 * (((v36 - 1441) ^ a1) != ((v35 + 1) & 0x1FFFFFFF0))))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

_DWORD *sub_22B32EAF8(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

uint64_t sub_22B32EB08@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v14 = a2 < v12;
  *(unsigned char *)(a5 + (a9 + v11)) = *(unsigned char *)(a8 + (v10 + a3))
                                            - ((((v9 + a6) & a7) - 33) & (2 * *(unsigned char *)(a8 + (v10 + a3))))
                                            + 42;
  unsigned int v15 = v10 + 1 + a1;
  int v16 = v14 ^ (v15 < v12);
  BOOL v17 = v15 < a2;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v14 * a4) ^ v9)))();
}

uint64_t sub_22B32EB74@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = 0;
  *int v1 = a1;
  return result;
}

uint64_t sub_22B32EB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v3 + 127 - v1;
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = a1 + 127 - v1;
  v11.i64[0] = 0x5454545454545454;
  v11.i64[1] = 0x5454545454545454;
  v12.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v12.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 == 96) * (((v2 - 1857) | 0x82) ^ 0x299)) ^ v2)))();
}

uint64_t sub_22B32EC28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (int)((((v3 ^ 0x77) + ((v3 + 1432590645) & 0xAA9C635F) - 1538) * (a1 == v2)) | v3)))();
}

uint64_t sub_22B32EC70(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * (((a1 + a2 + 671617161 < (v2 ^ 0x8DEu)) ^ (v2 - 1)) & 1 ^ v2)))();
}

uint64_t sub_22B32ECC0@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v11 = 18 * (v8 ^ 0x32B);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v9 + 8 * (((*(_DWORD *)(*(void *)(a5 - 0x281D12643933BF1BLL) - 0x54EEBA8C0E75CADCLL) != v6 + ((v11 - 2888) | 0x2A4) - 686) * (((v11 - 2768) | 0x308) ^ 0x3B7)) ^ v11)))(0xA5E58D2A71F313B9, 3188512219, 259217712, a1, (a2 - 435155889 + v11), (v7 + 259217712), a6 - 0x281D12643933BF1BLL, 1748397262, a3, a4, a5, a6, __PAIR64__(v10, a1), a5 - 0x281D12643933BF1BLL);
}

uint64_t sub_22B32EDE4()
{
  int v5 = v4 ^ 0x4EF;
  unsigned int v11 = v4 - (&v11 ^ 0xA7536869) * v1 - 967;
  int8x16_t v12 = &STACK[0x1367E3C5726D8F1B];
  int8x16_t v13 = v8;
  (*(void (**)(unsigned int *))(v2 + 8 * (v4 ^ 0x1639u)))(&v11);
  int8x16_t v12 = v8;
  LODWORD(v13) = v4
               - 1734664879 * ((&v11 & 0xD96CB158 | ~(&v11 | 0xD96CB158)) ^ 0x94866BD)
               + 1561;
  (*(void (**)(unsigned int *))(v2 + 8 * (v4 ^ 0x9BCu)))(&v11);
  if (v11 == (v4 ^ 0x4EF ^ (v0 + 568))) {
    unsigned int v6 = v10;
  }
  else {
    unsigned int v6 = v11;
  }
  unsigned int v11 = (v4 + 932) ^ ((&v11 ^ 0x16F0452A) * v3);
  int8x16_t v12 = v8;
  (*(void (**)(unsigned int *))(v2 + 8 * (v4 + 2482)))(&v11);
  unsigned int v11 = (v5 + 1795) ^ (((-2093976145 - (&v11 | 0x833075AF) + (&v11 | 0x7CCF8A50)) ^ 0x6A3FCF7A)
                     * v3);
  int8x16_t v12 = v9;
  (*(void (**)(unsigned int *))(v2 + 8 * (v5 | 0xD11)))(&v11);
  return v6 ^ v0;
}

uint64_t sub_22B32EF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  int v30 = (v28 ^ 0x4D2) - 408;
  unsigned int v31 = (((v28 ^ 0x4D2) + 2128189667) & 0x81266AF7 ^ 0xCD83E938) + a28;
  BOOL v32 = v31 < (v28 ^ 0x4D2u) - 761667393;
  BOOL v33 = a24 - 6327607 < v31;
  if (v32 != (a24 - 6327607) < 0xD299E5A9) {
    BOOL v33 = v32;
  }
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((241 * !v33) ^ v30)))(755338528);
}

uint64_t sub_22B32EFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v9 = v6 + ((v7 + 94786420) & 0xFA59A7DD) - 2096957126;
  if (v9 <= 0x40) {
    unsigned int v9 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * (((2096955390 - v4 - v5 + v9 < 0xF)
                                                                                           * (((v7 - 2803) | 0x404)
                                                                                            - 1148)) ^ (v7 - 1414))))(4294966694, 4146271316, a1 - 0x2970AB8229FC3D2ELL, a4, -1569460846, 4146271317);
}

void sub_22B32F094()
{
}

uint64_t sub_22B32F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,uint64_t a56,uint64_t a57)
{
  int v58 = STACK[0x278] - 2903;
  STACK[0x268] = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8 * a55))(a57, 2965982036);
  unsigned int v59 = (*(uint64_t (**)(void))(STACK[0x270] + 8 * a54))();
  unint64_t v60 = STACK[0x270];
  *int v57 = v59;
  v57[1] = 1812433253 * (v59 ^ (v59 >> 30)) + 1;
  return (*(uint64_t (**)(void))(v60 + 8 * ((495 * (((v58 - 1) ^ 1) & 1)) ^ v58)))();
}

uint64_t sub_22B32F294@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((564 * (v3 + 1 == a1 + 48)) ^ a2)))();
}

uint64_t sub_22B32F364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((29 * (a8 + 1 == v10 + 4)) ^ a7)))(v8);
}

uint64_t sub_22B32F430(uint64_t a1, int8x16_t a2, int8x16_t a3, double a4, double a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, int32x4_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unint64_t a15, int a16)
{
  uint64_t v21 = v16 + 4;
  uint64_t v22 = v18 + 16;
  a3.i64[0] = *(void *)(v22 + 4);
  a3.i32[2] = *(_DWORD *)(v22 + 12);
  int8x16_t v23 = vextq_s8(a2, a3, 0xCuLL);
  int8x16_t v24 = a3;
  v24.i32[3] = *(_DWORD *)(v19 + 4 * (v21 + ((v17 + a13) & a14 ^ a15)));
  int32x4_t v25 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v24, a7), vandq_s8(v23, a6)), 1uLL), *(int8x16_t *)(v22 - 908));
  v23.i32[0] = *(_DWORD *)(v20 + 4 * (*(_DWORD *)(v22 + 4) & 1));
  v23.i32[1] = *(_DWORD *)(v20 + 4 * (*(_DWORD *)(v22 + 8) & 1));
  v23.i32[2] = *(_DWORD *)(v20 + 4 * (*(_DWORD *)(v22 + 12) & 1));
  v23.i32[3] = *(_DWORD *)(v20 + 4 * (v24.i8[12] & 1));
  *(int8x16_t *)uint64_t v22 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v25, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v25, v25), a8)), a9), v23);
  return (*(uint64_t (**)(void))(a1 + 8 * (((v21 == 392) * a16) ^ v17)))();
}

uint64_t sub_22B32F43C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x28C] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE2(v7) ^ 0x95) - ((v7 >> 15) & 0x54) + 42;
  *(unsigned char *)(a1 + (v5 + a2)) = (HIBYTE(v7) ^ 0x11)
                                           - ((HIBYTE(v7) << (((v3 + 89) ^ 0x81) & 0xC7)) & 0x54)
                                           + 42;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE1(v7) ^ 0x67) + (~(2 * (BYTE1(v7) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = v7 ^ 0x13;
  unsigned int v8 = LODWORD(STACK[0x2E8]) + 1265509043;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 181316087 < v8;
  if (v5 + 181316087 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_22B32F538(uint64_t a1, unsigned int a2, int a3)
{
  BOOL v13 = v3 > a2;
  *(unsigned char *)(*(void *)(v12 - 200) + (a3 - 1825994309)) = *(unsigned char *)(v8 + (((_BYTE)a3 - 69) & 0xF)) ^ *(unsigned char *)(v5 + (a3 - 1825994309)) ^ *(unsigned char *)(v6 + (((_BYTE)a3 - 69) & 0xF)) ^ *(unsigned char *)((v10 + 940) + (unint64_t)(((_BYTE)a3 - 69) & 0xF) + v7 - 2450) ^ (103 * ((a3 - 69) & 0xF));
  if (v13 == a3 + 1874124684 < v9) {
    BOOL v13 = a3 + 1874124684 < v4;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((2958 * v13) ^ v10)))();
}

uint64_t sub_22B32F5D4@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  uint64_t v78 = HIBYTE(v45);
  uint64_t v52 = BYTE2(v45);
  uint64_t v53 = v45;
  uint64_t v54 = BYTE1(v45);
  uint64_t v55 = v43;
  uint64_t v56 = v49 - 1;
  int v57 = (void *)(v51 + ((v56 + 1544487753 + ((a42 - 125854419) & 0x7806777 ^ 0x1FFFFFFA3F0FBB9)) << 7));
  int v58 = v50 - 16 - ((v47 - 32) & 0x6FEC1380);
  LOBYTE(v43) = *(unsigned char *)(v48 + (v58 ^ 0x37F609C2)) ^ *(unsigned char *)(v57[3] + v53);
  *(unsigned char *)(a2 - 16) = v43;
  unsigned __int8 v59 = *(unsigned char *)(v48 + (v58 ^ 0x37F609C6)) ^ *(unsigned char *)(v57[7] + v42);
  *(unsigned char *)(a2 - 12) = v59;
  LOBYTE(v53) = *(unsigned char *)(v48 + (v58 ^ 0x37F609CA)) ^ *(unsigned char *)(v57[11] + a1);
  *(unsigned char *)(a2 - 8) = v53;
  uint64_t v60 = *(unsigned __int8 *)(v48 + (v58 ^ 0x37F609CE)) ^ *(unsigned __int8 *)(v57[15] + v55);
  *(unsigned char *)(a2 - 4) = *(unsigned char *)(v48 + (v58 ^ 0x37F609CE)) ^ *(unsigned char *)(v57[15] + v55);
  uint64_t v61 = *(unsigned __int8 *)(v48 + (v58 ^ 0x37F609CF)) ^ *(unsigned __int8 *)(v57[16] + BYTE1(a1));
  *(unsigned char *)(a2 - 3) = *(unsigned char *)(v48 + (v58 ^ 0x37F609CF)) ^ *(unsigned char *)(v57[16] + BYTE1(a1));
  unsigned __int8 v62 = *(unsigned char *)(v48 + (v58 ^ 0x37F609CB)) ^ *(unsigned char *)(v57[12] + BYTE1(v42));
  *(unsigned char *)(a2 - 7) = v62;
  uint64_t v63 = *(unsigned __int8 *)(v48 + (v58 ^ 0x37F609C7)) ^ *(unsigned __int8 *)(v57[8] + v54);
  *(unsigned char *)(a2 - 11) = v63;
  LOBYTE(v55) = *(unsigned char *)(v48 + (v58 ^ 0x37F609C3)) ^ *(unsigned char *)(v57[4] + BYTE1(v43));
  *(unsigned char *)(a2 - 15) = v55;
  unsigned __int8 v64 = *(unsigned char *)(v48 + (v58 ^ 0x37F609C0)) ^ *(unsigned char *)(v57[5] + BYTE2(a1));
  *(unsigned char *)(a2 - 14) = v64;
  v58 &= 0xFFFFFFF0;
  uint64_t v65 = *(unsigned __int8 *)(v48 + (v58 ^ 0x37F609CA)) ^ *(unsigned __int8 *)(v57[13] + v52);
  *(unsigned char *)(a2 - 6) = v65;
  LOBYTE(v42) = *(unsigned char *)(v48 + (v58 ^ 0x37F609C6)) ^ *(unsigned char *)(v57[9] + BYTE2(v43));
  *(unsigned char *)(a2 - 10) = v42;
  unsigned __int8 v66 = *(unsigned char *)(v48 + (v58 ^ 0x37F609CE)) ^ *(unsigned char *)(v57[17] + BYTE2(v42));
  *(unsigned char *)(a2 - 2) = v66;
  unsigned __int8 v67 = *(unsigned char *)(v48 + (v58 ^ 0x37F609C3)) ^ *(unsigned char *)(v57[6] + a3);
  *(unsigned char *)(a2 - 13) = v67;
  unsigned __int8 v68 = *(unsigned char *)(v48 + (v58 ^ 0x37F609C7)) ^ *(unsigned char *)(v57[10] + v44);
  *(unsigned char *)(a2 - 9) = v68;
  unsigned __int8 v69 = *(unsigned char *)(v48 + (v58 ^ 0x37F609CB)) ^ *(unsigned char *)(v57[14] + v46);
  *(unsigned char *)(a2 - 5) = v69;
  unsigned __int8 v70 = *(unsigned char *)(v48 + (v58 ^ 0x37F609CF)) ^ *(unsigned char *)(v57[18] + v78);
  *(unsigned char *)(a2 - 1) = v70;
  unsigned int v71 = (void *)(v51 + ((unint64_t)(((int)v56 + 8) % a34) << 7));
  *(_DWORD *)(a2 - 16) = *(_DWORD *)(v71[148] + 4 * v55) ^ *(_DWORD *)(v71[147]
                                                                                        + 4 * v43) ^ *(_DWORD *)(v71[149] + 4 * v64) ^ *(_DWORD *)(v71[150] + 4 * v67);
  unsigned int v72 = &v71[4 * a33 + 147];
  uint64_t v73 = v72[1];
  *(_DWORD *)(a2 - 12) = *(_DWORD *)(v73 + 4 * v63) ^ *(_DWORD *)(*v72 + 4 * v59) ^ *(_DWORD *)(v72[2] + 4 * v42) ^ *(_DWORD *)(v72[3] + 4 * v68);
  int v74 = &v71[4 * a32 + 147];
  uint64_t v75 = *(_DWORD *)(v74[1] + 4 * v62) ^ *(_DWORD *)(*v74 + 4 * v53) ^ (*(_DWORD *)(v74[2] + 4 * v65) ^ *(_DWORD *)(v74[3] + 4 * v69));
  *(_DWORD *)(a2 - 8) = v75;
  unsigned int v76 = &v71[4 * a31 + 147];
  *(_DWORD *)(a2 - 4) = *(_DWORD *)(v76[1] + 4 * v61) ^ *(_DWORD *)(*v76 + 4 * v60) ^ *(_DWORD *)(v76[2] + 4 * v66) ^ *(_DWORD *)(v76[3] + 4 * v70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a40 + 8 * ((((unint64_t)(v56 + 1544487753) <= 0x5C0F0341) | (16 * ((unint64_t)(v56 + 1544487753) <= 0x5C0F0341))) ^ a42)))(v73, v75, a2, a40, v60, v61, v65, v63, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_22B32F62C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 v70 = &a66 + a28 - 0x42CACC5D4F458876;
  unint64_t v81 = a27 + a28;
  unsigned int v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * v66);
  uint64_t v72 = *(unsigned int *)(a59 - 0x2970AB8229FC3CE2);
  uint64_t v73 = *(unsigned int *)(a59 - 0x2970AB8229FC3CDELL);
  int v74 = *(_DWORD *)(a59 - 0x2970AB8229FC3CDALL);
  int v75 = *(unsigned __int8 *)(a59 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v75 == 2)
  {
    BOOL v80 = a4 < v81 && (unint64_t)v70 < a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v69
                                              + 8
                                              * ((7 * ((v80 ^ (BYTE4(a47) + a48 + 1)) & 1)) ^ ((int)a2 + 3667))))(v72);
  }
  else if (v75 == 1)
  {
    BOOL v77 = a4 < v81 && (unint64_t)v70 < a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v69
                                              + 8
                                              * ((((v77 ^ a2) & 1) * (a61 - 1886)) ^ ((int)a2 + 248))))(v72);
  }
  else
  {
    *(_DWORD *)(a59 - 0x2970AB8229FC3CE6) = 2 * (*(_DWORD *)(a59 - 0x2970AB8229FC3CE6) ^ v67)
                                            + v67
                                            - (v68 & (4 * (*(_DWORD *)(a59 - 0x2970AB8229FC3CE6) ^ v67)));
    *(_DWORD *)(a59 - 0x2970AB8229FC3CE2) = (*(_DWORD *)(a59 - 0x2970AB8229FC3CE2) ^ v67)
                                            + (v72 ^ v67)
                                            + v67
                                            - (v68 & (2 * ((*(_DWORD *)(a59 - 0x2970AB8229FC3CE2) ^ v67) + (v72 ^ v67))));
    *(_DWORD *)(a59 - 0x2970AB8229FC3CDELL) = (*(_DWORD *)(a59 - 0x2970AB8229FC3CDELL) ^ v67)
                                            + (v73 ^ v67)
                                            + v67
                                            - (v68 & (2 * ((*(_DWORD *)(a59 - 0x2970AB8229FC3CDELL) ^ v67) + (v73 ^ v67))));
    *(_DWORD *)(a59 - 0x2970AB8229FC3CDALL) = (*(_DWORD *)(a59 - 0x2970AB8229FC3CDALL) ^ v67)
                                            + (v74 ^ v67)
                                            + v67
                                            - (v68 & (2 * ((*(_DWORD *)(a59 - 0x2970AB8229FC3CDALL) ^ v67) + (v74 ^ v67))));
    return v71(v72, a2, v73, a4, a5, a4, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47);
  }
}

uint64_t sub_22B32F64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  *uint64_t v7 = veorq_s8(*v9, (int8x16_t)xmmword_22B497630);
  a7[64] = (v8 + 1503) + a7[64] - 3038;
  a7[66] = a1 + 0x2593ABCA6C1F48F5;
  a7[65] = a1 + 0x490DC007B7B747A3;
  return (*(uint64_t (**)(void))(v10 + 8 * ((89 * (((v7 == 0) ^ (v8 - 118)) & 1)) ^ v8)))();
}

uint64_t sub_22B32F6D8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((469
                                * ((v0 ^ (v1 + 1738293216) & 0x9863BBF7 ^ 0x4B7F9DAE)
                                 + (v1 ^ 0x7A1D7330)
                                 + ((2 * v0) & 0xAFEFDEEE ^ 0x2900D40E) == 1377136453)) ^ v1)))();
}

uint64_t sub_22B32F75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a7 ^ 0x166) - 206) ^ 0x3AE) * (v7 == a5)) ^ a7)))();
}

uint64_t sub_22B32F7C8(char a1, char a2, char a3, char a4, char a5, int a6)
{
  uint64_t v13 = v7 + 2;
  int8x16_t v14 = (unsigned char *)(v10 - 2);
  *int8x16_t v14 = (v6 ^ (a3 + v13) ^ a4) * (v9 + v13);
  *(v14 - 1) = ((a2 + v13) ^ a5) * (a1 + v13);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 == v13) * a6) ^ v11)))();
}

uint64_t sub_22B32F7D4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((STACK[0x288] == 0x24B64731C5A68327) * ((v0 - 1150) ^ 0x470 ^ (221 * (v0 ^ 0xA34)))) ^ v0)))();
}

uint64_t sub_22B32F82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 + v5 == (a5 ^ 0xB08) - 2652) * (a5 + 1990)) ^ a5)))();
}

void sub_22B32F85C(uint64_t a1)
{
  int v1 = 1948972247 * ((1411797685 - (a1 | 0x542652B5) + (a1 | 0xABD9AD4A)) ^ 0x1E4758A4);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B32F92C()
{
  unsigned int v4 = (-2 - ((~((*v3 ^ 0x8742179A) & 0xC74FD2C5) | 0xAFE37D12) + ((*v3 ^ 0x8742179A) & 0x87435000 | 0x501C82ED))) ^ (((v0 - 1855087047) & 0x6E925D9C ^ 0xB8B02D33) + (v0 ^ 0x42A)) & (*v3 ^ 0x8742179A);
  v3[623] = v3[396] ^ *(_DWORD *)(v1 + 4 * (*v3 & 1)) ^ (((v4 ^ 0xA8A16A88 | v3[623] & 0x80000000)
                                                          - 2 * ((v4 ^ 0xA8A16A88) & 0x37BAD49F ^ v4 & 0x10)
                                                          - 1212492657) >> 1) ^ 0x6D3AF331;
  return (*(uint64_t (**)(void))(v2 + 8 * ((997 * (LODWORD(STACK[0x244]) > 0x26F)) ^ v0)))();
}

uint64_t sub_22B32FA28(char a1, int a2, int a3, int a4, int a5, int a6)
{
  *(_DWORD *)(v12 - 208) = v11;
  uint64_t v13 = *(void *)(v12 - 200) - 7;
  *(_DWORD *)(v12 - 220) = v10 & 0xFFFFFFF8;
  *(_DWORD *)(v12 - 216) = v10;
  int v14 = -8 - a6;
  char v15 = a1 + a3 + a2;
  uint64_t v16 = a5 + a3 + a2 - 2556 + v14 + ((a4 + 227457117) & 0xF2714BFC) + 8;
  v18.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a3 + (_BYTE)a2 + 4 + (_BYTE)v14 + (((_BYTE)a4 + 93) & 0xFC) + 8) & 0xF;
  v18.val[0].i64[1] = (v15 + 3 + (_BYTE)v14 + 8) & 0xF;
  v18.val[1].i64[0] = (v15 + 2 + (_BYTE)v14 + 8) & 0xF;
  v18.val[1].i64[1] = (v15 + 1 + (_BYTE)v14 + 8) & 0xF;
  v18.val[2].i64[0] = (v9 + (_BYTE)v14 + 8) & 0xF;
  v18.val[2].i64[1] = (v15 + 15 + (_BYTE)v14 + 8) & 0xF;
  v18.val[3].i64[0] = (v15 + 14 + (_BYTE)v14 + 8) & 0xF;
  v18.val[3].i64[1] = (v15 + 13 + (_BYTE)v14 + 8) & 0xF;
  *(int8x8_t *)(v13 + v16) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v13 + v16), *(int8x8_t *)(v8 + (v16 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v16 & 0xF) + v6 - 6), *(int8x8_t *)(v7 + (v16 & 0xF) - 7)))), (int8x8_t)0x2A2A2A2A2A2A2A2ALL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v18, (int8x16_t)xmmword_22B497560), (int8x8_t)0xE7E7E7E7E7E7E7E7)));
  return (*(uint64_t (**)(__n128))(*(void *)(v12 - 232)
                                           + 8 * ((308 * (-(v10 & 0xFFFFFFF8) == v14)) ^ (a4 + 1136))))((__n128)xmmword_22B497560);
}

void sub_22B32FB98()
{
}

uint64_t sub_22B32FBA0()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x19157D3ABD2659CELL)
     - (((*(_DWORD *)(v2 - 0x19157D3ABD2659CELL) << (((v0 - 4) ^ 0x6F) - 102)) + (((v0 - 1796) | 0x2F5) ^ 0x9BC8D895)) & 0xE5CD437E)
     + 1087049971;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((44 * (((2 * v3) & 0xEDBA7BD4 ^ 0xE5884354) + (v3 ^ 0x43B9C55) - 42286370 != 1951924424)) ^ v0)))();
}

uint64_t sub_22B32FC58(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a2 + 1135) ^ 0x199 ^ ((a2 + 1645) | 0x101)) * (v3 == a3)) ^ (a2 + 715))))();
}

uint64_t sub_22B32FC94@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((((a2 - 1302056440) > 0x37) * ((v2 ^ 0x20) - 687)) ^ (v2 + 1361))))(a1, -1302056440);
}

void tbttItCTp3MZ(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B32FD1C()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xC1C)))(32, 3341989084) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((2020 * ((((v1 + 112) ^ v2) & 1) == 0)) ^ v1)))();
}

uint64_t sub_22B32FD84@<X0>(int a1@<W0>, int8x8_t *a2@<X8>)
{
  *a2 = veor_s8(*v4, (int8x8_t)0x2A2A2A2A2A2A2A2ALL);
  return (*(uint64_t (**)(int8x8_t *, void, unint64_t))(v5
                                                                         + 8
                                                                         * ((((v2 & 0xFFFFFFFFFFFFFFF8) == 8)
                                                                           * ((3 * (v3 & (a1 + 1487) ^ 0x642)) ^ 0x9D0)) ^ v3 & (a1 + 1487))))(a2 + 1, (3 * (v3 & (a1 + 1487) ^ 0x642)) ^ 0x9D0u, (v2 & 0xFFFFFFFFFFFFFFF8) - 16);
}

uint64_t sub_22B32FDE0@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a1 + v2 - 395) ^ (a1 - 224) ^ 0x15E) * (a2 == v3)) ^ v2)))();
}

uint64_t sub_22B32FE1C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  unint64_t v6 = a2 + v3;
  *(unsigned char *)(v6 + a1 - 1) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 < 0x38) * (((v2 + 507) ^ 0x2A7) + 1412)) ^ (v2 + 507))))();
}

void sub_22B32FE58(uint64_t a1)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B32FEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31)
{
  uint64_t v37 = (*(uint64_t (**)(uint64_t, void))(v35 + 8 * (v32 + 1544)))(a11, 0);
  (*(void (**)(uint64_t))(v35 + 8 * (v32 | 0x5E6)))(v37);
  (*(void (**)(void))(v35 + 8 * (v32 + 1510)))();
  v34[1] = *a31 + ((1664525 * (*v34 ^ (*v34 >> 30))) ^ v34[1]);
  *(_DWORD *)(v36 - 116) = v31 ^ 1;
  *(_DWORD *)(v36 - 112) = (v32 ^ 0xDB0) + 306488247 + v31;
  *(_DWORD *)(v36 - 120) = v31 ^ ((v32 ^ 0xDB0) + 306488247) ^ 0xE0;
  *(_DWORD *)(v36 - 140) = ((v32 ^ 0xDB0) - 1604164844) ^ v31;
  *(void *)(v33 + 16) = 2 - v31;
  *(void *)(v33 + 24) = a24;
  *(_DWORD *)(v36 - 108) = (((v32 ^ 0xDB0) + 306488247) ^ 0x35) - v31;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * ((v32 ^ 0xDB0) + 2103)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v36 - 144)))(v38);
}

uint64_t sub_22B330008@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  int v6 = (v4 + 1016) | a2;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((v6 + 106) | 0x40) + 64) == (*(unsigned char *)(a4 + a3)
                                                                                                  - *(unsigned char *)(*(void *)(a1 + 8 * (v6 - 2754)) - 12)
                                                                                                  - 124))
                                * ((v6 - 2174) ^ 0x3D6)) ^ (v6 + 126))))();
}

uint64_t sub_22B330054@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = a5 + 1;
  *(_DWORD *)(v8 + 4 * v10 + 908) = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v8 + 4 * v10 + 912) & 1)) ^ *(_DWORD *)(v8 + 4 * v10) ^ ((*(_DWORD *)(v8 + 4 * v10 + 912) & (a3 + ((v5 + a1) & a2) + 184) | v6 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 == 395) * a4) ^ (v5 - 541))))();
}

uint64_t sub_22B33005C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X4>, int a5@<W8>)
{
  *(unsigned char *)(a4 + (a5 + 1 + v7)) = *(unsigned char *)(a2 + (v6 - 2054175104));
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v6 + 1) & 0xFFFFFFFC) == a1) * (((v5 - 1340) | a3) ^ 0x8FC)) ^ v5)))();
}

uint64_t sub_22B3300AC(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 8) + 1328090399 * ((a1 & 0x3B291235 | ~(a1 | 0x3B291235)) ^ 0x3B0589F0);
  uint64_t v3 = *(void *)a1;
  unsigned int v4 = (1328090399
      * (((&v3 | 0x1D287DAF) - &v3 + (&v3 & 0xE2D78250)) ^ 0xE2FB1995)) ^ (v1 + 1615495782);
  return (*((uint64_t (**)(uint64_t *))*(&off_26DE9F480 + (v1 ^ 0x13102380)) + v1 - 319820579))(&v3);
}

uint64_t sub_22B3301B4(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  BOOL v6 = a5 + a4 + 268960961 >= (((a2 ^ 0xD32) - 509420268) & 0x1E5D1FBBu) - 1434;
  return (*(uint64_t (**)(void))(v5 + 8 * (((16 * v6) | (32 * v6)) ^ a2 ^ 0xD32u)))();
}

void sub_22B330218(uint64_t a1)
{
  int v2 = (uint64_t *)*(&off_26DE9F480
                  + ((-121 * ((qword_2683EB0F0 + dword_2683F6220) ^ 0x4D)) ^ byte_22B48A580[byte_22B47E680[(-121 * ((qword_2683EB0F0 + dword_2683F6220) ^ 0x4D))] ^ 0x1C])
                  + 224);
  uint64_t v3 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9F978
                                                  + (*((unsigned __int8 *)off_26DEA0418
                                                     + (-121 * ((qword_2683EB0F0 - *v2) ^ 0x4D))) ^ 0x1Cu)) ^ (-121 * ((qword_2683EB0F0 - *v2) ^ 0x4D)))
                + 253);
  uint64_t v4 = (*(void *)(v3 - 4) ^ *v2) - (void)&v8;
  uint64_t v5 = 2059148423 * v4 - 0xD2361EE8B96764DLL;
  uint64_t v6 = 2059148423 * (v4 ^ 0xD2361EE8B96764DLL);
  *int v2 = v5;
  *(void *)(v3 - 4) = v6;
  LODWORD(v3) = *(_DWORD *)v2;
  int v7 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 - dword_2683F6220) ^ 0x4D)) ^ byte_22B497460[byte_22B48A480[(-121 * ((qword_2683EB0F0 - dword_2683F6220) ^ 0x4D))] ^ 0x64])
               + 312)
     - 8;
  (*(void (**)(char *, uint64_t (*)()))&v7[8
                                                   * ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                                        + (-121 * ((v6 - v3) ^ 0x4D))
                                                                                        - 8) ^ 0xE1] ^ (-121 * ((v6 - v3) ^ 0x4D)))
                                                   + 31736])((char *)*(&off_26DE9F480+ (*((unsigned char *)off_26DEA0388+ (*((unsigned __int8 *)off_26DE9F930+ (-121 * ((v6 + v3) ^ 0x4D))) ^ 0x64u)- 4) ^ (-121 * ((v6 + v3) ^ 0x4D)))+ 120)- 4, sub_22B3AC7C8);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B330400@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v24 - 120) = v23 - 1;
  *(_DWORD *)(v24 - 128) = v23 + 14;
  *(_DWORD *)(v24 - 136) = v23 + 13;
  *(_DWORD *)(v24 - 140) = v23 + 12;
  v30.val[1].i64[0] = ((_BYTE)v23 + 5) & 0xF;
  v30.val[1].i64[1] = ((_BYTE)v23 + 4) & 0xF;
  v30.val[2].i64[0] = ((_BYTE)v23 + 3) & 0xF;
  v30.val[2].i64[1] = ((_BYTE)v23 + 2) & 0xF;
  v30.val[3].i64[0] = ((_BYTE)v23 + 1) & 0xF;
  v30.val[3].i64[1] = v23 & 0xF;
  v31.val[2].i64[0] = (v23 + 11) & 0xF;
  v31.val[2].i64[1] = ((_BYTE)v23 + 10) & 0xF;
  v31.val[3].i64[0] = ((_BYTE)v23 + 9) & 0xF;
  v31.val[3].i64[1] = ((_BYTE)v23 + 8) & 0xF;
  v25.i64[0] = 0xB7B7B7B7B7B7B7B7;
  v25.i64[1] = 0xB7B7B7B7B7B7B7B7;
  uint64_t v26 = (a2 + v19);
  v30.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v19) & 0xF;
  v30.val[0].i64[1] = ((_BYTE)v23 + 6) & 0xF;
  v27.i64[0] = vqtbl4q_s8(v30, (int8x16_t)xmmword_22B4975D0).u64[0];
  v31.val[0].i64[1] = *(_DWORD *)(v24 - 128) & 0xF;
  v31.val[1].i64[1] = *(_DWORD *)(v24 - 140) & 0xF;
  v31.val[0].i64[0] = *(_DWORD *)(v24 - 120) & 0xF;
  v31.val[1].i64[0] = *(_DWORD *)(v24 - 136) & 0xF;
  v27.i64[1] = vqtbl4q_s8(v31, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, v25));
  *(int8x16_t *)(a4 - 15 + v26) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + (v26 & 0xF) - 15), *(int8x16_t *)(a4 - 15 + v26)), veorq_s8(*(int8x16_t *)(v21 + (v26 & 0xF) - 15), *(int8x16_t *)((v26 & 0xF) + v20 - 14))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(a19
                              + 8 * ((2373 * (((a1 - 382089249) & 0x16C63DFD ^ 0xCED) == (a3 & 0xFFFFFFF0))) ^ a1)))();
}

uint64_t sub_22B330584()
{
  uint64_t v3 = v0 ^ 0x6FDCEC412A2DC68BLL;
  uint64_t v4 = *(void *)(v3 - 0x6FDCEC412A2DC673);
  unsigned int v7 = 3176
     - 1988622253 * ((((&v7 | 0x2F0708A6) ^ 0xFFFFFFFE) - (~&v7 | 0xD0F8F759)) ^ 0x26E0B7F9);
  uint64_t v8 = v4;
  (*(void (**)(unsigned int *))(v2 + 33344))(&v7);
  int v5 = v9;
  (*(void (**)(uint64_t))(v2 + 32368))(v3 - 0x6FDCEC412A2DC68BLL);
  return v5 ^ v1;
}

uint64_t sub_22B330674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, unsigned int a17, unint64_t *a18, uint64_t a19)
{
  unsigned int v23 = 1328090399 * ((&a14 & 0xCC41D25 | ~(&a14 | 0xCC41D25)) ^ 0xCE886E0);
  a17 = v23 ^ 0x881FFD3C;
  a18 = &STACK[0x25ABA05A3795B102];
  a19 = a11;
  a14 = (v22 - 1653802428) ^ v23;
  a15 = -768608835 - v23;
  uint64_t v24 = (*(uint64_t (**)(int *))(v20 + 8 * (v22 + 2541)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((2825 * (a16 == v19 + v21 - 712)) ^ v22)))(v24);
}

uint64_t sub_22B33073C()
{
  unsigned int v5 = (*(_DWORD *)(v2 + 16) ^ v0) - 1165889850;
  BOOL v7 = (*(unsigned char *)(v3 - 0x19157D3ABD2659CALL) & 1) == 0 && v5 < ((111 * (v1 ^ 0xABA)) ^ 0xFFFFFCB6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((104 * v7) ^ v1)))();
}

uint64_t sub_22B3307C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v19 = (*(_DWORD *)(a1 + 16) + a3);
  HIDWORD(a13) = v16;
  HIDWORD(a5) = v19;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (int)((((unsigned __int16)(((2 * (v15 - 48)) ^ 0x810B) + v14) < 0xFFBFu) * (((v15 + 1635700750) & 0x9E812FBF) - 1892)) ^ (v15 - 48))))(v19, v18 + 0x2970AB8229FC3C4ALL, 514405615, a2, 1951924424, 1927716138, 4252680926, 3851058132, a4, a5, v18 + 0x2970AB8229FC3C4ALL, a7, a8, v21, a10, a11, a12, a13, a14);
}

uint64_t sub_22B3308CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return a16(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_22B3308DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) ^ (1866394843 * ((~a1 & 0xE38564E5 | a1 & 0x1C7A9B1A) ^ 0x9925311));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B330A2C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((30 * (LODWORD(STACK[0x220]) + ((v0 + 265) | 0x66) != 1191197869)) ^ (v0 - 635))))();
}

uint64_t sub_22B330AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 < a7 - 3278) * (((a7 - 1502183400) & 0x59897BCD) - 2187)) ^ a7)))();
}

uint64_t sub_22B330AE0()
{
  int v6 = ((v5 - 144) ^ 0xB59EF5EE) * v0;
  *(void *)(v5 - 120) = v10;
  *(void *)(v5 - 144) = v3;
  *(_DWORD *)(v5 - 132) = v9 - v6 + ((v4 - 2784) ^ 0xDC23EC54);
  *(_DWORD *)(v5 - 128) = v6 + v4 - 82;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 522)))(v5 - 144);
  *(_DWORD *)(v8 - 0x6D43FF9324FE1359) = v9;
  *(_DWORD *)(v1 + 44) = -604050357;
  return result;
}

uint64_t sub_22B330B9C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 601) | 4) - 1281) * ((v0 & 0x18) == 0)) ^ v1)))();
}

void U4HBs()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (dword_2683EB1B0 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B473700[byte_22B497360[(-121 * (dword_2683EB1B0 ^ 0x4D ^ qword_2683EB0F0))] ^ 0x9E])
                + 257);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (v1 ^ qword_2683EB0F0 ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * (v1 ^ qword_2683EB0F0 ^ 0x4D))] ^ 0x85])
                + 213);
  unint64_t v3 = 2059148423 * ((unint64_t)&v5[*(void *)(v2 - 4) - v1] ^ 0xD2361EE8B96764DLL);
  *(void *)(v0 - 4) = v3;
  *(void *)(v2 - 4) = v3;
  v6[0] = (1292559617
         * ((((v6 | 0x851AEA1E) ^ 0xFFFFFFFE) - (~v6 | 0x7AE515E1)) ^ 0xDDB67D88)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * (*(_DWORD *)(v0 - 4) ^ 0x4D ^ *(_DWORD *)(v2 - 4));
  int v4 = (char *)*(&off_26DE9F480
               + ((-121 * (dword_2683EB1B0 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B497260[byte_22B48A380[(-121 * (dword_2683EB1B0 ^ 0x4D ^ qword_2683EB0F0))] ^ 0x4F])
               + 107)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_26DEA0388
                                                          + ~*((unsigned char *)off_26DE9F930
                                                                              + v2)
                                                          - 4) ^ v2)
                                      + 31456])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B330DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(void *)(v23 + 2968) = v22;
  *(_DWORD *)(v24 - 128) = (v21 + 2131) ^ (1328090399
                                         * ((((v24 - 152) | 0x7386A3C) - ((v24 - 152) & 0x7386A3C)) ^ 0xF8EB0E06));
  *(unsigned char *)(v24 - 144) = (a20 + ((((4 * v21) ^ 0x88) - 122) & (2 * a20) ^ 0xEE) - 96) ^ (31
                                                                                        * ((((v24 + 104) | 0x3C)
                                                                                          - ((v24 + 104) & 0x3C)) ^ 6));
  *(void *)(v23 + 2984) = a3 + 0x44D4288373D8B59DLL;
  *(unsigned char *)(v24 - 120) = (31 * ((((v24 + 104) | 0x3C) - ((v24 + 104) & 0x3C)) ^ 6)) ^ 0x38;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v21 + 3141)))(v24 - 152);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1506 * (*(_DWORD *)(v24 - 124) == -604050357)) ^ v21)))(v25);
}

uint64_t sub_22B330EBC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((125 * (*(_DWORD *)(v3 + 4 * v4) == a2 + (v2 ^ 0xB16) - 1465)) ^ v2)))();
}

uint64_t sub_22B330EF0(uint64_t result)
{
  *(_DWORD *)(result + 24) = 604091431;
  return result;
}

uint64_t sub_22B330F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W6>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((((a5 + (a4 ^ (v5 + 3862)) + 1426) ^ 0x381)
                                                                        * ((v6 & 0x18) != 0)) ^ a4)))(a1, a2, a3, (v7 - a3));
}

uint64_t sub_22B330F38(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v8 = v6 + a3 + 63 < (v6 + a3);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((8 * ((((a6 - 1524) ^ v8) & 1) == 0)) & 0xDF | (32
                                                                               * (((a6 + 12) ^ ~v8) & 1)) | a6)))();
}

void sub_22B331120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,_DWORD *a50)
{
  *a50 = (*a50 ^ v51) + (a8 ^ v51) + v51 - ((((*a50 ^ v51) + (a8 ^ v51)) << (v50 + 109)) & v52);
  JUMPOUT(0x22B33116CLL);
}

uint64_t sub_22B3311FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a4 + 809) ^ 0x62B) * (a3 + 1 == v5)) ^ a4)))();
}

uint64_t sub_22B331228()
{
  uint64_t v6 = *(void *)(v9 + 24);
  int v7 = 1292559617 * (((v5 - 144) & 0x2E998ABE | ~((v5 - 144) | 0x2E998ABE)) ^ 0x76351D28);
  *(void *)(v5 - 144) = v10;
  *(_DWORD *)(v5 - 136) = (v0 - 750) ^ v7;
  *(_DWORD *)(v5 - 132) = v7 ^ 0x52EC3B2E;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0x192B)))(v5 - 144);
  *(_DWORD *)(v5 - 112) = v0
                        - 1948972247 * ((2 * ((v5 - 144) & 0x68D50AA8) - (v5 - 144) - 1758792363) ^ 0x22B400BB)
                        - 359;
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 104) = v1;
  *(void *)(v5 - 144) = v10;
  *(void *)(v5 - 136) = v1;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 1753)))(v5 - 144);
  *(void *)(v5 - 136) = v1;
  *(void *)(v5 - 128) = v6;
  *(_DWORD *)(v5 - 144) = v0
                        - 1734664879 * ((((v5 - 144) | 0x120180BF) + (~(v5 - 144) | 0xEDFE7F40)) ^ 0x3DDAA8A4)
                        - 1764;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 1745)))(v5 - 144);
}

uint64_t sub_22B33138C(int8x16_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, char a5, char a6, int a7, int a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v61 = (a8 + a7 - 8);
  v63.val[0].i64[0] = ((_BYTE)a8 + (_BYTE)a7 - 8) & 0xF;
  v63.val[0].i64[1] = ((_BYTE)a8 + v59 - 8) & 0xF;
  v63.val[1].i64[0] = ((_BYTE)a8 + v58 - 8) & 0xF;
  v63.val[1].i64[1] = ((_BYTE)a8 + v57 - 8) & 0xF;
  v63.val[2].i64[0] = ((_BYTE)a8 + v56 - 8) & 0xF;
  v63.val[2].i64[1] = ((_BYTE)a8 + a6 - 8) & 0xF;
  v63.val[3].i64[0] = ((_BYTE)a8 + v54 - 8 + (a10 ^ 1)) & 0xF;
  v63.val[3].i64[1] = ((_BYTE)a8 + a5 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v60 - 144) + v61) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v51 + (v61 & 0xF) - 7), *(int8x8_t *)(*(void *)(v60 - 136) + v61)), veor_s8(*(int8x8_t *)((v61 & 0xF) + v52 - 3), *(int8x8_t *)(v53 + (v61 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v63, a1), a2)));
  return (*(uint64_t (**)(void))(a51 + 8 * (((2 * (a8 != v55 + 8)) | ((a8 != v55 + 8) << 6)) ^ a10)))();
}

uint64_t sub_22B3313B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v8 + 8 * ((1877 * ((v7 & 0xFFFFFFF0) == v6 + 792116064)) ^ v6)))(a1, a2, a3, a4, a5, a6, (v6 + 3002), a5);
}

uint64_t sub_22B3313EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  unsigned int v52 = ((~(v46 | 0xE3F516CA) + (v46 & 0xE3F516CA)) ^ 0xF61DDEC1) * v45;
  v48[37] = a45;
  v48[36] = a44;
  *(_DWORD *)(v50 - 176) = (v47 - 1875) ^ v52;
  *(_DWORD *)(v50 - 152) = v52 - 1335958180;
  v48[34] = 0x2517DB9E01464535;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v47 ^ 0x19F6)))(v50 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * (((((v47 - 1) ^ (*(_DWORD *)(v50 - 192) == v49)) & 1)
                                              * (v47 - 1561)) ^ v47)))(v53);
}

uint64_t sub_22B3314DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46,unint64_t a47,uint64_t a48,unint64_t a49,unint64_t a50)
{
  if ((v51 - 1187837911) < 2)
  {
    int v55 = v50 - 302;
    unint64_t v56 = *(void *)(v53 + 496);
    int v57 = STACK[0x350];
    int v58 = (v50 - 2140101605) & (2 * LODWORD(STACK[0x350]));
    int v59 = 2009815553 * ((~(v54 - 192) & 0xE89501B3 | (v54 - 192) & 0x176AFE4C) ^ 0x199E2FF6);
    LOBYTE(STACK[0x1940]) = (~(v54 + 64) & 0xB3 | (v54 + 64) & 0x4C) ^ 0xF;
    *(_DWORD *)(v54 - 136) = v59 + v51 - 890639024;
    STACK[0x1980] = a28;
    *(_DWORD *)(v54 - 172) = v59 + v57 + 1077433106 - v58 + 1317;
    *(_DWORD *)(v54 - 168) = v50 - v59 - 1249;
    STACK[0x1948] = v56;
    STACK[0x1960] = a50;
    STACK[0x1968] = a32;
    STACK[0x1970] = a49;
    int v60 = v50 + 1078;
LABEL_5:
    uint64_t v64 = (*(uint64_t (**)(uint64_t))(a4 + 8 * v60))(v54 - 192);
    unint64_t v65 = STACK[0x270];
    int v66 = *(_DWORD *)(v54 - 176);
    LODWORD(STACK[0x290]) = v66;
    return (*(uint64_t (**)(uint64_t))(v65 + 8 * ((104 * (v66 != ((2 * v55) ^ 0x1A19) - 604053512)) ^ v55)))(v64);
  }
  if (v51 == 1187837913)
  {
    int v55 = (v50 - 2643) | 0x925;
    int v61 = STACK[0x350];
    unsigned int v62 = (2 * LODWORD(STACK[0x350])) & 0x8070B06E;
    STACK[0x1948] = STACK[0x500];
    int v63 = 2009815553 * ((((v54 - 192) | 0x25F30540) - ((v54 - 192) & 0x25F30540)) ^ 0xD4F82B05);
    STACK[0x1980] = a28;
    LOBYTE(STACK[0x1940]) = (((v54 + 64) | 0x40) - ((v54 + 64) & 0x40)) ^ 0xFC;
    STACK[0x1960] = a47;
    STACK[0x1968] = a32;
    STACK[0x1970] = a46;
    *(_DWORD *)(v54 - 172) = v61 + (v55 ^ 0x40385312) + v63 - v62;
    *(_DWORD *)(v54 - 168) = v50 - v63 - 1249;
    *(_DWORD *)(v54 - 136) = v63 + 297198889;
    int v60 = v50 ^ 0x1CDA;
    goto LABEL_5;
  }
  LODWORD(STACK[0x290]) = v52 + 18;
  unint64_t v68 = STACK[0x500];
  unint64_t v69 = LODWORD(STACK[0x350]);
  STACK[0x4E0] = v69;
  return (*(uint64_t (**)(unint64_t *, unint64_t))(a4
                                                                         + 8
                                                                         * ((51
                                                                           * (v69 != (((v50 - 2765) | 0x40) ^ 0xFFFFFDB7)
                                                                                           + ((v50 + 1928301452) & 0x8D106BAF))) ^ (v50 + 780))))(&STACK[0x310], v68);
}

uint64_t sub_22B331754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v7 + v6 + v9) = v10;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v6 + v9 + 1) < 0x38) * a6) ^ (v8 + 1095))))();
}

uint64_t sub_22B331780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((a5 + v8 + 20 * (a8 ^ 0xC85u) - 3716 > 0xFFFFFFEF) * (19 * (a8 ^ 0xC07) - 1026)) ^ a8)))();
}

uint64_t sub_22B3317D0()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x39D)))();
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * ((470
                                              * (((STACK[0x490] == 0x24B64731C5A68327) ^ (v0 - 62)) & 1)) ^ (v0 - 2393))))(v2);
}

uint64_t sub_22B331844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v33 = (v30 + 130) | 0x90;
  int v34 = (*(_DWORD *)(a28 - 0x54EEBA8C0E75CADCLL) ^ v28)
      + ((v28 + v33 - 659) ^ *(_DWORD *)(*(void *)(v29 - 0x281D12643933BF1BLL) - 0x54EEBA8C0E75CADCLL))
      * (*(_DWORD *)(*(void *)(v29 - 0x281D12643933BF1BLL) - 0x54EEBA8C0E75CADCLL) ^ v28);
  unsigned int v35 = v34 - 1249400902 - ((2 * v34) & 0x6B0F4F74);
  uint64_t v36 = (v35 ^ (v33 - 1249401561)) * (*(_DWORD *)(a10 - 0x6E3B751A40ADDC1) - 718092972);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v31 + 8 * (v33 ^ (125 * (v32 < 2)))))((v35 ^ 0xB587A7BALL)+ ((v36 ^ 0x2BFDDDADE57FFE6ELL) - 0x2BFDDDADE57FFE6ELL + ((2 * v36) & 0x1CAFFFCDCLL))* (*(_DWORD *)(*(void *)(a23 - 0x281D12643933BF1BLL) - 0x54EEBA8C0E75CADCLL) ^ v28), 0x908FBA39B587A7BALL, 3045566394, 3581581656);
}

uint64_t sub_22B331A58@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v3) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * (v3 + v5 - 2100 != v1)) ^ v2)))();
}

uint64_t sub_22B331A84()
{
  int v6 = 35 * (v5 ^ 0x88F);
  uint64_t v13 = &STACK[0x1367E3C5726D8F13];
  __int16 v14 = v10;
  unsigned int v12 = v5 - (&v12 ^ 0xA7536869) * v4 - 1569;
  (*(void (**)(unsigned int *))(v1 + 8 * (v5 ^ 0x189Fu)))(&v12);
  LODWORD(v14) = v5 - (&v12 ^ 0x2FDB281A) * v3 + 959;
  uint64_t v13 = v10;
  (*(void (**)(unsigned int *))(v1 + 8 * (v5 + 1818)))(&v12);
  if (v12 == (v6 ^ (v2 + 342))) {
    unsigned int v7 = v9;
  }
  else {
    unsigned int v7 = v12;
  }
  uint64_t v13 = v10;
  unsigned int v12 = (v5 + 330) ^ (225134719
                    * ((1411521409 - (&v12 | 0x54221B81) + (&v12 | 0xABDDE47E)) ^ 0xBD2DA154));
  (*(void (**)(unsigned int *))(v1 + 8 * (v5 ^ 0x758u)))(&v12);
  uint64_t v13 = v11;
  unsigned int v12 = (v6 + 2017) ^ (225134719
                     * ((&v12 - 987934753 - 2 * ((unint64_t)&v12 & 0xC51D4FDF)) ^ 0xD3ED0AF5));
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v1 + 8 * (v6 ^ 0xE33)))(&v12);
  *(_DWORD *)(v0 + 8) = v7;
  return result;
}

uint64_t sub_22B331C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,char a32)
{
  *(_DWORD *)a1 = 1498173510;
  *(unsigned char *)(a1 + 4) = a32;
  *(_WORD *)(a1 + 5) = 769;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = -1744830464;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(STACK[0x208] + 13);
  *(_WORD *)(a1 + 13) = 6799;
  *(unsigned char *)(a1 + 15) = -100;
  *(_DWORD *)(v34 - 152) = v32
                         - 2009815553 * ((2 * ((v34 - 168) & 0x7B86CF0) - (v34 - 168) + 2017956617) ^ 0x894CBD4C)
                         + 1734;
  *(_WORD *)(v34 - 148) = 23041 * ((2 * ((v34 - 168) & 0x6CF0) - (v34 - 168) - 27895) ^ 0xBD4C) + 5730;
  *(void *)(v34 - 160) = a1 + 0x23BCFE0A21D47086;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v32 + 3552)))(v34 - 168);
  *(_WORD *)(a1 + 16) = 256;
  BOOL v37 = (((v32 - 329) - 293) & (a1 - (void)&STACK[0x250])) == 224;
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * (((8 * v37) | (16 * v37)) ^ v32)))(v36);
}

uint64_t sub_22B331D78(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((1849 * (a1 ^ 0x5AA) + 2023034061) & 0x876AE6FA) - 475) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_22B331DC8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 ^ 0xB82 ^ (10 * (v5 ^ 0x2C2))) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_22B331E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((17 * (a5 ^ 0x6E8)) ^ 0x3E9) * (v5 == v6)) ^ a5)))();
}

uint64_t sub_22B331E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((49 * (*(void *)(a7 + 176) != 0)) ^ (v7 - 2044))))();
}

uint64_t sub_22B331E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  int v9 = a8 + ((1154 * (a7 ^ 0x302)) ^ (a5 - 658)) < (a7 ^ 0x87Cu) - 2957;
  return (*(uint64_t (**)(void))(v8 + 8 * (((16 * v9) | (v9 << 6)) ^ a7)))();
}

uint64_t sub_22B331EB4()
{
  BOOL v4 = v0 + v1 + 2 < ((v3 + 1733) ^ 0x7FFFF6D1u);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v3 + 88) ^ v4) & 1) << 6) & 0x7F | ((((v3 + 600) ^ v4) & 1) << 7)) ^ (v3 + 1524))))();
}

uint64_t sub_22B331F08@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  if ((v3 + 1282729728) <= 0x18 && ((1 << v3) & 0x1000581) != 0)
  {
    int v8 = v5 + 426;
    uint64_t v9 = a3 & 0xFFFFFFFFFFFFFFFLL;
    if (v9)
    {
      if (v9 == 3)
      {
        int v10 = 166 * (v8 ^ (v5 + 431));
        int v11 = v8 + a2;
        int v12 = (*(uint64_t (**)())(v6 + 48 * a3 + 8))();
        __asm { BRAA            X8, X17 }
      }
      __asm { BRAA            X1, X17 }
    }
    __asm { BRAA            X11, X17 }
  }
  return a1 ^ 0x2401B795u;
}

void sub_22B332130(uint64_t a1)
{
  int v1 = 1503746353 * ((-663178938 - (a1 | 0xD878B146) + (a1 | 0x27874EB9)) ^ 0x1E68C0F);
  int v2 = *(_DWORD *)(a1 + 24) + v1;
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)a1 - v1;
  int v5 = *(_DWORD *)(v3 - 0x21AEEC4F795AEEB7);
  *(_DWORD *)(v3 - 0x21AEEC4F795AEEB7) = v5 + 8 * v4 - 2064317344;
  unsigned int v6 = v5 + 8 * v4 - 259903432;
  BOOL v7 = v6 < v5 + 1804413912;
  if ((v5 + 1804413912) < 0xE7C9A70B != v6 < 0xE7C9A70B) {
    BOOL v7 = (v5 + 1804413912) < 0xE7C9A70B;
  }
  *(_DWORD *)(v3 - 0x21AEEC4F795AEEB3) += ((v4 - 1331781492) >> 29) + v7;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B332294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v14 - 120) = v12
                         + 1866394843 * ((((2 * (v14 - 136)) | 0x1FCFC22E) - (v14 - 136) + 1880628969) ^ 0x65F0D6E3)
                         + 1024;
  *(void *)(v14 - 112) = a11;
  *(void *)(v14 - 128) = a12;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 + 2347)))(v14 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((99 * (*(_DWORD *)(v14 - 136) - 1678219539 >= (v12 ^ 0xAD7u) - 90223499)) ^ (v12 - 141))))(v15);
}

uint64_t sub_22B33229C@<X0>(const char *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, int8x16_t a7@<Q0>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,unsigned int a34,unsigned int a35,int a36,int a37,int a38,unsigned __int8 a39)
{
  int v49 = *(uint64_t (**)(void, void, const char *, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (v42 + a6 - 1430));
  LODWORD(a19) = a33;
  int v50 = a39 ^ 0x22;
  if (v50 == 2)
  {
    int8x16x4_t v74 = vld4q_s8(a1);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v74.val[1], a7);
    _Q22 = vmovl_u8(*(uint8x8_t *)v63.i8);
    _Q21 = vmovl_high_u8(v63);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unint64_t v68 = (_DWORD *)(v39 + 4 * (v45 + 1873312989));
    int v69 = *(v68 - 8) ^ *(v68 - 3);
    unsigned int v70 = v69 + v44 - ((2 * v69) & 0xB7FDD896);
    int v71 = *(_DWORD *)(v39 + 4 * ((v40 ^ (v45 + 223)) + 1873312989)) ^ *(v68 - 14);
    HIDWORD(v72) = v71 ^ v70 ^ 0x5BFEEC4B;
    LODWORD(v72) = v71 ^ ~v70;
    *unint64_t v68 = (v72 >> 31) + v44 - ((2 * (v72 >> 31)) & 0xB7FDD896);
    return (*(uint64_t (**)(void))(v41 + 8 * ((487 * (v47 == 1873312926)) ^ HIDWORD(a20))))(a34);
  }
  else if (v50 == 1)
  {
    int8x16x4_t v73 = vld4q_s8(a1);
    uint8x16_t v51 = (uint8x16_t)veorq_s8(v73.val[2], a7);
    _Q26 = vmovl_high_u8(v51);
    _Q25 = vmovl_u8(*(uint8x8_t *)v51.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    int v58 = ((a3 + 2237) ^ 0x11956D5A ^ a33)
        + a5
        + ((a35 ^ v46) & (a34 ^ v46) | (a36 ^ v46) & (a34 ^ 0xEE6A98C6))
        + *(_DWORD *)(*(void *)(v48 + 8 * ((int)a3 - 57)) - 12 + 4 * (a21 + v45))
        + (*(_DWORD *)(v39
                     + 4
                     * (*(unsigned char *)(*(void *)(v48 + 8 * a20) - 4 + a21 + v45) - 53)) ^ v44);
    uint64_t v59 = *(void *)(v48 + 8 * HIDWORD(a19)) - 8;
    unsigned int v60 = (v58 + v46 - (v43 & (2 * v58))) ^ v46;
    int v61 = ((v60 << (*(unsigned char *)(v59 + a21 + v45) - 113)) | (v60 >> (113 - *(unsigned char *)(v59 + a21 + v45)))) + (a34 ^ v46);
    return (*(uint64_t (**)(void))(v41 + 8 * ((2608 * (a21 + 1 == v47)) ^ a3)))(v61 + v46 - (v43 & (2 * v61)));
  }
  else
  {
    HIDWORD(a15) = a39 ^ 0x22;
    return v49(a34, a35, a1, a2, a35, a3, a4, a5, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25);
  }
}

uint64_t sub_22B3327B8(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((455 * (v3 + 1 == v1 + 48)) ^ a1)))();
}

void sub_22B332884()
{
}

uint64_t sub_22B3328B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 3261) | 0x151) ^ 0x350) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_22B3328E4@<X0>(int a1@<W3>, unsigned int a2@<W4>, uint64_t a3@<X8>)
{
  int v8 = v3 + 1;
  *(unsigned char *)(v6 + (v8 + a1)) = *(unsigned char *)(v4 + a3 - 2045782476);
  return (*(uint64_t (**)(void))(v7 + 8 * ((113 * (v8 + (v5 ^ 0x187 ^ a2) < 0x40)) ^ v5)))();
}

uint64_t sub_22B3328EC()
{
  int v5 = *(_DWORD *)(v3 + v1 * (uint64_t)v0 + 36) + 350411142;
  BOOL v7 = v5 > ((15 * (v2 ^ 0xF35) - 734421608) & 0x2BC66DF7) - 1585931227 && v5 < SLODWORD(STACK[0x228]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1281 * v7) ^ v2 ^ 0xC8E)))();
}

uint64_t sub_22B332978()
{
  *(unsigned char *)(v0 + (v3 + v4)) = *(unsigned char *)(v1 + (v3 + v4))
                                           - (((2 * (v2 ^ 0x11)) ^ 0x6C) & (2 * *(unsigned char *)(v1 + (v3 + v4))))
                                           + 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((141 * (v3 != 1262439428)) ^ v2)))();
}

uint64_t sub_22B332980(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((a6 - 700554576) & 0xFBFDFC9F ^ (a3 + ((a6 - 3083) ^ 0x234) + 2254))
                                     * (v7 < 0x20)) ^ (a6 - 3083))))();
}

uint64_t sub_22B3329D0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, unsigned int a14)
{
  BOOL v15 = a14 > 0x57C6672;
  if (v15 == a6 + 707944361 < -92038771) {
    BOOL v15 = a6 + 707944361 < a12;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((v15 * ((a1 ^ 0x244) - 2690)) ^ a1)))();
}

void sub_22B332A6C()
{
  if (v0 == 2014623902) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 4) = v1;
}

uint64_t sub_22B332AD0@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 + a1 + a3 - 1) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 + a1 < (unint64_t)(v4 - 3213)) * a2) ^ v3)))();
}

uint64_t sub_22B332B00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (int)(((((v2 == 63) ^ (v3 + 35)) & 1)
                                                                              * (((v3 - 1407056948) | 0x580B18) ^ 0xAC7A1A62)) ^ v3)))(a1, a2, 1401283951, -1327893013);
}

uint64_t sub_22B332B68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(a4 + a8 + (v24 ^ 0x151u ^ (unint64_t)(v25 + 1032))) = v27;
  unsigned int v28 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((3956 * ((v23 & 0x38) == 8)) ^ v24));
  return v28(v28, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
}

uint64_t sub_22B332BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59)
{
  return (*(uint64_t (**)(uint64_t))(v60
                                            + 8
                                            * ((114
                                              * (a59 + v59 + 1164 - 1848375769 >= ((v59 + 1164) ^ 0xB5Fu) + 2147483181)) ^ (v59 + 1164))))(1959124371);
}

uint64_t sub_22B332BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 + 127 - v2;
  long long v6 = *(_OWORD *)(v5 - 31);
  uint64_t v7 = v3 + 127 - v2;
  *(_OWORD *)(v7 - 15) = *(_OWORD *)(v5 - 15);
  *(_OWORD *)(v7 - 31) = v6;
  return (*(uint64_t (**)(void))(v4 + 8 * ((62 * (v2 + (v1 - 512) == 3055)) ^ v1)))();
}

uint64_t sub_22B332C34(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v26 = v18 - 16;
  uint64_t v27 = v26 & 0xF;
  v29.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v29.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v22, a5).u64[0];
  int8x16_t v30 = vrev64q_s8(vmulq_s8(v29, a6));
  *(int8x16_t *)(v17 + v26) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v27 - 15), *(int8x16_t *)(a13 + v26)), veorq_s8(*(int8x16_t *)(v15 + v27 + 1 - 15), *(int8x16_t *)(v14 + v27 + 1 - 15))), vextq_s8(v30, v30, 8uLL));
  return (*(uint64_t (**)(void))(v21 + 8 * (((v19 == 16) * v20) ^ a9)))();
}

uint64_t sub_22B332C40()
{
  int v4 = v0 - 893;
  uint64_t v5 = *(_DWORD **)(v1 + 56);
  **(void **)(v1 + 8) = 0;
  *uint64_t v5 = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(unsigned __int8 *)(v3 + 5) == ((v4 + 362124296) & 0xD3 ^ 0xD2)) * (v4 ^ 0xEE4)) ^ v4)))();
}

uint64_t sub_22B332C9C@<X0>(void *a1@<X6>, int a2@<W8>)
{
  unint64_t v4 = a1[57];
  STACK[0x298] = v4;
  a1[9] = 0;
  LODWORD(STACK[0x30C]) = 1801476204;
  a1[22] = 0;
  LODWORD(STACK[0x284]) = 1801476204;
  a1[48] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 == v2) * (a2 + 1726 + (a2 ^ 0x9C6) - 6265)) ^ a2)))();
}

uint64_t sub_22B332CFC@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v5 - 0x19157D3ABD2659DELL);
  int v8 = *(unsigned __int8 *)(v7 + (v4 - 840667337)) ^ 0x2A;
  int v9 = (((((a2 - 1154229220) & 0x44CC231E) + 30) ^ *(unsigned __int8 *)(v7 + ((a2 + 959) ^ 0xCDE46AA4) + v4)) << 24) | ((*(unsigned __int8 *)(v7 + (v4 - 840667339)) ^ 0x2A) << 16) | ((*(unsigned __int8 *)(v7 + (v4 - 840667338)) ^ 0x2A) << 8) | v8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((43
                                * (((v3 + v9 - 2 * (v9 & 0x5BFEEC4F ^ v8 & 4) + 0x1000000) & 0xFFFFFF ^ 0xFEEC4B)
                                 - (v6
                                  + *(_DWORD *)(a1 + 24)) != -1408312603)) ^ a2)))();
}

uint64_t sub_22B332DEC@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3392 * (a2 == a1 + v2 - 426)) ^ v2)))();
}

uint64_t sub_22B332E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,int a43)
{
  *int v46 = v46[623];
  *(_DWORD *)(v47 - 140) = (v44 + 13955456) ^ a40;
  *(_DWORD *)(v47 - 112) = a43 + a40;
  *(_DWORD *)(v47 - 108) = a43 - a40 - 24;
  *(_DWORD *)(v47 - 120) = a41 ^ a40;
  *(_DWORD *)(v47 - 116) = a40 ^ 1;
  *(void *)(v47 - 136) = (v43 + 1) - a40;
  *(void *)(v47 - 128) = a39;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 1618122403)))(v47 - 144);
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * *(int *)(v47 - 144)))(v48);
}

uint64_t sub_22B332EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((121 * (((v11 + 82496725) & 0xFB152CAF ^ 0x949FAFFA) + v10 < ((v11 - 3692) ^ 0xFFFFFF07))) ^ v11)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_22B332F0C@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1310
                                * (v3
                                 + ((*(unsigned __int8 *)(a1 + 6) - 1) ^ v5)
                                 + (v4 & (2 * (*(unsigned __int8 *)(a1 + 6) - 1)))
                                 + ((a2 + 437135058) & 0xE5F1DFD1)
                                 - 2704 == a3)) ^ a2)))();
}

uint64_t sub_22B332F64@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v54 = v51 + 96;
  unsigned int v55 = (v51 + 1830837083) & 0x92DFAFFB;
  LODWORD(STACK[0x3FC]) = a1;
  uint64_t v56 = (*(uint64_t (**)(uint64_t, void))(v48 + 8 * (v54 ^ 0x1145)))(a48, 0);
  uint64_t v57 = *(void *)(v52 + 16);
  *(_DWORD *)(v52 + 4) = *(_DWORD *)(v52 + 24);
  *(_DWORD *)(v52 + 8) = v57;
  uint64_t v58 = 8 * (v54 ^ 0xEAB);
  *(_DWORD *)(v52 + 12) = (*(uint64_t (**)(uint64_t))(STACK[0x270] + v58))(v56);
  int v59 = (*(uint64_t (**)(void))(STACK[0x270] + v58))();
  unint64_t v60 = STACK[0x270];
  *(_DWORD *)uint64_t v52 = v59;
  v50[1] = *(_DWORD *)v52 + ((1664525 * (*v50 ^ (*v50 >> 30))) ^ v50[1]);
  STACK[0x1948] = 3706420152 - v49;
  STACK[0x1950] = 3706420154 - v49;
  *(_DWORD *)(v53 - 164) = v49 ^ 1;
  *(_DWORD *)(v53 - 160) = v55 + 542904465 + v49;
  *(_DWORD *)(v53 - 168) = (v55 + 542904305) ^ v49;
  *(_DWORD *)(v53 - 188) = (v55 - 1604166046) ^ v49;
  *(_DWORD *)(v53 - 156) = v55 + 542904465 - v49 - 89;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (int)(v55 ^ 0x38B)))(v53 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * *(int *)(v53 - 192)))(v61);
}

uint64_t sub_22B3330F4@<X0>(int a1@<W0>, unint64_t a2@<X1>, int a3@<W2>, unint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  BOOL v38 = v28 > v30;
  int v39 = a6 + a5;
  int v40 = a6 + 1;
  uint64_t v41 = 4 * (v40 + a5);
  unint64_t v42 = (*(_DWORD *)(a28 + v41 + a7) ^ v29) + (v32 ^ HIDWORD(a4));
  unint64_t v43 = (*(_DWORD *)(*v37 + v41 + a7) ^ v29) * a8
      + HIDWORD(v34)
      + ((v42 + ((a1 + 452) ^ v33) - (v36 & (2 * v42))) ^ a2);
  *(_DWORD *)(a28 + 4 * v39 + a7) = v43 + v29 - (v31 & (2 * v43));
  if (v38 == v40 + 707944361 < -92038771) {
    BOOL v38 = v40 + 707944361 < a3;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * (a1 | (2 * v38))))();
}

uint64_t sub_22B3331B0()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2406
                                * (*(_DWORD *)(v1 + 4 * (v3 + v4 - 1)) == ((17 * (v0 ^ 0x75B)) ^ v2))) ^ v0)))();
}

uint64_t sub_22B3331F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(void))(v33 + 8 * (((((a32 - 1821) | 0x40) + 627) * (v32 == 1)) ^ (a32 + 604))))();
}

uint64_t sub_22B333224(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((105 * (a6 + a1 + 138743816 < ((a5 + 283) ^ 0xCD8u))) ^ a5)))();
}

uint64_t sub_22B33329C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W8>)
{
  *(unsigned char *)(v8 + a3 + v7) ^= *(unsigned char *)(v6 + a3 + v7);
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((v5 - 16) | 0x10) ^ a2) + ((v5 + 626) | a1)) * (v7 + v5 + 1654 - 1797 < a5)) ^ (v5 + 3324))))();
}

uint64_t sub_22B3332F8(uint64_t a1)
{
  int v1 = 225134719 * ((2 * (a1 & 0x3B70752E) - a1 + 1150257873) ^ 0x527FCFFB);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (*(_DWORD *)(a1 + 12) ^ v1 ^ 0xE3B))
          + (((((*(_DWORD *)(a1 + 8) + v1) ^ 0xDBFEEC4B) - 1 < 0x63) * (((*(_DWORD *)(a1 + 12) ^ v1) - 2991) ^ 0x346)) ^ *(_DWORD *)(a1 + 12) ^ v1)
          - 1))();
}

uint64_t sub_22B33338C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v6 = ((a4 ^ 0x1B6) + 900) | 0xC;
  *uint64_t v8 = a1;
  *int v9 = (v4 + (a4 ^ 0x1B6) - 1148) ^ v10;
  int v13 = (v6 + 447) ^ (225134719
                    * ((&v13 - 932790150 - 2 * ((unint64_t)&v13 & 0xC866C07A)) ^ 0xDE968550));
  uint64_t v14 = v12;
  (*(void (**)(int *))(v5 + 8 * (v6 ^ 0x7D5)))(&v13);
  uint64_t v14 = v11;
  int v13 = (((v6 - 1036) | 0x341) + 650) ^ (225134719
                                       * ((&v13 + 1496110038 - 2 * ((unint64_t)&v13 & 0x592CD3D6)) ^ 0x4FDC96FC));
  (*(void (**)(int *))(v5 + 8 * ((v6 - 1036) | 0xBD9)))(&v13);
  return v4 ^ 0xDBFEEC4B;
}

void *sub_22B3334D8(void *result)
{
  *(_DWORD *)(*result - 0x5E569483AA752CF9) = v1;
  return result;
}

void sub_22B3334F4()
{
}

uint64_t sub_22B333550()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2961 * (v3 == v0 + ((v1 + 1434904452) & 0xAA791FB7) - 3605)) ^ (v1 - 819))))();
}

uint64_t sub_22B3335A0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3717
                                * (((v1 - 1826092963) & 0x6CD7FE7F ^ 0xC9215B5D)
                                 + *(_DWORD *)(a1 - 0x24B64731C5A68113) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_22B333608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (int)(((((a4 - 3135) | 0x581) ^ 0x713) * (v45 == v46)) ^ (a4 - 758))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_22B333644@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v4 + a1 + 24) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 + v5 != 943) * v1) ^ v3)))();
}

_DWORD *sub_22B333674@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t v2 = a2;
  *uint64_t result = 604092286;
  return result;
}

void sub_22B333688()
{
}

uint64_t sub_22B333918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11, _DWORD *a12, _DWORD *a13, int *a14, uint64_t a15, uint64_t a16, int a17, int a18, int a19, int a20,int a21,int a22,uint64_t a23,int *a24,uint64_t a25,int a26,unsigned int a27)
{
  unsigned int v31 = 2009815553 * (((&a23 | 0xAF147DE1) + (~&a23 | 0x50EB821E)) ^ 0x5E1F53A5);
  a23 = v28;
  LODWORD(a24) = 673189867 - v31;
  HIDWORD(a24) = (v29 + 722) ^ v31;
  (*(void (**)(uint64_t *))(v27 + 8 * (v29 + 2787)))(&a23);
  LODWORD(a23) = (v29 + 425456464) ^ (225134719 * (&a23 ^ 0x16F0452A));
  a24 = a14;
  a25 = v28;
  (*(void (**)(uint64_t *))(v27 + 8 * (v29 ^ 0x154B)))(&a23);
  unsigned int v32 = 1734664879 * ((&a23 - 1882503545 - 2 * (&a23 & 0x8FCB4687)) ^ 0xA0106E9D);
  a26 = v29 - v32 + 2171;
  a27 = v32 - 635067263;
  LODWORD(a23) = -38327932 - v32;
  a24 = &a19;
  a25 = v28;
  uint64_t v33 = (*(uint64_t (**)(uint64_t *))(v27 + 8 * (v29 + 2843)))(&a23);
  *v30 += a19;
  *a13 += a20;
  *a12 += a21;
  *a11 += a22;
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((2340
                                              * (((v29 - 297) ^ 0xCE27640D) + a18 < ((907 * (v29 ^ 0x508)) ^ 0xFFFFF8D6))) ^ v29)))(v33);
}

uint64_t sub_22B333AF4()
{
  uint64_t v5 = (5 * (v0 ^ 0x2B4) + 1983931304) & 0x89BF93FF;
  int v6 = *(unsigned __int8 *)(v1 + (v5 ^ 0x9195D5A7844D3670) + v3 + 1)
     - (*(unsigned char *)(v2 + (v5 ^ 0x9195D5A7844D3670) + v3 + 1) - 94);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2783 * (((2 * v6) & 0xFFDACFBC) + (v6 ^ 0x7FED67DE) == 2146265054)) ^ v0)))();
}

uint64_t sub_22B333AFC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v3 + (v6 + v4)) = *(unsigned char *)(a1 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

uint64_t sub_22B333B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v72 = (unsigned char *)STACK[0x418];
  int8x16x4_t v73 = (unsigned char *)STACK[0x4B8];
  unint64_t v74 = STACK[0x260];
  *(unsigned char *)(v74 + 248) = *(unsigned char *)STACK[0x418] ^ *(unsigned char *)STACK[0x4B8] ^ v70;
  *(unsigned char *)(v74 + 249) = v72[1] ^ ((a53 & 0xED) - 58) ^ v73[1];
  *(unsigned char *)(v74 + 250) = v72[2] ^ v73[2] ^ v70;
  *(unsigned char *)(v74 + 251) = v72[3] ^ v73[3] ^ v70;
  *(unsigned char *)(v74 + 252) = v72[4] ^ v73[4] ^ v70;
  *(unsigned char *)(v74 + 253) = v72[5] ^ v73[5] ^ v70;
  *(unsigned char *)(v74 + 254) = v72[6] ^ v73[6] ^ v70;
  *(unsigned char *)(v74 + 255) = v72[7] ^ v73[7] ^ v70;
  *(unsigned char *)(v74 + 256) = v72[8] ^ v73[8] ^ v70;
  *(unsigned char *)(v74 + 257) = v72[9] ^ v73[9] ^ v70;
  *(unsigned char *)(v74 + 258) = v72[10] ^ v73[10] ^ v70;
  *(unsigned char *)(v74 + 259) = v72[11] ^ v73[11] ^ v70;
  *(unsigned char *)(v74 + 260) = v72[12] ^ v73[12] ^ v70;
  *(unsigned char *)(v74 + 261) = v72[13] ^ v73[13] ^ v70;
  *(unsigned char *)(v74 + 262) = v72[14] ^ v73[14] ^ v70;
  *(unsigned char *)(v74 + 263) = v72[15] ^ v73[15] ^ v70;
  *(unsigned char *)(v74 + 264) = v72[16] ^ v73[16] ^ v70;
  *(unsigned char *)(v74 + 265) = v72[17] ^ v73[17] ^ v70;
  *(unsigned char *)(v74 + 266) = v72[18] ^ v73[18] ^ v70;
  *(unsigned char *)(v74 + 267) = v72[19] ^ v73[19] ^ v70;
  STACK[0x2F0] = *(void *)(v71 + 8 * (int)(STACK[0x278] - 3106));
  STACK[0x538] = STACK[0x268];
  LODWORD(STACK[0x544]) = 556261549;
  STACK[0x330] = a70;
  return (*(uint64_t (**)(void))(v71
                              + 8
                              * (int)((231
                                     * ((v70 & (2 * *(_DWORD *)(v74 + 196)) ^ 0x22)
                                      + (*(_DWORD *)(v74 + 196) & 0x3F ^ 0x756E7ACCu)
                                      - 1970174721 < 0xFFFFFFC0)) ^ a53 & 0xD52893ED)))();
}

void sub_22B333CEC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 2009815553 * ((656841615 - (a1 | 0x27269B8F) + (a1 | 0xD8D96470)) ^ 0x29D24A35);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = ((unint64_t)(*(_DWORD *)(v2 - 0x21AEEC4F795AEEB7) + 205) >> 3) & 0x3F;
  *(unsigned char *)(v2 - 0x21AEEC4F795AEEAFLL + v3) = 0x80;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B333E0C@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W3>, int a4@<W4>, unsigned int a5@<W6>, uint64_t a6@<X7>, unsigned int a7@<W8>)
{
  int v14 = v8 + 1;
  BOOL v15 = a5 < v11;
  *(unsigned char *)(v9 + (v7 + 1 + a1)) = *(unsigned char *)(a6 + (a4 + v14 + 788));
  unsigned int v16 = v14 + (a7 ^ v12 ^ (a3 + 97));
  int v17 = v15 ^ (v16 < a2);
  BOOL v18 = v16 < v10;
  if (!v17) {
    BOOL v15 = v18;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * (((2 * !v15) | (4 * !v15)) ^ a7)))();
}

uint64_t sub_22B333E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  v63.val[1].i64[0] = ((_BYTE)v55 + 6) & 0xF;
  v63.val[1].i64[1] = ((_BYTE)v55 + 5) & 0xF;
  v63.val[2].i64[0] = ((_BYTE)v55 + 4) & 0xF;
  v63.val[2].i64[1] = ((_BYTE)v55 + 3) & 0xF;
  v63.val[3].i64[0] = ((_BYTE)v55 + 2) & 0xF;
  v63.val[3].i64[1] = ((_BYTE)v55 + 1) & 0xF;
  v58.i64[0] = 0x9393939393939393;
  v58.i64[1] = 0x9393939393939393;
  uint64_t v59 = (v55 + v54);
  v63.val[0].i64[0] = ((_BYTE)v55 + (_BYTE)v54) & 0xF;
  v63.val[0].i64[1] = ((_BYTE)v55 + 7) & 0xF;
  v60.i64[0] = vqtbl4q_s8(v63, (int8x16_t)xmmword_22B4975D0).u64[0];
  v64.val[0].i64[1] = ((_BYTE)v55 - 1) & 0xF;
  v64.val[1].i64[1] = ((_BYTE)v55 + 13) & 0xF;
  v64.val[2].i64[1] = ((_BYTE)v55 + 11) & 0xF;
  v64.val[3].i64[1] = ((_BYTE)v55 + 9) & 0xF;
  v64.val[0].i64[0] = v55 & 0xF;
  v64.val[1].i64[0] = ((_BYTE)v55 + 14) & 0xF;
  v64.val[2].i64[0] = (v55 + 12) & 0xF;
  v64.val[3].i64[0] = ((_BYTE)v55 + 10) & 0xF;
  v60.i64[1] = vqtbl4q_s8(v64, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v61 = vrev64q_s8(vmulq_s8(v60, v58));
  *(int8x16_t *)(v57 - 15 + v59) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v51 + (v59 & 0xF) - 15), *(int8x16_t *)(v50 - 15 + v59)), veorq_s8(*(int8x16_t *)((v59 & 0xF) + v52 - 11), *(int8x16_t *)(v53 + (v59 & 0xF) - 15))), vextq_s8(v61, v61, 8uLL));
  return (*(uint64_t (**)(void))(a49
                              + 8
                              * ((120 * (((((v56 - 48) | 8) + 828) ^ 0x9F4) != ((((v56 - 48) | 8) ^ 0xFFFFF958) & v49))) ^ ((v56 - 48) | 8))))();
}

uint64_t sub_22B333F84@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 + 1 == v1) ^ (-77 * (v3 ^ 1))) & 1 | (32
                                                                                            * (((v2 + 1 == v1) ^ (-77 * (v3 ^ 1))) & 1))) ^ (v3 - 48))))();
}

uint64_t sub_22B333FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unsigned int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x240] = a39;
  return (*(uint64_t (**)(uint64_t))(a65
                                            + 8
                                            * (int)(((a39 == ((v65 + 1006624197) ^ 0x3BFFDB5A) - 1207)
                                                   * ((v65 + 1006624197) & 0xC40027FB ^ 0x7EB)) ^ v65)))(a40);
}

uint64_t sub_22B334020(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a8 + ((a6 - 2013028965) & 0x77FC5DF7 ^ (a2 - 611)) > 0xFFFFFFEF)
                                * (53 * (a6 ^ 0xA4D) - 486)) ^ a6)))();
}

uint64_t sub_22B334078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, unsigned int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, int a20,__int16 a21)
{
  int v28 = v25 - 1851;
  int v29 = v25 - 3230;
  *long long v22 = a13;
  uint64_t v30 = *v23;
  *(_DWORD *)(v30 + 3) = 16908633;
  *(unsigned char *)(v30 + 2) = 76;
  *(_WORD *)uint64_t v30 = 20550;
  *(unsigned char *)(v30 + 7) = 0;
  *(_DWORD *)(v30 + 8) = bswap32(v24 + 44);
  *(unsigned char *)(v30 + 12) = *v21;
  *(unsigned char *)(v30 + 13) = 0;
  *(unsigned char *)(v30 + 14) = a11;
  *(unsigned char *)(v30 + 15) = 0;
  unsigned int v31 = (&a18 ^ 0xA7536869) * v27;
  a20 = (v28 + 46) ^ v31;
  a19 = v30 + 16;
  a21 = v31 + 17221;
  uint64_t v32 = (*(uint64_t (**)(char *))(v26 + 8 * (v28 ^ 0x885)))(&a18);
  *(_DWORD *)(v30 + 32) = bswap32(a12);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (v28 ^ (179
                                                    * (((v29 + (v28 ^ 0xAD0) + 215920527) ^ (2
                                                                                           * (v24
                                                                                            - ((2 * v24) & 0x8CFEBF4A)
                                                                                            - 964730971)) & 0x6EDFFFD6)
                                                     + ((v24 - ((2 * v24) & 0x8CFEBF4A) - 964730971) ^ 0x7110A04E)
                                                     + 2128408509 == 911011752)))))(v32);
}

uint64_t sub_22B3341CC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ (110 * (((v3 ^ v2) & 0x1F) != 0xD)))))();
}

uint64_t sub_22B334230(uint64_t a1, unsigned int a2, int a3)
{
  int v7 = (v4 - 1647) | 0x402;
  unint64_t v8 = STACK[0x2E8];
  unsigned int v9 = *(_DWORD *)(STACK[0x248] - 0x2970AB8229FC3CE6 + ((a3 + 430277846) & 0xFFFFFFFC));
  *(unsigned char *)(v8 + (a3 + 430277846)) = (HIBYTE(v9) ^ 0x11) - ((v9 >> 23) & 0x54) + 42;
  *(unsigned char *)(v8 + (a3 + 430277847)) = ((v9 >> ((v7 - 72) ^ 0x43)) ^ 0x95)
                                                  - ((2 * (v9 >> ((v7 - 72) ^ 0x43))) & 0x55)
                                                  + 42;
  *(unsigned char *)(v8 + (a3 + 430277848)) = (v5 ^ BYTE1(v9)) + (~(2 * (v5 ^ BYTE1(v9))) | 0xAB) + 43;
  *(unsigned char *)(v8 + (a3 + 430277849)) = v9 ^ 0x13;
  unsigned int v10 = *v3 - 558296271;
  BOOL v11 = v10 < a2;
  BOOL v12 = v10 > 0xF227CF5C;
  if (a2 > 0xF227CF5C != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((915 * v12) ^ v7)))();
}

uint64_t sub_22B33433C@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  unint64_t v5 = v1 + v2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a1 ^ 0xA98) + 2199) ^ 0xFFFFFFF1) + 761 * (a1 ^ 0xA98))
                                     * (v5 - v4 + 1892970058 < 8)) ^ a1)))();
}

uint64_t sub_22B33439C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(void),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  uint64_t v100 = v33;
  LODWORD(a21) = HIDWORD(a17) - 1922234455;
  v40.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v40.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  int8x16_t v41 = (int8x16_t)vdupq_n_s32(0x5BFEEC4Fu);
  int32x4_t v42 = vdupq_n_s32(0xDBFEEC4B);
  uint64_t v43 = v38 - 1;
  int8x16_t v44 = (int8x16_t)vdupq_n_s32(0x5BFEEC5Bu);
  a24 = *(uint64_t (**)(void))(v37 + 8 * v32);
  int v45 = STACK[0x2D4];
  int v46 = STACK[0x2D8];
  HIDWORD(a21) = STACK[0x2D4];
  LODWORD(a22) = v46;
  uint64_t v47 = LODWORD(STACK[0x2DC]);
  int v48 = STACK[0x2E0];
  HIDWORD(a22) = STACK[0x2DC];
  LODWORD(a23) = v48;
  HIDWORD(a20) = LOBYTE(STACK[0x2EC]) ^ 0x22;
  int v49 = LOBYTE(STACK[0x2EC]) ^ 0x22;
  if (v49 == 2)
  {
    int8x16x4_t v102 = vld4q_s8((const char *)&STACK[0x28C]);
    int v79 = 19 * (a6 ^ (a6 + 54));
    uint8x16_t v80 = (uint8x16_t)veorq_s8(v102.val[0], v40);
    uint16x8_t v81 = vmovl_u8(*(uint8x8_t *)v80.i8);
    uint16x8_t v82 = vmovl_high_u8(v80);
    uint8x16_t v83 = (uint8x16_t)veorq_s8(v102.val[1], v40);
    _Q23 = vmovl_u8(*(uint8x8_t *)v83.i8);
    _Q22 = vmovl_high_u8(v83);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    uint8x16_t v88 = (uint8x16_t)veorq_s8(v102.val[2], v40);
    uint16x8_t v89 = vmovl_high_u8(v88);
    uint16x8_t v90 = vmovl_u8(*(uint8x8_t *)v88.i8);
    v102.val[0] = veorq_s8(v102.val[3], v40);
    v102.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v102.val[0]);
    v102.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[1]);
    v102.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[1].i8);
    v102.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v102.val[0].i8);
    v102.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[0]);
    v102.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[0].i8);
    int32x4_t v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)), v102.val[0]);
    int32x4_t v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)), v102.val[3]);
    int32x4_t v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v102.val[1]);
    int32x4_t v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v89, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v102.val[2]);
    v102.val[0] = veorq_s8(vandq_s8((int8x16_t)v91, v41), (int8x16_t)(*(_OWORD *)v102.val & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    v102.val[3] = veorq_s8(vandq_s8((int8x16_t)v92, v41), (int8x16_t)(*(_OWORD *)&v102.val[3] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    v102.val[1] = veorq_s8(vandq_s8((int8x16_t)v93, v41), (int8x16_t)(*(_OWORD *)&v102.val[1] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    v102.val[2] = veorq_s8(vandq_s8((int8x16_t)v94, v41), (int8x16_t)(*(_OWORD *)&v102.val[2] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    a31 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v102.val[1], (int32x4_t)v102.val[1])), v42);
    a32 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v102.val[2], (int32x4_t)v102.val[2])), v42);
    a29 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v102.val[0], (int32x4_t)v102.val[0])), v42);
    a30 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v102.val[3], (int32x4_t)v102.val[3])), v42);
    unsigned int v95 = (_DWORD *)&a29 + v36 + v39 + 16;
    int v96 = *(v95 - 8) ^ *(v95 - 3);
    int v97 = v96 + v34 - ((((v79 - 604) | 0x20) - 1208101776) & (2 * v96));
    int v98 = *(v95 - 16) ^ *(v95 - 14);
    HIDWORD(v99) = v98 ^ 0x5BFEEC4B ^ v97;
    LODWORD(v99) = v98 ^ ~v97;
    *unsigned int v95 = (v99 >> 31) + v34 - ((2 * (v99 >> 31)) & 0xB7FDD896);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8 * ((3641 * (v36 + 17 == v36 + 80)) ^ v79)))(a1, v43);
  }
  else if (v49 == 1)
  {
    int8x16x4_t v101 = vld4q_s8((const char *)&STACK[0x28C]);
    int v50 = a6 ^ (a6 - 415);
    uint8x16_t v51 = (uint8x16_t)veorq_s8(v101.val[0], v40);
    uint16x8_t v52 = vmovl_u8(*(uint8x8_t *)v51.i8);
    int8x16_t v53 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v52.i8);
    int8x16_t v54 = (int8x16_t)vmovl_high_u16(v52);
    uint16x8_t v55 = vmovl_high_u8(v51);
    int8x16_t v56 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8);
    int8x16_t v57 = (int8x16_t)vmovl_high_u16(v55);
    uint8x16_t v58 = (uint8x16_t)veorq_s8(v101.val[1], v40);
    uint16x8_t v59 = vmovl_high_u8(v58);
    uint16x8_t v60 = vmovl_u8(*(uint8x8_t *)v58.i8);
    uint8x16_t v61 = (uint8x16_t)veorq_s8(v101.val[2], v40);
    _Q27 = (int8x16_t)vmovl_high_u8(v61);
    _Q26 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v61.i8);
    int8x16_t v64 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q27.i8, 0x10uLL);
    __asm { SHLL2           V27.4S, V27.8H, #0x10 }
    v101.val[0] = veorq_s8(v101.val[3], v40);
    v101.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[1]);
    v101.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[0]);
    v101.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8), 0x18uLL), v64), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), v53));
    v101.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v101.val[3], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v54));
    v101.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8), 0x18uLL), v69), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v59.i8, 8uLL), v56));
    v101.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v101.val[2], 0x18uLL), _Q27), vorrq_s8((int8x16_t)vshll_high_n_u16(v59, 8uLL), v57));
    int32x4_t v70 = (int32x4_t)veorq_s8(vandq_s8(v101.val[0], v44), (int8x16_t)(*(_OWORD *)&v53 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    int32x4_t v71 = (int32x4_t)veorq_s8(vandq_s8(v101.val[3], v44), (int8x16_t)(*(_OWORD *)&v54 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    int32x4_t v72 = (int32x4_t)veorq_s8(vandq_s8(v101.val[1], v44), (int8x16_t)(*(_OWORD *)&v56 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    int32x4_t v73 = (int32x4_t)veorq_s8(vandq_s8(v101.val[2], v44), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[1], vaddq_s32(v72, v72)), v42);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[2], vaddq_s32(v73, v73)), v42);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[0], vaddq_s32(v70, v70)), v42);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[3], vaddq_s32(v71, v71)), v42);
    int v74 = ((v50 + 1688) ^ v45 ^ 0x11956F00)
        - 1971744649
        + ((v46 ^ 0xEE6A98C6) & (v48 ^ v38) | (v46 ^ v38) & (v47 ^ v38))
        + *((_DWORD *)*(&off_26DE9F480 + (v50 ^ 0xCC)) + v39 + 1697543581)
        + (a29.i32[(*((unsigned char *)*(&off_26DE9F480 + (v50 ^ 0x143)) + v39 + 1697543580) - 53)] ^ v34);
    int v75 = v74 + v38 - (v35 & (2 * v74));
    unsigned int v76 = (char *)*(&off_26DE9F480 + v50 - 312) - 8;
    unsigned int v77 = (((v75 ^ v38) << (v76[v39 + 1697543584] - 113)) | ((v75 ^ v38) >> (113 - v76[v39 + 1697543584])))
        + (v46 ^ v38);
    return (*(uint64_t (**)(_UNKNOWN **, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (v50 ^ (4 * (v36 != 1697543569)))))(&off_26DE9F480, v43, v36 + 16, 1697543585, -(v76[v39 + 1697543584] - 113), 3999963334, v77 + v38 - (v35 & (2 * v77)), v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v100,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else
  {
    return sub_22B32D004(a1, v43, a3, a4, a5, a6, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v100,
             a20,
             a21,
             SHIDWORD(a21),
             a22,
             SHIDWORD(a22),
             a23,
             a24);
  }
}

uint64_t sub_22B3343FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x1868]) = v72;
  LODWORD(STACK[0x186C]) = 336488989;
  LODWORD(STACK[0x3FC]) = **(_DWORD **)(v71 + 8 * (v70 - 3113));
  int v75 = *(unsigned int **)(v71 + 8 * (v70 - 2910));
  STACK[0x218] = (unint64_t)v75;
  uint64_t v76 = *v75;
  int v77 = v70 + 1591519834 + 1990461019 * a70;
  *(_DWORD *)(v73 - 164) = v77;
  *(_DWORD *)(v73 - 160) = ((v70 + 1591519834) ^ 0xB1) + 1990461019 * a70;
  *(_DWORD *)(v73 - 168) = (v70 - 1084416579) ^ (1990461019 * a70);
  *(_DWORD *)(v73 - 184) = 1990461019 * a70;
  STACK[0x1940] = v76 - 1990461019 * a70;
  *(_DWORD *)(v73 - 156) = v77 - 6;
  STACK[0x1950] = -1990461019 * a70;
  (*(void (**)(uint64_t))(v74 + 8 * (v70 + 984)))(v73 - 192);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x270] + 8 * *(int *)(v73 - 180)))(STACK[0x270], v78, v79, v80, v81, v82, v83, v84, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_22B3344D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56)
{
  return (*(uint64_t (**)(void))(v57 + 8 * (((a56 == v56 + 12) * (((v58 + 1973) ^ 0x8D6) + 234)) ^ v58)))();
}

uint64_t sub_22B334508@<X0>(int a1@<W8>)
{
  int v4 = v1 ^ 0x14E;
  int v5 = ((v1 ^ 0x14E) - 1567747698) & 0x5D71EF3F;
  int v6 = v2 + a1;
  if (v6 >= 0) {
    unsigned int v7 = v6;
  }
  else {
    unsigned int v7 = -v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v5 + 143) ^ (v4 - 1155157810) & 0x44DA4FFF) * (v7 > 0x82)) ^ v4)))();
}

uint64_t sub_22B33456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a11;
  *(_DWORD *)(v16 - 120) = v11
                         + ((((2 * (v16 - 136)) | 0x20784A7E) - (v16 - 136) - 272377151) ^ 0xFA2B12CB) * v13
                         - 1746;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v11 + 1019)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8 * (((((v11 - 2378) | 0x401) ^ 0x779) * (v14 == 2136240548)) ^ v11)))(v17);
}

void sub_22B334608()
{
}

uint64_t sub_22B334670@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  BOOL v5 = ((a2 + v4 + 491) | 0x40u) + a3 - 2118372808 > 0x37;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v3
                                                                       + 8
                                                                       * (((2 * v5) | (32 * v5)) ^ (a2 + v4 - 490))))(a1, -2118371424, 0xFFFFFFFECE07C220);
}

uint64_t sub_22B3346D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1518 * (a8 + 1 == v9 + 40)) ^ a7)))();
}

void sub_22B334790()
{
}

uint64_t sub_22B334798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((a5 - 455) | 0x801) ^ 0xF9F) + ((a5 + 1677367563) & 0x9C055F3F))
                                     * (*(void *)(v5 + 8) == 0x58E95394ECD70C04)) ^ a5)))();
}

uint64_t sub_22B3347FC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((10 * (v4 ^ 0x3FF)) ^ (v4 + 2818)) * (v3 == a3)) ^ v4)))();
}

uint64_t sub_22B33482C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x250] + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a2)) = v7 ^ 0x13;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE2(v7) ^ 0x95) + (~(v7 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (((v3 + 75) | 0x26) ^ BYTE1(v7) ^ 0x40)
                                               - ((2 * (((v3 + 75) | 0x26) ^ BYTE1(v7))) & 0x55)
                                               + 42;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = (HIBYTE(v7) ^ 0x11) - ((v7 >> 23) & 0x54) + 42;
  unsigned int v8 = LODWORD(STACK[0x2AC]) + 85240576;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 - 57254024 < v8;
  if (v5 - 57254024 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_22B334910@<X0>(int a1@<W8>)
{
  int v4 = v2 + a1 - 133 < (((v1 + 1327) | 0x108) ^ 0x7FFFF6E0u);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * ((((v1 + 2) ^ v4) & 1) == 0)) & 0xEF | (16 * (((v1 + 2) ^ ~v4) & 1))) ^ v1)))();
}

uint64_t sub_22B334964@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 1463683368;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v6 + v10);
  if (v12 == 42) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 170)
  {
    int v13 = -604050357;
    uint64_t v14 = *(void *)(v3 + 24);
    int v15 = *(unsigned __int8 *)(v3 + 12) ^ v5;
    *(void *)uint64_t result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 42) {
      int v16 = 2140651425;
    }
    else {
      int v16 = 2140651424;
    }
    *(_DWORD *)(result + 16) = 840667340;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = -604050357;
    *(void *)(v14 - 0x48AB25CB3E53BFE6) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 + 141)))();
    int v13 = 604092306;
  }
  *(_DWORD *)(v3 + 32) = v13;
  return result;
}

uint64_t sub_22B334A44(uint64_t a1)
{
  int v1 = 731811679 * (((a1 | 0xC9CD0826) - (a1 & 0xC9CD0826)) ^ 0x803BAE62);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + *(_DWORD *)a1 + v1 - 486)
          + ((((v1 + *(unsigned char *)(a1 + 8) - 99) > 3u) * ((4 * ((*(_DWORD *)a1 + v1) ^ 0x385)) ^ 0x350)) ^ (*(_DWORD *)a1 + v1))
          - 1))();
}

uint64_t sub_22B334AD4(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  int v2 = 1988622253 * ((((2 * a1) | 0x7A930536) - a1 - 1028227739) ^ 0xCB51C23B);
  int v3 = *(_DWORD *)a1;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 8);
  int v7 = *(_DWORD *)(a1 + 56);
  unsigned int v8 = 1328090399 * ((((2 * &v11) | 0x74F8666) - &v11 - 61326131) ^ 0xFC74A709);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v15 = v6;
  uint64_t v16 = v4;
  int v17 = v2 + v7 - v8 - 921681029;
  int v9 = v3 + 1814971482 + v2;
  int v12 = v9 - v8 + 691;
  uint64_t v13 = v5;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_26DE9F480 + v9) + v9 + 3679))(&v11);
  *(_DWORD *)(a1 + 32) = v14;
  return result;
}

uint64_t sub_22B334C14(uint64_t a1)
{
  int v1 = *(_DWORD *)(*(void *)a1 - 0x281D12643933BF1FLL);
  int v4 = v1 - 920561905;
  BOOL v3 = v1 - 920561905 < 0;
  int v5 = 920561905 - v1;
  if (v3) {
    int v4 = v5;
  }
  int v2 = (*(_DWORD *)(a1 + 8) - 1948972247 * (((a1 | 0xBA379AD4) - (a1 & 0xBA379AD4)) ^ 0xFA96F3A)) ^ 0x576;
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + v2 - 1567)
          + ((3984
            * (((v2 - 1719) | 0x200)
             + (v2 ^ 0xB4AE7CF4 ^ v4)
             + 1542972608
             + ((2 * v4) & 0x695CF6FA)
             + (((v2 - 1756) | 0x252) ^ 0xEF599E0F) > 0x7FFFFFFE)) ^ v2)
          - 1))();
}

void cp2g1b9ro()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  int v0 = (uint64_t *)*(&off_26DE9F480
                  + ((-121 * (dword_2683EB108 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B497260[byte_22B48A380[(-121 * (dword_2683EB108 ^ 0x4D ^ qword_2683EB0F0))] ^ 3])
                  - 191);
  unsigned __int8 v1 = -121 * ((qword_2683EB0F0 - *v0) ^ 0x4D);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78 + v1 - 8) ^ 0x9B] ^ v1)
                + 122);
  uint64_t v3 = 2059148423 * ((*(void *)(v2 - 4) - *v0 - (void)&v5) ^ 0xD2361EE8B96764DLL);
  *int v0 = v3;
  *(void *)(v2 - 4) = v3;
  v6[0] = (1292559617 * (((v6 | 0x920AEA7F) - (v6 & 0x920AEA7F)) ^ 0x35598216)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v0) ^ 0x4D);
  int v4 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_2683EB108) ^ 0x4D)) ^ byte_22B47E780[byte_22B473800[(-121 * ((qword_2683EB0F0 + dword_2683EB108) ^ 0x4D))] ^ 0x9B])
               + 215)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_26DE9F978
                                                          + (*((unsigned __int8 *)off_26DEA0418 + v2) ^ 0x1Cu)) ^ v2)
                                      + 32048])(v6);
  __asm { BRAA            X8, X17 }
}

void sub_22B334F50()
{
  unsigned __int8 v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x22B334F74);
}

void sub_22B335024(_DWORD *a1@<X8>)
{
  int v3 = v5[3] ^ 0x2A;
  int v4 = ((*v5 ^ 0x2A) << 24) | ((v5[1] ^ 0x2A) << 16) | ((v5[2] ^ 0x2A) << 8) | v3;
  *(_DWORD *)(*(void *)(v1 + 8) - 0x1367E3C5726D8FAFLL) = v4 + v2 - 2 * (v4 & 0x5BFEEC4F ^ v3 & 4);
  *(_DWORD *)(v1 + 4) = *a1;
}

uint64_t sub_22B335098(uint64_t result)
{
  int v1 = (*(unsigned char *)(result + 8) - -83 * (result ^ 0xA0));
  if (v1 == 99 || v1 == 96) {
    int v3 = -604050357;
  }
  else {
    int v3 = 604091428;
  }
  *(_DWORD *)(result + 4) = v3;
  return result;
}

uint64_t sub_22B3350D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((57 * (v8 != a5)) ^ (a8 - 1739))))();
}

uint64_t sub_22B335114(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16)
{
  unsigned int v26 = v20 - 16;
  uint64_t v27 = v26 & 0xF;
  v29.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v23).u64[0];
  v29.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v23).u64[0];
  int8x16_t v30 = vrev64q_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a14 + v26), *(int8x16_t *)(v18 + v27 - 15)), *(int8x16_t *)(v17 + v27 - 15)), *(int8x16_t *)(v19 + v27 + v16 - 2141)));
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v30, v30, 8uLL), v25), vmulq_s8(v29, v24)));
  *(int8x16_t *)(a14 + v26) = vextq_s8(v31, v31, 8uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * ((2 * (v21 == 16)) | (8 * (v21 == 16)) | a15)))();
}

uint64_t sub_22B335120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(void *)(a7 + 160) = a71;
  return ((uint64_t (*)(void))STACK[0x238])();
}

uint64_t sub_22B33513C@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v62 = v57 - 2241;
  int v63 = 5 * ((v57 - 2241) ^ 0x2B4);
  unint64_t v64 = STACK[0x260];
  *(_DWORD *)(v64 + 392) = a2;
  *(_DWORD *)(v64 + 396) = STACK[0x374];
  *(void *)(v64 + 400) = *(void *)(a1 + 128);
  *(_DWORD *)(v64 + 408) = (((v57 + 180) | 0x500) ^ 0x6ADD0D9E) - v60 + LODWORD(STACK[0x31C]);
  *(void *)(v64 + 416) = STACK[0x258] + (v60 - 899400664);
  int v65 = (*(uint64_t (**)(unint64_t, uint64_t))(v61 + v59 * (uint64_t)v58 + 8))(STACK[0x218], a57);
  return (*(uint64_t (**)(__n128))(STACK[0x270]
                                           + 8
                                           * ((1903 * (v65 - 604050357 - ((v63 - 1208103869) & (2 * v65)) == -604050357)) ^ v62)))((__n128)0);
}

void sub_22B335238(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1990461019 * (((a1 | 0xD525A764) - a1 + (a1 & 0x2ADA589B)) ^ 0xFAC105ED);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B33537C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,int a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  unsigned int v38 = 2009815553 * ((99496805 - (&a28 | 0x5EE3365) + (&a28 | 0xFA11CC9A)) ^ 0xB1AE2DF);
  a35 = 285189382 - v38 + a26;
  a30 = a15;
  a28 = a13;
  a32 = a24;
  a31 = v35 - v38 + 1583;
  a33 = a14;
  a34 = a12;
  uint64_t v39 = (*(uint64_t (**)(uint64_t *))(v36 + 8 * (v35 ^ 0x910)))(&a28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36
                                                                                         + 8
                                                                                         * ((2513
                                                                                           * (a29 == (v35 ^ 0x789) - 604050645)) ^ v35)))(v39, v37, 4164039495, 1801476207, 130930587, a17);
}

uint64_t sub_22B335490@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v17 = a1 - 238;
  *(_DWORD *)(v16 - 112) = a1
                         - 1948972247 * ((((2 * (v16 - 144)) | 0xFA39F576) - (v16 - 144) + 48432453) ^ 0x48820F55)
                         + 1134;
  *(void *)(v16 - 104) = a13;
  *(void *)(v16 - 144) = a6;
  *(void *)(v16 - 136) = a13;
  *(void *)(v16 - 128) = a15;
  *(void *)(v16 - 120) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a1 + 3246)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((((v17 + 88) ^ (a11 - 484148408 < ((v17 + 1733) ^ 0x7FFFF6D1u))) & 1) << 6) & 0x7F | ((((v17 + 600) ^ (a11 - 484148408 < ((v17 + 1733) ^ 0x7FFFF6D1u))) & 1) << 7)) ^ (v17 + 1524))))(v18);
}

uint64_t sub_22B33555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v28 = v27 - 144;
  *(_DWORD *)(v27 - 128) = v26
                         + 2199
                         + 1503746353 * ((2 * ((v27 - 144) & 0x2BCF6D08) - (v27 - 144) - 735014157) ^ 0xF2515045);
  *(void *)(v27 - 120) = a20;
  *(void *)(v27 - 112) = a22;
  *(void *)(v27 - 144) = a20;
  *(void *)(v27 - 136) = v22;
  (*(void (**)(uint64_t))(v24 + 8 * (v26 + 2878)))(v27 - 144);
  *(_DWORD *)(v27 - 128) = v26
                         + 2199
                         + 1503746353
                         * ((2 * (((v27 - 144) ^ 0x1F6042E0) & 0x7CC66C78) - ((v27 - 144) ^ 0x1F6042E0) + 54104967) ^ 0x3A3813D1);
  *(void *)(v27 - 144) = a20;
  *(void *)(v27 - 136) = v22;
  *(void *)(v27 - 120) = a20;
  *(void *)(v27 - 112) = a22;
  (*(void (**)(uint64_t))(v24 + 8 * (v26 + 2878)))(v27 - 144);
  *(_DWORD *)(v27 - 128) = v26
                         + 2199
                         + 1503746353 * ((((v27 - 144) | 0xBAF203C) - ((v27 - 144) & 0xBAF203C)) ^ 0x2DCEE28A);
  *(void *)(v27 - 144) = a20;
  *(void *)(v27 - 136) = v22;
  *(void *)(v27 - 120) = a20;
  *(void *)(v27 - 112) = a22;
  (*(void (**)(uint64_t))(v24 + 8 * (v26 ^ 0xB4E)))(v27 - 144);
  unsigned int v29 = 1866394843 * (((v28 | 0xC8794E23) - (v28 & 0xC8794E23)) ^ 0x226E79D7);
  *(void *)(v27 - 136) = v23;
  *(_DWORD *)(v27 - 144) = v26 + 149 - v29;
  *(_DWORD *)(v27 - 140) = v25 - 484148410 + v29 + 1;
  (*(void (**)(uint64_t))(v24 + 8 * (v26 ^ 0x14AE)))(v27 - 144);
  BOOL v30 = *(_DWORD *)(v27 - 128) == -1685946169;
  unsigned int v31 = 1866394843 * ((-1446342784 - (v28 | 0xA9CA8F80) + (v28 | 0x5635707F)) ^ 0xBC22478B);
  *(_DWORD *)(v27 - 144) = v26 + 149 - v31;
  *(_DWORD *)(v27 - 140) = v31 + v25 - 484148410;
  *(void *)(v27 - 136) = v23;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v26 ^ 0x14AE)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((79 * v30) ^ v26)))(v32);
}

uint64_t sub_22B3357AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                         + 8
                                                                                         * ((((unint64_t)(v17 - 0x21AEEC4F795AF799 - v14 + a9 - ((a14 + 1) << 6)) < 0x10)
                                                                                           * (v16 - 1752)) ^ v16)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22B33580C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v29 - 116) = v24 - 1;
  v35.val[1].i64[0] = ((_BYTE)v24 + 8) & 0xF;
  v35.val[1].i64[1] = ((_BYTE)v24 + (((_BYTE)a4 + 31) & 0xB7) + 82) & 0xF;
  v35.val[2].i64[0] = ((_BYTE)v24 + 6) & 0xF;
  v35.val[2].i64[1] = ((_BYTE)v24 + 5) & 0xF;
  v35.val[3].i64[0] = ((_BYTE)v24 + 4) & 0xF;
  v35.val[3].i64[1] = ((_BYTE)v24 + 3) & 0xF;
  v30.i64[0] = 0xF0F0F0F0F0F0F0FLL;
  v30.i64[1] = 0xF0F0F0F0F0F0F0FLL;
  uint64_t v31 = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)v27 + (_BYTE)a2) & 0xF;
  v35.val[0].i64[0] = v31;
  v35.val[0].i64[1] = ((_BYTE)v24 + 9) & 0xF;
  v32.i64[0] = vqtbl4q_s8(v35, (int8x16_t)xmmword_22B4975D0).u64[0];
  v36.val[0].i64[1] = ((_BYTE)v24 + 1) & 0xF;
  v36.val[1].i64[1] = *(_DWORD *)(v29 - 116) & 0xF;
  v36.val[2].i64[1] = (v24 + 13) & 0xF;
  v36.val[3].i64[1] = ((_BYTE)v24 + 11) & 0xF;
  v36.val[0].i64[0] = ((_BYTE)v24 + 2) & 0xF;
  v36.val[1].i64[0] = v24 & 0xF;
  v36.val[2].i64[0] = (v24 + 14) & 0xF;
  v36.val[3].i64[0] = (v24 + 12) & 0xF;
  v32.i64[1] = vqtbl4q_s8(v36, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v33 = vrev64q_s8(vmulq_s8(v32, v30));
  *(int8x16_t *)(a5 - 15 + (a1 + a3 + v27 + a2)) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v23 + v31 - 15), *(int8x16_t *)(v22- 15+ (a1 + a3 + v27 + a2))), veorq_s8(*(int8x16_t *)(v26 + v31 - 15), *(int8x16_t *)(v25 + v31 - 15))), vextq_s8(v33, v33, 8uLL));
  return (*(uint64_t (**)(void))(a22
                              + 8
                              * (int)((((v28 & 0xFFFFFFF0) != 16)
                                     * (((((a4 + 1407943199) & 0xAC1473B7) + 1355) | 0x313) - 2730)) ^ (a4 + 1407943199) & 0xAC1473B7)))();
}

uint64_t sub_22B335990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unint64_t *a14, unint64_t *a15, unint64_t *a16, int a17, unsigned int a18)
{
  a15 = &STACK[0xC6FBACBD8C97566];
  a16 = a11;
  a14 = &STACK[0xA039FA35F0E8343];
  a18 = ((v20 ^ 0x584) + 2513) ^ ((&a14 ^ 0x2FE4A289) * v18);
  (*(void (**)(unint64_t **))(v19 + 8 * ((v20 ^ 0x584) + 2917)))(&a14);
  a15 = &STACK[0x1367E3C5726D8FCB];
  a16 = a11;
  LODWORD(a14) = (v20 ^ 0x584)
               - 1292559617 * ((((2 * &a14) | 0x4BFAC2DE) - &a14 + 1510121105) ^ 0x2AE0906)
               - 594;
  (*(void (**)(unint64_t **))(v19 + 8 * (v20 ^ 0x1128)))(&a14);
  a15 = a11;
  LODWORD(a16) = (v20 ^ 0x584)
               - 1734664879
               * ((782850368 - (&a14 | 0x2EA95940) + (&a14 | 0xD156A6BF)) ^ 0xFE8D8EA5)
               + 1934;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 ^ 0xEAD)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)(((a14 == -604050357)
                                                   * (37 * (((v20 ^ 0x584) + 339876484) & 0xEBBDE1FF ^ 0x11E) - 1380)) ^ v20 ^ 0x584)))(v21);
}

uint64_t sub_22B335B38()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((48 * (v0 == 0)) ^ 0xE58)))();
}

uint64_t sub_22B335B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + v8 - 0x2970AB8255B0AF54) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v6 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v7 - 1942) ^ 0x304)) ^ v7)))();
}

uint64_t sub_22B335BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, uint64_t a13, int a14)
{
  unsigned int v20 = 1948972247 * ((&a11 & 0xF7ADDC47 | ~(&a11 | 0xF7ADDC47)) ^ 0xBDCCD656);
  int v23 = v14 + *(_DWORD *)(a1 + 8) - v19 + *(_DWORD *)(v15 - 0x19157D3ABD2659CELL) - 1399496453;
  a11 = v20 + 1126255904;
  a14 = ((39 * (v14 ^ 0x236)) ^ 0x1571CEF1) - v20 + v23;
  a12 = v14 - v20 + 57;
  a13 = v15;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v14 ^ 0x1212)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1486 * (*v16 == v17)) ^ v14)))(v21);
}

uint64_t sub_22B335CDC@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + ((v7 + 83) ^ 0x9FDD5A10) + a1) = *(unsigned char *)(v3 + ((((v7 + 83) ^ 0x9FDD5A10) + a1) & 0xFLL)) ^ *(unsigned char *)(v2 + ((v7 + 83) ^ 0x9FDD5A10) + a1) ^ *(unsigned char *)(v4 + ((((v7 + 83) ^ 0x10) + (_BYTE)a1) & 0xF)) ^ *(unsigned char *)(((((v7 + 83) ^ 0x10) + (_BYTE)a1) & 0xF) + v5 + 2) ^ (-47 * ((((v7 + 83) ^ 0x10) + a1) & 0xF));
  return (*(uint64_t (**)(void))(v8 + 8 * ((493 * (a1 - 1 == v6)) ^ (v7 - 1162))))();
}

uint64_t sub_22B335D4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = (335 - v1);
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(a1 + v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(a1 + v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = v3 + v5;
  v11.i64[0] = 0x5454545454545454;
  v11.i64[1] = 0x5454545454545454;
  v12.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v12.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 == 288) * ((v2 ^ 0x6E9) - 2113)) ^ v2)))();
}

uint64_t sub_22B335DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((13 * (a4 + 1 != v7 + 40)) ^ a6)))();
}

uint64_t sub_22B335E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int8x16x4_t v59 = vld4q_s8(a6);
  uint8x16_t v51 = (uint8x16_t)veorq_s8(v59.val[2], v50);
  _Q21 = vmovl_high_u8(v51);
  _Q20 = vmovl_u8(*(uint8x8_t *)v51.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  return (*(uint64_t (**)(uint64_t))(v49
                                            + 8
                                            * ((267 * (v48 == 908008578)) ^ ((((a47 + 415) | 0x173) - 883) | 0x223))))(v47);
}

uint64_t sub_22B335FD8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((19 * (v0 < 0x677E56C9)) ^ 0x4A6)))();
}

uint64_t sub_22B336044(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int32x4_t a23,int8x16_t a24,int8x16_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int8x16_t v36 = (int8x16_t)vld1q_dup_f32((const float *)v35);
  v37.i64[0] = 0x8000000080000000;
  v37.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v35 + 4);
  a2.i32[2] = *(_DWORD *)(v35 + 12);
  int8x16_t v38 = vextq_s8(v36, a2, 0xCuLL);
  int8x16_t v39 = a2;
  v39.i32[3] = *(_DWORD *)(v35 + 16);
  int32x4_t v40 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v39, a25), vandq_s8(v38, v37)), 1uLL), *(int8x16_t *)(v35 + 1588));
  v38.i32[0] = *(_DWORD *)(v34 + 4 * (*(_DWORD *)(v35 + 4) & 1));
  v38.i32[1] = *(_DWORD *)(v34 + 4 * (*(_DWORD *)(v35 + 8) & 1));
  v38.i32[2] = *(_DWORD *)(v34 + 4 * (*(_DWORD *)(v35 + 12) & 1));
  v38.i32[3] = *(_DWORD *)(v34 + 4 * (v39.i8[12] & 1));
  *(int8x16_t *)uint64_t v35 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v40, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v40, v40), a24)), a23), v38);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 11520))(a33, 821525041);
}

uint64_t sub_22B336058@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v8 = v4 - v6 + ((a1 + 1983176428) & 0x89CB26EC ^ (v3 + 1335));
  *(void *)(v2 - 7 + v8) = *(void *)(a2 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * ((a1 - 4) | (4 * ((((a1 - 4) ^ 0xFFFFFEFB) & v5) - v6 != 8)))))(v4 - (((a1 - 4) ^ 0xFFFFFEFB) & v5));
}

uint64_t sub_22B3360C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((((LODWORD(STACK[0x230]) + 351) ^ LODWORD(STACK[0x228])) * (v2 > 0xFC6E5E1A)) ^ (STACK[0x278] - 100))))();
}

void sub_22B336178()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  int v1 = *(_DWORD *)v0 + 1988622253 * ((v0 + 2032286215 - 2 * (v0 & 0x79223A07)) ^ 0x8F3A7AA7);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B336314@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v1 - 1370) | 0x21E) + 2188) * (v2 == v3)) ^ v1)))();
}

uint64_t sub_22B336340()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((3372 * (v2 == v3 + v1 + v0 - 827 - 813)) ^ (v1 + v0 - 1501))))();
}

uint64_t sub_22B33637C(uint64_t result)
{
  *(_DWORD *)(result + 16) = 81374369;
  return result;
}

uint64_t sub_22B336388@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = v6 - 1145658265 + ((v1 + 1783057138) & 0x95B8B7E9);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v8 + v9);
  BOOL v10 = v6 - 1676536553 < v3;
  if (v3 < v4 != v6 - 1676536553 < v2) {
    BOOL v10 = v3 < v4;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v10 * v5) ^ v1)))();
}

void sub_22B336408()
{
  if (v0 == 2081845989) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 16) = v1;
}

void sub_22B33646C(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1948972247 * ((-2 - ((a1 | 0xDE6059F) + (~a1 | 0xF219FA60))) ^ 0x47870F8E);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B336524(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((a3 - 12061497) & 0xA9FDDEED ^ (a6 + 2988) ^ (a3 - 1898061237) & 0x71221FF7)
                                     * (v6 > 0x1F)) ^ a3)))();
}

uint64_t sub_22B33657C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 - 895446188) & 0x355F6CDB) - 270) ^ 0xBBB) * (v1 != a1)) ^ v2)))();
}

uint64_t sub_22B3365BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2116 * ((v0 ^ 0x538) + 989475731 != v1)) ^ v0 ^ 0x538)))((((v0 ^ 0x538) + 989475731) ^ v1) + 1598212006);
}

uint64_t sub_22B336610()
{
  int v5 = *(unsigned __int8 *)(v1 + 3);
  *uint64_t v3 = v0 + 4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((3223 * (v5 == (v4 + 31))) ^ v4)))();
}

uint64_t sub_22B336640@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v21 = v19 ^ 0x228;
  uint64_t v22 = (char *)*(&off_26DE9F480 + v19 - 692) - 12;
  int v23 = v22[*(unsigned __int8 *)(v18 - 0x16B393DCF065912CLL) ^ 0x8BLL];
  HIDWORD(v24) = v23 ^ 6;
  LODWORD(v24) = v23 << 24;
  unsigned int v25 = ((v24 >> 27) - ((2 * (v24 >> 27)) & 0x28) + 20);
  int v26 = (((v24 >> 27) - ((2 * (v24 >> 27)) & 0x28) + 20) ^ 0x2B ^ (((v25 >> (v19 ^ 0x6D)) ^ (v25 >> 4) ^ 3) - ((2 * ((v25 >> (v19 ^ 0x6D)) ^ (v25 >> 4))) & 0x28) + 20)) << 8;
  uint64_t v27 = (uint64_t)*(&off_26DE9F480 + (v19 ^ 0x3E9));
  char v28 = (((v24 >> 27) - ((2 * (v24 >> 27)) & 0x28) + 20) ^ 0x2B ^ (((v25 >> (v19 ^ 0x6D)) ^ (v25 >> 4) ^ 3)
                                                                 - ((2 * ((v25 >> (v19 ^ 0x6D)) ^ (v25 >> 4))) & 0x28)
                                                                 + 20)) & 3;
  int v29 = v22[*(unsigned __int8 *)(v18 - 0x16B393DCF0659124) ^ 0x17];
  unsigned int v30 = (((v29 ^ 6) >> v28) >> (v28 ^ 3)) ^ (32 * v29);
  uint64_t v31 = (char *)*(&off_26DE9F480 + (v19 ^ 0x3CC)) - 8;
  int v32 = (v30 >> 4) ^ (v30 >> 3);
  char v33 = *(unsigned char *)(v27 + (*(unsigned __int8 *)(v18 - 0x16B393DCF065912BLL) ^ 0xAELL));
  unsigned int v34 = v26 & 0xFFFFFF00 | ((v31[*(unsigned __int8 *)(v18 - 0x16B393DCF065912ELL) ^ 0x6ELL] ^ (*(unsigned __int8 *)(v18 - 0x16B393DCF065912ELL) - ((2 * *(unsigned __int8 *)(v18 - 0x16B393DCF065912ELL)) & 0xFFC7) - 29) ^ 0x25) << 24) | (((2 * v33 + 54) & 0x7E) + ((v33 - 101) ^ 0xBF));
  int v338 = v31;
  uint64_t v35 = (char *)*(&off_26DE9F480 + v19 - 820) - 12;
  char v36 = v35[*(unsigned __int8 *)(v18 - 0x16B393DCF065912DLL) ^ 0x19];
  int v37 = ((v31[*(unsigned __int8 *)(v18 - 0x16B393DCF0659126) ^ 0x4ELL] ^ (*(unsigned __int8 *)(v18 - 0x16B393DCF0659126)
                                                                                           - ((2
                                                                                             * *(unsigned __int8 *)(v18 - 0x16B393DCF0659126)) & 0xFFC7)
                                                                                           - 29) ^ 0xA5) << 24) | ((v30 ^ 0xDE ^ ((v32 ^ 0x14) + (~(2 * v32) | 0xFD) - 62)) << 8) | (((v35[*(unsigned __int8 *)(v18 - 0x16B393DCF0659125) ^ 0x33] + 19) ^ 0x45) << 16);
  if (((v36 + 19) & 0x40) != 0) {
    char v38 = 74;
  }
  else {
    char v38 = -54;
  }
  unsigned int v39 = v34 & 0xFF00FFFF | (((v36 + v38 - 119) ^ 0xBE) << 16);
  uint64_t v339 = (uint64_t)*(&off_26DE9F480 + (v19 ^ 0x3E9));
  unsigned int v40 = (v37 & 0xFFFFFF00 | (*(unsigned char *)(v27
                                                       + (*(unsigned __int8 *)(v18 - 0x16B393DCF0659123) ^ 0xFBLL))
                                            + 90))
      - 2
      * ((v37 & 0x35911700 | (*(unsigned char *)(v27 + (*(unsigned __int8 *)(v18 - 0x16B393DCF0659123) ^ 0xFBLL)) + 90) & 0xCE) ^ (*(unsigned char *)(v27 + (*(unsigned __int8 *)(v18 - 0x16B393DCF0659123) ^ 0xFBLL)) + 90) & 2);
  int v41 = v22[*(unsigned __int8 *)(v18 - 0x16B393DCF0659128) ^ 0x59];
  HIDWORD(v42) = v41 ^ 6;
  LODWORD(v42) = v41 << 24;
  int v43 = (v42 >> 27) + (~(2 * (v42 >> 27)) | 0xFFFFFF87) + 61;
  char v44 = (v43 >> 4) ^ (((v42 >> 27) + (~(2 * (v42 >> 27)) | 0x87) + 61) >> 3);
  int v45 = (*(unsigned char *)(v27 + (*(unsigned __int8 *)(v18 - 0x16B393DCF0659127) ^ 0xB6)) + 90) | ((v31[*(unsigned __int8 *)(v18 - 0x16B393DCF065912ALL) ^ 0x40] ^ (*(unsigned __int8 *)(v18 - 0x16B393DCF065912ALL) - ((2 * *(unsigned __int8 *)(v18 - 0x16B393DCF065912ALL)) & 0xFFC7) - 29) ^ 0x1A) << 24) | ((v43 ^ 0x6B ^ ((v44 ^ 4) - 2 * ((v44 ^ 4) & 0x1E ^ v44 & 2) + 60)) << 8);
  v340 = (char *)*(&off_26DE9F480 + v19 - 692) - 12;
  int v46 = v22[*(unsigned __int8 *)(v18 - 0x16B393DCF0659120) ^ 0x45];
  HIDWORD(v42) = v46 ^ 6;
  LODWORD(v42) = v46 << 24;
  int v47 = (v42 >> 27) - ((2 * (v42 >> 27)) & 0x2A) + 21;
  int v48 = (v47 >> 4) ^ (v47 >> 3) ^ 3;
  int v337 = (char *)*(&off_26DE9F480 + v19 - 820) - 12;
  int v49 = (*(unsigned char *)(v27 + (*(unsigned __int8 *)(v18 - 0x16B393DCF065911FLL) ^ 0xC2)) + 90) | ((v31[*(unsigned __int8 *)(v18 - 0x16B393DCF0659122) ^ 0x2ALL] ^ (*(unsigned __int8 *)(v18 - 0x16B393DCF0659122) - ((2 * *(unsigned __int8 *)(v18 - 0x16B393DCF0659122)) & 0xFFC7) - 29) ^ 0xCE) << 24) | (((v35[*(unsigned __int8 *)(v18 - 0x16B393DCF0659121) ^ 0x49] + 19) ^ 0xE5) << 16) | ((v47 ^ 0xA3 ^ (v48 - ((2 * v48) & 0xAA) + 21)) << 8);
  unsigned int v50 = ((((v40 - 1248782388) ^ 0x4A6EE855) + ((v40 - 1248782388) ^ 0xB59117CC) + 1) ^ 0xFFFFFFFC)
      + ((v40 - 1248782388) ^ 0xB59117CC);
  *(_DWORD *)(v20 - 208) = (v45 & 0xFF00FFFF | (((v35[*(unsigned __int8 *)(v18 - 0x16B393DCF0659129) ^ 0xD3]
                                                                 + 19) ^ 0xA6) << 16)) ^ 0x62F1184B;
  *(_DWORD *)(v20 - 204) = v39 ^ 0xAB96B0D9;
  HIDWORD(a5) = v17 + 471859481;
  *(_DWORD *)(v20 - 192) = v50 - ((2 * v50) & 0x353E366A) + 446634805;
  *(_DWORD *)(v20 - 200) = v49 ^ 0xF638D74B;
  *(_DWORD *)(v20 - 212) = 0;
  unsigned int v346 = (v21 + 767303341) & 0xD243EB3D;
  uint64_t v51 = (v346 - 2881) & 0x5C801E9D ^ 0x5C801E9F;
  *(void *)(v20 - 224) = v51;
  LODWORD(v344) = (v21 + 767303341) ^ 0x2DBC1C9D;
  BYTE4(v344) = v35[a1[5] ^ 0x36] + ((v21 - 83) ^ 0xE0);
  char v52 = *(unsigned char *)(v27 + (a1[v51] ^ 0x39));
  int v53 = v22[a1[6] ^ 0xE9];
  HIDWORD(v42) = v53 ^ 6;
  LODWORD(v42) = v53 << 24;
  int v54 = (v42 >> 27) - ((2 * (v42 >> 27)) & 0xC) - 122;
  unsigned int v55 = ((v54 ^ 0x86) >> (v52 & 1)) >> !(v52 & 1);
  unsigned int v56 = (v55 - ((2 * v55) & 0xC) - 122) ^ v54;
  int v57 = ((BYTE4(v344) ^ 0x8A) << 16) | ((v54 ^ 0xDA ^ ((v56 >> 3)
                                                                                       - ((v56 >> 2) & 0xC)
                                                                                       - 122)) << 8);
  int v58 = (a1[4] - ((2 * a1[4]) & 0xFFC7) - 29) ^ v31[a1[4] ^ 0xB2];
  LODWORD(v42) = __ROR4__(-300087381, 5) ^ 0x3F70E83D;
  HIDWORD(v42) = v42;
  uint64_t v59 = a1[(v42 >> 27)];
  int v60 = (v59 - ((2 * v59) & 0xFFFFFFC7) - 29) ^ v31[v59 ^ 0xD1];
  int v61 = v57 | (*(unsigned char *)(v27 + (a1[7] ^ 0x6FLL)) + 90) | ((v58 ^ 0xF2) << 24);
  int v62 = v22[a1[14] ^ 0x86];
  HIDWORD(v42) = v62 ^ 6;
  LODWORD(v42) = v62 << 24;
  int v63 = (v42 >> 27) - 16 * ((v42 >> 27) >> 3) + 120;
  int v64 = (v63 >> 4) ^ (((v42 >> 27) - 16 * ((v42 >> 27) >> 3) + 120) >> 3);
  int v65 = ((v64 ^ 8) - 2 * ((v64 ^ 8) & 0x1E ^ v64 & 6) + 120) ^ v63;
  int v66 = v22[a1[2] ^ 0x96];
  HIDWORD(v42) = v66 ^ 6;
  LODWORD(v42) = v66 << 24;
  int v67 = (v42 >> 27) - ((2 * (v42 >> 27)) & 0xFFFFFFBA) - 35;
  int v68 = (v67 >> 4) ^ (((v42 >> 27) - ((2 * (v42 >> 27)) & 0xBA) - 35) >> 3);
  LODWORD(v59) = ((v31[*a1 ^ 0xCCLL] ^ (*a1 + (~(2 * *a1) | 0x39) - 28) ^ 0xC2) << 24) | ((v67 ^ 0xE8 ^ ((v68 ^ 0x16) + ((2 * ((v68 ^ 0x16 | 0x7D) ^ v68)) ^ 0x29) - 34)) << 8) | (((v35[a1[1] ^ 0xD7] + 19) ^ 0xAA) << 16);
  int v69 = v22[a1[10] ^ 0xF0];
  HIDWORD(v42) = v69 ^ 6;
  LODWORD(v42) = v69 << 24;
  int v70 = (v42 >> 27) - ((2 * (v42 >> 27)) & 0x70) + 56;
  int v71 = (v70 >> 4) ^ (((v42 >> 27) - ((2 * (v42 >> 27)) & 0x70) + 56) >> 3);
  LOBYTE(v70) = ((v71 ^ 4) - ((2 * v71) & 0x30) + 56) ^ v70;
  HIDWORD(a17) = 1551900317;
  int v72 = (a1[8] - ((2 * a1[8]) & 0xFFC7) - 29) ^ v31[a1[8] ^ 0x42];
  LOBYTE(v68) = *(unsigned char *)(v339 + (a1[3] ^ 0x8ELL)) + 90;
  LODWORD(v51) = (v59 & 0xFFFFFF00 | v68) + 668280752 - 2 * ((v59 & 0x27D52700 | v68 & 0xB8) ^ v68 & 8);
  uint64_t v73 = (char *)*(&off_26DE9F480 + (v21 ^ 0x8C)) - 4;
  LODWORD(v59) = *(_DWORD *)&v73[4 * (BYTE3(v51) ^ 0xE9)];
  HIDWORD(v42) = v59 ^ 0xFCA0;
  LODWORD(v42) = v59 ^ 0x1CB80000;
  HIDWORD(v341) = v35[a1[13] ^ 0xDBLL] + 19;
  int v74 = v21;
  uint64_t v75 = (uint64_t)*(&off_26DE9F480 + (v21 ^ 0x1D2));
  HIDWORD(v42) = (v42 >> 17) ^ 0x7799F4A0;
  LODWORD(v42) = HIDWORD(v42);
  unsigned int v76 = v42 >> 15;
  unsigned int v77 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE4(v341) ^ 0x87u));
  LODWORD(v59) = (v76 >> 1) & 0x1052DB86 ^ (v77 >> 4) & 0xE169194;
  HIDWORD(v345) = v74;
  uint64_t v78 = (char *)*(&off_26DE9F480 + (v74 ^ 0xB6)) - 4;
  int v79 = *(_DWORD *)&v78[4 * (v61 ^ 0xEC)];
  HIDWORD(v42) = v79 ^ 0x3DF152;
  LODWORD(v42) = v79 ^ 0x7E000000;
  uint64_t v80 = (char *)*(&off_26DE9F480 + (v74 ^ 0x128)) - 12;
  unsigned int v81 = v77 ^ *(_DWORD *)&v80[4 * (v70 ^ 0xD4)] ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ v76 ^ ((v59 ^ 0x400886) + 111581032 - ((2 * v59) & 0xC0D2600));
  HIDWORD(v342) = (*(unsigned char *)(v339 + (a1[11] ^ 0xDLL)) + 90) | (((v35[a1[9] ^ 0xBALL]
                                                                                                  + 19) ^ 0xB9) << 16) | ((v72 ^ 0xFFFFFFCF) << 24) | ((v70 ^ 0x96) << 8);
  int v82 = *(_DWORD *)&v78[4 * ((*(unsigned char *)(v339 + (a1[11] ^ 0xDLL)) + 90) ^ 0xD7)];
  HIDWORD(v42) = v82 ^ 0x3DF152;
  LODWORD(v42) = v82 ^ 0x7E000000;
  unsigned int v83 = *(_DWORD *)&v73[4 * (v58 ^ 0x47)] ^ 0xA9284AAE;
  unsigned int v84 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v51) ^ 0x85u));
  int v85 = (v84 >> 4) & 0xE169194 ^ (v83 >> 1) & 0x1052DB86;
  LODWORD(v345) = 101094160;
  unint64_t v343 = __PAIR64__(v61, v65);
  unsigned int v86 = *(_DWORD *)&v80[4 * (v65 ^ 0x7B)] ^ v83 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ v84 ^ (v85 + 111581032 - 2 * (v85 & 0x6069310 ^ (v84 >> 4) & 0x10));
  unsigned int v87 = *(_DWORD *)&v73[4 * (v72 ^ 0x7F)] ^ 0xA9284AAE;
  unsigned int v88 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE4(v344) ^ 0x25u));
  int v89 = (v88 >> 4) & 0xE169194 ^ (v87 >> 1) & 0x1052DB86;
  LODWORD(v341) = (v52 + 90);
  int v90 = *(_DWORD *)&v78[4 * (v341 ^ 0x9E)];
  HIDWORD(v42) = v90 ^ 0x3DF152;
  LODWORD(v42) = v90 ^ 0x7E000000;
  LODWORD(v342) = v51;
  unsigned int v91 = *(_DWORD *)&v80[4 * (BYTE1(v51) ^ 0x9C)] ^ v87 ^ v88 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ (v89 + 111581032 - ((2 * v89) & 0xC0D2600));
  HIDWORD(v344) = v60;
  unsigned int v92 = *(_DWORD *)&v73[4 * (v60 ^ 4)] ^ 0xA9284AAE;
  unsigned int v93 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * ((HIDWORD(v342) ^ 0xE44A78D7) >> 16));
  int v94 = (v93 >> 4) & 0xE169194 ^ (v92 >> 1) & 0x1052DB86;
  int v95 = v94 + 111581032 - ((2 * v94) & 0xC0D2600);
  int v96 = *(_DWORD *)&v78[4 * (v68 ^ 0x76)];
  HIDWORD(v42) = v96 ^ 0x3DF152;
  LODWORD(v42) = v96 ^ 0x7E000000;
  LOBYTE(v61) = v81 ^ 0x9F;
  unsigned int v97 = *(_DWORD *)&v80[4 * (BYTE1(v61) ^ 0x95)] ^ v92 ^ v93 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ v95;
  unsigned int v98 = *(_DWORD *)&v73[4 * (HIBYTE(v81) ^ 0x6D)] ^ 0xA9284AAE;
  int v99 = *(_DWORD *)&v78[4 * (v86 ^ 0x78)];
  HIDWORD(v42) = v99 ^ 0x3DF152;
  LODWORD(v42) = v99 ^ 0x7E000000;
  LODWORD(v59) = 2030159057
               - 1246347769
               * *(_DWORD *)(v75
                           + 4
                           * ((((BYTE2(v97) ^ 0xC) + (BYTE2(v97) ^ 0xFFFFFF14) + 1) ^ 0xFFFFFFFE) + (BYTE2(v97) ^ 0xC)));
  unsigned int v100 = *(_DWORD *)&v80[4 * (BYTE1(v91) ^ 0xE9)] ^ v59 ^ v98 ^ (v59 >> 4) & 0xE169194 ^ (v42 >> 23) ^ (111581032 - (v98 & 0x52600) + ((v98 >> 1) & 0x1052DB86)) ^ (-761261126 * (v42 >> 23));
  LODWORD(v59) = *(_DWORD *)&v73[4 * (HIBYTE(v86) ^ 0x85)];
  unsigned int v101 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v81) ^ 0x37u));
  unsigned int v102 = (v59 >> 1) & 0x1052DB86 ^ 0x10100106 ^ (v101 >> 4) & 0xE169194;
  int v103 = *(_DWORD *)&v78[4 * (v91 ^ 0xD5)];
  HIDWORD(v42) = v103 ^ 0x3DF152;
  LODWORD(v42) = v103 ^ 0x7E000000;
  unsigned int v104 = *(_DWORD *)&v80[4 * (BYTE1(v97) ^ 0x6D)] ^ v59 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ v101 ^ (v102 + 111581032 - ((2 * v102) & 0xC0D2600));
  LODWORD(v59) = *(_DWORD *)&v73[4 * (HIBYTE(v91) ^ 0x8F)] ^ 0xA9284AAE;
  unsigned int v105 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v86) ^ 0xEFu));
  LOBYTE(v96) = ((unsigned __int16)(v81 ^ 0xF49F) >> 8) - (((v81 ^ 0x39D0F49F) >> 7) & 0xA8) - 44;
  LODWORD(v59) = (((v105 >> 4) & 0xE169194 ^ v105)
                + ((v59 >> 1) & 0x1052DB86 ^ v59)
                - 2 * (((v105 >> 4) & 0xE169194 ^ v105) & ((v59 >> 1) & 0x1052DB86 ^ v59))) ^ *(_DWORD *)&v80[4 * (v96 ^ 0xEE)];
  unsigned int v106 = ((v96 ^ 0xF174836A) & 0x71400035 ^ v96 & 0x35 | (v96 ^ 0xF174836A) & 0x803483CA ^ v96 & 0xCA) ^ 0xD4;
  unsigned int v107 = v106 + 2138085539 - ((2 * v106) & 0xE2E10146);
  int v108 = v107 ^ 0x8629F034 ^ v59;
  LODWORD(v59) = v59 ^ 0x6A69768;
  int v109 = (v108 + v59 + 1) ^ ((v107 ^ 0x808F675C) + 1);
  unsigned int v110 = (v109 + 2138085539 - ((2 * v109) & 0xFEE13146)) ^ v107;
  int v111 = *(_DWORD *)&v78[4 * (v97 ^ 0x1A)];
  HIDWORD(v42) = v111 ^ 0x3DF152;
  LODWORD(v42) = v111 ^ 0x7E000000;
  unsigned int v112 = (-761261126 * (v42 >> 23)) ^ (v42 >> 23) ^ (v110 + v59);
  LODWORD(v59) = *(_DWORD *)&v73[4 * (HIBYTE(v97) ^ 0xDC)] ^ 0xA9284AAE;
  unsigned int v113 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v91) ^ 0xAAu));
  unsigned int v114 = (v113 >> 4) & 0xE169194 ^ (v59 >> 1) & 0x1052DB86;
  unsigned int v115 = v114 + 111581032 - 2 * (v114 & 0x6069302 ^ (v59 >> 1) & 2);
  int v116 = *(_DWORD *)&v78[4 * v61];
  HIDWORD(v42) = v116 ^ 0x3DF152;
  LODWORD(v42) = v116 ^ 0x7E000000;
  unsigned int v117 = *(_DWORD *)&v80[4 * (BYTE1(v86) ^ 0x16)] ^ v59 ^ v113 ^ (v42 >> 23) ^ v115 ^ (-761261126 * (v42 >> 23));
  LODWORD(v59) = *(_DWORD *)&v73[4 * (HIBYTE(v100) ^ 0xA7)] ^ 0xA9284AAE;
  int v118 = *(_DWORD *)&v78[4 * (v104 ^ 0xC)];
  HIDWORD(v42) = v118 ^ 0x3DF152;
  LODWORD(v42) = v118 ^ 0x7E000000;
  unsigned int v119 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v117) ^ 0xC1u));
  unsigned int v120 = *(_DWORD *)&v80[4 * (BYTE1(v112) ^ 0xA)] ^ v59 ^ v119 ^ (111581032
                                                                - (v59 & 0x52600)
                                                                + ((v59 >> 1) & 0x1052DB86)) ^ (v119 >> 4) & 0xE169194 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23));
  unsigned int v121 = *(_DWORD *)&v73[4 * (HIBYTE(v120) ^ 0x3C)];
  unsigned int v122 = ((v121 >> 1) & 0x200 ^ 0xDFF7FFF7) + 2 * ((v121 >> 1) & 0x200);
  LODWORD(v59) = *(_DWORD *)&v73[4 * (HIBYTE(v104) ^ 0x3D)] ^ 0xA9284AAE;
  unsigned int v123 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v100) ^ 0x83u));
  unsigned int v124 = (v123 >> 4) & 0xE169194 ^ (v59 >> 1) & 0x1052DB86;
  int v125 = *(_DWORD *)&v78[4 * (v112 ^ 0x6B)];
  HIDWORD(v42) = v125 ^ 0x3DF152;
  LODWORD(v42) = v125 ^ 0x7E000000;
  unsigned int v126 = *(_DWORD *)&v80[4 * (BYTE1(v117) ^ 0xF2)] ^ v123 ^ v59 ^ (v42 >> 23) ^ (v124
                                                                               + 111581032
                                                                               - ((2 * v124) & 0xC0D2600)) ^ (-761261126 * (v42 >> 23));
  unsigned int v127 = *(_DWORD *)&v73[4 * (HIBYTE(v112) ^ 0xDB)] ^ 0xA9284AAE;
  int v128 = *(_DWORD *)&v78[4 * (v117 ^ 0xB7)];
  HIDWORD(v42) = v128 ^ 0x3DF152;
  LODWORD(v42) = v128 ^ 0x7E000000;
  unsigned int v129 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v104) ^ 0xA0u));
  unsigned int v130 = v127 ^ *(_DWORD *)&v80[4 * (BYTE1(v100) ^ 0xBA)] ^ v129 ^ (v129 >> 4) & 0xE169194 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ (111581032 - (v127 & 0x52600) + ((v127 >> 1) & 0x1052DB86));
  unsigned int v131 = *(_DWORD *)&v73[4 * (HIBYTE(v117) ^ 0x73)] ^ 0xA9284AAE;
  unsigned int v132 = 2030159057 - 1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v112) ^ 0xB1u));
  int v133 = (v132 >> 4) & 0xE169194 ^ (v131 >> 1) & 0x1052DB86;
  int v134 = v133 + 111581032 - 2 * (v133 & 0x6069302 ^ (v131 >> 1) & 2);
  int v135 = *(_DWORD *)&v78[4 * (v100 ^ 0x61)];
  HIDWORD(v42) = v135 ^ 0x3DF152;
  LODWORD(v42) = v135 ^ 0x7E000000;
  unsigned int v136 = *(_DWORD *)&v80[4 * (BYTE1(v104) ^ 0xBD)] ^ v131 ^ (v42 >> 23) ^ (-761261126 * (v42 >> 23)) ^ v132 ^ v134;
  unsigned int v137 = v122 + 2077155949;
  if (((v122 + 537395209) & (v121 ^ 0xA9284A00)) != 0) {
    unsigned int v137 = 1002365531 - v122;
  }
  unsigned int v138 = (v121 >> 1) & 0x1052D986 ^ 0x10100106 ^ ((v121 ^ 0xA9284AAE) - 1539760740 + v137);
  unsigned int v139 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v136) ^ 0x84u)) + 2030159057;
  int v140 = *(_DWORD *)&v78[4 * (v126 ^ 0xBB)];
  HIDWORD(v141) = v140 ^ 0x3DF152;
  LODWORD(v141) = v140 ^ 0x7E000000;
  int v142 = (v138 ^ (v139 >> 4) & 0xE169194) + 111581032 - ((2 * (v138 ^ (v139 >> 4) & 0xE169194)) & 0xD4D2ED0);
  int v143 = v139 ^ *(_DWORD *)&v80[4 * (BYTE1(v130) ^ 8)] ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23));
  int v144 = *(_DWORD *)&v78[4 * (v130 ^ 0xF)];
  HIDWORD(v141) = v144 ^ 0x3DF152;
  LODWORD(v141) = v144 ^ 0x7E000000;
  unsigned int v145 = v143 ^ v142;
  int v146 = *(_DWORD *)&v80[4 * (BYTE1(v136) ^ 0xD)];
  unsigned int v147 = *(_DWORD *)&v73[4 * (HIBYTE(v126) ^ 0x13)] ^ 0xA9284AAE;
  unsigned int v148 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v120) ^ 0x79u)) + 2030159057;
  int v149 = (v147 >> 1) & 0x1052DB86 ^ v147 ^ v148 ^ (v148 >> 4) & 0xE169194 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ ((v146 ^ 0x6A69768) - 244022422 + ((2 * v146) & 0xE2E9077C ^ 0xFFB6F9AF) + 85);
  unsigned int v150 = *(_DWORD *)&v73[4 * (HIBYTE(v130) ^ 0x9E)] ^ 0xA9284AAE;
  unsigned int v151 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v126) ^ 0x8Bu)) + 2030159057;
  int v152 = (v151 >> 4) & 0xE169194 ^ (v150 >> 1) & 0x1052DB86;
  int v153 = *(_DWORD *)&v78[4 * (v136 ^ 0x1A)];
  HIDWORD(v141) = v153 ^ 0x3DF152;
  LODWORD(v141) = v153 ^ 0x7E000000;
  unsigned int v154 = *(_DWORD *)&v80[4 * (BYTE1(v120) ^ 0xF)] ^ v150 ^ v151 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ (v152 + 111581032 - 2 * (v152 & 0x6069302 ^ (v150 >> 1) & 2));
  unsigned int v155 = *(_DWORD *)&v73[4 * (HIBYTE(v136) ^ 0x79)] ^ 0xA9284AAE;
  unsigned int v156 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v130) ^ 0xCDu)) + 2030159057;
  int v157 = (v156 >> 4) & 0xE169194 ^ (v155 >> 1) & 0x1052DB86;
  int v158 = *(_DWORD *)&v78[4 * ((v120 ^ 0x94) - ((2 * (v120 ^ 0x94)) & 0xFFFFFFE7))
                       + 972];
  HIDWORD(v141) = v158 ^ 0x3DF152;
  LODWORD(v141) = v158 ^ 0x7E000000;
  unsigned int v159 = *(_DWORD *)&v80[4 * (((BYTE1(v126) ^ 0xFFFFFFC4) + (BYTE1(v126) ^ 1) + 1) ^ 0xFFFFFFFC) + 4 * (BYTE1(v126) ^ 1)] ^ v156 ^ v155 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ (v157 + 111581032 - ((2 * v157) & 0xC0D2600));
  int v160 = *(_DWORD *)(v75 + 4 * (BYTE2(v159) ^ 0xC9u));
  unsigned int v161 = -1246347769 * v160 - ((1802271758 * v160 - 234649182) & 0xE7112E20) + 1821006817;
  unsigned int v162 = ((v161 >> 4) ^ 0xF388971) & 0xA129014 ^ v161 & 0x1A72D47C | ((v161 >> 4) ^ 0xF388971) & 0x4040180 ^ v161 & 0xE58D2B83;
  unsigned int v163 = *(_DWORD *)&v73[4 * (HIBYTE(v145) ^ 0x8E)] ^ 0xA9284AAE;
  unsigned int v164 = *(_DWORD *)&v80[4 * (BYTE1(v154) ^ 0x45)] ^ v163 ^ (((v163 >> 1) & 0x1052DB86 ^ 0xF3889710 ^ v162)
                                                           + 111581032
                                                           - ((2 * ((v163 >> 1) & 0x1052DB86 ^ 0xF3889710 ^ v162)) & 0xD4D2ED0));
  int v165 = *(_DWORD *)&v78[4 * (v149 ^ 0x1A)];
  HIDWORD(v141) = v165 ^ 0x3DF152;
  LODWORD(v141) = v165 ^ 0x7E000000;
  int v166 = (-761261126 * (v141 >> 23)) ^ (v141 >> 23);
  unsigned int v167 = v164 + 2111625283 - ((2 * v164) & 0xFBB9B086);
  v164 ^= 0xF17483BE;
  int v168 = (v164 + (v166 ^ 0x7357A402 ^ v167) + 1) ^ -v166;
  unsigned int v169 = v166 ^ 0x7DDCD843 ^ (v168 + 2111625283 - ((2 * v168) & 0xFBB9B086));
  BYTE1(v166) = BYTE1(v149) ^ 0xC1;
  unsigned int v170 = v169 + v164;
  unsigned int v171 = *(_DWORD *)&v73[4 * ((v149 ^ 0xFEE1C1E9) >> 24)] ^ 0xA9284AAE;
  unsigned int v172 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v145) ^ 0x34u)) + 2030159057;
  int v173 = (v172 >> 4) & 0xE169194 ^ (v171 >> 1) & 0x1052DB86;
  int v174 = v173 + 111581032 - 2 * (v173 & 0x6069302 ^ (v171 >> 1) & 2);
  int v175 = *(_DWORD *)&v78[4 * (v154 ^ 0xCC)];
  HIDWORD(v141) = v175 ^ 0x3DF152;
  LODWORD(v141) = v175 ^ 0x7E000000;
  int v176 = *(_DWORD *)(v75 + 4 * (BYTE2(v149) ^ 6u));
  int v177 = *(_DWORD *)&v80[4 * (BYTE1(v159) ^ 0x73)] ^ v171 ^ (v141 >> 23) ^ v172 ^ (-761261126 * (v141 >> 23)) ^ v174;
  unsigned int v178 = -1246347769 * v176 + 2030159057;
  unsigned int v179 = *(_DWORD *)&v73[4 * (HIBYTE(v154) ^ 0xAD)] ^ 0xA9284AAE;
  int v180 = (v178 >> 4) & 0xE169194 ^ (v179 >> 1) & 0x1052DB86;
  int v181 = *(_DWORD *)&v78[4 * (v159 ^ 0x6D)];
  HIDWORD(v141) = v181 ^ 0x3DF152;
  LODWORD(v141) = v181 ^ 0x7E000000;
  char v182 = BYTE1(v145) ^ 0xEF;
  int v183 = *(_DWORD *)&v80[4 * (BYTE1(v145) ^ 0xD5)] ^ v179 ^ v178 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ (v180 + 111581032 - ((2 * v180) & 0xC0D2600));
  unsigned int v184 = *(_DWORD *)&v73[4 * (HIBYTE(v159) ^ 0xC7)] ^ 0xA9284AAE;
  unsigned int v185 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v154) ^ 0xC6u)) + 2030159057;
  int v186 = (v185 >> 4) & 0xE169194 ^ (v184 >> 1) & 0x1052DB86;
  int v187 = *(_DWORD *)&v78[4 * (v145 ^ 0xD1)];
  HIDWORD(v141) = v187 ^ 0x3DF152;
  LODWORD(v141) = v187 ^ 0x7E000000;
  int v188 = v141 >> 23;
  int v189 = *(_DWORD *)&v80[4 * BYTE1(v166)] ^ v184 ^ v185 ^ v188 ^ (v186
                                                                + 111581032
                                                                - 2 * (v186 & 0x6069310 ^ (v185 >> 4) & 0x10));
  int v190 = *(_DWORD *)&v78[4 * (v177 ^ 0xD)];
  unsigned int v191 = v189 ^ ((1766853085 * v188) << (v170 & 1) << !(v170 & 1));
  HIDWORD(v141) = v190 ^ 0x3DF152;
  LODWORD(v141) = v190 ^ 0x7E000000;
  unsigned int v192 = v170 - ((2 * v170) & 0xB0611B42) - 667906655;
  unsigned int v193 = *(_DWORD *)&v73[4 * (HIBYTE(v192) ^ 0xE2)] ^ 0xA9284AAE;
  unsigned int v194 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v191) ^ 0x8Fu)) + 2030159057;
  int v195 = (v194 >> 4) & 0xE169194 ^ (v193 >> 1) & 0x1052DB86;
  unsigned int v196 = *(_DWORD *)&v80[4 * (BYTE1(v183) ^ 0x71)] ^ v193 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ v194 ^ (v195 + 111581032 - 2 * (v195 & 0x6069302 ^ (v193 >> 1) & 2));
  unsigned int v197 = *(_DWORD *)&v73[4 * ((v177 ^ 0xA1C6DBFE) >> 24)] ^ 0xA9284AAE;
  unsigned int v198 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v192) ^ 0xF0u)) + 2030159057;
  int v199 = (v198 >> 4) & 0xE169194 ^ (v197 >> 1) & 0x1052DB86;
  int v200 = *(_DWORD *)&v78[4 * (v183 ^ 0x10)];
  HIDWORD(v141) = v200 ^ 0x3DF152;
  LODWORD(v141) = v200 ^ 0x7E000000;
  unsigned int v201 = *(_DWORD *)&v80[4 * (BYTE1(v191) ^ 0x40)] ^ v197 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ v198 ^ (v199 + 111581032 - 2 * (v199 & 0x6069302 ^ (v197 >> 1) & 2));
  BYTE2(v197) = BYTE2(v183) ^ 0x34;
  unsigned int v202 = *(_DWORD *)&v73[4 * ((v183 ^ 0x82344BE3) >> 24)];
  unsigned int v203 = -1246347769 * *(_DWORD *)(v75 + 4 * ((v177 ^ 0xA1C6DBFE) >> 16)) + 2030159057;
  int v204 = *(_DWORD *)&v78[4 * (v191 ^ 0xD9)];
  HIDWORD(v141) = v204 ^ 0x3DF152;
  LODWORD(v141) = v204 ^ 0x7E000000;
  int v205 = v141 >> 23;
  int v206 = *(_DWORD *)&v80[4 * (BYTE1(v192) ^ 0xDA)] ^ v202 ^ v203 ^ v205 ^ (((v203 >> 4) & 0xE169194 ^ ((v202 >> 1) ^ 0x54942557) & 0x1052DB86)
                                                                         + 111581032
                                                                         - 2
                                                                         * (((v203 >> 4) & 0xE169194 ^ ((v202 >> 1) ^ 0x54942557) & 0x1052DB86) & 0x6069302 ^ ((v202 >> 1) ^ 0x54942557) & 2));
  unsigned int v207 = *(_DWORD *)&v73[4 * (HIBYTE(v191) ^ 0x4A)];
  unsigned int v208 = v206 ^ (-761261126 * v205);
  unsigned int v209 = -1246347769 * *(_DWORD *)(v75 + 4 * BYTE2(v197)) + 2030159057;
  int v210 = (v207 >> 1) & 0x1052DB86 ^ (v209 >> 4) & 0xE169194 ^ 0x10100106;
  int v211 = *(_DWORD *)&v78[4 * (v192 ^ 0x77)];
  HIDWORD(v141) = v211 ^ 0x3DF152;
  LODWORD(v141) = v211 ^ 0x7E000000;
  unsigned int v212 = *(_DWORD *)&v80[4 * (BYTE1(v177) ^ 0xE1)] ^ v209 ^ v207 ^ (v141 >> 23) ^ (v210
                                                                                 + 111581032
                                                                                 - ((2 * v210) & 0xC0D2600)) ^ (-761261126 * (v141 >> 23));
  unsigned int v213 = *(_DWORD *)&v73[4 * (HIBYTE(v196) ^ 0xEB)] ^ 0xA9284AAE;
  unsigned int v214 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v212) ^ 0x13u)) + 2030159057;
  int v215 = (v214 >> 4) & 0xE169194 ^ (v213 >> 1) & 0x1052DB86;
  int v216 = v215 + 111581032 - ((2 * v215) & 0xC0D2600);
  int v217 = *(_DWORD *)&v78[4 * (v201 ^ 0x1D)];
  HIDWORD(v141) = v217 ^ 0x3DF152;
  LODWORD(v141) = v217 ^ 0x7E000000;
  unsigned __int8 v218 = BYTE2(v208) ^ 0x5A;
  unsigned int v219 = *(_DWORD *)&v80[4 * ((unsigned __int16)(v208 ^ 0xAC38) >> 8)] ^ v214 ^ v213 ^ (v141 >> 23) ^ (-761261126 * (v141 >> 23)) ^ v216;
  unsigned int v220 = *(_DWORD *)&v73[4 * (HIBYTE(v201) ^ 0x4A)];
  unsigned int v221 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v196) ^ 0x67u)) + 2030159057;
  int v222 = (v220 >> 1) & 0x1052DB86 ^ 0x10100106 ^ (v221 >> 4) & 0xE169194;
  int v223 = *(_DWORD *)&v78[4 * (v208 ^ 0xCB)];
  HIDWORD(v141) = v223 ^ 0x3DF152;
  LODWORD(v141) = v223 ^ 0x7E000000;
  int v224 = (-761261126 * (v141 >> 23)) ^ (v141 >> 23);
  unsigned int v225 = v224 & 0x10000000 | ((((v224 & 0x10000000u) >> 28) & 1) << 29);
  int v226 = v220 ^ *(_DWORD *)&v80[4 * (((v212 ^ 0x15F437EC) >> (v182 & 8) >> (v182 & 8 ^ 8)) ^ 0x3A)] ^ 0x585CC910 ^ v221 ^ (v222 + 111581032 - ((2 * v222) & 0xC0D2600));
  unsigned int v227 = -1157813258 - (v225 ^ 0x9FBEFBDB);
  if ((v226 & ((v225 ^ 0x9FBEFBDB) + 1614873637)) == 0) {
    unsigned int v227 = (v225 ^ 0x9FBEFBDB) + 2071934016;
  }
  unsigned int v228 = (v226 - 457060379 + v227) ^ v224 & 0xEFFFFFFF;
  unsigned int v229 = *(_DWORD *)&v73[4 * (HIBYTE(v208) ^ 0xAA)] ^ 0xA9284AAE;
  unsigned int v230 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v201) ^ 0xF2u)) + 2030159057;
  int v231 = (v230 >> 4) & 0xE169194 ^ (v229 >> 1) & 0x1052DB86;
  int v232 = *(_DWORD *)&v78[4 * (v212 ^ 0x1F)];
  HIDWORD(v233) = v232 ^ 0x3DF152;
  LODWORD(v233) = v232 ^ 0x7E000000;
  int v234 = (v233 >> 23) + 39391639 - ((2 * (v233 >> 23)) & 0x4B2232E);
  HIDWORD(v233) = v233 >> 23;
  LODWORD(v233) = v234 ^ 0x2591196;
  int v235 = *(_DWORD *)&v80[4 * (BYTE1(v196) ^ 0xAC)] ^ v229 ^ v230 ^ (v231 + 111581032 - ((2 * v231) & 0xC0D2600)) ^ ((-761261126 * (v234 ^ 0x2591197)) ^ (2 * (v233 >> 1)) | ((v233 >> 1) >> 31));
  unsigned int v236 = *(_DWORD *)&v73[4 * (HIBYTE(v212) ^ 0x41)] ^ 0xA9284AAE;
  unsigned int v237 = -1246347769 * *(_DWORD *)(v75 + 4 * v218) + 2030159057;
  int v238 = (v237 >> 4) & 0xE169194 ^ (v236 >> 1) & 0x1052DB86;
  int v239 = *(_DWORD *)&v78[4 * (v196 ^ 0x3B)];
  HIDWORD(v233) = v239 ^ 0x3DF152;
  LODWORD(v233) = v239 ^ 0x7E000000;
  unsigned int v240 = *(_DWORD *)&v80[4 * (BYTE1(v201) ^ 0x43)] ^ v236 ^ v237 ^ (v233 >> 23) ^ (v238
                                                                                 + 111581032
                                                                                 - ((2 * v238) & 0xC0D2600)) ^ (-761261126 * (v233 >> 23));
  unsigned int v241 = *(_DWORD *)&v73[4 * (HIBYTE(v219) ^ 0x77)] ^ 0xA9284AAE;
  unsigned int v242 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v240) ^ 0xC9u)) + 2030159057;
  int v243 = (v242 >> 4) & 0xE169194 ^ (v241 >> 1) & 0x1052DB86;
  int v244 = *(_DWORD *)&v78[4 * (v228 ^ 0xE0)];
  HIDWORD(v233) = v244 ^ 0x3DF152;
  LODWORD(v233) = v244 ^ 0x7E000000;
  unsigned int v245 = *(_DWORD *)&v80[4 * (((unsigned __int16)(v235 ^ 0xE900) >> 8) ^ 0x3A)] ^ v241 ^ v242 ^ (v233 >> 23) ^ (v243 + 111581032 - ((2 * v243) & 0xC0D2600)) ^ (-761261126 * (v233 >> 23));
  int v246 = *(_DWORD *)&v73[4 * (HIBYTE(v228) ^ 0x70)];
  HIDWORD(v233) = v246 ^ 0x4AAE;
  LODWORD(v233) = v246 ^ 0xA9280000;
  unsigned int v247 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v219) ^ 0xFCu)) + 2030159057;
  LODWORD(v233) = __ROR4__((v233 >> 16) ^ __ROR4__(v246 & 0x20A5B70C ^ 0x2020020C, 17) ^ 0x27836DB9, 16);
  int v248 = ((v247 >> 4) & 0xE169194 ^ v233) + 111581032 - ((2 * ((v247 >> 4) & 0xE169194 ^ v233)) & 0xD4D2ED0);
  int v249 = *(_DWORD *)&v78[4 * v235];
  HIDWORD(v233) = v249 ^ 0x3DF152;
  LODWORD(v233) = v249 ^ 0x7E000000;
  unsigned int v250 = v247 ^ *(_DWORD *)&v80[4 * (BYTE1(v240) ^ 0xED ^ -(BYTE1(v240) ^ 0xED) ^ ((BYTE1(v240) ^ 0xFFFFFF28) + 59))
                              + 232] ^ (v233 >> 23) ^ (-761261126 * (v233 >> 23)) ^ v248;
  unsigned int v251 = *(_DWORD *)&v73[4 * ((v235 ^ 0x69E7E900u) >> 24)] ^ 0xA9284AAE;
  unsigned int v252 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v228) ^ 0x61u)) + 2030159057;
  int v253 = (v252 >> 4) & 0xE169194 ^ (v251 >> 1) & 0x1052DB86;
  int v254 = *(_DWORD *)&v78[4 * (v240 ^ 0xAC)];
  HIDWORD(v233) = v254 ^ 0x3DF152;
  LODWORD(v233) = v254 ^ 0x7E000000;
  unsigned int v255 = *(_DWORD *)&v80[4 * (BYTE1(v219) ^ 0x4D)] ^ v251 ^ (v233 >> 23) ^ (-761261126 * (v233 >> 23)) ^ v252 ^ (v253 + 111581032 - 2 * (v253 & 0x6069310 ^ (v252 >> 4) & 0x10));
  unsigned int v256 = *(_DWORD *)&v73[4 * (HIBYTE(v240) ^ 0xCB)] ^ 0xA9284AAE;
  unsigned int v257 = -1246347769 * *(_DWORD *)(v75 + 4 * BYTE2(v235)) + 2030159057;
  LODWORD(v233) = __ROR4__(*(_DWORD *)&v78[4 * (v219 ^ 0x85)], 23);
  unsigned int v258 = *(_DWORD *)&v80[4 * (BYTE1(v228) ^ 0x1A)] ^ v256 ^ v257 ^ (111581032
                                                                  - (v256 & 0x52600)
                                                                  + ((v256 >> 1) & 0x1052DB86)) ^ (v257 >> 4) & 0xE169194 ^ v233 ^ 0x7BE2A4FC ^ (-761261126 * (v233 ^ 0x7BE2A4FC));
  unsigned int v259 = *(_DWORD *)&v73[4 * (HIBYTE(v245) ^ 0x5C)];
  unsigned int v260 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v258) ^ 0x49u)) + 2030159057;
  int v261 = (v259 >> 1) & 0x1052DB86 ^ 0x10100106 ^ (v260 >> 4) & 0xE169194;
  int v262 = *(_DWORD *)&v78[4 * (v250 ^ 0x20)];
  HIDWORD(v233) = v262 ^ 0x3DF152;
  LODWORD(v233) = v262 ^ 0x7E000000;
  int v263 = (-761261126 * (v233 >> 23)) ^ (v233 >> 23);
  int v264 = v259 ^ 0x585CC910 ^ v260 ^ *(_DWORD *)&v80[4 * (BYTE1(v255) ^ 0x3C)] ^ (v261
                                                                               + 111581032
                                                                               - ((2 * v261) & 0xC0D2600));
  unsigned int v265 = v264 + v263 - 2 * (v264 & v263);
  unsigned int v266 = *(_DWORD *)&v73[4 * (HIBYTE(v250) ^ 0xBB)] ^ 0xA9284AAE;
  int v267 = *(_DWORD *)&v78[4 * (v255 ^ 0x26)];
  HIDWORD(v233) = v267 ^ 0x3DF152;
  LODWORD(v233) = v267 ^ 0x7E000000;
  unsigned int v268 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v245) ^ 0x3Du)) + 2030159057;
  unsigned int v269 = *(_DWORD *)&v80[4 * (BYTE1(v258) ^ 0x72)] ^ v268 ^ v266 ^ (v268 >> 4) & 0xE169194 ^ (v233 >> 23) ^ (111581032 - (v266 & 0x52600) + ((v266 >> 1) & 0x1052DB86)) ^ (-761261126 * (v233 >> 23));
  unsigned int v270 = *(_DWORD *)&v73[4 * (HIBYTE(v255) ^ 0xC8)] ^ 0xA9284AAE;
  unsigned int v271 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v250) ^ 0xD0u)) + 2030159057;
  int v272 = (v271 >> 4) & 0xE169194 ^ (v270 >> 1) & 0x1052DB86;
  LODWORD(v233) = __ROR4__(*(_DWORD *)&v78[4 * (v258 ^ 0xD4)], 23);
  unsigned int v273 = *(_DWORD *)&v80[4 * (BYTE1(v245) ^ 0x3C)] ^ v270 ^ v233 ^ 0x7BE2A4FC ^ (-761261126 * (v233 ^ 0x7BE2A4FC)) ^ v271 ^ (v272 + 111581032 - ((2 * v272) & 0xC0D2600));
  unsigned int v274 = *(_DWORD *)&v73[4 * (HIBYTE(v258) ^ 0x82)] ^ 0xA9284AAE;
  unsigned int v275 = -1246347769 * *(_DWORD *)(v75 + 4 * (BYTE2(v255) ^ 0x95u)) + 2030159057;
  int v276 = (v275 >> 4) & 0xE169194 ^ (v274 >> 1) & 0x1052DB86;
  int v277 = *(_DWORD *)&v78[4 * (v245 ^ 0x76)];
  int v278 = v276 & 0x6069310 ^ (v275 >> 4) & 0x10;
  HIDWORD(v233) = v277 ^ 0x3DF152;
  LODWORD(v233) = v277 ^ 0x7E000000;
  int v279 = *(_DWORD *)&v80[4 * (((BYTE1(v250) ^ 0xBF) & 4 | 0x3A) ^ (BYTE1(v250) ^ 0xBF) & 0xFFFFFFFB)] ^ v274 ^ v275 ^ (v233 >> 23) ^ (-761261126 * (v233 >> 23));
  int v280 = v74;
  unsigned int v281 = (char *)*(&off_26DE9F480 + (v74 ^ 0x1EA)) - 4;
  int v282 = *(_DWORD *)&v281[4 * (HIBYTE(v269) ^ 0x39)];
  HIDWORD(v233) = v282 ^ 0x1E;
  LODWORD(v233) = v282 ^ 0x7D01CDC0;
  int v283 = v233 >> 5;
  unsigned int v284 = v279 ^ (v276 + 111581032 - 2 * v278);
  int v285 = (char *)*(&off_26DE9F480 + v74 + 100) - 4;
  int v286 = *(_DWORD *)&v285[4 * (BYTE2(v265) ^ 0xB7)];
  unsigned int v287 = v284 ^ 0x9330EAD7;
  int v288 = (char *)*(&off_26DE9F480 + v74 - 309) - 4;
  uint64_t v289 = (uint64_t)*(&off_26DE9F480 + (v74 ^ 0xEB));
  int v290 = *(_DWORD *)(v289 + 4 * (v273 ^ 0xA0u)) - 2070018256;
  int v291 = *(_DWORD *)&v281[4 * (HIBYTE(v265) ^ 0x2E)];
  int v292 = *(_DWORD *)&v281[4 * (HIBYTE(v273) ^ 0xAD)];
  unsigned int v293 = (((2 * v286) ^ 0x72CF9A98) * (v286 ^ 0x3967CD4C)) ^ (4 * v283) ^ ((2 * v290) | 0x3ED097B8) ^ (*(_DWORD *)&v288[4 * (BYTE1(v287) ^ 0x29)] + (BYTE1(v287) ^ 0x96FEADC0) + (((v287 >> 8) & 0xC0) << (BYTE2(v265) & 1) << !(v265 & 0x10000)) - 1153790171);
  int v294 = *(_DWORD *)&v281[4 * (HIBYTE(v284) ^ 0xF9)];
  int v295 = *(_DWORD *)&v285[4 * (BYTE2(v284) ^ 0x47)];
  uint64_t v296 = *(unsigned int *)&v285[4 * (BYTE2(v269) ^ 0xCF)];
  int v297 = *(_DWORD *)&v285[4 * (BYTE2(v273) ^ 0x67)];
  int v298 = *(_DWORD *)&v288[4 * (BYTE1(v273) ^ 0x13)];
  int v299 = *(_DWORD *)&v288[4 * (BYTE1(v265) ^ 0x93)];
  LODWORD(v285) = BYTE1(v269);
  int v300 = *(_DWORD *)&v288[4 * (BYTE1(v269) ^ 0x13)];
  unsigned int v301 = v283 ^ *(_DWORD *)(v20 - 208) ^ (v293 + 1659967505 - ((2 * v293) & 0xC5E23022));
  int v302 = *(_DWORD *)(v289 + 4 * (v269 ^ 0xF0u));
  int v303 = *(_DWORD *)(v289 + 4 * v287);
  int v304 = v290 ^ v286;
  int v305 = *(_DWORD *)(v289 + 4 * (v265 ^ 0x4Au));
  unsigned int v306 = v304 ^ (v301 - ((2 * v301) & 0xD69DEBB8) - 347146788);
  int v307 = (char *)*(&off_26DE9F480 + HIDWORD(v345) - 317) - 12;
  LOBYTE(v304) = (v307[BYTE2(v306) ^ 0xA9] >> 4) ^ 2;
  a1[5] = v307[BYTE2(v306) ^ 0xA9] ^ 0x37 ^ (v304 - 2 * (v304 & 7) + 39);
  HIDWORD(v233) = v291 ^ 0x1E;
  LODWORD(v233) = v291 ^ 0x7D01CDC0;
  int v308 = v233 >> 5;
  v302 -= 2070018256;
  int v309 = (((2 * v295) ^ 0x72CF9A98) * (v295 ^ 0x3967CD4C)) ^ (4 * v308) ^ ((2 * v302) | 0x3ED097B8) ^ (v298 + (BYTE1(v273) ^ 0x3A) + 1379482853);
  int v310 = v308 ^ *(_DWORD *)(v20 - 204) ^ (v309 - 1416187777 - ((2 * v309) & 0x572D60FE));
  uint64_t v311 = v302 ^ v295 ^ (v310 - ((2 * v310) & 0xDC6FA314) - 298331766);
  unsigned int v312 = (char *)*(&off_26DE9F480 + HIDWORD(v345) + 148) - 12;
  a1[2] = v312[BYTE1(v311) ^ 0xBDLL] ^ 0xD9 ^ (8 * (v312[BYTE1(v311) ^ 0xBDLL] & 0xF));
  int v313 = (char *)*(&off_26DE9F480 + HIDWORD(v345) - 89) - 12;
  a1[4] = (v313[HIBYTE(v306) ^ 0xBLL] + (HIBYTE(v306) ^ 0x19) - 111) ^ 0xA;
  HIDWORD(v233) = v294 ^ 0x1E;
  LODWORD(v233) = v294 ^ 0x7D01CDC0;
  int v314 = v233 >> 5;
  int v315 = v314 - 865258610;
  unsigned int v316 = v314 - 865258610 - ((2 * v314) & 0x98DA6714) - 4;
  HIDWORD(v233) = v316 ^ 0xAAAAAAAA;
  LODWORD(v233) = v316 ^ 0xCC6D3380;
  unsigned int v317 = ((v316 >> 2) & 0xFFFFFFF ^ 0x2AB04CC2 | 0x5ECE2919)
       - ((v316 >> 2) & 0xFFFFFFF ^ 0x2AB04CC2 | 0xA131D6E6)
       - 1590569242;
  unsigned int v318 = ((v315 << 30) ^ 0x8FEFFFEE) - 267386862;
  unsigned int v319 = (v318 - (v317 ^ 0x77652939 | v318)) ^ ((v317 ^ 0x889AD6C6) + 1);
  LODWORD(v288) = (((2 * v297) ^ 0x72CF9A98) * (v297 ^ 0x3967CD4C)) ^ ((v285 ^ 0x3A) + 1379482853 + v300) ^ (v305 - 2070018256) ^ ((2 * (v305 - 2070018256)) | 0x3ED097B8) ^ __ROR4__((v233 >> 4) ^ 0xD44B4F38 ^ ((v317 ^ 0x32B9053C ^ (v319 - ((2 * v319) & 0x8BB8580A) + 1172057093)) + v318), 28);
  unsigned int v320 = v297 ^ *(_DWORD *)(v20 - 200) ^ (v288 - 164047029 - ((2 * v288) & 0xEC71AFD0) + 157);
  unsigned int v321 = v307[BYTE2(v320) ^ 0x17];
  a1[13] = v321 ^ (v321 >> 4) ^ 0xF2;
  int v322 = v312[BYTE1(v306) ^ 0xC0];
  HIDWORD(v233) = v322 ^ 1;
  LODWORD(v233) = (v322 ^ 0xBBBBBBBB) << 24;
  LOBYTE(v322) = (((v233 >> 26) ^ 0xBF) >> 6) | (4 * ((v233 >> 26) ^ 0xBF));
  a1[6] = v322 ^ 0x4B ^ (8 * (v322 & 0xF));
  HIDWORD(v233) = v292 ^ 0x1E;
  LODWORD(v233) = v292 ^ 0x7D01CDC0;
  int v323 = (v233 >> 5) - ((2 * (v233 >> 5)) & 0xACB95D3C);
  unsigned int v324 = (698569057 - v323) & 0x40000000 | (((698569057 - v323) & 0x40000000u) >> 30 << 31);
  int v325 = v323 - 698569058;
  v324 ^= 0x7FBF3B7Fu;
  int v326 = (4 * v325) ^ 0x5972BA78;
  BOOL v327 = ((v324 - 2143239039) & v326) == 0;
  unsigned int v328 = v324 - 1496320068;
  unsigned int v329 = -1504809286 - v324;
  if (v327) {
    unsigned int v329 = v328;
  }
  int v330 = v296 ^ ((BYTE1(v265) ^ 0xBA) + 1379482853 + v299) ^ ((2 * (v303 - 2070018256)) | 0x3ED097B8) ^ (2 * (v296 ^ 0x3967CD4C) * (v296 ^ 0x3967CD4C) - ((4 * (v296 ^ 0x3967CD4C) * (v296 ^ 0x3967CD4C)) & 0xE20EB948) - 251175772) ^ v325 & 0xBFFFFFFF ^ 0xDE3C3F76 ^ (v326 - 646918971 + v329);
  unsigned int v331 = (v303 - 2070018256) ^ *(_DWORD *)(v20 - 192) ^ (v330 + 446634805 - ((2 * v330) & 0x353E366A));
  int v332 = (char *)*(&off_26DE9F480 + v280 - 310) - 8;
  a1[11] = v332[v331 ^ 0x98] ^ (v331 - ((2 * v331) & 0xEC) + 118) ^ 0xF3;
  a1[7] = ((v306 ^ 0x90) - 2 * ((v306 ^ 0x90) & 0x77 ^ v306 & 1) + 118) ^ v332[v306 ^ 0xA9] ^ 0x22;
  unsigned int v333 = v307[BYTE2(v331) ^ 0xFLL];
  unsigned int v334 = (((v333 ^ 0xC6) >> 2) | ((v333 ^ 0xFFFFFFC6) << 6)) ^ ((v333 >> 6) | (4 * v333)) & 0xFFFFFFC3;
  a1[9] = ((v334 >> 6) | (4 * (v334 ^ 0x28))) ^ 0xAA;
  a1[14] = v312[BYTE1(v320) ^ 0x41] ^ 9 ^ (8 * (v312[BYTE1(v320) ^ 0x41] & 0xF));
  a1[8] = ((HIBYTE(v331) ^ 0x3E) + v313[HIBYTE(v331) ^ 0x2CLL] - 111) ^ 0x51;
  a1[3] = ((v311 ^ 0xC6) - 2 * ((v311 ^ 0xC6) & 0x77 ^ v311 & 1) + 118) ^ 0xB1 ^ v332[v311 ^ 0x80];
  a1[12] = (v313[HIBYTE(v320) ^ 0xB1] + (HIBYTE(v320) ^ 0xA3) - 111) ^ 0x49;
  unsigned int v335 = v307[BYTE2(v311) ^ 0x77];
  a1[1] = v335 ^ (v335 >> 4) ^ 0x36;
  a1[*(void *)(v20 - 224)] = v332[v320 ^ 0x26] ^ ((v320 ^ 0x4C) - ((2 * (v320 ^ 0x4C)) & 0xEC) + 118) ^ 0xCA;
  *a1 = (BYTE3(v311) ^ 0x8C) + v313[BYTE3(v311) ^ 0x9ELL] - 111;
  a1[10] = v312[BYTE1(v331) ^ 0x7ELL] ^ (((8 * (v312[BYTE1(v331) ^ 0x7ELL] & 0xF)) ^ 0x48)
                                       - ((2 * ((8 * (v312[BYTE1(v331) ^ 0x7ELL] & 0xF)) ^ 0x48)) & 0x70)
                                       - 71) ^ 0xF0;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, char *, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 184) + 8 * ((133 * (HIDWORD(a5) > 0x10)) ^ HIDWORD(v345))))(119, 963104076, v346, 1053857720, HIDWORD(v345), v296, v311, 2097270208, a2, a3, a1, a5, v337, v338, v339, v340, a10, v341, v342,
           v343,
           v344,
           v345,
           13,
           a17,
           2,
           3,
           8,
           11,
           9,
           4);
}

void sub_22B339098(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B339140@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((436 * (*(_DWORD *)(v2 + 4 * (v4 + (v3 ^ 0x30B) + ((v3 - 1591) ^ a1))) == v1)) ^ (v3 + 249))))();
}

uint64_t sub_22B339184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unint64_t *a21,int a22)
{
  a20 = 377
      - 225134719
      * (((&a20 | 0x6930C194) - &a20 + (&a20 & 0x96CF3E68)) ^ 0x7FC084BE);
  a21 = &STACK[0x2B48C588999CF099];
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v23 + 32752))(&a20);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((3446 * (a22 == v24)) ^ v22)))(v25);
}

uint64_t sub_22B339218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (((((206 * ((v8 - 1452) ^ 0x321) - 1458) & v9) == -268960960) * ((v8 - 1452) ^ 0x485)) ^ (v8 - 1452))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22B339264(uint64_t a1, int a2, int8x8_t a3, uint64_t a4, int a5)
{
  int v12 = v7 - 8;
  uint64_t v13 = v6 + v12 + ((5 * a2) ^ (v5 + 1954));
  *(int8x8_t *)(a1 + v13) = veor_s8(*(int8x8_t *)(v10 + v13), a3);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 + v12 != 8) * a5) ^ v8)))();
}

uint64_t sub_22B33926C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((a4 >= ((a8 - 3812) | 0x700u) - 1808) * ((a8 + 1234734762) & 0xB66767DF ^ 0xA76)) ^ (a8 - 1821))))();
}

uint64_t sub_22B3392BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  int v28 = LOBYTE(STACK[0x2C0]) ^ 0x22;
  if (v28 == 1)
  {
    char v29 = (v27 + 78) | 0x1A;
    unsigned int v35 = STACK[0x2A4];
    unsigned int v36 = STACK[0x2A0];
    LOBYTE(STACK[0x298]) = ((8 * LOBYTE(STACK[0x2A4])) ^ 0xC8)
                         - ((((8 * LODWORD(STACK[0x2A4])) ^ 0xFFFFFFC8) << (v29 + 99)) & 0x55)
                         + 42;
    LOBYTE(STACK[0x299]) = ((v35 >> 5) ^ 0xB0) - 2 * (((v35 >> 5) ^ 0xB0) & 0x2F ^ (v35 >> 5) & 5) + 42;
    LOBYTE(STACK[0x29A]) = ((v35 >> 13) ^ 0x29) - ((2 * ((v35 >> 13) ^ 0x29)) & 0x55) + 42;
    char v33 = 84;
    LOBYTE(STACK[0x29B]) = ((v35 >> 21) ^ 0x11) - ((v35 >> 20) & 0x54) + 42;
    HIDWORD(v37) = v36 ^ 6;
    LODWORD(v37) = v35 ^ 0x20000000;
    LOBYTE(STACK[0x29C]) = (v37 >> 29) - ((2 * (v37 >> 29)) & 0x55) + 42;
    LOBYTE(STACK[0x29D]) = ((v36 >> 5) ^ 0x9D) - ((2 * ((v36 >> 5) ^ 0x9D)) & 0x55) + 42;
    LOBYTE(STACK[0x29E]) = ((v36 >> 13) ^ 0xBD) - ((2 * ((v36 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v32 = v36 >> 21;
    char v34 = (v36 >> 21) ^ 0x40;
    goto LABEL_5;
  }
  if (v28 == 2)
  {
    char v29 = v27 + 104;
    unsigned int v30 = STACK[0x2A0];
    unsigned int v32 = STACK[0x2A4];
    LOBYTE(STACK[0x298]) = ((LODWORD(STACK[0x2A0]) >> 21) ^ 0x40)
                         - ((LODWORD(STACK[0x2A0]) >> 21 << ((v27 + 104) ^ 0x9F)) & 0x54)
                         + 42;
    LOBYTE(STACK[0x299]) = ((v30 >> 13) ^ 0xBD) - ((2 * ((v30 >> 13) ^ 0xBD)) & 0x55) + 42;
    LOBYTE(STACK[0x29A]) = ((v30 >> 5) ^ 0x9D) - ((2 * ((v30 >> 5) ^ 0x9D)) & 0x55) + 42;
    HIDWORD(v31) = v30 ^ 6;
    LODWORD(v31) = v32 ^ 0x20000000;
    LOBYTE(STACK[0x29B]) = (v31 >> 29) - ((2 * (v31 >> 29)) & 0x55) + 42;
    LOBYTE(STACK[0x29C]) = ((v32 >> 21) ^ 0x11) - ((v32 >> 20) & 0x54) + 42;
    LOBYTE(STACK[0x29D]) = ((v32 >> 13) ^ 0x29) - ((2 * ((v32 >> 13) ^ 0x29)) & 0x55) + 42;
    LOBYTE(STACK[0x29E]) = ((v32 >> 5) ^ 0xB0) - 2 * (((v32 >> 5) ^ 0xB0) & 0x2E ^ (v32 >> 5) & 4) + 42;
    LOBYTE(v32) = (8 * v32) ^ 0xC8;
    char v33 = 80;
    char v34 = v32;
LABEL_5:
    LOBYTE(STACK[0x29F]) = v34 - (((_BYTE)v32 << (((v29 - 31) & 0xB6) - 53)) & v33) + 42;
  }
  return sub_22B348F50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_22B339514()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1009
                                * (*(unsigned __int8 *)(v0 - 0x3FB394992CBB4F6ELL) == ((((v1 - 75) | 0x1C) - 73) ^ 0x3C))) ^ v1)))();
}

void sub_22B339564(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 40) - 0x25ABA05A3795B0FALL) = a1;
  JUMPOUT(0x22B339584);
}

uint64_t sub_22B3395C4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * ((v0 ^ 0x26u) > 7)) ^ v1)))();
}

uint64_t sub_22B3395F8@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v20 + 8 * (((a20 == a1 + a2 - 3046 - 88) * (a2 - 2262)) ^ a2)))();
}

uint64_t sub_22B339634()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 891)))();
  return (*(uint64_t (**)(void))(STACK[0x270] + 8 * ((13 * (STACK[0x4C0] != 0)) ^ (v0 - 738))))();
}

uint64_t sub_22B339674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)(((((((v26 + 511) | 0x5D) + 1055340028) & 0xC118C7A7) - 949) * (v27 != 1)) ^ ((v26 + 511) | 0x5D))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_22B339698@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unsigned int v40 = (a2 + 856546786) & 0xCCF22DF3;
  *(void *)(a1 + 5424) = 0x8137DE394D92FB36;
  *(void *)(a1 + 5416) = 0x6A89FBEF210FA84ALL;
  int v41 = STACK[0x46C];
  LODWORD(STACK[0x464]) = STACK[0x46C];
  int v42 = 2009815553 * ((((v38 - 192) ^ 0x468E72F9) & 0xF2962B21 | ~((v38 - 192) ^ 0x468E72F9 | 0xF2962B21)) ^ 0xBAEC8862);
  *(_DWORD *)(v38 - 144) = v42 + 1626819273 * v41 - 747210202;
  v36[38] = v36;
  v36[35] = &STACK[0x4AAEAB593A25F7];
  v36[36] = &STACK[0x2511380BA0D72021];
  *(_DWORD *)(v38 - 160) = v42 + v40 - 2407;
  *(_DWORD *)(v38 - 156) = v42 + a33 + ~(2 * ((a33 + 1145692544) & 0x6A097D1F ^ a33 & 0x16)) + 777215626;
  v36[33] = a36;
  v36[34] = &STACK[0x4FCBBA3B9D6B6183];
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (int)(v40 ^ 0x1C28)))(v38 - 192);
  unint64_t v44 = STACK[0x270];
  int v45 = *(_DWORD *)(v38 - 140);
  LODWORD(STACK[0x290]) = v45;
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * (int)((1440 * (v45 == v37)) ^ (v40 - 2420))))(v43);
}

uint64_t sub_22B3396DC(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  int8x16x4_t v70 = vld4q_s8(a3);
  uint8x16_t v46 = (uint8x16_t)veorq_s8(v70.val[0], v43);
  uint16x8_t v47 = vmovl_u8(*(uint8x8_t *)v46.i8);
  int8x16_t v48 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v47.i8);
  int8x16_t v49 = (int8x16_t)vmovl_high_u16(v47);
  uint16x8_t v50 = vmovl_high_u8(v46);
  int8x16_t v51 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v50.i8);
  int8x16_t v52 = (int8x16_t)vmovl_high_u16(v50);
  uint8x16_t v53 = (uint8x16_t)veorq_s8(v70.val[1], v43);
  uint16x8_t v54 = vmovl_high_u8(v53);
  uint16x8_t v55 = vmovl_u8(*(uint8x8_t *)v53.i8);
  uint8x16_t v56 = (uint8x16_t)veorq_s8(v70.val[2], v43);
  _Q21 = (int8x16_t)vmovl_high_u8(v56);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v56.i8);
  int8x16_t v59 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v64 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v70.val[0] = veorq_s8(v70.val[3], v43);
  v70.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v70.val[0]);
  v70.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v70.val[1]);
  v70.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v70.val[0].i8);
  v70.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v70.val[0]);
  v70.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v70.val[0].i8), 0x18uLL), v59), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v55.i8, 8uLL), v48));
  v70.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v70.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v55, 8uLL), v49));
  v70.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v70.val[1].i8), 0x18uLL), v64), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v54.i8, 8uLL), v51));
  v70.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v70.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v54, 8uLL), v52));
  int32x4_t v65 = (int32x4_t)veorq_s8(vandq_s8(v70.val[0], v45), (int8x16_t)(*(_OWORD *)&v48 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v66 = (int32x4_t)veorq_s8(vandq_s8(v70.val[3], v45), (int8x16_t)(*(_OWORD *)&v49 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v67 = (int32x4_t)veorq_s8(vandq_s8(v70.val[1], v45), (int8x16_t)(*(_OWORD *)&v51 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v68 = (int32x4_t)veorq_s8(vandq_s8(v70.val[2], v45), (int8x16_t)(*(_OWORD *)&v52 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  v40[2] = vaddq_s32(vsubq_s32((int32x4_t)v70.val[1], vaddq_s32(v67, v67)), v44);
  v40[3] = vaddq_s32(vsubq_s32((int32x4_t)v70.val[2], vaddq_s32(v68, v68)), v44);
  *unsigned int v40 = vaddq_s32(vsubq_s32((int32x4_t)v70.val[0], vaddq_s32(v65, v65)), v44);
  v40[1] = vaddq_s32(vsubq_s32((int32x4_t)v70.val[3], vaddq_s32(v66, v66)), v44);
  return (*(uint64_t (**)(void))(v41 + 8 * ((1833 * (v42 == 589378883)) ^ a40 ^ 0x8F2)))();
}

uint64_t sub_22B33990C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return v3(a1, a2, a3, 2327002140);
}

uint64_t sub_22B33995C()
{
  *(_DWORD *)(*v2 + 4 * (v0 + v4 + 5 * (v3 ^ 0x113) - 1146) + v5) = v1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((2 * (v0 + v4 - 2 >= 0)) | (8 * (v0 + v4 - 2 >= 0))) ^ v3)))();
}

uint64_t sub_22B3399A8@<X0>(int a1@<W8>)
{
  HIDWORD(v8) = v3 ^ 1;
  LODWORD(v8) = v3 ^ a1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2894 * (v7 + 1 == v5 + 40)) ^ v1)))((v8 >> 2)
                                                                                            + v6 - (v2 & (2 * (v8 >> 2))));
}

void sub_22B339A70()
{
}

uint64_t sub_22B339A78@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v45 = 1948972247 * ((((v44 - 136) | 0x5DBC7BC3) - (v44 - 136) + ((v44 - 136) & 0xA2438438)) ^ 0xE8228E2D);
  *(_DWORD *)(v44 - 120) = a1 - v45 + 461;
  *(_DWORD *)(v44 - 136) = v45 + a34 + 1134414641;
  *(void *)(v44 - 128) = a43;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (a1 + 3969)))(v44 - 136);
  return a27(v46);
}

uint64_t sub_22B339B08()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 + 66) ^ (v0 == (v1 ^ 0x8C1) - 906)) & 1 | (32
                                                                                                 * (((v1 + 66) ^ (v0 == (v1 ^ 0x8C1) - 906)) & 1))) ^ v1)))();
}

uint64_t sub_22B339B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int8x16_t a63)
{
  HIDWORD(v67) = v63 ^ 0x441;
  a63 = veorq_s8(**v64, (int8x16_t)xmmword_22B497590);
  LODWORD(v67) = -42900;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * (v63 ^ ((4 * (&a63 == 0)) | ((&a63 == 0) << 7)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v67,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_22B339B88()
{
}

uint64_t sub_22B339BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v66 = STACK[0x378];
  unint64_t v67 = STACK[0x278];
  if (LODWORD(STACK[0x378]) == 1287984556)
  {
    int8x16x4_t v70 = (char *)&STACK[0x560] + v64 - 0x3D63BD92DA196282;
    STACK[0x268] = (unint64_t)(v70 + 0x2970AB8229FC368ELL);
    STACK[0x260] = (unint64_t)(v70 - 1824);
    LODWORD(STACK[0x50C]) = 1796715989;
    STACK[0x3B0] = v64 - 176;
    STACK[0x3F0] = 0;
    LODWORD(STACK[0x410]) = 1801476204;
    int v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x270] + 8 * (int)(((v67 - 2908) * (v70 != (char *)1552)) ^ (v67 - 2018)));
    unint64_t v74 = STACK[0x380];
    STACK[0x230] = STACK[0x478];
    STACK[0x250] = (unint64_t)(v70 - 1596);
    return v71(a1, a2, a3, a4, a5, a6, &STACK[0x310], a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             v74,
             v70 + 0x385DC943D9738810,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62);
  }
  else
  {
    unint64_t v68 = STACK[0x270];
    if (v66 == 1556420015)
    {
      LODWORD(STACK[0x36C]) = v62 - 31;
      LODWORD(v69) = v67;
    }
    else
    {
      int v73 = 225134719 * (((((v65 - 192) | 0x120B7FAA) ^ 0xFFFFFFFE) - (~(v65 - 192) | 0xEDF48055)) ^ 0xFB04C57F);
      STACK[0x1940] = a30;
      *(_DWORD *)(v65 - 184) = v66 - v73 - ((2 * v66 + 1718998184) & v63) - 1892034913;
      *(_DWORD *)(v65 - 180) = (v67 + 766) ^ v73;
      (*(void (**)(uint64_t))(v68 + 8 * ((int)v67 + 951)))(v65 - 192);
      unint64_t v68 = STACK[0x270];
      unint64_t v69 = STACK[0x278];
    }
    return (*(uint64_t (**)(void))(v68
                                + 8
                                * (int)(((((STACK[0x4F0] == 0) ^ (v69 + 108)) & 1) * (v69 - 2684)) ^ (v69 - 2389))))();
  }
}

uint64_t sub_22B339D6C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((102 * (((a8 == a1 - 949) ^ ((a1 ^ 0x65) + 1)) & 1)) ^ a1)))();
}

uint64_t sub_22B339DA4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v6 = v4 >= (((((a4 ^ 0x511) - 1372074850) & 0x51C82FB9) + 675) ^ 0xA7Cu);
  return (*(uint64_t (**)(void))(v5 + 8 * ((4 * v6) | (8 * v6) | a4 ^ 0x511)))(0);
}

uint64_t sub_22B339DF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (((1326 * (a4 ^ 0xE72) - 2404) * ((unint64_t)(v6 - v4 + 56) > 0x1F)) ^ a4)))();
}

uint64_t sub_22B339E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 136) = v15;
  *(void *)(v18 - 128) = a11;
  *(_DWORD *)(v18 - 120) = v13
                         + 1503746353
                         * ((((v18 - 136) ^ 0xE0807D71 | 0x2D166365) - (((v18 - 136) ^ 0xE0807D71) & 0x2D166365)) ^ 0xEBF7DCA2)
                         + 631;
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 104) = a13;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v13 ^ 0x52E)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((434
                                              * (((v14
                                                 + ((((((v13 - 2760) | 0x21A) ^ 0xF55E0704) + v17) >> 1) ^ 0xDAE1FEF6)
                                                 + (((((v13 - 2760) | 0x21A) ^ 0xF55E0704) + v17) & 0xB5C3FDEC)
                                                 + 2762) & a10) == 0)) ^ v13)))(v19);
}

void sub_22B339F24(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int v2 = 1734664879 * (((a1 | 0x3A8B58B8) - (a1 & 0x3A8B58B8)) ^ 0x155070A2);
  unsigned int v3 = *(_DWORD *)(a1 + 24) + v2;
  uint64_t v4 = (char *)*(&off_26DE9F480 + (int)(v3 - 3099)) - 8;
  int v5 = *(_DWORD *)(a1 + 28) - v2;
  (*(void (**)(char *, unsigned char *, uint64_t))&v4[8 * (v3 ^ 0x274)])((char *)*(&off_26DE9F480 + (int)(v3 ^ 0xC8E)) - 8, v9, 35);
  uint64_t v10 = 0x3D75DE348DD448DLL;
  uint64_t v11 = 0x39F7CC23E3A9A5C4;
  int v12 = -1808020968;
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(v6 + 0 % (v5 ^ 0xDA25A4C1));
  LOBYTE(v6) = *(unsigned char *)(v6 + 1 % (v5 ^ 0xDA25A4C1));
  v8[0] = v7 - ((2 * v7) & 0x36) + 27;
  v8[v3 ^ 0xD84] = v6 - ((2 * v6) & 0x36) + 27;
  __asm { BRAA            X14, X17 }
}

void sub_22B33A0C4(_DWORD *a1)
{
  *((unsigned char *)a1 + v3 + 4) = v5;
  int v8 = v6 + v2;
  *a1 = v6 + v2 - 124482509;
  int v9 = a1 + 1;
  *((unsigned char *)v9 + (v7 + v2)) = v4;
  *((unsigned char *)v9 + (v1 + v2 - 2)) = 77;
  *((unsigned char *)v9 + (v8 - 2092921776)) = 91;
  *((unsigned char *)v9 + (v8 - 2092921775)) = 30;
  JUMPOUT(0x22B389A38);
}

uint64_t sub_22B33A120()
{
  BOOL v4 = v1 + 678287913 < (int)(v2 + 1217032677);
  if (v2 > 0x37758E1A != v1 + 678287913 < -930450971) {
    BOOL v4 = v2 > 0x37758E1A;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((v0 - 1419852134) & 0x54A13AD7 ^ 0xEB)) ^ v0)))();
}

uint64_t sub_22B33A1A4@<X0>(uint64_t a1@<X8>)
{
  char v5 = (char *)(v1 + (v2 << (((2 * v4) ^ 0x42u) - 32)));
  int8x8x4_t v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return (*(uint64_t (**)(void))(a1 + 8 * ((725 * ((v3 & 0x1FFFFFFF8) - 8 == v2)) ^ v4)))();
}

void sub_22B33A200()
{
}

uint64_t sub_22B33A2AC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(v1 - 0x19157D3ABD2659DELL) == 0)
                                * (((404 * (v2 ^ 0xB0F)) ^ 0x770) - 3161)) | v2)))();
}

uint64_t sub_22B33A30C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t (**a58)(void))
{
  int v62 = STACK[0x200];
  int v63 = 1734664879
      * ((-1425132540 - ((v61 - 168) ^ 0x4BC4F268 | 0xAB0E3404) + ((v61 - 168) ^ 0x4BC4F268 | 0x54F1CBFB)) ^ 0x30EE1189);
  *(void *)(v61 - 168) = a25;
  *(void *)(v61 - 160) = a55;
  *(void *)(v61 - 152) = v58;
  *(_DWORD *)(v61 - 144) = v59 + a1 + v63 + 1629;
  *(_DWORD *)(v61 - 140) = v63 ^ ((v62 ^ 0xCEDFB7CD) + 2146692352 + ((2 * v62) & 0x9DBF6F9A));
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (int)(a1 ^ 0xDFD19405)))(v61 - 168);
  if (v62 == 3)
  {
    (*(void (**)(uint64_t))(v60 + 32648))(a23);
    uint64_t v65 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(v60 + 32648))(a22, &STACK[0xE68], 16);
    return (*(uint64_t (**)(uint64_t))(v60
                                              + 8 * ((((v59 - 539918828) ^ 0x28) * (a33 == -16)) | (v59 - 539915457))))(v65);
  }
  if (v62 != 2)
  {
    int v70 = 604092382;
    unint64_t v69 = a58;
    return v69[(206 * (v70 != -604050357)) ^ 0x64C](v64);
  }
  int v67 = *(unsigned __int8 *)(STACK[0x208] + 13);
  if (v67 == 2)
  {
    int v71 = 1734664879 * ((2 * ((v61 - 168) & 0x6A91C8A0) - (v61 - 168) + 359544671) ^ 0x3AB51F45);
    *(_DWORD *)(v61 - 168) = v71 + 433482616;
    *(_DWORD *)(v61 - 152) = 3280 - v71;
    *(void *)(v61 - 144) = a33 + 0x57B2EFF461B4416FLL;
    *(void *)(v61 - 136) = a33 + 0x615E76577373A5A1;
    *(void *)(v61 - 160) = a5;
    unint64_t v69 = a58;
    uint64_t v64 = a58[4150](v61 - 168);
LABEL_12:
    int v70 = *(_DWORD *)(v61 - 148);
    return v69[(206 * (v70 != -604050357)) ^ 0x64C](v64);
  }
  if (v67 == 1)
  {
    int v72 = 1948972247 * ((((v61 - 168) | 0x757992EA) - (v61 - 168) + ((v61 - 168) & 0x8A866D10)) ^ 0xC0E76704);
    *(_DWORD *)(v61 - 168) = v72 + 285781678;
    *(_DWORD *)(v61 - 164) = 3618 - v72;
    *(void *)(v61 - 136) = a33 + 0x6A594E3C6075B488;
    *(void *)(v61 - 144) = a2;
    *(void *)(v61 - 160) = a33 + 0x2E85F9F014BD954DLL;
    unint64_t v69 = a58;
    uint64_t v64 = a58[4182](v61 - 168);
    int v70 = *(_DWORD *)(v61 - 152);
    return v69[(206 * (v70 != -604050357)) ^ 0x64C](v64);
  }
  if (*(unsigned char *)(STACK[0x208] + 13))
  {
    int v73 = 1292559617 * ((((v61 - 168) | 0x8FD2CF69) - (v61 - 168) + ((v61 - 168) & 0x702D3090)) ^ 0x2881A700);
    *(_DWORD *)(v61 - 152) = v73 ^ 0xB7D;
    *(void *)(v61 - 144) = a3;
    *(_DWORD *)(v61 - 136) = 846238602 - v73;
    *(void *)(v61 - 168) = a33 + 0x68E7B6E68C6821F7;
    *(void *)(v61 - 160) = a33 + 0x1CBC873A87398398;
    unint64_t v69 = a58;
    uint64_t v64 = a58[4151](v61 - 168);
    goto LABEL_12;
  }
  int v68 = 1438293641 * ((v61 + 1281363580 - 2 * ((v61 - 168) & 0x4C600F24)) ^ 0xF4A75A5B);
  *(_DWORD *)(v61 - 152) = v68 + 1625640575;
  *(_DWORD *)(v61 - 128) = v68 + 1121;
  *(void *)(v61 - 144) = a33 + 0x7CFCA23F2DDD02D1;
  *(void *)(v61 - 136) = a4;
  *(void *)(v61 - 160) = a33 + 0x13B3B3FD54DF09A1;
  unint64_t v69 = a58;
  uint64_t v64 = a58[4149](v61 - 168);
  int v70 = *(_DWORD *)(v61 - 168);
  return v69[(206 * (v70 != -604050357)) ^ 0x64C](v64);
}

void sub_22B33A8B0()
{
}

void sub_22B33A8CC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

_DWORD *sub_22B33A950@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3 = *result + v2;
  unsigned int v4 = (HIBYTE(v3) ^ 0xFFFFFFF9) - ((2 * (HIBYTE(v3) ^ 0xFFFFFFF9)) & 0xFFFFFFDC) - 18;
  *(unsigned char *)(a2 - 0x3707DB8770DACED2) = (((v3 ^ 0x47) & 0xA) - (v3 ^ 0x47 | 0x3A) + 31) & 0x3F ^ 0x1D;
  *(unsigned char *)(a2 - 0x3707DB8770DACED1) = (v3 >> 4) ^ 0x3C;
  *(unsigned char *)(a2 - 0x3707DB8770DACED0) = ((((BYTE1(v3) ^ 0x4F) + (~(2 * ((v3 >> 8) ^ 0x4F)) | 0x23) - 17) & 0xA)
                                         - (((BYTE1(v3) ^ 0x4F) + (~(2 * ((v3 >> 8) ^ 0x4F)) | 0x23) - 17) | 0x3A)
                                         + 31) & 0x3F ^ 0x1D;
  *(unsigned char *)(a2 - 0x3707DB8770DACECFLL) = (((BYTE1(v3) ^ 0x4F) + (~(2 * ((v3 >> 8) ^ 0x4F)) | 0x23) - 17) >> 4) ^ 0x38;
  int v5 = (HIWORD(v3) ^ 0x68) - ((2 * (HIWORD(v3) ^ 0x68)) & 0x1FFDC) - 18;
  *(unsigned char *)(a2 - 0x3707DB8770DACECELL) = ((v5 & 0xA) - (v5 | 0x3A) + 31) & 0x3F ^ 0x1D;
  *(unsigned char *)(a2 - 0x3707DB8770DACECDLL) = (v5 >> 4) ^ 0x38;
  *(unsigned char *)(a2 - 0x3707DB8770DACECCLL) = ((v4 & 0xA) - (v4 | 0x3A) + 31) & 0x3F ^ 0x1D;
  *(unsigned char *)(a2 - 0x3707DB8770DACECBLL) = (v4 >> 4) ^ 0x38;
  result[4] = -604050357;
  return result;
}

uint64_t sub_22B33AAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = ((v12 - 2410) ^ 0xF6F2ECF4) + v13;
  unsigned int v17 = *(_DWORD *)(v15 - 228 + v16 + 72);
  *(unsigned char *)(a12 + v16) = (HIBYTE(v17) ^ 0x11) - ((v17 >> 23) & 0x54) + 42;
  *(unsigned char *)(a12 + (v13 - 151851071)) = (BYTE2(v17) ^ 0x95) - ((v17 >> 15) & 0x54) + 42;
  *(unsigned char *)(a12 + (v13 - 151851070)) = (BYTE1(v17) ^ 0x67) + (~(2 * (BYTE1(v17) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a12 + (v13 - 151851069)) = v17 ^ 0x13;
  LODWORD(v16) = *(_DWORD *)(v15 - 136) - 162359928;
  BOOL v18 = v16 < 0x9C151AF;
  BOOL v19 = v13 + 11813235 < v16;
  if ((v13 + 11813235) < 0x9C151AF != v18) {
    BOOL v19 = v18;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((95 * v19) ^ v12)))();
}

uint64_t sub_22B33ABDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v4 = (__n128)vld1q_dup_f32(v3);
  v5.n128_u64[0] = 0x8000000080000000;
  v5.n128_u64[1] = 0x8000000080000000;
  return sub_22B374790(a1, a2, a3, 1331001544, v4, v5, (__n128)vdupq_n_s32(0x7FFFFFFEu), (__n128)vdupq_n_s32(0x4F5578C8u), (__n128)vdupq_n_s32(0x27AABC64u));
}

uint64_t sub_22B33ABE8(int a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a3 + (v3 ^ v5) + v6) = v8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((unint64_t)(v6 + v7) < 0x40) * a1) ^ v4)))();
}

uint64_t sub_22B33AC18(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v4 ^ (4
                                     * ((((*(unsigned __int8 *)(a2 + 5) - 242) << (a3 + ((v4 - 71) & 0xFB) + 102)) & v6)
                                      + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v5) == v5)))))();
}

uint64_t sub_22B33AC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                        + 8
                                                                                        * (int)(((((a8 + 606720067) & 0xDBD627F8)
                                                                                                - 1706)
                                                                                               * (v8 > 0xF)) ^ a8)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_22B33ACAC@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a2 + ((v3 - 3424) ^ (unint64_t)(v4 - 38)) + a3) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a3 + v4) < 0x40) * a1) ^ (v3 - 1092))))();
}

uint64_t sub_22B33ACE8@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 + 1 == v1) * (v3 - 2597)) ^ (v3 - 432))))();
}

uint64_t sub_22B33AD18()
{
  STACK[0x220] = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v1 == ((v0 - 539918870) ^ 0x42F6819)) * (((v0 - 1572) | 0x823) ^ 0x6B5)) ^ v0)))();
}

uint64_t sub_22B33AD78@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (v2 ^ (534 * ((v1 & 0x18) == 0)))))();
}

uint64_t sub_22B33ADCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v5 < 0x20) ^ (a5 + 32)) & 1)
                                * (((a5 - 1026601630) & 0x3D30B3DD) - 934)) ^ a5)))();
}

uint64_t sub_22B33AE1C@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  v19.val[1].i64[0] = ((_BYTE)v6 + 10) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v6 + 9) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v6 + 8) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v6 + 7) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v6 + 6) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v6 + 5) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v6 + 4) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v6 + 3) & 0xF;
  v20.val[1].i64[0] = (v6 + 2) & 0xF;
  v20.val[1].i64[1] = (v6 + 1) & 0xF;
  v20.val[2].i64[0] = v6 & 0xF;
  v20.val[2].i64[1] = ((_BYTE)v6 - 1) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v6 + 14) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v6 + 13) & 0xF;
  unsigned int v11 = a2 + a1 + a3;
  v12.i64[0] = 0x8181818181818181;
  v12.i64[1] = 0x8181818181818181;
  v13.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v13.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  uint64_t v14 = v11 & ((a4 + 925) - 2698);
  v19.val[0].i64[0] = v14;
  v19.val[0].i64[1] = ((_BYTE)v6 + 11) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_22B4975D0).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 - 15 + v11), *(int8x16_t *)(v5 + v14 - 15)), veorq_s8(*(int8x16_t *)(v14 + v8 - 13), *(int8x16_t *)(v14 + v7 - 14))));
  int8x16_t v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v13), vmulq_s8(v15, v12)));
  *(int8x16_t *)(v9 - 15 + v11) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v10 + 8 * ((2946 * ((a5 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

uint64_t sub_22B33AF78(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 - 0x70D52A7E711E5006) = ((**(unsigned char **)(a2 - 0x48A9B556C05DE579) != 0) | (2
                                                                                           * (**(unsigned char **)(a2 - 0x48A9B556C05DE579) != 0))) ^ 0x4D;
  return 0;
}

uint64_t sub_22B33AFC8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v17 = a1 - 238;
  *(void *)(v16 - 104) = a13;
  *(void *)(v16 - 128) = a15;
  *(void *)(v16 - 120) = a14;
  *(_DWORD *)(v16 - 112) = a1
                         - 1948972247
                         * ((1513955355 - ((v16 - 144) | 0x5A3D201B) + ((v16 - 144) | 0xA5C2DFE4)) ^ 0x105C2A0A)
                         + 1134;
  *(void *)(v16 - 144) = a4;
  *(void *)(v16 - 136) = a13;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a1 ^ 0x1352)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((((v17 + 88) ^ (a11 - 484148408 < ((v17 + 1733) ^ 0x7FFFF6D1u))) & 1) << 6) & 0x7F | ((((v17 + 600) ^ (a11 - 484148408 < ((v17 + 1733) ^ 0x7FFFF6D1u))) & 1) << 7)) ^ (v17 + 1524))))(v18);
}

uint64_t sub_22B33B0A4(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x573E0927573E0927;
  *(void *)(result + 16) = 0x7F97BFA2321B90CCLL;
  *(_DWORD *)(result + 24) = -604050357;
  *(void *)(v2 - 0x2B48C588999CF059) = result + 0x19157D3ABD2659DELL;
  *(_DWORD *)(v1 + 16) = -604050357;
  return result;
}

uint64_t sub_22B33B118()
{
  *int v3 = v0;
  unsigned int v4 = v0 - ((v0 << (((v2 + 113) & 0xEC) + ((v2 - 38) ^ 0x7D))) & 0xBBD5D166) + 1575676083;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((116
                                * (((2 * v4) & 0xDF7BCBFC ^ 0x9B51C164) + (v4 ^ 0x32570D4D) - 134578188 == 1740137970)) ^ v2)))();
}

uint64_t sub_22B33B1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v45 = v39 ^ 0x242u;
  HIDWORD(v47) = (v40 - 447433906) & 0x1AAB4DD3;
  LODWORD(v47) = v40 ^ 0x845;
  HIDWORD(v48) = v40 + 818550364;
  LODWORD(v48) = v40 ^ 0x7AA;
  HIDWORD(a14) = v40 - 116365730;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v42 + 8 * (int)(((v39 == 1247) * (21 * (v39 ^ 0x482) + 1743)) ^ v45)))(a1, 578, 2147481090, (unsigned __int16)(v38 - 17205), 1728, 21, 1613, 1226, a9, v47, &a38, (unint64_t)&a33 % (v45 - 1656) + 16, v41, a14, 5119- 1292559617* ((((2 * (v44 - 144)) | 0x77F2FC5E910787BELL) - (v44 - 144) + 0x440681D0B77C3C21) ^ 0x62634357EFD0ABB6), 1292559617* ((((2 * (v44 - 144)) | 0x77F2FC5E910787BELL) - (v44 - 144) + 0x440681D0B77C3C21) ^ 0x62634357EFD0ABB6),
           (v44 - 144) | 0x9A259AFBAA834BE9,
           a18,
           a19,
           a20,
           v48,
           *(void *)(v43 + 8 * (int)(v45 ^ 0x64D)),
           *(void *)(v43 + 8 * ((int)v45 - 1253)) - 4);
}

uint64_t sub_22B33B44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,unsigned int a36,uint64_t a37)
{
  unsigned int v39 = v38 - 634076393 + (a35 & 0xC0830A79);
  BOOL v41 = v39 > 0x37C0D79D && v39 <= a36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((v41 * (((a35 - 1065154391) | 0x13) + 23)) ^ ((int)a4 - 335))))(a1, a2, a3, a4, a5, a6, a37, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22B33B4CC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6)
{
  uint64_t v12 = v10 - 0x1CBC873A87398388 + a4 + v9 + a5 + ((a3 - 2472) | 0xB60u);
  uint64_t v13 = (a4 + v9) & 0xF;
  unint64_t v14 = v13 + v8 - v12;
  unint64_t v15 = ((a3 - 2472) ^ 0x1CLL) + (v13 | v7) - v12;
  uint64_t v16 = (v13 | v6) - v12;
  BOOL v18 = (unint64_t)(a6 - (v10 - 0x1CBC873A87398388) - 0x68E7B6E68C6821E7) > 0xF && v14 > 0xF && v15 > 0xF;
  unint64_t v19 = v16 + 1;
  int v21 = v18 && v19 > 0xF;
  return (*(uint64_t (**)(void))(v11 + 8 * ((37 * v21) ^ a3)))();
}

void sub_22B33B57C()
{
  STACK[0x2F8] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3134));
  JUMPOUT(0x22B32E5ECLL);
}

uint64_t sub_22B33B594@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  *(unsigned char *)(a2 + v4) = *(unsigned char *)(v7 + (v3 + a1))
                      - ((2 * *(unsigned char *)(v7 + (v3 + a1))) & 0x55)
                      + 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((60 * (v4 == 63)) ^ (v6 + a3 + 209))))();
}

uint64_t sub_22B33B5E4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((28 * (v0 & ~((83 * (v1 ^ 0x90A)) ^ ((v2 - 1) < 0x7FFFFFFF)))) ^ v1)))();
}

uint64_t sub_22B33B624(uint64_t a1)
{
  int v1 = 731811679 * ((a1 + 2060842934 - 2 * (a1 & 0x7AD5F7B6)) ^ 0x332351F2);
  int v2 = *(_DWORD *)(a1 + 4) ^ v1;
  int v3 = *(_DWORD *)(a1 + 24) ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x281D12643933BF1FLL);
  unsigned int v6 = v4 - 920561905;
  BOOL v5 = v4 - 920561905 < 0;
  unsigned int v7 = 920561905 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v2 ^ 0xB96))
          + ((((v3 - 783366229) < 4 * (unint64_t)v8) * ((4 * (v2 ^ 0x955)) ^ 0xF70)) ^ v2)
          - 1))();
}

uint64_t sub_22B33B6FC()
{
  unsigned int v3 = (v0 + 1243996972) & 0xB5DA148F;
  *(_DWORD *)(v1 - 188) = v3
                        - 1990461019
                        * ((((v1 - 192) | 0x3A97FF65) - (v1 - 192) + ((v1 - 192) & 0xC5680098)) ^ 0x15735DEC)
                        + 298601101;
  (*(void (**)(uint64_t))(v2 + 8 * (int)(v3 + 3113)))(v1 - 192);
  BOOL v4 = (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x270] + 8 * (int)(v3 ^ 0xBEB)))(336, 1777295586) == 0;
  return (*(uint64_t (**)(void))(STACK[0x270]
                              + 8
                              * (int)((v4 * (((3 * (v3 ^ 0x778)) ^ 0xFFFFFE5C) + ((v3 + 1218148460) & 0xB7648FD7))) ^ v3)))();
}

uint64_t sub_22B33B7F8@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v22 = v20 ^ 0x562DAD45;
  int v23 = v19 ^ 0x1D5EA7AD;
  int v24 = a1 ^ 0x3301EDA0;
  HIDWORD(a17) = 0;
  int v25 = *(_DWORD *)(v21 - 120);
  uint64_t v26 = v18 & ((v25 ^ 0x50C) - 3712) ^ 0xD48B808F;
  *(void *)(v21 - 136) = v26;
  uint64_t v27 = *(unsigned __int8 *)(a3 + v26);
  uint64_t v28 = v18 & 0xFFFFFFF2 ^ 0xD48B808F;
  *(void *)(v21 - 144) = v28;
  int v29 = (*(unsigned __int8 *)(a13 + (v27 ^ 0xE0)) ^ 0x3D ^ ((v27 ^ 0xB5)
                                                                           + (v27 ^ 0xEC)
                                                                           - ((2 * ((v27 ^ 0xB5) + (v27 ^ 0xEC))) & 0xC0)
                                                                           + 96)) << 8;
  LOBYTE(v27) = *(unsigned char *)(a3 + v28) ^ ((*(unsigned char *)(a3 + v28) ^ 0x52) + 36) ^ 0xC8 ^ *(unsigned char *)(a15
                                                                                              + (*(unsigned __int8 *)(a3 + v28) ^ 0x8ELL));
  uint64_t v219 = v18 ^ 0xD48B808F;
  uint64_t v30 = *(unsigned __int8 *)(a3 + v219);
  uint64_t v31 = v18 & 0xFFFFFFFA ^ 0xD48B808F;
  *(void *)(v21 - 184) = v31;
  uint64_t v32 = *(unsigned __int8 *)(a3 + v31);
  unsigned int v33 = v29 & 0xFF00FFFF | (v27 << 16);
  uint64_t v34 = v18 & 0xFFFFFFFD ^ 0xD48B808F;
  *(void *)(v21 - 152) = v34;
  uint64_t v35 = *(unsigned __int8 *)(a3 + v34);
  LODWORD(v27) = (v32 ^ *(unsigned char *)(a15 + (v32 ^ 0x42)) ^ ((v32 ^ 0x9E)
                                                                         - ((2 * (v32 ^ 0x9E) + 72) & 0xD2)
                                                                         - 115) ^ 0x85) << 16;
  LODWORD(v30) = ((*(unsigned __int8 *)(a16 + (v30 ^ 0xBA)) - 122) ^ 0x71) << 24;
  LODWORD(v32) = *(unsigned __int8 *)(a13 + (v35 ^ 0xE6)) ^ 0xC9 ^ ((v35 ^ 0xB3)
                                                                                   + (v35 ^ 0xEA)
                                                                                   - ((2 * ((v35 ^ 0xB3) + (v35 ^ 0xEA))) & 0xC0)
                                                                                   + 96);
  uint64_t v36 = v18 & 0xFFFFFFFE ^ 0xD48B808F;
  *(void *)(v21 - 128) = v36;
  uint64_t v37 = *(unsigned __int8 *)(a3 + v36);
  uint64_t v222 = v18 & 0xFFFFFFF4 ^ 0xD48B808F;
  LODWORD(v30) = (v30 | (v32 << 8)) & 0xFF00FFFF | ((*(unsigned char *)(a15 + (v37 ^ 0x1E)) ^ v37 ^ 0xC2 ^ ((v37 ^ 0xC2) - 2 * (((v37 ^ 0xC2) + 36) & 0x6B ^ (v37 ^ 0xC2) & 2) - 115) ^ 0x5A) << 16);
  uint64_t v217 = v18 & 0xFFFFFFF9 ^ 0xD48B808F;
  LOBYTE(v32) = *(unsigned char *)(a14 + (*(unsigned __int8 *)(a3 + v222) ^ 0x5DLL)) ^ 0x4E;
  LOBYTE(v37) = v32 + 89;
  LOBYTE(v32) = (2 * v32 + 6) & 0xA;
  uint64_t v38 = *(unsigned __int8 *)(a3 + v217);
  uint64_t v39 = v18 & 0xFFFFFFF7 ^ 0xD48B808F;
  *(void *)(v21 - 176) = v39;
  LOBYTE(v37) = ((((~(_BYTE)v32 + v37) >> 3) ^ (((v32 - v37) & 0x80) >> 7) ^ 0x10)
               - 2
               * ((((~(_BYTE)v32 + v37) >> 3) ^ (((v32 - v37) & 0x80) >> 7)) & 7 ^ ((~(_BYTE)v32 + v37) >> 3) & 2)
               - 123) ^ (~(_BYTE)v32 + v37);
  int v40 = ((*(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(a3 + v39) ^ 3)) - 122) ^ 0x6B) << 24;
  uint64_t v215 = v18 & 0xFFFFFFF0 ^ 0xD48B808F;
  LODWORD(v27) = v27 | ((*(unsigned __int8 *)(a13 + (v38 ^ 0xF6)) ^ 0x2C ^ ((v38 ^ 0xFA)
                                                                                           + (v38 ^ 0xA3)
                                                                                           + (~(2
                                                                                              * ((v38 ^ 0xFA)
                                                                                               + (v38 ^ 0xA3))) | 0x3F)
                                                                                           + 97)) << 8);
  LOBYTE(v32) = *(unsigned char *)(a14 + (*(unsigned __int8 *)(a3 + v215) ^ 0xC3)) ^ 0x4E;
  LOBYTE(v32) = v32 - ((2 * v32 + 38) & 0x72) + 12;
  uint64_t v216 = v18 & 0xFFFFFFF6 ^ 0xD48B808F;
  int v41 = (v32 >> 3) ^ (v32 >> 7) ^ 7;
  uint64_t v42 = *(unsigned __int8 *)(a3 + v216);
  unsigned int v43 = v33 & 0xFFFFFF00 | ((v41 - ((2 * v41) & 0x33) + 57) ^ v32);
  uint64_t v44 = v18 & 0xFFFFFFFB ^ 0xD48B808F;
  *(void *)(v21 - 168) = v44;
  unsigned int v45 = v40 & 0xFF00FFFF | ((*(unsigned char *)(a15 + (v42 ^ 0x9A)) ^ v42 ^ 0x46 ^ ((v42 ^ 0x46) - ((2 * (v42 ^ 0x46) + 72) & 0xD2) - 115) ^ 0x78) << 16);
  LODWORD(v32) = *(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(a3 + v44) ^ 0xB1));
  uint64_t v46 = v18 & 0xFFFFFFF8 ^ 0xD48B808F;
  *(void *)(v21 - 160) = v46;
  LODWORD(v32) = v32 - ((2 * v32 + 12) & 0xFFFFFFD2) - 17;
  int v47 = v27 | (((((v32 - ((2 * v32) & 0xFFFFFFE4) - 14) ^ 0x2E)
               + ((v32 - ((2 * v32) & 0xFFFFFFE4) - 14) & 0xDC ^ 0xFFFFFFF3)
               + 1) | (v32 - ((2 * v32) & 0xFFFFFFE4) - 14) ^ 0xF2) << 24);
  LODWORD(v214) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v46) ^ 0x7CLL));
  BYTE4(v214) = *(unsigned char *)(a14 + (*(unsigned __int8 *)(a3 + v46) ^ 0x7CLL)) ^ 0x9D;
  LODWORD(v27) = ((2 * v214) & 0xFFFFFFA6 ^ 0xFFFFFF84) + (v214 ^ 0xFFFFFF9D);
  unsigned int v48 = v47 & 0xFFFFFF00 | (((((((v27 - ((2 * v27) & 0xFFFFFF88) + 68) & 0x80) != 0) | 8) ^ ((v27 - ((2 * v27) & 0x88) + 68) >> 3))
                                            + (~((v27 - ((2 * v27) & 0x88) + 68) >> 2) | 0xF7)
                                            + 69) ^ (v27 - ((2 * v27) & 0x88) + 68));
  uint64_t v220 = v18 & 0xFFFFFFF3 ^ 0xD48B808F;
  uint64_t v49 = *(unsigned __int8 *)(a3 + v220);
  LODWORD(v42) = ((v49 ^ 0x62) - ((2 * (v49 ^ 0x62) + 18) & 0x18) + 85) ^ v49 ^ 0xFFFFFFD9;
  LODWORD(v42) = v43 | (((*(unsigned __int8 *)(a16 + (v49 ^ 0xE0))
                        - ((v42
                          + (v49 ^ 0x2A)
                          + 1
                          - 2 * (v42 & ((v49 ^ 0x2A) + 1))
                          - 2
                          * ((v42
                            + (v49 ^ 0x2A)
                            + 1
                            - 2 * (v42 & ((v49 ^ 0x2A) + 1))
                            + 8) & 0xD ^ (v42 + (v49 ^ 0x2A) + 1) & 1)
                          + 84) ^ v49 ^ 0xFFFFFFD9)
                        - 50) ^ 0xFA) << 24);
  uint64_t v221 = v18 & 0xFFFFFFF5 ^ 0xD48B808F;
  uint64_t v50 = *(unsigned __int8 *)(a3 + v221);
  uint64_t v218 = v18 & 0xFFFFFFFC ^ 0xD48B808F;
  int v51 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v218) ^ 0x11));
  LODWORD(v50) = v45 & 0xFFFFFF00 | ((*(unsigned __int8 *)(a13 + (v50 ^ 0x6C)) ^ ((v50 ^ 0x39)
                                                                                                 + (v50 ^ 0x60)
                                                                                                 + (~(2 * ((v50 ^ 0x39) + (v50 ^ 0x60))) | 0x3F)
                                                                                                 + 97) ^ 0x3C) << 8) | v37;
  unsigned int v52 = ((2 * v51) & 0xFFFFFFA6 ^ 0xFFFFFF84) + (v51 ^ 0xFFFFFF9D);
  unsigned int v53 = v52 - ((2 * v52) & 0xFFFFFFE4);
  LODWORD(v50) = (v50 - 718766052 - 2 * (v50 & 0x552880FF ^ v37 & 8) + 219) ^ v23;
  int v54 = (v30 + 213721301 - ((2 * v30) & 0x197A4000)) ^ v24;
  LODWORD(v30) = (((13 - v53) >> 7) & 1 | 0x1E) ^ (((v53 - 14) & 0xF8) >> 3);
  int v55 = ((v30 - ((2 * v30) & 0x24) - 14) ^ (v53 - 14)) ^ v54;
  LODWORD(v37) = v48 ^ a2 ^ 0xB395EDF7;
  BYTE1(v48) = BYTE1(v55) ^ 0xBE;
  int v56 = v42 ^ v22;
  int v57 = (char *)*(&off_26DE9F480 + v25 - 2621) - 4;
  uint64_t v58 = (char *)*(&off_26DE9F480 + (int)a12) - 12;
  LODWORD(v42) = *(_DWORD *)&v58[4 * (BYTE2(v37) ^ 0x56)] - 860301761;
  uint64_t v59 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(a11));
  int v60 = *(_DWORD *)(v59 + 4 * (BYTE1(v50) ^ 0x23u)) ^ 0x677F142E;
  unsigned int v61 = v56 ^ 0x1946C1E;
  uint64_t v62 = (uint64_t)*(&off_26DE9F480 + v25 - 2906);
  LODWORD(v30) = (422954520 * v42) ^ v42 ^ v60 ^ (*(_DWORD *)(v62 + 4 * (v56 ^ 0x40u)) - 21924785) ^ ((16 * v60) | 0x16F16D20) ^ (*(_DWORD *)&v57[4 * (((v55 ^ 0xB4F6BEED) >> 24) ^ 0x7B)] + (((v55 ^ 0xB4F6BEED) >> 24) ^ 0x30ACA89E) - 1307101210);
  LODWORD(v42) = *(_DWORD *)&v58[4 * (BYTE2(v50) ^ 0x4C)] - 860301761;
  int v63 = *(_DWORD *)(v59 + 4 * (BYTE1(v56) ^ 0xABu)) ^ 0x677F142E;
  unsigned int v64 = (422954520 * v42) ^ v42 ^ v63 ^ (*(_DWORD *)&v57[4 * (BYTE3(v37) ^ 0xE2)]
                                       + (BYTE3(v37) ^ 0x30ACA807)
                                       - 1307101210) ^ ((16 * v63) | 0x16F16D20) ^ (*(_DWORD *)(v62
                                                                                              + 4
                                                                                              * (v55 ^ 0xB3u))
                                                                                  - 21924785);
  int v65 = *(_DWORD *)&v58[4 * (BYTE2(v56) ^ 0xD2)] - 860301761;
  int v66 = *(_DWORD *)(v59 + 4 * BYTE1(v48)) ^ 0x677F142E;
  unsigned int v67 = v65 ^ (*(_DWORD *)&v57[4 * (BYTE3(v50) ^ 0x9F)] + (BYTE3(v50) ^ 0x30ACA87A) - 1307101210) ^ (422954520 * v65) ^ v66 ^ (*(_DWORD *)(v62 + 4 * (v37 ^ 0x12u)) - 21924785) ^ ((16 * v66) | 0x16F16D20);
  int v68 = *(_DWORD *)&v58[4 * (BYTE2(v54) ^ 0xB0)] - 860301761;
  LODWORD(v37) = *(_DWORD *)(v59 + 4 * (BYTE1(v37) ^ 0xEAu));
  LODWORD(v50) = (422954520 * v68) ^ v68 ^ v37 ^ (16 * v37) & 0xE90E92D0 ^ (*(_DWORD *)&v57[4 * (HIBYTE(v61) ^ 0x7B)]
                                                                          + (HIBYTE(v61) ^ 0x30ACA89E)
                                                                          - 1307101210) ^ (*(_DWORD *)(v62 + 4 * (v50 ^ 0x56u))
                                                                                         - 21924785);
  LODWORD(v37) = *(_DWORD *)(v62 + 4 * (v50 ^ 0x7Bu));
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v67) ^ 0xF9u));
  int v69 = *(_DWORD *)&v58[4 * (BYTE2(v64) ^ 0xD3)] - 860301761;
  int v70 = v69 ^ (16 * v38) & 0xE90E92D0 ^ (*(_DWORD *)&v57[4 * (BYTE3(v30) ^ 0xF)] + (BYTE3(v30) ^ 0x30ACA8EA)
                                                                                 - 1307101210) ^ (((2 * v37 + 1742132) & 0x7D48536A)
                                                                                                + ((v37 - 1072870758) ^ 0x3EA429B5)) ^ 0x490680C0 ^ (422954520 * v69);
  unsigned int v71 = (v70 - ((2 * v70) & 0x9E8FC3C) + 83131934) ^ v38;
  int v72 = *(_DWORD *)(v62 + 4 * (v30 ^ 0x8Du));
  LODWORD(v38) = *(_DWORD *)&v58[4 * (BYTE2(v67) ^ 8)] - 860301761;
  LODWORD(v39) = *(_DWORD *)(v59 + 4 * (BYTE1(v50) ^ 0x94u)) ^ 0x677F142E;
  v67 ^= 0xEF4E3EDE;
  LODWORD(v37) = (422954520 * v38) ^ v38 ^ ((HIBYTE(v64) ^ 0x30ACA8AA)
                                          - 1307101210
                                          + *(_DWORD *)&v57[4 * (HIBYTE(v64) ^ 0x4F)]) ^ v39 ^ ((16 * v39) | 0x16F16D20) ^ (((2 * v72 + 1742132) & 0x7D48536A) + ((v72 - 1072870758) ^ 0x3EA429B5));
  LODWORD(v38) = *(_DWORD *)&v58[4 * (BYTE2(v50) ^ 0xE1)] - 860301761;
  int v73 = (422954520 * v38) ^ v38 ^ ((HIBYTE(v67) ^ 0x30ACA89E) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v67) ^ 0x7B)]);
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v30) ^ 0xB7u)) ^ 0x677F142E;
  int v74 = v73 ^ v38 ^ (*(_DWORD *)(v62 + 4 * (v64 ^ 0xBBu)) - 21924785) ^ ((16 * v38) | 0x16F16D20);
  int v75 = *(_DWORD *)(v59 + 4 * (BYTE1(v64) ^ 0xFBu));
  HIDWORD(v76) = v75 ^ 0xE;
  LODWORD(v76) = v75 ^ 0x677F1420;
  unsigned int v77 = (v76 >> 5) ^ __ROR4__(v75, 1) & 0x87487496 ^ 0x24965ECD;
  LODWORD(v30) = *(_DWORD *)&v58[4 * (BYTE2(v30) ^ 0x2E)] - 860301761;
  LODWORD(v30) = (422954520 * v30) ^ v30 ^ ((BYTE3(v50) ^ 0x30ACA87F)
                                          - 1307101210
                                          + *(_DWORD *)&v57[4 * (BYTE3(v50) ^ 0x9A)]) ^ (*(_DWORD *)(v62 + 4 * (v67 ^ 0x5Eu))
                                                                                       - 21924785);
  LOBYTE(v67) = ((unsigned __int16)(v74 ^ 0xC6C1) >> 8) - (((v74 ^ 0x5E05C6C1u) >> 7) & 0xFE);
  LODWORD(v38) = (((v67 - 1) ^ 0xF1) - ((v67 - 1) & 0xE)) | (-16 - (_BYTE)v67) & 0xE;
  LODWORD(v42) = *(_DWORD *)&v58[4 * (BYTE2(v37) ^ 0xA2)] - 860301761;
  unsigned int v78 = v30 ^ (32 * v77);
  int v79 = v78 ^ (v77 >> 27);
  LODWORD(v30) = *(_DWORD *)(v59 + 4 * (v38 ^ 0xC7)) ^ 0x677F142E;
  LODWORD(v30) = (422954520 * v42) ^ v42 ^ (*(_DWORD *)&v57[4 * (HIBYTE(v71) ^ 0xA3)]
                                          + (HIBYTE(v71) ^ 0x30ACA846)
                                          - 1307101210) ^ v30 ^ (*(_DWORD *)(v62 + 4 * (v79 ^ 0x95u))
                                                               - 21924785) ^ ((16 * v30) | 0x16F16D20);
  LODWORD(v38) = *(_DWORD *)&v58[4 * (BYTE2(v74) ^ 0x43)] - 860301761;
  LODWORD(v39) = v79 ^ 0x67B90FCB;
  int v80 = *(_DWORD *)(v59 + 4 * (((unsigned __int16)(v79 ^ 0xFCB) >> 8) ^ 0xC7u)) ^ 0x677F142E;
  unsigned int v81 = v38 ^ ((BYTE3(v37) ^ 0x30ACA802) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v37) ^ 0xE7)]) ^ (422954520 * v38) ^ v80 ^ (*(_DWORD *)(v62 + 4 * (v71 ^ 0xB4u)) - 21924785) ^ ((16 * v80) | 0x16F16D20);
  LODWORD(v38) = *(_DWORD *)&v58[4 * ~HIWORD(v78)] - 860301761;
  LODWORD(v42) = *(_DWORD *)(v59 + 4 * (BYTE1(v71) ^ 0x86u));
  LODWORD(v50) = v38 ^ ((((v74 ^ 0x5E05C6C1u) >> 24) ^ 0x30ACA89E)
                      - 1307101210
                      + *(_DWORD *)&v57[4 * (((v74 ^ 0x5E05C6C1u) >> 24) ^ 0x7B)]) ^ v42 ^ (422954520 * v38);
  LODWORD(v38) = ((16 * v42) & 0xE90E92D0 ^ 0x77F16FE0)
               - ((2 * ((16 * v42) & 0xE90E92D0 ^ 0x77F16FE0)) & 0xC00D0180)
               + 1304786887;
  LODWORD(v42) = v50 ^ 0xEAC76216 ^ v38;
  LODWORD(v50) = v50 ^ 0x677F142E;
  LODWORD(v42) = (v50 + v42 + 1) ^ ((v38 ^ 0x8DB87638) + 1);
  LODWORD(v50) = (((v42 - ((2 * v42) & 0xE48F138E) + 1917290951) ^ v38) + v50) ^ (*(_DWORD *)(v62
                                                                                            + 4
                                                                                            * (v37 ^ 0xE4u))
                                                                                - 21924785);
  HIDWORD(v213) = BYTE3(v39) - 105808112;
  int v82 = *(_DWORD *)&v58[4 * ((BYTE2(v71) ^ 0xA2) - ((2 * (HIWORD(v71) ^ 0xD8A2)) & 0x8C)) + 280] - 860301761;
  LODWORD(v37) = *(_DWORD *)(v59 + 4 * (BYTE1(v37) ^ 0x68u)) ^ 0x677F142E;
  unsigned int v83 = v82 ^ (*(_DWORD *)&v57[4 * ((HIDWORD(v213) - ((v78 >> 23) & 0x20)) ^ 0xF9B17F6B)]
             + ((HIDWORD(v213) - ((v78 >> 23) & 0x20)) ^ 0xC91DD78E)
             - 1307101210) ^ v37 ^ (*(_DWORD *)(v62 + 4 * (v74 ^ 0x9Fu)) - 21924785) ^ ((16 * v37) | 0x16F16D20) ^ (422954520 * v82);
  int v84 = *(_DWORD *)&v58[4 * (BYTE2(v81) ^ 0xF)] - 860301761;
  LODWORD(v37) = v84 ^ ((BYTE3(v30) ^ 0x30ACA87C) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v30) ^ 0x99)]) ^ (422954520 * v84);
  int v85 = *(_DWORD *)(v59 + 4 * (BYTE1(v50) ^ 0x51u)) ^ 0x677F142E;
  HIDWORD(v76) = v37 ^ v85 ^ ((16 * v85) | 0x16F16D20);
  LODWORD(v76) = HIDWORD(v76);
  LODWORD(v76) = (v76 >> 3) ^ __ROR4__(*(_DWORD *)(v62 + 4 * (v83 ^ 0x89u)) - 21924785, 3);
  HIDWORD(v76) = v76;
  LODWORD(v37) = *(_DWORD *)&v57[4 * (HIBYTE(v81) ^ 0x28)] - 314342646;
  int v86 = *(_DWORD *)&v58[4 * (BYTE2(v50) ^ 0xA5)] - 860301761;
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v83) ^ 0xBFu)) ^ 0x677F142E;
  LODWORD(v37) = (422954520 * v86) ^ v86 ^ v38 ^ (*(_DWORD *)(v62 + 4 * (v30 ^ 0xD8u)) - 21924785) ^ ((v37 ^ ((HIBYTE(v81) ^ 0x30ACA8CD) - 992758564)) + 2 * (v37 & ((HIBYTE(v81) ^ 0x30ACA8CD) - 992758564))) ^ ((16 * v38) | 0x16F16D20);
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v30) ^ 0x38u));
  LODWORD(v39) = *(_DWORD *)&v58[4 * (BYTE2(v83) ^ 0x89)] - 860301761;
  unsigned int v87 = (16 * v38) & 0xE90E92D0 ^ v38 ^ v39 ^ (*(_DWORD *)(v62 + 4 * (v81 ^ 0xC7u)) - 21924785) ^ (422954520 * v39) ^ (*(_DWORD *)&v57[4 * (BYTE3(v50) ^ 0x5B)] + (BYTE3(v50) ^ 0x30ACA8BE) - 1307101210);
  LODWORD(v50) = ((v50 ^ 0x13) + (v50 & 0xD8 ^ 0x775500C8) - ((v50 ^ 0x13) & 0xD8)) ^ 0x7645C0BA;
  LODWORD(v39) = ((((((2 * v50) | 0xE07ECDA8) - v50 + 264280364) ^ 0xED059F9)
                 + ((((2 * v50) | 0xE07ECDA8) - v50 + 264280364) ^ 0xF12FA658)
                 + 1) ^ 0xFFFFFFFC)
               + ((((2 * v50) | 0xE07ECDA8) - v50 + 264280364) ^ 0xF12FA658);
  LODWORD(v50) = *(_DWORD *)&v58[4 * (BYTE2(v30) ^ 0x44)] - 860301761;
  LODWORD(v30) = *(_DWORD *)(v59 + 4 * (BYTE1(v81) ^ 0xC0u)) ^ 0x677F142E;
  LODWORD(v30) = (422954520 * v50) ^ v50 ^ ((HIBYTE(v83) ^ 0x30ACA811)
                                          - 1307101210
                                          + *(_DWORD *)&v57[4 * (HIBYTE(v83) ^ 0xF4)]) ^ v30 ^ ((16 * v30) | 0x16F16D20);
  LODWORD(v50) = (v76 >> 29) - ((2 * (v76 >> 29)) & 0x258214F6) - 1832842629;
  unsigned int v88 = v30 ^ (*(_DWORD *)(v62 + 4 * v39) - 21924785);
  int v89 = *(_DWORD *)&v58[4 * (BYTE2(v37) ^ 0xFA)] - 860301761;
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v87) ^ 0x39u)) ^ 0x677F142E;
  LODWORD(v30) = (422954520 * v89) ^ v89 ^ v38 ^ ((BYTE3(v50) ^ 0x30ACA8B4)
                                                - 1307101210
                                                + *(_DWORD *)&v57[4 * (BYTE3(v50) ^ 0x51)]) ^ (*(_DWORD *)(v62 + 4 * ((v30 ^ (*(unsigned char *)(v62 + 4 * v39) + 79)) ^ 0x8Fu))
                                                                                             - 21924785) ^ ((16 * v38) | 0x16F16D20);
  LODWORD(v38) = *(_DWORD *)&v58[4 * (BYTE2(v87) ^ 0x38)] - 860301761;
  int v90 = v38 ^ ((BYTE3(v37) ^ 0x30ACA858) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v37) ^ 0xBD)]) ^ (422954520 * v38);
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v88) ^ 0x6Du)) ^ 0x677F142E;
  LODWORD(v42) = v90 ^ v38 ^ (*(_DWORD *)(v62
                                        + 4
                                        * (((v76 >> 29) - ((2 * (v76 >> 29)) & 0xF6) + 123) ^ 0xE2u))
                            - 21924785) ^ ((16 * v38) | 0x16F16D20);
  v88 ^= 0x69D6AAD1u;
  LODWORD(v38) = *(_DWORD *)&v58[4 * BYTE2(v88)] - 860301761;
  LODWORD(v39) = *(_DWORD *)(v59 + 4 * (BYTE1(v50) ^ 0xD9u));
  int v91 = v38 ^ ((HIBYTE(v87) ^ 0x30ACA845) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v87) ^ 0xA0)]) ^ v39 ^ (16 * v39) & 0xE90E92D0 ^ (*(_DWORD *)(v62 + 4 * (v37 ^ 0xA5u)) - 21924785) ^ (422954520 * v38);
  LODWORD(v50) = *(_DWORD *)&v58[4 * (BYTE2(v50) ^ 0xDD)] - 860301761;
  LODWORD(v37) = *(_DWORD *)(v59 + 4 * (BYTE1(v37) ^ 0x83u)) ^ 0x677F142E;
  LODWORD(v37) = v50 ^ ((HIBYTE(v88) ^ 0x30ACA89E) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v88) ^ 0x7B)]) ^ v37 ^ (*(_DWORD *)(v62 + 4 * (v87 ^ 0x33u)) - 21924785) ^ (422954520 * v50) ^ ((16 * v37) | 0x16F16D20);
  int v92 = *(_DWORD *)&v58[4 * (BYTE2(v42) ^ 0x46)] - 860301761;
  int v93 = *(_DWORD *)(v59 + 4 * (BYTE1(v91) ^ 0x4Eu));
  LODWORD(v50) = ((BYTE3(v30) ^ 0x30ACA82E) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v30) ^ 0xCB)]) ^ v92 ^ v93 ^ (16 * v93) & 0xE90E92D0 ^ (422954520 * v92);
  int v94 = *(_DWORD *)(v62 + 4 * (v37 ^ 0x80u)) - 21924785;
  int v95 = (v94 + (v50 ^ 0xEF718431 ^ v94) + 1) ^ ((v50 ^ 0xEF718431) + 1);
  unsigned int v96 = (v50 ^ 0x48C9DBA ^ (v95 - ((2 * v95) & 0x2805CCE8) + 335734388)) + v94;
  int v97 = *(_DWORD *)&v58[4 * ((v91 ^ 0xAD978964) >> 16)] - 860301761;
  LODWORD(v39) = *(_DWORD *)(v59 + 4 * (BYTE1(v37) ^ 0xC8u)) ^ 0x677F142E;
  unsigned int v98 = (422954520 * v97) ^ v97 ^ v39 ^ ((BYTE3(v42) ^ 0x30ACA8C5)
                                       - 1307101210
                                       + *(_DWORD *)&v57[4 * (BYTE3(v42) ^ 0x20)]) ^ (*(_DWORD *)(v62
                                                                                                + 4
                                                                                                * (v30 ^ 0xACu))
                                                                                    - 21924785) ^ ((16 * v39) | 0x16F16D20);
  int v99 = *(_DWORD *)&v58[4 * (BYTE2(v37) ^ 0x26)] - 860301761;
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v30) ^ 0xF4u)) ^ 0x677F142E;
  LODWORD(v50) = (422954520 * v99) ^ v99 ^ ((((v91 ^ 0xAD978964) >> 24) ^ 0x30ACA89E)
                                          - 1307101210
                                          + *(_DWORD *)&v57[4 * (((v91 ^ 0xAD978964) >> 24) ^ 0x7B)]) ^ v38 ^ (*(_DWORD *)(v62 + 4 * (v42 ^ 0xF2u)) - 21924785) ^ ((16 * v38) | 0x16F16D20);
  unsigned int v100 = (BYTE3(v37) ^ 0x30ACA867) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v37) ^ 0x82)];
  LODWORD(v30) = *(_DWORD *)&v58[4 * (BYTE2(v30) ^ 0x55)] - 860301761;
  LODWORD(v37) = *(_DWORD *)(v59 + 4 * (BYTE1(v42) ^ 0xE7u));
  LODWORD(v42) = v30 ^ v37 ^ v100 ^ (422954520 * v30) ^ (16 * v37) & 0xE90E92D0 ^ (*(_DWORD *)(v62
                                                                                             + 4
                                                                                             * (v91 ^ 0x3Au))
                                                                                 - 21924785);
  int v101 = *(_DWORD *)&v58[4 * (BYTE2(v98) ^ 0x79)] - 860301761;
  LODWORD(v37) = *(_DWORD *)(v59 + 4 * (BYTE1(v50) ^ 0x4Cu));
  int v102 = (422954520 * v101) ^ v101 ^ v37 ^ (16 * v37) & 0xE90E92D0 ^ (*(_DWORD *)(v62
                                                                                + 4 * (v42 ^ 0x15u))
                                                                    - 21924785) ^ (*(_DWORD *)&v57[4
                                                                                                 * (HIBYTE(v96) ^ 0xBA)]
                                                                                 + (HIBYTE(v96) ^ 0x30ACA85F)
                                                                                 - 1307101210);
  LODWORD(v37) = *(_DWORD *)&v58[4 * (BYTE2(v50) ^ 0x89)] - 860301761;
  int v103 = *(_DWORD *)(v59 + 4 * (BYTE1(v42) ^ 0x6Fu)) ^ 0x677F142E;
  unsigned int v104 = v37 ^ ((HIBYTE(v98) ^ 0x30ACA829) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v98) ^ 0xCC)]) ^ v103 ^ (422954520 * v37) ^ ((16 * v103) | 0x16F16D20) ^ (*(_DWORD *)(v62 + 4 * (v96 ^ 0xA6u)) - 21924785);
  int v105 = *(_DWORD *)(v59 + 4 * (BYTE1(v96) ^ 0x9Eu));
  unsigned int v106 = (16 * v105) & 0xE90E92D0 ^ v105;
  LODWORD(v38) = *(_DWORD *)&v58[4 * (BYTE2(v42) ^ 0xC8)] - 860301761;
  int v107 = ((BYTE3(v50) ^ 0x30ACA8B9) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v50) ^ 0x5C)]) ^ v38 ^ (422954520 * v38);
  unsigned int v108 = ((v107 ^ 0x243006E4 ^ ((((v107 ^ 0xEF718431 ^ v106) + (v106 ^ 0x108E7BCE) + 1) ^ -v107)
                              + 607127268
                              - ((2 * (((v107 ^ 0xEF718431 ^ v106) + (v106 ^ 0x108E7BCE) + 1) ^ -v107)) & 0x48600DC8)))
        + (v106 ^ 0x108E7BCE)) ^ (*(_DWORD *)(v62 + 4 * (v98 ^ 0xAFu)) - 21924785);
  int v109 = *(_DWORD *)&v58[4 * (BYTE2(v96) ^ 0xD6)] - 860301761;
  int v110 = *(_DWORD *)(v59 + 4 * (BYTE1(v98) ^ 0xE9u)) ^ 0x677F142E;
  unsigned int v111 = v109 ^ ((BYTE3(v42) ^ 0x30ACA87D) - 1307101210 + *(_DWORD *)&v57[4 * (BYTE3(v42) ^ 0x98)]) ^ v110 ^ (*(_DWORD *)(v62 + 4 * (v50 ^ 0xA0u)) - 21924785) ^ ((16 * v110) | 0x16F16D20) ^ (422954520 * v109);
  unsigned int v112 = v102 ^ 0x729907C0;
  int v113 = *(_DWORD *)&v58[4 * (BYTE2(v104) ^ 0xC1)];
  unsigned int v114 = ((2 * v113 - 866229194) & 0xCD134848) + ((v113 - 433114597) ^ 0xE689A424);
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v108) ^ 0xD9u));
  unsigned int v115 = v38 ^ ((HIBYTE(v112) ^ 0x30ACA89E) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v112) ^ 0x7B)]) ^ (*(_DWORD *)(v62 + 4 * (v111 ^ 0x7Fu)) - 21924785) ^ (16 * v38) & 0xE90E92D0 ^ v114 ^ (422954520 * v114);
  int v116 = *(_DWORD *)&v58[4 * (BYTE2(v108) ^ 0xA1)] - 860301761;
  HIDWORD(v76) = (HIBYTE(v104) ^ 0x30ACA866) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v104) ^ 0x83)];
  LODWORD(v76) = HIDWORD(v76);
  LODWORD(v38) = *(_DWORD *)(v59 + 4 * (BYTE1(v111) ^ 0x5Du));
  int v117 = (*(_DWORD *)(v62 + 4 * (v102 ^ 0x9Eu)) - 21924785) ^ v38 ^ (16 * v38) & 0xE90E92D0 ^ __ROR4__((v76 >> 11) ^ __ROR4__((422954520 * v116) ^ v116, 11) ^ 0x95B687C0, 21);
  int v118 = HIBYTE(v83) ^ 0x93F4357;
  int v119 = HIBYTE(v111) ^ 0x93F43F4;
  if (!(v214 ^ 0x62 | BYTE4(v214))) {
    int v119 = v118;
  }
  int v120 = *(_DWORD *)&v58[4 * (BYTE2(v111) ^ 0xE)] - 860301761;
  int v121 = *(_DWORD *)(v59 + 4 * BYTE1(v112)) ^ 0x677F142E;
  unsigned int v122 = (422954520 * v120) ^ v120 ^ v121 ^ ((16 * v121) | 0x16F16D20) ^ (*(_DWORD *)&v57[4 * (HIBYTE(v108) ^ 0x89)]
                                                                        + (HIBYTE(v108) ^ 0x30ACA86C)
                                                                        - 1307101210) ^ (*(_DWORD *)(v62 + 4 * (v104 ^ 4u))
                                                                                       - 21924785);
  int v123 = *(_DWORD *)&v58[4 * (BYTE2(v102) ^ 0xDF)] - 860301761;
  int v124 = *(_DWORD *)(v59 + 4 * (BYTE1(v104) ^ 5u)) ^ 0x677F142E;
  HIDWORD(v125) = *(_DWORD *)(v62 + 4 * (v108 ^ 0x5Fu)) - 21924785;
  LODWORD(v125) = HIDWORD(v125);
  LODWORD(v125) = (v125 >> 25) ^ __ROR4__(v123 ^ (422954520 * v123) ^ v124 ^ ((v119 ^ 0x3993EB46)- 1307101210+ *(_DWORD *)&v57[4 * (v119 ^ 0x93F43A3)]) ^ ((16 * v124) | 0x16F16D20), 25) ^ 0x2635979E;
  HIDWORD(v125) = v125;
  int v126 = *(_DWORD *)&v58[4 * (BYTE2(v117) ^ 0xB2)];
  int v127 = 422954520 * v126 - ((845909040 * v126 + 1378328528) & 0x560FEBF0) - 736377374;
  v126 -= 860301761;
  unsigned int v128 = (v126 + (v126 ^ 0xD4F80A05 ^ v127) + 1) ^ ((v127 ^ 0xD4F80A05) + 1);
  unsigned int v129 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0xCABF0BA8) - 446724652;
  int v130 = ((v128 - ((2 * v128) & 0x560FEBF4) + 721942010) ^ v127) + v126;
  int v131 = *(_DWORD *)(v59 + 4 * (BYTE1(v122) ^ 0x64u));
  unsigned int v132 = (16 * v131) & 0xE90E92D0 ^ v131 ^ ((HIBYTE(v115) ^ 0x30ACA875)
                                          - 1307101210
                                          + *(_DWORD *)&v57[4 * (HIBYTE(v115) ^ 0x90)]) ^ (*(_DWORD *)(v62 + 4 * (((v125 >> 7) - ((2 * (v125 >> 7)) & 0xA8) - 44) ^ 0x43u))
                                                                                         - 21924785) ^ v130;
  int v133 = ((v117 ^ 0x8AF495A5) >> (BYTE4(v213) & 0x18 ^ 0x10) >> (BYTE4(v213) & 0x18 ^ 8));
  int v134 = *(_DWORD *)&v58[4 * (BYTE2(v122) ^ 0x4A)] - 860301761;
  int v135 = *(_DWORD *)(v59 + 4 * (BYTE1(v129) ^ 0x47u)) ^ 0x677F142E;
  int v136 = ((v133 ^ 0x30ACA89E) - 1307101210 + *(_DWORD *)&v57[4 * (v133 ^ 0x7B)]) ^ v134 ^ (422954520 * v134) ^ v135 ^ (*(_DWORD *)(v62 + 4 * (v115 ^ 0xA9u)) - 21924785);
  unsigned int v137 = HIBYTE(v129);
  unsigned int v138 = v136 ^ ((16 * v135) | 0x16F16D20);
  int v139 = *(_DWORD *)&v58[4 * (BYTE2(v129) ^ 0xBE)] - 860301761;
  int v140 = *(_DWORD *)(v59 + 4 * (BYTE1(v115) ^ 0xC3u));
  unsigned int v141 = v139 ^ ((HIBYTE(v122) ^ 0x30ACA86F) - 1307101210 + *(_DWORD *)&v57[4 * (HIBYTE(v122) ^ 0x8A)]) ^ v140 ^ (16 * v140) & 0xE90E92D0 ^ (*(_DWORD *)(v62 + 4 * (v117 ^ 0xFBu)) - 21924785) ^ (422954520 * v139);
  int v142 = *(_DWORD *)&v58[4 * (BYTE2(v115) ^ 0xA4)] - 860301761;
  int v143 = *(_DWORD *)(v59 + 4 * (BYTE1(v117) ^ 0x52u)) ^ 0x677F142E;
  int v144 = ((v137 ^ 0x30ACA8B7) - 1307101210 + *(_DWORD *)&v57[4 * (v137 ^ 0x52)]) ^ v142 ^ (422954520 * v142) ^ v143 ^ ((16 * v143) | 0x16F16D20);
  int v145 = *(_DWORD *)(v62 + 4 * (v122 ^ 0x3Cu));
  int v146 = (v144 & 0x40 | ((((v144 & 0x40) >> 6) & 1) << 7)) ^ 0x3F4DF97F;
  unsigned int v147 = v144 & 0xFFFFFFBF;
  int v148 = 1968925408 - v146;
  if (((v146 - 1062074751) & (v145 - 21924785)) == 0) {
    int v148 = v146 - 155224094;
  }
  int v149 = v145 - 928775442 + v148;
  HIDWORD(v214) = HIWORD(v138) ^ 0x8C72;
  int v150 = BYTE2(v138) ^ 0x72;
  int v151 = *(_DWORD *)(v21 - 120);
  int v152 = (char *)*(&off_26DE9F480 + v151 - 2794) - 12;
  unsigned int v153 = v149 ^ v147;
  int v154 = (v149 ^ v147);
  int v155 = v154 ^ 0x99;
  unsigned int v156 = (v150 - 1196923670 + ((2 * v150 + 3942) & 0x1A6E ^ 0xFE7EFFFF) + 1) ^ *(_DWORD *)&v152[4 * (BYTE2(v138) ^ 0x8D)];
  int v157 = v156 + 85639359 - ((2 * v156) & 0xA35817E);
  int v158 = (char *)*(&off_26DE9F480 + (int)a11) - 4;
  uint64_t v159 = (uint64_t)*(&off_26DE9F480 + v151 - 2727);
  int v160 = *(_DWORD *)&v158[4 * (v154 ^ 0x14)] ^ v157;
  unsigned int v161 = *(_DWORD *)(v159 + 4 * (BYTE1(v141) ^ 0x3Bu)) ^ 0xAA68E9FD;
  uint64_t v162 = (uint64_t)*(&off_26DE9F480 + v151 - 2506);
  uint64_t v163 = v160 ^ v161 ^ (v161 >> 1) & 0x1F59B51D ^ (v155 - 942660312 - ((2 * v155) & 0x50)) ^ *(_DWORD *)(v162 + 4 * (HIBYTE(v132) ^ 0x9F));
  int v164 = v141 ^ 0x4C5FD914;
  unsigned int v165 = *(_DWORD *)(v159 + 4 * (BYTE1(v153) ^ 0x79u));
  int v166 = (BYTE2(v164) + 568772531) ^ BYTE2(v164) ^ *(_DWORD *)(v162 + 4 * (HIBYTE(v138) ^ 0x8C)) ^ *(_DWORD *)&v152[4 * (BYTE2(v164) ^ 0xFF)] ^ (v165 >> 1) & 0x1F59B51D;
  unsigned __int8 v167 = BYTE2(v132) ^ 0x17;
  uint64_t v168 = v165 ^ v132 ^ 0xB0 ^ *(_DWORD *)&v158[4 * (v132 ^ 0x3D)] ^ ((v166 ^ 0x86CB6994) - 942660312 + ((2 * ((v166 ^ 0x86CB6994) & 0x47D0252F ^ v166 & 7)) ^ 0xFFFFFFF7) + 1);
  uint64_t v169 = BYTE2(v153) ^ 0x95u;
  int v170 = (v169 - 1196923670 - ((2 * v169 + 30248806) & 0x1811A6E)) ^ *(_DWORD *)&v152[4 * (BYTE2(v153) ^ 0x6A)];
  unsigned int v171 = HIBYTE(v153);
  unsigned int v172 = v138 & 0xFE ^ ((v138 | 0xFFFFFFFE) - 1899875814) ^ 0x1C;
  unsigned int v173 = *(_DWORD *)(v159 + 4 * (BYTE1(v132) ^ 0x72u));
  int v174 = *(_DWORD *)(v162 + 4 * (HIBYTE(v141) ^ 0x40)) ^ (v172 - 942660312 - ((2 * v172) & 0xD804050)) ^ *(_DWORD *)&v158[4 * (v138 ^ 0x90)] ^ v173 ^ (v170 + 85639359 - ((2 * v170) & 0xA35817E));
  int v175 = ((v171 ^ 0x22A4BE43) & 0x2024A09D ^ v171 & 0x9D | (v171 ^ 0x22A4BE43) & 0x2801E62 ^ v171 & 0x62) ^ 0x81;
  int v176 = (v175 + 85639359 - ((2 * v175) & 0x1017E)) ^ *(_DWORD *)(v162 + 4 * (v171 ^ 0x8D));
  int v177 = v167;
  int v178 = *(_DWORD *)&v152[4 * (v167 ^ 0xFF)];
  int v179 = v176 - ((2 * v176) & 0x2D833A6E);
  int v180 = *(_DWORD *)(v159 + 4 * (BYTE1(v138) ^ 0xB4u));
  unsigned int v181 = (v180 & 0x1000 ^ 0xFE3CFFEB) + 2 * (v180 & 0x1000);
  unsigned int v182 = v180 ^ 0xAA68E9FD;
  BOOL v183 = ((v181 + 29556757) & (v182 >> 1)) == 0;
  unsigned int v184 = v181 + 1542978112;
  unsigned int v185 = 1483864598 - v181;
  if (v183) {
    unsigned int v185 = v184;
  }
  unsigned int v186 = (v164 - 942660312 - ((2 * v141) & 0x50)) ^ (v167 + 568772531) ^ *(_DWORD *)&v158[4 * (v141 ^ 0x99)] ^ v182 & 0xFFFFEFFF ^ (((v182 >> 1) & 0x1F59B51D) - 1513421355 + v185);
  int v187 = (v173 >> 1) & 0x1F59B51D;
  uint64_t v188 = v186 ^ v178 ^ (v179 - 1765696201);
  int v189 = *(_DWORD *)(v21 - 120);
  int v190 = (char *)*(&off_26DE9F480 + v151 - 2537) - 8;
  *(unsigned char *)(a9 + v215) = (v190[(v186 ^ v178 ^ (v179 + 55) ^ v167) ^ 0x87] + 23) ^ 0xB;
  unsigned int v191 = v174 ^ v187;
  unsigned int v192 = (char *)*(&off_26DE9F480 + HIDWORD(a10)) - 12;
  *(unsigned char *)(a9 + v219) = (v192[BYTE3(v163) ^ 0x68] - 38) ^ 0x2E;
  unsigned int v193 = (char *)*(&off_26DE9F480 + (int)a10) - 12;
  *(unsigned char *)(a9 + v217) = (v193[BYTE1(v168) ^ 0x9ELL]
                         + (BYTE1(v168) ^ ((BYTE1(v168) ^ 0x99) + 1) ^ 0x1D ^ ((BYTE1(v168) ^ 0x2B)
                                                                             + (~(2 * (BYTE1(v168) ^ 0x2B) + 6) | 0xF7)
                                                                             + 56))
                         + (BYTE1(v168) ^ 0x66)
                         + 61) ^ 7;
  unsigned int v194 = (char *)*(&off_26DE9F480 + v151 - 2810) - 12;
  *(unsigned char *)(a9 + *(void *)(v21 - 184)) = v194[BYTE2(v168) ^ 0xBALL] ^ ((BYTE2(v168) ^ 0x92)
                                                                        - 2
                                                                        * (((BYTE2(v168) ^ 0x92) + 12) & 0x3B ^ (BYTE2(v168) ^ 0x92) & 2)
                                                                        + 69) ^ 0xDE;
  unsigned int v195 = v191 ^ v169 ^ 0xB91F61CB;
  char v196 = v194[BYTE2(v195) ^ 0xCDLL] ^ 0x64;
  *(unsigned char *)(a9 + v216) = v196 + (BYTE2(v195) ^ 0xE5) + 12 - 2 * (v196 & ((BYTE2(v195) ^ 0xE5) + 12));
  *(unsigned char *)(a9 + v222) = (v190[(v191 ^ v169) ^ 0x2FLL] + 23) ^ 0xD9;
  *(unsigned char *)(a9 + *(void *)(v21 - 152)) = ((BYTE1(v163) ^ 0xD) + (BYTE1(v163) ^ 0x40) + v193[BYTE1(v163) ^ 0xB8] - 17) ^ 0x8E;
  char v197 = v192[HIBYTE(v191) ^ 0xACLL];
  *(unsigned char *)(a9 + *(void *)(v21 - 176)) = ((v197 - 38) ^ (38 - v197) ^ (((v197 - 38) ^ 0x40) - 64)) - 65;
  unsigned int v198 = v188 ^ v177 ^ 0x7C691753;
  int v199 = BYTE2(v198) ^ 0xAA;
  int v200 = v199 - ((2 * (BYTE2(v198) ^ 0xAA) + 24) & 0x18);
  int v201 = ~HIWORD(v198) & 0x28;
  int v202 = (BYTE2(v198) | v201) ^ 0x82;
  if (v145 - v146 == -1040149966) {
    int v202 = 40;
  }
  int v203 = v194[(v202 | v199) ^ v201];
  char v204 = v200 + 24;
  int v205 = (v200 + 24) ^ 0xC;
  unsigned int v206 = (v205 - ((v205 - 2 * (v205 & 0x3B ^ v204 & 2) + 57) ^ v203)) ^ ((v203 ^ 0xFFFFFFC6) + 1);
  *(unsigned char *)(a9 + *(void *)(v21 - 144)) = (((v206 - ((2 * v206) & 0x72) + 57) ^ v203) + v205) ^ 0x24;
  *(unsigned char *)(a9 + v220) = (v192[BYTE3(v188) ^ 0x7ALL] - 38) ^ 0x19;
  int v207 = (v198 >> 8) - ((v198 >> 7) & 0xD5F658) + 1600846636;
  *(unsigned char *)(a9 + *(void *)(v21 - 168)) = (v192[BYTE3(v168) ^ 0xC2] - 38) ^ 0x1D;
  *(unsigned char *)(a9 + *(void *)(v21 - 136)) = ((v207 ^ 0x47) + (v207 ^ 0xA) + v193[v207 ^ 0xF2] - 17) ^ 0xD4;
  if ((v168 & 4) != 0) {
    int v208 = -4;
  }
  else {
    int v208 = 4;
  }
  *(unsigned char *)(a9 + *(void *)(v21 - 160)) = (v190[(v208 + (v168 ^ 0x98u)) ^ 0xD2] - 105) ^ 0x46;
  uint64_t v209 = v163 ^ (v150 - ((2 * HIDWORD(v214)) & 0x1B6) - 1550998309);
  *(unsigned char *)(a9 + v218) = (v190[v209 ^ 0x8CLL] + 23) ^ 0x65;
  unsigned __int8 v210 = BYTE1(v195) - ((v195 >> 7) & 0x96) + 75;
  *(unsigned char *)(a9 + v221) = ((v210 ^ 0x79) + (v210 ^ 0x34) + v193[v210 ^ 0xCCLL] - 17) ^ 0xB;
  *(unsigned char *)(a9 + *(void *)(v21 - 128)) = ((BYTE2(v163) ^ 0x86) - ((2 * (BYTE2(v163) ^ 0x86) + 24) & 0x72) + 69) ^ 0x89 ^ v194[BYTE2(v163) ^ 0xAELL];
  BOOL v211 = ((v219 - 729055089 - ((2 * v219 + 32) & 0xA917011E) + 16) ^ 0xD48B808F) < HIDWORD(a12);
  LODWORD(v213) = v25 ^ 0x50C;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a18 + 8 * ((v211 | (2 * v211)) ^ (v189 - 1892))))((2 * v206) & 0x72, v209, v188, 114, v163, v168, 29, v169, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           v213,
           v214);
}

uint64_t sub_22B33B82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *v12 += a11;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((*(unsigned char *)(v13 - 0x5E30592FF90A5400) == 55)
                                * (((v14 - 1107412975) & 0x4201C7E7) + 1330)) ^ v14)))();
}

void sub_22B33B890(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v3 - 256) = a3 + 3;
  *(_DWORD *)(v3 - 252) = a3 + 4;
  JUMPOUT(0x22B33B9A0);
}

void sub_22B33BA14()
{
}

uint64_t sub_22B33BA1C@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  int v5 = *(_DWORD *)v2 + v3;
  char v6 = *(unsigned char *)(v2 + 4) + v3;
  char v7 = *(unsigned char *)(v2 + 28);
  int v9 = *(void **)(v2 + 8);
  unsigned int v8 = *(_DWORD **)(v2 + 16);
  *(unsigned char *)(result + 4) = (*(unsigned char *)(v2 + 29) + v3) ^ 0xF3;
  *(unsigned char *)(result + 5) = v3 + v7 + (a2 ^ 0x5E) + 21;
  *(unsigned char *)(result + 6) = v6 ^ 0x70;
  *(unsigned char *)(result + 7) = v5 ^ 0x45;
  *(_DWORD *)(result + 8) = 0;
  *int v9 = result;
  *unsigned int v8 = v4;
  return result;
}

uint64_t sub_22B33BACC()
{
  *(_DWORD *)(v1 - 0x101D446ABDECEE38) = 0;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((317 * ((v2 - 179501024) & 0xAB2FFFA ^ 0xEFD) - 2175)
                                * (*(unsigned char *)(v3 - 0x717BE438C5D0855BLL) != 55)) ^ v2)))();
}

void sub_22B33BB48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1866394843 * ((-2 - ((a1 | 0x5737EA95) + (~a1 | 0xA8C8156A))) ^ 0x42DF229E);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B33BC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, unint64_t *a13, int a14)
{
  a13 = &STACK[0x2B48C588999CF069];
  a12 = 377
      - 225134719 * ((-1466994328 - (&a12 | 0xA88F7168) + (&a12 | 0x57708E97)) ^ 0x4180CBBD);
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v15 + 32752))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((4 * (((v16 - 104) ^ 0x4D ^ (a14 == v14)) & 1)) | 0x5A9u)))(v17);
}

uint64_t sub_22B33BCBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  int v30 = v28 + 1661;
  unsigned int v31 = a28 + 2080975499 + ((19 * (v30 ^ 0x7FB)) ^ 0x7D4);
  int v32 = ((a4 + 1178901592) < 0xB1A4F4C4) ^ (v31 < 0xB1A4F4C4);
  BOOL v33 = v31 < a4 + 1178901592;
  if (v32) {
    BOOL v33 = (a4 + 1178901592) < 0xB1A4F4C4;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * (((4 * !v33) | (16 * !v33)) ^ v30)))();
}

uint64_t sub_22B33BCD0()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 1020)))(16, 962668376) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (v1 - 1866 + 31 * (v1 ^ 0xBB0) - 3906)) | v1)))();
}

uint64_t sub_22B33BD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,uint64_t a29,int a30)
{
  uint64_t v37 = &a30 + 6 * v32;
  v37[2] = v33;
  v37[3] = a4;
  *((void *)v37 + 2) = v36;
  v37[6] = a28;
  a30 = v31 + v30 - 436;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((2876 * (*(_DWORD *)(a1 + 48 * v35 + 32) + ((v30 - 85) ^ 0x694069CBu) < 0x80000003)) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

void sub_22B33BDAC()
{
  *(_DWORD *)(v1 - 140) = v0 - 580041707;
  JUMPOUT(0x22B32D1B0);
}

uint64_t sub_22B33BEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, int a13, unint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  *v21 += a12;
  a14 = &STACK[0x101D446ABDECEE44];
  a15 = v18;
  a16 = v22;
  a17 = v24 + a12;
  a18 = (v23 + 1531) ^ (1438293641
                      * ((&a13 - 1428119202 - 2 * ((unint64_t)&a13 & 0xAAE0A15E)) ^ 0x1227F421));
  uint64_t v25 = (*(uint64_t (**)(int *))(v20 + 8 * (v23 + 3517)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a13 == ((v23 + 946599199) & 0xC7940CFD ^ v19)) * ((v23 + 534) ^ 0x21C)) ^ v23)))(v25);
}

uint64_t sub_22B33BFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  uint64_t v46 = (unsigned __int8 *)(a3 + v40 + v45);
  int v47 = *v46 ^ v43;
  LODWORD(v46) = ((v46[2] ^ v43) << 16) | ((v46[3] ^ v43) << 24) | v47 & 0xFFFF00FF | ((((a40 - 84) | 0x26) ^ 0x4C ^ v46[1]) << 8);
  *(_DWORD *)(v41 + ((v40 + v45) & 0xFFFFFFFFFFFFFFFCLL)) = v46
                                                          + v44
                                                          - 2 * (v46 & 0x5BFEEC5B ^ v47 & 0x10);
  return (*(uint64_t (**)(void))(v42 + 8 * ((861 * ((unint64_t)(v40 + 4 + v45) < 0x40)) ^ a40)))();
}

void sub_22B33C070()
{
}

uint64_t sub_22B33C084(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_26DE9FFD0
                              + 8 * ((906 * (*(_DWORD *)(a2 - 0x48A9B556C05DE57DLL) == 1801476205)) ^ 0xDEAu)
                              - 8))();
}

void JRiKWV(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1) {
    BOOL v6 = a5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v8 = !v6 && a6 != 0;
  __asm { BRAA            X8, X17 }
}

void sub_22B33C14C()
{
}

uint64_t sub_22B33C168(int a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *((unsigned char *)&STACK[0x22C] + (a2 + 2517 + v28 + a1)) = *(unsigned char *)(a27
                                                                              + (a2 + 2517 + v28 + a1));
  return (*(uint64_t (**)(void))(v27 + 8 * ((2668 * (a1 - 1 == a5)) ^ a2)))();
}

uint64_t sub_22B33C1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  *(_DWORD *)(v49 - 0x24B64731C5A67D97) = 1001927903;
  *(_DWORD *)(v49 - 0x24B64731C5A67D93) = 1191196471;
  *(void *)(v49 - 0x24B64731C5A67D8FLL) = v47;
  *(void *)(v49 - 0x24B64731C5A67D87) = v47;
  *(_DWORD *)(v49 - 0x24B64731C5A67D7FLL) = v48;
  *(__n128 *)(v49 - 0x24B64731C5A67D7BLL) = a9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((15 * (55 * (v46 ^ 0x3C4) == 117)) ^ v46)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

void sub_22B33C278()
{
  *uint64_t v1 = v0;
}

uint64_t sub_22B33C280(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unsigned int v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(v51 + 8 * v50);
  int v55 = *(_DWORD *)(a50 - 0x2970AB8229FC3CE2);
  int v56 = *(_DWORD *)(a50 - 0x2970AB8229FC3CDELL);
  uint64_t v57 = *(unsigned int *)(a50 - 0x2970AB8229FC3CDALL);
  int v58 = *(unsigned __int8 *)(a50 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v58 == 2)
  {
    BOOL v63 = a4 < a43 && v53 < a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v51 + 8 * (((HIDWORD(a41) - 1180) * v63) ^ ((int)a3 + 3196))))(v57);
  }
  else if (v58 == 1)
  {
    BOOL v60 = a4 >= a43 || v53 >= a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v51 + 8 * (int)((v60 * ((a3 + 786) ^ 0x37A)) ^ (a3 + 676))))(v57);
  }
  else
  {
    *(_DWORD *)(a50 - 0x2970AB8229FC3CE6) = 2 * (*(_DWORD *)(a50 - 0x2970AB8229FC3CE6) ^ v52)
                                            + v52
                                            - (v54 & (4 * (*(_DWORD *)(a50 - 0x2970AB8229FC3CE6) ^ v52)));
    *(_DWORD *)(a50 - 0x2970AB8229FC3CE2) = (*(_DWORD *)(a50 - 0x2970AB8229FC3CE2) ^ v52)
                                            + (v55 ^ v52)
                                            + v52
                                            - (v54 & (2 * ((*(_DWORD *)(a50 - 0x2970AB8229FC3CE2) ^ v52) + (v55 ^ v52))));
    *(_DWORD *)(a50 - 0x2970AB8229FC3CDELL) = (*(_DWORD *)(a50 - 0x2970AB8229FC3CDELL) ^ v52)
                                            + (v56 ^ v52)
                                            + v52
                                            - (v54 & (2 * ((*(_DWORD *)(a50 - 0x2970AB8229FC3CDELL) ^ v52) + (v56 ^ v52))));
    *(_DWORD *)(a50 - 0x2970AB8229FC3CDALL) = (*(_DWORD *)(a50 - 0x2970AB8229FC3CDALL) ^ v52)
                                            + (v57 ^ v52)
                                            + v52
                                            - (v54 & (2 * ((*(_DWORD *)(a50 - 0x2970AB8229FC3CDALL) ^ v52) + (v57 ^ v52))));
    return v64(v57, a2, a3, a4, a5, a4, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
}

uint64_t sub_22B33C3EC()
{
  return 4294925278;
}

uint64_t sub_22B33C3F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((253 * (a3 - 296259928 + ((v4 - 268708529) & 0xBC7E3BFC) < ((v4 - 2378) | 0x40u) - 290)) ^ v4)))();
}

void sub_22B33C458()
{
  *(_DWORD *)(v0 + 24) = 604092306;
}

uint64_t sub_22B33C464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_22B33C4AC(a13 - 0x1C88CB57747EAF29, (v13 - 1584) ^ 0xFFFFFFD8, 59);
}

uint64_t sub_22B33C4AC(uint64_t a1, int a2, int a3)
{
  *(unsigned char *)(a1 + v8 + v6) = *(unsigned char *)(v4 + v6) - ((2 * *(unsigned char *)(v4 + v6)) & 0x55) + 42;
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v5 + v6) & a2) != v9) * a3) ^ v7)))();
}

uint64_t sub_22B33C4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v18 = 1948972247 * ((~((v17 - 128) | 0x45678C53) + ((v17 - 128) & 0x45678C53)) ^ 0xF068642);
  *(_DWORD *)(v17 - 108) = (a11 ^ 0x5E195EDD ^ (249 * (v15 ^ 0x6D))) - v18;
  *(_DWORD *)(v17 - 128) = (v15 + 514405615) ^ v18;
  *(void *)(v17 - 120) = a15 + 0xCE7E02AB57D8E05;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 ^ 0xF84)))(v17 - 128);
  int v20 = 249 * (v15 ^ 0x6D);
  int v21 = ((2 * *(_DWORD *)(a15 - 0x1C88CB57747EAEE5)) & 0x72 ^ 0x32)
      + (*(_DWORD *)(a15 - 0x1C88CB57747EAEE5) & ((3 * (((v20 - 1992) | 0x603) ^ 0x7E4)) ^ 0x58A) ^ 0xF368FE60)
      + 211222919 < 0xFFFFFFC0;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((8 * v21) | (v21 << 11)) ^ v20)))(v19);
}

uint64_t sub_22B33C690()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ 0xB12) + 863 + 191 * (v1 ^ 0xB12) - 3708) * (v0 == 0x16B393DCF065912ELL)) ^ v1)))();
}

uint64_t sub_22B33C6DC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + v4 - 1) = ((v5 + 1) ^ v6) * (v3 + v5 + 1 + 70);
  int v9 = *(uint64_t (**)(void, uint64_t))(v8 + 8 * (((v4 == 1) * v7) ^ v2));
  return v9(v9, a2);
}

uint64_t sub_22B33C6E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void))
{
  *a3 = *(unsigned char *)(STACK[0xA68] + v43);
  a3[4] = *(unsigned char *)(STACK[0xAA8] + v41);
  a3[8] = *(unsigned char *)(STACK[0xAE8] + v40);
  a3[12] = *(unsigned char *)(STACK[0xB28] + a5);
  a3[1] = *(unsigned char *)(STACK[0xAB8] + v36);
  a3[5] = *(unsigned char *)(STACK[0xAF8] + v45);
  a3[9] = *(unsigned char *)(STACK[0xB38] + a4);
  a3[13] = *(unsigned char *)(STACK[0xA78] + a2);
  a3[2] = *(unsigned char *)(STACK[0xB08] + v46);
  a3[10] = *(unsigned char *)(STACK[0xA88] + v39);
  a3[6] = *(unsigned char *)(STACK[0xB48] + v44);
  a3[14] = *(unsigned char *)(STACK[0xAC8] + v37);
  a3[15] = *(unsigned char *)(STACK[0xB18] + v38);
  a3[11] = *(unsigned char *)(STACK[0xAD8] + v47);
  a3[7] = *(unsigned char *)(STACK[0xA98] + v42);
  a3[3] = *(unsigned char *)(STACK[0xB58] + a1);
  return a36();
}

uint64_t sub_22B33C7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v10 = a7 + 975;
  *(unsigned char *)(a3 + ((a1 + (v10 - 2011) + 478) & (v7 + a2))) = *(unsigned char *)(v9 + a6 + a4);
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * ((v7 + a5) < 0x40)) ^ v10)))();
}

uint64_t sub_22B33C804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a8 + 305) ^ 0xA29) * ((v8 & 8) == 0)) ^ a8)))();
}

void sub_22B33C830(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_DWORD *a35)
{
  int v38 = ((v36 + v35 - 1090) ^ *a35) + (a1 ^ v36);
  *a35 = v38 + v36 - (v37 & (2 * v38));
  JUMPOUT(0x22B33C880);
}

uint64_t sub_22B33C914@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v11 = v9 > 0x10B9E98;
  uint64_t v12 = (a2 - 461527058);
  *(unsigned char *)(a3 + v12) = *(unsigned char *)(v7 + (v12 & 0xF)) ^ *(unsigned char *)(v4 + v12) ^ *(unsigned char *)(v6 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v5 + 2) ^ (75 * (v12 & 0xF));
  if (v11 == a2 - 479065770 < ((v8 - 327) | 0xD66u) + v3) {
    BOOL v11 = a2 - 479065770 < a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((3632 * v11) ^ v8)))();
}

uint64_t sub_22B33C9B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((125 * (*v1 == ((2 * (v0 + 2188)) ^ 0x1E76))) ^ (v0 + 2188))))();
}

uint64_t sub_22B33C9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33)
{
  uint64_t v35 = *a33 & 0x3F;
  *(unsigned char *)(a4 + (v35 ^ 0x19)) = -86;
  return (*(uint64_t (**)(void))(v34 + 8 * ((((v35 ^ 0x19) > 0x37) * ((v33 ^ 0xF7) + 2258)) ^ v33)))();
}

uint64_t sub_22B33CA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, int a14, int a15)
{
  unsigned int v21 = (((&a12 ^ 0xD0835535 | 0xD9B033A4) - ((&a12 ^ 0xD0835535) & 0xD9B033A4)) ^ 0xAE600EF8)
      * v19;
  a12 = v21 + (((v18 - 1900) | 0xE8) + 1097014817) * (v20 ^ *v15 ^ 0xEB228061) + 2128238812;
  a15 = v18 - v21 - 599;
  a13 = a11;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v18 + 1946)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8 * (((a14 != v17) * (((v18 - 248699057) & 0xED2D8C3) - 1938)) ^ v18)))(v22);
}

uint64_t sub_22B33CB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, uint64_t a13, int a14, unint64_t *a15)
{
  int v19 = 1948972247 * ((&a11 - 531823260 - 2 * ((unint64_t)&a11 & 0xE04D0564)) ^ 0x55D3F08A);
  a14 = 1424768627 - v19;
  a11 = (v17 + 1397) ^ v19;
  a15 = &STACK[0x71ED341046982222];
  a12 = &STACK[0x516B96A03337B1DC];
  a13 = v18;
  uint64_t v20 = (*(uint64_t (**)(int *))(v16 + 8 * (v17 | 0xD90)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((1891
                                              * (*(_DWORD *)(v18 - 0x19157D3ABD2659C6) == (v17 ^ 0x94A ^ (v15 - 1258)))) ^ v17)))(v20);
}

uint64_t sub_22B33CC24(char a1, int a2, int a3, int a4, int a5, int a6)
{
  *(_DWORD *)(v13 - 224) = v12;
  *(_DWORD *)(v13 - 236) = v10 & 0xFFFFFFF8;
  *(_DWORD *)(v13 - 232) = v10;
  int v14 = -8 - a5;
  int v15 = a3 + a2;
  char v16 = a3 + a2 + a1;
  uint64_t v17 = (v15 + a4 + v14 + 8);
  v19.val[0].i64[0] = ((_BYTE)v15 + (_BYTE)a4 + (_BYTE)v14 + 8) & 0xF;
  v19.val[0].i64[1] = (v16 + 76 + (_BYTE)v14 + 8) & 0xF;
  v19.val[1].i64[0] = (v16 + 75 + (_BYTE)v14 + 8) & 0xF;
  v19.val[1].i64[1] = (v16 + 74 + (_BYTE)v14 + 8) & 0xF;
  v19.val[2].i64[0] = (v9 + (_BYTE)v14 + 8) & 0xF;
  v19.val[2].i64[1] = (v16 + 88 + (_BYTE)v14 + 8) & 0xF;
  v19.val[3].i64[0] = (v16 + 87 + (_BYTE)v14 + 8) & 0xF;
  v19.val[3].i64[1] = (v16 + (_BYTE)v14 + (a6 ^ 0x33) + 8) & 0xF;
  *(int8x8_t *)(v11 - 7 + v17) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v11 - 7 + v17), *(int8x8_t *)(v8 + (v17 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v7 + (v17 & 0xF) - 7), *(int8x8_t *)((v17 & 0xF) + v6 - 6)))), (int8x8_t)0x2A2A2A2A2A2A2A2ALL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, (int8x16_t)xmmword_22B497560), (int8x8_t)0x7F7F7F7F7F7F7F7FLL)));
  return (*(uint64_t (**)(__n128))(*(void *)(v13 - 216)
                                           + 8 * ((29 * (-(v10 & 0xFFFFFFF8) != v14)) ^ (a6 - 2109))))((__n128)xmmword_22B497560);
}

uint64_t sub_22B33CD78(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v2 + 4 * (v4 - 261778737)) = 261778737
                                                         - v4
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v2 + 4 * (v4 - 261778738)) ^ (*(_DWORD *)(v2 + 4 * (v4 - 261778738)) >> 30))) ^ *(_DWORD *)(v2 + 4 * (v4 - 261778737)));
  unint64_t v6 = STACK[0x258];
  int v7 = STACK[0x258] ^ 1;
  *(_DWORD *)(v5 - 156) = v3 + 278730638 - STACK[0x258] - 41;
  *(_DWORD *)(v5 - 164) = v7;
  *(_DWORD *)(v5 - 160) = v3 + 278730638 + v6;
  STACK[0x1950] = (v4 - 638345290) - v6;
  STACK[0x1948] = STACK[0x260];
  *(_DWORD *)(v5 - 188) = (v3 - 1604166046) ^ v6;
  *(_DWORD *)(v5 - 168) = v6 ^ (v3 + 278730638) ^ 0xEA;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v3 + 901)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * *(int *)(v5 - 192)))(v8);
}

uint64_t sub_22B33CE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v74 + 8 * ((29 * (v73 >= ((14 * a72) ^ 0x7A92888Fu) + a73)) ^ (v75 + 247))))();
}

uint64_t sub_22B33CEAC(uint64_t a1, uint64_t a2, int a3)
{
  HIDWORD(v9) = a3 ^ 1;
  LODWORD(v9) = a3 ^ (v8 - 1);
  return (*(uint64_t (**)(void))(v6 + 8 * (v3 ^ (16 * (v4 + 1 == v7 + 20)))))((v9 >> 2) + v8 - (v5 & (2 * (v9 >> 2))));
}

uint64_t sub_22B33CF78()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((90 * (v1 != 1)) ^ v0)))();
}

uint64_t sub_22B33CF80@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + v3) = a2;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 48) * a1) ^ v5)))();
}

void sub_22B33CFA4(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)a1 - 1734664879 * ((((2 * a1) | 0x7DAA5822) - a1 + 1093325807) ^ 0x910E040B);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[1] = v1 + 1438293641 * ((v4 + 1935299998 - 2 * (v4 & 0x735A559E)) ^ 0xCB9D00E1) + 165;
  uint64_t v5 = v2;
  uint64_t v3 = (char *)*(&off_26DE9F480 + (v1 ^ 0x277)) - 8;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xCE9)])(v4);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B33D0C4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v11 = v7
      - 1119051110
      + 1866394843 * ((1738792742 - (&v11 | 0x67A3DF26) + (&v11 | 0x985C20D9)) ^ 0x724B172D);
  uint64_t v13 = a1;
  (*(void (**)(unsigned int *))(v5 + 8 * (v7 ^ 0x116B)))(&v11);
  *(_DWORD *)(v4 - 0x717BE438C5D0856CLL) = v12;
  *v6 += 4;
  uint64_t v13 = v3 + 8;
  unsigned int v11 = v7
      - 1119051110
      + 1866394843 * (((&v11 | 0xDA0C0EB1) + (~&v11 | 0x25F3F14E)) ^ 0x301B3944);
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v5 + 8 * (v7 + 3867)))(&v11);
  int v9 = v12;
  *v6 += ((v7 - 216) | 0x418) ^ 0x47C;
  if (v9 == 1229665941) {
    int v10 = -604050357;
  }
  else {
    int v10 = v2 + 3;
  }
  *(_DWORD *)(v1 + 16) = v10;
  return result;
}

uint64_t sub_22B33D22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  unsigned int v21 = ((257 * (a5 ^ (a5 + 943) ^ 0xCAD)) ^ 0xE0E4377F) + v20;
  BOOL v22 = v21 < v19;
  BOOL v23 = v21 > a18;
  if (a18 < v19 != v22) {
    BOOL v24 = v22;
  }
  else {
    BOOL v24 = v23;
  }
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((a6 + a5 + 1125) | (4 * v24))))(3561582781);
}

uint64_t sub_22B33D2A4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((552 * (a3 ^ 0x794) - 1645) * ((v3 & 0x18) == 0)) ^ a3)))(a3 ^ 0xF0Eu);
}

uint64_t sub_22B33D2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v13 = v10 ^ 0xFB4;
  uint64_t v14 = ((v10 ^ 0xFB4) - 1845615815) & 0x6E01DFDE;
  uint64_t v15 = (a6 + a1 + a2 + 16);
  uint64_t v16 = v11 - 0x2E85F9F014BD953DLL + v15;
  uint64_t v17 = ((((v10 ^ 0xFB4) + 92) | 0x400) - 3603) & v15;
  uint64_t v18 = v6 - v16;
  uint64_t v19 = v9 - v16;
  unint64_t v20 = (v17 | v8) - v16;
  BOOL v21 = (unint64_t)(a5 - (v11 - 0x2E85F9F014BD953DLL) - 0x6A594E3C6075B478) >= 0x10
     && v18 + v17 >= (v14 ^ 0xCCEuLL);
  unint64_t v22 = v19 + v17;
  int v25 = !v21 || v22 < 0x10 || v20 < 0x10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((62 * v25) ^ v13)))(a1, a2, a3, v7);
}

uint64_t sub_22B33D3A4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a3 - 184) | 0x60) ^ 0x96D) * (v3 > 0x1F)) ^ (a3 - 729))))();
}

uint64_t sub_22B33D3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 144) = a19;
  *(void *)(v26 - 136) = v25;
  *(_DWORD *)(v26 - 112) = v24
                         - 1948972247 * ((((2 * (v26 - 144)) | 0x99E5C0C) - (v26 - 144) - 80686598) ^ 0xB151DBE8)
                         - 361;
  *(void *)(v26 - 128) = a22;
  *(void *)(v26 - 120) = a21;
  *(void *)(v26 - 104) = v25;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0x192B)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((((((v24 - 109) ^ (v22 - 484148408 < (v24 ^ 0x7FFFF6D1u))) & 1) << 6) & 0x7F | ((((v24 - 1133) ^ (v22 - 484148408 < (v24 ^ 0x7FFFF6D1u))) & 1) << 7)) ^ (v24 - 209))))(v27);
}

uint64_t sub_22B33D4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v18 - 104) = v12;
  *(_DWORD *)(v18 - 112) = v17
                         - 1948972247 * ((2 * ((v18 - 144) & 0x699B54B0) - (v18 - 144) - 1771787444) ^ 0x23FA5EA2)
                         + 1556;
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 120) = v13;
  *(void *)(v18 - 144) = a11;
  *(void *)(v18 - 136) = v12;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0x11B4u)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((28
                                                   * (v11 & ~((83 * ((v17 + 2088094094) & 0x838A3DEC ^ 0x90A)) ^ ((v15 - 1) < 0x7FFFFFFF)))) ^ (v17 + 2088094094) & 0x838A3DEC)))(v19);
}

uint64_t sub_22B33D56C@<X0>(int a1@<W0>, int a2@<W1>, void *a3@<X2>, int a4@<W3>, int a5@<W5>, uint64_t a6@<X6>, char a7@<W7>, int a8@<W8>)
{
  int v16 = a4 + 1;
  BOOL v17 = a1 < v12;
  unsigned int v18 = ((2 * (*(_DWORD *)(*a3 + 4 * (v16 + a8 + a2 + 1) + a6) ^ v9)) << a7) | ((*(_DWORD *)(*a3
                                                                                             + 4 * (v16 + a8 + a2)
                                                                                             + a6) ^ v9) >> v8);
  *(_DWORD *)(*a3 + 4 * (v16 + v14) + a6) = v18 + v9 - ((((v11 + 131) | a5) + v10) & (2 * v18));
  if (v17 == v16 + v15 < v12) {
    BOOL v17 = v16 + v15 < a1;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * (((8 * v17) | (16 * v17)) ^ (v11 + 175))))();
}

uint64_t sub_22B33D574@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (a1 - 502516778)) = *(unsigned char *)(v5 + ((a1 - 502516778) & 0xFLL)) ^ *(unsigned char *)(v2 + (a1 - 502516778)) ^ *(unsigned char *)(v4 + (((_BYTE)a1 - 42) & 0xF) + 1) ^ *(unsigned char *)(v3 + (((_BYTE)a1 - 42) & 0xF) + 1) ^ (((a1 - 42) & 0xF) * (((8 * v7) ^ 0xE8) + 13));
  return (*(uint64_t (**)(void))(v8 + 8 * ((222 * (a1 - 1 == v6)) ^ (v7 + 438))))();
}

uint64_t sub_22B33D5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8
                                                             * (((((a5 ^ 0x23C) - 674) ^ 0x9DC) * (v5 > 0x1F)) ^ a5 ^ 0x23C)))(a1, a2, 0);
}

uint64_t sub_22B33D618()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < v1 - 3372) * ((v1 - 1148) ^ 0x8E1)) ^ v1)))();
}

uint64_t sub_22B33D648(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7)
{
  int v9 = a3 + a5;
  uint64_t v10 = (a4 + v9);
  long long v11 = *(_OWORD *)(a2 + v10 - 15);
  long long v12 = *(_OWORD *)(a2 + v10 - 31);
  uint64_t v13 = v7 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 != v9) * a7) ^ (a1 + 1255))))();
}

uint64_t sub_22B33D650(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v48 = *(unsigned __int8 *)(a6 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v48 == 1)
  {
    unsigned int v56 = *(_DWORD *)(a6 - 0x2970AB8229FC3CEALL);
    char v50 = 5 * BYTE4(a10);
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF6) = ((5 * BYTE4(a10)) ^ (8 * v56) ^ 0xDB)
                                          - ((2 * ((5 * BYTE4(a10)) ^ (8 * v56) ^ 0xDB)) & 0x50)
                                          + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF5) = ((v56 >> 5) ^ 0xB0) - 2 * (((v56 >> 5) ^ 0xB0) & 0x2F ^ (v56 >> 5) & 5) + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF4) = ((v56 >> 13) ^ 0x29) - ((2 * ((v56 >> 13) ^ 0x29)) & 0x55) + 42;
    char v54 = 84;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF3) = ((v56 >> 21) ^ 0x11) - ((v56 >> 20) & 0x54) + 42;
    unsigned int v57 = *(_DWORD *)(a6 - 0x2970AB8229FC3CEELL);
    HIDWORD(v58) = v57 ^ 6;
    LODWORD(v58) = v56 ^ 0x20000000;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF2) = (v58 >> 29) - ((2 * (v58 >> 29)) & 0x55) + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF1) = ((v57 >> 5) ^ 0x9D) - ((2 * ((v57 >> 5) ^ 0x9D)) & 0x55) + 42;
    unsigned int v59 = ((v57 >> 13) ^ 0xFFFFFFBD) - ((2 * ((v57 >> 13) ^ 0xFFFFFFBD)) & 0x55555555) + 42;
    unsigned int v53 = v57 >> 21;
    int v55 = (v57 >> 21) ^ 0x40;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF0) = v59;
  }
  else
  {
    if (v48 != 2) {
      goto LABEL_6;
    }
    unsigned int v49 = *(_DWORD *)(a6 - 0x2970AB8229FC3CEELL);
    char v50 = a10 & 0xDB;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF6) = ((v49 >> ((a10 & 0xDB) + 2)) ^ 0x40)
                                          - ((2 * (v49 >> ((a10 & 0xDB) + 2))) & 0x55)
                                          + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF5) = ((v49 >> 13) ^ 0xBD) - ((2 * ((v49 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v51 = *(_DWORD *)(a6 - 0x2970AB8229FC3CEALL);
    HIDWORD(v52) = v49 ^ 6;
    LODWORD(v52) = v51 ^ 0x20000000;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF4) = ((v49 >> 5) ^ 0x9D) - ((2 * ((v49 >> 5) ^ 0x9D)) & 0x55) + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF3) = (v52 >> 29) - ((2 * (v52 >> 29)) & 0x55) + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF2) = ((v51 >> 21) ^ 0x11) - (a3 & (v51 >> 20)) + 42;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF1) = ((v51 >> 13) ^ 0x29)
                                          - 2 * (((v51 >> 13) ^ 0x29) & 0x2E ^ (v51 >> 13) & 4)
                                          + 42;
    LOBYTE(v53) = (8 * v51) ^ 0xC8;
    char v54 = 80;
    LOBYTE(v55) = v53;
    *(unsigned char *)(a6 - 0x2970AB8229FC3CF0) = ((v51 >> 5) ^ 0xB0)
                                          - 2 * (((v51 >> 5) ^ 0xB0) & 0x2B ^ ((v51 & 0x20) != 0))
                                          + 42;
  }
  *(unsigned char *)(a6 - 0x2970AB8229FC3CEFLL) = v55 - (((_BYTE)v53 << (v50 ^ 0x12)) & v54) + 42;
LABEL_6:
  unint64_t v60 = a6 - 0x2970AB8229FC3D2ELL;
  unsigned int v61 = (char *)&a46 + a42;
  uint64_t v62 = *(unsigned int *)(a6 - 0x2970AB8229FC3CE2);
  int v63 = *(unsigned __int8 *)(a6 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v63 == 2)
  {
    BOOL v68 = v60 < a31 + a42 && (unint64_t)v61 < a6 - 0x2970AB8229FC3CEELL;
    return (*(uint64_t (**)(void, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (int)(((a40 ^ (a4 + 47)) * v68) ^ (a4 - 589))))(a40, v62, v60, a4, *(unsigned int *)(a6 - 0x2970AB8229FC3CD6), a42, a6 - 0x2970AB8229FC3CDALL, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a6 - 0x2970AB8229FC3CD6,
             a31,
             a32,
             v47);
  }
  else
  {
    if (v63 != 1) {
      JUMPOUT(0x22B35F118);
    }
    BOOL v65 = v60 < a31 + a42 && (unint64_t)v61 < a6 - 0x2970AB8229FC3CEELL;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8 * (((a41 + 81) * v65) ^ ((int)a4 - 972))))(a1, v62);
  }
}

uint64_t sub_22B33D9F8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1734664879 * ((1397760100 - (a1 | 0x53502064) + (a1 | 0xACAFDF9B)) ^ 0x8374F781);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v1 ^ 0x322))
          + ((((v1 ^ (*(void *)(a1 + 8) == *(void *)(a1 + 16))) & 1) == 0) ^ v1)
          - 1))();
}

uint64_t sub_22B33DA7C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((55 * (((v1 == 1801476204) ^ 0xE5) & 1)) ^ 0xE5Bu)))();
}

uint64_t sub_22B33DAC4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((100 * (v0 != 0)) ^ 0xB3Au)))();
}

void sub_22B33DAF0(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1990461019 * (((a1 | 0x21CFDBFC) - (a1 & 0x21CFDBFC)) ^ 0xE2B7975);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B33DB9C(char a1, char a2, char a3, int a4, int a5, int8x16_t a6, int8x8_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v36 = (a5 + a4 - 8);
  v38.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a4 - 8) & 0xF;
  v38.val[0].i64[1] = ((_BYTE)a5 + v33 - 8) & 0xF;
  v38.val[1].i64[0] = ((_BYTE)a5 + v32 - 8) & 0xF;
  v38.val[1].i64[1] = ((_BYTE)a5 + v31 - 8) & 0xF;
  v38.val[2].i64[0] = ((_BYTE)a5 + a3 - 8) & 0xF;
  v38.val[2].i64[1] = ((_BYTE)a5 + v34 - 8 + ~((v29 + 32) | 0x16)) & 0xF;
  v38.val[3].i64[0] = ((_BYTE)a5 + a2 - 8) & 0xF;
  v38.val[3].i64[1] = ((_BYTE)a5 + a1 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v35 - 128) + v36) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v26 + (v36 & 0xF) - 7), *(int8x8_t *)(*(void *)(v35 - 128) + v36)), veor_s8(*(int8x8_t *)(v27 + (v36 & 0xF) - 7), *(int8x8_t *)((v36 & 0xF) + v28 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v38, a6), a7)));
  return (*(uint64_t (**)(void))(a26 + 8 * ((3987 * (a5 != v30 + 8)) ^ v29)))();
}

void sub_22B33DBC4()
{
  if (v0 == 486499100) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 20) = v1;
}

uint64_t sub_22B33DC28()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ v2) < v1 - 2006) * ((v1 + 410) ^ 0x948)) ^ v1)))();
}

uint64_t sub_22B33DC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v10 = (v8 - 911299865) & 0x36515FFF;
  *(void *)(a7 + 24) = *(void *)(a7 + 288);
  unsigned int v11 = LODWORD(STACK[0x37C])
      - ((((v10 + 314684331) & 0xED3E4DC5 ^ 0x293F42EC) + 2 * LODWORD(STACK[0x37C])) & 0xBBD5D166)
      - 225800121;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((4020 * (((2 * v11) & 0xDF7BCBFC ^ 0x9B51C164) + (v11 ^ 0x32570D4D) - 134578188 == a8)) ^ (v10 - 1183))))();
}

void sub_22B33DD2C(uint64_t a1)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  int v5 = 1328090399 * (((a1 | 0x117370F6) - (a1 | 0xEE8C8F09) - 292778231) ^ 0xEEA014CC);
  int v6 = *(_DWORD *)(a1 + 44);
  int v7 = *(_DWORD *)(a1 + 40) + v5;
  int v31 = *(_DWORD *)(a1 + 8) ^ v5;
  unint64_t v20 = 1328090399
      * (((a1 | 0x147055D6117370F6) - (a1 | 0xEB8FAA29EE8C8F09) - 0x147055D6117370F7) ^ 0xCD6FD2EAEEA014CCLL);
  int v8 = v6 + v5;
  unsigned int v9 = 1948972247 * ((&v41 - 258055629 - 2 * (&v41 & 0xF09E6233)) ^ 0x450097DD);
  uint64_t v25 = &STACK[0x2970AB8229FC3F7E];
  uint64_t v42 = &STACK[0x2970AB8229FC3F7E];
  unsigned int v43 = -118723830 - v9;
  int v41 = v9 ^ (v7 + 514405677);
  int v10 = (char *)*(&off_26DE9F480 + (v7 ^ 0x14D)) - 8;
  (*(void (**)(int *))&v10[8 * (v7 ^ 0xFC6)])(&v41);
  int v11 = v31;
  int v18 = v8 - 1982947056;
  int v19 = v8 + 1102736267;
  int v14 = v8 - 241956054;
  int v13 = v8 + 877063439;
  v12[1] = (char *)&v12[-236621341] + 3;
  int v17 = 37 * (v7 ^ 0x34);
  int v15 = v7 ^ 0xC41;
  int v16 = v7 ^ 0x5FB22F6B ^ v17;
  int v34 = v7 ^ 0xC5;
  int v35 = v7 ^ 0x6ED;
  int v33 = v7 ^ 0x14A;
  int v32 = v7 ^ 0x4E;
  uint64_t v30 = v7 ^ 0x4Eu;
  uint64_t v28 = v30;
  int v27 = v7;
  int32x4_t v23 = vdupq_n_s32(0xDBFEEC4B);
  int32x4_t v24 = vdupq_n_s32(0x5BFEEC4Fu);
  int32x4_t v22 = vdupq_n_s32(0x5BFEEC5Bu);
  uint64_t v21 = a1;
  uint64_t v1 = *(void *)a1;
  uint64_t v26 = *(void *)&v10[8 * v7];
  unsigned int v2 = v11 + ((v7 + 533) ^ 0x3A886D8B) - ((2 * v11 - 1538081748) & 0xD0BE2342);
  char v36 = ((v2 >> (-111 * (v7 ^ 0x3E) - 17)) ^ 0x68)
      - 2 * (((v2 >> (-111 * (v7 ^ 0x3E) - 17)) ^ 0x68) & 0x2B ^ (v2 >> (-111 * (v7 ^ 0x3E) - 17)) & 1)
      + 42;
  char v37 = (BYTE2(v2) ^ 0x5F) - ((2 * (BYTE2(v2) ^ 0x5F)) & 0x55) + 42;
  char v38 = (BYTE1(v2) ^ 0x11) + (~(v2 >> 7) | 0xAB) + 43;
  char v39 = (v11 + ((v7 + 21) ^ 0x8B) - ((2 * v11 + 44) & 0x42)) ^ 0x8B;
  uint64_t v3 = *(void *)&v10[8
                     * ((7 * (((2 * v40) & 0x5E ^ 0x12) + (v40 & 0x3F ^ 0x95DFDFF6) + 1780490197 < 0xFFFFFFC0)) ^ (v7 + 3348))];
  uint64_t v29 = v1;
  __asm { BRAA            X15, X17 }
}

uint64_t sub_22B33DFF0@<X0>(uint64_t result@<X0>, unsigned __int8 a2@<W8>)
{
  int v6 = (uint64_t *)(v5 - 128);
  int v7 = *(unsigned __int8 **)(result + 24);
  if (a2 == 23)
  {
LABEL_4:
    uint64_t v8 = (uint64_t)&v7[56 * *v7 + 24];
    int v9 = v5 - 128;
    int v10 = 1948972247 * ((((v5 - 128) | 0x6398F600) - (v5 - 128) + ((v5 - 128) & 0x9C6709F8)) ^ 0xD60603EE);
    *(_WORD *)(v5 - 116) = 27086 - -2857 * ((((v5 - 128) | 0xF600) - (v5 - 128) + ((v5 - 128) & 0x9F8)) ^ 0x3EE);
    *int v6 = v8;
    *(_DWORD *)(v5 - 112) = -1493880289 - v10;
    *(_DWORD *)(v5 - 120) = v10 + v2 - 921;
    *(void *)(v5 - 104) = &STACK[0x1C88CB57747EADF5];
    (*(void (**)(uint64_t))(v4 + 8 * (v2 + 2390)))(v5 - 128);
    unsigned int v11 = 1734664879 * (((v9 | 0xA8FE30F3) - v9 + (v9 & 0x5701CF08)) ^ 0x872518E9);
    *(void *)(v5 - 104) = &v17;
    *(_DWORD *)(v5 - 112) = v11 + 1646535768;
    *(_DWORD *)int v6 = v2 - 133 + v11;
    *(void *)(v5 - 120) = &STACK[0x1C88CB57747EADF5];
    (*(void (**)(uint64_t))(v4 + 8 * (v2 + 2312)))(v5 - 128);
    int v12 = 1734664879 * ((2 * (v9 & 0x15C54538) - v9 + 1782233792) ^ 0x45E192DA);
    *(_DWORD *)int v6 = v2 - 133 + v12;
    *(void *)(v5 - 104) = &v18;
    *(void *)(v5 - 120) = &STACK[0x1C88CB57747EADF5];
    *(_DWORD *)(v5 - 112) = v12 + 1646535768;
    (*(void (**)(uint64_t))(v4 + 8 * (v2 + 2312)))(v5 - 128);
    *(_DWORD *)(v5 - 112) = v2 + 731811679 * ((v5 - 128) ^ 0x49F6A644) - 1592;
    *int v6 = v3;
    *(void *)(v5 - 120) = &STACK[0x1C88CB57747EADF5];
    return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 + 2402)))(v5 - 128);
  }
  if (a2 != 182)
  {
    if (a2 != 181) {
      return result;
    }
    goto LABEL_4;
  }
  int v13 = v5 - 128;
  *int v6 = (uint64_t)&STACK[0x21AEEC4F795AED3B];
  *(_DWORD *)(v5 - 120) = v2
                        - 1438293641
                        * (((((v5 - 128) | 0x5673B5D4) ^ 0xFFFFFFFE) - (~(v5 - 128) | 0xA98C4A2B)) ^ 0x114B1F54)
                        + 1118657644;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 + 2355)))(v5 - 128);
  int v14 = 1990461019 * ((((2 * v13) | 0x4018542A) - v13 - 537668117) ^ 0xFE8889C);
  *int v6 = (uint64_t)&STACK[0x21AEEC4F795AED3B];
  *(void *)(v5 - 120) = &v17;
  *(_DWORD *)(v5 - 112) = v2 + 1298780480 + v14;
  *(_DWORD *)(v5 - 108) = 1625468338 - v14;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 ^ 0x16C4)))(v5 - 128);
  unsigned int v15 = 1990461019 * (((v13 | 0xBD5207D3) - v13 + (v13 & 0x42ADF828)) ^ 0x92B6A55A);
  *(_DWORD *)(v5 - 112) = v2 + 1298780480 + v15;
  *(_DWORD *)(v5 - 108) = 1625468338 - v15;
  *int v6 = (uint64_t)&STACK[0x21AEEC4F795AED3B];
  *(void *)(v5 - 120) = &v18;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 + 2364)))(v5 - 128);
  int v16 = &v7[56 * *v7];
  v19[19] = v16[43] ^ 0x2A;
  v19[18] = v16[42] ^ 0x2A;
  v19[17] = v16[41] ^ 0x2A;
  v19[16] = v16[40] ^ 0x2A;
  v19[15] = v16[39] ^ 0x2A;
  v19[14] = v16[38] ^ 0x2A;
  v19[13] = v16[37] ^ 0x2A;
  v19[12] = v16[36] ^ 0x2A;
  v19[11] = v16[35] ^ 0x2A;
  v19[10] = v16[34] ^ 0x2A;
  v19[9] = v16[33] ^ 0x2A;
  v19[8] = v16[32] ^ 0x2A;
  v19[7] = v16[31] ^ 0x2A;
  v19[6] = v16[30] ^ 0x2A;
  v19[5] = v16[29] ^ 0x2A;
  v19[4] = v16[28] ^ 0x2A;
  v19[3] = v16[27] ^ 0x2A;
  v19[2] = v16[26] ^ 0x2A;
  v19[1] = v16[25] ^ 0x2A;
  v19[0] = v16[24] ^ 0x2A;
  *(_DWORD *)(v5 - 112) = v2 + 1734664879 * ((((v5 - 128) | 0xFF8B0761) - ((v5 - 128) & 0xFF8B0761)) ^ 0xD0502F7B) + 57;
  *int v6 = (uint64_t)&STACK[0x21AEEC4F795AED3B];
  *(void *)(v5 - 120) = v19;
  *(void *)(v5 - 104) = v3;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 + 2292)))(v5 - 128);
}

uint64_t sub_22B33E4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v7 = v5 ^ 0xFC2;
  *(_DWORD *)(*(void *)(v4 - 0x281D12643933BF1BLL) + 4 * (v2 + v3 + 1) - 0x54EEBA8C0E75CADCLL) = v6;
  int v8 = v3 + (v5 ^ 0xFC2) - 1654;
  int v9 = v5 ^ 0xC74;
  *(_DWORD *)(v4 - 0x281D12643933BF1FLL) = v8;
  if (v2 + v8 + 1 >= 0) {
    int v10 = v2 + v8 + 1;
  }
  else {
    int v10 = ~(v2 + v8);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2
                                                     + 8
                                                     * ((899
                                                       * ((((v9 - 1433) ^ ((int)((v10 ^ 0x3FFEEAF5)
                                                                               + ((2 * v10) & 0x7FFDD5EA)
                                                                               + (v7 ^ 0xF6DFBB8B)
                                                                               + v2) >= 0)) & 1) == 0)) ^ v9)))(a1, 1236);
}

uint64_t sub_22B33E5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v26 - 128) = v24;
  *(void *)(v26 - 120) = a21;
  *(_DWORD *)(v26 - 112) = v21 + ((v26 - 128) ^ 0xEA1737F4) * v23 - 637;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 ^ 0x17B0)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((v25 == (v21 ^ 0x3A81BC9)) * (((v21 + 325) | 0x2A0) - 2972)) ^ v21)))(v27);
}

uint64_t sub_22B33E644(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((a2 - 1608220667 >= ((a8 - 3651) | 0xC53u) - 3283)
                                     * ((a8 + 1127472676) & 0xBCCC1F75 ^ 0xC7E)) ^ a8)))();
}

uint64_t sub_22B33E6B0@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  BOOL v10 = v5 < a2;
  int v11 = *(unsigned __int8 *)(v9 + (v4 + a3));
  *((unsigned char *)&STACK[0x28C] + (a4 - 1421512564)) = v11 - ((v11 << (((v7 + 118) ^ 5) & 0x6F)) & 0x54) + 42;
  unsigned int v12 = v4 + 1 + a1;
  int v13 = v10 ^ (v12 < a2);
  BOOL v14 = v12 < v5;
  if (!v13) {
    BOOL v10 = v14;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v10 * v6) ^ v7)))();
}

void sub_22B33E744()
{
}

uint64_t sub_22B33E74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void *a4@<X6>, int a5@<W7>, uint64_t a6@<X8>, uint64_t a7)
{
  a4[71] = a6;
  a4[72] = v7;
  uint64_t v14 = a4[20];
  unsigned int v15 = (char *)&a7 + v14 - 0x3D63BD92DA195D22;
  a4[73] = v15;
  uint64_t v16 = v14 + 320;
  a4[20] = v16;
  int v17 = *(_DWORD *)(a6 - 0x2970AB8229FC3CE6);
  int v18 = *(_DWORD *)(a6 - 0x2970AB8229FC3CE2);
  LODWORD(STACK[0x370]) = v17;
  LODWORD(STACK[0x4CC]) = v18;
  int v19 = *(_DWORD *)(a6 - 0x2970AB8229FC3CDELL);
  int v20 = *(_DWORD *)(a6 - 0x2970AB8229FC3CDALL);
  LODWORD(STACK[0x338]) = v19;
  LODWORD(STACK[0x468]) = v20;
  int v21 = *(unsigned __int8 *)(a6 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v21 == 2)
  {
    LODWORD(STACK[0x4A4]) = *(_DWORD *)(a6 - 0x2970AB8229FC3CD6);
    LODWORD(STACK[0x3CC]) = 1363996369;
    return (*(uint64_t (**)(void))(v13
                                + 8
                                * ((((v10 + 1363996369) < 0x40)
                                  * (5 * (((a5 - 2899) | 0x62C) ^ 0x721) + 3619)) ^ ((a5 - 2899) | 0x62C))))();
  }
  else if (v21 == 1)
  {
    int v22 = *(unsigned __int8 *)(v7 + (v10 + 1363996369)) ^ v9;
    int v23 = ((*(unsigned __int8 *)(v7 + (v10 + 1363996370)) ^ v9) << (a5 - 75)) | v22 | ((*(unsigned __int8 *)(v7 + (v10 + 1363996371)) ^ v9) << 16) | ((*(unsigned __int8 *)(v7 + (v10 + 1363996372)) ^ v9) << 24);
    *(_DWORD *)&v15[(v10 + 1363996369) & 0xFFFFFFFC] = v23 + v12 - 2 * (v23 & 0x5BFEEC5B ^ v22 & 0x10);
    return (*(uint64_t (**)(void))(v13 + 8 * ((1017 * ((v10 + 1363996373) < 0x40)) ^ (a5 - 696))))();
  }
  else
  {
    unint64_t v25 = STACK[0x250];
    int v26 = (*(_DWORD *)(a6 - 0x2970AB8229FC3CE6) ^ v8) + (v17 ^ v8);
    *(_DWORD *)(a6 - 0x2970AB8229FC3CE6) = v26 + v8 - (v11 & (2 * v26));
    int v27 = (*(_DWORD *)(a6 - 0x2970AB8229FC3CE2) ^ v8) + (v18 ^ v8);
    *(_DWORD *)(a6 - 0x2970AB8229FC3CE2) = v27 + v8 - (v11 & (2 * v27));
    int v28 = (*(_DWORD *)(a6 - 0x2970AB8229FC3CDELL) ^ v8) + (v19 ^ v8);
    *(_DWORD *)(a6 - 0x2970AB8229FC3CDELL) = v28 + v8 - (v11 & (2 * v28));
    int v29 = (*(_DWORD *)(a6 - 0x2970AB8229FC3CDALL) ^ v8) + (v20 ^ v8);
    *(_DWORD *)(a6 - 0x2970AB8229FC3CDALL) = v29 + v8 - (v11 & (2 * v29));
    STACK[0x3B0] = v16 - 320;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))STACK[0x438])(a1, a2, 631, 3147400454, a3, v25);
  }
}

void sub_22B33E978()
{
}

uint64_t sub_22B33E98C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,_DWORD *a62,unsigned int *a63)
{
  LODWORD(STACK[0x244]) = 0;
  int v66 = LODWORD(STACK[0x244])++;
  *a62 = v66 + 1;
  uint64_t v67 = *a63;
  *(_DWORD *)(v65 - 148) = (a1 - 1604165215) ^ a13;
  *(void *)(v64 + 16) = a9;
  *(_DWORD *)(v65 - 128) = a13 ^ (a1 + 1223595385) ^ 0x9C;
  *(_DWORD *)(v65 - 124) = a13 ^ 1;
  *(void *)(v65 - 144) = v67 - a13;
  *(_DWORD *)(v65 - 120) = a1 + 1223595385 + a13;
  *(_DWORD *)(v65 - 116) = ((a1 + 1223595385) ^ 0x6E) - a13;
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(v63 + 8 * (a1 + 1732)))(v65 - 152);
  return (*(uint64_t (**)(uint64_t))(v63 + 8 * *(int *)(v65 - 152)))(v68);
}

uint64_t sub_22B33E994()
{
  *(_DWORD *)(v2 - 120) = v0 - 73 + 1734664879 * ((2 * ((v2 - 120) & 0x334062D0) - (v2 - 120) - 859857618) ^ 0xE364B534);
  *(void *)(v2 - 112) = v4;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0xC9C)))(v2 - 120);
  *(void *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 120) = v0 - 73 + 1734664879 * ((v2 - 120) ^ 0x2FDB281A);
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0xC9C)))(v2 - 120);
  *(_DWORD *)(v2 - 120) = v0 - 1734664879 * ((((v2 - 120) | 0xE32D3578) - ((v2 - 120) & 0xE32D3578)) ^ 0xCCF61D62) - 286;
  *(void *)(v2 - 112) = v6;
  *(void *)(v2 - 104) = v5;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xC9B)))(v2 - 120);
}

uint64_t sub_22B33EB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((53 * (v4 + 1 == a3 + 24)) ^ v5)))();
}

uint64_t sub_22B33EBD4()
{
  int v4 = (v0 ^ 0x1B56) - 244;
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * ((v0 ^ 0x1B56) + 2723)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*v1 == ((v4 - 1391678573) & 0x52F353DB) - 923) * ((v4 + 643) ^ 0x6B7)) ^ v4)))(v5);
}

uint64_t sub_22B33EC3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, _DWORD *a17)
{
  unsigned int v21 = ((34 * (v17 ^ 0x2B1)) ^ 0x4FA) + ((a2 + v20) & 0xFFFFFFF0);
  int v22 = 1948972247 * ((v19 - 136) ^ 0xB59EF5EE);
  *(void *)(v19 - 128) = a6;
  *(_DWORD *)(v19 - 136) = v22 + a2 - a15 + 1881594432;
  *(_DWORD *)(v19 - 132) = v17 - v22 - 84;
  *(_DWORD *)(v19 - 120) = (v21 ^ 0x578DFB7A) - v22 + ((2 * v21) & 0xAF1BF6E0) - 268476712;
  int v25 = v17;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v17 ^ 0x1281)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((13 * (*a17 == -604050357)) ^ v25)))(v23);
}

uint64_t sub_22B33ED24@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(unsigned char *)(v2 + (a1 - 1899432623)) = *(unsigned char *)(v4 + (a1 - 1899432623))
                                                   - ((*(unsigned char *)(v4 + (a1 - 1899432623)) << ((v3 - 10) & 0xF6 | 1)) & 0x55)
                                                   + 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1891 * (a1 - 1 == a2)) ^ v3)))();
}

uint64_t sub_22B33ED7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a4 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 0) * v7) ^ a3)))();
}

uint64_t sub_22B33EDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int8x16_t v46 = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 32) - 0x7D0BC8B68F050DB8), (int8x16_t)xmmword_22B4975B0);
  *(int8x16_t *)(v44 - 128) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 8) - 0x72F64011C759082ELL), (int8x16_t)xmmword_22B4975A0);
  *(int8x16_t *)(v44 - 112) = v46;
  LODWORD(a13) = 2 * v42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * (int)(a8 ^ (200 * (v45 == 0)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_22B33EE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((15 * (((*((_DWORD *)&a30 + 6 * (a8 - 1535745203)) - 381654869) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v30)))(a1, a2, a3, *((unsigned int *)&a30 + 6 * (a8 - 1535745203) + 1), a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_22B33EF0C@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  *(void *)(*(void *)(a1 + 8) - 0x516B96A03337B1DCLL) = 0;
  return (*(uint64_t (**)(void))(a3 + 8 * ((940 * (*v3 == v4 + ((a2 - 3022) | 0x4D0) - 2005)) ^ (a2 - 3527))))();
}

uint64_t sub_22B33EF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((*(_DWORD *)(v11 + 48 * (v9 + a7)) == 1885548393)
                                     * ((v7 + 1035992712) & 0xD2D5BFDD ^ (v10 + 478))) ^ v7)))();
}

uint64_t sub_22B33EFBC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 674) ^ 0x89B) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_22B33EFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                      + 8
                                                                                      * ((189
                                                                                        * (v7 < ((v5 - 400) ^ (v5 + 1394) ^ 0x916))) ^ v5));
  *(_DWORD *)(v9 - 220) = v6;
  return v10(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_22B33F040(uint64_t a1)
{
  uint64_t v8 = (uint64_t *)(v7 - 128);
  uint64_t v9 = *(void *)(a1 + 16) + 56 * **(unsigned __int8 **)(a1 + 16) + 24;
  int v10 = v7 - 128;
  int v11 = 1948972247 * ((((v7 - 128) | 0xE59A6F8) - (v7 - 128) + ((v7 - 128) & 0xF1A65900)) ^ 0xBBC75316);
  *(_DWORD *)(v7 - 120) = v11 + v2 - 2477;
  *(_WORD *)(v7 - 116) = 27086 - -2857 * ((((v7 - 128) | 0xA6F8) - (v7 - 128) + ((v7 - 128) & 0x5900)) ^ 0x5316);
  *uint64_t v8 = v9;
  *(_DWORD *)(v7 - 112) = -1493880289 - v11;
  _DWORD v8[3] = (uint64_t)&STACK[0x1C88CB57747EADF5];
  (*(void (**)(uint64_t))(v3 + 8 * (v2 ^ 0x1CC2)))(v7 - 128);
  unsigned int v12 = 1734664879 * ((-2049561189 - (v10 | 0x85D62D9B) + (v10 | 0x7A29D264)) ^ 0x55F2FA7E);
  *(void *)(v7 - 120) = &STACK[0x1C88CB57747EADF5];
  *(void *)(v7 - 104) = v6;
  *(_DWORD *)(v7 - 128) = v2 - 1689 + v12;
  *(_DWORD *)(v7 - 112) = v12 + 1646535803;
  (*(void (**)(uint64_t))(v3 + 8 * (v2 ^ 0x334)))(v7 - 128);
  unsigned int v13 = 1734664879 * (((v10 | 0x33B4790A) - v10 + (v10 & 0xCC4B86F0)) ^ 0x1C6F5110);
  *(void *)(v7 - 120) = &STACK[0x1C88CB57747EADF5];
  *(void *)(v7 - 104) = v4;
  *(_DWORD *)(v7 - 128) = v2 - 1689 + v13;
  *(_DWORD *)(v7 - 112) = v13 + v5 + ((v2 + 546) ^ 0x12CDF20);
  (*(void (**)(uint64_t))(v3 + 8 * (v2 + 756)))(v7 - 128);
  *uint64_t v8 = v1;
  *(void *)(v7 - 120) = &STACK[0x1C88CB57747EADF5];
  *(_DWORD *)(v7 - 112) = v2 + 731811679 * ((((v7 - 128) | 0x7ABCD931) - ((v7 - 128) & 0x7ABCD931)) ^ 0x334A7F75) - 3148;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ 0x1CCE)))(v7 - 128);
}

void sub_22B33F284()
{
}

uint64_t sub_22B33F2BC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*a1 + 4 * (v3 + v2) + v10) = v5;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((v12 == ((((v11 + 17) ^ v8) * v9 - 2026) | v6) + v4)
                                * (((((v11 + 17) ^ v8) * v9 + 1045) | v7) - 720)) ^ (((v11 + 17) ^ v8) * v9))))();
}

uint64_t sub_22B33F32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v5 - 1362192955) = ((((v4 - 94) | 0x11) ^ 0x39)
                                    + *(unsigned char *)(a1 + v5 - 1362192955)
                                    - ((2 * *(unsigned char *)(a1 + v5 - 1362192955)) & 0x50)) ^ *(unsigned char *)(a2 + v5 - 1362192955);
  return (*(uint64_t (**)(void))(v6 + 8 * ((467 * (v5 + 1 != v3 + 16)) ^ v4)))();
}

uint64_t sub_22B33F3D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v48 = (char *)&a46 + a42;
  uint64_t v49 = *(unsigned int *)(a27 - 0x2970AB8229FC3CE2);
  int v50 = *(unsigned __int8 *)(a27 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v50 == 2)
  {
    BOOL v55 = a3 < a31 + a42 && (unint64_t)v48 < a3 + 64;
    return (*(uint64_t (**)(void, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (int)(((a40 ^ (a4 + 47)) * v55) ^ (a4 - 589))))(a40, v49, a3, a4, *(unsigned int *)(a27 - 0x2970AB8229FC3CD6), a42, a27 - 0x2970AB8229FC3CDALL, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a27 - 0x2970AB8229FC3CD6,
             a31,
             a32,
             v47);
  }
  else
  {
    if (v50 != 1) {
      JUMPOUT(0x22B35F118);
    }
    BOOL v52 = a3 < a31 + a42 && (unint64_t)v48 < a3 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8 * (((a41 + 81) * v52) ^ ((int)a4 - 972))))(a1, v49);
  }
}

uint64_t sub_22B33F3DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 - 1;
  *(unsigned char *)(v3 + v5) = ((v1 - 19) ^ 0xBA) * (v1 - 2);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 != 0) * ((17 * (v2 ^ 0x558)) ^ 0x494)) ^ v2)))();
}

void sub_22B33F438()
{
  *(_DWORD *)(v3 - 0x281D12643933BF1FLL) = (((v2 + v1) * (v0 - 1400692510)) ^ 0xFEFFAAF7)
                                         + 937360890
                                         + ((2 * (v2 + v1) * (v0 - 1400692510)) & 0xFDFF55EE);
}

uint64_t sub_22B33F4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  v76.val[1].i64[0] = ((_BYTE)v67 + 4) & 0xF;
  v76.val[1].i64[1] = ((_BYTE)v67 + 3) & 0xF;
  v76.val[2].i64[0] = ((_BYTE)v67 + 2) & 0xF;
  v76.val[2].i64[1] = ((_BYTE)v67 + 1) & 0xF;
  v76.val[3].i64[0] = v67 & 0xF;
  v76.val[3].i64[1] = ((_BYTE)v67 - 1) & 0xF;
  v77.val[0].i64[0] = ((_BYTE)v67 + 14) & 0xF;
  v77.val[0].i64[1] = ((_BYTE)v67 + 13) & 0xF;
  v77.val[1].i64[0] = ((_BYTE)v67 + 12) & 0xF;
  v77.val[1].i64[1] = (v67 + 11) & 0xF;
  v77.val[2].i64[0] = ((_BYTE)v67 + 10) & 0xF;
  v77.val[2].i64[1] = (v67 + 9) & 0xF;
  v77.val[3].i64[0] = ((_BYTE)v67 + 8) & 0xF;
  v77.val[3].i64[1] = ((_BYTE)v67 + 7) & 0xF;
  v69.i64[0] = 0xA3A3A3A3A3A3A3A3;
  v69.i64[1] = 0xA3A3A3A3A3A3A3A3;
  v70.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v70.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  uint64_t v71 = (v66 + v67 + 1283);
  v76.val[0].i64[0] = ((_BYTE)v66 + (_BYTE)v67 + 3) & 0xF;
  v76.val[0].i64[1] = ((_BYTE)v67 + 5) & 0xF;
  v72.i64[0] = vqtbl4q_s8(v76, (int8x16_t)xmmword_22B4975D0).u64[0];
  v72.i64[1] = vqtbl4q_s8(v77, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v73 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v62 - 15 + v71), *(int8x16_t *)(v64 + (v71 & 0xF) - 15)), veorq_s8(*(int8x16_t *)((v71 & 0xF) + v65 - 14), *(int8x16_t *)((v71 & 0xF) + v63 - 13))));
  int8x16_t v74 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v73, v73, 8uLL), v70), vmulq_s8(v72, v69)));
  *(int8x16_t *)(a62 - 15 + v71) = vextq_s8(v74, v74, 8uLL);
  return (*(uint64_t (**)(uint64_t))(a44
                                            + 8 * ((1921 * (((5 * (a7 ^ 0x828)) ^ 0xBA3) == (v68 & 0xFFFFFFF0))) ^ a7)))(v68);
}

void sub_22B33F640()
{
}

void sub_22B33F6DC()
{
}

uint64_t sub_22B33F7C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, char a5, unsigned int a6, int a7, unint64_t *a8, unint64_t *a9, uint64_t a10, int a11)
{
  int v14 = v11 - 33;
  uint64_t v15 = *(void *)(v12 + 8);
  unsigned int v16 = 225134719 * ((~&a4 & 0x5000CC19 | &a4 & 0xAFFF33E6) ^ 0x46F08933);
  a9 = &STACK[0x6DFAFCB6888FFD35];
  a10 = v15;
  a4 = &STACK[0x6D406AD075C741FE];
  a8 = &STACK[0x2C6BEF2188A8BB8B];
  a6 = (a1 ^ 0xDEF10A9A) + ((2 * a1) & 0xDF5FDF8E ^ 0x421DCA8A) - v16 + ((v14 + 917318981) & 0xC952D2DB) - 1176931467;
  a7 = v16 + 728727299 + v14;
  a5 = 68 - 127 * ((~&a4 & 0x19 | &a4 & 0xE6) ^ 0x33);
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v13 + 8 * (v14 + 3481)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((225 * (a11 != -604050357)) ^ v14)))(v17);
}

uint64_t sub_22B33F914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  return sub_22B348F50(a1, 42, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_22B33F91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14, unint64_t *a15)
{
  unsigned int v19 = 1948972247 * ((&a11 & 0x1092E45E | ~(&a11 | 0x1092E45E)) ^ 0x5AF3EE4F);
  a11 = (v18 + 1174) ^ v19;
  a14 = 1424768627 - v19;
  a12 = &STACK[0x516B96A03337B1E4];
  a13 = v17;
  a15 = &STACK[0x71ED34104698221A];
  uint64_t v20 = (*(uint64_t (**)(int *))(v16 + 8 * (v18 + 3249)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v17 - 0x19157D3ABD2659C6) == ((v18 - 828) | 0x830)
                                                                                               + v15)
                                                   * (((v18 + 1327375532) & 0xB0E1DB54) - 717)) ^ v18)))(v20);
}

uint64_t sub_22B33FA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(v10 - 220 + v7 + a7 + (a5 + v8 - 597)) = 42;
  return (*(uint64_t (**)(void))(v9 + 8 * ((242 * ((unint64_t)(v7 + 1 + a4) > 0x3F)) ^ v8)))();
}

uint64_t sub_22B33FA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v31 = (v28 - 321601363);
  *(_DWORD *)(a28 - 0x54EEBA8C0E75CADCLL) = 993050541;
  BOOL v33 = ((4 * v29) ^ 0x1590) + 1825879593 > -321601362 && (int)v31 < -321601362;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v30 + 8
                                                                                      * ((1864 * v33) ^ (v29 + 61))))(a1, 3973365933, v31, 0xAB114573F18A3524);
}

uint64_t sub_22B33FB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 - v11 - 1166 + (v9 ^ (a7 - 2690)) - 60987501) * (v7 == v8)) ^ v9)))();
}

void sub_22B33FB68()
{
  int v3 = 1948972247 * ((((2 * (v1 - 192)) | 0x238C8746) - (v1 - 192) - 298206115) ^ 0xA458B64D);
  STACK[0x1948] = STACK[0x268];
  *(_DWORD *)(v1 - 172) = -118723830 - v3;
  *(_DWORD *)(v1 - 192) = (v0 + 514405694) ^ v3;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 4043)))(v1 - 192);
  STACK[0x2F0] = *(void *)(STACK[0x270] + 8 * v0);
  JUMPOUT(0x22B33FC2CLL);
}

uint64_t sub_22B33FCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v10
                                                                                        + 8
                                                                                        * ((39
                                                                                          * ((v9 & 8) != ((a8 + 1248) ^ 0xC12 ^ (19 * (a8 ^ 0x3A8))))) ^ a8)))(a1, a2, a3, a4, a5, (v8 - a5));
}

uint64_t sub_22B33FD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v28 - 120) = a23;
  *(void *)(v28 - 104) = v27;
  *(_DWORD *)(v28 - 112) = v25 + ((v28 - 128) ^ 0xEA1737F4) * v26 - 217;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 | 0x452)))(v28 - 128);
  BOOL v30 = *(_DWORD *)(v28 - 128) > v23 + ((v25 + 1224961982) & 0xB6FC87A5) - 771;
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((v25 + 3) ^ v30) & 1 | (2
                                                                                       * (((v25 + 3) ^ v30) & 1)) | v25)))(v29);
}

uint64_t sub_22B33FD98()
{
  int v5 = *(unsigned __int8 *)(v2 + 2);
  *uint64_t v4 = v0 + 3;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v5 != ((88 * (v1 ^ 0xCC) - 50) & 0xFE)) * (((2 * v1) ^ 0xBA) + 193)) ^ v1)))();
}

void sub_22B33FDEC(int8x16_t *a1@<X2>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  *a1 = vaddq_s8(vsubq_s8(*a2, vandq_s8(vaddq_s8(*a2, *a2), a3)), a4);
  JUMPOUT(0x22B33FEF4);
}

uint64_t sub_22B3403F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v6 ^ 0x1C9) + 1150) ^ 0x890) * (v7 == a6)) ^ v6)))();
}

uint64_t sub_22B340424@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11, uint64_t a12, unsigned int *a13)
{
  *a11 = 1;
  uint64_t v16 = *a13;
  *(_DWORD *)(v15 - 112) = a1 - 636936072 + a9;
  *(_DWORD *)(v15 - 108) = a1 - 636936072 - a9 + 14;
  *(_DWORD *)(v15 - 120) = (a1 - 636935928) ^ a9;
  *(_DWORD *)(v15 - 116) = a9 ^ 1;
  *(void *)(v13 + 16) = v16 - a9;
  *(void *)(v13 + 24) = a8;
  *(_DWORD *)(v15 - 140) = (a1 - 1604164844) ^ a9;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (a1 + 2103)))(v15 - 144);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * *(int *)(v15 - 144)))(v17);
}

uint64_t sub_22B3404C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v44 = *(unsigned __int8 *)(v43 - 132) ^ 0x22;
  if (v44 == 1)
  {
    int v47 = 13 * (v40 ^ 0x39E);
    unsigned int v54 = *(_DWORD *)(v43 - 164);
    unsigned int v53 = *(_DWORD *)(v43 - 160);
    *(unsigned char *)(v43 - 172) = ((8 * v53) ^ 0xC8) - ((2 * ((8 * v53) ^ 0xC8)) & 0x55) + 42;
    *(unsigned char *)(v43 - 171) = ((v53 >> (13 * (v40 ^ 0x9E) + 99)) ^ 0xB0)
                          - 2
                          * (((v53 >> (13 * (v40 ^ 0x9E) + 99)) ^ 0xB0) & 0x2E ^ (v53 >> (13 * (v40 ^ 0x9E) + 99)) & 4)
                          + 42;
    *(unsigned char *)(v43 - 170) = ((v53 >> 13) ^ 0x29) - ((2 * ((v53 >> 13) ^ 0x29)) & 0x55) + 42;
    char v51 = 84;
    *(unsigned char *)(v43 - 169) = ((v53 >> 21) ^ 0x11) - ((v53 >> 20) & 0x54) + 42;
    HIDWORD(v55) = v54 ^ 6;
    LODWORD(v55) = v53 ^ 0x20000000;
    *(unsigned char *)(v43 - 168) = (v55 >> 29) - ((2 * (v55 >> 29)) & 0x55) + 42;
    *(unsigned char *)(v43 - 167) = ((v54 >> 5) ^ 0x9D) - ((2 * ((v54 >> 5) ^ 0x9D)) & 0x55) + 42;
    *(unsigned char *)(v43 - 166) = ((v54 >> 13) ^ 0xBD) + (~(2 * ((v54 >> 13) ^ 0xBD)) | 0xAB) + 43;
    unsigned int v50 = v54 >> 21;
    char v52 = (v54 >> 21) ^ 0x40;
    uint64_t v46 = a11;
  }
  else
  {
    unsigned int v45 = v40;
    uint64_t v46 = a11;
    if (v44 != 2) {
      goto LABEL_6;
    }
    int v47 = (v40 - 1494534790) & 0x5914CFF3;
    unsigned int v50 = *(_DWORD *)(v43 - 164);
    unsigned int v48 = *(_DWORD *)(v43 - 160);
    *(unsigned char *)(v43 - 172) = ((((v40 + 122) & 0xF3) - 98) ^ (v50 >> 21)) - ((v50 >> 20) & 0x54) + 42;
    *(unsigned char *)(v43 - 171) = ((v50 >> 13) ^ 0xBD) - ((2 * ((v50 >> 13) ^ 0xBD)) & 0x55) + 42;
    HIDWORD(v49) = v50 ^ 6;
    LODWORD(v49) = v48 ^ 0x20000000;
    *(unsigned char *)(v43 - 170) = ((v50 >> 5) ^ 0x9D) - ((2 * ((v50 >> 5) ^ 0x9D)) & 0x55) + 42;
    *(unsigned char *)(v43 - 169) = (v49 >> 29) - ((2 * (v49 >> 29)) & 0x55) + 42;
    *(unsigned char *)(v43 - 168) = ((v48 >> 21) ^ 0x11) - ((v48 >> 20) & 0x54) + 42;
    *(unsigned char *)(v43 - 167) = ((v48 >> 13) ^ 0x29) - ((2 * ((v48 >> 13) ^ 0x29)) & 0x55) + 42;
    *(unsigned char *)(v43 - 166) = ((v48 >> 5) ^ 0xB0) - ((2 * ((v48 >> 5) ^ 0xB0)) & 0x55) + 42;
    LOBYTE(v50) = (8 * v48) ^ 0xC8;
    char v51 = 80;
    char v52 = v50;
  }
  unsigned int v45 = (v47 + 1995644699) & 0x890CDB76;
  *(unsigned char *)(v43 - 165) = v45 + v52 - (v51 & (2 * v50)) - 10;
LABEL_6:
  unint64_t v56 = v43 - 228;
  v57.n128_u64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v57.n128_u64[1] = 0x2A2A2A2A2A2A2A2ALL;
  __n128 v58 = (__n128)vdupq_n_s32(0x5BFEEC4Fu);
  __n128 v59 = (__n128)vdupq_n_s32(0xDBFEEC4B);
  __n128 v60 = (__n128)vdupq_n_s32(0x5BFEEC5Bu);
  unsigned int v61 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v41 + 8 * (int)(v45 - 772));
  uint64_t v62 = *(unsigned int *)(v46 - 0x2970AB8229FC3CE6);
  uint64_t v63 = *(unsigned int *)(v46 - 0x2970AB8229FC3CE2);
  uint64_t v64 = *(unsigned int *)(v46 - 0x2970AB8229FC3CDELL);
  int v65 = *(_DWORD *)(v46 - 0x2970AB8229FC3CDALL);
  int v66 = *(unsigned __int8 *)(v46 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v66 == 2)
  {
    BOOL v71 = v56 >= (unint64_t)&a39 || (unint64_t)&a31 >= v43 - 164;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v41 + 8 * (int)((63 * v71) ^ (v40 + 3050))))(v64, a20, v63, 42, a5, a6, v62, v57, v58, v59, v60);
  }
  else if (v66 == 1)
  {
    BOOL v68 = v56 >= (unint64_t)&a39 || (unint64_t)&a31 >= v43 - 164;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v41 + 8 * (int)((((v40 + 419) ^ (v40 + 452)) * v68) ^ (v40 + 406))))(v64, a20, v63, 42, a5, a6, v62, v57, v58, v59, v60);
  }
  else
  {
    *(_DWORD *)(v46 - 0x2970AB8229FC3CE6) = 2 * (*(_DWORD *)(v46 - 0x2970AB8229FC3CE6) ^ v42)
                                            + v42
                                            - (v39 & (4 * (*(_DWORD *)(v46 - 0x2970AB8229FC3CE6) ^ v42)));
    *(_DWORD *)(v46 - 0x2970AB8229FC3CE2) = (*(_DWORD *)(v46 - 0x2970AB8229FC3CE2) ^ v42)
                                            + (v63 ^ v42)
                                            + v42
                                            - (v39 & (2 * ((*(_DWORD *)(v46 - 0x2970AB8229FC3CE2) ^ v42) + (v63 ^ v42))));
    *(_DWORD *)(v46 - 0x2970AB8229FC3CDELL) = (*(_DWORD *)(v46 - 0x2970AB8229FC3CDELL) ^ v42)
                                            + (v64 ^ v42)
                                            + v42
                                            - (v39 & (2 * ((*(_DWORD *)(v46 - 0x2970AB8229FC3CDELL) ^ v42) + (v64 ^ v42))));
    *(_DWORD *)(v46 - 0x2970AB8229FC3CDALL) = (*(_DWORD *)(v46 - 0x2970AB8229FC3CDALL) ^ v42)
                                            + (v65 ^ v42)
                                            + v42
                                            - (v39 & (2 * ((*(_DWORD *)(v46 - 0x2970AB8229FC3CDALL) ^ v42) + (v65 ^ v42))));
    return v61(v57, v58, v59, v60);
  }
}

uint64_t sub_22B34071C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v1 - 92163333) & 0x57E4E7F ^ ((v1 - 697) | 0x421) ^ 0x4C7) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_22B340768@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0x5454545454545454;
  v7.i64[1] = 0x5454545454545454;
  v8.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v8.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  *(int8x16_t *)(v3 + (a1 + v1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1830 * (((v4 - 2336) | 0x920u) - 2524 == ((v2 + 1) & 0x1FFFFFFF0))) ^ (v4 - 1895))))();
}

uint64_t sub_22B3407DC(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14)
{
  unsigned int v27 = v19 - 16;
  uint64_t v28 = (v17 - 2373) & v27;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(v18 + v27) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + v28 - 15), *(int8x16_t *)(a11 + v27)), veorq_s8(*(int8x16_t *)(v15 + v28 - 15), *(int8x16_t *)(v28 + v16 - 13))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * (((v20 == 16) * v21) ^ a13)))();
}

uint64_t sub_22B3407E8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3707 * (v2 > v0 + 822351889)) ^ (v0 + 1618120376))))();
}

uint64_t sub_22B340838@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((v2 >= (((a1 + 453) | 0x1D0) ^ 0x7C3u)) * ((a1 - 817334418) & 0x30B78DFA ^ 0x9BB)) ^ a1)))();
}

uint64_t sub_22B340890@<X0>(int a1@<W3>, uint64_t a2@<X6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v52 = *(_DWORD *)(v50 - 0x24B64731C5A67D93);
  if (v52 == 1191196491 || v52 == 1191196487) {
    return (*(uint64_t (**)(void))(v51 + 8 * ((35 * ((((a1 - 1757) ^ (a3 == v48)) & 1) == 0)) ^ (a1 - 1674))))();
  }
  *(void *)(a2 + 160) = a48;
  return v49();
}

uint64_t sub_22B3409D4()
{
  uint64_t v4 = *(unsigned __int8 *)(v1 + 6) - 1;
  if (v4 <= 3) {
    __asm { BR              X16 ; sub_22B320EDC sub_22B32517C sub_22B3AD3A8 sub_22B3BD96C }
  }
  *uint64_t v3 = -1;
  return (v0 - 10) ^ v2;
}

uint64_t sub_22B340A14()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((193
                                * (((2 * v2) & 0xDFFF3BFE ^ v1) + (v2 ^ 0x42FB4CA6) + 456421374 == ((v0 + 299185407) & 0xEE2ACDD9 ^ 0xB3408AD))) ^ (v0 + 2769))))();
}

void sub_22B340A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  LODWORD(STACK[0x2E4]) = (((v21 ^ (a6 - 2532)) + 1696287617) ^ v20)
                        + (a20 ^ v23)
                        + v23
                        - (v22 & (2 * ((((v21 ^ (a6 - 2532)) + 1696287617) ^ v20) + (a20 ^ v23))));
  JUMPOUT(0x22B35F9F8);
}

uint64_t sub_22B340AC0@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X8>)
{
  unsigned int v8 = a3 - 32;
  uint64_t v9 = v7 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a6 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a4 != 32) * ((a1 ^ a2) - 3487)) | a5)))();
}

uint64_t sub_22B340ACC()
{
  BOOL v4 = v1[7] == 0x1E8FA52FDE65BD14 || (v1[1] | v1[8]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 - 996299647) & 0x1B624FFF ^ 0xAEA ^ (6 * (v0 ^ 0x4B6)))) ^ v0)))();
}

uint64_t sub_22B340B44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v8 = v2 + 8;
  *(void *)(a2 + ((69 * (v3 ^ v6)) ^ (unint64_t)(a1 - 1690)) + v8) = v7;
  return (*(uint64_t (**)(void))(v5 + 8 * (((8 * (v4 != v8)) | (16 * (v4 != v8))) ^ v3)))();
}

uint64_t sub_22B340B4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68153) = *(unsigned char *)(*(void *)(a1 - 0x48A9B556C05DE579)
                                                                                       + 12);
  return (*(uint64_t (**)(void))(v2 + 21328))(0);
}

uint64_t sub_22B340BD8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((163
                                * (*(_DWORD *)(a1 - 0x24B64731C5A67D97) != ((v1 - 805) | 0x900)
                                                                           + ((v1 + 205) | 0x451)
                                                                           + 1001921404)) ^ v1)))();
}

void sub_22B340C34(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1990461019 * ((-1519284989 - (a1 | 0xA5718D03) + (a1 | 0x5A8E72FC)) ^ 0x756AD075);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B340CF4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == (v3 + 33)) * ((v3 + 1624) ^ a2)) ^ v3)))();
}

uint64_t sub_22B340D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((v4 < (v3 ^ 0xDE6u)) * ((v3 ^ 0x854) - 456)) ^ v3)))(a1, a2, a3);
}

uint64_t sub_22B340D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (a26 ^ (13
                                      * (((2 * (a12 - (a15 & 0x9B8B92BA) - 1688914349)) & 0x4CDFCBD6 ^ 0x88B8292)
                                       + ((a12 - (a15 & 0x9B8B92BA) - 1688914349) ^ 0xEBAA2CB6)
                                       - 604258592 != 40608971)))))();
}

void sub_22B340E10()
{
}

uint64_t sub_22B340E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v13 = v8 == -604050357 && v10 != a8;
  return (*(uint64_t (**)(void))(v11 + 8 * (int)(((((3 * (v9 ^ 0x21A)) ^ 0xFFFFFFB0) + (v9 ^ 0x298)) * v13) ^ v9)))();
}

uint64_t sub_22B340E70@<X0>(int a1@<W1>, unsigned int a2@<W2>, char a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v68 = STACK[0x2E8];
  unsigned int v69 = *(_DWORD *)(STACK[0x248]
                  - 0x2970AB8229FC3CE6
                  + 4 * ((a1 + 1849378219) >> (((a65 ^ 0x99) * a3) ^ 0x51)));
  *(unsigned char *)(v68 + (a1 + 1849378219)) = v69 ^ 0x13;
  *(unsigned char *)(v68 + (a1 + 1849378220)) = (v66 ^ BYTE1(v69)) - ((2 * (v66 ^ BYTE1(v69))) & 0x55) + 42;
  *(unsigned char *)(v68 + (a1 + 1849378221)) = (BYTE2(v69) ^ 0x95) + (~(v69 >> 15) | 0xAB) + 43;
  *(unsigned char *)(v68 + (a1 + 1849378222)) = (HIBYTE(v69) ^ 0x11) - ((v69 >> 23) & 0x54) + 42;
  unsigned int v70 = *v65 - 128829778;
  BOOL v71 = v70 < a2;
  BOOL v72 = v70 > 0xBC0F2D9;
  if (a2 > 0xBC0F2D9 != v71) {
    BOOL v72 = v71;
  }
  return (*(uint64_t (**)(void))(v67 + 8 * ((7 * v72) ^ a65 ^ 7)))();
}

void sub_22B340F7C(_DWORD *a1)
{
  unsigned int v1 = *a1 - 2009815553 * (((a1 | 0x6B3D1094) - (a1 & 0x6B3D1094)) ^ 0x9A363ED1);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B3410F4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((25 * (a3 + a2 + v3 - 1969076976 - 2389 >= ((v3 - 571918869) & 0x2216CFEF ^ 0xC6Du))) ^ v3)))();
}

uint64_t sub_22B34117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *a72 = v73 + 106;
  int v77 = 1503746353 * ((((2 * (v76 - 168)) | 0xB6D669F4) - (v76 - 168) - 1533752570) ^ 0x7D0AF64C);
  *(_DWORD *)(v76 - 168) = v77 + 1331781508;
  *(_DWORD *)(v76 - 144) = v74 - v77 + 727;
  *(void *)(v76 - 160) = a72;
  *(void *)(v76 - 152) = v72;
  (*(void (**)(uint64_t))(v75 + 8 * (v74 ^ 0xC63)))(v76 - 168);
  *(_DWORD *)(v76 - 152) = (v74 - 572) ^ (731811679
                                        * ((~((v76 - 168) ^ 0xEE7257E5 | 0x47963E3A)
                                          + (((v76 - 168) ^ 0xEE7257E5) & 0x47963E3A)) ^ 0x1FED3064));
  *(void *)(v76 - 168) = v72;
  *(void *)(v76 - 160) = a49 + (v73 << (((3 * (v74 ^ 0xCF) - 54) | 0xB0) + 19)) + 804751008;
  uint64_t v78 = (*(uint64_t (**)(uint64_t))(v75 + 8 * (v74 ^ 0xC69)))(v76 - 168);
  return (*(uint64_t (**)(uint64_t))(v75 + 8
                                                  * (v74 ^ ((4 * (v73 == 1828751262)) | (8 * (v73 == 1828751262))))))(v78);
}

uint64_t sub_22B3412D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  *(_DWORD *)(v42 - 248) = (a19 | a22) ^ 0xF5B478F3;
  int v43 = HIDWORD(a25) ^ 0xFD7;
  int v322 = a24 ^ HIDWORD(a25) ^ 0x7A604652;
  *(_DWORD *)(v42 - 256) = (a21 + (HIDWORD(a17) | (a18 << 8))) ^ 0x74A47BA1;
  unsigned int v323 = a20 ^ 0xA2E16D2E;
  int v319 = ((HIDWORD(a25) ^ 0xFD7) << 8) ^ 0x32A00;
  HIDWORD(a25) = (HIDWORD(a25) ^ 0xFD7) + 2507;
  uint64_t v321 = v40 & 0xFFFFFFF9 ^ (v43 + 68128401 + v319);
  uint64_t v318 = v40 & 0xFFFFFFF8 ^ 0x40F95BF;
  uint64_t v44 = *(unsigned __int8 *)(v41 + v321) ^ 0x9FLL;
  int v45 = (*(unsigned __int8 *)(a16 + v44) ^ 0x53) << 8;
  char v46 = *(unsigned char *)(a13 + (*(unsigned __int8 *)(v41 + v318) ^ 0xBALL));
  char v47 = v46 - 2 * ((v46 + 12) & 0x1B ^ v46 & 3) - 60;
  uint64_t v314 = v40 & 0xFFFFFFF1 ^ 0x40F95BF;
  LODWORD(v44) = ((((((v47 & 0xF0) >> 4) ^ 9)
                                                 - ((2 * (((v47 & 0xF0) >> 4) ^ 9)) & 0x10)
                                                 - 104) ^ v47) >> (v44 & 3)) >> (~(_BYTE)v44 & 3);
  unsigned __int8 v48 = (v44 + (~(2 * v44) | 0xCF) - 103) ^ v47;
  uint64_t v320 = v40 & 0xFFFFFFF0 ^ 0x40F95BF;
  uint64_t v317 = v40 & 0xFFFFFFFC ^ 0x40F95BB;
  int v49 = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(v41 + v320) ^ 0x72))
      - 2
      * ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(v41 + v320) ^ 0x72)) + 44) & 0x35 ^ *(unsigned char *)(a13 + (*(unsigned __int8 *)(v41 + v320) ^ 0x72)) & 1)
      + 96;
  int v50 = (v49 >> 3) ^ (v49 >> 7);
  uint64_t v304 = ((v50 ^ 6) - 2 * ((v50 ^ 6) & 0x55555555 ^ v50 & 1) + 52) ^ v49;
  uint64_t v51 = (((v50 ^ 6) - 2 * ((v50 ^ 6) & 0x55 ^ v50 & 1) + 52) ^ v49) | ((*(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(v41 + v314) ^ 0xA4 ^ -(*(unsigned __int8 *)(v41 + v314) ^ 0xA4) ^ (89 - ((*(unsigned __int8 *)(v41 + v314) ^ 0xA4 | 0x59) ^ *(unsigned char *)(v41 + v314) & 0x59u))) + 89) ^ 0x1FLL) << 8);
  LODWORD(v44) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(v41 + v317) ^ 0x7BLL))
               - 2
               * ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(v41 + v317) ^ 0x7BLL)) + 44) & 0x6F ^ *(unsigned char *)(a13 + (*(unsigned __int8 *)(v41 + v317) ^ 0x7BLL)) & 3);
  uint64_t v313 = v40 & 0xFFFFFFF5 ^ 0x40F95BB;
  uint64_t v315 = v40 & 0xFFFFFFF7 ^ 0x40F95BB;
  int v303 = (((((v44 + 24) & 0xF8u) >> 3) ^ 0x1D ^ (((-25 - v44) & 0x80) >> 7))
        - ((2 * ((((v44 + 24) & 0xF8u) >> 3) ^ 0x1D)) & 0x18)
        - 20) ^ (v44 + 24);
  int v52 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(v41 + v315) ^ 0xD2));
  if ((v52 & 4) != 0) {
    int v53 = 4;
  }
  else {
    int v53 = -4;
  }
  unsigned __int8 v54 = (v53 + (v52 ^ 0xDE)) ^ 0x25 ^ ((v53 + (v52 ^ 0xFFFFFFDE)) >> 1) & 0x75;
  uint64_t v311 = v40 & 0xFFFFFFFE ^ 0x40F95BB;
  char v55 = *(unsigned char *)(a15 + (*(unsigned __int8 *)(v41 + v311) ^ 0xC8));
  uint64_t v312 = v40 & 0xFFFFFFFB ^ 0x40F95BF;
  unsigned int v56 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(v41 + v312) ^ 0xC4));
  unsigned __int8 v57 = (((v55 ^ 0x57) + (v55 ^ 0xA6) + 1) ^ 0xFC) + (v55 ^ 0xA6);
  int v58 = v56 ^ 0x5B ^ (v56 >> 1) & 0x75;
  uint64_t v316 = v40 & 0xFFFFFFF3 ^ 0x40F95BF;
  unsigned int v59 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(v41 + v316) ^ 0x27));
  unsigned int v60 = v45 & 0xFFFFFF00 | (v58 << 24) | v48;
  int v61 = v60 + 555171909 - 2 * (v60 & 0x21004047 ^ v48 & 2);
  uint64_t v308 = v40 & 0xFFFFFFF2 ^ 0x40F95BF;
  HIDWORD(a40) = 68130239;
  unsigned __int8 v62 = (((v59 >> 1) & 0x75 ^ 0x65) - ((2 * ((v59 >> 1) & 0x75 ^ 0x65)) & 0xA8) - 34) ^ v59;
  char v63 = *(unsigned char *)(a15 + (*(unsigned __int8 *)(v41 + v308) ^ 0x1ELL));
  uint64_t v307 = v40 & 0xFFFFFFFA ^ 0x40F95BF;
  unint64_t v64 = ((unint64_t)((v63 ^ 0xA6) + ((2 * v63) & 0xE4 ^ 0xBB) - 13) << 16) | ((v62 ^ 0x7ELL) << 24) | v51;
  uint64_t v310 = v40 & 0xFFFFFFF6 ^ 0x40F95BB;
  uint64_t v65 = ((*(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(v41 + (v40 & 0xFFFFFFF5 ^ 0x40F95BB)) ^ 0x83)) ^ 0x76) << 8) | ((*(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(v41 + v310) ^ 0x21)) ^ 0x7ELL) << 16);
  int v66 = *(unsigned __int8 *)(a15
                           + ((*(unsigned __int8 *)(v41 + v307) - 2 * (*(unsigned char *)(v41 + v307) & 0xE3u) + 227) ^ 0x34)) ^ 0x3C;
  int v67 = ((v66 << 17) & 0x740000) + ((v66 << 16) ^ 0x333ABCFE) - 859487486;
  unsigned int v68 = (v67 - (v67 | v61 ^ 0x21174045)) ^ ((v61 ^ 0xDEE8BFBA) + 1);
  int v69 = (v68 + 555171909 - ((2 * v68) & 0x422E808A)) ^ v61;
  uint64_t v309 = v40 & 0xFFFFFFF4 ^ 0x40F95BB;
  int v70 = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(v41 + v309) ^ 0xF5));
  uint64_t v306 = v40 ^ 0x40F95BBu;
  HIDWORD(a31) = v40;
  int v71 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(v41 + v306) ^ 0x7ELL));
  HIDWORD(v72) = v71 ^ 0x1E;
  LODWORD(v72) = ~v71 << 24;
  unsigned __int8 v73 = ((((v70 - ((2 * v70 + 88) & 0x54) - 42) >> 3) ^ (((41
                                                                                           - (v70
                                                                                            - ((2 * v70 + 88) & 0x54))) & 0x80) >> 7) ^ 0x15)
       - (((v70 - ((2 * v70 + 88) & 0x54u) - 42) >> 2) & 0x14)
       - 86) ^ (v70 - ((2 * v70 + 88) & 0x54) - 42);
  unsigned int v74 = ((((v72 >> 30) ^ 0x93) >> 2) | (((v72 >> 30) ^ 0xFFFFFF93) << 6)) ^ 0x12;
  int v75 = (v74 >> 1) & 0x75 ^ v74;
  unsigned int v76 = (v57 << 16) | ((v75 ^ 0xC) << 24);
  uint64_t v77 = (uint64_t)*(&off_26DE9F480 + (v43 ^ 0x280));
  int v78 = *(_DWORD *)(v77 + 4 * (v75 ^ 2u));
  unsigned int v79 = v78 - ((2 * v78 + 1669798366) & 0xE260E8AC) + 586416453;
  unint64_t v80 = v65 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v54 << 24);
  HIDWORD(a28) = v43;
  uint64_t v81 = (uint64_t)*(&off_26DE9F480 + (v43 ^ 0x3D5));
  int v82 = (char *)*(&off_26DE9F480 + (v43 ^ 0x221)) - 12;
  int v83 = *(_DWORD *)(v81 + 4 * (BYTE1(v80) ^ 0xB5)) ^ ((BYTE1(v80) ^ 0x76)
                                                      + 1344757788
                                                      - 2 * (((v80 >> 8) ^ 0x260C76) & 0x1D ^ (v80 >> 8) & 1)) ^ v79 ^ (((v64 ^ 0xB24B45B) >> 16) - 201333533 - ((2 * ((v64 ^ 0xB24B45B) >> 16)) & 0x1C6)) ^ *(_DWORD *)&v82[4 * (((v64 ^ 0xB24B45B) >> 16) ^ 0x5CLL)] ^ (16 * (v79 ^ 0x1307456) * (v79 ^ 0x1307456) - ((32 * (v79 ^ 0x1307456) * (v79 ^ 0x1307456)) & 0xE260E8A0) + 1899000918);
  unsigned int v84 = v69 + v67;
  int v85 = (char *)*(&off_26DE9F480 + (v43 ^ 0x386)) - 12;
  unsigned int v86 = (v83 - 1886659127 - ((2 * v83) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v69 ^ 0x11)];
  int v87 = *(_DWORD *)(v77 + 4 * (HIBYTE(v84) ^ 0xA));
  unsigned int v88 = v87 + 289882275 + ~((2 * v87 + 1669798366) & 0xBF076766);
  unsigned int v89 = (((16 * v88) ^ 0xF83B3B30) * (v88 ^ 0xF83B3B3)) ^ *(_DWORD *)&v82[4 * (BYTE2(v76) ^ 9)] ^ ((BYTE2(v76) ^ 0x55)
                                                                                                 - 201333533
                                                                                                 - ((2 * (HIWORD(v76) ^ 0xB455)) & 0x1C6));
  HIDWORD(v299) = v73;
  int v90 = (v89 - 1886659127 - ((2 * v89) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v73 ^ 0x67)];
  int v91 = *(_DWORD *)(v77 + 4 * (v54 ^ 0x26u));
  unsigned int v92 = *(_DWORD *)(v81 + 4 * (((unsigned __int16)(v64 ^ 0xB45B) >> 8) ^ 0xC3u)) ^ (((unsigned __int16)(v64 ^ 0xB45B) >> 8) + 1344757788 - (((v64 ^ 0xB24B45B) >> 7) & 0x38)) ^ v88 ^ (v90 - ((2 * v90) & 0xBF076766) + 1602466739);
  unsigned int v93 = v91 - ((2 * v91 + 1669798366) & 0xF8A3BEB8) - 1374327733;
  unsigned int v94 = BYTE2(v84) ^ (16 * (v93 ^ 0xC51DF5C) * (v93 ^ 0xC51DF5C)
                    - 201333533
                    - ((32 * (v93 ^ 0xC51DF5C) * (v93 ^ 0xC51DF5C)) & 0xE7FFC9C0)) ^ 0xD8 ^ *(_DWORD *)&v82[4 * (BYTE2(v84) ^ 0x84)];
  uint64_t v305 = v40 & 0xFFFFFFFD ^ 0x40F95BB;
  uint64_t v95 = *(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(*(void *)(v42 - 232) + v305) ^ 0x61));
  LODWORD(v299) = v95 ^ 0xFA;
  int v96 = v95 ^ 0xFA ^ *(_DWORD *)(v81 + 4 * (v95 ^ 0xAD)) ^ 0x94 ^ (v94 + 1344757788 - ((2 * v94) & 0xA04EC038));
  unsigned int v97 = v93 ^ 0xB6270AB2 ^ (v96 - ((2 * v96) & 0xF8A3BEB8) - 61743268);
  LODWORD(v95) = *(_DWORD *)(v77 + 4 * (v62 ^ 0xCFu));
  int v98 = v95 - ((2 * v95 + 59185630) & 0x1E03F2E2);
  LODWORD(v95) = v97 & 0xDA620CBD ^ *(_DWORD *)&v85[4 * (v304 ^ 0x6D)] ^ ((v97 & 0x259DF342)
                                                                                         - 1886659127
                                                                                         - ((2 * v97) & 0xB13A280));
  unint64_t v301 = v80;
  unsigned int v99 = *(_DWORD *)&v82[4 * (BYTE2(v80) ^ 0x50)] ^ ((BYTE2(v80) ^ 0xC) - 201333533 - ((v80 >> 15) & 0x1C6));
  unsigned int v100 = (((16 * (v98 - 1060796832)) ^ 0xF01F9710) * ((v98 - 1060796832) ^ 0xF01F971)) ^ v99;
  unint64_t v300 = __PAIR64__(v76, v84);
  int v101 = *(_DWORD *)(v81 + 4 * (BYTE1(v84) ^ 0xC5u)) ^ ((BYTE1(v84) ^ 6)
                                                        + 1344757788
                                                        - ((2 * ((v84 >> 8) ^ 0xAD806)) & 0x38)) ^ (v98 - 1060796832) ^ (v100 + 251787633 - 2 * (v100 & 0xF01F975 ^ v99 & 4));
  HIDWORD(a17) = v303;
  unsigned int v102 = (v101 - 1886659127 - ((2 * v101) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v303 ^ 0x6C)];
  int v103 = *(_DWORD *)(v77 + 4 * (HIBYTE(v86) ^ 0x55));
  unsigned int v104 = v103 - ((2 * v103 + 1669798366) & 0x9FE4AF96) + 28697786;
  int v105 = BYTE2(v102) ^ 0x5F;
  unsigned int v106 = *(_DWORD *)(v81 + 4 * (BYTE1(v95) ^ 0xB2u)) ^ *(_DWORD *)&v82[4
                                                                       * (v105 - ((2 * (HIWORD(v102) ^ 0xDB5F)) & 0xB8))
                                                                       + 368] ^ (16
                                                                               * (v104 ^ 0xFF257CB)
                                                                               * (v104 ^ 0xFF257CB)
                                                                               - 201333533
                                                                               - ((32
                                                                                 * (v104 ^ 0xFF257CB)
                                                                                 * (v104 ^ 0xFF257CB)) & 0xE7FFC9C0)) ^ ((BYTE1(v95) ^ 0xDC91EA33) + 1344757788 + ((2 * (BYTE1(v95) ^ 0xDC91EA33)) & 0x38 ^ 0x5FFD3FFF) + 1);
  int v107 = v105 ^ (v106 - 1886659127 - ((2 * v106) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v92 ^ 0xA1)];
  unsigned int v108 = (v107 - ((2 * v107) & 0x9FE4AF96) + 1341282251) ^ v104;
  int v109 = *(_DWORD *)(v77 + 4 * (HIBYTE(v92) ^ 0xE1));
  int v110 = v109 - ((2 * v109 + 1669798366) & 0x5791B43C) - 578001139;
  int v111 = *(_DWORD *)&v82[4 * (BYTE2(v86) ^ 0xC)];
  int v112 = BYTE2(v86) ^ 0x6AB6E0A0;
  unsigned int v113 = (v112
        + (((BYTE2(v86) ^ 0x50) - 201333533 - 2 * ((HIWORD(v86) ^ 0x5550) & 0xE7 ^ HIWORD(v86) & 4)) ^ 0x95491F0F ^ v111)
        + 1) ^ ((v111 ^ 0xC001B1C) + 1);
  unsigned int v114 = *(_DWORD *)(v81 + 4 * (BYTE1(v102) ^ 0xD5u)) ^ (((v113 - 201333533 - ((2 * v113) & 0xE7FFC9C6)) ^ v111) + v112) ^ ((BYTE1(v102) ^ 0x16) + 1344757788 - ((2 * ((v102 >> 8) ^ 0xDB5F16)) & 0x38));
  int v115 = *(_DWORD *)(v77 + 4 * (BYTE3(v95) ^ 0x4B));
  unsigned int v116 = (((16 * v110) ^ 0xBC8DA1E0) * (v110 ^ 0xBC8DA1E)) ^ v114;
  unsigned int v117 = v115 - ((2 * v115 + 1669798366) & 0xCA131DA4) - 1764942911;
  int v118 = (v116 - 1886659127 - ((2 * v116) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v95 ^ 0x4E)];
  unsigned int v119 = *(_DWORD *)&v82[4 * (((v92 ^ 0x5BD90397) >> 16) ^ 0x5C)] ^ ((BYTE1(v86) ^ 0xC1)
                                                                                    + 1344757788
                                                                                    - ((v86 >> 7) & 0x38)) ^ *(_DWORD *)(v81 + 4 * (BYTE1(v86) ^ 2u)) ^ (((v92 ^ 0x5BD90397) >> 16) - 201333533 - (((v92 ^ 0x5BD90397) >> 15) & 0x1C6)) ^ v117 ^ (16 * (v117 ^ 0x5098ED2) * (v117 ^ 0x5098ED2) - ((32 * (v117 ^ 0x5098ED2) * (v117 ^ 0x5098ED2)) & 0xCA131DA0) - 452358446);
  LODWORD(v80) = *(_DWORD *)(v77 + 4 * (HIBYTE(v102) ^ 0xDB));
  unsigned int v120 = (v119 - 1886659127 - ((2 * v119) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v102 ^ 0xDC)];
  int v121 = v110 ^ 0x2E7DDC58 ^ (v118 - ((2 * v118) & 0x5791B43C) + 734583326);
  int v122 = *(_DWORD *)&v82[4 * (BYTE2(v95) ^ 0x1D)] ^ (((unsigned __int16)(v92 ^ 0x397) >> 8)
                                                   + 1344757788
                                                   - ((v92 >> 7) & 0x38)) ^ (v80
                                                                           - 1312584465
                                                                           + (16 * v80 + 473485040) * (v80 + 29592815)
                                                                           - 2
                                                                           * (((16 * v80 + 473485040) * (v80 + 29592815)) & (v80 + 834899183))) ^ ((BYTE2(v95) ^ 0x41) - 201333533 - 2 * ((WORD1(v95) ^ 0x4B41) & 0xEB ^ WORD1(v95) & 8)) ^ *(_DWORD *)(v81 + 4 * (((unsigned __int16)(v92 ^ 0x397) >> 8) ^ 0xC3u));
  unsigned int v123 = (v122 - 1886659127 - ((2 * v122) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v86 ^ 0x9C)];
  int v124 = *(_DWORD *)(v77 + 4 * (HIBYTE(v108) ^ 0xCE));
  int v125 = v124 - ((2 * v124 + 465374) & 0x403F4E) + 837004438;
  int v126 = *(_DWORD *)(v81 + 4 * (BYTE1(v120) ^ 0xE1u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v123) ^ 0x64)] ^ v125 ^ ((BYTE1(v120) ^ 0x22) + 1344757788 - ((v120 >> 7) & 0x38)) ^ ((BYTE2(v123) ^ 0x38) - 201333533 - ((2 * (HIWORD(v123) ^ 0x7838)) & 0x1C6)) ^ (16 * (v125 ^ 0x201FA7) * (v125 ^ 0x201FA7) - ((32 * (v125 ^ 0x201FA7) * (v125 ^ 0x201FA7)) & 0x403F40) - 2145378393);
  LODWORD(v95) = v121
               - ((2 * v121) & 0x5C874964)
               - 1371298638
               - ((2 * (v121 - ((2 * v121) & 0x5C874964) - 1371298638)) & 0x6A62D532)
               - 1255052647;
  int v127 = *(_DWORD *)(v77 + 4 * (BYTE3(v95) ^ 0xF));
  unsigned int v128 = (v126 - 1886659127 - ((2 * v126) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v95 ^ 0xAF)];
  int v129 = v127 - ((2 * v127 + 1669798366) & 0x52996F1A) + 1527792764;
  int v130 = *(_DWORD *)(v77 + 4 * (HIBYTE(v120) ^ 0xF8));
  unsigned int v131 = *(_DWORD *)(v81 + 4 * (BYTE1(v123) ^ 0xF4u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v108) ^ 0xED)] ^ v129 ^ __ROR4__(__ROR4__(*(_DWORD *)&v85[4 * (v120 ^ 0x4C)] ^ 0x7385AC7E, 6) ^ 0xB43B891E, 26) ^ ((BYTE1(v123) ^ 0x37) + 1344757788 - ((2 * ((v123 >> 8) ^ 0x783837)) & 0x38)) ^ ((BYTE2(v108) ^ 0xB1) - 201333533 - ((2 * (HIWORD(v108) ^ 0xCEB1)) & 0x1C6)) ^ (16 * (v129 ^ 0x94CB78D) * (v129 ^ 0x94CB78D) - ((32 * (v129 ^ 0x94CB78D) * (v129 ^ 0x94CB78D)) & 0x52996F00) - 1454590067);
  unsigned int v132 = v130 - ((2 * v130 + 1669798366) & 0xD7EB388E) + 498673974;
  unsigned int v133 = v132 ^ (16 * (v132 ^ 0xBF59C47) * (v132 ^ 0xBF59C47)
               - ((32 * (v132 ^ 0xBF59C47) * (v132 ^ 0xBF59C47)) & 0xD7EB3880)
               + 1811258439) ^ ((BYTE2(v95) ^ 0x31) - 201333533 - ((2 * (BYTE2(v95) ^ 0x31)) & 0xFFFFFFC7)) ^ *(_DWORD *)&v82[4 * (BYTE2(v95) ^ 0x6D)];
  LODWORD(v80) = BYTE1(v108) ^ 0x5F;
  unsigned int v134 = (v133 + 1344757788 - ((2 * v133) & 0xA04EC038)) ^ *(_DWORD *)(v81
                                                                     + 4
                                                                     * (v80
                                                                      - ((2 * ((v108 >> 8) ^ 0xCEB15F)) & 0x186)
                                                                      + 195));
  unsigned int v135 = (v134 - 1886659127 - ((2 * v134) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v123 ^ 0x31)];
  int v136 = *(_DWORD *)(v77 + 4 * (HIBYTE(v123) ^ 0xC2));
  unsigned int v137 = v136 - ((2 * v136 + 1669798366) & 0x946D30E6) + 2079991138;
  LODWORD(v95) = (v95 >> 8) ^ 0xB5316A;
  int v138 = *(_DWORD *)&v82[4 * (BYTE2(v120) ^ 0xE2)] ^ ((BYTE2(v120) ^ 0xBE)
                                                    - 201333533
                                                    - ((2 * (HIWORD(v120) ^ 0xF8BE)) & 0x1C6)) ^ v137 ^ (16 * (v137 ^ 0xA369873) * (v137 ^ 0xA369873) - ((32 * (v137 ^ 0xA369873) * (v137 ^ 0xA369873)) & 0x946D30E0) - 902391693) ^ (v95 + 1344757788 - ((2 * v95) & 0x38)) ^ *(_DWORD *)(v81 + 4 * (v95 ^ 0xC3u));
  LODWORD(v95) = (v138 - 1886659127 - ((2 * v138) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v108 ^ 0xF9)];
  unsigned int v139 = (v131 ^ 0xEE4541AA) >> ((v135 ^ v80) & 8) >> ((v135 ^ v80) & 8 ^ 8);
  int v140 = *(_DWORD *)(v77 + 4 * (HIBYTE(v128) ^ 0xF2));
  unsigned int v141 = v140 - ((2 * v140 + 1669798366) & 0xF3DDE5EA) + 733118436;
  unsigned int v142 = ((BYTE2(v95) ^ 0x87) - 201333533 - 2 * ((WORD1(v95) ^ 0x6487) & 0xF3 ^ WORD1(v95) & 0x10)) ^ *(_DWORD *)&v82[4 * (BYTE2(v95) ^ 0xDB)] ^ (((16 * v141) ^ 0x9EEF2F50) * (v141 ^ 0x9EEF2F5));
  unsigned int v143 = v135 ^ v80 ^ 0xF637E047;
  int v144 = *(_DWORD *)(v77 + 4 * (HIBYTE(v131) ^ 0x54));
  int v145 = v141 ^ (BYTE1(v143) + 1344757788 - ((v135 >> 7) & 0x38)) ^ *(_DWORD *)(v81 + 4 * (BYTE1(v143) ^ 0xC3u)) ^ (v142 + 2045702901 - 2 * (v142 & 0x79EEF2FD ^ (((BYTE2(v95) ^ 0x87) - 29 - 2 * ((BYTE2(v95) ^ 0x87) & 0xF3 ^ BYTE2(v95) & 0x10)) ^ v82[4 * (BYTE2(v95) ^ 0xDB)]) & 8));
  unsigned int v146 = (v145 - 1886659127 - ((2 * v145) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v131 ^ 0x9C)];
  unsigned int v147 = v144 - ((2 * v144 + 1669798366) & 0xD48F4E40) + 470496271;
  unsigned int v148 = *(_DWORD *)(v81 + 4 * (BYTE1(v95) ^ 0x8Cu)) ^ *(_DWORD *)&v82[4 * (BYTE2(v128) ^ 0x97)] ^ *(_DWORD *)&v85[4 * ((v135 ^ v80) ^ 0x71)] ^ v147 ^ ((BYTE2(v128) ^ 0xCB) - 201333533 - 2 * ((HIWORD(v128) ^ 0xF2CB) & 0xE7 ^ HIWORD(v128) & 4)) ^ ((BYTE1(v95) ^ 0x4F) + 1344757788 - ((2 * ((v95 >> 8) ^ 0x64874F)) & 0x38)) ^ (16 * (v147 ^ 0xA47A720) * (v147 ^ 0xA47A720) - ((32 * (v147 ^ 0xA47A720) * (v147 ^ 0xA47A720)) & 0xD48F4E40) + 1783080736);
  int v149 = *(_DWORD *)(v77 + 4 * (HIBYTE(v135) ^ 0x4C));
  unsigned int v150 = v149 - ((2 * v149 + 1669798366) & 0xCE604EAE) + 418624582;
  unsigned int v151 = v150 ^ (((v131 ^ 0xEE4541AA) >> 16)
               - 201333533
               + (~((v131 ^ 0xEE4541AA) >> 15) | 0xFFFFFE39)
               + 1) ^ *(_DWORD *)&v82[4 * (((v131 ^ 0xEE4541AA) >> 16) ^ 0x5C)] ^ (16 * (v150 ^ 0x7302757) * (v150 ^ 0x7302757)
                                                                                                  - ((32 * (v150 ^ 0x7302757) * (v150 ^ 0x7302757)) & 0xCE604EA0)
                                                                                                  + 1731209047);
  unsigned int v152 = *(_DWORD *)(v81 + 4 * (BYTE1(v128) ^ 0xB2u)) ^ BYTE1(v128) ^ 0x71 ^ (v151
                                                                              + 1344757788
                                                                              - ((2 * v151) & 0xA04EC038));
  int v153 = *(_DWORD *)(v77 + 4 * (BYTE3(v95) ^ 0xDE));
  LODWORD(v95) = (v152 - 1886659127 - ((2 * v152) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v95 ^ 0x6C)];
  int v154 = v153 - ((2 * v153 + 1669798366) & 0x4264434E) + 1391832726;
  int v155 = *(_DWORD *)(v81 + 4 * (v139 ^ 0xC3u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v143) ^ 0x5C)] ^ v154 ^ (BYTE2(v143) - 201333533 - ((v143 >> 15) & 0x1C6)) ^ (v139 + 1344757788 - ((2 * v139) & 0x38)) ^ (16 * (v154 ^ 0x13221A7) * (v154 ^ 0x13221A7) - ((32 * (v154 ^ 0x13221A7) * (v154 ^ 0x13221A7)) & 0x42644340) - 1590550105);
  unsigned int v156 = (v155 - 1886659127 - ((2 * v155) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v128 ^ 0x66)];
  int v157 = *(_DWORD *)(v77 + 4 * (HIBYTE(v146) ^ 0xEB));
  unsigned int v158 = v157 - ((2 * v157 + 1669798366) & 0xE1F6BC92) - 1564546248;
  int v159 = *(_DWORD *)&v82[4 * (BYTE2(v156) ^ 0xED)];
  unsigned int v160 = v158 ^ *(_DWORD *)(v81 + 4 * (BYTE1(v95) ^ 0xEu)) ^ ((BYTE1(v95) ^ 0xCD)
                                                              + 1344757788
                                                              - 2
                                                              * ((BYTE1(v95) ^ 0xCD) & 0x1E ^ (v95 >> 8) & 2)) ^ (__ROR4__((((BYTE2(v156) ^ 0x6AB6E041) << 11) & 0x31005800 | 0xA6085D5) ^ __ROR4__(v159 & 0xC697B70B ^ 0xC297A403, 21), 11) ^ 0xF831CC10 | (BYTE2(v156) ^ 0x6AB6E041) & 0x282040F4 ^ v159 & 0x396848F4) ^ (~((32 * (v158 ^ 0xFB5E49) * (v158 ^ 0xFB5E49)) & 0xE1F6BC80) + 16 * (v158 ^ 0xFB5E49) * (v158 ^ 0xFB5E49) - 251961782);
  unsigned int v161 = ((v160 ^ 0x316840E0) - 1886659127 - 2 * ((v160 ^ 0x316840E0) & 0xF8BDDCB ^ v160 & 2)) ^ *(_DWORD *)&v85[4 * (v148 ^ 0x38)];
  int v162 = *(_DWORD *)(v77 + 4 * (HIBYTE(v148) ^ 0x3F));
  int v163 = v162 - ((2 * v162 + 1669798366) & 0x5CB57BE2) - 534885664;
  LODWORD(v80) = *(_DWORD *)(v77 + 4 * (BYTE3(v95) ^ 0xE));
  int v164 = *(_DWORD *)(v81 + 4 * (BYTE1(v156) ^ 0x36u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v146) ^ 0x53)] ^ v163 ^ ((BYTE1(v156) ^ 0xF5) + 1344757788 - ((2 * ((v156 >> 8) ^ 0xCCB1F5)) & 0x38)) ^ ((BYTE2(v146) ^ 0xF) - 201333533 - 2 * ((HIWORD(v146) ^ 0xEB0F) & 0xF3 ^ HIWORD(v146) & 0x10)) ^ (16 * (v163 ^ 0xE5ABDF1) * (v163 ^ 0xE5ABDF1) - ((32 * (v163 ^ 0xE5ABDF1) * (v163 ^ 0xE5ABDF1)) & 0x5CB57BE0) + 777698801);
  unsigned int v165 = (v164 - 1886659127 - ((2 * v164) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v95 ^ 0xE6)];
  int v166 = v80 - ((2 * v80 + 1669798366) & 0x49181A1C) - 699426307;
  unsigned int v167 = (((v148 ^ 0x85E8810E) >> 16) - 201333533 - (((v148 ^ 0x85E8810E) >> 15) & 0x1C6)) ^ *(_DWORD *)(v81 + 4 * (BYTE1(v146) ^ 0x1Eu)) ^ *(_DWORD *)&v82[4 * (((v148 ^ 0x85E8810E) >> 16) ^ 0x5C)] ^ v166 ^ ((BYTE1(v146) ^ 0xDD) + 1344757788 - ((2 * ((v146 >> 8) ^ 0xEB0FDD)) & 0x38)) ^ (16 * (v166 ^ 0x48C0D0E) * (v166 ^ 0x48C0D0E) - ((32 * (v166 ^ 0x48C0D0E) * (v166 ^ 0x48C0D0E)) & 0x49181A00) + 613158158);
  unsigned int v168 = (v167 - 1886659127 - ((2 * v167) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v156 ^ 0xC)];
  int v169 = *(_DWORD *)(v77 + 4 * (HIBYTE(v156) ^ 0x76));
  int v170 = v169 - ((2 * v169 + 596056542) & 0x36A78362) + 1293373088;
  unsigned int v171 = *(_DWORD *)&v82[4 * (BYTE2(v95) ^ 0xC3)] ^ (((unsigned __int16)(v148 ^ 0x810E) >> 8)
                                                   + 1344757788
                                                   - ((v148 >> 7) & 0x38)) ^ *(_DWORD *)(v81
                                                                                       + 4
                                                                                       * (((unsigned __int16)(v148 ^ 0x810E) >> 8) ^ 0xC3u)) ^ v170 ^ ((BYTE2(v95) ^ 0x9F) - 201333533 - ((2 * (WORD1(v95) ^ 0xE9F)) & 0x1C6)) ^ (16 * (v170 ^ 0xB53C1B1) * (v170 ^ 0xB53C1B1) - ((32 * (v170 ^ 0xB53C1B1) * (v170 ^ 0xB53C1B1)) & 0x36A78360) - 1689009743);
  LODWORD(v95) = (v171 - 1886659127 - ((2 * v171) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v146 ^ 0x21)];
  int v172 = *(_DWORD *)(v77 + 4 * (HIBYTE(v161) ^ 0xEB));
  unsigned int v173 = v172 - ((2 * v172 + 1669798366) & 0xFA6B3376) + 788080298;
  HIDWORD(v72) = *(_DWORD *)(v81 + 4 * (BYTE1(v168) ^ 8u)) ^ ((BYTE1(v168) ^ 0xCB)
                                                              + 1344757788
                                                              - ((2 * ((v168 >> 8) ^ 0x5AFDCB)) & 0x38)) ^ 0xDC91EA42;
  LODWORD(v72) = HIDWORD(v72);
  LODWORD(v72) = (v72 >> 27) ^ __ROR4__(*(_DWORD *)&v82[4 * (BYTE2(v95) ^ 0x73)] ^ 0x6AB6E0F0 ^ v173 ^ ((BYTE2(v95) ^ 0x2F)- 201333533- ((2* (WORD1(v95) ^ 0x262F)) & 0x1C6)) ^ (16 * (v173 ^ 0xD3599BB) * (v173 ^ 0xD3599BB) - ((32 * (v173 ^ 0xD3599BB) * (v173 ^ 0xD3599BB)) & 0xFA6B3360) + 2100664763), 27) ^ 0x5DC97527;
  HIDWORD(v72) = v72;
  unsigned int v174 = ((v72 >> 5) - 1886659127 - ((2 * (v72 >> 5)) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4
                                                                                     * (v165 ^ 0xC1)];
  int v175 = *(_DWORD *)(v77 + 4 * (HIBYTE(v165) ^ 0xBF));
  int v176 = v175 - ((2 * v175 + 1669798366) & 0x544CFDE0) - 605418529;
  int v177 = BYTE2(v161);
  unsigned int v178 = *(_DWORD *)(v81 + 4 * (BYTE1(v95) ^ 0xA1u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v161) ^ 0x7B)] ^ ((BYTE1(v95) ^ 0x62) + 1344757788 - ((v95 >> 7) & 0x38)) ^ (16 * (v176 ^ 0xA267EF0) * (v176 ^ 0xA267EF0) - 201333533 - ((32 * (v176 ^ 0xA267EF0) * (v176 ^ 0xA267EF0)) & 0xE7FFC9C0));
  int v179 = (v178 - 1886659127 - ((2 * v178) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v168 ^ 6)];
  unsigned int v180 = (v179 - ((2 * v179) & 0x544CFDE0) + 707165936) ^ v176;
  int v181 = *(_DWORD *)(v77 + 4 * (HIBYTE(v168) ^ 0x5A));
  int v182 = v181 - ((2 * v181 + 1669798366) & 0x4113FC96) + 1380813626;
  int v183 = (((16 * v182) ^ 0x89FE4B0) * (v182 ^ 0x89FE4B)) ^ *(_DWORD *)&v82[4 * (BYTE2(v165) ^ 0x31)] ^ ((BYTE2(v165) ^ 0x6D) - 201333533 - ((2 * (HIWORD(v165) ^ 0xBF6D)) & 0x1C6));
  int v184 = v182 ^ *(_DWORD *)(v81 + 4 * (BYTE1(v161) ^ 0x42u)) ^ ((BYTE1(v161) ^ 0x81)
                                                                + 1344757788
                                                                - ((v161 >> 7) & 0x38)) ^ (v183
                                                                                         - ((2 * v183) & 0x4113FC96)
                                                                                         - 1601569205);
  unsigned int v185 = (BYTE3(v95) & 0xA2 ^ 0x42DA0083 | BYTE3(v95) & 0x58) + 536877571;
  LODWORD(v72) = __ROR4__(((v185 & 0x21A44 | BYTE3(v95) & 0xBA) ^ 0xFFFDE563) + 187, 17);
  unsigned int v186 = (((v185 ^ 0x9D25E55B) + 1) ^ (((v185 << 15) ^ v72 ^ 0xF42EDB43) >> 15) ^ (((v185 << 15) ^ v72 ^ 0xF42EDB43) << 17) ^ 0xB687F2F9)
       + (BYTE3(v95) & 5 ^ 0xBE);
  unsigned int v187 = (v184 - 1886659127 - ((2 * v184) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v95 ^ 0xFB)];
  int v188 = *(_DWORD *)(v77 + 4 * v186) - ((2 * *(_DWORD *)(v77 + 4 * v186) + 1669798366) & 0x635AEA84) - 479133135;
  unsigned int v189 = BYTE2(v168) ^ *(_DWORD *)&v82[4 * (BYTE2(v168) ^ 0xA1)] ^ *(_DWORD *)(v81 + 4 * (BYTE1(v165) ^ 0x18u)) ^ ((BYTE1(v165) ^ 0xDB) + 1344757788 - ((2 * ((v165 >> 8) ^ 0xBF6DDB)) & 0x38)) ^ 0xFD ^ (16 * (v188 ^ 0x1AD7542) * (v188 ^ 0x1AD7542) - 201333533 - ((32 * (v188 ^ 0x1AD7542) * (v188 ^ 0x1AD7542)) & 0xE7FFC9C0));
  int v190 = *(_DWORD *)&v85[4 * (v161 ^ 0x34)];
  LODWORD(v80) = (v190 & 0x2000 ^ 0xBFE7F3DE) + 2 * (v190 & 0x2000);
  int v191 = v188 ^ 0x44CB3CA8 ^ (v189 - ((2 * v189) & 0x635AEA84) + 833451330);
  BOOL v192 = (v191 & (v80 + 1075317794)) == 0;
  int v193 = v80 + 1994063232;
  int v194 = -156572356 - v80;
  if (!v192) {
    int v193 = v194;
  }
  unsigned int v195 = (v191 - 918745438 + v193) ^ v190 & 0xFFFFDFFF;
  int v196 = *(_DWORD *)(v77 + 4 * (HIBYTE(v174) ^ 0x8F));
  unsigned int v197 = v196 - ((2 * v196 + 1669798366) & 0x942EA586) - 69541966;
  unsigned int v198 = v180 ^ v177;
  int v199 = *(_DWORD *)&v85[4 * ((v180 ^ v177) ^ 0x33)];
  unsigned int v200 = ((v199 ^ 0x8298142C)
        + (v199 ^ 0x8F8BDDC9)
        - 1886659126
        - ((2 * ((v199 ^ 0x8298142C) + (v199 ^ 0x8F8BDDC9) + 1)) & 0x1F17BB92)) ^ v199;
  int v201 = ((v195 ^ 0x539312BB) >> 16);
  unsigned int v202 = *(_DWORD *)(v81 + 4 * (BYTE1(v187) ^ 0x89u)) ^ v197 ^ (16 * (v197 ^ 0xA1752C3) * (v197 ^ 0xA1752C3)
                                                                - 201333533
                                                                - ((32 * (v197 ^ 0xA1752C3) * (v197 ^ 0xA1752C3)) & 0xE7FFC9C0)) ^ (((2 * ((((v199 ^ 0x8298142C) + (v199 ^ 0x8F8BDDC9) + 1) ^ 0x7FFFFFFC) & (v199 ^ 0xF8BDDC9))) ^ v200 ^ 0xFFFFFFFC) + 2 * ((v200 ^ 0x7FFFFFFC) & (2 * ((((v199 ^ 0x8298142C) + (v199 ^ 0x8F8BDDC9) + 1) ^ 0x7FFFFFFC) & (v199 ^ 0xF8BDDC9))))) ^ *(_DWORD *)&v82[4 * (v201 ^ 0x5C)] ^ ((BYTE1(v187) ^ 0x4A) + 1344757788 - ((2 * ((v187 >> 8) ^ 0x1914A)) & 0x38));
  int v203 = *(_DWORD *)(v77 + 4 * (HIBYTE(v180) ^ 0xDA));
  int v204 = 16 * (v203 + 29592815) * (v203 + 29592815)
       - 1575619852
       - ((32 * (v203 + 29592815) * (v203 + 29592815)) & 0x442BE5E0);
  v203 -= 1312584465;
  int v205 = (v203 + (v203 ^ 0x5DEA0D0B ^ v204) + 1) ^ ((v204 ^ 0x5DEA0D0B) + 1);
  unsigned int v206 = *(_DWORD *)(v81 + 4 * (((unsigned __int16)(v195 ^ 0x12BB) >> 8) ^ 0xC3u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v174) ^ 0x7F)] ^ ((BYTE2(v174) ^ 0x23) - 201333533 - ((2 * (HIWORD(v174) ^ 0x8F23)) & 0x1C6)) ^ (((unsigned __int16)(v195 ^ 0x12BB) >> 8) + 1344757788 - (((v195 ^ 0x539312BB) >> 7) & 0x38)) ^ (((v205 - 1575619852 - ((2 * v205) & 0x442BE5E8)) ^ v204) + v203);
  unsigned int v207 = (v206 - 1886659127 - ((2 * v206) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v187 ^ 0xD6)];
  int v208 = *(_DWORD *)(v77 + 4 * (HIBYTE(v187) ^ 1));
  unsigned int v209 = v208 - ((2 * v208 + 1669798366) & 0xF2EDFB38) - 1422226805;
  unsigned int v210 = ((v174 >> 7) | 0xFFFFFF7B) + (BYTE1(v174) ^ 0xDF);
  unsigned int v211 = *(_DWORD *)(v81 + 4 * (BYTE1(v174) ^ 0x1Cu)) ^ *(_DWORD *)&v82[4 * (BYTE2(v198) ^ 0xA1)] ^ (v210 - ((2 * v210 - 1188834170) & 0xA04EC038) + 750340703) ^ (16 * (v209 ^ 0x976FD9C) * (v209 ^ 0x976FD9C) - 201333533 - ((32 * (v209 ^ 0x976FD9C) * (v209 ^ 0x976FD9C)) & 0xE7FFC9C0));
  int v212 = (v211 - 1886659127 - ((2 * v211) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v195 ^ 0x8D)];
  unsigned int v213 = (v212 - ((2 * v212) & 0xF2EDFB38) - 109642340) ^ v209;
  int v214 = *(_DWORD *)(v77 + 4 * (HIBYTE(v195) ^ 0xE9));
  int v215 = v214 - ((2 * v214 + 1669798366) & 0x69FAD796) - 423561030;
  int v216 = *(_DWORD *)(v81 + 4 * (BYTE1(v198) ^ 0x23u)) ^ ((BYTE1(v198) ^ 0xE0) + 1344757788 - ((v198 >> 7) & 0x38)) ^ *(_DWORD *)&v82[4 * (BYTE2(v187) ^ 0xCD)] ^ ((BYTE2(v187) ^ 0x91) - 201333533 - 2 * ((HIWORD(v187) ^ 0x191) & 0xE7 ^ HIWORD(v187) & 4)) ^ v215 ^ (16 * (v215 ^ 0x4FD6BCB) * (v215 ^ 0x4FD6BCB) - ((32 * (v215 ^ 0x4FD6BCB) * (v215 ^ 0x4FD6BCB)) & 0x69FAD780) + 889023435);
  unsigned int v217 = (v216 - 1886659127 - ((2 * v216) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v174 ^ 0x81)];
  int v218 = v202 ^ v201;
  int v219 = *(_DWORD *)(v77 + 4 * (HIBYTE(v202) ^ 0xB2));
  int v220 = v219 - ((2 * v219 + 1669798366) & 0x685564FC) + 1710112621;
  int v221 = *(_DWORD *)&v82[4 * (BYTE2(v217) ^ 0x1F)];
  int v222 = v221 ^ BYTE2(v217) ^ 0x66B6FBAF;
  v221 ^= 0xF3FFE4E3;
  unsigned int v223 = (v221 + v222 + 1) ^ ((BYTE2(v217) ^ 0x95491F4C) + 1);
  int v224 = (BYTE2(v217) ^ 0x19F5D5D9 ^ (v223 - ((2 * v223) & 0xE6866AD4) + 1933784426)) + v221;
  int v225 = v224 ^ (((16 * v220) ^ 0x42AB27E0) * (v220 ^ 0x42AB27E));
  int v226 = v220 ^ ((BYTE1(v213) ^ 0x1A) + 1344757788 - ((2 * ((v213 >> 8) ^ 0xE3FC1A)) & 0x38)) ^ *(_DWORD *)(v81 + 4 * (BYTE1(v213) ^ 0xD9u)) ^ (v225 - 2 * (v225 & 0x342AB27F ^ v224 & 1) - 1272270210);
  int v227 = *(_DWORD *)(v77 + 4 * (HIBYTE(v207) ^ 0x3D));
  unsigned int v228 = (v226 - 1886659127 - ((2 * v226) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v207 ^ 0x9F)];
  unsigned int v229 = v227 - ((2 * v227 + 1669798366) & 0xE62F562A) + 618346500;
  unsigned int v230 = *(_DWORD *)(v81 + 4 * (BYTE1(v217) ^ 0x20u)) ^ *(_DWORD *)&v82[4
                                                                        * (((v218 ^ 0x8262F19u) >> 16) ^ 0x5C)] ^ *(_DWORD *)&v85[4 * ((v213 ^ BYTE2(v198)) ^ 0x6C)] ^ v229 ^ (((v218 ^ 0x8262F19u) >> 16) - 201333533 - (((v218 ^ 0x8262F19u) >> 15) & 0x1C6)) ^ ((BYTE1(v217) ^ 0xE3) + 1344757788 - ((v217 >> 7) & 0x38)) ^ (16 * (v229 ^ 0x317AB15) * (v229 ^ 0x317AB15) - ((32 * (v229 ^ 0x317AB15) * (v229 ^ 0x317AB15)) & 0xE62F5620) + 1930930965);
  int v231 = *(_DWORD *)(v77 + 4 * (HIBYTE(v213) ^ 0xE3));
  unsigned int v232 = v231 - ((2 * v231 + 1669798366) & 0xE16ECA1C) + 578482685;
  unsigned int v233 = (16 * (v232 ^ 0xB7650E) * (v232 ^ 0xB7650E)
        - 201333533
        - ((32 * (v232 ^ 0xB7650E) * (v232 ^ 0xB7650E)) & 0xE7FFC9C0)) ^ *(_DWORD *)&v82[4 * (BYTE2(v207) ^ 0x4A)];
  unsigned int v234 = ((HIBYTE(v217) ^ 0xFFFFFF38) + 187) ^ ((HIBYTE(v217) ^ 0xFFFFFF82) + 1);
  int v235 = HIBYTE(v217) ^ 0x3B672DA5 ^ (v234 + 996617637 - ((2 * v234) & 0x76CE5BB0) + 51);
  unsigned int v236 = *(_DWORD *)&v85[4 * (v217 ^ 0x2B)] ^ *(_DWORD *)(v81
                                                                         + 4
                                                                         * (((unsigned __int16)(v218 ^ 0x2F19) >> 8) ^ 0xC3u)) ^ (((unsigned __int16)(v218 ^ 0x2F19) >> 8) + 1344757788 - (((v218 ^ 0x8262F19u) >> 7) & 0x38)) ^ v232 ^ (v233 - ((2 * v233) & 0xE16ECA1C) + 1891067150);
  int v237 = *(_DWORD *)(v77 + 4 * (v235 + 186));
  unsigned int v238 = v237 - ((2 * v237 + 1669798366) & 0xF10CB774) + 709486761;
  unsigned int v239 = (16 * (v238 ^ 0x8865BBA) * (v238 ^ 0x8865BBA)
        - 201333533
        - ((32 * (v238 ^ 0x8865BBA) * (v238 ^ 0x8865BBA)) & 0xE7FFC9C0)) ^ *(_DWORD *)&v82[4
                                                                                         * (BYTE2(v213) ^ 0x717E0EA ^ -(BYTE2(v213) ^ 0x717E0EA) ^ ((BYTE2(v213) ^ 0xFFFFFF5F) + 119005259))
                                                                                         + 476021032];
  int v240 = *(_DWORD *)(v81 + 4 * (BYTE1(v207) ^ 0xE7u)) ^ BYTE2(v213) ^ ((BYTE1(v207) ^ 0x24)
                                                                       + 1344757788
                                                                       - 2
                                                                       * ((BYTE1(v207) ^ 0x24) & 0x1F ^ (v207 >> 8) & 3)) ^ v238 ^ (v239 + 2022071226 - 2 * (v239 & 0x78865BBE ^ *(_DWORD *)&v82[4 * (BYTE2(v213) ^ 0x717E0EA ^ -(BYTE2(v213) ^ 0x717E0EA) ^ ((BYTE2(v213) ^ 0xFFFFFF5F) + 119005259)) + 476021032] & 4)) ^ 0xFC;
  unsigned int v241 = (v240 - 1886659127 - ((2 * v240) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v218 ^ 0x2F)];
  int v242 = *(_DWORD *)(v77 + 4 * (HIBYTE(v228) ^ 0xF));
  int v243 = v242 - ((2 * v242 + 1669798366) & 0x46B22496) + 1427939130;
  int v244 = v236 ^ BYTE2(v207);
  unsigned int v245 = v244 ^ 0xD3F153B4;
  unsigned int v246 = *(_DWORD *)(v81 + 4 * (((unsigned __int16)(v244 ^ 0x53B4) >> 8) ^ 0xC3u)) ^ *(_DWORD *)&v85[4 * (v230 ^ 0xB1)] ^ v243 ^ *(_DWORD *)&v82[4 * (BYTE2(v241) ^ 0x73)] ^ (16 * (v243 ^ 0x359124B) * (v243 ^ 0x359124B) - ((32 * (v243 ^ 0x359124B) * (v243 ^ 0x359124B)) & 0x46B22480) - 1554443701) ^ (((unsigned __int16)(v244 ^ 0x53B4) >> 8) + 1344757788 - (((v244 ^ 0xD3F153B4) >> 7) & 0x38)) ^ ((BYTE2(v241) ^ 0x2F) - 201333533 - ((2 * (HIWORD(v241) ^ 0x1C2F)) & 0x1C6));
  int v247 = *(_DWORD *)(v77 + 4 * (HIBYTE(v230) ^ 0x5C));
  unsigned int v248 = v247 - ((2 * v247 + 1669798366) & 0xC54872A0) - 1805138369;
  unsigned int v249 = *(_DWORD *)&v82[4 * (BYTE2(v228) ^ 0x37)] ^ (16 * (v248 ^ 0x2A43950) * (v248 ^ 0x2A43950)
                                                    - 201333533
                                                    - ((32 * (v248 ^ 0x2A43950) * (v248 ^ 0x2A43950)) & 0xE7FFC9C0)) ^ BYTE2(v228) ^ ((BYTE1(v241) ^ 0x49) + 1344757788 - 2 * ((BYTE1(v241) ^ 0x49) & 0x3C ^ (v241 >> 8) & 0x20)) ^ 0x6B ^ *(_DWORD *)(v81 + 4 * (BYTE1(v241) ^ 0x8Au));
  int v250 = (v249 - 1886659127 - ((2 * v249) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v244 ^ 0x82)];
  unsigned int v251 = (v250 - ((2 * v250) & 0xC54872A0) - 492553904) ^ v248;
  int v252 = *(_DWORD *)(v77 + 4 * (HIBYTE(v236) ^ 0x69));
  int v253 = v252 - 758832403 + ~((2 * v252 + 1669798366) & 0x42032BFA);
  unsigned int v254 = v230 ^ 0xE641E887;
  unsigned int v255 = *(_DWORD *)&v82[4 * (((v230 ^ 0xE641E887) >> 16) ^ 0x5C)] ^ (((v230 ^ 0xE641E887) >> 16)
                                                                                     - 201333533
                                                                                     - (((v230 ^ 0xE641E887) >> 15) & 0x1C6)) ^ (((16 * v253) ^ 0x10195FD0) * (v253 ^ 0x10195FD));
  int v256 = v253 ^ *(_DWORD *)(v81 + 4 * (BYTE1(v228) ^ 0x97u)) ^ ((BYTE1(v228) ^ 0x54)
                                                                + 1344757788
                                                                - ((2 * ((v228 >> 8) ^ 0xF6B54)) & 0x38)) ^ (v255 + 553752062 + ~((2 * v255) & 0x42032BFA));
  unsigned int v257 = (v256 - 1886659127 - ((2 * v256) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v241 ^ 0xE9)];
  int v258 = *(_DWORD *)(v77 + 4 * (HIBYTE(v241) ^ 0x1C));
  unsigned int v259 = v258 - ((2 * v258 + 1669798366) & 0x9AF6FB20) + 2134837887;
  unsigned int v260 = (16 * (v259 ^ 0xD7B7D90) * (v259 ^ 0xD7B7D90)
        - ((32 * (v259 ^ 0xD7B7D90) * (v259 ^ 0xD7B7D90)) & 0x9AF6FB20)
        - 847544944) ^ v259;
  int v261 = (BYTE2(v245) - 201333533 - ((v245 >> 15) & 0x1C6)) ^ 0x6AB6E0F0 ^ *(_DWORD *)&v82[4 * (BYTE2(v245) ^ 0x5C)];
  int v262 = *(_DWORD *)(v81 + 4 * (BYTE1(v254) ^ 0xC3u)) ^ (BYTE1(v254) + 1344757788 - ((v254 >> 7) & 0x38)) ^ (v260 + v261 - 2 * (v260 & v261));
  unsigned int v263 = (v262 - 1886659127 - ((2 * v262) & 0x1F17BB92)) ^ *(_DWORD *)&v85[4 * (v228 ^ 0xE9)];
  if (((v251 ^ 0xB6270AB2) & 0x80) != 0) {
    int v264 = -128;
  }
  else {
    int v264 = 128;
  }
  unsigned int v265 = v264 + (v251 ^ 0xB6270AB2) + 146966483 - 2 * ((v264 + (v251 ^ 0xB6270AB2)) & 0x8C287DB ^ v251 & 8);
  unsigned int v266 = ((v263 >> 8) ^ 0x18802BFA) & 0xC282EC ^ 0xA8436350 ^ (((2 * (((v263 >> 8) ^ 0x18802BFA) & 0xC28213)) | 0x7E2CB6CC)
                                                             - (((v263 >> 8) ^ 0x18802BFA) & 0xC28213)
                                                             - 1058429798);
  int v267 = (char *)*(&off_26DE9F480 + (v43 ^ 0x356)) - 12;
  unsigned int v268 = v265 ^ 0x2B9EC5C7;
  LODWORD(v302) = *(_DWORD *)&v267[4 * ((v265 ^ 0x2B9EC5C7) >> 24)];
  HIDWORD(v302) = *(_DWORD *)&v267[4 * (HIBYTE(v257) ^ 0x16)];
  LODWORD(v304) = *(_DWORD *)&v267[4 * (HIBYTE(v246) ^ 0x28)];
  unsigned int v269 = ((2 * v266) | 0xB9B6CDB6) - v266 - 1557882587;
  unsigned int v270 = ((v269 ^ 0x3471A106) + 1) ^ ((BYTE1(v263) ^ 0xFFFFFF0C) + 30);
  uint64_t v271 = (uint64_t)*(&off_26DE9F480 + v43 - 423);
  int v272 = *(_DWORD *)(v271 + 4 * (BYTE2(v263) ^ 0xE2u));
  int v273 = *(_DWORD *)(v271 + 4 * (BYTE2(v246) ^ 0x8Bu));
  uint64_t v274 = *(unsigned int *)(v271 + 4 * (BYTE2(v265) ^ 0xF3u));
  LODWORD(v271) = *(_DWORD *)(v271 + 4 * (BYTE2(v257) ^ 0xB1u));
  HIDWORD(v276) = v271 ^ 0x170D;
  LODWORD(v276) = v271 ^ 0x17AE6000;
  int v275 = v276 >> 13;
  unsigned int v277 = v246 ^ 0x5A8B31C1;
  int v278 = (char *)*(&off_26DE9F480 + v43 - 404) - 12;
  int v279 = *(_DWORD *)&v278[4 * (BYTE1(v257) ^ 0x6F)];
  LODWORD(v271) = v269 ^ 0xC7223E62;
  int v280 = *(_DWORD *)&v278[4 * ((v270 + 212623515 - ((2 * v270) & 0x1958C136)) ^ v269 ^ 0xC7223E62) + 116];
  int v281 = *(_DWORD *)&v278[4 * (BYTE1(v277) ^ 0x1D)];
  HIDWORD(v276) = *(_DWORD *)&v267[4 * (HIBYTE(v263) ^ 0xB3)] ^ 0x107F36FB;
  LODWORD(v276) = HIDWORD(v276);
  LODWORD(v267) = (v276 >> 4) ^ __ROR4__(v275, 4);
  int v282 = ((unsigned __int16)(v265 ^ 0xC5C7) >> 8);
  unsigned int v283 = v265 ^ 0xBD;
  uint64_t v284 = (uint64_t)*(&off_26DE9F480 + v43 - 724);
  int v285 = *(_DWORD *)(v284 + 4 * v283);
  int v286 = *(_DWORD *)(v284 + 4 * (v257 ^ 0x18u));
  int v287 = *(_DWORD *)(v284 + 4 * (v263 ^ 0x79u));
  unsigned int v288 = *(_DWORD *)&v278[4 * (v282 ^ 0x1D)] ^ v322 ^ (*(_DWORD *)(v284 + 4 * v277) - 828759833) ^ ((828759832 - *(_DWORD *)(v284 + 4 * v277)) >> 2) & 0x369D1412 ^ __ROR4__(v267 ^ 0xC1DA68C4, 28) ^ (v282 + 1623234757 - ((v268 >> 7) & 0x18A));
  uint64_t v289 = (char *)*(&off_26DE9F480 + v43 - 484) - 12;
  *(unsigned char *)(*(void *)(v42 - 232) + v308) = (v289[((v288 ^ 0x44E720CF) >> 16) ^ 0x79]
                                             + (((v288 ^ 0x44E720CF) >> 16) ^ 0xAE)
                                             - 92) ^ 0xDB;
  HIDWORD(v276) = v273 ^ 0x170D;
  LODWORD(v276) = v273 ^ 0x17AE6000;
  LODWORD(v267) = ((v276 >> 13) - 1061750045 - ((2 * (v276 >> 13)) & 0x816DF5C6)) ^ v302;
  LODWORD(v267) = ((v286 - 828759833) >> 2) & 0x369D1412 ^ (v267
                                                                        + 1623234757
                                                                        - ((2 * v267) & 0xC181318A)) ^ v280;
  LODWORD(v267) = (v267 + 757123611 - ((2 * v267) & 0x5A41955A) + 146) ^ v323;
  uint64_t v290 = (v267 + 212623515 - ((2 * v267) & 0x1958C136)) ^ (v286 - 828759833) ^ v271;
  *(unsigned char *)(*(void *)(v42 - 232) + v307) = (v289[BYTE2(v290) ^ 0xC1] + (BYTE2(v290) ^ 0x16) - 92) ^ 0xE9;
  int v291 = (char *)*(&off_26DE9F480 + (v43 ^ 0x3DA)) - 12;
  *(unsigned char *)(*(void *)(v42 - 232) + v314) = v291[((unsigned __int16)(v288 ^ 0x20CF) >> 8) ^ 0x12] ^ ((((unsigned __int16)(v288 ^ 0x20CF) >> 8) ^ 0xC1) - ((2 * (((unsigned __int16)(v288 ^ 0x20CF) >> 8) ^ 0xC1) + 22) & 0x1E) + 90) ^ 0x11;
  HIDWORD(v276) = v272 ^ 0x170D;
  LODWORD(v276) = v272 ^ 0x17AE6000;
  LODWORD(v278) = ((v276 >> 13) - 1061750045 - ((2 * (v276 >> 13)) & 0x816DF5C6)) ^ v304;
  unsigned int v292 = v279 ^ *(_DWORD *)(v42 - 256) ^ (v285 - 828759833) ^ ((v285 - 828759833) >> 2) & 0x369D1412 ^ (v278 + 1623234757 - ((2 * v278) & 0xC181318A));
  uint64_t v293 = (uint64_t)*(&off_26DE9F480 + (v43 ^ 0x310));
  LOBYTE(v278) = *(unsigned char *)(v293 + (HIBYTE(v292) ^ 0x60)) - 15;
  *(unsigned char *)(*(void *)(v42 - 232) + v306) = v278 ^ (-12 * (_BYTE)v278) ^ 0xF0;
  int v294 = (char *)*(&off_26DE9F480 + (v43 ^ 0x3F6)) - 12;
  LODWORD(v278) = v294[(((_BYTE)v267 - 101 - ((2 * (_BYTE)v267) & 0x36)) ^ (v286 - 25) ^ v271) ^ 0x85];
  *(unsigned char *)(*(void *)(v42 - 232) + v318) = (-71 - 97 * (_BYTE)v278) ^ ((-71 - 97 * v278) >> 1) & 0x4D ^ 0x9F;
  unsigned int v295 = v287 - 828759833;
  uint64_t v296 = *(void *)(v42 - 232);
  uint64_t v297 = HIDWORD(v302) ^ *(_DWORD *)(v42 - 248) ^ v281 ^ (v274 << 19) ^ (BYTE1(v277)
                                                                               + 1623234757
                                                                               - ((v277 >> 7) & 0x18A)) ^ v295 ^ (v295 >> 2) & 0x369D1412 ^ (((v274 >> 13) ^ 0xBD73) - 1061750045 + (~(2 * ((v274 >> 13) ^ 0xBD73)) | 0xFFF20A39) + 1);
  LODWORD(v278) = -71 - 97 * v294[v297 ^ 0x2BLL];
  *(unsigned char *)(v296 + v309) = v278 ^ 0x28 ^ (v278 >> 1) & 0x4D;
  *(unsigned char *)(v296 + v310) = (((v289[BYTE2(v297) ^ 0xA3] - 92) ^ BYTE2(v297) ^ 0x74)
                           + 2 * ((v289[BYTE2(v297) ^ 0xA3] + 36) & (BYTE2(v297) ^ 0x74))) ^ 0xFA;
  *(unsigned char *)(v296 + v311) = ((BYTE2(v292) ^ 0x9E) + v289[BYTE2(v292) ^ 0x49] - 92) ^ 0x11;
  LODWORD(v278) = -71 - 97 * v294[(v292 ^ BYTE1(v257)) ^ 0x4BLL];
  *(unsigned char *)(v296 + v317) = v278 ^ (v278 >> 1) & 0x4D ^ 0xC7;
  LOBYTE(v278) = *(unsigned char *)(v293 + (BYTE3(v290) ^ 0xABLL)) - 15;
  *(unsigned char *)(v296 + v312) = v278 ^ 0xE9 ^ (-12 * (_BYTE)v278);
  LOBYTE(v278) = *(unsigned char *)(v293 + (BYTE3(v297) ^ 0x64)) - 15;
  *(unsigned char *)(v296 + v315) = v278 ^ 0xCB ^ (-12 * (_BYTE)v278);
  LODWORD(v278) = -71 - 97 * v294[v288 ^ 0xC3];
  *(unsigned char *)(v296 + v320) = v278 ^ 0xE5 ^ (v278 >> 1) & 0x4D;
  *(unsigned char *)(v296 + v321) = ((BYTE1(v290) ^ 0xD) - ((2 * (BYTE1(v290) ^ 0xD) + 22) & 0x1E) + 90) ^ 0x1A ^ v291[(BYTE1(v290) ^ 0xD) + 212 + ((v290 >> 7) & 0x1A6 ^ 0xFFFFFFFD)];
  *(unsigned char *)(v296 + v305) = ((BYTE1(v292) ^ 0xEC) - ((2 * (BYTE1(v292) ^ 0xEC) + 22) & 0x1E) + 90) ^ 0xD8 ^ v291[BYTE1(v292) ^ 0x3FLL];
  LOBYTE(v278) = *(unsigned char *)(v293 + (HIBYTE(v288) ^ 0x9CLL)) - 15;
  *(unsigned char *)(v296 + v316) = v278 ^ 0x4B ^ (-12 * (_BYTE)v278);
  *(unsigned char *)(v296 + v313) = ((BYTE1(v297) ^ 0xD1) + (~(2 * (BYTE1(v297) ^ 0xD1) + 22) | 0xE1) + 91) ^ 0x7D ^ v291[BYTE1(v297) ^ 2];
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 240) + 8 * ((23 * (((v306 + 68130235 + ~(2 * ((v306 + 16) & 0x40F95BF ^ v40 & 4)) + 17) ^ 0x40F95BBu) < HIDWORD(a12))) ^ v43)))(v291, 77, v290, v297, v274, 4294967199, v306, v289, a9, a10, a11, a12, a13, a14, a15, a16, a17, v299, v300,
           v301,
           v64,
           a25,
           v302,
           v304,
           a28,
           v305,
           v306,
           a31,
           v307,
           v308,
           v309,
           v310,
           v311,
           v312,
           v313,
           v314,
           a40,
           v315);
}

uint64_t sub_22B34134C(int a1)
{
  int v4 = ((a1 + 354201520) & 0xEAE34AF9 ^ 0x943DDC3) + v2;
  int v5 = (v1 > 0x2D251438) ^ (v4 < -757404729);
  BOOL v6 = v4 < (int)(((224 * (a1 ^ 0x7FB)) ^ 0x52DAE147) + v1);
  if (v5) {
    BOOL v6 = v1 > 0x2D251438;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * !v6) | (8 * !v6)) ^ a1)))();
}

uint64_t sub_22B3413E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  return (*(uint64_t (**)(void))(v64 + 8 * (((391 * (v63 ^ 0xB03) - 1489) * (v62 == a62)) ^ (391 * (v63 ^ 0xB03)))))();
}

uint64_t sub_22B341418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = (v1 - 320);
  int8x8_t v6 = vrev64_s8(*(int8x8_t *)(a1 + v5 - 7));
  *(int8x8_t *)(v3 - 7 + v5) = vrev64_s8(vadd_s8(vsub_s8(v6, vand_s8(vadd_s8(v6, v6), (int8x8_t)0x5454545454545454)), (int8x8_t)0x2A2A2A2A2A2A2A2ALL));
  return (*(uint64_t (**)(void))(v4 + 8 * ((v2 - 3144) ^ (v2 - 2460))))();
}

uint64_t sub_22B34147C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 >= ((v1 + 198) | 0x29u) - 2571) * ((v1 + 198) ^ 0xA36)) ^ (v1 - 1060))))();
}

uint64_t sub_22B3414C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a8 ^ 0x334) + 1694848415) ^ (a8 + 1694848224)) * (v9 < 0x20)) ^ a8)))();
}

void sub_22B341500()
{
  *(_DWORD *)(v1 - 116) = v0 ^ 0x912;
  JUMPOUT(0x22B3418ACLL);
}

uint64_t sub_22B343660()
{
  unsigned int v5 = (((v4 ^ v3) >> 4) & 0xE5FF62C ^ 0xC495424) + (((v4 ^ v3) >> 5) ^ 0xE90B5145) - 60793998;
  BOOL v6 = v5 < ((v2 - 928455089) & 0x375719BB ^ 0xEB905700) + v1;
  if (v1 > 0x146FA977 != v5 < 0xEB905688) {
    BOOL v6 = v1 > 0x146FA977;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * ((v2 + 253) ^ 0x367)) ^ (v2 + 296))))();
}

void sub_22B343714()
{
  *(_DWORD *)(v3 - 120) = v1 - 147;
  *(_DWORD *)(v3 - 144) = v0;
  *(void *)(v3 - 128) = v2 - 7;
  *(_DWORD *)(v3 - 152) = ((v1 - 147) ^ 0xFFFFF818) & v0;
  JUMPOUT(0x22B34377CLL);
}

uint64_t sub_22B343860@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 3112)))(*v4);
  *uint64_t v2 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 376) = 0;
  *(void *)(v1 + 384) = 0;
  *(_DWORD *)(v1 + 392) = 1187837910;
  *(_DWORD *)(v1 + 88) = 1052621672;
  return result;
}

uint64_t sub_22B3438AC@<X0>(int a1@<W8>)
{
  if (a1 == ((v1 - 25265656) & 0xADFB9FFA ^ 0x7784F7F3)) {
    int v3 = 604092309;
  }
  else {
    int v3 = a1;
  }
  return v3 ^ v2;
}

void sub_22B343920()
{
}

uint64_t sub_22B343AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unint64_t v39 = (v33 >> ((v30 + 25) & 0xB5 ^ 0x81u)) + (*(_DWORD *)(a28 + v36 + a5) ^ v29);
  *(_DWORD *)(a28 + 4 * a4 + a5) = v39 + v29 - ((v39 << (((v30 + 55) | 0x10) ^ v37)) & v31);
  *(_DWORD *)(a28 + v36 + a5) = HIDWORD(v39) + v29 - 2 * HIDWORD(v39);
  BOOL v40 = v34 + 155443043 < v32;
  if (v28 > 0x2D251438 != v34 + 155443043 < -757404729) {
    BOOL v40 = v28 > 0x2D251438;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((v30 + 1579) ^ (v40 * v38))))();
}

uint64_t sub_22B343B78@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x31C];
  uint64_t v8 = (_DWORD *)STACK[0x260];
  unint64_t v9 = STACK[0x260] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v5;
  *(_DWORD *)(v9 + 12) = v4;
  *(void *)(v9 + 16) = STACK[0x258];
  *(_DWORD *)(v9 + 24) = v7;
  *uint64_t v8 = v1 + 1;
  BOOL v11 = v3 - 1994371836 > 631 * (a1 ^ 0xC6) + 364253091 || v3 - 1994371836 < SLODWORD(STACK[0x220]);
  return (*(uint64_t (**)(void))(v6 + 8 * ((485 * v11) ^ a1)))();
}

uint64_t sub_22B343BEC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((244
                                * ((unint64_t)(1963497742 - v1) - 1963497678 < (unint64_t)(6 * ((((v0 ^ 0xD80) - 2299) | 9) ^ 0x7A0u)) - 1774)) ^ v0 ^ 0xD80)))();
}

uint64_t sub_22B343C68(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v20 = (v9 - 2116991706) ^ a1 ^ 0x904429C6;
  unsigned int v21 = ((v13 ^ 0xEE6A98C6 | v20) + v18 - (v15 & (2 * (v13 ^ 0xEE6A98C6 | v20)))) ^ a5;
  int v22 = *(_DWORD *)(v8 + 4 * (*(unsigned char *)(a2 + a8 + v17) - 53)) ^ v16;
  unsigned int v23 = ((v12 ^ v18)
       + v11
       + *(_DWORD *)(a3 + 4 * (a8 + v17))
       + v21
       + v22
       + v18
       - (v15 & (2 * ((v12 ^ v18) + v11 + *(_DWORD *)(a3 + 4 * (a8 + v17)) + v21 + v22)))) ^ v18;
  unsigned int v24 = ((v23 << (*(unsigned char *)(v10 + a8 + v17) - 113)) | (v23 >> (113 - *(unsigned char *)(v10 + a8 + v17)))) + v20;
  return (*(uint64_t (**)(void))(v14 + 8 * ((988 * (a8 + 1 == v19 + 48)) ^ v9)))(v18 + v24 - (v15 & (2 * v24)));
}

uint64_t sub_22B343D4C@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  BOOL v7 = v3 < (v4 ^ 0x717) + a1 - 3105;
  *(unsigned char *)(a3 - 0x21AEEC4F795AEEAFLL) = *v5 ^ 0x2A;
  if (v7 == a1 > 0x1FDC372F) {
    BOOL v7 = v3 > 0x1FDC372F;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((282 * v7) ^ ((v4 ^ 0x717) - 475))))();
}

uint64_t sub_22B343DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W6>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * (((a4 + 1 == v5 + 20) | (16 * (a4 + 1 == v5 + 20))) ^ a3)))(v4, a2, a1);
}

uint64_t sub_22B343EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8 * ((((((a36 - 1790) | 0x1C0) ^ 0x5A989A3A) == 1519950834) * (((a36 - 1662) | 0x23) ^ 0xF1)) ^ (a36 - 469))))(a1, a2, a3, &STACK[0xD30], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22B343F20@<X0>(unsigned int a1@<W0>, int a2@<W1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  *(_OWORD *)(v7 + a5 + 24) = *(_OWORD *)(v6 + a5 + 24);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a5 + 16 == (((v5 ^ a1) * a2) ^ a3)) * a4) ^ v5)))();
}

uint64_t sub_22B343F5C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8
                                                 * ((45 * (v4 - v2 < (unint64_t)(a2 ^ 0x52Au) - 3393)) ^ a2)))(v3);
}

uint64_t sub_22B343FA0@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 + v3 - 2952;
  *(unsigned char *)(v5 + v8) = ((v1 + 1) ^ v4) * (v1 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 != 0) * v6) ^ a1)))();
}

void sub_22B343FA8()
{
}

uint64_t sub_22B343FBC(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0x5DA)))(a1);
  *(_DWORD *)(v2 + 4) = 823975111;
  return result;
}

uint64_t sub_22B343FF4()
{
  unsigned int v3 = LODWORD(STACK[0x31C]) - 1793204557;
  int v4 = ((v1 + 1599687199) < 0xCAB9A28B) ^ (v3 < 0xCAB9A28B);
  BOOL v5 = v3 < v1 + 1599687199;
  if (v4) {
    BOOL v5 = (v1 + 1599687199) < 0xCAB9A28B;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * (((v0 - 2499) | 1) - 173)) ^ v0)))();
}

void sub_22B34405C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a3 + ((v3 - 2962) ^ 0x6A202286u) + v5) = v4;
  JUMPOUT(0x22B329750);
}

uint64_t sub_22B344088@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X5>, int a5@<W6>, char a6@<W7>, uint64_t a7@<X8>)
{
  int v15 = 5 * (v10 ^ a5);
  uint64_t v16 = (a2 + v11 + v15 - 3155);
  *(unsigned char *)(a1 + v16 + v13) = *(unsigned char *)(a4 + v16) ^ *(unsigned char *)(v7 + (v16 & 0xF)) ^ *(unsigned char *)(v8 + (v16 & 0xF)) ^ *(unsigned char *)(a7 + (v16 & 0xF)) ^ ((v16 & 0xF) * a6) ^ v12;
  return (*(uint64_t (**)(void))(v14 + 8 * (((v11 - 1 == (((v15 - 3146) | 2) ^ v9)) * a3) ^ (v15 - 457))))();
}

uint64_t sub_22B344108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10
                                                              + 8
                                                              * ((2 * (a8 + 1 != v11 + 64)) | (8 * (a8 + 1 != v11 + 64)) | v8)))(v9, v9, a7);
}

uint64_t sub_22B3441D0(int a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((7 * (a2 + a1 + (v3 ^ 0xAB2u) - 644867564 - 768 >= a3 - 2933)) ^ v3)))();
}

uint64_t sub_22B344248@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1 + a2;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 | (8 * ((unint64_t)(v6 - v4 + 1327893013) > 7)))))();
}

uint64_t sub_22B3442A0@<X0>(int a1@<W8>)
{
  *uint64_t v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 1 == (((a1 ^ 0x6D7) - 1618119521) ^ 0xD91B03B6))
                                * ((((a1 ^ 0x6D7) - 1014) | 0xD) + 3482)) ^ a1 ^ 0x6D7)))();
}

uint64_t sub_22B344304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  unsigned int v33 = v31 + ((v30 + 2668) ^ 0x16D80031);
  BOOL v35 = v33 > 0x74641F61 && v33 < a30 + 864722268;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                         + 8 * ((1242 * v35) ^ v30)))(a1, a2, a3, a4, 4294966694, 4146271316);
}

uint64_t sub_22B344368()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 - 859) | 0x20C) + 3280) ^ ((v2 - 726) | 0x10)) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_22B3443AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 ^ 0x9A5) + 951) ^ 0x6EE) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_22B3443DC(uint64_t a1, int a2, int a3)
{
  int v5 = a2 + a3 - 792116719 >= (v3 ^ 0x298u);
  return (*(uint64_t (**)(void))(v4 + 8 * ((32 * v5) | (v5 << 6) | v3)))();
}

uint64_t sub_22B34444C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8
                                   * (((((v1 == v3) ^ (57 * (v2 ^ 0x5A))) & 1) * (v2 - 798)) ^ v2)))();
}

uint64_t sub_22B344484(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3254
                                * (a4 + ((a2 - 1508) & 0xFFFFFF1B) == ((((a2 - 1508) | 0xE4) - 1489654527) & 0x58CA57FE ^ v5))) ^ ((a2 - 1508) | 0xE4))))();
}

uint64_t sub_22B3444DC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v2 - 392 + ((v2 + 1857756188) & 0x9144E5FD) - 2120) * (v0 == v1)) ^ (v2 + 2104))))();
}

uint64_t sub_22B344520@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v3 < v4;
  *(unsigned char *)(a1 + (v6 - 1533805261)) = *(unsigned char *)(v7 + (v6 - 1533805261)) ^ 0x2A;
  if (v9 == v6 + 720660163 < v2) {
    BOOL v9 = v6 + 720660163 < v3;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * v5) ^ v1)))();
}

uint64_t sub_22B344590()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2
                               + 4
                               * ((*(unsigned __int8 *)(v1 - 0x5E30592FF90A53FELL) ^ 0x36) == ((v2 ^ 0x51) + 85)))))();
}

uint64_t sub_22B3445D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *(unsigned char *)(v35 + v37 - 1) = ((a9 + v36 + 1 + 54) ^ v38) * (v36 + 99);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (((v37 != 1) * v39) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_22B3445E0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v4 + 3125) ^ (v4 + 608) ^ 0x5AB) * (v3 == a3)) ^ v4)))();
}

uint64_t sub_22B344618(unsigned int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  *(unsigned char *)(a50 - 0x2970AB8229FC3D2ELL + (v50 + a2)) = *(unsigned char *)(a7 + (a5 + v52 + 95));
  unsigned int v55 = v52 + 1 + a3;
  int v56 = (v53 < a1) ^ (v55 < a1);
  BOOL v57 = v55 < v53;
  if (v56) {
    BOOL v57 = v53 < a1;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * ((125 * !v57) ^ v51)))();
}

uint64_t sub_22B34469C(unsigned int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v12 = v9 + v8;
  int v13 = v12 + v10;
  if ((v12 + v10) <= 0x40) {
    int v13 = a4;
  }
  BOOL v14 = a8 - v12 + a1 - 1470 - 92 < a3 + a2 + ((a1 - 206922258) & 0x1BF7 ^ a8) + v13;
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v14) | (4 * v14)) ^ a1)))();
}

uint64_t sub_22B344700(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v5 - 108) | 0x808) ^ (v5 + 1927)) * (a4 == 0)) ^ v5)))();
}

uint64_t sub_22B344730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,__int16 a53,unsigned __int8 a54,unsigned __int8 a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LOBYTE(STACK[0xD20]) = *(unsigned char *)(v72 - 256) ^ 0xA0;
  LOBYTE(STACK[0xD21]) = *(unsigned char *)(v72 - 255) ^ 0x96;
  LOBYTE(STACK[0xD22]) = *(unsigned char *)(v72 - 254) ^ 0x75;
  int v118 = 12 * (v71 ^ 0x2D);
  LOBYTE(STACK[0xD23]) = v118 ^ *(unsigned char *)(v72 - 253) ^ 0xC6;
  LOBYTE(STACK[0xD24]) = *(unsigned char *)(v72 - 252) ^ 0xFE;
  LOBYTE(STACK[0xD25]) = *(unsigned char *)(v72 - 251) ^ 0x91;
  LOBYTE(STACK[0xD26]) = *(unsigned char *)(v72 - 250) ^ 0xEA;
  LOBYTE(STACK[0xD27]) = *(unsigned char *)(v72 - 249) ^ 0x7B;
  LOBYTE(STACK[0xD28]) = *(unsigned char *)(v72 - 248) ^ 0xE4;
  LOBYTE(STACK[0xD29]) = *(unsigned char *)(v72 - 247) ^ 0x8A;
  char v73 = *(unsigned char *)(v72 - 245) ^ 0xDF;
  char v74 = *(unsigned char *)(v72 - 244) ^ 0x6E;
  char v75 = *(unsigned char *)(v72 - 243) ^ 0x71;
  char v76 = *(unsigned char *)(v72 - 242) ^ 0xDD;
  char v77 = *(unsigned char *)(v72 - 241) ^ 0x17;
  LOBYTE(STACK[0xD2A]) = *(unsigned char *)(v72 - 246) ^ 0x79;
  LOBYTE(STACK[0xD2B]) = v73;
  LOBYTE(STACK[0xD2C]) = v74;
  LOBYTE(STACK[0xD2D]) = v75;
  LOBYTE(STACK[0xD2E]) = v76;
  LOBYTE(STACK[0xD2F]) = v77;
  BOOL v117 = a55 != 55;
  unsigned int v116 = a54 ^ 0x36;
  unsigned int v78 = a55 ^ 0x36;
  uint64_t v79 = LOBYTE(STACK[0xD24]);
  uint64_t v80 = LOBYTE(STACK[0xD28]);
  uint64_t v81 = LOBYTE(STACK[0xD2C]);
  uint64_t v82 = LOBYTE(STACK[0xD21]);
  uint64_t v83 = LOBYTE(STACK[0xD25]);
  uint64_t v84 = LOBYTE(STACK[0xD29]);
  uint64_t v85 = LOBYTE(STACK[0xD2D]);
  uint64_t v86 = LOBYTE(STACK[0xD22]);
  uint64_t v87 = LOBYTE(STACK[0xD2A]);
  uint64_t v88 = LOBYTE(STACK[0xD26]);
  uint64_t v89 = LOBYTE(STACK[0xD2E]);
  uint64_t v90 = LOBYTE(STACK[0xD2F]);
  uint64_t v91 = LOBYTE(STACK[0xD2B]);
  uint64_t v92 = LOBYTE(STACK[0xD27]);
  uint64_t v93 = LOBYTE(STACK[0xD23]);
  uint64_t v94 = *(unsigned __int8 *)(a56 + LOBYTE(STACK[0xD20]));
  LOBYTE(STACK[0xD20]) = v94;
  uint64_t v95 = *(unsigned __int8 *)(a60 + v79);
  LOBYTE(STACK[0xD24]) = v95;
  uint64_t v96 = *(unsigned __int8 *)(a64 + v80);
  LOBYTE(STACK[0xD28]) = v96;
  uint64_t v97 = *(unsigned __int8 *)(a68 + v81);
  LOBYTE(STACK[0xD2C]) = v97;
  uint64_t v98 = *(unsigned __int8 *)(a61 + v83);
  LOBYTE(STACK[0xD21]) = v98;
  uint64_t v99 = *(unsigned __int8 *)(a65 + v84);
  LOBYTE(STACK[0xD25]) = v99;
  uint64_t v100 = *(unsigned __int8 *)(a69 + v85);
  LOBYTE(STACK[0xD29]) = v100;
  uint64_t v101 = *(unsigned __int8 *)(a57 + v82);
  LOBYTE(STACK[0xD2D]) = v101;
  uint64_t v102 = *(unsigned __int8 *)(a66 + v87);
  LOBYTE(STACK[0xD22]) = v102;
  uint64_t v103 = *(unsigned __int8 *)(a58 + v86);
  LOBYTE(STACK[0xD2A]) = v103;
  uint64_t v104 = *(unsigned __int8 *)(a70 + v89);
  LOBYTE(STACK[0xD26]) = v104;
  uint64_t v105 = *(unsigned __int8 *)(a62 + v88);
  LOBYTE(STACK[0xD2E]) = v105;
  uint64_t v106 = *(unsigned __int8 *)(a67 + v91);
  LOBYTE(STACK[0xD2F]) = v106;
  uint64_t v107 = *(unsigned __int8 *)(a63 + v92);
  LOBYTE(STACK[0xD2B]) = v107;
  uint64_t v108 = *(unsigned __int8 *)(a59 + v93);
  LOBYTE(STACK[0xD27]) = v108;
  uint64_t v109 = *(unsigned __int8 *)(a71 + v90);
  LOBYTE(STACK[0xD23]) = v109;
  int v110 = &a51 + 128 * (unint64_t)(0 % v116);
  unsigned int v111 = *(_DWORD *)(*((void *)v110 + 148) + 4 * v98) ^ *(_DWORD *)(*((void *)v110 + 147) + 4 * v94) ^ *(_DWORD *)(*((void *)v110 + 149) + 4 * v102) ^ *(_DWORD *)(*((void *)v110 + 150) + 4 * v109);
  LODWORD(v109) = v111 >> (((v118 - 58) | 4) + 18);
  LOBYTE(STACK[0xD23]) = v109;
  LOBYTE(STACK[0xD22]) = BYTE2(v111);
  LOWORD(STACK[0xD20]) = v111;
  int v112 = &v110[32 * v117 + 1176];
  LODWORD(v104) = *(_DWORD *)(*((void *)v112 + 1) + 4 * v99) ^ *(_DWORD *)(*(void *)v112 + 4 * v95) ^ *(_DWORD *)(*((void *)v112 + 2) + 4 * v104) ^ *(_DWORD *)(*((void *)v112 + 3) + 4 * v108);
  LODWORD(STACK[0xD24]) = v104;
  unsigned int v113 = &v110[32 * (2 % v78) + 1176];
  LODWORD(v100) = *(_DWORD *)(*((void *)v113 + 1) + 4 * v100) ^ *(_DWORD *)(*(void *)v113 + 4 * v96) ^ *(_DWORD *)(*((void *)v113 + 2) + 4 * v103) ^ *(_DWORD *)(*((void *)v113 + 3) + 4 * v107);
  LODWORD(STACK[0xD28]) = v100;
  unsigned int v114 = &v110[32 * (3 % v78) + 1176];
  LODWORD(v101) = *(_DWORD *)(*((void *)v114 + 1) + 4 * v101) ^ *(_DWORD *)(*(void *)v114 + 4 * v97) ^ *(_DWORD *)(*((void *)v114 + 2) + 4 * v105) ^ *(_DWORD *)(*((void *)v114 + 3) + 4 * v106);
  LODWORD(STACK[0xD2C]) = v101;
  LOBYTE(STACK[0xD20]) = *(unsigned char *)a44 ^ v111;
  LOBYTE(v105) = *(unsigned char *)(a44 + 1) ^ BYTE1(v111);
  LOBYTE(STACK[0xD21]) = v105;
  LOBYTE(STACK[0xD22]) = *(unsigned char *)(a44 + 2) ^ BYTE2(v111);
  LOBYTE(STACK[0xD23]) = *(unsigned char *)(a44 + 3) ^ v109;
  LOWORD(STACK[0xD24]) = *(_WORD *)(a44 + 4) ^ v104;
  LOBYTE(STACK[0xD26]) = *(unsigned char *)(a44 + 6) ^ BYTE2(v104);
  LOBYTE(STACK[0xD27]) = *(unsigned char *)(a44 + 7) ^ BYTE3(v104);
  LOWORD(STACK[0xD28]) = *(_WORD *)(a44 + 8) ^ v100;
  LOBYTE(STACK[0xD2A]) = *(unsigned char *)(a44 + 10) ^ BYTE2(v100);
  LOBYTE(STACK[0xD2B]) = *(unsigned char *)(a44 + 11) ^ BYTE3(v100);
  LOWORD(STACK[0xD2C]) = *(_WORD *)(a44 + 12) ^ v101;
  LOBYTE(STACK[0xD2E]) = *(unsigned char *)(a44 + 14) ^ BYTE2(v101);
  LODWORD(v101) = *(unsigned __int8 *)(a44 + 15) ^ BYTE3(v101);
  LOBYTE(STACK[0xD2F]) = v101;
  return (*(uint64_t (**)(void, void))(a45 + 8 * v118))(v101, v105);
}

uint64_t sub_22B344C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + (v12 + v13 + 3308)) = *(unsigned char *)(a11 + (v12 + v13 + 3308)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v15 + 8 * ((505 * (v12 + v13 + v16 + 1544 < (a10 ^ v14))) ^ v16)))();
}

uint64_t sub_22B344CBC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v5 + (a1 ^ v2)) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_22B344CE8@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((30 * ((((v2 | 0x980) + 1947321356) & 0x8BEE3BED) - 343 - 2100 != v1)) ^ ((v2 | 0x980) + 1947321356) & 0x8BEE3BED)))();
}

uint64_t sub_22B344D38@<X0>(int a1@<W7>, char a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 ^ 0xC51) * ((a2 & 1) == 0)) ^ (a1 + 770))))();
}

void sub_22B344D60()
{
  LODWORD(STACK[0x370]) = v0;
  LODWORD(STACK[0x338]) = v1;
  LODWORD(STACK[0x4CC]) = v2;
  LODWORD(STACK[0x468]) = v3;
  LODWORD(STACK[0x3CC]) = 1363996433;
  JUMPOUT(0x22B33E948);
}

uint64_t sub_22B344DC8(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __n128 v69 = (__n128)vld1q_dup_f32(v68);
  return sub_22B3921BC(2075927736, 802486373, 3005089444, 3492480922, 2445180428, 1915422522, 2219039559, 358473027, v69, a2, a3, a4, a5, a68, a67, a66);
}

uint64_t sub_22B344DD0(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  uint64_t v11 = (a6 - 475472465) & 0x1C572DFD;
  unint64_t v12 = (a4 + a3 + a2) + v9 + (v11 ^ 0xA84D100B9E4BB271);
  uint64_t v13 = (a4 + a3) & 0xF;
  unint64_t v14 = v13 + v6 - v12;
  unint64_t v15 = (v13 | v7) - v12;
  unint64_t v16 = (v13 | v8) - v12;
  BOOL v18 = a5 - (v9 + (v11 ^ 0xA84D100B9E4BB271)) - 0x615E76577373A591 >= 0x10
     && v14 >= 0x10
     && v15 >= (unint64_t)((a6 - 377593666) & 0x16819FFF) - 465;
  unint64_t v19 = v16 + 2;
  int v21 = !v18 || v19 < 0x10;
  return (*(uint64_t (**)(void))(v10 + 8 * ((89 * v21) ^ a6)))();
}

uint64_t sub_22B344E94(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a3 ^ ((v4 == v3) * a1))))();
}

uint64_t sub_22B344EB4(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v11 = 2 * (a4 ^ 0xC01);
  int v12 = (*(unsigned __int8 *)(*(void *)(a7 + 384)
                            - 0x24B64731C5A67D3BLL
                            + v7
                            + 0x8019DCA67B1609
                            + (v11 + 3055)) ^ v8)
      - (*(unsigned char *)(*(void *)(a7 + 448) + v7 + 0x8019DCA67B1609 + (v11 + 3055)) - 71);
  return (*(uint64_t (**)(void))(v10 + 8 * ((((a1 & (2 * v12)) + (v12 ^ (a2 + 3155)) == v11 + 2991 + a2) * v9) ^ v11)))();
}

uint64_t sub_22B344F48@<X0>(int a1@<W0>, unsigned int a2@<W2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, int a6@<W7>, int a7@<W8>)
{
  *(unsigned char *)(a3 + (v8 + a4)) = *(unsigned char *)(v7 + v10 + ((a7 + a1) & a2) + a5);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a4 + v8 + 1) > 0x3F) * a6) ^ a7)))();
}

uint64_t sub_22B344F94(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8
                                   * (((((a1 == a6) ^ v6) & 1) * (91 * (v6 ^ 0xBAC) - 2718)) ^ v6)))();
}

uint64_t sub_22B344FD0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v19 = a1 ^ v12;
  int v20 = (a7 ^ v12)
      + v7
      + *(_DWORD *)(a4 + 4 * (v10 + v13))
      + ((v12 + (a2 ^ v18 | v19) + (v17 & (2 * (a2 ^ v18 | v19)) ^ ((v9 ^ 0xCE0) - 40)) + 1) ^ v8)
      + (*(_DWORD *)(v15 + 4 * (*(unsigned char *)(a3 + v10 + v13) - 53)) ^ v14);
  unsigned int v21 = (v20 + v12 - (v17 & (2 * v20))) ^ v12;
  unsigned int v22 = ((v21 << (*(unsigned char *)(a5 + v10 + v13) - 113)) | (v21 >> (113 - *(unsigned char *)(a5 + v10 + v13)))) + v19;
  return (*(uint64_t (**)(void))(v11 + 8 * ((27 * (v10 + 1 == v16 + 48)) ^ v9)))(v22 + v12 - (v17 & (2 * v22)));
}

uint64_t sub_22B3450A4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 > 1) * (((v0 - 1304) | 0x12) - 948)) ^ (v0 + 1101))))();
}

uint64_t sub_22B345130(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 16) - 1503746353 * ((((2 * a1) | 0x4522DCEA) - a1 + 1567527307) ^ 0x84F0ACC3);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)a1;
  int v5 = (1438293641 * ((&v4 + 1751431367 - 2 * ((unint64_t)&v4 & 0x6864B8C7)) ^ 0xD0A3EDB8)) ^ (v1 + 268463937);
  uint64_t v4 = v2;
  return (*((uint64_t (**)(uint64_t *))*(&off_26DE9F480 + (int)(v1 ^ 0xEFFF9B36)) + v1 + 268465705))(&v4);
}

uint64_t sub_22B345238()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v1 ^ 0x369) + 681) ^ 0xFFFFF804) + 6 * (v1 ^ 0x369)) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_22B345278@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((a1 - 1973) ^ 0x571) * (*(_DWORD *)(v2 - 144) == *(_DWORD *)(v2 - 152))) ^ a1)))();
}

uint64_t sub_22B3452B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((110 * (v8 < ((a8 - 670248613) & 0x27F32FBEu) - 2350)) ^ a8)))();
}

void sub_22B3452F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1503746353 * ((-2 - ((~a1 | 0x2E1519A) + (a1 | 0xFD1EAE65))) ^ 0x2480932C);
  uint64_t v2 = (char *)*(&off_26DE9F480 + (v1 ^ 0x6F0)) - 8;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0x87E)])(12, 205473644) == 0)
                      * ((v1 + 1659318084) & 0x9D18CFE5 ^ 0x6FB)) ^ v1)];
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B3453E8(uint64_t a1, int a2)
{
  unsigned int v7 = v4 - 1970174676;
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (((9 * (v2 ^ 0xC6A) - 1516) * (a2 - v3 - v5 + v7 < 0xF)) ^ v2)))();
}

uint64_t sub_22B345484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (int)((((((*(_DWORD *)(v13 - 176) - 2045) | 0xA1) ^ 0xFFFFFE90)
                                                    + ((*(_DWORD *)(v13 - 176) + 2127015914) & 0x81384E7F))
                                                   * (*(_DWORD *)(v13 - 160) == *(_DWORD *)(v13 - 168))) ^ *(_DWORD *)(v13 - 176))))(a12);
}

void sub_22B3454E8()
{
}

uint64_t sub_22B345518@<X0>(int a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *((unsigned char *)&STACK[0x28C] + a3 + a2) = 42;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2 * ((unint64_t)(a3 + 1 + a2) < 0x40)) | (8
                                                                                 * ((unint64_t)(a3 + 1 + a2) < 0x40)) | (a1 + v3 + 718))))();
}

uint64_t sub_22B34555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  return (*(uint64_t (**)(void))(v28 + 8 * (((a27 == -1282729580) * (3 * (v27 ^ 0x6C9) + 2667)) ^ v27)))();
}

uint64_t sub_22B3455A0@<X0>(int a1@<W8>)
{
  unsigned int v6 = (a1 + 2063) ^ (225134719
                    * ((((2 * &v6) | 0x55ACA4BA) - &v6 + 1428794787) ^ 0xBC261777));
  uint64_t v7 = v1;
  (*(void (**)(unsigned int *))(v3 + 8 * (a1 + 3613)))(&v6);
  return v4 ^ v2;
}

uint64_t sub_22B34563C(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((60 * (((3 * (v1 ^ 0xA5F) - 1468) & a1) == (((v1 ^ 0xA24) - 407) & 0xFFFFF5FB))) ^ v1 ^ 0xA24)))();
}

uint64_t sub_22B345694(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 8) + 1438293641 * (a1 ^ 0xB8C7557F);
  uint64_t v2 = *(void *)a1;
  unsigned int v5 = (1328090399 * ((((2 * &v4) | 0xE499C828) - &v4 - 1917641748) ^ 0x8D9F802E)) ^ (v1 + 816661015);
  uint64_t v4 = v2;
  return (*((uint64_t (**)(uint64_t *))*(&off_26DE9F480 + v1 - 1118659023) + v1 - 1118655346))(&v4);
}

uint64_t sub_22B34577C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((v2 < (STACK[0x240] & 0xF5AADB68 ^ 0xFC6E555F))
                                     * (((STACK[0x278] - 2571) | 0x900) - 857)) ^ (STACK[0x278] - 100))))();
}

uint64_t sub_22B3457D4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 12) - 2009815553 * (((result | 0x6497EF52) - (result & 0x6497EF52)) ^ 0x959CC117);
  uint64_t v2 = *(void *)result;
  *(unsigned char *)(v2 - 0x3CE28A3DBFB57F3) = HIBYTE(v1) ^ 0xFB;
  *(unsigned char *)(v2 - 0x3CE28A3DBFB57F2) = BYTE2(v1) ^ 0x80;
  *(unsigned char *)(v2 - 0x3CE28A3DBFB57F1) = BYTE1(v1) ^ 7;
  *(unsigned char *)(v2 - 0x3CE28A3DBFB57F0) = v1 ^ 0x86;
  return result;
}

uint64_t sub_22B345888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v10
                                                                                        + 8
                                                                                        * ((2515
                                                                                          * (((((a8 + 363149982) & 0xEA5ACB2D)
                                                                                             - 2556) & v9) == 0)) ^ a8)))(a1, a2, a3, a4, a5, (v8 - a5));
}

uint64_t sub_22B3458CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int8x16_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(int8x16_t *)(a3 + (v23 + v26)) = vaddq_s8(vsubq_s8(*a6, vandq_s8(vaddq_s8(*a6, *a6), v29)), v28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((127 * ((((v25 - 266045187) & 0xFDB86FD ^ 0x1FFFFFD4DLL) & (v24 + 1)) != 16)) ^ (v25 - 266045187) & 0xFDB86FDu)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_22B345954(uint64_t a1)
{
  int v1 = 1866394843 * (a1 ^ 0xEA1737F4);
  int v2 = *(_DWORD *)a1 + v1;
  int v3 = *(_DWORD *)(a1 + 4) - v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x281D12643933BF1FLL);
  unsigned int v6 = v4 - 920561905;
  BOOL v5 = v4 - 920561905 < 0;
  unsigned int v7 = 920561905 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + v2 - 979) + ((3170 * (v3 >> 5 < v7)) ^ v2) - 1))();
}

uint64_t sub_22B3459E8()
{
  ++STACK[0x250];
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 == 1) * v2) ^ v1)))();
}

uint64_t sub_22B3459FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = v8 + 32;
  uint64_t v13 = (long long *)(a7 + (a1 + v12));
  long long v14 = *v13;
  long long v15 = v13[1];
  uint64_t v16 = (_OWORD *)(v7 + ((v9 ^ 0xA74u ^ a5) & (v10 + v12)));
  *uint64_t v16 = v14;
  v16[1] = v15;
  return (*(uint64_t (**)(void))(v11 + 8 * ((29 * (a3 != v12)) ^ v9)))();
}

void sub_22B345A04(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(&off_26DE9F480
       + ((-121 * ((qword_2683EB0F0 + dword_2683F6230) ^ 0x4D)) ^ byte_22B47E780[byte_22B473800[(-121 * ((qword_2683EB0F0 + dword_2683F6230) ^ 0x4D))] ^ 0xE1])
       + 294);
  uint64_t v4 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (*v3 ^ qword_2683EB0F0 ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * (*v3 ^ qword_2683EB0F0 ^ 0x4D))] ^ 3])
                + 37);
  unint64_t v5 = (*(void *)(v4 - 4) + *v3) ^ (unint64_t)&v7;
  *uint64_t v3 = 2059148423 * v5 - 0xD2361EE8B96764DLL;
  *(void *)(v4 - 4) = 2059148423 * (v5 ^ 0xD2361EE8B96764DLL);
  *(_DWORD *)(*(void *)(a1 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68327) = *(_DWORD *)(a2 - 0x48A9B556C05DE571);
  LODWORD(v5) = 1948972247 * ((((2 * &v9) | 0xDC09852E) - &v9 + 301677929) ^ 0x5B9A3779);
  int v9 = v5 ^ 0x1EA93554;
  uint64_t v10 = &STACK[0x2970AB8229FC3F92];
  int v11 = -118723830 - v5;
  LODWORD(v3) = 2059148423 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)v3) ^ 0x8B96764D);
  unsigned int v6 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 - dword_2683F6230) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 - dword_2683F6230) ^ 0x4D))] ^ 0x85])
               + 306)
     - 8;
  (*(void (**)(int *))&v6[8
                                   * ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                        + v3
                                                                        - 8) ^ 0x9B] ^ v3)
                                   + 31344])(&v9);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B345D4C@<X0>(uint64_t a1@<X0>, int a2@<W2>, const char *a3@<X5>, int32x4_t *a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,int8x16_t a34)
{
  int8x16x4_t v78 = vld4q_s8(a3);
  uint8x16_t v46 = (uint8x16_t)veorq_s8(v78.val[0], v44);
  uint16x8_t v47 = vmovl_u8(*(uint8x8_t *)v46.i8);
  int8x16_t v48 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v47.i8);
  int8x16_t v49 = (int8x16_t)vmovl_high_u16(v47);
  uint16x8_t v50 = vmovl_high_u8(v46);
  int8x16_t v51 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v50.i8);
  int8x16_t v52 = (int8x16_t)vmovl_high_u16(v50);
  uint8x16_t v53 = (uint8x16_t)veorq_s8(v78.val[1], v44);
  uint16x8_t v54 = vmovl_high_u8(v53);
  uint16x8_t v55 = vmovl_u8(*(uint8x8_t *)v53.i8);
  uint8x16_t v56 = (uint8x16_t)veorq_s8(v78.val[2], v44);
  _Q21 = (int8x16_t)vmovl_high_u8(v56);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v56.i8);
  int8x16_t v59 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v64 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v78.val[0] = veorq_s8(v78.val[3], v44);
  v78.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v78.val[0]);
  v78.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v78.val[1]);
  v78.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v78.val[0].i8);
  v78.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v78.val[0]);
  v78.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.val[0].i8), 0x18uLL), v59), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v55.i8, 8uLL), v48));
  v78.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v78.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v55, 8uLL), v49));
  v78.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.val[1].i8), 0x18uLL), v64), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v54.i8, 8uLL), v51));
  v78.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v78.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v54, 8uLL), v52));
  int32x4_t v65 = (int32x4_t)veorq_s8(vandq_s8(v78.val[0], a34), (int8x16_t)(*(_OWORD *)&v48 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v66 = (int32x4_t)veorq_s8(vandq_s8(v78.val[3], a34), (int8x16_t)(*(_OWORD *)&v49 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v67 = (int32x4_t)veorq_s8(vandq_s8(v78.val[1], a34), (int8x16_t)(*(_OWORD *)&v51 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v68 = (int32x4_t)veorq_s8(vandq_s8(v78.val[2], a34), (int8x16_t)(*(_OWORD *)&v52 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  a4[2] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[1], vaddq_s32(v67, v67)), v45);
  a4[3] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[2], vaddq_s32(v68, v68)), v45);
  *a4 = vaddq_s32(vsubq_s32((int32x4_t)v78.val[0], vaddq_s32(v65, v65)), v45);
  a4[1] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[3], vaddq_s32(v66, v66)), v45);
  int v70 = a1 ^ v39;
  int v71 = (a1 ^ v39) & (a2 ^ v39) | (a1 ^ v36) & (v35 ^ v39);
  unint64_t v72 = (((a33 + 363) | 0x978u) ^ (unint64_t)(v40 - 1400)) + 2027656966;
  int v73 = (v34 ^ v39)
      + v38
      + v71
      + *((_DWORD *)*(&off_26DE9F480 + (a33 ^ 0x1F8)) + v72 - 3)
      + (a4->i32[(*((unsigned char *)*(&off_26DE9F480 + (a33 ^ 0x77)) + v72 - 4) - 53)] ^ v37);
  char v74 = (char *)*(&off_26DE9F480 + (a33 ^ 0xFC)) - 8;
  unsigned int v75 = (v73 + v39 - (v41 & (2 * v73))) ^ v39;
  int v76 = ((v75 << (v74[v72] - 113)) | (v75 >> (113 - v74[v72]))) + v70;
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v42 + 8 * ((v43 != 2027656951) ^ (a33 + 2787))))(v76 + v39 - (v41 & (2 * v76)), a1, a1);
}

uint64_t sub_22B345E80@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((3076
                                * (*(_DWORD *)(a21
                                             - 0x54EEBA8C0E75CADCLL
                                             + 4
                                             * (((193 * (((v22 - 274) | 0x110) ^ 0x15D)) ^ (a1 + 262))
                                              + v23)) == v21)) | (v22 - 274) | 0x110)))();
}

uint64_t sub_22B345EE8(uint64_t a1, int a2, uint64_t a3)
{
  *((unsigned char *)&STACK[0x28C] + v4 + a3) = 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1780 * ((unint64_t)(v4 + 1 + a3) < 0x38)) ^ (a2 + v3 + 1895))))();
}

uint64_t sub_22B345F28@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)STACK[0x260] - 1543089487) < 0x10)
                                * (((a1 + 2893) | 0x43) ^ 0x5D)) ^ a1)))();
}

uint64_t sub_22B345F74()
{
  uint64_t v6 = v2 + 127 - v0;
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v6 - 15));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  int8x16_t v9 = vrev64q_s8(*(int8x16_t *)(v6 - 31));
  int8x16_t v10 = vextq_s8(v9, v9, 8uLL);
  uint64_t v11 = v3 + 127 - v0;
  v12.i64[0] = 0x5454545454545454;
  v12.i64[1] = 0x5454545454545454;
  v13.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v13.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v12)), v13));
  *(int8x16_t *)(v11 - 15) = vextq_s8(v14, v14, 8uLL);
  int8x16_t v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v12)), v13));
  *(int8x16_t *)(v11 - 31) = vextq_s8(v15, v15, 8uLL);
  return (*(uint64_t (**)(void))(v5 + 8 * ((2012 * (v0 - 3755050034 + (v4 ^ (v1 + 458)) == 128)) ^ v4)))();
}

uint64_t sub_22B346014(unsigned int a1, char a2, uint64_t a3, int a4, uint64_t a5)
{
  *(unsigned char *)(v5 + v8 + a5 - 1) = a2;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + v8 >= (unint64_t)((v6 + v7) & a1) + 10) * a4) ^ v6)))();
}

uint64_t sub_22B34604C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((a2 & 8) == 0) ^ (a8 - 117)) & 1) * (((a8 - 1136) ^ 0xF0F) - 2942)) ^ (a8 - 1136))))();
}

uint64_t sub_22B346088@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == v5 + 62 * (a1 ^ 0xD8B) - 310) * (a1 - 3431)) ^ a1)))();
}

void sub_22B3460D4(int a1@<W8>)
{
  LODWORD(STACK[0x424]) = STACK[0x258];
  LODWORD(STACK[0x4A8]) = STACK[0x260];
  STACK[0x380] = STACK[0x240];
  STACK[0x398] = STACK[0x248];
  STACK[0x478] = STACK[0x250];
  LODWORD(STACK[0x36C]) = a1;
  STACK[0x3B0] = ((v1 + 325) ^ 0xB64) + v2 + (v1 + 2740) - 5587;
  LODWORD(STACK[0x290]) = a1;
  LODWORD(STACK[0x260]) = STACK[0x4A8];
  LODWORD(STACK[0x258]) = STACK[0x424];
  JUMPOUT(0x22B375EE8);
}

void sub_22B34611C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  STACK[0x510] = 5 * (a17 ^ 0x479u) - 57 + STACK[0x510] - 3045;
  LODWORD(STACK[0x258]) = -604050357;
  JUMPOUT(0x22B3461D0);
}

uint64_t sub_22B346238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,uint64_t a39,uint64_t a40,_DWORD *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unsigned int v68 = (v65 - 1042837816) & 0x9E9AFD1E;
  *int8x16_t v64 = 0;
  unsigned int v69 = ((v63 ^ (v63 >> 11)) << (((v65 - 56) & 0x1E) - 21)) & 0x9D2C5680 ^ v63 ^ (v63 >> 11);
  unsigned int v70 = (v69 << 15) & 0xEFC60000 ^ v69 ^ 0xC08A44CC ^ (((v69 << 15) & 0xEFC60000 ^ v69) >> 18);
  int v71 = &a63 + (a38 - 963705564);
  unsigned int v72 = -1711036427
      * ((*(_DWORD *)(*v67 + (*a41 & 0x7FEAFB7C)) ^ v71) & (((1093 * (v68 ^ 0x51F) - 2991) | 0x841) ^ 0x7FFFF69E));
  unint64_t v73 = -1711036427 * (v72 ^ HIWORD(v72));
  char v74 = *((unsigned char *)*(&off_26DE9F480 + (int)(v68 ^ 0x53A)) + (v73 >> 24));
  char v75 = *((unsigned char *)*(&off_26DE9F480 + (int)(v68 - 989)) + (v73 >> 24) + 4) ^ *((unsigned char *)*(&off_26DE9F480
                                                                                        + (int)(v68 - 830))
                                                                             + (v73 >> 24)
                                                                             - 12);
  LOBYTE(v73) = v73 ^ (91 * BYTE3(v73));
  *int v71 = v74 ^ v70 ^ 0xCC ^ v75 ^ v73;
  return (*(uint64_t (**)(void))(v66
                              + 8
                              * (int)((53
                                     * (a38 - (((v74 ^ v70 ^ 0xCC ^ v75) ^ v73) != 0) == 963705563)) ^ v68)))();
}

uint64_t sub_22B346240(int8x8_t a1, int8x8_t a2, uint64_t a3, int a4)
{
  unsigned int v9 = v4 - 8;
  int8x8_t v10 = vrev64_s8(*(int8x8_t *)(v6 + v9));
  *(int8x8_t *)(v7 + v9) = vrev64_s8(vadd_s8(vsub_s8(v10, vand_s8(vadd_s8(v10, v10), a1)), a2));
  return (*(uint64_t (**)(void))(v8 + 8 * ((992 * (v5 == -8)) ^ a4)))();
}

uint64_t sub_22B34624C()
{
  BOOL v5 = v0 != 1543089487 && LODWORD(STACK[0x31C]) - v2 == -902075540;
  return (*(uint64_t (**)(void))(v3 + 8 * (v5 | (32 * v5) | v1)))();
}

uint64_t sub_22B346298@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W8>)
{
  int v8 = a1 + *(unsigned __int8 *)(a2 + 1) - 2838;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((3444
                                * ((v8 ^ v6) + v4 + ((v5 + ((a3 + 567139343) & 0xDE3223EF) - 1003) & (2 * v8)) == a4)) ^ a3)))();
}

uint64_t sub_22B3462F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = v10 - 159347709;
  if ((v12 + 1) > 0x40) {
    int v13 = v12 + 1;
  }
  else {
    int v13 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((((v7 ^ 0x368) - 2386) * ((159347708 - v8 - v9 + v13) < 0xF)) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, 581582860);
}

uint64_t sub_22B346360@<X0>(int a1@<W2>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - 40608972);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v5 + 2) ^ *(unsigned char *)((v8 & 0xF) + v6 + 4) ^ (-127 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((206 * (a2 - 1 == v3)) ^ (a1 - 599))))();
}

uint64_t sub_22B3463C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((90
                                                                         * (a5 - v7 + (a6 ^ 0x24B64731C5A672A6uLL) > 0x1F)) ^ a6)))(a1, a2, a3, a2);
}

uint64_t sub_22B346414(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a3 - 2146) ^ 0x68C) * (v3 == v4)) ^ a3)))();
}

uint64_t sub_22B346448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  unsigned int v35 = (v32 + 1436848445) & 0xAA5B667F;
  char v36 = *(unsigned char *)(a31 + a6 + ((v35 + a1) & a2) - 1289883108);
  *(unsigned char *)(a3 + (v31 + v33)) = v36 - ((2 * v36) & 0x55) + 42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (int)((2255 * ((v33 + v31 + 1) < 0x40)) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_22B3464C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v49 = (v43 - 1811874899) | 0xB8C7821;
  *(_DWORD *)(v47 + 4 * (v44 - 1209861229)) = *(_DWORD *)(a43 + 4 * (v46 - 1286062318))
                                                            + v46
                                                            - 1286062318
                                                            + ((1664525
                                                              * (*(_DWORD *)(v47 + 4
                                                                                 * (v44 - 1209861230)) ^ (*(_DWORD *)(v47 + 4 * (v44 - 1209861230)) >> 30))) ^ *(_DWORD *)(v47 + 4 * (v44 - 1209861229)));
  unint64_t v50 = 1292559617
      * ((~((v48 - 144) | 0x85111CA4E5BC7E5FLL) + ((v48 - 144) & 0x85111CA4E5BC7E5FLL)) ^ 0xA374DE23BD10E9C9);
  *(_DWORD *)(v48 - 112) = v49 + 805418789 + v50;
  *(_DWORD *)(v48 - 108) = ((v49 + 805418789) ^ 0x1E) - v50;
  *(_DWORD *)(v48 - 140) = (v49 + 13955456) ^ v50;
  *(void *)(v48 - 136) = 3499200215u - v50;
  *(void *)(v48 - 128) = (v44 - 2005628309) - v50;
  *(_DWORD *)(v48 - 120) = v50 ^ (v49 + 805418789) ^ 0xD7;
  *(_DWORD *)(v48 - 116) = v50 ^ 1;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v49 + 1618122403)))(v48 - 144);
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * *(int *)(v48 - 144)))(v51);
}

uint64_t sub_22B3464E4()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x1C3)))(264, 4288951842) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (((v1 - 3486) | 0x200) - 620)) ^ v1)))();
}

void sub_22B346530(int a1@<W8>)
{
  int v6 = v2 ^ 0x4DF;
  unsigned int v7 = (v1 & 0xBFFFFFFF ^ 0xEDBAFB46)
     - 306513082
     + ((2 * ((v6 + 767228240) & (v1 & 0xBFFFFFFF ^ 0xEDBAFB46) ^ (v1 | 0x7FFFFFEE))) ^ 0x80000023)
     + 1;
  uint64_t v8 = *(void *)(v4 - 0x19157D3ABD2659DELL);
  unsigned int v9 = *v3 + a1;
  *(unsigned char *)(v8 + v9) = (v6 ^ 0xC8) + (HIBYTE(v7) ^ 0xED) - ((2 * (HIBYTE(v7) ^ 0xED)) & 0x55) + 91;
  *(unsigned char *)(v8 + v9 + 1) = (BYTE2(v7) ^ 0xBA) - 2 * ((BYTE2(v7) ^ 0xBA) & 0x2B ^ BYTE2(v7) & 1) + 42;
  *(unsigned char *)(v8 + v9 + 2) = (BYTE1(v7) ^ 0xFB) + (~(2 * (BYTE1(v7) ^ 0xFB)) | 0xAB) + 43;
  *(unsigned char *)(v8 + v9 + 3) = v7 ^ 0x6C;
  uint64_t v10 = *(void *)(v4 - 0x19157D3ABD2659DELL);
  unsigned int v11 = v5 - ((2 * v5 + 1495975412) & 0xD0BE2342) + 351564955;
  unsigned int v12 = ((2 * (a1 + *v3 + 4)) & 0xCFBFABFE) + ((a1 + *v3 + 4) ^ 0x67DFD5FF) - 1742722559;
  *(unsigned char *)(v10 + v12) = (HIBYTE(v11) ^ 0x68) - 2 * ((HIBYTE(v11) ^ 0x68) & 0x2B ^ HIBYTE(v11) & 1) + 42;
  *(unsigned char *)(v10 + v12 + 1) = (BYTE2(v11) ^ 0x5F) - ((2 * (BYTE2(v11) ^ 0x5F)) & 0x55) + 42;
  *(unsigned char *)(v10 + v12 + 2) = (((unsigned __int16)(v5 - ((2 * v5 - 14860) & 0x2342) + 29851) >> 8) ^ 0x11)
                            + (~(v11 >> 7) | 0xAB)
                            + 43;
  *(unsigned char *)(v10 + v12 + 3) = (v5 - ((2 * v5 - 12) & 0x42) - 101) ^ 0x8B;
  *int v3 = v13;
}

uint64_t sub_22B3466F8@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_22B346710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((a6 + 2142295503) & 0x804F2B7F ^ 0xFFFFFA07) + ((a6 - 1421439317) & 0x54B977ED))
                                     * (v6 == a5)) ^ (a6 + 181))))();
}

void sub_22B346770()
{
  *(_DWORD *)(v0 + 44) = -604050357;
}

uint64_t sub_22B3467BC@<X0>(int a1@<W2>, int a2@<W3>, unsigned int a3@<W4>, int a4@<W5>, uint64_t a5@<X6>, int a6@<W7>, int a7@<W8>)
{
  BOOL v14 = v9 < v10;
  *(unsigned char *)(v8 - 0x2970AB8229FC3D2ELL + ((v11 + 358) ^ a6 ^ (a2 + 1122)) + v7) = *(unsigned char *)(*(void *)(a5 + 32) + (a4 + a7 + 3155));
  unsigned int v15 = a7 + 1 + a1;
  int v16 = v14 ^ (v15 < a3);
  BOOL v17 = v15 < v9;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v14 * v12) ^ (v11 + 358))))();
}

uint64_t sub_22B34683C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((v5 + 1 == v6 + 40) | (16 * (v5 + 1 == v6 + 40)) | a5)))();
}

uint64_t sub_22B346908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((21 * (a8 + 1 != v9 + 48)) ^ a5)))(v8);
}

uint64_t sub_22B3469C8(uint64_t result)
{
  uint64_t v1 = 1990461019
     * (((result ^ 0x37A510289ECACBA2)
       - 2 * ((result ^ 0x37A510289ECACBA2) & 0x5052C542CFF637D4)
       + 0x5052C542CFF637D4) ^ 0x583999937ED85EFFLL);
  uint64_t v2 = *(void *)(result + 16);
  unint64_t v3 = v2 + v1;
  BOOL v4 = *(void *)result == v2;
  BOOL v5 = *(void *)result + v1 > v3;
  if (((*(_DWORD *)(result + 8) ^ (1990461019
                                  * (((result ^ 0x9ECACBA2)
                                    - 2 * ((result ^ 0x9ECACBA2) & 0xCFF637D4)
                                    - 805947436) ^ 0x7ED85EFF))) & 1) != 0)
    BOOL v4 = v5;
  BOOL v6 = !v4;
  uint64_t v7 = 36;
  if (!v6) {
    uint64_t v7 = 28;
  }
  *(_DWORD *)(result + 12) = (*(_DWORD *)(result + v7)
                            - 1990461019
                            * (((result ^ 0x9ECACBA2) - 2 * ((result ^ 0x9ECACBA2) & 0xCFF637D4) - 805947436) ^ 0x7ED85EFF)) ^ (*(_DWORD *)(result + 32) - 1990461019 * (((result ^ 0x9ECACBA2) - 2 * ((result ^ 0x9ECACBA2) & 0xCFF637D4) - 805947436) ^ 0x7ED85EFF));
  return result;
}

uint64_t sub_22B346A74(uint64_t a1)
{
  int v1 = 2009815553 * ((-2 - ((a1 | 0x2846D9B7) + (~a1 | 0xD7B92648))) ^ 0x26B2080D);
  int v2 = *(_DWORD *)(a1 + 12) ^ v1;
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v2 ^ 0x6B6))
          + ((((*(_DWORD *)(a1 + 8) + v1 - 673189852) > 6) * ((v2 + 1176) ^ 0x809 ^ (219 * (v2 ^ 0x7D9)))) ^ v2)
          - 1))();
}

uint64_t sub_22B346B28@<X0>(int a1@<W5>, char a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((78 * ((a2 & 8) == (((a1 + 1079) | 0x800) ^ ((a1 + 55) | 0xC00)))) ^ a1)))();
}

uint64_t sub_22B346B64()
{
  *(unsigned char *)(v3 + v0 - 433310473) = *(unsigned char *)(v2 + v0 - 433310473)
                                  - ((v4 - v5 + 101) & (2 * *(unsigned char *)(v2 + v0 - 433310473)))
                                  + 42;
  return (*(uint64_t (**)(void))(v6 + 8 * ((76 * (v0 - 1 != v1)) ^ v4)))();
}

void sub_22B346BB4()
{
}

uint64_t sub_22B346BBC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v11 = v8 > 0x1FCD81BE;
  *(unsigned char *)(a2 + ((v4 + 820) ^ 0x81A1D230) + a1) = *(unsigned char *)(v3 + ((((v4 + 820) ^ 0x81A1D230) + a1) & 0xFLL)) ^ *(unsigned char *)(v2 + ((v4 + 820) ^ 0x81A1D230) + a1) ^ *(unsigned char *)(v6 + ((((v4 + 52) ^ 0x30) + (_BYTE)a1) & 0xF)) ^ *(unsigned char *)(v5 + ((((v4 + 52) ^ 0x30) + (_BYTE)a1) & 0xF)) ^ (15 * ((((v4 + 52) ^ 0x30) + a1) & 0xF));
  unsigned int v12 = a1 + 1641305322;
  uint64_t v13 = (a1 + 1);
  int v14 = v11 ^ (v12 < v7);
  BOOL v15 = v12 < v9;
  if (!v14) {
    BOOL v11 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((234 * v11) ^ v4)))(v13);
}

uint64_t sub_22B346C54()
{
  int v6 = v3 ^ 0x8D80;
  int v7 = (v3 ^ 0x8D80) - 3258;
  unsigned int v8 = (char *)*(&off_26DE9F480 + (v3 ^ 0x8390)) - 8;
  unsigned int v9 = v8[v0[12] ^ 0xFELL];
  uint64_t v10 = (char *)*(&off_26DE9F480 + (v6 ^ 0xE7A)) - 12;
  BOOL v11 = (char *)*(&off_26DE9F480 + v6 - 3663) - 8;
  int v12 = v11[(v7 ^ v0[6] ^ 0x9D)];
  unsigned int v13 = v8[v0[8] ^ 0x1DLL];
  unsigned int v14 = v8[*v0 ^ 0xD7];
  int v15 = (v0[11] - ((2 * v0[11]) & 0x4E) - 89) ^ 0xA9 ^ v10[v0[11] ^ 0xB4] | ((v13 ^ 0x35 ^ ((v13 >> 1) & 0x40 | 0x2C)) << 24);
  int v16 = (v14 ^ ((v14 >> 1) & 0x40 | 0x2C) ^ 0x10) << 24;
  LOBYTE(v14) = v11[v0[2] ^ 0x23];
  LOBYTE(v14) = (v14 ^ 0x4F) + ((2 * v14) | 0x73) - 57;
  BOOL v17 = (char *)*(&off_26DE9F480 + v6 - 3448) - 4;
  unsigned int v18 = (v10[v0[15] ^ 0xC8] ^ (v0[15] - ((2 * v0[15]) & 0x4E) - 89) ^ 0x37) & 0xFF00FFFF | ((v9 ^ ((v9 >> 1) & 0x40 | 0x2C) ^ 0xE) << 24) | ((((v17[v0[13] ^ 0xECLL] - 74) ^ 0xE) - 96) << 16);
  unsigned int v186 = v8;
  unsigned int v19 = v8[v0[4] ^ 0x94];
  HIDWORD(v20) = v17[v0[5] ^ 0xA7];
  LODWORD(v20) = (HIDWORD(v20) << 24) + 1442840576;
  unsigned int v21 = ((v0[7] ^ 0xCC) - ((2 * (v0[7] ^ 0xCC)) & 0x4E) - 89) ^ v10[v0[7] ^ 0xD1] | (((((6 * (v12 ^ 0xFFFFFF89)) ^ v12) & 0xEE | (6 * (v12 ^ 0xFFFFFF89)) & 0x10 ^ v12 & 0x11111111) ^ 0x48) << 8) | ((v19 ^ 0x9E ^ ((v19 >> 1) & 0x40 | 0x2C)) << 24) | (((((((v20 >> 25) ^ 0xFFFFFF82) & 0x80) != 0) | (2 * ((v20 >> 25) ^ 0x82))) ^ 0xB8) << 16);
  char v22 = v11[v0[10] ^ 0x74];
  char v23 = v11[v0[(14 - (v19 ^ 0x2Cu) % 0xE) + (v19 ^ 0x2Cu) % 0xE] ^ 0x9ALL] ^ 0x89;
  unsigned int v24 = v15 & 0xFF0000FF | (((v22 ^ (6 * (v22 ^ 0x89))) ^ 0x1F) << 8) | (((v17[v0[9] ^ 0x35] + 86) ^ 0xB8) << 16);
  *(_DWORD *)(v5 - 224) = (v16 & 0xFF0000FF | (((v14 ^ (6 * v14)) ^ 0xC2) << 8) | (((v17[v0[1] ^ 0xC2] + 86) ^ 0x8D) << 16) | v10[v0[3] ^ 0x66] ^ (v0[3] + (~(2 * v0[3]) | 0xB1) - 88) ^ 0x7B) ^ 0x489EA3DF;
  *(_DWORD *)(v5 - 232) = v21 ^ 0x10140EA0;
  *(_DWORD *)(v5 - 236) = v24 ^ 0x5963049C;
  *(_DWORD *)(v5 - 240) = (v18 & 0xFFFF00FF | (((v23 ^ (6 * v23)) ^ 0xD2) << 8)) ^ 0x2F4DEC13;
  unsigned int v185 = v1 ^ (v2 + 2094);
  char v184 = v1 & 0x10;
  char v183 = v1 & 0x10 ^ 0x10;
  int v182 = v4;
  *(_DWORD *)(v5 - 244) = 0;
  *(void *)(v5 - 256) = 3;
  int v25 = v11[v4[6] ^ 0xA2];
  unsigned int v26 = v25 ^ (6 * (v25 ^ 0xFFFFFF89));
  unsigned __int8 v190 = (v4[3] - ((2 * v4[3]) & 0x4E) - 89) ^ v10[(v4[3] ^ ((v7 ^ 0x5D) - 85))];
  int v27 = ((v186[v4[4] ^ 0x72] >> 1) & 0x40 | 0x2C) ^ v186[v4[4] ^ 0x72];
  uint64_t v28 = v4[14];
  unsigned __int8 v188 = (v4[15] - ((2 * v4[15]) & 0x4E) - 89) ^ v10[v4[15] ^ 0x97];
  int v29 = ((v186[v4[12] ^ 0x7ALL] >> 1) & 0x40 | 0x2C) ^ v186[v4[12] ^ 0x7ALL];
  unsigned __int8 v30 = v17[v4[1] ^ 0x79] + 86;
  LOBYTE(v24) = v11[v4[10] ^ 0x3DLL];
  unsigned int v31 = ((v29 ^ 0x79) << 24) | (((v17[v4[13] ^ 0xA7] + 86) ^ 0xBD) << 16) | v188 ^ 0x8A | ((v11[v28 ^ 0xCB] ^ 0x8E ^ (6 * (v11[v28 ^ 0xCB] ^ 0x89) - ((12 * (v11[v28 ^ 0xCB] ^ 0x89)) & 0x9F) + 79)) << 8);
  unsigned __int8 v32 = (v4[7] - ((2 * v4[7]) & 0x4E) - 89) ^ v10[v4[7] ^ 0x43];
  int v33 = v4;
  LOBYTE(v19) = v17[v4[9] ^ 0x7ALL] + 86;
  int v34 = v10[v4[11] ^ 0xE3] ^ (v4[11] - ((2 * v4[11]) & 0x4E) - 89);
  unsigned int v35 = v8[v4[8] ^ 0xE4];
  int v36 = ((v35 >> 1) & 0x40 | 0x2C) ^ v35;
  char v37 = v11[v4[2] ^ 0x80];
  unint64_t v38 = ((((((v186[*v33 ^ 0x23] >> 1) & 0x40 | 0x2Cu) ^ v186[*v33 ^ 0x23] ^ 0xF2) << 24) | ((unint64_t)(v37 ^ 0xACu ^ (6 * (v37 ^ 0x89) - ((12 * (v37 ^ 0x89)) & 0x9F) + 79)) << 8) | v190 ^ 0x59 | ((v30 ^ 0xB1) << 16)) ^ 0xAF7E2A84) >> (v28 & 8) >> (v28 & 8 ^ 8);
  LODWORD(v28) = ((unsigned __int16)((v34 ^ 0xFE | (((v24 ^ (6 * (v24 ^ 0x89))) ^ 0x86) << 8)) ^ 0xDEC7) >> 8);
  int v39 = (v17[v4[13] ^ 0xA7] + 86) ^ 0xBD;
  int v192 = v7;
  uint64_t v40 = (uint64_t)*(&off_26DE9F480 + v7 - 384);
  int v41 = (char *)*(&off_26DE9F480 + v192 - 632) - 8;
  uint64_t v42 = (char *)*(&off_26DE9F480 + v192 - 389) - 4;
  LODWORD(v28) = *(_DWORD *)(v40
                           + 4
                           * (((v186[*v33 ^ 0x23] >> 1) & 0x40 | 0x2C) ^ v186[*v33 ^ 0x23] ^ 0x80u)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (v39 ^ 0x4E)] ^ (v28 + 1175159398 - ((((v34 ^ 0xFE | ((v36 ^ 0xB) << 24) | (((v24 ^ (6 * (v24 ^ 0x89))) ^ 0x86) << 8) | ((v19 ^ 0x4F) << 16)) ^ 0x2360DEC7u) >> 7) & 0xCC)) ^ *(_DWORD *)&v42[4 * (v28 ^ 0x81)];
  int v43 = (char *)*(&off_26DE9F480 + (v192 ^ 0x223)) - 4;
  LODWORD(v28) = (v28 + 1642881015 - ((2 * v28) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v32 ^ 0x75)];
  unsigned int v44 = *(_DWORD *)(v40 + 4 * (v27 ^ 0xC9u)) ^ *(_DWORD *)&v41[4 * (v30 ^ 0x8B)] ^ ((BYTE1(v31) ^ 3) + 1175159398 - 2 * ((BYTE1(v31) ^ 3) & 0x7E ^ (v31 >> 8) & 0x18)) ^ *(_DWORD *)&v43[4 * (v34 ^ 0x39)] ^ *(_DWORD *)&v42[4 * (BYTE1(v31) ^ 0x82)];
  unsigned int v45 = *(_DWORD *)&v41[4 * ((v17[v33[5] ^ 0x1BLL] + 86) ^ 0x28)] ^ *(_DWORD *)(v40
                                                                                               + 4
                                                                                               * (v36 ^ 0xF5u)) ^ (v38 + 1175159398 - ((2 * v38) & 0xCC)) ^ *(_DWORD *)&v43[4 * (v188 ^ 0x97)] ^ *(_DWORD *)&v42[4 * (v38 ^ 0x81)];
  int v46 = ((v26 ^ 0x89) + 1175159398 - ((2 * v26) & 0xCC)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (v19 ^ 0x6B)] ^ *(_DWORD *)(v40 + 4 * (v29 ^ 0xDDu)) ^ *(_DWORD *)&v42[4 * (v26 ^ 0xBE)];
  LODWORD(v38) = (v46 + 1642881015 - ((2 * v46) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v190 ^ 0x22)];
  LODWORD(v33) = *(_DWORD *)(v40 + 4 * (BYTE3(v28) ^ 0x90)) ^ *(_DWORD *)&v41[4 * (BYTE2(v38) ^ 0xEB)] ^ 0x86C8AEBF;
  int v47 = ((BYTE1(v45) ^ 0xB9) + 1175159398 - ((2 * ((v45 >> 8) ^ 0x1E0BB9)) & 0xCC)) ^ 0x6A63BB07 ^ *(_DWORD *)&v42[4 * (BYTE1(v45) ^ 0x38)];
  unsigned int v48 = v47 & v33;
  int v49 = v47 + v33;
  LODWORD(v33) = *(_DWORD *)&v43[4 * (v44 ^ 0x18)];
  unsigned int v50 = (~v49 + 2 * v48) ^ ((v33 ^ 0x61EC5FF7) + 188531526 + ((2 * v33) & 0x1679868A ^ 0xFDA77975));
  unsigned int v51 = *(_DWORD *)(v40 + 4 * (HIBYTE(v44) ^ 0x4D)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v28) ^ 0xFD)] ^ *(_DWORD *)&v42[4 * (BYTE1(v38) ^ 0xA1)] ^ ((BYTE1(v38) ^ 0x20) + 1175159398 - 2 * (((v38 >> 8) ^ 0xC6EB20) & 0x77 ^ (v38 >> 8) & 0x11));
  unsigned int v52 = (v51 + 1642881015 - ((2 * v51) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v45 ^ 0xFD)];
  unsigned int v53 = ((BYTE1(v28) ^ 0xCC)
       + 1175159398
       - 2 * (((v28 >> 8) ^ 0x90FDCC) & 0x77 ^ (v28 >> 8) & 0x11)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v44) ^ 0x11)] ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v45) ^ 0xC3)) ^ *(_DWORD *)&v42[4 * (BYTE1(v28) ^ 0x4D)];
  unsigned int v54 = (v53 + 1642881015 - ((2 * v53) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v38 ^ 0x59)];
  int v55 = *(_DWORD *)(v40 + 4 * (BYTE3(v38) ^ 0x1B)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v45) ^ 0x4F)];
  unsigned int v56 = ((2 * v50) | 0x9CB54B2F) - v50;
  int v57 = BYTE1(v44);
  unsigned int v58 = *(_DWORD *)&v43[4 * (v28 ^ 0xA)] ^ *(_DWORD *)&v42[4 * (BYTE1(v44) ^ 0x80)] ^ (v55 + 1175159398 - ((2 * v55) & 0x8C1704CC));
  LODWORD(v28) = (v57 ^ 1) - ((2 * (v57 ^ 1)) & 0xA2);
  unsigned int v59 = v56 - ((2 * v56 + 1665840336) & 0x95E9FFCE) - 56993201;
  int v60 = *(_DWORD *)(v40 + 4 * (HIBYTE(v59) ^ 0x97)) ^ *(_DWORD *)&v41[4 * (BYTE2(v58) ^ 0xD7)] ^ 0x48B79E48 ^ *(_DWORD *)&v42[4 * (BYTE1(v54) ^ 0x65)] ^ ((BYTE1(v54) ^ 0xE4) + 1175159398 - 2 * ((BYTE1(v54) ^ 0xE4) & 0x7E ^ (v54 >> 8) & 0x18));
  LODWORD(v33) = (v60 + 1642881015 - ((2 * v60) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v52 ^ 0x6F)];
  unsigned int v61 = (v28 - 747393967) ^ 0xB29FF3A6 ^ v58;
  LODWORD(v28) = *(_DWORD *)(v40 + 4 * (HIBYTE(v52) ^ 0x87)) ^ 0x48B79E48 ^ *(_DWORD *)&v42[4 * (BYTE1(v61) ^ 0x85)] ^ ((BYTE1(v61) ^ 4) + 1175159398 - 2 * (((v61 >> 8) ^ 0x5F7F04) & 0x77 ^ (v61 >> 8) & 0x11)) ^ *(_DWORD *)&v41[4 * (BYTE2(v59) ^ 0xB0)];
  LODWORD(v28) = (v28 + 1642881015 - ((2 * v28) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v54 ^ 0x27)];
  int v62 = (v59 >> 8) ^ 0x4AF4FF;
  int v63 = ~((unsigned __int16)(v56 - ((2 * v56 - 19248) & 0xFFCE) + 23119) >> 8);
  int v64 = (v63 + 1175159398 - ((2 * v62) & 0xCC)) ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v54) ^ 0xFD)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v52) ^ 0x73)] ^ *(_DWORD *)&v42[4 * (v63 ^ 0x81)];
  unsigned int v65 = v64 + 1642881015 - ((2 * v64) & 0xC3D8BFEE);
  unsigned int v66 = ((v52 >> 8) ^ 0x243F5058) & 0x7B590D ^ 0x89684522 ^ (((2 * ((v52 >> 8) ^ 0x243F5058)) & 0x4856B3A0)
                                                           - (((v52 >> 8) ^ 0x243F5058) & 0x247B59F2)
                                                           - 1991244766);
  int v67 = ((2 * v66) & 0x19D21D1C) - v66 + 857141617;
  LODWORD(v38) = ((v67 ^ 0x82B2F481) + 1784920840) ^ ((v67 ^ 0xE8D14F86) + 1);
  int v68 = v67 ^ 0xB386A653 ^ (v38 - ((2 * v38) & 0x49502C54) - 1532488150);
  LODWORD(v38) = *(_DWORD *)(v40 + 4 * (HIBYTE(v58) ^ 0xE3)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v54) ^ 0x9A)];
  int v69 = (v68 + 1784920839) ^ *(_DWORD *)&v42[4 * (BYTE1(v52) ^ 0xD1)] ^ (v38 + 1175159398 - ((2 * v38) & 0x8C1704CC));
  LODWORD(v38) = (v69 + 1642881015 - ((2 * v69) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (-105 - v56)];
  unsigned int v70 = v65 ^ *(_DWORD *)&v43[4 * (v61 ^ 0x6F)];
  int v71 = *(_DWORD *)(v40 + 4 * ((v33 >> 24) ^ 0x8B)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4
                                                                                                 * ((BYTE2(v38) ^ 0x42)
                                                                                                  - ((2 * (WORD1(v38) ^ 0x6642)) & 0x88))
                                                                                                 + 272];
  unsigned int v72 = *(_DWORD *)&v43[4 * (v28 ^ 0x8F)] ^ *(_DWORD *)&v42[4 * (BYTE1(v70) ^ 0x69)] ^ (v71 + 1175159398 - ((2 * v71) & 0x8C1704CC));
  unsigned int v73 = *(_DWORD *)(v40 + 4 * (BYTE3(v28) ^ 0x37)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v33) ^ 0xE2)] ^ ((BYTE1(v38) ^ 7) + 1175159398 - 2 * ((BYTE1(v38) ^ 7) & 0x7E ^ (v38 >> 8) & 0x18)) ^ *(_DWORD *)&v42[4 * (BYTE1(v38) ^ 0x86)];
  unsigned int v74 = (v73 + 1642881015 - ((2 * v73) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4
                                                                      * ((v65 ^ v43[4 * (v61 ^ 0x6F)]) ^ 0x8A)];
  unsigned int v75 = ((BYTE1(v33) ^ 0x62)
       + 1175159398
       - 2 * (((v33 >> 8) ^ 0x8BE262) & 0x77 ^ (v33 >> 8) & 0x11)) ^ 0x48B79E48 ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v70) ^ 9)) ^ *(_DWORD *)&v42[4 * (BYTE1(v33) ^ 0xE3)] ^ *(_DWORD *)&v41[4 * (BYTE2(v28) ^ 0x76)];
  unsigned int v76 = (v75 + 1642881015 - ((2 * v75) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v38 ^ 0x8D)];
  int v77 = *(_DWORD *)&v41[4 * (BYTE2(v70) ^ 0x2D)] ^ 0x48B79E48 ^ *(_DWORD *)(v40 + 4 * (BYTE3(v38) ^ 0x66));
  v191[0] = v28 >> 8;
  unsigned int v78 = (v77 + 1175159398 - ((2 * v77) & 0x8C1704CC)) ^ *(_DWORD *)&v42[4 * (BYTE1(v28) ^ 0x9F)];
  LODWORD(v33) = (v78 + 1642881015 - ((2 * v78) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v33 ^ 0xCF)];
  int v79 = *(_DWORD *)&v41[4 * (BYTE2(v33) ^ 0x8C)];
  unsigned int v80 = ((2 * v79) & 0x8056C88 ^ 0xFFFAF77F) + (v79 ^ 0x109FCC58);
  unsigned int v81 = *(_DWORD *)&v42[4 * (BYTE1(v76) ^ 0x2B)] ^ ((BYTE1(v76) ^ 0xAA)
                                                  + 1175159398
                                                  - ((2 * ((v76 >> 8) ^ 0x4DDBAA)) & 0xCC)) ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v72) ^ 0xCB)) ^ (v80 - ((2 * v80 + 134573194) & 0xB050A420) - 601159595);
  int v82 = v81 ^ 0x201E3DB4;
  LODWORD(v38) = *(_DWORD *)&v43[4 * (v74 ^ 0x82)];
  int v83 = ((v81 ^ 0x201E3DB4) + 1642881015 - 2 * ((v81 ^ 0x201E3DB4) & 0x61EC5FFF ^ v81 & 8)) ^ v38;
  int v84 = v83 & 0x3984C735 | ((v82 + 1642881015 - ((2 * v82) & 0xC3D8BFEE)) ^ v38) & 0xC67B38CA;
  LOBYTE(v38) = v72 ^ BYTE1(v70);
  int v85 = (v72 >> 8) ^ 0x167F83;
  int v86 = v84 - 2 * (v84 & 0x481527FA ^ v83 & 0x10);
  int v87 = *(_DWORD *)(v40 + 4 * (HIBYTE(v74) ^ 0xCF)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v72) ^ 0x3B)];
  int v88 = BYTE1(v33);
  unsigned int v89 = *(_DWORD *)&v43[4 * (v76 ^ 0xC7)] ^ *(_DWORD *)&v42[4 * (BYTE1(v33) ^ 0x89)] ^ (v87 + 1175159398 - ((2 * v87) & 0x8C1704CC));
  HIDWORD(v20) = *(_DWORD *)(v40 + 4 * (HIBYTE(v76) ^ 0x4D)) ^ 0x86C8AEBF ^ *(_DWORD *)&v41[4 * (BYTE2(v74) ^ 0x50)];
  LODWORD(v20) = HIDWORD(v20);
  LODWORD(v20) = (v20 >> 20) ^ __ROR4__((v85 + 1175159398 - ((2 * v85) & 0xCC)) ^ 0x6A63BB07 ^ *(_DWORD *)&v42[4 * (v85 ^ 0x81)], 20) ^ 0x749397B4;
  HIDWORD(v20) = v20;
  LOBYTE(v21) = v33 ^ BYTE1(v28) ^ 0x1E;
  unsigned int v90 = *(_DWORD *)(v40 + 4 * ((v33 >> 24) ^ 0x76)) ^ ((BYTE1(v74) ^ 0x20)
                                                                     + 1175159398
                                                                     - 2
                                                                     * (((v74 >> 8) ^ 0xCF1420) & 0x76 ^ (v74 >> 8) & 0x10)) ^ *(_DWORD *)&v41[4 * (BYTE2(v76) ^ 0x9F)] ^ *(_DWORD *)&v42[4 * (BYTE1(v74) ^ 0xA1)] ^ *(_DWORD *)&v43[4 * (v38 ^ 0xCF)];
  int v91 = *(_DWORD *)&v43[4 * (v21 ^ 0xC2)] ^ 0x707B8A7C ^ ((v20 >> 12)
                                                                         + 1642881015
                                                                         - ((2 * (v20 >> 12)) & 0xC3D8BFEE));
  unsigned int v92 = (v91 & 0x20 | 0x90F01D9E) ^ v91 & 0xFFFFFFDF;
  unsigned int v93 = v86 - 938137622;
  unsigned int v94 = *(_DWORD *)&v41[4 * (((v86 - 938137622) >> 16) ^ 0x70)] ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v89) ^ 0x77)) ^ (((unsigned __int16)(v90 ^ 0x3F78) >> 8) + 1175159398 - (((v90 ^ 0xBCC83F78) >> 7) & 0xCC)) ^ *(_DWORD *)&v42[4 * (((unsigned __int16)(v90 ^ 0x3F78) >> 8) ^ 0x81)] ^ *(_DWORD *)&v43[4 * ((v91 & 0x20 | 0x9E) ^ v91 & 0xDF ^ 0xAC)];
  unsigned int v95 = v88 ^ 0xAAEBFF6F ^ v89;
  unsigned int v96 = *(_DWORD *)(v40 + 4 * (HIBYTE(v92) ^ 0xCE)) ^ *(_DWORD *)&v41[4 * (BYTE2(v89) ^ 0xAF)] ^ ((BYTE1(v93) ^ 0x8A)
                                                                                                  + 1175159398
                                                                                                  - 2 * (((v93 >> 8) ^ 0x70348A) & 0x76 ^ (v93 >> 8) & 0x10)) ^ *(_DWORD *)&v43[4 * (v90 ^ 0x78)] ^ *(_DWORD *)&v42[4 * (BYTE1(v93) ^ 0xB)];
  LOBYTE(v84) = (v41[4 * (BYTE2(v93) ^ 0x70)] ^ *(unsigned char *)(v40 + 4 * (HIBYTE(v89) ^ 0x77)) ^ (((unsigned __int16)(v90 ^ 0x3F78) >> 8)
                                                                                              + 102
                                                                                              - (((v90 ^ 0xBCC83F78) >> 7) & 0xCC)) ^ v42[4 * (((unsigned __int16)(v90 ^ 0x3F78) >> 8) ^ 0x81)] ^ v43[4 * ((v91 & 0x20 | 0x9E) ^ v91 & 0xDF ^ 0xAC)]) & 0x10;
  unsigned int v97 = *(_DWORD *)(v40 + 4 * (HIBYTE(v90) ^ 0x61)) ^ (BYTE1(v95) + 1175159398 - ((v95 >> 7) & 0xCC)) ^ *(_DWORD *)&v42[4 * (BYTE1(v95) ^ 0x81)] ^ *(_DWORD *)&v41[4 * (BYTE2(v92) ^ 0xDB)] ^ *(_DWORD *)&v43[4 * (v93 ^ 0xC)];
  int v98 = *(_DWORD *)&v41[4 * (((v96 ^ 0x6093EB95) >> v84 >> (v84 ^ 0x10)) ^ 0x44)];
  unsigned int v99 = (v98 & 0x80 | 0x8402B644) ^ v98 & 0xFFFFFF7F;
  unsigned int v100 = (v99 & 0x2000 ^ 0xAF6BFF7D) + 2 * (v99 & 0x2000);
  int v101 = *(_DWORD *)&v43[4 * v95];
  int v102 = *(_DWORD *)(v40 + 4 * (HIBYTE(v97) ^ 0xE3));
  if ((v101 & 0x80000) != 0) {
    int v103 = 0x80000;
  }
  else {
    int v103 = -524288;
  }
  BOOL v104 = ((v100 + 1351876739) & (v102 ^ 0x58284000)) == 0;
  unsigned int v105 = *(_DWORD *)&v41[4 * (BYTE2(v90) ^ 0x8C)] ^ *(_DWORD *)&v42[4 * (BYTE1(v92) ^ 2)] ^ (v103 + (v101 ^ 0x61EC5FF7)) ^ ((BYTE1(v92) ^ 0x83) + 1175159398 - ((2 * ((v92 >> 8) ^ 0x139F83)) & 0xCC)) ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v93) ^ 0xAD));
  unsigned int v106 = *(_DWORD *)&v42[4 * (((unsigned __int16)(v96 ^ 0xEB95) >> 8) ^ 0x81)] ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v105) ^ 0x8E)) ^ *(_DWORD *)&v41[4 * ((v97 ^ 0x3E43B5C2) >> 16)] ^ (((unsigned __int16)(v96 ^ 0xEB95) >> 8) + 1175159398 - (((v96 ^ 0x6093EB95) >> 7) & 0xCC)) ^ *(_DWORD *)&v43[4 * (v94 ^ 0xFB)];
  unsigned int v107 = *(_DWORD *)&v41[4 * (BYTE2(v105) ^ 0x10)] ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v94) ^ 0x8D)) ^ (((unsigned __int16)(v97 ^ 0xB5C2) >> 8) + 1175159398 - (((v97 ^ 0x3E43B5C2) >> 7) & 0xCC)) ^ *(_DWORD *)&v42[4 * (((unsigned __int16)(v97 ^ 0xB5C2) >> 8) ^ 0x81)] ^ *(_DWORD *)&v43[4 * (v96 ^ 0x6A)];
  int v108 = *(_DWORD *)(v40 + 4 * (HIBYTE(v96) ^ 0xBD)) ^ ((BYTE1(v105) ^ 0xD4)
                                                        + 1175159398
                                                        - 2 * (((v105 >> 8) ^ 0x8E10D4) & 0x6F ^ (v105 >> 8) & 9)) ^ *(_DWORD *)&v41[4 * (BYTE2(v94) ^ 0xA5)] ^ *(_DWORD *)&v42[4 * (BYTE1(v105) ^ 0x55)] ^ *(_DWORD *)&v43[4 * (v97 ^ 0x3D)];
  unsigned int v109 = v100 + 1978946264;
  unsigned int v110 = -724807214 - v100;
  if (v104) {
    unsigned int v110 = v109;
  }
  unsigned int v111 = *(_DWORD *)&v42[4 * (BYTE1(v94) ^ 0x9A)] ^ ((BYTE1(v94) ^ 0x1B)
                                                   + 1175159398
                                                   - ((2 * ((v94 >> 8) ^ 0x50E11B)) & 0xCC)) ^ *(_DWORD *)&v43[4 * (v105 ^ 0x2A)] ^ v99 & 0xFFFFDFFF ^ ((v102 ^ 0x1255D4A3) - 627069525 + v110);
  int v112 = *(_DWORD *)(v40 + 4 * (HIBYTE(v106) ^ 3)) ^ 0x48B79E48 ^ *(_DWORD *)&v41[4 * (BYTE2(v111) ^ 0x5C)];
  unsigned int v113 = v112 + 1175159398 - ((2 * v112) & 0x8C1704CC);
  int v114 = ((unsigned __int16)(v108 ^ 0x6D13) >> 8);
  int v115 = v113 ^ *(_DWORD *)&v42[4 * (v114 ^ 0x81)];
  unsigned int v116 = (v115 + 1642881015 - ((2 * v115) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v107 ^ 0x5B)];
  int v117 = ((BYTE1(v111) ^ 0xA1) + 1175159398 - ((2 * ((v111 >> 8) ^ 0x4F18A1)) & 0xCC)) ^ *(_DWORD *)&v42[4 * (BYTE1(v111) ^ 0x20)];
  unsigned int v118 = *(_DWORD *)&v41[4 * (BYTE2(v106) ^ 0x8D)] ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v107) ^ 0x38)) ^ *(_DWORD *)&v43[4 * (v108 ^ 0xEC)] ^ (v117 + 1642881015 - ((2 * v117) & 0xC3D8BFEE));
  unsigned int v119 = *(_DWORD *)(v40 + 4 * ((v108 ^ 0x6AA96D13u) >> 24)) ^ ((BYTE1(v106) ^ 0xD0)
                                                                + 1175159398
                                                                - 2
                                                                * (((v106 >> 8) ^ 0xDEC9D0) & 0x6E ^ (v106 >> 8) & 8)) ^ *(_DWORD *)&v41[4 * (((v107 ^ 0x327FCD89) >> 16) ^ 0xB1)] ^ *(_DWORD *)&v42[4 * (BYTE1(v106) ^ 0x51)] ^ *(_DWORD *)&v43[4 * (v111 ^ 0xCD)];
  int v120 = *(_DWORD *)(v40 + 4 * (HIBYTE(v111) ^ 0x92));
  int v121 = *(_DWORD *)&v41[4 * (BYTE2(v108) ^ 0xED)];
  int v122 = v120 & 0x10 | 0x4BDBB50A;
  if ((v120 & 0x10 & ~v121) != 0) {
    int v122 = -1749587436 - v122;
  }
  int v123 = (v121 ^ 0x109FCC58) - 1272689930 + v122;
  int v124 = *(_DWORD *)&v42[4 * (BYTE1(v107) ^ 0x8C)];
  unsigned int v125 = (v123 ^ 0x8402B644) + (v120 & 0x80000000);
  unsigned int v126 = *(_DWORD *)&v43[4 * ((2 * v106) ^ 0xFFFFFF43) + 4 * (v106 ^ 0x15E)] ^ (v124 & 0xA2AADE60 ^ (BYTE1(v107) ^ 0x6A63BB0A) & 0x22229A60 | v124 & 0x5D55219F ^ (BYTE1(v107) ^ 0x6A63BB0A) & 0x4841219F) ^ v120 & 0x7FFFFFEF;
  int v127 = v116 ^ v114;
  int v128 = *(_DWORD *)(v40 + 4 * (HIBYTE(v116) ^ 0xC1));
  unsigned int v129 = v126 ^ v125;
  int v130 = ((unsigned __int16)(v119 ^ 0xFDCA) >> 8);
  int v131 = v128 ^ v130 ^ *(_DWORD *)&v41[4 * (((v126 ^ v125) >> 16) ^ 0x8C)];
  int v132 = ((v131 ^ 0x48B79E48) + 1175159398 - 2 * ((v131 ^ 0x48B79E48) & 0x460B8277 ^ v131 & 0x11)) ^ *(_DWORD *)&v42[4 * (v130 ^ 0x81)];
  unsigned int v133 = (v132 + 1642881015 - ((2 * v132) & 0xC3D8BFEE)) ^ *(_DWORD *)&v43[4 * (v118 ^ 0x70)];
  int v134 = *(_DWORD *)(v40 + 4 * HIBYTE(v118)) ^ *(_DWORD *)&v43[4 * (v119 ^ 0xCA)] ^ *(_DWORD *)&v42[4 * (BYTE1(v129) ^ 0xF1)] ^ ((BYTE1(v129) ^ 0x70) + 1175159398 - 2 * (((v129 >> 8) ^ 0x51C870) & 0x6E ^ (v129 >> 8) & 8)) ^ *(_DWORD *)&v41[4 * (((v127 ^ 0x1C884693u) >> v184 >> v183) ^ 0x44)];
  unsigned int v135 = *(_DWORD *)(v40 + 4 * (HIBYTE(v119) ^ 8)) ^ (((unsigned __int16)(v127 ^ 0x4693) >> 8)
                                                      + 1175159398
                                                      - (((v127 ^ 0x1C884693u) >> 7) & 0xCC)) ^ *(_DWORD *)&v41[4 * (BYTE2(v118) ^ 0x30)] ^ *(_DWORD *)&v43[4 * (v129 ^ 0xC6)] ^ *(_DWORD *)&v42[4 * (((unsigned __int16)(v127 ^ 0x4693) >> 8) ^ 0x81)];
  unsigned int v136 = *(_DWORD *)&v41[4 * (BYTE2(v119) ^ 0xBC)] ^ ((BYTE1(v118) ^ 0x1F)
                                                    + 1175159398
                                                    - ((2 * ((v118 >> 8) ^ 0x301F)) & 0xCC)) ^ *(_DWORD *)(v40 + 4 * (HIBYTE(v129) ^ 0x8C)) ^ *(_DWORD *)&v42[4 * (BYTE1(v118) ^ 0x9E)] ^ *(_DWORD *)&v43[4 * (v127 ^ 0x6C)];
  unsigned int v137 = (v134 ^ 0xBE55DC84) >> (v136 & 0x18 ^ 8) >> (v136 & 0x18 ^ 0x10);
  int v138 = (char *)*(&off_26DE9F480 + (v192 ^ 0x246)) - 8;
  int v189 = *(_DWORD *)&v138[4 * (HIWORD(v136) & 0xDF ^ 0xDB ^ (HIWORD(v136) & 0x20 | 0xDF))];
  int v139 = *(_DWORD *)&v138[4 * (BYTE2(v133) ^ 0x65)];
  int v140 = *(_DWORD *)&v138[4 * (BYTE2(v134) ^ 0x8A)];
  int v141 = *(_DWORD *)&v138[4 * (BYTE2(v135) ^ 0xA1)];
  unsigned int v142 = (char *)*(&off_26DE9F480 + v192 - 288) - 4;
  unsigned int v143 = HIBYTE(v133);
  int v187 = *(_DWORD *)&v142[4 * (HIBYTE(v133) ^ 0xED)];
  int v144 = *(_DWORD *)&v142[4 * (v137 ^ 0x4A)];
  int v145 = *(_DWORD *)&v142[4 * (HIBYTE(v135) ^ 0x14)];
  int v146 = *(_DWORD *)&v142[4 * (HIBYTE(v136) ^ 0x41)];
  HIDWORD(v147) = v141 ^ 0x2C727;
  LODWORD(v147) = v141 ^ 0x46980000;
  int v148 = (v147 >> 18) + 807057187 - ((2 * (v147 >> 18)) & 0x60356E46);
  int v149 = (char *)*(&off_26DE9F480 + v192 - 380) - 8;
  int v150 = *(_DWORD *)&v149[4 * (BYTE1(v135) ^ 0xBC)];
  int v151 = *(_DWORD *)&v149[4 * (BYTE1(v136) ^ 0xCF)];
  int v152 = *(_DWORD *)&v149[4 * (BYTE1(v133) ^ 0xD8)];
  unsigned int v153 = *(_DWORD *)&v149[4 * (BYTE1(v134) ^ 0xC6)];
  int v154 = (char *)*(&off_26DE9F480 + (v192 ^ 0x33F)) - 4;
  int v155 = *(_DWORD *)&v154[4 * (v134 ^ 0xE1)];
  int v156 = *(_DWORD *)&v154[4 * (v135 ^ 0xF8)];
  int v157 = *(_DWORD *)&v154[4 * (v136 ^ 0xC4)];
  int v158 = *(_DWORD *)&v154[4 * (v133 ^ 0xA2)];
  HIDWORD(v147) = v158 ^ 0x27C317;
  LODWORD(v147) = v158 ^ 0x2B800000;
  unsigned int v159 = HIBYTE(v136) ^ *(_DWORD *)(v5 - 240) ^ v153 ^ (((v153 >> 1) & 0x7BD6B2A3 ^ 0x1A049280 ^ v148 ^ v146 ^ (v147 >> 22))
                                                      + 793635859
                                                      - 2
                                                      * (((v153 >> 1) & 0x7BD6B2A3 ^ 0x1A049280 ^ v148 ^ v146 ^ (v147 >> 22)) & 0x2F4DEC7E ^ (v148 ^ v146 ^ (v147 >> 22)) & 0x1C)
                                                      + 79);
  unsigned int v160 = (char *)*(&off_26DE9F480 + v192 - 307) - 12;
  v182[12] = v160[HIBYTE(v159) ^ 0x70] ^ (v160[HIBYTE(v159) ^ 0x70] >> 2) & 0x19 ^ 0xEF;
  unsigned int v161 = ((HIBYTE(v135) ^ 0x29) + 807057187 - 2 * ((HIBYTE(v135) ^ 0x29) & 0x37 ^ HIBYTE(v135) & 0x14)) ^ 0xED1A43F1 ^ v145;
  unsigned int v162 = ((v140 ^ 0x469AC727u) >> (v191[0] & 0x12 ^ 0x10) >> (v191[0] & 0x12 ^ 2)) | (v140 << 14) ^ 0xB1C9C000;
  int v163 = (v162 & 0x20000000 ^ 0x7FB1D3FB) + 2 * (v162 & 0x20000000);
  BOOL v104 = ((v163 - 2142360571) & v161) == 0;
  int v164 = v163 - 1090555912;
  int v165 = -1100802066 - v163;
  if (v104) {
    int v165 = v164;
  }
  HIDWORD(v166) = v157 ^ 0x27C317;
  LODWORD(v166) = v157 ^ 0x2B800000;
  HIDWORD(v166) = v166 >> 22;
  LODWORD(v166) = HIDWORD(v166);
  unsigned int v167 = *(_DWORD *)(v5 - 236) ^ __ROR4__((v166 >> 7) ^ __ROR4__(((v152 ^ 0x3409ADA8u) >> 1) & 0x7BD6B2A3 ^ v152 ^ 0x3409ADA8 ^ v162 & 0xDFFFFFFF ^ (v161 - 1051804659 + v165), 7) ^ 0x953947F8, 25);
  unsigned int v168 = (char *)*(&off_26DE9F480 + v192 - 473) - 12;
  v182[9] = v168[BYTE2(v167) ^ 0x92] ^ 0x9E;
  HIDWORD(v166) = v139 ^ 0x2C727;
  LODWORD(v166) = v139 ^ 0x46980000;
  int v169 = v166 >> 18;
  HIDWORD(v166) = v156 ^ 0x27C317;
  LODWORD(v166) = v156 ^ 0x2B800000;
  unsigned int v170 = (v137 + 807057187 + (~(2 * v137) | 0xFFFFFFB9) + 1) ^ *(_DWORD *)(v5 - 232) ^ v144 ^ v151 ^ 0x3409ADA8 ^ ((v151 ^ 0x3409ADA8u) >> 1) & 0x7BD6B2A3 ^ (v166 >> 22) ^ v169;
  unsigned int v171 = (char *)*(&off_26DE9F480 + v192 - 401) - 12;
  v182[7] = ((v170 ^ 0xFE) + (~(2 * (v170 ^ 0xFE)) | 0xB1) - 88) ^ 0xD9 ^ v171[v170 ^ 0x9DLL];
  unsigned int v172 = v187 ^ ((v143 ^ 0xA7) + 807057187 - ((2 * (v143 ^ 0xA7)) & 0x46)) ^ 0xED1A4386;
  HIDWORD(v166) = v189 ^ 0x2C727;
  LODWORD(v166) = v189 ^ 0x46980000;
  int v173 = (v166 >> 18) + v172 - 2 * ((v166 >> 18) & v172);
  HIDWORD(v166) = v155 ^ 0x27C317;
  LODWORD(v166) = v155 ^ 0x2B800000;
  int v174 = ((v150 ^ 0x3409ADA8u) >> 1) & 0x7BD6B2A3 ^ v150 ^ 0x3409ADA8 ^ (v166 >> 22) ^ v173;
  int v175 = v174 + (*(_DWORD *)(v5 - 224) ^ 0x489EA365) - 2 * (v174 & (*(_DWORD *)(v5 - 224) ^ 0x489EA365));
  unsigned int v176 = v160[HIBYTE(v170) ^ 0x3DLL];
  v182[4] = v176 ^ (((v176 >> 2) & 0x19 ^ 0x11) + (~(2 * ((v176 >> 2) & 0x19 ^ 0x11)) | 0xCF) + 93) ^ 0xF3;
  v182[8] = v160[HIBYTE(v167) ^ 0xD3] ^ 0x17 ^ (v160[HIBYTE(v167) ^ 0xD3] >> 2) & 0x19;
  unsigned int v177 = v175 - ((2 * v175) & 0xE9CB5D62) - 186274127;
  *int v182 = v160[HIBYTE(v177) ^ 0xB3] ^ 0x4E ^ (v160[HIBYTE(v177) ^ 0xB3] >> 2) & 0x19;
  v182[13] = v168[((v159 ^ 0x3598B97B) >> (v159 & 0x10 ^ 0x10) >> (v159 & 0x10)) ^ 0xDELL] ^ 0x46;
  v182[15] = ((v159 ^ 0xA3) + ~(2 * ((v159 ^ 0xA3) & 0x2F ^ v159 & 8)) - 88) ^ v171[v159 ^ 0x93] ^ 0x1C;
  unsigned int v178 = (char *)*(&off_26DE9F480 + v192 - 406) - 4;
  v182[14] = ((BYTE1(v159) ^ 0xB9) - ((2 * (BYTE1(v159) ^ 0xB9)) & 0xF4) - 6) ^ v178[BYTE1(v159) ^ 0x95] ^ 0x11;
  v182[11] = v167 ^ 0xD3 ^ ((v171[v167 ^ 0xF0] ^ 0x3F) & (v171[v167 ^ 0xF0] ^ 0xA7) | v171[v167 ^ 0xF0] & 0x98 ^ 0x88);
  v182[6] = ((BYTE1(v170) ^ 0xAF) + (~(2 * (BYTE1(v170) ^ 0xAF)) | 0xB) - 5) ^ 0x3B ^ v178[BYTE1(v170) ^ 0x84];
  v182[10] = ((BYTE1(v167) ^ 4) - ((v167 >> 7) & 0xF4) - 6) ^ 0xC2 ^ v178[BYTE1(v167) ^ 0x5CLL];
  uint64_t v179 = *(unsigned int *)(v5 - 244);
  char v180 = 121 - (v177 & 2);
  if ((v171[v177 ^ 0x46] & v177 & 2) == 0) {
    char v180 = v177 & 2 | 0x79;
  }
  v182[*(void *)(v5 - 256)] = v177 & 0xFD ^ ((v171[v177 ^ 0x46] ^ 0x88) + v180 - 121) ^ 0x60;
  v182[5] = v168[BYTE2(v170) ^ 0xAALL] ^ 0xED;
  v182[2] = ((BYTE1(v177) ^ 0xA9) - ((2 * (BYTE1(v177) ^ 0xA9)) & 0xF4) - 6) ^ 0xCE ^ v178[BYTE1(v177) ^ 0x1ALL];
  v182[1] = v168[BYTE2(v177) ^ 0xELL] ^ 0xF6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 216) + 8 * ((79 * (v185 <= 0x10)) ^ v192)))(59, v179);
}

uint64_t sub_22B348F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  int v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * v27);
  int v34 = STACK[0x2AC];
  int v35 = STACK[0x2AC];
  int v36 = STACK[0x2B0];
  int v37 = STACK[0x2B4];
  int v38 = STACK[0x2B0];
  uint64_t v39 = LODWORD(STACK[0x2B4]);
  int v40 = LOBYTE(STACK[0x2C0]) ^ 0x22;
  if (v40 == 2)
  {
    BOOL v45 = (unint64_t)&STACK[0x260] < a27 && v32 < (unint64_t)&STACK[0x2A0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8 * (((v28 - 30) * v45) ^ (v28 + 2226))))(v39, 26568505);
  }
  else if (v40 == 1)
  {
    BOOL v42 = (unint64_t)&STACK[0x260] < a27 && v32 < (unint64_t)&STACK[0x2A0];
    return (*(uint64_t (**)(uint64_t))(v29 + 8 * (((((v28 + 602) | 0x101) - 864) * v42) ^ (v28 + 1615))))(v39);
  }
  else
  {
    LODWORD(STACK[0x2A8]) = 2 * (LODWORD(STACK[0x2A8]) ^ v30) + v30 - (v31 & (4 * (LODWORD(STACK[0x2A8]) ^ v30)));
    LODWORD(STACK[0x2AC]) = (v35 ^ v30) + (v34 ^ v30) + v30 - (v31 & (2 * ((v35 ^ v30) + (v34 ^ v30))));
    LODWORD(STACK[0x2B0]) = (v38 ^ v30) + (v36 ^ v30) + v30 - (v31 & (2 * ((v38 ^ v30) + (v36 ^ v30))));
    LODWORD(STACK[0x2B4]) = (v39 ^ v30) + (v37 ^ v30) + v30 - (v31 & (2 * ((v39 ^ v30) + (v37 ^ v30))));
    return v33(v39, a2, a3, &STACK[0x260], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21);
  }
}

uint64_t sub_22B349138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, int a17)
{
  unsigned int v22 = ((2 * (&a14 & 0x26C43AE8) - &a14 + 1497089296) ^ 0xFE68AD79) * v19;
  a15 = a12;
  a14 = v22 + 1097015307 * v17 + 2128238812;
  a17 = v21 - v22 + 690;
  uint64_t v23 = (*(uint64_t (**)(int *))(v18 + 8 * (v21 ^ 0x136D)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((a16 == (((v21 + 29367506) | 0x601304C8) ^ v20)) * ((v21 + 600) ^ 0x55D)) ^ v21)))(v23);
}

uint64_t sub_22B3491FC(uint64_t a1, uint64_t a2)
{
  *int v3 = v3[623];
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((5 * ((v2 - 569) ^ 0x333)) ^ 0xFFFFF3AC) + v4 == v5)
                                * ((17 * ((v2 - 569) ^ 0x14F)) ^ 0xA3F)) ^ (v2 - 569))))();
}

uint64_t sub_22B349258@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v3 + 1940) ^ (v3 + 3701)) * (v1 - v2 + 43877168 == a1 - 99139911)) ^ v3)))();
}

uint64_t sub_22B3492A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46,unint64_t a47,uint64_t a48,unint64_t a49,unint64_t a50)
{
  *(void *)(a7 + 416) = *(void *)(a7 + 312);
  LODWORD(STACK[0x368]) = STACK[0x294];
  int v53 = STACK[0x464];
  unint64_t v54 = STACK[0x278];
  if ((LODWORD(STACK[0x464]) - 1187837911) >= 2)
  {
    if (v53 != 1187837913)
    {
      LODWORD(STACK[0x290]) = 604092324;
      int v68 = (char *)&a9 + v50 - 0x3D63BD92DA195D22;
      STACK[0x240] = (unint64_t)(v68 + 2048);
      STACK[0x248] = (unint64_t)(v68 + 2176);
      STACK[0x250] = (unint64_t)(v68 + 2304);
      JUMPOUT(0x22B35298CLL);
    }
    int v55 = (v54 + 1078166185) & 0xBFBC73E7;
    unint64_t v61 = *(void *)(a7 + 312);
    int v62 = STACK[0x294];
    int v63 = 1734664879 * ((v51 - 192) ^ 0x2FDB281A);
    STACK[0x1968] = *(void *)(a7 + 416);
    STACK[0x1970] = v61;
    *(_DWORD *)(v51 - 160) = -1652557547 - v63 + v54;
    STACK[0x1950] = a46;
    STACK[0x1948] = a47;
    *(_DWORD *)(v51 - 192) = -1350452215 - v63;
    *(_DWORD *)(v51 - 168) = v63 + v62 - 754946017 - ((v62 << (((v54 - 87) & 0xE7) + 29)) & 0xA600E03E);
  }
  else
  {
    int v55 = v54 - 2415;
    unint64_t v56 = *(void *)(a7 + 312);
    int v57 = STACK[0x294];
    unsigned int v58 = (LODWORD(STACK[0x294]) << ((v54 - 111) ^ 0xE5)) & 0xA600E03E;
    int v59 = 1734664879 * ((~((v51 - 192) | 0x62F43C36) + ((v51 - 192) & 0x62F43C36)) ^ 0xB2D0EBD3);
    STACK[0x1968] = *(void *)(a7 + 416);
    STACK[0x1970] = v56;
    *(_DWORD *)(v51 - 160) = -1652557547 - v59 + v54;
    *(_DWORD *)(v51 - 168) = v59 + v57 - 754946017 - v58;
    *(_DWORD *)(v51 - 192) = -1734664879 * ((~((v51 - 192) | 0x62F43C36) + ((v51 - 192) & 0x62F43C36)) ^ 0xB2D0EBD3)
                           + 1733192765 * v53
                           - 2063785644;
    unint64_t v60 = a49;
    STACK[0x1948] = a50;
    STACK[0x1950] = v60;
  }
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (int)(v54 ^ 0x1C62)))(v51 - 192);
  unint64_t v65 = STACK[0x270];
  int v66 = *(_DWORD *)(v51 - 164);
  LODWORD(STACK[0x290]) = v66;
  return (*(uint64_t (**)(uint64_t))(v65 + 8 * ((2635 * (v66 == ((v55 + 1372) | 0x413) - 604053512)) ^ v55)))(v64);
}

uint64_t sub_22B3494C8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v14 = (v9 + 1035) | a5;
  int v15 = v10 + v14;
  uint64_t v16 = (v10 + a4);
  *(unsigned char *)(a1 + v16 + a3) = ((v16 & 0xF) * a2) ^ *(unsigned char *)(a6 + v16) ^ *(unsigned char *)(v7 + (v16 & 0xF)) ^ *(unsigned char *)(v8 + (v16 & 0xF)) ^ *(unsigned char *)(a7 + (v16 & 0xF)) ^ v11;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v15 - 3156 != v12 + v14 - 3147 - 24) ^ (v14 - 895))))();
}

uint64_t sub_22B34953C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v15 = (a6 + v12);
  *(unsigned char *)(*(void *)(v14 - 248) + v15) = *(unsigned char *)(v10 + (v15 & ((a7 + 2388) - 3426))) ^ *(unsigned char *)(v7 + v15) ^ *(unsigned char *)((v15 & ((a7 + 2388) - 3426)) + v9 + 5) ^ *(unsigned char *)((v15 & ((a7 + 2388) - 3426)) + v8 + 2) ^ (93 * ((a6 + v12) & (a7 - 14)));
  return (*(uint64_t (**)(void))(v13 + 8 * ((1914 * (a6 - 1 == v11)) ^ (a7 - 725))))();
}

uint64_t sub_22B3495AC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 - 2508)) - 4) == 0) * ((v1 ^ 0xD18) - 1759)) | v1)))();
}

uint64_t sub_22B3495E0(_DWORD *a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  signed int v1 = *a1 ^ (1948972247 * ((2 * (a1 & 0x2F94EC30) - a1 + 1349194703) ^ 0xE5F5E621));
  uint64_t v2 = *(void *)((char *)*(&off_26DE9F480 + (v1 ^ 0x3CA9D357)) - 4);
  v1 -= 1017762185;
  unsigned int v4 = v1
     - 1328090399
     * ((((2 * (&v4 ^ 0x4E435F68)) | 0xD441B032) - (&v4 ^ 0x4E435F68) - 1780537369) ^ 0xDBB0E34B)
     + 2206;
  uint64_t v5 = v2;
  return (*((uint64_t (**)(unsigned int *))*(&off_26DE9F480 + v1) + v1 + 3836))(&v4);
}

void sub_22B3496FC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 2009815553 * (((a1 | 0xC818A780) - (a1 & 0xC818A780)) ^ 0x391389C5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B349804()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((145 * (v0 ^ 0x2EB) - 553) * (*(void *)(v1 + 24) != 0)) ^ v0)))();
}

uint64_t sub_22B34983C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v26 - 136) = a23;
  int v27 = ((v26 - 1413232962 - 2 * ((v26 - 144) & 0xABC3C74E)) ^ 0x41D4F0BA) * v25;
  *(_DWORD *)(v26 - 144) = v24 - v27 - 992;
  *(_DWORD *)(v26 - 140) = v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0x191B)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((37
                                              * (((v24 + 56) ^ (*(_DWORD *)(v26 - 128) == (((v24 - 2299) | 0x90C) ^ 0x9B8289E9))) & 1)) ^ v24)))(v28);
}

uint64_t sub_22B349844()
{
  *uint64_t v1 = -1;
  return v0 ^ 0x2401B7DEu;
}

uint64_t sub_22B349858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,int a29,int a30,int a31,int a32)
{
  *int v33 = v33[623];
  *(_DWORD *)(v38 - 108) = a31 - v35;
  *(_DWORD *)(v38 - 120) = v35 ^ a30;
  *(_DWORD *)(v38 - 116) = v35 ^ 1;
  *(_DWORD *)(v38 - 140) = (v34 - 1604164844) ^ v35;
  *(_DWORD *)(v38 - 112) = a32 + v35;
  *(void *)(v32 + 16) = (v37 + 1) - v35;
  *(void *)(v32 + 24) = a28;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v36 + 8 * a27))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v38 - 144)))(v39);
}

uint64_t sub_22B349868(uint64_t a1, int a2)
{
  *(void *)(v6 + (v3 ^ v4)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * a2) ^ v2)))();
}

void sub_22B349894(int a1@<W8>)
{
  *(_DWORD *)(*(void *)(v1 - 0x281D12643933BF1BLL) - 0x54EEBA8C0E75CADCLL) = (v2 - 2108265351) ^ 0xB966D3D4;
  *(_DWORD *)(v1 - 0x281D12643933BF1FLL) = a1 + 1;
}

uint64_t sub_22B3498E4@<X0>(int a1@<W8>)
{
  uint64_t v7 = v2 - 1;
  *(unsigned char *)(v5 + v7) = ((v3 + v1 + 72) ^ v4) * (v3 + v1 + 89);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 != 0) | (4 * (v7 != 0))) ^ a1)))();
}

uint64_t sub_22B3498F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 228 + a2 + a1) = 42;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1791 * ((unint64_t)(a2 + 1 + a1) < 0x38)) ^ (v2 + 1452))))();
}

uint64_t sub_22B349930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (a5 ^ ((2 * ((unint64_t)(v5 - a1) < 0x20)) | (4
                                                                                   * ((unint64_t)(v5 - a1) < 0x20))))))();
}

uint64_t sub_22B349964@<X0>(char a1@<W1>, int a2@<W2>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X6>, int a6@<W8>, int8x16_t a7@<Q0>, int8x8_t a8@<D1>, int8x8_t a9@<D2>)
{
  int v21 = a4 - 8;
  uint64_t v22 = a6 + v21 + (a2 ^ (v10 + 549));
  v24.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v21 + (a2 ^ (v10 + 37))) & 0xF;
  v24.val[0].i64[1] = (v18 + (_BYTE)v21) & 0xF;
  v24.val[1].i64[0] = (v17 + (_BYTE)v21) & 0xF;
  v24.val[1].i64[1] = (v16 + (_BYTE)v21) & 0xF;
  v24.val[2].i64[0] = (v15 + (_BYTE)v21) & 0xF;
  v24.val[2].i64[1] = (v14 + (_BYTE)v21) & 0xF;
  v24.val[3].i64[0] = (a3 + (_BYTE)v21) & 0xF;
  v24.val[3].i64[1] = (a1 + (_BYTE)v21) & 0xF;
  *(int8x8_t *)(a5 + v22) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a5 + v22), *(int8x8_t *)(v9 + (v22 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v22 & 0xF) + v12 - 5), *(int8x8_t *)((v22 & 0xF) + v11 - 6)))), a9), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v24, a7), a8)));
  return (*(uint64_t (**)(void))(*(void *)(v20 - 240) + 8 * ((3160 * (v13 == v21)) ^ v19)))();
}

uint64_t sub_22B349970()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((v1 + 785) ^ 0x2D)))();
}

void sub_22B349A10(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 16) - 1734664879 * ((-1224886196 - (a1 | 0xB6FDB84C) + (a1 | 0x490247B3)) ^ 0x66D96FA9);
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v7 = (731811679 * (v6 ^ 0x49F6A644)) ^ (v1 - 1424);
  v6[0] = v2;
  v6[1] = &v5;
  uint64_t v4 = (char *)*(&off_26DE9F480 + (v1 ^ 0x66C)) - 8;
  (*(void (**)(void *))&v4[8 * (v1 ^ 0x8DD)])(v6);
  (*(void (**)(void))&v4[8 * v1 + 18264])();
  (*(void (**)(void))&v4[8 * (v1 ^ 0x8F7)])();
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B349C58()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 + 136641073) & 0x77DB0D5F) - 3285) * ((55 - v0) < 8)) ^ v1)))();
}

uint64_t sub_22B349CA0()
{
  int8x16_t v4 = vrev64q_s8(*(int8x16_t *)*(void *)(v1 + 32));
  int8x16_t v5 = vextq_s8(v4, v4, 8uLL);
  v6.i64[0] = 0xACACACACACACACACLL;
  v6.i64[1] = 0xACACACACACACACACLL;
  v7.i64[0] = 0x5353535353535353;
  v7.i64[1] = 0x5353535353535353;
  int8x16_t v8 = vaddq_s8(vorrq_s8(v5, v6), vorrq_s8(v5, v7));
  v6.i64[0] = 0xB4B4B4B4B4B4B4B4;
  v6.i64[1] = 0xB4B4B4B4B4B4B4B4;
  int8x16_t v9 = vrev64q_s8(veorq_s8(vaddq_s8(v8, v6), (int8x16_t)xmmword_22B4975C0));
  *(int8x16_t *)(v3 - 224) = vextq_s8(v9, v9, 8uLL);
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (44 * (v3 == 224)))))();
}

void sub_22B349D0C()
{
  if (v0 == 1415749965) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_22B349D74()
{
  return 0;
}

uint64_t sub_22B349DB4(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int8x16x4_t v29 = vld4q_s8(v17);
  uint8x16_t v19 = (uint8x16_t)veorq_s8(v29.val[1], a1);
  _Q21 = vmovl_u8(*(uint8x8_t *)v19.i8);
  _Q20 = vmovl_high_u8(v19);
  __asm
  {
    SHLL2           V22.4S, V20.8H, #0x10
    SHLL2           V23.4S, V21.8H, #0x10
  }
  return sub_22B31D1C0(v18 + 16, a17);
}

uint64_t sub_22B349EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((a5 - 1114) ^ 0x7CC ^ (a5 - 215634954) & 0xCDA4FAF)
                                * (*(_DWORD *)(v6 - 216) == *(_DWORD *)(v6 - 220))) ^ a5)))();
}

uint64_t sub_22B349F28@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((2828 * (v2 + 1 == v4 + 60)) ^ a1)))(a2);
}

uint64_t sub_22B349FF8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 < (((a2 - 493) | 0x18) ^ 0x55Du)) * ((a2 + 1213) ^ 0xC30)) ^ a2)))();
}

uint64_t sub_22B34A034(int a1, uint64_t a2, int a3, int a4)
{
  *(void *)(a2 + (v4 + a4 + a1)) = *(void *)(v7 + (v4 + a4 + a1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 + a4 != 8) * a3) ^ v6)))();
}

uint64_t sub_22B34A068(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unint64_t v36 = (v32 ^ HIDWORD(a4))
      + HIDWORD(v33)
      + (((v34 - 2686) | 0x400) ^ (v30 - 1026) ^ *(_DWORD *)(a30 + a15 + a8));
  *(_DWORD *)(a30 + 4 * a16 + a8) = v36 + v30 - (v31 & (2 * v36));
  *(_DWORD *)(a30 + a15 + a8) = HIDWORD(v36) + v30 - (v31 & (2 * HIDWORD(v36)));
  BOOL v38 = a25 - 1598421548 > 1783697975 || a25 - 1598421548 < a21;
  return (*(uint64_t (**)(void))(v35 + 8 * (v34 ^ (1583 * v38))))((v34 - 653));
}

uint64_t sub_22B34A114()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((55 - v0 < (v1 - 2356)) * (v1 - 2298)) | v1)))();
}

uint64_t sub_22B34A148@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 16) + a5 + a6 + ((a2 + 64042513) & 0xFC2ECEFE)) = (a4 ^ v8) >> (a3 + 103);
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 ^ (999 * (a5 - 1 == v7)))))();
}

uint64_t sub_22B34A1B0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ (2 * (v3 < (((71 * (a3 ^ 0xD4E) - 2176) | 0x112) ^ 0x5BBu))))))();
}

uint64_t sub_22B34A1F0(uint64_t a1, int a2, int a3)
{
  BOOL v5 = a2 + a3 + ((((v3 - 3585) | 0x4A2) + 630) ^ 0x2818859u) < 8;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2 * v5) | (4 * v5) | v3)))();
}

uint64_t sub_22B34A268@<X0>(int a1@<W2>, void *a2@<X6>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unint64_t a63)
{
  int v66 = (int *)STACK[0x2A8];
  int v67 = (unint64_t *)a2[59];
  STACK[0x218] = a63;
  STACK[0x258] = *v67;
  int v68 = *v66;
  int v69 = (a4 + 3063) ^ 0xFBE;
  STACK[0x238] = *(void *)(v65 + 8 * a4);
  a2[20] = a65;
  LODWORD(STACK[0x3EC]) = -1282729708;
  LODWORD(STACK[0x374]) = 1801476204;
  a2[16] = 0;
  LODWORD(STACK[0x31C]) = 899400664;
  unsigned int v70 = (_DWORD *)STACK[0x260];
  *unsigned int v70 = 1543089487;
  LODWORD(STACK[0x230]) = 870865743;
  LODWORD(STACK[0x268]) = v69 - 576128282;
  LODWORD(STACK[0x220]) = -1783227397;
  LODWORD(STACK[0x228]) = 561555581;
  LODWORD(v70) = *v70;
  LODWORD(STACK[0x250]) = 1543086364;
  LODWORD(STACK[0x248]) = a3 - 3112;
  BOOL v72 = v70 != ((v69 + a1) & 0x44B53DDF ^ 0x5BF9A11C) || a3 + 1 != ((v69 + 2178) ^ (a3 - 3112));
  unsigned int v73 = *(uint64_t (**)(void))(v65 + 8 * ((2896 * v72) ^ v69));
  LODWORD(STACK[0x240]) = v68;
  return v73();
}

uint64_t sub_22B34A27C@<X0>(int a1@<W2>, int a2@<W7>, uint64_t a3@<X8>)
{
  unsigned int v8 = a1 + a2 + v6 + v5 + 768;
  uint64_t v9 = a3 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = v3 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1999 * ((v4 & 0xFFFFFFE0) == 32)) ^ v5)))();
}

uint64_t sub_22B34A2D0()
{
  return sub_22B3B5C40();
}

uint64_t sub_22B34A2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unsigned int v29 = v25 + v24 - 937245438;
  if (v29 <= 0x40) {
    int v30 = 64;
  }
  else {
    int v30 = v25 + v24 - 937245438;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * ((99 * ((((v26 ^ 0xAD) + 1) ^ (v27 + v30 > ((v29 - 1) ^ (v26 + 1249427058) & 0xB587367D ^ 0xFFFFFDE6))) & 1)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_22B34A364()
{
  STACK[0x268] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((49
                                * (((v0 - 68) ^ ((LODWORD(STACK[0x37C])
                                                                               - 1801476204
                                                                               + v0
                                                                               - 3195
                                                                               - 2589) < 0xFFFFF7FF)) & 1)) ^ v0)))();
}

uint64_t sub_22B34A3B0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  *(_OWORD *)(v7 + ((v5 ^ a3 ^ 0xFFFFFC9ELL) & (v3 + 16))) = *v6;
  return (*(uint64_t (**)(void))(v8 + 8 * ((2489 * (v4 == 16)) ^ v5)))();
}

void sub_22B34A3BC()
{
}

uint64_t sub_22B34A3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v74 = a29 + ((v72 - 524) ^ (2 * a72) & 0xC3C1C7DC) + 38467644;
  BOOL v75 = ((2 * v74) & 0xF6FDFDFE ^ 0xC2C1C5DC) + (v74 ^ 0x1A9E1D11) - 571611322 != 1500309061;
  return (*(uint64_t (**)(void))(v73 + 8 * (((4 * v75) | (16 * v75)) ^ v72)))();
}

uint64_t sub_22B34A48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((497 * ((v9 ^ v8) < a8 - 2642)) ^ a8 ^ 0xCA0)))();
}

void sub_22B34A4D4()
{
}

uint64_t sub_22B34A53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v26 - 120) = a23;
  *(void *)(v26 - 112) = v23;
  *(_DWORD *)(v26 - 128) = v25
                         - 1734664879 * ((2 * ((v26 - 128) & 0x367DFC08) - (v26 - 128) + 1233257456) ^ 0x66592BEA)
                         - 188;
  (*(void (**)(uint64_t))(v24 + 8 * (v25 + 3321)))(v26 - 128);
  *(_DWORD *)(v26 - 112) = v25
                         + 1866394843 * (((~(v26 - 128) & 0xBA935BCC) - (~(v26 - 128) | 0xBA935BCD)) ^ 0x50846C39)
                         + 1987;
  *(void *)(v26 - 120) = a23;
  *(void *)(v26 - 104) = a21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0xCF6)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v26 - 128) > 0x64079912u) * ((v25 + 1207) ^ 0x7B1)) | v25)))(v27);
}

uint64_t sub_22B34A660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((((unint64_t)(a14 - v15) < 0x20) * (v14 - 2734)) ^ v14)))();
}

uint64_t sub_22B34A6A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 - 2402) ^ 0x737) * (v0 < 3)) ^ v2)))();
}

uint64_t sub_22B34A6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v27 = v18 - 922;
  int v28 = 1866394843 * ((v26 - 144) ^ 0xEA1737F4);
  *(_DWORD *)(v26 - 144) = (((v18 - 922) ^ 0xCEE2B2C6) + v20) ^ v28;
  *(_DWORD *)(v26 - 120) = v28 + v18 + 2152;
  v23[1] = v19;
  v23[2] = v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v18 ^ 0x1557)))(v26 - 144);
  *(_DWORD *)(v26 - 136) = (v27 + 1268) ^ (1438293641
                                         * ((((v26 - 144) | 0x2E064BF9) + (~(v26 - 144) | 0xD1F9B406)) ^ 0x96C11E87));
  *uint64_t v23 = v22;
  *(void *)(v26 - 128) = a17;
  (*(void (**)(uint64_t))(v21 + 8 * (v27 + 3616)))(v26 - 144);
  *(_DWORD *)(v26 - 136) = v27
                         - 1328090399
                         * ((((v26 - 144) | 0x26A09494) - (v26 - 144) + ((v26 - 144) & 0xD95F6B68)) ^ 0xD973F0AE)
                         + 1881;
  *(void *)(v26 - 144) = v22;
  *(void *)(v26 - 128) = a12;
  *(void *)(v26 - 120) = a18;
  *(void *)(v26 - 112) = a17;
  *(void *)(v26 - 104) = a16;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v27 ^ 0x1199)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((v27 ^ 0x2B0) + ((v27 - 144) | 0x220) - 1727) * (v25 == 0)) ^ v27)))(v29);
}

void sub_22B34A72C()
{
  LODWORD(STACK[0x290]) = 604091925;
  JUMPOUT(0x22B361AE4);
}

uint64_t sub_22B34A744@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = v17 ^ 0x59B;
  uint64_t v21 = (uint64_t)*(&off_26DE9F480 + v17 - 2245);
  int v22 = *(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v19 - 111) ^ 0x4ALL));
  int v23 = v22 - ((2 * v22 + 4) & 0x4E) + 105;
  uint64_t v24 = (char *)*(&off_26DE9F480 + v17 - 2290) - 4;
  int v25 = (v23 >> ((v17 ^ 0x9B) + 49)) ^ (v23 >> 3) ^ 0x47;
  int v26 = v23 ^ 0xA5 ^ (v25 - ((2 * v25) & 0x4E) - 89);
  int v27 = (v26 << 16) - ((v26 << 17) & 0x380000) + 1998356061;
  char v28 = *(unsigned char *)(v21 + (*(unsigned __int8 *)(v19 - 99) ^ 0x91));
  unsigned __int8 v29 = v28 - ((2 * v28 + 4) & 0xE) - 55;
  int v30 = ((-55 * v24[*(unsigned __int8 *)(v19 - 109) ^ 0xD3] + 122) ^ 0x717DEDED)
      + ((2 * (-55 * v24[*(unsigned __int8 *)(v19 - 109) ^ 0xD3] + 122)) & 0x1DA)
      - 1904078317;
  unsigned int v31 = (v30 - (v27 ^ 0x771C7E5D | v30)) ^ ((v27 ^ 0x88E381A2) + 1);
  uint64_t v32 = (char *)*(&off_26DE9F480 + (v17 ^ 0x832)) - 4;
  unsigned int v33 = ((v31 - ((2 * v31) & 0xEE38FCBA) + 1998356061) ^ v27) + v30;
  uint64_t v34 = (uint64_t)*(&off_26DE9F480 + v17 - 1986);
  char v35 = *(unsigned char *)(v21 + (*(unsigned __int8 *)(v19 - 107) ^ 0x39));
  int v36 = (((v32[*(unsigned __int8 *)(v19 - 98) ^ 0x26] + 109) ^ 0x8D) << 8) | ((v29 ^ 0xD4 ^ (((v29 >> 1) ^ (v29 >> 3) ^ 3) - 2 * (((v29 >> 1) ^ (v29 >> 3) ^ 3) & 7) + 7)) << 16) | (-55 * v24[*(unsigned __int8 *)(v19 - 97) ^ 0x54] + 122) | ((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v19 - 100) ^ 0xCBLL)) ^ 0x41) << 24);
  char v37 = v35 - ((2 * v35 + 4) & 6);
  unsigned __int8 v38 = v37 + 69;
  int v39 = ((v37 + 69) >> 1) ^ (((v37 - 59) & 0xF8) >> 3);
  int v40 = ((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v19 - 108) ^ 0x7DLL)) ^ 0x36) << 24) | ((v38 ^ 0x65 ^ ((v39 ^ 0x41) - 2 * ((v39 ^ 0x41) & 0xB ^ v39 & 8) - 125)) << 16);
  uint64_t v309 = v21;
  unsigned __int8 v41 = *(unsigned char *)(v21 + (*(unsigned __int8 *)(v19 - 103) ^ 0x8CLL))
      - ((2 * *(unsigned char *)(v21 + (*(unsigned __int8 *)(v19 - 103) ^ 0x8CLL)) - 124) & 0xCA)
      + 39;
  int v42 = (v41 >> 3) ^ (v41 >> 1) ^ 0x3E;
  uint64_t v308 = v24;
  HIDWORD(a13) = 122;
  uint64_t v306 = v34;
  uint64_t v307 = v32;
  HIDWORD(v310) = (v40 & 0xFFFF0000 | (((v32[*(unsigned __int8 *)(v19 - 106) ^ 0x7ALL] + 109) ^ 0x46) << 8) | (-55 * v24[*(unsigned __int8 *)(v19 - 105) ^ 0x41] + 122)) ^ 0x11C3829D;
  int v43 = v33 ^ (((v32[*(unsigned __int8 *)(v19 - 110) ^ 0x80] + 109) ^ 0x21) << 8) ^ ((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v19 - 112) ^ 0xFALL)) ^ 0x1B) << 24) ^ 0x50651B55;
  HIDWORD(v311) = (((*(unsigned __int8 *)(v34 + (*(unsigned __int8 *)(v19 - 104) ^ 0x20)) ^ 0xFFFFFFBF) << 24) | (((v32[*(unsigned __int8 *)(v19 - 102) ^ 0x6CLL] + 109) ^ 0x58) << 8) | ((v41 ^ 0xE5 ^ (v42 - ((2 * v42) & 0xCA) + 101)) << 16) | (-55 * v24[*(unsigned __int8 *)(v19 - 101) ^ 0x58] + 122)) ^ 0xD29FE01B;
  HIDWORD(v305) = v18 - 2139455231;
  LODWORD(v311) = v36 ^ 0xAC055D8C;
  LODWORD(v305) = v20 ^ 0xDBC;
  HIDWORD(v304) = v20 ^ 0xCB5;
  LODWORD(v304) = v20 ^ 0xD6E;
  HIDWORD(v303) = v20 ^ 0xD98;
  LODWORD(v303) = v20 ^ 0xD67;
  HIDWORD(v302) = v20 ^ 0xD4C;
  LODWORD(v302) = v20 ^ 0xD6F;
  HIDWORD(v301) = v20 ^ 0xC26;
  *(_DWORD *)(v19 - 120) = v20;
  LODWORD(v301) = v20 ^ 0xC5C;
  HIDWORD(a17) = 0;
  int v44 = *(_DWORD *)(v19 - 120);
  *(void *)(v19 - 160) = 7;
  BOOL v45 = v24;
  LOBYTE(v25) = 122 - 55 * v24[(a1[7] ^ (((v44 + 73) | 0x46) + 117))];
  char v46 = *(unsigned char *)(v309 + (a1[1] ^ 0x6FLL));
  LOBYTE(v42) = v46 + (~(2 * v46 - 124) | 5) + 64;
  *(void *)(v19 - 176) = 15;
  int v47 = (v42 >> 3) ^ (v42 >> 1) ^ 0x31;
  LOBYTE(v20) = v42 ^ 0xA4 ^ (v47 - ((2 * v47) & 0xFB) + 125);
  LOBYTE(v47) = v24[a1[15] ^ 0xB2];
  uint64_t v48 = v34;
  int v49 = *(unsigned __int8 *)(v34 + (a1[4] ^ 0x44)) ^ 0xF4;
  *(void *)(v19 - 128) = 2;
  int v50 = v25 | (v49 << 24);
  unsigned __int8 v51 = 122 - 55 * v47;
  uint64_t v52 = v32;
  LOBYTE(v25) = v32[a1[2] ^ 1];
  *(void *)(v19 - 192) = 5;
  int v53 = ((((2 * v25 + 24) & 0xC3) + ((v25 - 116) ^ 0xE1)) ^ 0x74) << 8;
  LOBYTE(v25) = *(unsigned char *)(v309 + (a1[5] ^ 0x61));
  *(void *)(v19 - 136) = 12;
  LOBYTE(v25) = (~(2 * v25 + 4) | 0x85) + v25;
  LODWORD(v24) = (v25 >> 3) ^ (v25 >> 1) ^ 0x19;
  unsigned int v54 = v53 & 0xFF00FFFF | (v20 << 16);
  LOBYTE(v20) = (_BYTE)v24 - ((2 * (_BYTE)v24) & 0x7A) + 61;
  uint64_t v55 = a1[8];
  unsigned int v56 = v50 & 0xFF00FFFF | ((v25 ^ 0xD3 ^ v20) << 16);
  int v57 = *(unsigned __int8 *)(v34 + (a1[12] ^ 0x6CLL)) ^ 0x49;
  *(_DWORD *)(v19 - 140) = 1164016343;
  *(void *)(v19 - 168) = 6;
  int v58 = v51 | (v57 << 24);
  uint64_t v59 = a1[6];
  int v60 = *(unsigned __int8 *)(v34 + (v55 ^ 0x89)) ^ 0x43;
  *(void *)(v19 - 152) = 3;
  LODWORD(v34) = v60 << 24;
  unsigned int v61 = v56 & 0xFFFF00FF | (((v32[v59 ^ 0xC2] + 109) ^ 0xB0) << 8);
  unsigned int v62 = v54 & 0xFFFFFF00 | (122 - 55 * v45[a1[3] ^ 9]);
  LOBYTE(v59) = v32[a1[10] ^ 0xB0] + 109;
  *(void *)(v19 - 184) = 9;
  LOBYTE(v60) = *(unsigned char *)(v309 + (a1[9] ^ 0x89));
  int v63 = v34 & 0xFFFF00FF | ((v59 ^ 0x5F) << 8);
  LOBYTE(v59) = v60 - ((2 * v60 - 124) & 0xF8);
  char v64 = v59 - 66;
  LOBYTE(v32) = (v59 - 66) >> 2;
  char v65 = (((((((v59 - 66) ^ v32 ^ 0x3C) + (v32 ^ 0x3F) + 1) ^ (62 - v60))
                          - ((2
                            * ((((v59 - 66) ^ v32 ^ 0x3C) + (v32 ^ 0x3F) + 1) ^ (62 - v60))) & 0xF8)
                          - 4) ^ (v59 - 66))
                        + (v32 ^ 0x3F)) >> 1;
  char v66 = v65 & 0x20 | 0x50;
  unsigned __int8 v67 = 65 - v59;
  if ((v65 & 0x20 & v67) != 0) {
    char v66 = -96 - v66;
  }
  unsigned int v68 = v63 & 0xFF00FFFF | ((((v64 ^ 0xBD) + v66 - 80) ^ v65 & 0xDF) << 16);
  char v69 = *(unsigned char *)(v309 + (a1[13] ^ 0xE5));
  unsigned __int8 v70 = v69 - ((2 * v69 + 4) & 0x7E) + 1;
  unsigned __int8 v71 = 122 - 55 * v45[a1[11] ^ 0x66];
  unsigned int v72 = v68 & 0xFFFFFF00 | v71;
  unsigned int v73 = v58 & 0xFF00FFFF | ((v70 ^ 0xFA ^ (((v70 >> 3) ^ (v70 >> 1) ^ 0x18)
                                                          - 2 * (((v70 >> 3) ^ (v70 >> 1) ^ 0x18) & 0x3F)
                                                          + 63)) << 16);
  unsigned int v74 = (v62 | ((*(unsigned __int8 *)(v48 + (*a1 ^ 0xF4)) ^ 0xFFFFFFEF) << 24)) ^ v43;
  unsigned int v75 = v61 ^ HIDWORD(v310);
  unsigned int v76 = v72 ^ HIDWORD(v311);
  int v77 = (char *)*(&off_26DE9F480 + (int)v305) - 8;
  unsigned int v78 = *(_DWORD *)&v77[4 * (HIBYTE(v74) ^ 0x57)] ^ 0xD8C0B9F7;
  unsigned int v79 = ((unsigned __int16)(v72 ^ WORD2(v311)) >> 8) ^ 0x9B;
  unsigned int v80 = (char *)*(&off_26DE9F480 + v44 - 2867) - 8;
  int v81 = *(_DWORD *)&v80[4 * v79];
  uint64_t v82 = (uint64_t)*(&off_26DE9F480 + v44 - 3131);
  int v83 = *(_DWORD *)(v82 + 4 * (((v61 ^ HIDWORD(v310)) >> 16) ^ 0x78u));
  int v84 = v81 + 1484381123;
  int v85 = (v78 >> 3) & 0x1597797F ^ (2 * (v81 + 1484381123)) ^ (v83 + 1052387331);
  unsigned int v86 = v85 + 2095336862 - ((2 * v85) & 0xF9C89B3C);
  unsigned int v87 = v73 ^ ((((v52[a1[14] ^ 0x87] + 109) ^ 0xB2) << 8)
             - 1408934516
             - ((((v52[a1[14] ^ 0x87] + 109) ^ 0xB2) << 9) & 0xBA00)
             + 30) ^ v311;
  int v88 = (char *)*(&off_26DE9F480 + SHIDWORD(v304)) - 12;
  unsigned int v89 = v84 ^ v78 ^ *(_DWORD *)&v88[4 * (v87 ^ 0xB2)] ^ v86;
  unsigned int v90 = *(_DWORD *)&v77[4 * (HIBYTE(v75) ^ 0x43)] ^ 0xD8C0B9F7;
  int v91 = *(_DWORD *)&v80[4
                      * (((unsigned __int16)(((((v52[a1[14] ^ 0x87] + 109) ^ 0xB2) << 8)
                                                             + 23948
                                                             - ((((unsigned __int16)(v52[a1[14] ^ 0x87]
                                                                                   + 109) ^ 0xB2) << 9) & 0xBA00)
                                                             + 30) ^ v311) >> 8) ^ 0x82)]
      + 1484381123;
  int v92 = (*(_DWORD *)(v82 + 4 * (BYTE2(v76) ^ 0x47u)) + 1052387331) ^ (v90 >> 3) & 0x1597797F ^ (2 * v91);
  unsigned int v93 = *(_DWORD *)&v88[4 * (v74 ^ 0xBF)] ^ v90 ^ v91 ^ (v92 + 2095336862 - ((2 * v92) & 0xF9C89B3C));
  unsigned int v94 = *(_DWORD *)&v77[4 * (HIBYTE(v76) ^ 0x86)] ^ 0xD8C0B9F7;
  int v95 = (v94 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v87) ^ 0xB3u)) + 1052387331);
  int v96 = *(_DWORD *)&v80[4 * (BYTE1(v74) ^ 0xB5)] + 1484381123;
  unsigned int v97 = v96 ^ v94 ^ (2 * v96) ^ *(_DWORD *)&v88[4 * (v75 ^ 0xBE)] ^ (v95
                                                                                    + 2095336862
                                                                                    - ((2 * v95) & 0xF9C89B3C));
  unsigned int v98 = *(_DWORD *)&v77[4 * (HIBYTE(v87) ^ 3)] ^ 0xD8C0B9F7;
  int v99 = (v98 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v74) ^ 0x50u)) + 1052387331);
  int v100 = *(_DWORD *)&v80[4 * (BYTE1(v75) ^ 0xE)] + 1484381123;
  int v101 = v100 ^ v98 ^ ((v99 ^ (2 * v100)) + 2095336862 - 2 * ((v99 ^ (2 * v100)) & 0x7CE44D9F ^ v99 & 1)) ^ *(_DWORD *)&v88[4 * (v76 ^ 0x2E)];
  unsigned int v102 = ((v101 ^ 0x8A527538) & 0xFFEC3E6F) >> (v71 & 0x18) >> (v71 & 0x18 ^ 0x18);
  unsigned int v103 = *(_DWORD *)&v77[4 * (HIBYTE(v89) ^ 0xC1)] ^ 0xD8C0B9F7;
  int v104 = (v103 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82
                                               + 4
                                               * (((v93 & 0xFFFFFF55 ^ 0xEE53C7BE) >> (v67 & 0x10) >> (v67 & 0x10 ^ 0x10)) ^ 0x76u))
                                   + 1052387331);
  int v105 = *(_DWORD *)&v80[4 * (BYTE1(v97) ^ 0x35)] + 1484381123;
  unsigned int v106 = *(_DWORD *)&v88[4
                       * (v101 ^ 0x38 ^ -(v101 ^ 0x38) ^ ((v101 ^ 0xFFFFFFDF)
                                                                                          + 25))
                       + 96] ^ v103 ^ v105 ^ ((v104 ^ (2 * v105))
                                            + 2095336862
                                            - 2 * ((v104 ^ (2 * v105)) & 0x7CE44D9F ^ v104 & 1));
  unsigned int v107 = *(_DWORD *)&v77[4 * (HIBYTE(v93) ^ 0xAE)] ^ 0xD8C0B9F7;
  int v108 = *(_DWORD *)&v80[4 * (BYTE1(v101) ^ 0x81)] + 1484381123;
  int v109 = (v107 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v97) ^ 0x2Du)) + 1052387331) ^ (2 * v108);
  unsigned int v110 = *(_DWORD *)&v88[4 * (v89 ^ 0x91)] ^ v108 ^ v107 ^ (v109
                                                                           + 2095336862
                                                                           - ((2 * v109) & 0xF9C89B3C));
  unsigned int v111 = *(_DWORD *)&v77[4 * (HIBYTE(v97) ^ 0xB3)] ^ 0xD8C0B9F7;
  int v112 = (v111 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v101) ^ 0x24u)) + 1052387331);
  int v113 = *(_DWORD *)&v80[4 * (BYTE1(v89) ^ 0x65)] + 1484381123;
  unsigned int v114 = *(_DWORD *)&v88[4 * (v93 ^ 0xE)] ^ v111 ^ v113 ^ ((v112 ^ (2 * v113))
                                                                          + 2095336862
                                                                          - 2
                                                                          * ((v112 ^ (2 * v113)) & 0x7CE44D9F ^ v112 & 1));
  unsigned int v115 = *(_DWORD *)&v77[4 * (v102 ^ 0x40)] ^ 0xD8C0B9F7;
  int v116 = *(_DWORD *)&v80[4 * (BYTE1(v93) ^ 0x33)] + 1484381123;
  int v117 = (v115 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v89) ^ 0x5Du)) + 1052387331) ^ (2 * v116);
  unsigned int v118 = *(_DWORD *)&v88[4 * (v97 ^ 0x29) + 100 + 4 * ((2 * v97) & 0x30 ^ 0xFFFFFFEF)] ^ v115 ^ v116 ^ (v117 + 2095336862 - ((2 * v117) & 0xF9C89B3C));
  unsigned int v119 = (v118 ^ 0x4CAC6148) >> ((BYTE1(v106) ^ 0x8E) & 0x18) >> ((BYTE1(v106) ^ 0x8E) & 0x18 ^ 0x18);
  int v120 = *(_DWORD *)&v77[4 * (HIBYTE(v106) ^ 0xB9)];
  unsigned int v121 = ((v120 ^ 0x273F4608) - 1082817632) ^ ((v120 ^ 0x984AC597) + 1);
  unsigned int v122 = (v121 - ((2 * v121) & 0xCF6A74D0) + 1739930216) ^ v120;
  unsigned int v123 = v122 - ((2 * v122 + 2129332030) & 0xA7B6E34A) + 324072772;
  int v124 = (v123 >> 3) & 0x1597797F ^ v123;
  int v125 = *(_DWORD *)(v82 + 4 * (BYTE2(v110) ^ 0xD3u));
  unsigned int v126 = (v123 & 0x400 | ((((unsigned __int16)(v123 & 0x400) >> 10) & 1) << 11)) ^ 0xAFD185E3;
  int v127 = v125 + 1052387331;
  BOOL v128 = ((v126 + 1345223197) & (v125 + 1052387331)) == 0;
  unsigned int v129 = v126 + 1371536255;
  unsigned int v130 = -1318910139 - v126;
  if (v128) {
    unsigned int v130 = v129;
  }
  unsigned int v131 = (v127 + (v124 & 0xFFFFFBFF ^ 0xAC37E66E ^ (v125 + 1026074273 + v130)) + 1) ^ ((v124 ^ 0xAC37E66E) + 1);
  int v132 = (v124 ^ 0x5449A429 ^ (v131 - ((2 * v131) & 0xF037B70) + 125943224)) + v127;
  int v133 = *(_DWORD *)&v80[4 * (BYTE1(v114) ^ 0x7C)] + 1484381123;
  unsigned int v134 = v133 ^ *(_DWORD *)&v88[4 * (v118 ^ 0x50)] ^ ((v132 ^ (2 * v133))
                                                                     + 2095336862
                                                                     - ((2 * (v132 ^ (2 * v133))) & 0xF9C89B3C));
  unsigned int v135 = *(_DWORD *)&v77[4 * (HIBYTE(v110) ^ 0x75)] ^ 0xD8C0B9F7;
  HIDWORD(v311) = HIWORD(v114) ^ 0xE43F;
  int v136 = (v135 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v114) ^ 0x49u)) + 1052387331);
  int v137 = *(_DWORD *)&v80[4 * (BYTE1(v118) ^ 0x95)] + 1484381123;
  unsigned int v138 = *(_DWORD *)&v88[4 * (v106 ^ 0x83)] ^ v135 ^ v137 ^ ((v136 ^ (2 * v137))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v136 ^ (2 * v137)) & 0x7CE44D9F ^ v136 & 1));
  unsigned int v139 = *(_DWORD *)&v77[4 * (HIBYTE(v114) ^ 0xA4)] ^ 0xD8C0B9F7;
  BYTE1(v136) = BYTE1(v110) ^ 0x21;
  int v140 = *(_DWORD *)&v80[4 * (BYTE1(v106) ^ 0x7A)] + 1484381123;
  int v141 = (v139 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v118) ^ 0xDAu)) + 1052387331) ^ (2 * v140);
  unsigned int v142 = *(_DWORD *)&v88[4 * (((v110 ^ 0xFFFFFFBE) + (v110 ^ 0x59) + 1) ^ 0xFFFFFFF0)
                       + 4 * (v110 ^ 0x59)] ^ v139 ^ v140 ^ (v141
                                                                            + 2095336862
                                                                            - ((2 * v141) & 0xF9C89B3C));
  unsigned int v143 = *(_DWORD *)&v77[4 * (v119 ^ 0x40)] ^ 0xD8C0B9F7;
  int v144 = (v143 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v106) ^ 0x41u)) + 1052387331);
  int v145 = *(_DWORD *)&v80[4 * BYTE1(v136)] + 1484381123;
  int v146 = (v144 ^ (2 * v145)) + 2095336862 - 2 * ((v144 ^ (2 * v145)) & 0x7CE44D9F ^ v144 & 1);
  int v147 = *(_DWORD *)&v88[4 * (v114 ^ 0xBC)] ^ v145 ^ v143;
  int v148 = *(_DWORD *)&v80[4 * (BYTE1(v142) ^ 0xF1)];
  int v149 = v147 ^ v146;
  int v150 = v148 - ((2 * v148 + 821278598) & 0x35246DE0) + 1930171059;
  unsigned int v151 = *(_DWORD *)&v77[4 * ((v134 ^ 0x16435890) >> 24)] ^ 0xD8C0B9F7;
  int v152 = (v151 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v138) ^ 0x51u)) + 1052387331) ^ (2 * (((((v150 ^ 0x7BD77487) + 515554697) ^ (-1484381123 - v148)) - ((2 * (((v150 ^ 0x7BD77487) + 515554697) ^ (-1484381123 - v148))) & 0x35246DE0) + 445789936) ^ v150) + 1031109392);
  uint64_t v153 = *(_DWORD *)&v88[4 * (v149 ^ 0xE9)] ^ v150 ^ v151 ^ (v152
                                                                            + 2095336863
                                                                            + ~((2 * v152) & 0xF9C89B3C));
  unsigned int v154 = *(_DWORD *)&v77[4 * (HIBYTE(v138) ^ 1)] ^ 0xD8C0B9F7;
  int v155 = *(_DWORD *)&v80[4 * (BYTE1(v149) ^ 0xC)] + 1484381123;
  int v156 = (v154 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v142) ^ 0xAFu)) + 1052387331) ^ (2 * v155);
  unsigned int v157 = v155 ^ v154 ^ (v156 + 2095336862 - ((2 * v156) & 0xF9C89B3C)) ^ *(_DWORD *)&v88[4
                                                                                       * (v134 ^ 0x88)];
  unsigned int v158 = v149 ^ 0xA9C2F8F1;
  unsigned int v159 = *(_DWORD *)&v77[4 * (HIBYTE(v142) ^ 0xC7)] ^ 0xD8C0B9F7;
  int v160 = *(_DWORD *)&v80[4 * (BYTE1(v134) ^ 0xAC)] + 1484381123;
  int v161 = (v159 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * BYTE2(v158)) + 1052387331) ^ (2 * v160);
  unsigned int v162 = *(_DWORD *)&v88[4 * (v138 ^ 5)] ^ v159 ^ v160 ^ (v161 + 2095336862 - ((2 * v161) & 0xF9C89B3C));
  unsigned int v163 = *(_DWORD *)&v77[4 * HIBYTE(v158)] ^ 0xD8C0B9F7;
  int v164 = *(_DWORD *)&v80[4 * (BYTE1(v138) ^ 0xE5)] + 1484381123;
  int v165 = *(_DWORD *)&v88[4 * (v142 ^ 0x75)];
  unsigned int v166 = (*(_DWORD *)(v82 + 4 * (((v134 ^ 0x16435890) >> 16) ^ 0x76u)) + 1052387331) ^ v163 ^ (v163 >> 3) & 0x1597797F ^ v164 ^ v165 ^ (2 * v164);
  unsigned int v167 = *(_DWORD *)&v77[4 * (HIBYTE(v166) ^ 0x15)] ^ 0xD8C0B9F7;
  int v168 = *(_DWORD *)&v80[4 * (BYTE1(v157) ^ 0xAE)] + 1484381123;
  int v169 = (*(_DWORD *)(v82 + 4 * (BYTE2(v153) ^ 0x5Au)) + 1052387331) ^ v167 ^ (v167 >> 3) & 0x1597797F ^ v168 ^ (2 * v168);
  unsigned int v170 = (v169 & 0x40000000 ^ 0xFEFFEB73) + 2 * (v169 & 0x40000000);
  int v171 = *(_DWORD *)&v88[4 * (v162 ^ 0x4F)];
  BOOL v128 = ((v170 + 16782477) & (v171 ^ 0x7CE44D9E)) == 0;
  unsigned int v172 = *(_DWORD *)&v77[4
                       * (((v153 ^ 0x32C9AC7uLL) >> (v165 & 0x18 ^ 0x18u) >> (v165 & 0x18)) ^ 0x40)];
  int v173 = (v172 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v157) ^ 0x5Bu)) + 1052387331);
  int v174 = *(_DWORD *)&v80[4 * ((unsigned __int16)(v162 ^ 0x374F) >> 8)] + 1484381123;
  int v175 = (v173 ^ (2 * v174) ^ 0x1110113E) + 2095336862 - 2 * ((v173 ^ (2 * v174) ^ 0x1110113E) & 0x7CE44D9F ^ v173 & 1);
  unsigned int v176 = *(_DWORD *)&v77[4 * (HIBYTE(v157) ^ 7)] ^ 0xD8C0B9F7;
  int v177 = (v176 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v162) ^ 0x43u)) + 1052387331);
  int v178 = *(_DWORD *)&v80[4 * (BYTE1(v166) ^ 0x1E)] + 1484381123;
  unsigned int v179 = *(_DWORD *)&v88[4 * (v153 ^ 0xDF)] ^ v176 ^ v178 ^ ((v177 ^ (2 * v178))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v177 ^ (2 * v178)) & 0x7CE44D9F ^ v177 & 1));
  int v180 = *(_DWORD *)(v82 + 4 * (BYTE2(v166) ^ 0xD2u));
  unsigned int v181 = *(_DWORD *)&v77[4 * (HIBYTE(v162) ^ 0xA2)] ^ 0xD8C0B9F7;
  unsigned int v182 = (((2 * v180 - 1705247150) & 0xE31851B4) + ((v180 - 852623575) ^ 0x718C28DA)) ^ (v181 >> 3) & 0x1597797F;
  int v183 = *(_DWORD *)&v80[4 * (BYTE1(v153) ^ 0x6E)] + 1484381123;
  unsigned int v184 = *(_DWORD *)&v88[4 * (v157 ^ 0xF6)] ^ v181 ^ v183 ^ ((v182 ^ (2 * v183))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v182 ^ (2 * v183)) & 0x7CE44D9F ^ v182 & 1));
  int v185 = *(_DWORD *)&v88[4 * (v166 ^ 0xF4)] ^ v174 ^ v172 ^ v175;
  unsigned int v186 = v170 + 1879037151;
  unsigned int v187 = 1845472197 - v170;
  if (!v128) {
    unsigned int v186 = v187;
  }
  unsigned int v188 = ((v171 ^ 0xEF854ABC) - 1862254674 + v186) ^ v169 & 0xBFFFFFFF;
  unsigned int v189 = *(_DWORD *)&v77[4 * (((v185 ^ 0xBFFFFFFF) >> 24) ^ 0x36)] ^ 0xD8C0B9F7;
  int v190 = *(_DWORD *)&v80[4 * (BYTE1(v184) ^ 0x8F)] + 1484381123;
  int v191 = (v189 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v179) ^ 0xF1u)) + 1052387331) ^ (2 * v190);
  unsigned int v192 = *(_DWORD *)&v88[4 * (v188 ^ 0x41)] ^ v190 ^ v189 ^ (v191
                                                                            + 2095336862
                                                                            - ((2 * v191) & 0xF9C89B3C));
  unsigned int v193 = *(_DWORD *)&v77[4 * (HIBYTE(v179) ^ 0x34)] ^ 0xD8C0B9F7;
  unsigned int v194 = ((v193 & 0xACBBCBFA) >> (v134 & 3) >> (v134 & 3 ^ 3)) ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v184) ^ 5u))
                                                                + 1052387331);
  char v195 = v184 ^ 0xDD;
  int v196 = *(_DWORD *)&v80[4 * (BYTE1(v188) ^ 0xB3)] + 1484381123;
  unsigned int v197 = v185 ^ 0xC9AB5B93;
  unsigned int v198 = *(_DWORD *)&v88[4 * (v197 ^ 0x18)] ^ v193 ^ v196 ^ ((v194 ^ (2 * v196))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v194 ^ (2 * v196)) & 0x7CE44D9F ^ v194 & 1));
  unsigned int v199 = *(_DWORD *)&v77[4 * (((v184 ^ 0xB4737BDD) >> 24) - ((v184 >> 23) & 0x80)) + 256] ^ 0xD8C0B9F7;
  int v200 = (v199 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v188) ^ 0xE5u)) + 1052387331);
  int v201 = *(_DWORD *)&v80[4 * (BYTE1(v197) ^ 0xF4)] + 1484381123;
  unsigned int v202 = *(_DWORD *)&v88[4 * (v179 ^ 0x46)] ^ v199 ^ v201 ^ ((v200 ^ (2 * v201))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v200 ^ (2 * v201)) & 0x7CE44D9F ^ v200 & 1));
  unsigned int v203 = HIWORD(v197);
  unsigned int v204 = *(_DWORD *)&v77[4 * (HIBYTE(v188) ^ 0x6C)] ^ 0xD8C0B9F7;
  int v205 = *(_DWORD *)&v80[4 * (BYTE1(v179) ^ 0xD0)] + 1484381123;
  int v206 = (*(_DWORD *)(v82 + 4 * ((v203 & 8 | 0x76) ^ v203 & 0xF7)) + 1052387331) ^ v204 ^ (v204 >> 3) & 0x1597797F ^ v205;
  int v207 = *(_DWORD *)&v88[4 * (v184 ^ 0xC5)];
  int v208 = v206 ^ (2 * v205);
  unsigned int v209 = v207 ^ 0xBE6EC971 ^ v208;
  v208 ^= 0x3D757B10u;
  unsigned int v210 = (v209 + v208 + 1) ^ ((v207 ^ 0x831BB261) + 1);
  unsigned int v211 = ((v210 + 2095336862 - ((2 * v210) & 0xF9C89B3C)) ^ v207) + v208;
  int v212 = *(_DWORD *)&v77[4 * (HIBYTE(v192) ^ 0xB6)];
  unsigned int v213 = v211 - ((2 * v211) & 0xA52A5F3A);
  int v214 = v212 ^ 0x719E9304;
  unsigned int v215 = v212 ^ 0x8B848DF0;
  if ((v212 ^ 0x719E9304) == 0xA95E2AF3) {
    unsigned int v215 = -1396978696;
  }
  int v216 = *(_DWORD *)&v80[4 * (BYTE1(v202) ^ 0x43)] + 1484381123;
  unsigned int v217 = (*(_DWORD *)(v82 + 4 * (BYTE2(v198) ^ 0x16u)) + 1052387331) ^ (2 * v216) ^ ((v215 & (v212 ^ 0xD8C0B9F0)) >> 3);
  unsigned int v218 = v213 + 1385508765;
  unsigned int v219 = (v217 + 2095336862 - ((2 * v217) & 0xF9C89B3C)) ^ *(_DWORD *)&v88[4 * ((v213 - 99) ^ 0x9F)];
  unsigned int v220 = v216 ^ v214 ^ (v219 - 1453446413 - ((2 * v219) & 0x52BC55E6));
  unsigned __int8 v221 = v202 ^ 0xBD;
  int v222 = *(_DWORD *)(v82 + 4 * ((v202 ^ 0x36A4B7BD) >> 16));
  unsigned int v223 = *(_DWORD *)&v77[4 * (HIBYTE(v198) ^ 0xE0)] ^ 0xD8C0B9F7;
  unsigned int v224 = (((2 * v222 - 1705247150) & 0xE31851B4) + ((v222 - 852623575) ^ 0x718C28DA)) ^ (v223 >> 3) & 0x1597797F;
  int v225 = *(_DWORD *)&v80[4 * (BYTE1(v218) ^ 0xCB)] + 1484381123;
  unsigned int v226 = v225 ^ v223 ^ *(_DWORD *)&v88[4 * (v192 ^ 0x3E)] ^ ((v224 ^ (2 * v225))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v224 ^ (2 * v225)) & 0x7CE44D9F ^ v224 & 1));
  unsigned int v227 = *(_DWORD *)&v77[4 * (HIBYTE(v202) ^ 0x76)] ^ 0xD8C0B9F7;
  int v228 = *(_DWORD *)&v80[4 * (BYTE1(v192) ^ 0x1C)] + 1484381123;
  int v229 = (v227 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v218) ^ 0x77u)) + 1052387331) ^ (2 * v228);
  unsigned int v230 = *(_DWORD *)&v88[4 * (v198 ^ 0xB4)] ^ v227 ^ v228 ^ (v229
                                                                            + 2095336862
                                                                            - ((2 * v229) & 0xF9C89B3C));
  unsigned int v231 = *(_DWORD *)&v77[4 * (HIBYTE(v218) ^ 0x84)] ^ 0xD8C0B9F7;
  int v232 = *(_DWORD *)&v80[4 * (BYTE1(v198) ^ 0xA4)] + 1484381123;
  int v233 = (v231 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v192) ^ 0x50u)) + 1052387331) ^ (2 * v232);
  unsigned int v234 = v232 ^ *(_DWORD *)&v88[4 * v221] ^ v231 ^ (v233 + 2095336862 - ((2 * v233) & 0xF9C89B3C));
  unsigned int v235 = *(_DWORD *)&v77[4 * (HIBYTE(v220) ^ 7)] ^ 0xD8C0B9F7;
  int v236 = (v235 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v226) ^ 0xF7u)) + 1052387331);
  int v237 = *(_DWORD *)&v80[4 * (BYTE1(v230) ^ 0xC9)] + 1484381123;
  int v238 = *(_DWORD *)&v88[4 * ((v234 ^ 0xCC) - ((2 * (v234 ^ 0x58B2CACC)) & 0x30)) + 96] ^ v235 ^ v237 ^ ((v236 ^ (2 * v237)) + 2095336862 - 2 * ((v236 ^ (2 * v237)) & 0x7CE44D9F ^ v236 & 1));
  int v239 = *(_DWORD *)&v77[4 * (HIBYTE(v226) ^ 0x85)];
  int v240 = *(_DWORD *)&v80[4 * (BYTE1(v234) ^ 0x3E)] + 1484381123;
  unsigned int v241 = (*(_DWORD *)(v82
                    + 4 * (((v230 ^ 0xD1923D12) >> (v195 & 0x10) >> (v195 & 0x10 ^ 0x10)) ^ 0x76u))
        + 1052387331) ^ (2 * v240) ^ (((v239 ^ 0xD8C0B9F7 | 0xACBBCBFA) + (v239 ^ 0x747B720D) - 2 * (v239 ^ 0x747B720D)) >> 3);
  unsigned int v242 = v240 ^ v239 ^ 0xD8C0B9F7 ^ *(_DWORD *)&v88[4 * (v220 ^ 3)] ^ (v241
                                                                                      + 2095336862
                                                                                      - ((2 * v241) & 0xF9C89B3C));
  unsigned int v243 = *(_DWORD *)&v77[4 * (HIBYTE(v230) ^ 0x91)] ^ 0xD8C0B9F7;
  int v244 = (v243 >> 3) & 0x1597797F ^ v243 ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v234) ^ 0xC4u)) + 1052387331);
  int v245 = *(_DWORD *)&v80[4 * (BYTE1(v220) ^ 0x2E)] + 1484381123;
  unsigned int v246 = *(_DWORD *)&v88[4 * (v226 ^ 0x7B)] ^ v245 ^ ((v244 ^ (2 * v245))
                                                                     + 2095336862
                                                                     - 2 * ((v244 ^ (2 * v245)) & 0x7CE44D9F ^ v244 & 1));
  unsigned int v247 = *(_DWORD *)&v77[4 * (HIBYTE(v234) ^ 0x18)] ^ 0xD8C0B9F7;
  int v248 = *(_DWORD *)&v80[4 * (BYTE1(v226) ^ 0xE2)] + 1484381123;
  int v249 = (v247 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v220) ^ 0x56u)) + 1052387331) ^ (2 * v248);
  unsigned int v250 = *(_DWORD *)&v88[4 * (v230 ^ 0xA)] ^ v248 ^ v247 ^ (v249
                                                                           + 2095336862
                                                                           - ((2 * v249) & 0xF9C89B3C));
  unsigned int v251 = *(_DWORD *)&v77[4 * ((v238 ^ 0x3570E1F3u) >> 24)] ^ 0xD8C0B9F7;
  int v252 = (v251 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * ((v242 ^ 0x92466B44) >> 16)) + 1052387331);
  unsigned int v253 = *(_DWORD *)&v77[4 * (HIBYTE(v242) ^ 0xD2)];
  unsigned int v254 = ((((v253 >> 3) ^ 0x2727C521) & 0x158F2946 ^ 0x85904077) - 1) ^ ((v253 >> 3) ^ 0x2727C521) & 0x185039;
  unsigned int v255 = (v254 & 0x810B682E ^ 0x68402E8E) + (v254 ^ 0x919F4070) - ((v254 ^ 0x919F4070) & 0x10B682E);
  int v256 = *(_DWORD *)&v80[4 * (BYTE1(v246) ^ 0xCA)] + 1484381123;
  int v257 = *(_DWORD *)&v88[4 * (v250 ^ 0x82)] ^ v251 ^ v256 ^ ((v252 ^ (2 * v256))
                                                                            + 2095336862
                                                                            - 2
                                                                            * ((v252 ^ (2 * v256)) & 0x7CE44D9F ^ v252 & 1));
  unsigned int v258 = ((v253 ^ 0xD8C0B9F7) + (v253 ^ 0xCE6C78BF ^ v255) + 1) ^ ((v255 ^ 0x16ACC148) + 1);
  unsigned int v259 = ((v255 ^ 0x2DB7388A ^ (v258 - ((2 * v258) & 0x89C80C7A) - 991689155)) + (v253 ^ 0xD8C0B9F7)) ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v246) ^ 0x15u)) + 1052387331);
  int v260 = *(_DWORD *)&v80[4 * (BYTE1(v250) ^ 0x9C)] + 1484381123;
  unsigned int v261 = v260 ^ *(_DWORD *)&v88[4 * (v238 ^ 0xEB)] ^ ((v259 ^ (2 * v260))
                                                                     + 2095336862
                                                                     - 2 * ((v259 ^ (2 * v260)) & 0x7CE44D9F ^ v259 & 1));
  unsigned int v262 = *(_DWORD *)&v77[4 * (HIBYTE(v246) ^ 0x21)] ^ 0xD8C0B9F7;
  int v263 = *(_DWORD *)&v80[4 * ((unsigned __int16)(v238 ^ 0xE1F3) >> 8)] + 1484381123;
  int v264 = v263 ^ v262 ^ (*(_DWORD *)(v82 + 4 * ((v250 ^ 0x1B666882) >> 16)) + 1052387331) ^ (v262 >> 3) & 0x1597797F ^ (2 * v263);
  int v265 = *(_DWORD *)&v88[4 * (v242 ^ 0x5C)];
  unsigned int v266 = (v265 ^ 0xEF854ABC ^ -(v265 ^ 0xEF854ABC) ^ ((v265 ^ 0x2D0FCE53 ^ v264) + (v264 ^ 0x3D757B10) + 1))
       + (v264 ^ 0x3D757B10);
  unsigned int v267 = v266 - ((2 * v266) & 0x9B5BB10) + 81452424;
  unsigned int v268 = *(_DWORD *)&v77[4 * (HIBYTE(v250) ^ 0x5B)] ^ 0xD8C0B9F7;
  int v269 = *(_DWORD *)&v80[4 * ((unsigned __int16)(v242 ^ 0x6B44) >> 8)];
  int v270 = (v268 >> 3) & 0x1597797F ^ (*(_DWORD *)(v82 + 4 * (BYTE2(v238) ^ 6u)) + 1052387331) ^ ((v269
                                                                                                 - ((2 * (v269 + 1484381123)) & 0x3D757B10)
                                                                                                 + 1999935819) << (BYTE4(v311) & 1) << !(v311 & 0x100000000));
  unsigned int v271 = *(_DWORD *)&v88[4 * (v246 ^ 0x9A)] ^ v268 ^ (v269 + 1484381123) ^ (v270
                                                                                           + 2095336862
                                                                                           - ((2 * v270) & 0xF9C89B3C));
  int v272 = (char *)*(&off_26DE9F480 + (int)v304) - 4;
  int v273 = (char *)*(&off_26DE9F480 + SHIDWORD(v303)) - 12;
  int v274 = *(_DWORD *)&v273[4 * (BYTE2(v261) ^ 0x58)];
  unsigned int v275 = v274 - 864321530 - ((2 * v274 - 225082132) & 0xA6617B20);
  unint64_t v276 = (char *)*(&off_26DE9F480 + (int)v303) - 4;
  int v277 = *(_DWORD *)&v276[4 * (v271 ^ 0x8C)];
  int v278 = (char *)*(&off_26DE9F480 + SHIDWORD(v302)) - 4;
  int v279 = v277 ^ *(_DWORD *)&v272[4 * ((v257 ^ 0x70707352u) >> 24)] ^ (4 * v277) ^ *(_DWORD *)&v278[4
                                                                                                 * (BYTE1(v267) ^ 0x19)] ^ ((BYTE1(v267) ^ 0x73) + 1079808105 - ((2 * ((v267 >> 8) ^ 0x29ED73)) & 0xD2)) ^ v275;
  int v280 = *(_DWORD *)&v273[4 * (BYTE2(v267) ^ 0x34)];
  unsigned int v281 = *(_DWORD *)&v276[4 * (v257 ^ 0x14)] ^ 0x9CE18343;
  unsigned int v282 = *(_DWORD *)&v278[4 * (BYTE1(v271) ^ 0x37)] ^ (v280 - 864321530 - ((2 * v280 - 225082132) & 0xA6617B20)) ^ v281 ^ *(_DWORD *)&v272[4 * (HIBYTE(v261) ^ 0xC0)] ^ (4 * v281) ^ ((BYTE1(v271) ^ 0x5D) + 1079808105 - ((2 * ((v271 >> 8) ^ 0xEF875D)) & 0xD2));
  int v283 = *(_DWORD *)&v273[4 * (BYTE2(v271) ^ 0x5E)];
  unsigned int v284 = (v283 - 864321530 - ((2 * v283 - 225082132) & 0xA6617B20)) ^ *(_DWORD *)&v272[4 * (HIBYTE(v267) ^ 0x29)];
  int v285 = *(_DWORD *)&v273[4 * (BYTE2(v257) ^ 0xA9)];
  LODWORD(v273) = *(_DWORD *)&v276[4 * (v261 ^ 0x84)] ^ 0x9CE18343;
  int v286 = *(_DWORD *)&v272[4 * (HIBYTE(v271) ^ 0x87)];
  unsigned int v287 = *(_DWORD *)&v278[4 * (((unsigned __int16)(v257 ^ 0x7352) >> 8) ^ 0x6A)] ^ ((unsigned __int16)(v257 ^ 0x7352) >> 8) ^ v273 ^ (4 * v273) ^ (v284 + 1079808105 - ((2 * v284) & 0x80B920D2));
  LODWORD(v276) = *(_DWORD *)&v276[4 * (v267 ^ 0x68)
                                 + 4
                                 + 4 * ((2 * v267) & 0x8C ^ 0xFFFFFFF3)
                                 + 4 * ((2 * v267) & 0x8C ^ 0xC)];
  LODWORD(v288) = ((v279 << 15) & 0x40000 | __ROR4__(v279 & 0xFFFFFFF7 ^ 0x65064965, 17)) ^ 0x470B7266;
  HIDWORD(v288) = v288;
  LODWORD(v272) = ((2 * v276) ^ 0x39C30686) << !(v279 & 1) << (v279 & 1);
  uint64_t v289 = (v288 >> 15) - ((2 * (v288 >> 15)) & 0x71F29BC) - 2087742242;
  unsigned int v290 = *(_DWORD *)&v278[4 * (BYTE1(v261) ^ 0x1A)] ^ v286 ^ v276 ^ (v285
                                                                                 - 864321530
                                                                                 - ((2 * v285 - 225082132) & 0xA6617B20)) ^ ((BYTE1(v261) ^ 0x70) + 1079808105 - 2 * (((v261 >> 8) ^ 0xC05870) & 0x6F ^ (v261 >> 8) & 6)) ^ v272;
  uint64_t v291 = *(unsigned int *)(v19 - 120);
  unsigned int v292 = (char *)*(&off_26DE9F480 + (int)v291 - 2902) - 4;
  a1[4] = v292[((v282 ^ 0xD4873DD) >> 24) ^ 0x5CLL] ^ ((v282 ^ 0xD4873DD) >> 24) ^ 0xE0 ^ ((((v282 ^ 0xD4873DD) >> 24) ^ 0xE0)
                                                                                         - ((2
                                                                                           * (((v282 ^ 0xD4873DD) >> 24) ^ 0xE0)
                                                                                           + 92) & 0xF8)
                                                                                         - 86) ^ 0xA4;
  uint64_t v293 = HIBYTE(v287);
  uint64_t v294 = (uint64_t)*(&off_26DE9F480 + (int)v302);
  a1[1] = *(unsigned char *)(v294 + (BYTE2(v289) ^ 0x8BLL)) ^ 0xC8;
  a1[8] = v292[v293 ^ 0x11] ^ v293 ^ 0xAD ^ ((v293 ^ 0xAD) - 2 * (((v293 ^ 0xAD) + 46) & 0x7D ^ (v293 ^ 0xAD) & 1) - 86) ^ 0x93;
  uint64_t v295 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(v301));
  LODWORD(v272) = *(unsigned __int8 *)(v295 + (BYTE1(v290) ^ 0xBBLL));
  HIDWORD(v288) = v272 ^ 1;
  LODWORD(v288) = (v272 ^ 0xD8) << 24;
  LOBYTE(v272) = (v288 >> 26) + (~(2 * (v288 >> 26)) | 0xE9) - 116;
  a1[14] = (((v272 ^ 0x1F) + (v272 ^ 0x8B) + 1) ^ 0xFE)
         + (v272 ^ 0x8B);
  uint64_t v296 = (char *)*(&off_26DE9F480 + (int)v301) - 8;
  a1[*(void *)(v19 - 176)] = ((((v290 ^ 0xA6) + (v290 ^ 0x6F) + 1) ^ 3)
                              - (v290 ^ 0x6F)
                              + v296[v290 ^ 0x86]
                              - 74) ^ 0x39;
  a1[13] = *(unsigned char *)(v294 + (BYTE2(v290) ^ 0x79)) ^ 0x7B;
  a1[*(void *)(v19 - 192)] = *(unsigned char *)(v294 + (BYTE2(v282) ^ 0x83)) ^ 0x80;
  a1[*(void *)(v19 - 160)] = ((v282 ^ 0xC8) + v296[v282 ^ 0xE8] - 74) ^ 0xD3;
  a1[11] = ((v287 ^ 0x66) + v296[v287 ^ 0x46] - 74) ^ 0x74;
  int v297 = *(unsigned __int8 *)(v295 + (BYTE1(v287) ^ 0x89));
  HIDWORD(v288) = v297 ^ 1;
  LODWORD(v288) = (v297 ^ 0xD8) << 24;
  a1[10] = (v288 >> 26) ^ 0x86;
  *a1 = v292[BYTE3(v289) ^ 0x1DLL] ^ ((BYTE3(v289) ^ 0xA1) + 46) ^ BYTE3(v289) ^ 0xA1 ^ 0xF3;
  a1[*(void *)(v19 - 184)] = *(unsigned char *)(v294 + (BYTE2(v287) ^ 0xB6)) ^ 0x94;
  int v298 = *(unsigned __int8 *)(v295
                            + (((((unsigned __int16)(v282 ^ 0x73DD) >> 8) ^ -((unsigned __int16)(v282 ^ 0x73DD) >> 8) ^ ((((unsigned __int16)(v282 ^ 0x73DD) >> 8) ^ 0xFFFFFF1C) + 228))
                              + 227) ^ 0x77));
  HIDWORD(v288) = v298 ^ 1;
  LODWORD(v288) = (v298 ^ 0xD8) << 24;
  a1[*(void *)(v19 - 168)] = (v288 >> 26) ^ 0xDF;
  a1[*(void *)(v19 - 152)] = ((v289 ^ 0xAB) + v296[v289 ^ 0x8BLL] - 74) ^ 0x70;
  int v299 = *(unsigned __int8 *)(v295 + (BYTE1(v289) ^ 0x41));
  HIDWORD(v288) = v299 ^ 1;
  LODWORD(v288) = (v299 ^ 0xD8) << 24;
  a1[*(void *)(v19 - 128)] = (v288 >> 26) ^ 0x5F;
  a1[*(void *)(v19 - 136)] = HIBYTE(v290) ^ 0x56 ^ ((HIBYTE(v290) ^ 0x56)
                                                    - ((2 * (HIBYTE(v290) ^ 0x56) + 92) & 0xF8)
                                                    - 86) ^ v292[HIBYTE(v290) ^ 0xEALL] ^ 0xBB;
  LODWORD(v310) = (v44 - 1207) | 0x446;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a16 + 8 * ((557 * (((1164016357 - 2 * (*(_DWORD *)(v19 - 140) & 0x10)) ^ 0x45617AD5u) < HIDWORD(v305))) ^ ((int)v291 + 106))))(v289, v294, 0, v292, 200, 216, v291, 134, a2, a3, a4, a5, v301, v302, v303, v304, v305, v306, v307,
           a13,
           v308,
           v309,
           a16,
           a17,
           v310,
           v311);
}

uint64_t sub_22B34CBC0@<X0>(uint64_t a1@<X8>)
{
  int v4 = v3 - 1519;
  unsigned int v5 = 295699101 - v2 - ((-1709870992 - (v2 << (v3 ^ 0x29))) & 0x892A94CA);
  unsigned int v6 = 1328090399 * (((v8 | 0xF81F39D7) - v8 + (v8 & 0x7E0C628)) ^ 0x7CC5DED);
  uint64_t v9 = v1;
  v8[0] = v5 ^ v6;
  v8[1] = v6 + v4 - 1468;
  return (*(uint64_t (**)(_DWORD *))(a1 + 8 * (v4 | 0x8C6)))(v8);
}

uint64_t sub_22B34CC8C(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v26 = v18 - 16;
  uint64_t v27 = v26 & 0xF;
  v29.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v29.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v22, a5).u64[0];
  int8x16_t v30 = vrev64q_s8(vmulq_s8(v29, a6));
  *(int8x16_t *)(v17 + v26) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 + v27 - 15), *(int8x16_t *)(a12 + v26)), *(int8x16_t *)(v15 + v27 - 15)), *(int8x16_t *)(a14 + v27 + v14 - 2105)), vextq_s8(v30, v30, 8uLL));
  return (*(uint64_t (**)(void))(v21 + 8 * (((v19 == 16) * v20) ^ a11)))();
}

uint64_t sub_22B34CC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,char a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, char *, uint64_t, uint64_t))(v38 + 8 * (((a17 + ((2 * LODWORD(STACK[0x294])) & 0x58 ^ 0x10) + (STACK[0x294] & 0x3F ^ 0x9B7FF9F5) < 0xFFFFFFC0) * ((((a29 ^ 0x34) + 1679) ^ 0x90) + 37 * (a29 ^ 0x34))) ^ (a29 + 893))))(a1, 1771384831, &STACK[0x250], &a38, a5, a31);
}

uint64_t sub_22B34CD44@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1201 * (**(unsigned char **)(a1 - 0x48A9B556C05DE579) == 0)) ^ a2)))();
}

uint64_t sub_22B34CD7C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((471 * (((*v2 > 0x14u) ^ (v0 + 3 * (v0 ^ 0x3A) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_22B34CDBC(uint64_t a1, int a2, int a3, int a4, int a5)
{
  int v10 = a5 ^ 0x47A;
  uint64_t v11 = 19 * (a5 ^ 0x9F1u);
  uint64_t v12 = 14 * (a5 ^ 0x99Fu);
  uint64_t v13 = (a3 + a2 + a4);
  unint64_t v14 = v13 + v8 + 1;
  uint64_t v15 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4) & 0xF;
  uint64_t v16 = v15 - v13;
  unint64_t v17 = v7 + v16;
  uint64_t v18 = v15 + v11 - 3172;
  unint64_t v19 = v7 + v18;
  unint64_t v20 = v6 + v16;
  unint64_t v21 = v6 + v18;
  unint64_t v22 = v16 + v12 + v5 - 2813;
  unint64_t v23 = v15 + v5 + 2;
  BOOL v25 = v17 < v14 && v19 > v8;
  if (v20 < v14 && v21 > v8) {
    BOOL v25 = 1;
  }
  int v28 = v23 > v8 && v22 < v14 || v25;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v28 | (2 * v28)) ^ v10)))();
}

uint64_t sub_22B34CE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,unsigned int a23,int a24)
{
  unsigned int v28 = 1990461019
      * ((-1241750071 - (&a20 | 0xB5FC65C9) + (&a20 | 0x4A039A36)) ^ 0x65E738BF);
  a22 = ((v26 ^ 0xDFFF12FD) + 1702821372 + ((2 * v26) & 0xBFFE25FA)) ^ v28;
  a24 = v28 ^ 0xD09;
  a20 = v25;
  a21 = a17;
  (*(void (**)(uint64_t *))(v27 + 32976))(&a20);
  unsigned int v29 = 1292559617
      * ((-1078072592 - (&a20 | 0xBFBDEAF0) + (&a20 | 0x4042150F)) ^ 0xE7117D66);
  a21 = a17;
  a23 = 1559 - v29;
  LODWORD(a20) = v29 + 1097015307 * v24 + 2128238812;
  uint64_t v30 = (*(uint64_t (**)(uint64_t *))(v27 + 32832))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((2642 * (a22 == -604050357)) ^ 0x756)))(v30);
}

uint64_t sub_22B34CFCC(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + 2806) ^ 0xC60) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_22B34CFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  BOOL v26 = a15 - 16 != ((v24 - 2023) ^ 0x1C27BED2);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((v26 | (2 * v26)) ^ (v24 + 1829))))(a24);
}

uint64_t sub_22B34D040(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  *(void *)(a62 - 0x24B64731C5A67D0FLL) = *(void *)STACK[0x2B8];
  *(_DWORD *)(a62 - 0x24B64731C5A67D17) = **(_DWORD **)a7;
  int v63 = *(void **)(a7 + 48);
  *(void *)(*v63 - 0x24B64731C5A6813FLL) = *(void *)(a61 + 8);
  *(_DWORD *)(*v63 - 0x24B64731C5A68147) = *(_DWORD *)a61;
  *(unsigned char *)(a57 + a53) = ((a56 + 7) ^ 0xBA) * (a4 - 59 + a56);
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t, uint64_t))(v62 + 8 * ((a4 - 2177) ^ 0x3D)))(&off_26DE9F480, 2142237067, 19);
}

uint64_t sub_22B34D1A0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + v4 + v3 + v5 - v6 + (v7 ^ 0x75A ^ (v9 + 2862))) = *(void *)(a1
                                                                                                 - 7
                                                                                                 + v4
                                                                                                 + v3
                                                                                                 + v5
                                                                                                 - v6
                                                                                                 + (v7 ^ 0x75A ^ (v9 + 2862)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((2948 * (v6 - (v2 & 0xFFFFFFF8) == -8)) ^ v7)))();
}

uint64_t sub_22B34D200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v9 = STACK[0x40C];
  LODWORD(STACK[0x40C]) += 64;
  unsigned int v10 = ((a8 - 2543) ^ 0x81B07B25) + v9;
  unsigned int v11 = LODWORD(STACK[0x544]) - 629620172;
  BOOL v12 = v10 < 0xFBA0A2CD;
  BOOL v13 = v10 > v11;
  if (v12 != v11 < 0xFBA0A2CD) {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v8
                                                                                                  + 8 * ((962 * v13) ^ (a8 + 422))))(a1, a2, a3, a4, a5, STACK[0x268]);
}

uint64_t sub_22B34D20C(int a1, int a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  int v12 = v10 + 4;
  int v13 = v12 + a1;
  unsigned int v14 = *(_DWORD *)(v7 + ((v12 + a1) & 0xFFFFFFFC));
  *(unsigned char *)(a6 + (v12 + a1)) = (HIBYTE(v14) ^ 0x11) - (a3 & (v14 >> 23)) + 42;
  *(unsigned char *)(a6 + (v13 + 1)) = ((v14 >> (v6 + 98)) ^ a5) - ((2 * (v14 >> (v6 + 98))) & 0x55) + 42;
  *(unsigned char *)(a6 + (v13 + 2)) = (BYTE1(v14) ^ 0x67) + (~(2 * (BYTE1(v14) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a6 + (v13 + 3)) = v14 ^ 0x13;
  BOOL v15 = v12 - 180032487 < v8;
  if (v8 < v9 != v12 - 180032487 < (a2 + 354)) {
    BOOL v15 = v8 < v9;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((3960 * v15) ^ v6)))();
}

uint64_t sub_22B34D214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v62 = *(_DWORD *)(a60 + 88);
  *(_DWORD *)(a60 + 88) = v62 + 1;
  return (*(uint64_t (**)(void))(v61
                              + 8
                              * ((((v62 - 1052621677) < 0xFFFFFFFA)
                                * (((v60 - 540655962) & 0x2039B5FF) + 587)) ^ (v60 - 2906))))();
}

uint64_t sub_22B34D26C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x281D12643933BF1FLL);
  int v4 = v2 - 920561905;
  BOOL v3 = v2 - 920561905 < 0;
  int v5 = 920561905 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 4) - 1438293641 * ((a1 & 0x542F6194 | ~(a1 | 0x542F6194)) ^ 0x1317CB14);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + ((v1 - 24) ^ 0x2C0))
          + ((3822
            * ((v5 ^ 0xDD5FF7FF) + 580913152 + ((v1 - 1161827268) & (2 * v5)) < ((v1 - 896) | 0x380u) + 2147482685)) ^ (v1 - 24))
          - 1))();
}

uint64_t sub_22B34D374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v25 - 112) = v20 + ((v25 - 128 + v23 - 2 * ((v25 - 128) & v23)) ^ 0x1333D575) * v24 + 780;
  *(void *)(v25 - 120) = a20;
  *(void *)(v25 - 104) = v22;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 + 2103)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((*(_DWORD *)(v25 - 128) - 1678219539) < 0xDB716818)
                                              * (((4 * v20) ^ 0x154C) - 611)) ^ v20)))(v26);
}

void sub_22B34D408(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,_DWORD *a34,uint64_t a35,uint64_t a36)
{
  uint64_t v37 = 4 * (v36 - 1286062317);
  unsigned int v38 = ((*(_DWORD *)(*a33 + (*a34 & 0x406D51E8)) ^ (a35 + v37)) & 0x7FFFFFFF) * (461 * (a1 ^ 0x4D0) - 1711037810);
  int v39 = v38 ^ HIWORD(v38);
  unsigned int v40 = -1711036427 * v39;
  *(_DWORD *)(a36 + v37) ^= *(_DWORD *)(a35 + v37) ^ *((_DWORD *)*(&off_26DE9F480 + a1 - 1132) + HIBYTE(v40) - 1) ^ *((_DWORD *)*(&off_26DE9F480 + a1 - 1192) + HIBYTE(v40)) ^ *((_DWORD *)*(&off_26DE9F480 + a1 - 861) + HIBYTE(v40) - 1) ^ (-1477115904 * v39) ^ v40 ^ (1721369903 * HIBYTE(v40));
  JUMPOUT(0x22B320710);
}

void sub_22B34D534()
{
  *(unsigned char *)(v1 - 0x717BE438C5D08564) = v2[8];
  ++*v3;
  *(unsigned char *)(v1 - 0x717BE438C5D08563) = v2[9];
  ++*v3;
  *(unsigned char *)(v1 - 0x717BE438C5D08562) = v2[10];
  ++*v3;
  *(unsigned char *)(v1 - 0x717BE438C5D08561) = v2[11];
  *v3 += v4 ^ 0xB65;
  *(_DWORD *)(v0 + 8) = -604050357;
}

uint64_t sub_22B34D614@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v3) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 + 1 == v1) * v4) ^ v2)))();
}

uint64_t sub_22B34D638()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((((((v2 - 3939) | 0x3B1) ^ 0xC92154BC) + v1) * (v3 - 920561905)) >> 31)
                                     * (((v2 - 3141) | 0x93) ^ 0x345)) ^ v2)))();
}

void sub_22B34D68C()
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t *)*(&off_26DE9F480
                  + ((-121 * (dword_2683EB128 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B48A580[byte_22B47E680[(-121 * (dword_2683EB128 ^ 0x4D ^ qword_2683EB0F0))] ^ 0x27])
                  + 134);
  uint64_t v1 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9F978
                                                  + (*((unsigned __int8 *)off_26DEA0418
                                                     + (-121 * ((qword_2683EB0F0 - *v0) ^ 0x4D))) ^ 0x27u)) ^ (-121 * ((qword_2683EB0F0 - *v0) ^ 0x4D)))
                + 54);
  unint64_t v2 = *v0 ^ (unint64_t)&v8 ^ *(void *)(v1 - 4);
  uint64_t v3 = 2059148423 * v2 + 0xD2361EE8B96764DLL;
  uint64_t v4 = 2059148423 * (v2 ^ 0xD2361EE8B96764DLL);
  *uint64_t v0 = v3;
  *(void *)(v1 - 4) = v4;
  LOBYTE(v4) = -121 * ((v4 + *(_DWORD *)v0) ^ 0x4D);
  *(_DWORD *)*(&off_26DE9F480
             + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                + v4
                                                                - 8) ^ 0x9B] ^ v4)
             + 137) = -604050357;
  uint64_t v5 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 - dword_2683EB128) ^ 0x4D)) ^ byte_22B48A680[byte_22B47E880[(-121 * ((qword_2683EB0F0 - dword_2683EB128) ^ 0x4D))] ^ 0xE6])
               + 329)
     - 8;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))&v5[8
                                                      * (*((unsigned char *)off_26DEA0388
                                                                          + (*((unsigned __int8 *)off_26DE9F930
                                                                             + (-121
                                                                                               * ((*(_DWORD *)(v1 - 4)
                                                                                                 + *(_DWORD *)v0) ^ 0x4D))) ^ 0x64u)
                                                                          - 4) ^ (-121
                                                                                * ((*(_DWORD *)(v1 - 4) + *(_DWORD *)v0) ^ 0x4D)))
                                                      + 32144])(512, 1509315540);
  unsigned __int8 v7 = -121 * ((*(_DWORD *)(v1 - 4) + *(_DWORD *)v0) ^ 0x4D);
  *(void *)*(&off_26DE9F480
             + (*((unsigned char *)off_26DE9FFD8
                                               + (*((unsigned __int8 *)off_26DE9FEC8 + v7 - 4) ^ 0x85u)
                                               - 8) ^ v7)
             + 96) = v6;
  __asm { BRAA            X8, X17 }
}

void sub_22B34D8F4(int a1@<W8>)
{
  if ((a1 + *(_DWORD *)(v3 - 0x281D12643933BF1FLL) - 920562721) >= 0x7FFFFFFF) {
    int v4 = v2;
  }
  else {
    int v4 = v2 + 2;
  }
  *(_DWORD *)(v1 + 4) = v4;
}

uint64_t sub_22B34D960(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * (v17 + v20 + v22) + v21) = (HIDWORD(v19) ^ (v20 - 1511683495))
                                                   + v16
                                                   - ((2 * (HIDWORD(v19) ^ (v20 - 1511683495))) & 0x76617F5A);
  BOOL v24 = a8 + 2111417044 > 1712330656 || a8 + 2111417044 < a5;
  return (*(uint64_t (**)(void))(v18 + 8 * ((29 * ((v24 ^ a2) & 1)) ^ (v20 + 185))))();
}

uint64_t sub_22B34DA00()
{
  int v7 = 731811679 * ((-72667135 - ((v6 - 144) | 0xFBAB3001) + ((v6 - 144) | 0x454CFFE)) ^ 0x4DA269BA);
  *(_DWORD *)(v6 - 140) = (v5 + 1945) ^ v7;
  *(_DWORD *)(v6 - 120) = (v1 - 851967382 + ((v5 + 624489628) & 0xDAC70D77)) ^ v7;
  *(void *)(v4 + 8) = v3;
  *(void *)(v4 + 16) = v9;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 | 0xC84)))(v6 - 144);
  *uint64_t v11 = v10;
  *(_DWORD *)(v0 + 24) = -604050357;
  return result;
}

uint64_t sub_22B34DAA4@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,arg29_22B34DAA4 a29)
{
  int v33 = a2 - 42;
  *(_OWORD *)(a1 + (((v33 - 3105) + 4294966693) & (v29 + v31))) = *(_OWORD *)&a29.arr[4];
  return (*(uint64_t (**)(void))(v32 + 8 * ((222 * (((v30 + 1) & 0x1FFFFFFF0) != 16)) ^ v33)))();
}

uint64_t sub_22B34DB0C(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(a2 + v4) = v3;
  *(_DWORD *)(v8 - 144) = ((v5 - 673) | 0x49)
                        - ((((v8 - 144) | 0xCF94B6D9) - ((v8 - 144) & 0xCF94B6D9)) ^ 0xE04F9EC3) * a3
                        - 33;
  *(void *)(v8 - 136) = v6;
  *(void *)(v8 - 128) = a2;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((v5 - 673) | 0xDDD)))(v8 - 144);
}

void *sub_22B34DBB0(void *result)
{
  return sub_22B3334D8(result);
}

uint64_t sub_22B34DBF8@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v4 + v8) = ((v1 + 1) ^ v3) * (v1 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == v5) * v6) ^ a1)))();
}

uint64_t sub_22B34DC04@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 == 1) * (((v2 - 618) | 0x621) - 321)) ^ v2)))();
}

uint64_t sub_22B34DC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12, int a13)
{
  int v17 = v16 + 920;
  a12 = (*(unsigned char *)(v14 - 0x3707DB8770DACECCLL) ^ 0x49)
      - (((&a11 | 0x88) - &a11 + (&a11 & 0x74)) ^ 0xCD)
      + ((2 * *(unsigned char *)(v14 - 0x3707DB8770DACECCLL)) ^ 0x6C)
      + (v17 ^ 0x90);
  a11 = v17
      - 2009815553
      * (((&a11 | 0x8C4EA088) - &a11 + (&a11 & 0x73B15F74)) ^ 0x7D458ECD)
      - 816611821;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v13 + 8 * (v17 ^ 0x1649)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((3694 * (a13 == v15)) ^ v17)))(v18);
}

void sub_22B34DD0C()
{
}

uint64_t sub_22B34DD28@<X0>(uint64_t a1@<X3>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (((((a2 - 1654) | 0x901) - 2391)
                                              * ((unint64_t)(a3 - a1 + 0x24B64731C5A67D7BLL) > 0x1F)) ^ a2)))(v3);
}

uint64_t sub_22B34DD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * (((v8 < ((a8 + 1105) | 0x540u) - 3506)
                                                                                 * (((a8 + 1105) ^ 0x286) - 2555)) ^ a8)))(a1, a2, a3, a4, 0);
}

uint64_t sub_22B34DDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  *(unsigned char *)(a5 + (a9 - 121645689)) = *(&a37 + a33 + a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((((a9 - 121645688) < 0x40) * (v37 + 1695)) ^ (v37 - 361))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_22B34DE0C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((3748
                                * (((*(unsigned __int8 *)(v4 + 4) - 247) ^ v3)
                                 + v1
                                 + (v2 & (2 * (*(unsigned __int8 *)(v4 + 4) - 247))) == a1 + ((v5 - 883) | 0x704) - 1893)) ^ v5)))();
}

uint64_t sub_22B34DE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v7 - 2676) | 0xAA) ^ (v10 + 151) ^ ((v7 + 8387725) | 0x1015B740))
                                * (*(_DWORD *)(v11 + 48 * (v9 + a7) + 36) == v9)) ^ v7)))();
}

void sub_22B34DEBC()
{
}

uint64_t sub_22B34DEC4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v3 + 454472784) & 0xE4E947F7 ^ 0xFFFFF0B3) + ((v3 + 1697015238) & 0x9AD999BF))
                                     * (v2 == v1)) ^ v3)))();
}

uint64_t sub_22B34DF1C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(v5 - 220 + a2 + a1) = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((77
                                              * ((((-75 * (v3 ^ 0x75) - 54) ^ (((181 * (v3 ^ 0x475)
                                                                                                - 1030) & v2) == 8)) & 1) == 0)) ^ (181 * (v3 ^ 0x475)))))(8);
}

uint64_t sub_22B34DF90(char a1, int a2, int a3, int a4, int a5, int a6, int a7)
{
  *(void *)(v13 - 232) = v11 - 7;
  *(void *)(v13 - 224) = v7 - 7;
  *(_DWORD *)(v13 - 256) = a2 & 0xFFFFFFF8;
  *(_DWORD *)(v13 - 236) = -(a2 & 0xFFFFFFF8);
  int v14 = -8 - a7;
  int v15 = a4 + a5 + a3;
  *(_DWORD *)(v13 - 244) = a2;
  *(_DWORD *)(v13 - 240) = v15 + 886;
  uint64_t v16 = (a4 + a5 + a6 + v14 + 8);
  v18.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a5 + (_BYTE)a6 + (_BYTE)v14 + 8) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v15 + 108 + (_BYTE)v14 + 8) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)v15 + 107 + (_BYTE)v14 + 8) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)v15 + (_BYTE)v14 + (((_BYTE)v12 - 102) & 0x6A) + 8) & 0xF;
  v18.val[2].i64[0] = (a1 + (_BYTE)v14 + 8) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)v15 + 120 + (_BYTE)v14 + 8) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v15 + 119 + (_BYTE)v14 + 8) & 0xF;
  v18.val[3].i64[1] = (*(_DWORD *)(v13 - 240) + (_BYTE)v14 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v13 - 232) + v16) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v9 + (v16 & 0xF) - 7), *(int8x8_t *)(*(void *)(v13 - 224) + v16)), veor_s8(*(int8x8_t *)(v10 + (v16 & 0xF) - 7), *(int8x8_t *)((v16 & 0xF) + v8 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v18, (int8x16_t)xmmword_22B497560), (int8x8_t)0xF5F5F5F5F5F5F5F5)));
  return (*(uint64_t (**)(__n128))(*(void *)(v13 - 216)
                                           + 8 * ((59 * (*(_DWORD *)(v13 - 236) != v14)) ^ (v12 - 724))))((__n128)xmmword_22B497560);
}

void sub_22B34E104(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v22 = 1948972247 * ((v21 - 144) ^ 0xB59EF5EE);
  *(void *)(v21 - 136) = a20;
  *(_DWORD *)(v21 - 124) = -118723830 - v22;
  *(_DWORD *)(v21 - 144) = (a3 + 514405582) ^ v22;
  (*(void (**)(uint64_t))(v20 + 8 * (a3 + 3931)))(v21 - 144);
  JUMPOUT(0x22B3A6344);
}

uint64_t sub_22B34E198(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  uint64_t v27 = v21 - 16 + (a13 ^ (v14 + 763));
  uint64_t v28 = ((_BYTE)v21 - 16 + (a13 ^ (v14 - 5))) & 0xF;
  uint64_t v29 = v18;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(a14 + v27) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + (v27 & 0xF) - 15), *(int8x16_t *)(a14 + v27)), veorq_s8(*(int8x16_t *)(v16 + (v27 & 0xF) - 15), *(int8x16_t *)((v27 & 0xF) + v17 - 14))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * (((v19 == 16) * v20) ^ a12)))();
}

void sub_22B34E1A4()
{
}

uint64_t sub_22B34E1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  BOOL v19 = (((3 * (v17 ^ 0x237)) ^ 0xDF7BC21D) & (2 * (1575676083 - ((v17 - 380) & 0xBBD5D166))) ^ 0x9B51C164)
      + ((1575676083 - ((v17 - 380) & 0xBBD5D166)) ^ 0x32570D4D)
      - 134578188 != 1740137970;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                                         + 8 * (v19 | (2 * v19) | v17)))(a1, a2, 4164039495, 1801476207, 130930587, a17);
}

void sub_22B34E1C4()
{
  *(_DWORD *)(v4 - 152) = v3;
  int v6 = (v2 - 1401744770) & 0x538CED43;
  *(_DWORD *)(v4 - 160) = v0;
  *(void *)(v4 - 136) = v1 - 7;
  *(void *)(v4 - 144) = v5 - 7;
  *(_DWORD *)(v4 - 168) = (v6 - 3339) & v0;
  *(_DWORD *)(v4 - 176) = v6 ^ 0x70E;
  JUMPOUT(0x22B34E24CLL);
}

uint64_t sub_22B34E328@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((3076
                                * (*(_DWORD *)(v3 + 4 * (((193 * (v2 ^ 0x15D)) ^ (a1 + 262)) + v4)) == v1)) | v2)))();
}

uint64_t sub_22B34E36C@<X0>(char a1@<W1>, char a2@<W2>, unsigned __int8 a3@<W3>, char a4@<W4>, int a5@<W5>, int a6@<W7>, uint64_t a7@<X8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, int8x8_t a10@<D2>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char v71 = v66 - 8;
  uint64_t v72 = (a5 + v70 - 8);
  v74.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)v70 - 8) & 0xF;
  v74.val[0].i64[1] = ((_BYTE)a5 + v69 - 8) & 0xF;
  v74.val[1].i64[0] = ((_BYTE)a5 + v68 - 8) & 0xF;
  v74.val[1].i64[1] = ((_BYTE)a5 + a4 - 8) & 0xF;
  v74.val[2].i64[0] = ((_BYTE)a5 + a2 - 8) & 0xF;
  v74.val[2].i64[1] = ((_BYTE)a5 + v71 + (a3 ^ 6)) & 0xF;
  v74.val[3].i64[0] = ((_BYTE)a5 + v71) & 0xF;
  v74.val[3].i64[1] = ((_BYTE)a5 + a1 - 8) & 0xF;
  *(int8x8_t *)(a63 + v72) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + v72), *(int8x8_t *)(v64 + (v72 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v72 & 0xF) + v65 - 6), *(int8x8_t *)((v72 & 0xF) + v63 - 5)))), a10), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v74, a8), a9)));
  return (*(uint64_t (**)(void))(a46 + 8 * ((7 * (a5 != v67 + 8)) ^ a6)))();
}

uint64_t sub_22B34E394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  int v59 = 1734664879 * (((v58 - 152) & 0x898D89EE | ~((v58 - 152) | 0x898D89EE)) ^ 0x59A95E0B);
  *(_DWORD *)(v58 - 128) = v59 + v54 + 2520;
  *(_DWORD *)(v58 - 124) = ((v53 ^ 0x31E44BBA) - 803328 + ((2 * v53) & 0x9DBFCD9A ^ 0x9C37488A)) ^ v59;
  v57[371] = &a53;
  v57[373] = &a37;
  v57[372] = v56;
  (*(void (**)(uint64_t))(v55 + 8 * (v54 ^ 0x12BA)))(v58 - 152);
  unint64_t v60 = ((unint64_t)&a34 ^ 0x7A7EFB915FD4FEFFLL)
      - 0x5248C00106500FE5
      + ((2 * (void)&a34) & 0xF4FDF722BFA9FDF0);
  *(unsigned char *)(v56 + 259) = ((v60 - 26) ^ 0xBA) * (v60 - 9);
  *(unsigned char *)(v56 + 258) = (v60 + ((4 * v54) ^ 0x4C)) * ((v60 - 25) ^ 0xBA);
  return (*(uint64_t (**)(void))(v55 + 8 * v54))();
}

uint64_t sub_22B34E4EC@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(a22 + v22) = v25;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * (int)((((a1 & 0x38) == 8) * ((v23 + 53957342) & 0xFCC8AD47 ^ 0xD4F)) ^ (v23 - 1532))))();
}

uint64_t sub_22B34E544(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v7 = a3 - 0x386FBD90000F2417 + ((a2 - 1947088444) & 0xF5DF7FFF);
  LODWORD(v7) = *(unsigned __int8 *)(v5 + v7) - *(unsigned __int8 *)(v4 + v7);
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((122 * (((2 * v7) & 0x7CFEF77E) + (v7 ^ v3) != v3)) ^ a2)))(4294925278);
}

uint64_t sub_22B34E5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((2027 * ((a5 & 0xFFFFFFF0) != ((a7 - 1033) | 0x409) - 595594301)) ^ (a7 - 81))))();
}

uint64_t sub_22B34E5FC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 1221) ^ 0x6FD) - 2643) * (v0 == v1)) ^ (v2 + 1221))))();
}

void sub_22B34E628()
{
}

uint64_t sub_22B34E6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 != v6) * (((a5 - 673) | 0x200) ^ 0x34B)) ^ a5)))();
}

uint64_t sub_22B34E6E8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v19 = 1866394843 * ((v18 + 694740997 - 2 * ((v18 - 144) & 0x2968E895)) ^ 0xC37FDF61);
  *(_DWORD *)(v18 - 144) = v17 - v19 - 2271;
  *(_DWORD *)(v18 - 140) = a1 + v19;
  *(void *)(v18 - 136) = a16;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0x1E1A)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v18 - 128) != ((v17 - 3539) ^ 0x9B82808E))
                                              * (((v17 - 3539) | 0x220) - 565)) ^ v17)))(v20);
}

uint64_t sub_22B34E794()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((503 * (((v1 < v2) ^ (STACK[0x278] - 70)) & 1)) ^ (STACK[0x278] - 362))))();
}

uint64_t sub_22B34E7D8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1055 * (v3 + 1 == v4 + 80)) ^ a3)))();
}

uint64_t sub_22B34E8A0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v11 = (a4 - 1104) | 0x428u;
  int v12 = (void *)(v10 + (((v11 ^ 0x1FFFFFF9AA2E8AALL) + a3) << 7) + 1176);
  *int v12 = a5 + ((*v9 * (a2 - 68) % v8) << 10);
  *v6 += 1024;
  v12[1] = a5 + ((*v9 * (a2 - 67) % v8) << 10);
  *int v6 = (v11 ^ 0x9F8) + *v6 - 386;
  void v12[2] = a5 + ((*v9 * (a2 - 66) % v8) << 10);
  *v6 += 1024;
  v12[3] = a5 + ((*v9 * (a2 - 65) % v8) << 10);
  *v6 += 1024;
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (int)((216 * (v7 != 1)) ^ v11)))(a1, (a2 + 4));
}

uint64_t sub_22B34E8D8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6, int a7)
{
  unsigned int v13 = ((669536330 - (&a3 | 0x27E8504A) + (&a3 | 0xD817AFB5)) ^ 0x91E109F1) * a1;
  a3 = v7;
  a7 = v13 + v12 - 314;
  a4 = v13 + v12 + v10 + 233605380;
  a5 = v13 - 303744050;
  a6 = v8;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v9 + 8 * (v12 ^ 0x1316)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x19157D3ABD2659C6) != v11 + 3337)
                                              * ((311 * (v12 ^ 0x30D)) ^ 0x4D8)) | v12)))(v14);
}

uint64_t sub_22B34E9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((a4 - 1681175991) > 0x37)
                                                                         * (v5 ^ 0x1FF)) ^ (v5 + 1700))))(a1, a2, a3, 1829);
}

uint64_t sub_22B34E9E8(int8x16_t a1, int8x8_t a2, uint64_t a3, char a4, uint64_t a5, char a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v36 = a8 - 8;
  char v37 = v26 + v36 + 8;
  uint64_t v38 = (a7 + v36 + 8);
  v40.val[0].i64[0] = ((_BYTE)a7 + (_BYTE)v36 + 8) & 0xF;
  v40.val[0].i64[1] = (v33 + (_BYTE)v36 + 8) & 0xF;
  v40.val[1].i64[0] = (v32 + (_BYTE)v36 + 8) & 0xF;
  v40.val[1].i64[1] = (a6 + (_BYTE)v36 + 8) & 0xF;
  v40.val[2].i64[0] = (a4 + (_BYTE)v36 + 8) & 0xF;
  v40.val[2].i64[1] = (v30 + (_BYTE)v36 + 8) & 0xF;
  v40.val[3].i64[0] = v37 & 0xF;
  v40.val[3].i64[1] = (v37 + ~v34) & 0xF;
  *(int8x8_t *)(*(void *)(v35 - 128) + v38) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v29 + (v38 & 0xF) - 7), *(int8x8_t *)(*(void *)(v35 - 120) + v38)), veor_s8(*(int8x8_t *)(v28 + (v38 & 0xF) + 1 - 7), *(int8x8_t *)(v27 + (v38 & 0xF) + 1 - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v40, a1), a2)));
  return (*(uint64_t (**)(void))(a25 + 8 * ((29 * (v31 == v36)) ^ v25)))();
}

uint64_t sub_22B34E9F0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unint64_t v27 = (*(_DWORD *)(a21 - 0x54EEBA8C0E75CADCLL) ^ v21)
      + (*(_DWORD *)(*(void *)(v22 - 0x281D12643933BF1BLL) - 0x54EEBA8C0E75CADCLL) ^ v21)
      * (unint64_t)(*(_DWORD *)(*(void *)(a1 - 0x281D12643933BF1BLL)
                                     + 4 * (v25 - 1234635877)
                                     - 0x54EEBA8C0E75CADCLL) ^ v21);
  return (*(uint64_t (**)(void, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((v24 & 0x2D5E39E7) - 1501) ^ (77 * (v23 < 2)))))(((v24 & 0x2D5E39E7) - 1501) ^ 0xCC6u, v22 - 0x281D12643933BF1BLL, 0x9EC75019ED2720D4, v27 - 0x6138AFE612D8DF2CLL + ~((((v24 & 0x2D5E39E7u) - 1501) ^ 0x3D8EA033DA4E50A6) & (2 * v27)) + 2429, 2947466779, 1347500517, 2663862297);
}

uint64_t sub_22B34EC24@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>, int8x8_t a4@<D0>)
{
  *(int8x8_t *)(a3 + a2) = veor_s8(*(int8x8_t *)(v6 + a2), a4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == a2) * a1) ^ v4)))();
}

uint64_t sub_22B34EC50(unsigned int a1, int a2, int a3)
{
  BOOL v12 = v9 > 0xA0BD3859;
  *(unsigned char *)(v10 + (a3 - 1739271329)) = *(unsigned char *)(v7 + ((a3 - 1739271329) & 0xFLL)) ^ *(unsigned char *)(v3 + (a3 - 1739271329)) ^ *(unsigned char *)(((a3 - 1739271329) & 0xFLL) + v5 + 5) ^ *(unsigned char *)(v6 + ((a3 - 1739271329) & 0xFLL)) ^ (-93 * ((a3 + 95) & 0xF));
  if (v12 == a3 - 141059322 < (v4 ^ 0xEF0u) + v8) {
    BOOL v12 = a3 - 141059322 < a1;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 * a2) ^ v4)))();
}

uint64_t sub_22B34ECEC()
{
  uint64_t v7 = *(void *)((v4 ^ 0x6FDCEC412A2DC68BLL) - 0x6FDCEC412A2DC673);
  unsigned int v8 = 1866394843 * ((v10 & 0x8F063A7C | ~(v10 | 0x8F063A7C)) ^ 0x9AEEF277);
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v14 = v0;
  uint64_t v15 = v7;
  v10[0] = v8 ^ 0xA5C;
  v10[1] = (v3 ^ 0xE7FFFD9F) + ((2 * v3) & 0xCFFFFB3E) + 2068283248 + v8;
  (*(void (**)(_DWORD *))(v6 + 33784))(v10);
  return v13 ^ v5;
}

uint64_t sub_22B34EDF0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 996420356) & 0x3B642E32) - 3154)
                                * (*(_DWORD *)(v2 - 128) == *(_DWORD *)(v2 - 136))) ^ v0)))();
}

uint64_t sub_22B34EE34@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v8 = v6 + (((a3 + a2 + 852) | 0x882) ^ v4);
  long long v9 = *(_OWORD *)(v3 + v8 - 15);
  long long v10 = *(_OWORD *)(v3 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((2766 * ((v5 & 0xFFFFFFE0) == 32)) ^ (a3 + a2 + 1759))))();
}

uint64_t sub_22B34EE94(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v12 = (unsigned __int8 *)(v6 + v7 + v11);
  int v13 = ((*v12 ^ a4) << ((5 * (v5 ^ 0x2E)) ^ 0x2C)) | ((v12[1] ^ a4) << 16) | ((v12[2] ^ a4) << 8);
  *(_DWORD *)(v4 + v7 + v11) = (v13 | v12[3] ^ a4) + v10 - 2 * ((v13 | v12[3] ^ a4) & 0x5BFEEC4F ^ (v12[3] ^ a4) & 4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((7 * ((unint64_t)(v7 + 4 + v11) < 0x40)) ^ v5)))(a1, v9 + 16);
}

uint64_t sub_22B34EF30(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v68 = (a5 + a3 + a4) + a62;
  uint64_t v69 = ((_BYTE)a5 + (_BYTE)a3 + (_BYTE)a4) & 0xF;
  unint64_t v70 = v69 + v65 - v68;
  unint64_t v71 = (v69 | v66) - v68 + ((2 * v62) ^ 0x1FEu) - 2563;
  uint64_t v72 = (v69 | v64) - v68;
  BOOL v74 = (unint64_t)(v63 - a62) >= 0x10 && v70 >= 0x10 && v71 >= ((v62 - 1131918382) & 0x4377AFB7 ^ 0x197uLL);
  unint64_t v75 = v72 + 2;
  int v77 = !v74 || v75 < 0x10;
  return (*(uint64_t (**)(void))(v67 + 8 * ((1018 * v77) ^ v62)))();
}

uint64_t sub_22B34EFC8@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v7 = v5 | 0x40;
  uint64_t v8 = v4 + ((v7 + 246) ^ a1);
  long long v9 = *(_OWORD *)(v2 + v8 - 15);
  long long v10 = *(_OWORD *)(v2 + v8 - 31);
  uint64_t v11 = a2 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((59 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v7 - 1465))))(v4);
}

uint64_t sub_22B34F020@<X0>(unsigned int a1@<W8>, int8x16_t a2@<Q1>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int32x4_t a17, int8x16_t a18, int8x16_t a19, int8x16_t a20,int8x16_t a21,int8x16_t a22,int8x16_t a23,int32x4_t a24,int8x16_t a25,int8x16_t a26,int8x16_t a27)
{
  char v32 = (const float *)(v29 + 908);
  int8x16_t v33 = (int8x16_t)vld1q_dup_f32(v32);
  uint64_t v34 = 15 * (a1 ^ 0xD4E);
  a2.i64[0] = *(void *)(v29 + 912);
  a2.i32[2] = *(_DWORD *)(v29 + 4 * (v34 - 3160));
  int8x16_t v35 = vextq_s8(v33, a2, 0xCuLL);
  int32x4_t v36 = (int32x4_t)a2;
  v36.i32[3] = *(_DWORD *)(v29 + 924);
  int8x16_t v37 = vandq_s8(v35, v30);
  int8x16_t v38 = veorq_s8((int8x16_t)v36, a27);
  int8x16_t v39 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v36, v36), a25), (int32x4_t)vandq_s8(v38, a26)), a24), vandq_s8(v38, a23));
  int32x4_t v40 = (int32x4_t)veorq_s8(v39, a22);
  int32x4_t v41 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vsubq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v39, a21), a20), v40), (int32x4_t)vandq_s8((int8x16_t)v40, a21)), v37), a19);
  v40.i32[0] = *(_DWORD *)(v27 + 4 * (*(_DWORD *)(v29 + 912) & 1));
  v40.i32[1] = *(_DWORD *)(v27 + 4 * (*(_DWORD *)(v29 + 916) & 1));
  v40.i32[2] = *(_DWORD *)(v27 + 4 * (*(_DWORD *)(v29 + 4 * (v34 - 3160)) & 1));
  v40.i32[3] = *(_DWORD *)(v27 + 4 * (v36.i8[12] & 1));
  *(int8x16_t *)(v29 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v29, (int8x16_t)v40), v31), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v41, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v41, v41), a18)), a17), 1uLL));
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * a1))(3406);
}

uint64_t sub_22B34F13C@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  BOOL v12 = v10 > 0xC395FA55;
  char v13 = ((2 * v5) ^ 0x84) + a3;
  *(unsigned char *)(a4 + ((2 * v5) ^ 0xD2E58584) + a3) = *(unsigned char *)(v8 + (v13 & 0xF)) ^ *(unsigned char *)(v4
                                                                                          + ((2 * v5) ^ 0xD2E58584)
                                                                                          + a3) ^ *(unsigned char *)(v7 + (v13 & 0xF) + 1) ^ *(unsigned char *)(v6 + (v13 & 0xF) + 1) ^ (13 * (v13 & 0xF));
  if (v12 == a3 + 256871703 < v9) {
    BOOL v12 = a3 + 256871703 < a1;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 * a2) ^ v5)))();
}

uint64_t sub_22B34F1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  if (a30 == 2) {
    return (*(uint64_t (**)(uint64_t))(v31
  }
                                              + 8
                                              * (((LODWORD(STACK[0x2BC]) == 326024231) * (v30 - 48)) ^ (v30 + 900))))(a15);
  if (a30 != 1) {
    JUMPOUT(0x22B34F324);
  }
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * ((63
                                              * (LODWORD(STACK[0x2BC]) != ((v30 - 909525594) & 0x363643FF ^ 0x136EBDFB))) ^ (v30 + 422))))(a15);
}

uint64_t sub_22B34F354(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(*(void *)(a1 + 32) + (v2 - 899400664));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v4 - ((2 * v4) & 0x28) - 1282729708) & 0x1F) == 11) * (4 * (v3 ^ 0xB07) - 3372)) ^ v3)))();
}

uint64_t sub_22B34F3B8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((95 * (v3 == v1 + ((283 * (v2 ^ 0xC2E) - 1947) | 0xC54) - 3190)) ^ v2)))();
}

uint64_t sub_22B34F3FC(uint64_t a1)
{
  int v3 = v1 + 1326;
  int v4 = v1 - 136447410;
  int v5 = *(uint64_t (**)(void))(STACK[0x270]
                           + 8
                           * (int)((((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v3 + 1356)))(a1, 4182676990) != 0)* (((v4 ^ 0xF7DDF3EB) + 881) ^ v4 & 0x8220FC7)) | v3));
  return v5();
}

void sub_22B34F470(uint64_t a1@<X8>, uint64_t a2, int a3, int a4, uint64_t a5)
{
  unsigned int v8 = 1988622253 * ((((2 * &a3) | 0x86C89A0C) - &a3 + 1016836858) ^ 0x357C0DA6);
  a5 = v5;
  a3 = (v6 - 2 * (((((v7 + 207) | 0x520) ^ 0x32F54AE0) + v6) & 0x793D262F ^ v6 & 2) - 1405981195) ^ v8;
  a4 = v8 + v7 + 1157;
  (*(void (**)(int *))(a1 + 8 * (v7 ^ 0x8C5)))(&a3);
  JUMPOUT(0x22B34CC64);
}

uint64_t sub_22B34F518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v27 = ((v24 | 0x202) - 759) | 0x209;
  *(_DWORD *)(v26 - 128) = (v24 | 0x202)
                         + 1503746353 * ((v26 + 65064185 - 2 * ((v26 - 144) & 0x3E0CD89)) ^ 0x25810F3F)
                         + 2536;
  *(void *)(v26 - 144) = v25;
  *(void *)(v26 - 136) = a21;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 112) = a22;
  (*(void (**)(uint64_t))(v22 + 8 * ((v24 | 0x202) + 3215)))(v26 - 144);
  *(_DWORD *)(v26 - 112) = (v24 | 0x202)
                         - 1948972247 * ((2 * ((v26 - 144) & 0x104E75D8) - (v26 - 144) + 1873906209) ^ 0xDA2F7FCF)
                         + 1134;
  *(void *)(v26 - 104) = v25;
  *(void *)(v26 - 128) = a22;
  *(void *)(v26 - 120) = a21;
  *(void *)(v26 - 144) = a16;
  *(void *)(v26 - 136) = v25;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v22 + 8 * ((v24 | 0x202) ^ 0x1352)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((((((v27 + 88) ^ (v23 + v27 - 484149027 < ((v27 + 1733) ^ 0x7FFFF6D1u))) & 1) << 6) & 0x7F | ((((v27 + 600) ^ (v23 + v27 - 484149027 < ((v27 + 1733) ^ 0x7FFFF6D1u))) & 1) << 7)) ^ (v27 + 1524))))(v28);
}

void sub_22B34F65C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B34F6F4(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v31 - 120) = v28 + 9;
  *(_DWORD *)(v31 - 128) = v28 + 8;
  v36.val[1].i64[0] = ((_BYTE)v28 + 1) & 0xF;
  v36.val[1].i64[1] = v28 & 0xF;
  v36.val[2].i64[0] = ((_BYTE)v28 - 1) & 0xF;
  v36.val[2].i64[1] = ((_BYTE)v28 + 14) & 0xF;
  v36.val[3].i64[0] = ((_BYTE)v28 + 13) & 0xF;
  v36.val[3].i64[1] = ((_BYTE)v28 + 12) & 0xF;
  v32.i64[0] = 0xA3A3A3A3A3A3A3A3;
  v32.i64[1] = 0xA3A3A3A3A3A3A3A3;
  v36.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a3 + (_BYTE)a5) & 0xF;
  v36.val[0].i64[1] = ((_BYTE)v28 + 2) & 0xF;
  v33.i64[0] = vqtbl4q_s8(v36, (int8x16_t)xmmword_22B4975D0).u64[0];
  v37.val[0].i64[1] = ((_BYTE)v28 + 10) & 0xF;
  v37.val[1].i64[1] = *(_DWORD *)(v31 - 128) & 0xF;
  v37.val[2].i64[1] = ((_BYTE)v28 + 6) & 0xF;
  v37.val[3].i64[1] = ((_BYTE)v28 + 4) & 0xF;
  v37.val[0].i64[0] = ((_BYTE)v28 + 11) & 0xF;
  v37.val[1].i64[0] = *(_DWORD *)(v31 - 120) & 0xF;
  v37.val[2].i64[0] = ((_BYTE)v28 + 7) & 0xF;
  v37.val[3].i64[0] = ((_BYTE)v28 + 5) & 0xF;
  v33.i64[1] = vqtbl4q_s8(v37, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v34 = vrev64q_s8(vmulq_s8(v33, v32));
  *(int8x16_t *)(v30 - 15 + (a4 + a3 + a5)) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v27 + v36.val[0].i64[0] - 15), *(int8x16_t *)(v24 - 15 + (a4 + a3 + a5))), veorq_s8(*(int8x16_t *)(v36.val[0].i64[0] + v25 - 10), *(int8x16_t *)(v26 + v36.val[0].i64[0] - 15))), vextq_s8(v34, v34, 8uLL));
  return (*(uint64_t (**)(uint64_t))(a24
                                            + 8
                                            * (int)((((v29 & 0xFFFFFFF0) == 16)
                                                   * (((a6 + 1884078447) & 0x8FB33F2B) - 3065)) ^ a6)))(v29);
}

uint64_t sub_22B34F86C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((a4 + a3 - 2096083689 < ((v4 - 3500) | 0x802u) - 2506) * (((v4 - 2651) | 0xC0) ^ 0x516)) ^ v4)))();
}

uint64_t sub_22B34F8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = STACK[0x268];
  unsigned int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v6 + 8 * (v5 - 3121));
  STACK[0x258] = (unint64_t)*(&off_26DE9F480 + (v5 ^ 0xD21)) - 8;
  return v8(a1, 17, 26, a4, a5, v7);
}

uint64_t sub_22B34F8F8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(_DWORD *)(a1 - 0x24B64731C5A6814BLL) == 262083388)
                                     * ((v1 + 68593889) & 0xFBE95DFB ^ 0xCF7)) ^ v1)))();
}

uint64_t sub_22B34F958@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(void *)(v3 + a2) = 0xE1E1E1E1E1E1E1E1;
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a1 ^ 0xFFFFFC35) & v2) - 8 != a2) * ((a1 ^ 0x5B) - 827)) ^ a1 ^ 0x5B)))();
}

uint64_t sub_22B34F9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = STACK[0x278];
  unint64_t v8 = STACK[0x268];
  STACK[0x238] = ((unint64_t)&STACK[0x3A0] ^ 0xFBBFDFEBCDF4733DLL)
               + 0x5EFFF9DCFF1FE0C3
               + ((2 * (void)&STACK[0x3A0]) & 0xF77FBFD79BE8E670);
  LODWORD(STACK[0x228]) = v7 - 1319;
  STACK[0x220] = (int)v7 ^ 0xC5FLL;
  STACK[0x218] = ((int)v7 + 374406956) & 0xFFFFFFFFE9AEF4A5;
  unsigned int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v6 + 8 * (v5 - 3076));
  STACK[0x258] = (unint64_t)*(&off_26DE9F480 + (v5 ^ 0xD21)) - 8;
  return v9(a1, 17, 26, a4, a5, v8);
}

uint64_t sub_22B34F9C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v2 + 8 * (v1 ^ 0xB9E))
                                 - 8
                                 - ((unint64_t)((v1 - 731992686) & 0x2BA149FA)
                                  + a1)
                                 + 498 > 0x1F)
                                * ((v1 - 1670475690) & 0x63916FFE ^ 0xA65)) ^ v1)))();
}

uint64_t sub_22B34FA5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(uint64_t))(v57 + 8 * ((a55 * (v55 == v56)) ^ (a4 - 2991))))(4284480444);
}

uint64_t sub_22B34FA9C@<X0>(unsigned char *a1@<X8>)
{
  *(unsigned char *)(v3 - 144) = *a1;
  *(unsigned char *)(v3 - 143) = a1[1];
  *(unsigned char *)(v3 - 142) = a1[2];
  *(unsigned char *)(v3 - 141) = a1[3];
  *(unsigned char *)(v3 - 140) = a1[4];
  *(unsigned char *)(v3 - 139) = a1[5];
  *(unsigned char *)(v3 - 138) = a1[6];
  *(unsigned char *)(v3 - 137) = a1[7];
  *(unsigned char *)(v3 - 136) = a1[8];
  *(unsigned char *)(v3 - 135) = a1[9];
  *(unsigned char *)(v3 - 134) = a1[10];
  *(unsigned char *)(v3 - 133) = a1[11];
  *(unsigned char *)(v3 - 132) = a1[12];
  *(unsigned char *)(v3 - 131) = a1[13];
  *(unsigned char *)(v3 - 130) = a1[14];
  *(unsigned char *)(v3 - 129) = a1[15];
  uint64_t v4 = *((void *)a1 + 1);
  *(void *)(v3 - 160) = *(void *)a1;
  *(void *)(v3 - 152) = v4;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((11 * ((v1 + 2042734357) & 0x863E58F7 ^ 0x815)) ^ 0xCF6) - 2843) * (a1 != 0)) ^ (11 * ((v1 + 2042734357) & 0x863E58F7 ^ 0x815)))))();
}

uint64_t sub_22B34FB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v17 = a8 + v13 + ((v14 + 992) | 0x11u);
  *(unsigned char *)(*(void *)(v16 - 200) + v17) = *(unsigned char *)(v11 + (v17 & 0xF)) ^ *(unsigned char *)(v8 + v17) ^ *(unsigned char *)(v9 + (v17 & 0xF)) ^ *(unsigned char *)((v17 & 0xF) + v10 + 1) ^ (103 * (v17 & 0xF));
  return (*(uint64_t (**)(void))(v15 + 8 * (((2 * (a8 - 1 != v12)) | (16 * (a8 - 1 != v12))) ^ (v14 - 603))))();
}

uint64_t sub_22B34FC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  int v23 = 1948972247 * ((((v22 - 168) | 0x8F82B7DA) - ((v22 - 168) & 0x8F82B7DA)) ^ 0x3A1C4234);
  STACK[0x2E0] = a20;
  *(_DWORD *)(v22 - 168) = v23 + 1460438876;
  *(_DWORD *)(v22 - 152) = v20 - v23 + 504;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0xFD4)))(v22 - 168);
  return a16(v24);
}

uint64_t sub_22B34FC88@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v8 + 4 * a1) = a1 + ((v3 + v1 + v4) ^ ((v3 + v1 + v4) >> 30)) * v5;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 >= v2) | (8 * (a1 >= v2))) ^ v6)))();
}

uint64_t sub_22B34FC9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unsigned int a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  unsigned int v51 = v50[396] ^ ((*v50 & (v48 + 2147480907) | v50[623] & 0x80000000) >> 1);
  v50[623] = (v51 + (((v48 - 1761346179) | 0x8897105) ^ 0xB827C551) - (a4 & (2 * v51))) ^ *((_DWORD *)&a48 + (*v50 & 1));
  return (*(uint64_t (**)(void))(v49 + 8 * ((505 * (a44 > 0x26F)) ^ v48)))();
}

uint64_t sub_22B34FD38(char a1, char a2)
{
  char v7 = a1 + a2 + v4;
  *(unsigned char *)(v2 + v6 - 1) = (v7 + ((v3 + 53) | 0x17)) * ((v7 + 14) ^ 0xBA);
  *(unsigned char *)(v2 + v6 - 2) = ((v7 + 15) ^ 0xBA) * (v7 + 32);
  return (*(uint64_t (**)(void))(v5 + 8 * ((2905 * ((v2 & 0xFFFFFFFE) == 2)) ^ v3)))();
}

uint64_t sub_22B34FDC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v4 + 8 * ((a4 - 3267) | (a4 - 2649))))(a1, 3484990677, (a4 - 3135));
}

uint64_t sub_22B34FE14@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v7 = a5 < 0x1459A573;
  if (v7 == (a1 - 948463667) < 0x1459A573) {
    BOOL v7 = a1 - 948463667 < a5;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((113 * !v7) ^ v5)))();
}

uint64_t sub_22B34FEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unsigned char *a62)
{
  *(unsigned char *)(v64 - 256) = *a62;
  *(unsigned char *)(v64 - 255) = a62[1];
  *(unsigned char *)(v64 - 254) = a62[2];
  *(unsigned char *)(v64 - 253) = a62[3];
  *(unsigned char *)(v64 - 252) = a62[4];
  *(unsigned char *)(v64 - 251) = a62[5];
  *(unsigned char *)(v64 - 250) = a62[6];
  *(unsigned char *)(v64 - 249) = a62[7];
  *(unsigned char *)(v64 - 248) = a62[8];
  *(unsigned char *)(v64 - 247) = a62[9];
  *(unsigned char *)(v64 - 246) = a62[10];
  *(unsigned char *)(v64 - 245) = a62[11];
  *(unsigned char *)(v64 - 244) = a62[12];
  *(unsigned char *)(v64 - 243) = a62[13];
  *(unsigned char *)(v64 - 242) = a62[14];
  *(unsigned char *)(v64 - 241) = a62[15];
  if (a62) {
    BOOL v65 = v64 == 256;
  }
  else {
    BOOL v65 = 1;
  }
  char v67 = v65 || *(void *)(a11 + 32) == 0x4AAEAB593A0D77;
  return (*(uint64_t (**)(uint64_t))(v63
                                            + 8
                                            * (int)(((((5 * ((v62 + 84) & 0xFB ^ 0x83)) ^ v67) & 1)
                                                   * ((((v62 + 606791252) & 0xDBD51FFB) - 54) ^ 0xFB8)) ^ (v62 + 606791252) & 0xDBD51FFB)))(v64 - 256);
}

uint64_t sub_22B34FF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * (int)(((v5 >= (a5 ^ 0x94Bu)) * ((a5 + 1039369844) & 0xC20C73FF ^ 0x3CF)) ^ a5)))();
}

uint64_t sub_22B34FF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((53 * (a10 - v11 + ((v10 + 1119) ^ 0xDE5113B086A5184FLL) > 0xF)) ^ (v10 + 1119))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_22B350090@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v6 - 168) = ((*(unsigned char *)(v4 + 6) ^ 0xDD) + ((*(unsigned __int8 *)(v4 + 6) << (v1 + a1 + 88)) & 0xBA) + 104) ^ (((v6 + 88) | 0x5A) - ((v6 + 88) & 0x5A)) ^ 0x33;
  *(_DWORD *)(v6 - 160) = v2
                        - 1292559617 * ((((v6 - 168) | 0x28BAC15A) - ((v6 - 168) & 0x28BAC15A)) ^ 0x8FE9A933)
                        + 1408030120;
  *(void *)(v6 - 152) = v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 + 1139)))(v6 - 168);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (((*(_DWORD *)(v6 - 164) == 669732671) * (v3 ^ 0x18D)) ^ v2)))(v7);
}

uint64_t sub_22B35016C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, _DWORD *a6)
{
  *(unsigned char *)(*(void *)(v8 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A67D07) = 0;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*a6 == a5 + 398 * (v6 ^ 0x8AE) + 1670542841)
                                * ((a5 + 398 * (v6 ^ 0x8AE) - 2786) ^ (a5 - 206))) ^ (398 * (v6 ^ 0x8AE)))))();
}

uint64_t sub_22B3501E4()
{
  LODWORD(STACK[0x36C]) = v0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((23 * (v2 ^ 0xC4A)) ^ 0x234) * (v1 ^ 1)) ^ (v2 + 782))))();
}

uint64_t sub_22B350220(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  unsigned int v44 = *(_DWORD *)(v42 + ((v40 + a5) & 0xFFFFFFFC));
  *(unsigned char *)(a40 + (v40 + a5 + 1)) = (BYTE2(v44) ^ 0x95) - ((v44 >> 15) & 0x54) + 42;
  *(unsigned char *)(a40 + (v40 + a5)) = ((a2 + 109) ^ HIBYTE(v44) ^ 0x70) - ((v44 >> 23) & 0x54) + 42;
  *(unsigned char *)(a40 + (v40 + a5 + 2)) = (BYTE1(v44) ^ 0x67) + (~(2 * (BYTE1(v44) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a40 + (v40 + a5 + 3)) = v44 ^ 0x13;
  unsigned int v45 = *v41 - 1686029816;
  if ((v40 + 1830273822) < 0xAEEFF62F != v45 < 0xAEEFF62F) {
    BOOL v46 = v45 < 0xAEEFF62F;
  }
  else {
    BOOL v46 = v40 + 1830273822 < v45;
  }
  return (*(uint64_t (**)(void))(v43 + 8 * ((4089 * !v46) ^ a2)))();
}

uint64_t sub_22B35030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1994 * (*(void *)(a7 + 56) != 0)) ^ (v7 - 2166))))();
}

uint64_t sub_22B350344()
{
  unint64_t v4 = v0 + v2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v4 - v0 + 1047474306 < ((v1 - 3488) ^ 0x112uLL))
                                * (7 * (v1 ^ 0xEA7) + 239)) ^ v1)))();
}

uint64_t sub_22B3503A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v13 = (a5 - 1045020957);
  *(unsigned char *)(v12 + v13) ^= *(unsigned char *)(v8 + (v13 & 0xF)) ^ *(unsigned char *)(v9 + (v13 & 0xF)) ^ *(unsigned char *)((v13 & 0xF) + v10 + 3) ^ (-127 * (v13 & 0xF));
  return (*(uint64_t (**)(void))(v11 + 8 * ((1852 * (a5 - 1 == v7)) ^ (a7 + 2214))))();
}

uint64_t sub_22B35040C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((23 * (v7 - *(void *)(a7 + 192) < ((v8 - 693) ^ 0x9BEuLL))) ^ (v8 - 714))))();
}

uint64_t sub_22B350454@<X0>(uint64_t a1@<X8>)
{
  int v6 = (char *)(v5 + 4);
  char v7 = *v6;
  *int v6 = v6[3];
  v6[3] = v7;
  char v8 = v6[1];
  v6[1] = v6[2];
  void v6[2] = v8;
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 - 1 != ((v1 + 543) ^ v2)) * v3) ^ v1)))();
}

uint64_t sub_22B350460(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(double *)(v5 + 8 + (((v4 + 818) | v7) ^ (unint64_t)(a4 + 1914))) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 == 8) * v8) ^ v4)))();
}

uint64_t sub_22B35046C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14, unint64_t *a15)
{
  unsigned int v19 = 1948972247 * ((2 * (&a11 & 0x1B047F80) - &a11 - 453279617) ^ 0x51657591);
  a12 = &STACK[0x516B96A03337B1E4];
  a13 = v17;
  a15 = &STACK[0x71ED34104698221A];
  a11 = (v18 + 1687) ^ v19;
  a14 = 1417288799 - v19;
  uint64_t v20 = (*(uint64_t (**)(int *))(v16 + 8 * (v18 ^ 0xECE)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((3904
                                              * (*(_DWORD *)(v17 - 0x19157D3ABD2659C6) == v15
                                                                                          + ((v18 + 406388089) & 0xE7C70DCE)
                                                                                          - 3206)) ^ v18)))(v20);
}

uint64_t sub_22B35056C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21)
{
  unint64_t v25 = v21 + 0x21AEEC4F795AF97FLL;
  int v26 = a1 ^ 0x660;
  int v27 = a1 ^ 0x523;
  *(_DWORD *)(v24 - 144) = ((a1 ^ 0x660) + 1935320144) ^ (1328090399
                                                        * ((v24 - 1104346882 - 2 * ((v24 - 152) & 0xBE2D0196)) ^ 0x41FE65AC));
  STACK[0xD78] = v21 + 0x21AEEC4F795AF97FLL;
  (*(void (**)(uint64_t))(v22 + 8 * (a1 ^ 0x660 | 0xEC8)))(v24 - 152);
  int v28 = v26 + 1417;
  int v29 = 1503746353 * ((((2 * (v24 - 152)) | 0xAF0CF500) - (v24 - 152) + 679052672) ^ 0xF1E7B836);
  STACK[0xD80] = *(void *)(v23 + 8 * (v26 ^ 0xB4)) - 12;
  *(_DWORD *)(v24 - 128) = v26 + 1417 - v29;
  *(_DWORD *)(v24 - 152) = v29 + 1331781556;
  STACK[0xD88] = v25;
  uint64_t v30 = 8 * (v26 + 3793);
  (*(void (**)(uint64_t))(v22 + v30))(v24 - 152);
  int v31 = 1503746353 * ((v24 - 1353552789 - 2 * ((v24 - 152) & 0xAF526D03)) ^ 0x8933AFB5);
  STACK[0xD88] = v25;
  *(_DWORD *)(v24 - 128) = v28 - v31;
  *(_DWORD *)(v24 - 152) = v31 + 1331781541;
  STACK[0xD80] = a21;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v22 + v30))(v24 - 152);
  STACK[0xCF0] = STACK[0xC98];
  LODWORD(STACK[0xCF8]) = STACK[0xCA0];
  STACK[0xCFC] = STACK[0xCA4];
  LODWORD(STACK[0xD04]) = STACK[0xCAC];
  *(_OWORD *)&STACK[0xD08] = *(_OWORD *)&STACK[0xCB0];
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((3943 * (((v27 - 323) ^ 0x110) == 64)) ^ v27)))(v32);
}

uint64_t sub_22B350788(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((a3 + 8 == v5 + 32) * ((((a4 ^ 0xB1D) + 1879951602) & 0x8FF238BF) + 1604)) ^ a4 ^ 0xB1D)))();
}

uint64_t sub_22B3507D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v5
                                                                      + 8 * ((((16 * v3) ^ 0x828B) * (v4 == 0)) ^ v3)))(a1, 4294924396, a3, v3 ^ 0x8D5u);
}

uint64_t sub_22B350808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(unint64_t *)((char *)&STACK[0x225] + v29 + v28 + a7 - v32 + (v30 ^ 0x439 ^ (v34 + 3141))) = *(void *)(a27 - 7 + v29 + v28 + a7 - v32 + (v30 ^ 0x439 ^ (v34 + 3141)));
  return (*(uint64_t (**)(void, unint64_t *))(v33
                                                               + 8 * ((2257 * (v32 - (v27 & 0xFFFFFFF8) == -8)) | v30)))(v31 - (v27 & 0xFFFFFFF8), &STACK[0x225]);
}

uint64_t sub_22B350870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v9 = v6 > 0x126DB95F;
  BOOL v10 = v7 + 1299558116 < (int)(v6 + 1838301195 + 5 * (v5 ^ 0x6BA));
  if (v9 != v7 + 1299558116 < -309180768) {
    BOOL v10 = v6 > 0x126DB95F;
  }
  uint64_t v11 = *(uint64_t (**)(void, BOOL, uint64_t, uint64_t, uint64_t))(v8 + 8 * (v5 ^ (16 * !v10)));
  return v11(v11, v9, a3, a4, a5);
}

uint64_t sub_22B3508E4@<X0>(uint64_t a1@<X8>)
{
  int v4 = v1 ^ 0xAA;
  int v5 = ((v1 ^ 0xAA) - 154) ^ 0x3F1;
  int v6 = *(_DWORD *)(v3 - 0x281D12643933BF1FLL);
  int v7 = v6 - 920561905;
  if (v6 - 920561905 < 0) {
    int v7 = 920561905 - v6;
  }
  *(_DWORD *)(v2 - 0x281D12643933BF1FLL) = v6;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v7 ^ 0xE5EFFEFE) + 2132260760 + ((2 * v7) & 0xCBDFFDFC) == v5 + 1695003869) ^ v4)))();
}

uint64_t sub_22B350978()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == v4) ^ (19 * (v0 ^ 0xF3) + 1)) & 1)
                                * ((v0 - 1225393060) & 0x599FBF77 ^ (v3 + 590))) ^ v0)))();
}

uint64_t sub_22B3509E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61)
{
  return (*(uint64_t (**)(void))(v61 + 8 * (((((a4 | 0x200) ^ 0xC03) - 2231) * (a61 == a59)) ^ (a4 | 0x200))))();
}

uint64_t sub_22B350A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,int a22,unsigned int a23,unint64_t *a24,uint64_t a25)
{
  unsigned int v28 = 1328090399 * ((((2 * &a20) | 0x5E4AD426) - &a20 - 790981139) ^ 0xD0F60E29);
  a20 = (v26 - 1653802731) ^ v28;
  a21 = -1409651963 - v28;
  a24 = &STACK[0x25ABA05A3795B132];
  a25 = a17;
  a23 = v28 ^ 0x881FFD3C;
  uint64_t v29 = (*(uint64_t (**)(int *))(v27 + 8 * (v26 + 2238)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((a22 != v25) * (((v26 - 838) | 0x242) + ((v26 - 75) ^ 0xFFFFFD00))) ^ (v26 - 75))))(v29);
}

uint64_t sub_22B350B04(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((21 * (v3 >= ((((a3 + 1504249126) & 0xA656F77F) + 1288) ^ 0xC59))) ^ a3)))();
}

uint64_t sub_22B350B4C(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a1 + v2 - 2080059327 < (v1 - 2269)) * (((v1 - 219) | 0x2C1) - 2745)) | v1)))();
}

uint64_t sub_22B350BA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a4 ^ 0xC42) + 633) * (v4 == v5)) ^ (a4 - 2977))))();
}

uint64_t sub_22B350BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * ((((*(_DWORD *)(v12 - 160) ^ 0x948)
                                               + (*(_DWORD *)(v12 - 160) ^ 0x8BB)
                                               - 6401)
                                              * (*(_DWORD *)(v12 - 140) == *(_DWORD *)(v12 - 152))) ^ *(_DWORD *)(v12 - 160))))(a11);
}

uint64_t sub_22B350C18@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 == a1) ^ (v1 + 22)) & 1)
                                     * ((v1 + 1444886380) & 0xA9E0C7C7 ^ 0x7F4)) ^ v1)))();
}

uint64_t sub_22B350C68(int8x16_t a1, int8x16_t a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v76 = v74 + 599;
  *(int8x16_t *)(a10 - 16) = vaddq_s8(vaddq_s8(a4, a2), vmvnq_s8(vandq_s8(vaddq_s8(a4, a4), a1)));
  int v130 = v74 + 3482;
  uint64_t v125 = *(void *)(v75 + 8 * v74);
  BOOL v129 = a74 != 55;
  unsigned int v128 = a73 ^ (v74 + 27);
  unsigned int v77 = a74 ^ 0x36;
  unsigned __int8 v78 = *(unsigned char *)(a10 - 12);
  unsigned __int8 v79 = *(unsigned char *)(a10 - 8);
  unsigned __int8 v80 = *(unsigned char *)(a10 - 4);
  unsigned __int8 v81 = *(unsigned char *)(a10 - 3);
  unsigned __int8 v82 = *(unsigned char *)(a10 - 7);
  unsigned __int8 v83 = *(unsigned char *)(a10 - 11);
  unsigned __int8 v84 = *(unsigned char *)(a10 - 15);
  uint64_t v126 = 3 % v77;
  uint64_t v127 = 2 % v77;
  unsigned __int8 v85 = *(unsigned char *)(a10 - 14);
  unsigned __int8 v86 = *(unsigned char *)(a10 - 6);
  unsigned __int8 v87 = *(unsigned char *)(a10 - 10);
  unsigned __int8 v88 = *(unsigned char *)(a10 - 2);
  unsigned __int8 v89 = *(unsigned char *)(a10 - 13);
  LOBYTE(v77) = *(unsigned char *)(a10 - 9);
  unsigned __int8 v90 = *(unsigned char *)(a10 - 5);
  unsigned __int8 v91 = *(unsigned char *)(a10 - 1);
  uint64_t v92 = *(a15 - 14);
  int v93 = -1929284786 - ((v76 + 536870542) & 0x1A02E580);
  unsigned __int8 v94 = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172CE)) ^ *(unsigned char *)(*(a15 - 15) + (*(unsigned __int8 *)(a10 - 16) ^ a12));
  *(unsigned char *)(a10 - 16) = v94 ^ a12;
  uint64_t v95 = *(a15 - 10);
  unsigned __int8 v96 = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172CA)) ^ *(unsigned char *)(*(a15 - 11) + (v78 ^ a12));
  *(unsigned char *)(a10 - 12) = v96 ^ a12;
  uint64_t v97 = *(a15 - 6);
  unsigned __int8 v98 = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172C6)) ^ *(unsigned char *)(*(a15 - 7) + (v79 ^ a12));
  *(unsigned char *)(a10 - 8) = v98 ^ a12;
  unint64_t v99 = v80 ^ a12;
  uint64_t v100 = *(a15 - 2);
  LOBYTE(v99) = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172C2)) ^ *(unsigned char *)(*(a15 - 3) + v99);
  *(unsigned char *)(a10 - 4) = v99 ^ a12;
  LOBYTE(v100) = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172CD)) ^ *(unsigned char *)(v100 + (v82 ^ a12));
  *(unsigned char *)(a10 - 3) = v100 ^ a12;
  unsigned __int8 v101 = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172C9)) ^ *(unsigned char *)(v97 + (v83 ^ a12));
  *(unsigned char *)(a10 - 7) = v101 ^ a12;
  unsigned __int8 v102 = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172C5)) ^ *(unsigned char *)(v95 + (v84 ^ a12));
  *(unsigned char *)(a10 - 11) = v102 ^ a12;
  unsigned __int8 v103 = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172CF)) ^ *(unsigned char *)(v92 + (v81 ^ a12));
  *(unsigned char *)(a10 - 15) = v103 ^ a12;
  uint64_t v104 = *(a15 - 12);
  LOBYTE(v97) = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172CC)) ^ *(unsigned char *)(*(a15 - 13) + (v86 ^ a12));
  *(unsigned char *)(a10 - 14) = v97 ^ a12;
  unint64_t v105 = v85 ^ a12;
  uint64_t v106 = *(a15 - 4);
  unsigned __int8 v107 = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172C4)) ^ *(unsigned char *)(*(a15 - 5) + v105);
  *(unsigned char *)(a10 - 6) = v107 ^ a12;
  unint64_t v108 = v88 ^ a12;
  uint64_t v109 = *(a15 - 8);
  LOBYTE(v92) = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172C8)) ^ *(unsigned char *)(*(a15 - 9) + v108);
  *(unsigned char *)(a10 - 10) = v92 ^ a12;
  LOBYTE(v108) = *(unsigned char *)(a33 + (int)(v93 ^ 0x8D0172C0)) ^ *(unsigned char *)(*(a15 - 1) + (v87 ^ a12));
  *(unsigned char *)(a10 - 2) = v108 ^ a12;
  LOBYTE(v77) = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172C3)) ^ *(unsigned char *)(v104 + (v77 ^ a12));
  *(unsigned char *)(a10 - 13) = v77 ^ a12;
  unsigned __int8 v110 = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172C7)) ^ *(unsigned char *)(v109 + (v90 ^ a12));
  *(unsigned char *)(a10 - 9) = v110 ^ a12;
  unsigned __int8 v111 = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172CB)) ^ *(unsigned char *)(v106 + (v91 ^ a12));
  *(unsigned char *)(a10 - 5) = v111 ^ a12;
  unsigned __int8 v112 = *(unsigned char *)(a33 + (int)(v93 & 0xFFFFFFF0 ^ 0x8D0172CF)) ^ *(unsigned char *)(*a15 + (v89 ^ a12));
  *(unsigned char *)(a10 - 1) = v112 ^ a12;
  int v113 = &a72 + 128 * (unint64_t)(8 % v128);
  unsigned int v114 = v113 + 1176;
  unsigned int v115 = *(_DWORD *)(*((void *)v113 + 148) + 4 * v103) ^ *(_DWORD *)(*((void *)v113 + 147) + 4 * v94) ^ *(_DWORD *)(*((void *)v113 + 149) + 4 * v97) ^ *(_DWORD *)(*((void *)v113 + 150) + 4 * v77);
  *(unsigned char *)(a10 - 13) = HIBYTE(v115) - ((v115 >> 23) & 0x54) + 42;
  uint64_t v116 = HIWORD(v115) - ((v115 >> 15) & 0x54) + 42;
  *(unsigned char *)(a10 - 14) = BYTE2(v115) - ((v115 >> 15) & 0x54) + 42;
  *(unsigned char *)(a10 - 15) = BYTE1(v115) - ((v115 >> 7) & 0x54) + 42;
  uint64_t v117 = v115 ^ a12;
  *(unsigned char *)(a10 - 16) = v115 ^ a12;
  unsigned int v118 = &v113[32 * v129 + 1176];
  unsigned int v119 = *(_DWORD *)(*((void *)v118 + 1) + 4 * v102) ^ *(_DWORD *)(*(void *)v118 + 4 * v96) ^ *(_DWORD *)(*((void *)v118 + 2) + 4 * v92) ^ *(_DWORD *)(*((void *)v118 + 3) + 4 * v110);
  *(unsigned char *)(a10 - 9) = HIBYTE(v119) - ((v119 >> 23) & 0x54) + 42;
  *(unsigned char *)(a10 - 10) = BYTE2(v119) - ((v119 >> 15) & 0x54) + 42;
  *(unsigned char *)(a10 - 11) = BYTE1(v119) - ((v119 >> 7) & 0x54) + 42;
  *(unsigned char *)(a10 - 12) = v119 ^ a12;
  uint64_t v120 = (uint64_t)&v113[32 * v127 + 1176];
  LODWORD(v120) = *(_DWORD *)(*(void *)(v120 + 8) + 4 * v101) ^ *(_DWORD *)(*(void *)v120 + 4 * v98) ^ *(_DWORD *)(*(void *)(v120 + 16) + 4 * v107) ^ *(_DWORD *)(*(void *)(v120 + 24) + 4 * v111);
  *(unsigned char *)(a10 - 5) = BYTE3(v120) - ((v120 >> 23) & 0x54) + 42;
  *(unsigned char *)(a10 - 6) = BYTE2(v120) - ((v120 >> 15) & 0x54) + 42;
  *(unsigned char *)(a10 - 7) = BYTE1(v120) - ((v120 >> 7) & 0x54) + 42;
  *(unsigned char *)(a10 - 8) = v120 ^ a12;
  unsigned int v121 = &v114[4 * v126];
  uint64_t v122 = *(_DWORD *)(v121[1] + 4 * v100) ^ *(_DWORD *)(*v121 + 4 * v99) ^ (*(_DWORD *)(v121[2] + 4 * v108) ^ *(_DWORD *)(v121[3] + 4 * v112));
  *(unsigned char *)(a10 - 1) = (~(v122 >> 23) | 0xAB) + BYTE3(v122) + 43;
  *(unsigned char *)(a10 - 2) = (~(v122 >> 15) | 0xAB) + BYTE2(v122) + 43;
  *(unsigned char *)(a10 - 3) = BYTE1(v122) - ((v122 >> 7) & 0x54) + 42;
  *(unsigned char *)(a10 - 4) = v122 ^ a12;
  unsigned int v123 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, void, unint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a27 + 8 * (v130 ^ 0x7D));
  return v123(WORD1(v120) - ((v120 >> 15) & 0x54) + 42, v116, v117, v122, (~(v122 >> 23) | 0xFFFFFFAB) + BYTE3(v122) + 43, a10, v123, a12, a13, a14, a15, a16, a17, a10 - 16, v125, a20, a21, a22, a23,
           a24,
           a25,
           a26);
}

uint64_t sub_22B350C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v5
                                                                      + 8
                                                                      * (((v6 != 0) * ((21 * (a5 ^ 0x831)) ^ 0xC99)) ^ a5 ^ 0xA1)))(a1, a2, a3, 94 * (a5 ^ 0x8A4u));
}

uint64_t sub_22B350CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8 * (((v42 != 0xB70) * (((a9 - 1031444423) & 0x3D7A95EB) - 1295)) ^ (a9 - 475))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_22B350DB0()
{
  *(_DWORD *)(v6 - 120) = v4 + ((~((v6 - 136) | 0xF64A0448) + ((v6 - 136) & 0xF64A0448)) ^ 0xE3A2CC43) * v2 - 330;
  *(void *)(v6 - 136) = v5;
  *(void *)(v6 - 128) = v0;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 2435)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((((v4 - 1127) ^ 0x3F ^ (v3 == 1672242251)) & 1) == 0)
                                              * (((v4 - 1127) | 0xC) - 456)) ^ v4)))(v7);
}

uint64_t sub_22B350E50(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((((6 * (v3 ^ 0x890)) ^ 0xDD8) + 18 * (v3 ^ 0x9FA)) * (v1 == v2)) ^ v3)))(a1, 42);
}

uint64_t sub_22B350EA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_22B33C280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_22B350EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,int a46)
{
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * (LODWORD(STACK[0x20C]) ^ (22
                                                        * (((2 * (a46 - ((2 * a44) & 0xFBD0161E) - 213588559)) & 0xB8FFEFBE ^ 0xB8D0061E)
                                                         + ((a46 - ((2 * a44) & 0xFBD0161E) - 213588559) ^ 0x2197FCD0)
                                                         + 2072640204 == 1477046955)))))();
}

void sub_22B350F7C()
{
  *(_DWORD *)(v1 - 128) = v0 + 11;
  JUMPOUT(0x22B35107CLL);
}

uint64_t sub_22B3510FC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((26
                                * ((v0 ^ 0x23E ^ (2 * (v1 ^ 0xB90u) - 2766)) < ((4 * (v1 ^ 0xB90)) ^ 0x1C86u) - 1346)) ^ (2 * (v1 ^ 0xB90)))))();
}

uint64_t sub_22B351148()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((7
                                * (((LODWORD(STACK[0x374]) - 1801476204) ^ 0xBEF13297AF3DFDFELL)
                                 + 0x410ECD68781874BELL
                                 + ((2 * (LODWORD(STACK[0x374]) - 1801476204)) & 0x15E7BFBFCLL) != 659976892)) ^ (v0 - 2136))))();
}

uint64_t sub_22B3511D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,unint64_t a40)
{
  int v44 = 1866394843 * ((((v42 - 192) | 0xE9316293) - ((v42 - 192) & 0xE9316293)) ^ 0x3265567);
  unint64_t v45 = STACK[0x260];
  STACK[0x1958] = 0;
  STACK[0x1960] = v45;
  STACK[0x1950] = a40;
  STACK[0x1940] = a39;
  STACK[0x1948] = a35;
  *(_DWORD *)(v42 - 152) = (v40 + 1951) ^ v44;
  *(_DWORD *)(v42 - 144) = v44 ^ 0x6B17B5D5;
  STACK[0x1978] = 0;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v40 ^ 0x119C)))(v42 - 192);
  unint64_t v47 = STACK[0x270];
  int v48 = *(_DWORD *)(v42 - 148);
  LODWORD(STACK[0x534]) = v48;
  return (*(uint64_t (**)(uint64_t))(v47
                                            + 8
                                            * (((v48 == v41) * ((v40 + 2871) ^ 0x934 ^ ((v40 - 204) | 0xC03))) ^ v40)))(v46);
}

uint64_t sub_22B3512C0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v5 ^ 0xFA8;
  uint64_t v13 = 4 * (v9 + v6);
  int v14 = v8
      - 334258391
      + v12
      - 703
      + (*(_DWORD *)(*(void *)(a3 - 0x281D12643933BF1BLL) + v13 - 0x54EEBA8C0E75CADCLL) ^ v10)
      + (*(_DWORD *)(*(void *)(a4 - 0x281D12643933BF1BLL) + v13 - 0x54EEBA8C0E75CADCLL) ^ v10)
      - 2027;
  *(_DWORD *)(*(void *)(a1 - 0x281D12643933BF1BLL) + v13 - 0x54EEBA8C0E75CADCLL) = v14 + v10 - (v7 & (2 * v14));
  BOOL v15 = v4 > 0x7D6335B2;
  if (v15 == v9 - 494914926 < -2103653811) {
    BOOL v15 = v9 - 494914926 < (int)(v4 + 43829837);
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v15 | (16 * v15)) ^ v12)))();
}

void sub_22B351404()
{
}

uint64_t sub_22B351434()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8 * ((1946 * (v2 > 5 * ((v0 | 0x802) ^ 0x94D) - 2755)) ^ (v0 | 0x802))))(963274103);
}

uint64_t sub_22B3514A8@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  v15.val[1].i64[0] = ((_BYTE)v8 + 2) & 0xF;
  v15.val[1].i64[1] = ((_BYTE)v8 + 1) & 0xF;
  v15.val[2].i64[0] = v8 & 0xF;
  v15.val[2].i64[1] = ((_BYTE)v8 - 1) & 0xF;
  v15.val[3].i64[0] = ((_BYTE)v8 + 14) & 0xF;
  v15.val[3].i64[1] = ((_BYTE)v8 + 13) & 0xF;
  v11.i64[0] = 0x8181818181818181;
  v11.i64[1] = 0x8181818181818181;
  v15.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a4) & 0xF;
  v15.val[0].i64[1] = ((_BYTE)v8 + 3) & 0xF;
  v12.i64[0] = vqtbl4q_s8(v15, (int8x16_t)xmmword_22B4975D0).u64[0];
  v16.val[0].i64[1] = ((_BYTE)v8 + 11) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)v8 + 9) & 0xF;
  v16.val[2].i64[1] = (v8 + 7) & 0xF;
  v16.val[3].i64[1] = ((_BYTE)v8 + 5) & 0xF;
  v16.val[0].i64[0] = ((_BYTE)v8 + 12) & 0xF;
  v16.val[1].i64[0] = ((_BYTE)v8 + 10) & 0xF;
  v16.val[2].i64[0] = (v8 + 8) & 0xF;
  v16.val[3].i64[0] = (v8 + 6) & 0xF;
  v12.i64[1] = vqtbl4q_s8(v16, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v13 = vrev64q_s8(vmulq_s8(v12, v11));
  *(int8x16_t *)(a5 - 15 + (a2 + a1 + a4)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + v15.val[0].i64[0] - 15), *(int8x16_t *)(a5 - 15 + (a2 + a1 + a4))), *(int8x16_t *)(v15.val[0].i64[0] + v6 - 13)), *(int8x16_t *)(a3 - 1395 + v15.val[0].i64[0] + v7 - 982)), vextq_s8(v13, v13, 8uLL));
  return (*(uint64_t (**)(void))(v10 + 8 * (((8 * ((v9 & 0xFFFFFFF0) == 16)) | (((v9 & 0xFFFFFFF0) == 16) << 10)) ^ a3)))();
}

uint64_t sub_22B3515FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v25 = (v22 - 1966396118) & 0x7534C67B;
  *(void *)(v24 - 104) = a20;
  *(void *)(v24 - 128) = a22;
  *(void *)(v24 - 120) = a21;
  *(_DWORD *)(v24 - 112) = v22
                         - 2924
                         - 1948972247
                         * ((1079939195 - ((v24 - 144) | 0x405E907B) + ((v24 - 144) | 0xBFA16F84)) ^ 0xA3F9A6A)
                         + 1134;
  *(void *)(v24 - 144) = a12;
  *(void *)(v24 - 136) = a20;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 + 322)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((((((v25 + 88) ^ (a18 - 484148408 < ((v25 + 1733) ^ 0x7FFFF6D1u))) & 1) << 6) & 0x7F | ((((v25 + 600) ^ (a18 - 484148408 < ((v25 + 1733) ^ 0x7FFFF6D1u))) & 1) << 7)) ^ (v25 + 1524))))(v26);
}

uint64_t sub_22B3516EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  *(unsigned char *)(a1 + v11 - 1) = ((v9 + v8 + v7 - 102) ^ v10) * (v9 + v8 + v7 - 85);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12
                                                                                         + 8
                                                                                         * (((4 * (v11 == 1)) | (8 * (v11 == 1))) ^ a7)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22B3516F8@<X0>(unsigned int a1@<W8>)
{
  *(unsigned char *)(v3 + v1 + v2) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((11 * (v1 + 1 + v2 < (a1 ^ 0xA32uLL))) ^ a1)))();
}

uint64_t sub_22B351700@<X0>(_OWORD *a1@<X8>)
{
  *a1 = 0u;
  a1[1] = 0u;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 & 0xFFFFFFE0) == 32) * ((v2 - 575) ^ 0x194)) ^ (v2 - 1471))))();
}

uint64_t sub_22B351744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = v3[5];
  char v10 = v3[6];
  int v11 = 1503746353 * ((~(v8 - 144) & 0xA96E34D9 | (v8 - 144) & 0x5691CB26) ^ 0x8F0FF66F);
  *(unsigned char *)(v8 - 115) = v3[4]
                       - 49 * ((~(v8 + 112) & 0xD9 | (v8 + 112) & 0x26) ^ 0x6F)
                       + (v6 & 0x7F ^ 0x9C)
                       - ((2 * v3[4]) & 0xE7);
  *(unsigned char *)(v8 - 116) = (v9 ^ 0xFB) - 49 * ((~(v8 + 112) & 0xD9 | (v8 + 112) & 0x26) ^ 0x6F) + ((2 * v9) & 0xF7) + 86;
  *(_DWORD *)(v8 - 144) = (v7 ^ 0x7732260E) - v11;
  *(unsigned char *)(v8 - 140) = v10 - 49 * ((~(v8 + 112) & 0xD9 | (v8 + 112) & 0x26) ^ 0x6F) + (~(2 * v10 + 2) | 0x1F) + 114;
  *(_DWORD *)(v8 - 120) = v11 + v6 + 1195;
  *(void *)(v8 - 136) = a3;
  *(void *)(v8 - 128) = a2;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v6 + 3387)))(v8 - 144);
  *int8x16_t v13 = -1;
  *(_DWORD *)(v4 + 44) = v7;
  return result;
}

uint64_t sub_22B351890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,uint64_t a22,unint64_t *a23,unint64_t *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unint64_t *a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t *a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,unint64_t *a56,unint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  a65 = v72;
  a28 = v71;
  a24 = &STACK[0x7E9805B87EA7CB5A];
  a14 = &STACK[0x1AD13B37B101962A];
  a13 = &STACK[0x1901A95D18EF6C19];
  a32 = &STACK[0x2C0];
  unint64_t v74 = STACK[0x208];
  *(unsigned char *)(v68 - 0x3FB394992CBB4EEFLL) = *(unsigned char *)(STACK[0x208] + 12);
  *(unsigned char *)(v68 - 0x3FB394992CBB4EEELL) = *(unsigned char *)(v74 + 4);
  a12 = *(void *)(v67 + 8 * (v69 ^ (v65 - 24))) - 12;
  uint64_t v75 = *(void *)(v67 + 8 * (v66 - 1527)) - 12;
  a30 = *(void *)(v67 + 8 * (v69 ^ (v65 + 86))) - 12;
  a19 = *(void *)(v67 + 8 * (v69 ^ (v65 + 367))) - 8;
  a20 = v75;
  uint64_t v76 = *(void *)(v67 + 8 * (v66 - 1411)) - 8;
  a11 = *(void *)(v67 + 8 * (v69 ^ (v65 - 12))) - 8;
  uint64_t v77 = *(void *)(v67 + 8 * (v69 ^ (v65 + 118)));
  a17 = *(void *)(v67 + 8 * (v69 ^ (v65 + 300))) - 4;
  a18 = v76;
  uint64_t v78 = *(void *)(v67 + 8 * (v66 - 1344));
  a16 = v77 - 4;
  uint64_t v79 = *(void *)(v67 + 8 * (v66 - 1357));
  a10 = *(void *)(v67 + 8 * (v69 ^ (v65 + 176)));
  a26 = v79 - 8;
  a27 = v78;
  a9 = *(void *)(v67 + 8 * (v69 ^ (v65 + 313))) - 8;
  a29 = *(void *)(v67 + 8 * (v69 ^ (v65 + 276))) - 12;
  a15 = *(void *)(v67 + 8 * (v69 ^ (v65 - 41))) - 4;
  if (LODWORD(STACK[0x200]) == 3)
  {
    int v85 = *(unsigned __int8 *)(STACK[0x208] + 13);
    if (*(unsigned char *)(STACK[0x208] + 13))
    {
      if (v85 == 2)
      {
        uint64_t v86 = a16;
        uint64_t v92 = a17;
      }
      else
      {
        if (v85 == 1)
        {
          a22 = a15;
          uint64_t v86 = a18;
LABEL_18:
          unint64_t v93 = STACK[0x208] + 14;
          a21 = &STACK[0x21AEEC4F795AFD3F];
          a56 = &STACK[0x21AEEC4F795AFD97];
          a57 = v93;
          uint64_t v94 = a65;
          uint64_t v95 = *(void (**)(uint64_t))(a65 + 32648);
          a23 = &STACK[0xDD8];
          v95(a30);
          unsigned __int8 v96 = *(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(v94 + 32648);
          a36 = &STACK[0xE68];
          uint64_t v97 = v96(a29, &STACK[0xE68], 16);
          a40 = 0;
          a35 = 0;
          a39 = 0;
          a64 = &STACK[0x717BE438C5D0892C];
          LODWORD(STACK[0x22C]) = 1323516137;
          LODWORD(STACK[0x238]) = 230568399;
          LODWORD(STACK[0x23C]) = 473653325;
          unsigned __int8 v98 = *(uint64_t (**)(uint64_t))(v94 + 8 * ((105 * (&a9 == (uint64_t *)-960)) ^ 0xE3D));
          a33 = v86;
          return v98(v97);
        }
        uint64_t v92 = a19;
        uint64_t v86 = a20;
      }
    }
    else
    {
      uint64_t v86 = a26;
      uint64_t v92 = a27;
    }
    a22 = v92;
    goto LABEL_18;
  }
  int v80 = 604092382;
  uint64_t v81 = a65;
  if (LODWORD(STACK[0x200]) == 2)
  {
    int v82 = *(unsigned __int8 *)(STACK[0x208] + 13);
    if (v82 == 2)
    {
      unint64_t v87 = STACK[0x208] + 0x2F096E18E10B44C2;
      int v88 = 731811679 * ((1375614513 - ((v73 - 168) | 0x51FE3631) + ((v73 - 168) | 0xAE01C9CE)) ^ 0xE7F76F8A);
      *(_DWORD *)(v73 - 128) = v88 ^ 0x31FC3556;
      *(void *)(v73 - 168) = a32;
      *(void *)(v73 - 152) = v87;
      *(void *)(v73 - 136) = a12;
      *(_DWORD *)(v73 - 144) = 1442 - v88;
      uint64_t v81 = a65;
      a1 = (*(uint64_t (**)(uint64_t))(a65 + 32584))(v73 - 168);
      int v80 = *(_DWORD *)(v73 - 160);
    }
    else if (v82 == 1)
    {
      int v89 = 1503746353 * ((2 * ((v73 - 168) & 0x6480E1B0) - (v73 - 168) + 461315660) ^ 0x3D1EDCFA);
      *(void *)(v73 - 152) = STACK[0x208] + 0x61FE4C862F36DA6ELL;
      *(void *)(v73 - 160) = a9;
      *(_DWORD *)(v73 - 136) = v89 + 1148746671;
      *(_DWORD *)(v73 - 168) = v89 + 3173;
      *(void *)(v73 - 144) = a32;
      uint64_t v81 = a65;
      a1 = (*(uint64_t (**)(uint64_t))(a65 + 32864))(v73 - 168);
      int v80 = *(_DWORD *)(v73 - 164);
    }
    else if (*(unsigned char *)(STACK[0x208] + 13))
    {
      unint64_t v90 = STACK[0x208] + 0x1273A3CF57175308;
      int v91 = 1866394843 * ((1368855507 - ((v73 - 168) | 0x519713D3) + ((v73 - 168) | 0xAE68EC2C)) ^ 0x447FDBD8);
      *(void *)(v73 - 160) = a32;
      *(_DWORD *)(v73 - 168) = 2514 - v91;
      *(void *)(v73 - 144) = a10;
      *(void *)(v73 - 136) = v90;
      *(_DWORD *)(v73 - 152) = v91 + 1314556708;
      uint64_t v81 = a65;
      a1 = (*(uint64_t (**)(uint64_t))(a65 + 33520))(v73 - 168);
      int v80 = *(_DWORD *)(v73 - 128);
    }
    else
    {
      unint64_t v83 = STACK[0x208] + 0x66D0A0B6AF3E50E9;
      int v84 = 225134719
          * ((-2 - (((v73 - 168) ^ 0xE4214000 | 0x1888B7EF) + ((v73 - 168) ^ 0x808B1CA | 0xE7774810))) ^ 0x5264B1F);
      *(_DWORD *)(v73 - 160) = 324441254 - v84;
      *(_DWORD *)(v73 - 128) = 3658 - v84;
      *(void *)(v73 - 168) = a32;
      *(void *)(v73 - 152) = v83;
      *(void *)(v73 - 136) = a11;
      uint64_t v81 = a65;
      a1 = (*(uint64_t (**)(uint64_t))(a65 + 33368))(v73 - 168);
      int v80 = *(_DWORD *)(v73 - 144);
    }
  }
  a33 = a2;
  return (*(uint64_t (**)(uint64_t))(v81 + 8 * ((3789 * (v80 == v70)) ^ 0x668)))(a1);
}

void sub_22B351F10()
{
}

uint64_t sub_22B351F70()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((LODWORD(STACK[0x240]) + 428) ^ (1668 * (v0 < v2)))))();
}

uint64_t sub_22B351F9C(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unsigned int v27 = v21 - 16;
  uint64_t v28 = v27 & 0xF;
  uint64_t v29 = v20;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v24).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v24).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a15 + v27), *(int8x16_t *)(v19 + v28 - 15)), *(int8x16_t *)(v18 + v28 - 15)), *(int8x16_t *)(v17 + v28 + (a16 ^ v16) - 15)));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), v26), vmulq_s8(v30, v25)));
  *(int8x16_t *)(a15 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v23 + 8 * (a12 | (8 * (v22 == 16)))))();
}

uint64_t sub_22B352120@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, unint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (a2 + a1 + a3);
  unint64_t v12 = v11 + a7 - 0x2E85F9F014BD953DLL + 1;
  uint64_t v13 = ((a4 + 190) ^ 0xE2D) & v11;
  uint64_t v14 = v13 - v11;
  unint64_t v15 = v9 + v13 - v11;
  uint64_t v16 = a4 + 340 + v13 - 3767;
  unint64_t v17 = v9 + v16;
  uint64_t v18 = v13 + v8;
  unint64_t v19 = v18 - v11 + 3;
  unint64_t v20 = v18 + 4;
  unint64_t v21 = v7 + v14;
  unint64_t v22 = v7 + v16;
  BOOL v24 = a5 < v17 && v15 < v12;
  int v26 = a5 < v20 && v19 < v12 || v24;
  if (a5 < v22 && v21 < v12) {
    int v26 = 1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((15 * (v26 ^ 1)) ^ a4)))();
}

uint64_t sub_22B3521CC(int a1)
{
  int v4 = 1948972247 * ((((v3 - 120) | 0x24680B37) - (v3 - 120) + ((v3 - 120) & 0xDB97F4C8)) ^ 0x91F6FED9);
  *(void *)(v3 - 112) = v2;
  *(_DWORD *)(v3 - 104) = a1 - v4 - 1050;
  *(_DWORD *)(v3 - 120) = v6 + v4 - 186096895;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x9AA)))(v3 - 120);
}

uint64_t sub_22B352284@<X0>(int a1@<W0>, int a2@<W8>)
{
  unsigned int v6 = v4 + (((a2 + 2567) | 4) ^ 0x6A202C55);
  if (v6 <= 0x40) {
    unsigned int v6 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * (((a1 - v2 - v3 + v6 < 0xF) * (a2 - 470)) ^ a2)))(4268302625, 347313666);
}

uint64_t sub_22B3522FC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x220]) = v2;
  int v4 = *(uint64_t (**)(void))(v3 + 8 * ((4004 * (v1 + 8 == ((a1 + 1235) ^ 0x4C55926F) + ((a1 + 1235) | 0x52))) ^ a1));
  STACK[0x250] = (unint64_t)*(&off_26DE9F480 + (a1 ^ 0x696)) - 4;
  STACK[0x248] = (unint64_t)*(&off_26DE9F480 + (a1 ^ 0x7FE));
  return v4();
}

uint64_t sub_22B352368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  v21.i64[0] = 0x9999999999999999;
  v21.i64[1] = 0x9999999999999999;
  *(int8x16_t *)(v20 - 112) = veorq_s8(vaddq_s8(*(int8x16_t *)*(void *)(a1 + 8), v21), (int8x16_t)xmmword_22B4975E0);
  BOOL v23 = v18 == 0x57B2EFF461B4415FLL || a9 == 0;
  HIDWORD(a13) = 2 * v17;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (int)(a8 ^ (25 * v23))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_22B3523D8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 + 2246) ^ 0xF09) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_22B352400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (a5 ^ (8 * (((((a5 + 2043) | 0x1C4) - 3062) & a8) != (((a5 - 17) | 0x61) ^ 0xEFFF9C77))))))();
}

uint64_t sub_22B352448()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((5 * (v2 ^ 0x4E4) + 2016) ^ (v2 - 1236)) * (v0 == v1)) ^ v2)))();
}

void sub_22B352480()
{
}

void sub_22B3524A4()
{
}

uint64_t sub_22B3524AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = v3 - 1189948586 + ((v4 - 2642) | 0xAAu) < 0x38;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((v6 | (16 * v6)) ^ (v4 - 1555))))(a1, a2, a3, 1605, 3154, 2660);
}

uint64_t sub_22B3524FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  BOOL v17 = a14 < 0x8BE9E7AC;
  if (v17 == v15 + 1143610548 < ((v14 - 181) ^ 0x8BE9E7D9)) {
    BOOL v17 = v15 + 1143610548 < a14;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((26 * v17) ^ v14)))();
}

uint64_t sub_22B352578(int a1)
{
  v6.i64[0] = 0x5454545454545454;
  v6.i64[1] = 0x5454545454545454;
  v7.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v7.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v2 + (v4 - 433310473) - 15));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  int8x16_t v10 = vrev64q_s8(*(int8x16_t *)(v2 + (v4 - 433310473) - 31));
  int8x16_t v11 = vextq_s8(v10, v10, 8uLL);
  uint64_t v12 = v1 + (v4 - 433310473);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v6)), v7));
  *(int8x16_t *)(v12 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v6)), v7));
  *(int8x16_t *)(v12 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * (5 * ((a1 + 2145) ^ 0xFFC) - 923 != (v3 & 0xFFFFFFE0))) ^ (a1 - 640))))();
}

uint64_t sub_22B352628@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  *(_DWORD *)(v10 - 256) = v8;
  *(_DWORD *)(v10 - 252) = v11;
  unsigned int v12 = v8 & 0xFFFFFFF8;
  uint64_t v13 = *(void *)(v10 - 248) - 7;
  LODWORD(STACK[0x2BC]) = v12;
  int v14 = -8 - a4;
  char v15 = a2 + a1 + v9;
  uint64_t v16 = (a2 + a1 + a3 + v14 + 8);
  v18.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v14 + 8) & 0xF;
  v18.val[0].i64[1] = (v15 - 77 + (_BYTE)v14 + 8) & 0xF;
  v18.val[1].i64[0] = (v15 - 78 + (_BYTE)v14 + 8) & 0xF;
  v18.val[1].i64[1] = (v15 - 79 + (_BYTE)v14 + 8) & 0xF;
  v18.val[2].i64[0] = (v15 + (_BYTE)v14 + (((_BYTE)a5 + 115) & 0xF6) + 8) & 0xF;
  v18.val[2].i64[1] = (v15 - 81 + (_BYTE)v14 + 8) & 0xF;
  v18.val[3].i64[0] = (v15 - 82 + (_BYTE)v14 + 8) & 0xF;
  v18.val[3].i64[1] = (v15 - 83 + (_BYTE)v14 + 8) & 0xF;
  *(int8x8_t *)(v13 + v16) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v13 + v16), *(int8x8_t *)(v5 + (v16 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v16 & 0xF) + v7 - 3), *(int8x8_t *)((v16 & 0xF) + v6 - 4)))), (int8x8_t)0x2A2A2A2A2A2A2A2ALL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v18, (int8x16_t)xmmword_22B497560), (int8x8_t)0xF9F9F9F9F9F9F9F9)));
  return (*(uint64_t (**)(__n128))(STACK[0x210] + 8 * ((3199 * (-v12 == v14)) ^ a5)))((__n128)xmmword_22B497560);
}

uint64_t sub_22B352798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v71
                              + 8
                              * ((1589
                                * (LODWORD(STACK[0x268])
                                 - (a70
                                  + v70)
                                 + ((LODWORD(STACK[0x230]) - 1391880021) & 0x52F65FFF ^ 0x710C5A6Du) > 2)) ^ LODWORD(STACK[0x230]))))();
}

uint64_t sub_22B35282C()
{
  *uint64_t v2 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v0) ^ v1)))();
}

uint64_t sub_22B352854(uint64_t a1)
{
  int v1 = 1948972247 * ((2 * (a1 & 0x616C65F) - a1 + 2045327776) ^ 0xCC77CC4E);
  int v2 = *(_DWORD *)(a1 + 16) - v1;
  int v3 = *(_DWORD *)(a1 + 12) + v1;
  int v4 = *(_DWORD *)(*(void *)a1 - 0x281D12643933BF1FLL);
  unsigned int v6 = v4 - 920561905;
  BOOL v5 = v4 - 920561905 < 0;
  unsigned int v7 = 920561905 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + v2 - 3110)
          + (int)((((v3 - 1195091115) < 4 * (unint64_t)v8)
                 * ((v2 + 1089196135) & 0xBF142BFF ^ 0x9F4)) | v2)
          - 1))();
}

uint64_t sub_22B352934()
{
  if (v2) {
    BOOL v5 = v3 == v1 + v0 - 853 + ((v0 - 1589626846) | 0x8059081) + 832;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((21 * v6) ^ v0)))();
}

void sub_22B352984()
{
  LODWORD(STACK[0x290]) = v0;
  JUMPOUT(0x22B35298CLL);
}

void sub_22B3529D4()
{
}

uint64_t sub_22B3529E0()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x19157D3ABD2659CELL) - 912415025;
  unsigned int v4 = *(_DWORD *)(v2 - 0x19157D3ABD2659D2) - 1535431052;
  BOOL v5 = v4 < (v0 ^ 0xD11u) - 71750821;
  BOOL v6 = v3 < v4;
  if (v3 < 0xFBB9379B != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((3862 * v6) ^ v0)))();
}

uint64_t sub_22B352A78(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a2 + 924) | 0x100) + 7 * (a2 ^ 0x4EC) - 2142) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_22B352AC0@<X0>(unsigned int a1@<W8>)
{
  unint64_t v4 = a1 + v1;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((78 * (v4 - a1 + 1681175991 < (unint64_t)((v3 ^ 0x600u) + 576) - 2158)) ^ v3 ^ 0x981)))();
}

uint64_t sub_22B352B24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((60 * (((((STACK[0x238] & 0x798C477F) - 569) ^ (v2 > 0xE98E0F55)) & 1) == 0)) ^ (STACK[0x278] - 2322))))();
}

uint64_t sub_22B352B7C()
{
  int v3 = v1 - ((((v2 + 1961032200) ^ 0x5DDDB0DE) + 2 * v1) & 0x6E300DF0) - 877154676;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((983
                                * (((2 * v3) & 0x3EBC9BF8 ^ 0x2E3009F0)
                                 + (v3 ^ (((v2 + 1961032200) & 0x8B1D0A7D) - 1471790960))
                                 + 2130427892 == 509218288)) ^ v2)))();
}

uint64_t sub_22B352C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = v71 - 168;
  *(void *)(v71 - 168) = a67;
  *(_DWORD *)(v71 - 160) = (v68 + 1935319454) ^ (1328090399
                                               * ((((v71 - 168) | 0x60AA1B44) - ((v71 - 168) & 0x60AA1B44)) ^ 0x9F797F7E));
  (*(void (**)(uint64_t))(v70 + 8 * (v68 ^ 0xC7A)))(v71 - 168);
  int v73 = v68 + 727;
  int v74 = 1503746353 * (((v72 | 0x2BBB2F9D) - (v72 & 0x2BBB2F9D)) ^ 0xDDAED2B);
  *(_DWORD *)(v71 - 144) = v68 + 727 - v74;
  *(_DWORD *)(v71 - 168) = v74 + 1331781556;
  *(void *)(v71 - 160) = *(void *)(v69 + 8 * (v68 - 614)) - 4;
  *(void *)(v71 - 152) = a67;
  uint64_t v75 = 8 * (v68 ^ 0xC63);
  (*(void (**)(uint64_t))(v70 + v75))(v71 - 168);
  unsigned int v76 = 1503746353 * (((v72 | 0x43277D6E) - v72 + (v72 & 0xBCD88290)) ^ 0x6546BFD8);
  *(void *)(v71 - 160) = a68;
  *(void *)(v71 - 152) = a67;
  *(_DWORD *)(v71 - 144) = v73 - v76;
  *(_DWORD *)(v71 - 168) = v76 + 1331781541;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v70 + v75))(v71 - 168);
  STACK[0x200] = a67 - 0x21AEEC4F795AEEC3;
  return sub_22B352E58(v77);
}

uint64_t sub_22B352E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,unint64_t a56,_DWORD *a57,_DWORD *a58,_DWORD *a59,_DWORD *a60,_DWORD *a61,uint64_t a62,_DWORD *a63)
{
  *uint64_t v70 = *v69;
  *a68 = *(_DWORD *)STACK[0x200];
  *a64 = *a66;
  *a61 = *a63;
  *a59 = *a60;
  *a57 = *a58;
  return (*(uint64_t (**)(void))(v71 + 8 * ((((v68 ^ 0xE8) - 951) * (a67 < a56)) ^ v68)))();
}

uint64_t sub_22B352EFC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + 997) * (v1 != 0x2EDC50EC)) ^ v0)))();
}

void sub_22B352F40()
{
}

uint64_t sub_22B352F4C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  int8x16x4_t v68 = vld4q_s8(a3);
  uint8x16_t v43 = (uint8x16_t)veorq_s8(v68.val[0], v40);
  uint16x8_t v44 = vmovl_u8(*(uint8x8_t *)v43.i8);
  uint16x8_t v45 = vmovl_high_u8(v43);
  uint8x16_t v46 = (uint8x16_t)veorq_s8(v68.val[1], v40);
  _Q17 = vmovl_u8(*(uint8x8_t *)v46.i8);
  _Q16 = vmovl_high_u8(v46);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v55 = (uint8x16_t)veorq_s8(v68.val[2], v40);
  uint16x8_t v56 = vmovl_high_u8(v55);
  uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v55.i8);
  v68.val[0] = veorq_s8(v68.val[3], v40);
  v68.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v68.val[0]);
  v68.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v68.val[1]);
  v68.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v68.val[1].i8);
  v68.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v68.val[0].i8);
  v68.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v68.val[0]);
  v68.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v68.val[0].i8);
  int32x4_t v58 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v57.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v44.i8), 0x18uLL)), v68.val[0]);
  int32x4_t v59 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v57, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v44), 0x18uLL)), v68.val[3]);
  int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v56.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v45.i8), 0x18uLL)), v68.val[1]);
  int32x4_t v61 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v56, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v45), 0x18uLL)), v68.val[2]);
  v68.val[0] = veorq_s8(vandq_s8((int8x16_t)v58, v41), (int8x16_t)(*(_OWORD *)v68.val & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v68.val[3] = veorq_s8(vandq_s8((int8x16_t)v59, v41), (int8x16_t)(*(_OWORD *)&v68.val[3] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v68.val[1] = veorq_s8(vandq_s8((int8x16_t)v60, v41), (int8x16_t)(*(_OWORD *)&v68.val[1] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v68.val[2] = veorq_s8(vandq_s8((int8x16_t)v61, v41), (int8x16_t)(*(_OWORD *)&v68.val[2] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v35[2] = vaddq_s32(vsubq_s32(v60, vaddq_s32((int32x4_t)v68.val[1], (int32x4_t)v68.val[1])), v42);
  v35[3] = vaddq_s32(vsubq_s32(v61, vaddq_s32((int32x4_t)v68.val[2], (int32x4_t)v68.val[2])), v42);
  *int8x16_t v35 = vaddq_s32(vsubq_s32(v58, vaddq_s32((int32x4_t)v68.val[0], (int32x4_t)v68.val[0])), v42);
  v35[1] = vaddq_s32(vsubq_s32(v59, vaddq_s32((int32x4_t)v68.val[3], (int32x4_t)v68.val[3])), v42);
  int v62 = &v35[4].i32[v38 + v39];
  int v63 = *(v62 - 8) ^ *(v62 - 3);
  unsigned int v64 = v63 + v37 - ((v63 << (a35 + 60)) & 0xB7FDD896);
  int v65 = *(v62 - 16) ^ *(v62 - 14);
  HIDWORD(v66) = v65 ^ 0x5BFEEC4B ^ v64;
  LODWORD(v66) = v65 ^ ~v64;
  *int v62 = (v66 >> 31) + v37 - ((2 * (v66 >> 31)) & 0xB7FDD896);
  return (*(uint64_t (**)(void))(v36 + 8 * ((2664 * (v38 + 17 == v38 + 80)) ^ (a35 - 1872))))();
}

void sub_22B353110(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1948972247 * ((2 * (a1 & 0x16B0D033) - a1 - 380686388) ^ 0x5CD1DA22));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B3531C0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((v0 + v0 - 147 + 1604) * (*(_DWORD *)(v2 - 256) == LODWORD(STACK[0x2BC]))) ^ v0)))();
}

uint64_t sub_22B3531F0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 == v1) * v4) ^ v3)))();
}

uint64_t sub_22B353218@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X6>, unsigned int a4@<W8>)
{
  int v8 = (a1 - 1177) | 0xE0;
  *(unsigned char *)(v4 + (a2 + v5 + v8 + 2021 - 3269)) = *(unsigned char *)(a3 + (v6 - 1569460846));
  return (*(uint64_t (**)(void))(v7 + 8 * ((3193 * (v6 + 383257845 < a4)) ^ v8)))();
}

uint64_t sub_22B353278()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((84 * ((*(unsigned char *)(v1 + 4) & 0xFE) == (3 * (v0 ^ 0xF2) - 3))) ^ v0)))();
}

void *sub_22B3532B0(void *result)
{
  return sub_22B3334D8(result);
}

uint64_t sub_22B3532E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  a16 = (v18 - 1690128560) ^ (1292559617
                            * ((&a16 - 1215187974 - 2 * ((unint64_t)&a16 & 0xB791B3FA)) ^ 0x10C2DB93));
  uint64_t v19 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 + 857)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((549 * (a17 == ((v18 - 1624) ^ 0xDBFEEA4E))) ^ v18)))(v19);
}

uint64_t sub_22B353380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v73
                              + 8
                              * ((51 * (((v71 > v72 + 623) ^ ((a71 & 0x7F) + 61)) & 1)) ^ (LODWORD(STACK[0x240]) - 1991))))();
}

void sub_22B3533C8(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) != 0x19157D3ABD2659DELL
    && *(void *)(a1 + 32) != 0x134091E9BEE09534
    && *(void *)(a1 + 8) != 0x66E6F27BEAA16EFDLL;
  int v1 = *(_DWORD *)(a1 + 20) + 1948972247 * (((a1 | 0x18400906) - a1 + (a1 & 0xE7BFF6F9)) ^ 0xADDEFCE8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B3534EC()
{
  uint64_t v4 = *(void *)(v6 + 24);
  *(_DWORD *)(v3 - 128) = v0 - 1734664879 * ((v3 - 1031286940 - 2 * ((v3 - 128) & 0xC287CFE4)) ^ 0xED5CE7FE) - 881;
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 2628)))(v3 - 128);
}

uint64_t sub_22B3535A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2589 * (v0 > 0xFBBC0549)) ^ 0x241)))();
}

uint64_t sub_22B3535F8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (*(unsigned char *)(*(void *)(result + 8) + 131) == 1)
  {
    *(_DWORD *)(v4 - 144) = (v2 + 514402447) ^ (1948972247
                                              * ((((v4 - 144) | 0x3B9F81A2) - (v4 - 144) + ((v4 - 144) & 0xC4607E58)) ^ 0x8E01744C));
    *(void *)(v4 - 136) = v4 + 0x2970AB8229FC3C3ALL;
    *(_DWORD *)(v4 - 124) = -1948972247
                          * ((((v4 - 144) | 0x3B9F81A2) - (v4 - 144) + ((v4 - 144) & 0xC4607E58)) ^ 0x8E01744C)
                          - 118723831;
    (*(void (**)(uint64_t))(v3 + 8 * (v2 ^ 0x324)))(v4 - 144);
    JUMPOUT(0x22B3B4644);
  }
  if (!*(unsigned char *)(*(void *)(result + 8) + 131)) {
    __asm { BRAA            X8, X17 }
  }
  return result;
}

void sub_22B353C48()
{
  *(_DWORD *)(v0 - 0x19157D3ABD2659C6) = 604092319;
  JUMPOUT(0x22B37AEE0);
}

uint64_t sub_22B353C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 136) = v14
                         - 1734664879
                         * ((859061829 - ((v16 - 136) | 0x33343E45) + ((v16 - 136) | 0xCCCBC1BA)) ^ 0xE310E9A0)
                         - 1151;
  *(void *)(v16 - 128) = a12;
  *(void *)(v16 - 120) = v15;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 + 2358)))(v16 - 136);
  int v17 = 1948972247 * ((((2 * (v16 - 136)) | 0x46970D8E) - (v16 - 136) - 592152263) ^ 0x96D57329);
  *(void *)(v16 - 128) = v12;
  *(_DWORD *)(v16 - 136) = (v14 + 1633) ^ v17;
  *(_DWORD *)(v16 - 132) = 1292548153 - v17;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 + 2397)))(v16 - 136);
  *(void *)(v16 - 112) = v12;
  *(_DWORD *)(v16 - 120) = v14
                         + 1866394843
                         * ((((2 * ((v16 - 136) ^ 0x12F16D3F)) | 0xD96B1A34) - ((v16 - 136) ^ 0x12F16D3F) - 1823837466) ^ 0x9453D7D1)
                         + 1024;
  *(void *)(v16 - 128) = a12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 ^ 0x935)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((23
                                              * ((((v14 ^ 0x4B) - 1) ^ (*(_DWORD *)(v16 - 136) > 0x64079912u)) & 1)) ^ (v14 + 2073))))(v18);
}

uint64_t sub_22B353DF4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X8>)
{
  *(_DWORD *)(v13 - 224) = v12;
  *(void *)(v13 - 192) = v7 - 7;
  *(void *)(v13 - 200) = a6 - 7;
  *(_DWORD *)(v13 - 204) = 8 - (v12 & 0xFFFFFFF8);
  int v14 = -a5;
  int v15 = a1 + a3 + a2;
  *(_DWORD *)(v13 - 208) = v15 + 8;
  uint64_t v16 = (a3 + a2 + a4 + v14);
  v18.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4 + (_BYTE)v14) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v15 + 14 + (_BYTE)v14) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)v15 + 13 + (_BYTE)v14) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)v15 + 12 + (_BYTE)v14) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)v15 + 11 + (_BYTE)v14) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)v15 + 10 + (_BYTE)v14) & 0xF;
  v18.val[3].i64[0] = (v11 + (_BYTE)v14 + (((_BYTE)v6 + 39) & 0xE7) + 8) & 0xF;
  v18.val[3].i64[1] = (*(_DWORD *)(v13 - 208) + (_BYTE)v14) & 0xF;
  *(int8x8_t *)(*(void *)(v13 - 200) + v16) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v10 + (v16 & 0xF) - 7), *(int8x8_t *)(*(void *)(v13 - 192) + v16)), veor_s8(*(int8x8_t *)(v9 + (v16 & 0xF) - 7), *(int8x8_t *)((v16 & 0xF) + v8 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v18, (int8x16_t)xmmword_22B497560), (int8x8_t)0x4B4B4B4B4B4B4B4BLL)));
  return (*(uint64_t (**)(__n128))(*(void *)(v13 - 184)
                                           + 8 * ((1142 * (*(_DWORD *)(v13 - 204) == v14)) ^ (v6 + 69))))((__n128)xmmword_22B497560);
}

uint64_t sub_22B353F60()
{
  BOOL v9 = v3 > 0x954E46DE;
  uint64_t v10 = (v6 - 1390403184);
  *(unsigned char *)(v7 + v10) = *((unsigned char *)*(&off_26DE9F480 + v2 - 1248) + (v10 & 0xF)) ^ *(unsigned char *)(v1 + v10) ^ (15 * ((v6 - 112) & 0xF)) ^ *((unsigned char *)*(&off_26DE9F480 + (v2 ^ 0x579)) + (v10 & 0xF) - 7) ^ *((unsigned char *)*(&off_26DE9F480 + (v2 ^ 0x5E8)) + (v10 & 0xF) - 8);
  if (v9 == v6 + 399628978 < v0) {
    BOOL v9 = v6 + 399628978 < v4;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * v5) ^ v2)))();
}

void sub_22B354028()
{
}

uint64_t sub_22B354034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                       + 8
                                                                       * (((((v8 ^ 0xEA4 ^ (a7 < 0xFFFFFFF0)) & 1) == 0)
                                                                         * ((v8 ^ 0x6F4) - 3607)) ^ v8 ^ 0xEA4)))(a1, a2, a3, v7);
}

uint64_t sub_22B354074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v19 + 8 * ((238 * (a17 == v18 + ((v17 - 1148) | 0xC20) - 3104)) ^ v17)))();
}

uint64_t sub_22B3540B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(unsigned char *)(a1 + (v6 - 1951924425)) = *(unsigned char *)(v7 + (v6 - 1951924425));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 - 1 == a5) * ((v5 - 443) ^ 0xE76)) ^ (v5 - 3001))))();
}

void sub_22B3540F4()
{
  int v2 = (v0 >> 4) ^ 6 | v0 ^ 0x6B;
  int v3 = v2 & 1 | ((v2 & 4) != 0) | (((v2 | ((v2 & 0xFC) >> 2)) & 2) != 0);
  *(_DWORD *)(v1 + 20) = -42084 * v3 - ((-84168 * v3) & 0xB7FDD890) - 604050357;
}

uint64_t sub_22B354188(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v11 + ((v10 + 1343035980) & a2)) = v14;
  return (*(uint64_t (**)(void))(v13 + 8 * ((3825 * ((v12 & 0x38) == 8)) ^ v10)))();
}

uint64_t sub_22B3541D8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + (v5 ^ 0x39Au) + v4 + a1) = *(unsigned char *)(a2 + (v5 ^ 0x39Au) + v4 + a1);
  return (*(uint64_t (**)(void))(v6 + 8 * ((57 * (a1 - 1 == v3)) ^ v5)))();
}

uint64_t sub_22B354214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v26 + 1) = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * (int)((42 * ((((v27 & v25) == 8) ^ (61 * (v27 ^ 0x7D))) & 1)) ^ v27 ^ 0x2A)))();
}

uint64_t sub_22B354278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)STACK[0x260];
  unint64_t v14 = STACK[0x260] + 0x54EEBA8C0E75CBFCLL;
  v13[34] = 0x36DEA8F11840E964;
  v13[35] = v14;
  v13[68] = 0x36DEA8F11840E964;
  v13[69] = (char *)v13 + 0x54EEBA8C0E75CD0CLL;
  unint64_t v33 = (unint64_t)v13 + 0x281D12643933C143;
  v13[102] = 0x36DEA8F11840E964;
  v13[103] = (char *)v13 + 0x54EEBA8C0E75CE1CLL;
  STACK[0x220] = (unint64_t)v13 + 0x281D12643933C253;
  v13[136] = 0x36DEA8F11840E964;
  v13[137] = (char *)v13 + 0x54EEBA8C0E75CF2CLL;
  v13[170] = 0x36DEA8F11840E964;
  v13[171] = (char *)v13 + 0x54EEBA8C0E75D03CLL;
  uint64_t v15 = *(void *)(a7 + 224);
  LODWORD(STACK[0x238]) = 2 * v10;
  LODWORD(STACK[0x258]) = v9 + 3298;
  int v16 = 1866394843 * ((v11 - 192) ^ 0xEA1737F4);
  *(_DWORD *)(v11 - 168) = v9 + 3298 + v16;
  *(_DWORD *)(v11 - 192) = ((v10 ^ 0xA80507B0) - 1134561394 + ((2 * v10) & 0xE7F7D7F6 ^ 0xA7F5D096)) ^ v16;
  STACK[0x218] = (unint64_t)v13 + 0x281D12643933C363;
  uint64_t v17 = v15 + 4;
  STACK[0x1948] = (unint64_t)v13 + 0x281D12643933C033;
  STACK[0x1950] = v15 + 4;
  STACK[0x228] = (unint64_t)v13 + 0x281D12643933C473;
  uint64_t v18 = 8 * (v9 + 3911);
  STACK[0x248] = v18;
  (*(void (**)(uint64_t))(v12 + v18))(v11 - 192);
  unint64_t v19 = v17 + v8;
  int v20 = 1866394843 * ((((2 * (v11 - 192)) | 0xA65B855E) - (v11 - 192) + 751975761) ^ 0x393AF55B);
  int v21 = STACK[0x258];
  *(_DWORD *)(v11 - 192) = (((2 * v10) & 0xE4F7FF7A ^ 0xA4F5D812) + ((v9 + 696587011) ^ v10) + 1038083020) ^ v20;
  *(_DWORD *)(v11 - 168) = v21 + v20;
  STACK[0x1948] = v33;
  STACK[0x1950] = v19;
  (*(void (**)(uint64_t))(STACK[0x270] + STACK[0x248]))(v11 - 192);
  unint64_t v22 = v19 + v8;
  uint64_t v34 = v19 + v8;
  LODWORD(v19) = STACK[0x238];
  int v23 = 1866394843
      * ((((v11 - 192) ^ 0x73CC1324 | 0x8E70416A) - (((v11 - 192) ^ 0x73CC1324) & 0x8E70416A)) ^ 0x17AB65BA);
  STACK[0x1948] = STACK[0x220];
  STACK[0x1950] = v22;
  *(_DWORD *)(v11 - 168) = v21 + v23;
  *(_DWORD *)(v11 - 192) = ((v10 ^ 0xED050392) - 111152208 + (v19 & 0x6DF7DFB2 ^ 0x25F5D892)) ^ v23;
  unint64_t v24 = STACK[0x248];
  (*(void (**)(uint64_t))(STACK[0x270] + STACK[0x248]))(v11 - 192);
  int v25 = 1866394843 * ((((v11 - 192) | 0x3191AE7E) - ((v11 - 192) & 0x3191AE7E)) ^ 0xDB86998A);
  int v26 = LODWORD(STACK[0x258]) + v25;
  STACK[0x1948] = STACK[0x218];
  STACK[0x1950] = v34 + v8;
  *(_DWORD *)(v11 - 168) = v26;
  *(_DWORD *)(v11 - 192) = ((v10 ^ 0x29A51FC0) + 1040183294 + (v19 & 0xE4B7E716 ^ 0xA4B5C016)) ^ v25;
  (*(void (**)(uint64_t))(STACK[0x270] + v24))(v11 - 192);
  int v27 = 1866394843 * ((747209636 - ((v11 - 192) | 0x2C8983A4) + ((v11 - 192) | 0xD3767C5B)) ^ 0x39614BAF);
  int v28 = ((v10 ^ 0x628103C0) + 1994126334 + (STACK[0x238] & 0x72FFDF16 ^ 0x32FDD816)) ^ v27;
  *(_DWORD *)(v11 - 168) = LODWORD(STACK[0x258]) + v27;
  *(_DWORD *)(v11 - 192) = v28;
  STACK[0x1950] = v34 + v8 + v8;
  STACK[0x1948] = STACK[0x228];
  (*(void (**)(uint64_t))(STACK[0x270] + 8 * (v9 ^ 0x10C9)))(v11 - 192);
  unint64_t v29 = STACK[0x270];
  unint64_t v30 = STACK[0x3F0];
  unint64_t v31 = ((v9 + 17) ^ 0x949FA690) + v7;
  STACK[0x480] = v31;
  return (*(uint64_t (**)(unint64_t))(v29 + 8 * ((86 * (v31 == 0)) ^ (v9 + 3010))))(v30);
}

uint64_t sub_22B354758(char a1, char a2, int8x16_t a3, int8x8_t a4, int8x8_t a5, uint64_t a6, uint64_t a7, int a8, int a9)
{
  int v20 = v9 - 8;
  uint64_t v21 = (a8 + v20);
  v23.val[0].i64[0] = ((_BYTE)a8 + (_BYTE)v20) & 0xF;
  v23.val[0].i64[1] = (v17 + (_BYTE)v20) & 0xF;
  v23.val[1].i64[0] = (v16 + (_BYTE)v20) & 0xF;
  v23.val[1].i64[1] = (v15 + (_BYTE)v20) & 0xF;
  v23.val[2].i64[0] = (v13 + (_BYTE)v20) & 0xF;
  v23.val[2].i64[1] = (v14 + (_BYTE)v20) & 0xF;
  v23.val[3].i64[0] = (a2 + (_BYTE)v20) & 0xF;
  v23.val[3].i64[1] = (a1 + (_BYTE)v20) & 0xF;
  *(int8x8_t *)(a7 + v21) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + v21), *(int8x8_t *)(v10 + (v21 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v21 & 0xF) + v11 - 5), *(int8x8_t *)((v21 & 0xF) + v12 - 6)))), a5), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v23, a3), a4)));
  return (*(uint64_t (**)(void))(*(void *)(v19 - 184) + 8 * ((255 * (a9 == v20)) ^ v18)))();
}

uint64_t sub_22B354760@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = v2;
  int8x16x4_t v7 = vld4q_s8(v4);
  int v5 = &v2[a1 ^ 0x5FALL];
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  int8x16x4_t v9 = vld4q_s8(v5);
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  v7.val[0] = v9.val[3];
  v7.val[1] = v9.val[2];
  v7.val[2] = v9.val[1];
  v7.val[3] = v9.val[0];
  vst4q_s8(v4, v8);
  vst4q_s8(v5, v7);
  return (*(uint64_t (**)(void))(a2 + 8 * (int)((7 * ((v3 & 0x1FFFFFFE0) == 32)) ^ (a1 - 481))))();
}

uint64_t sub_22B3547DC@<X0>(int8x16_t *a1@<X0>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q4>)
{
  *a1 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v5 + (a2 + v6)), vandq_s8(vaddq_s8(*(int8x16_t *)(v5 + (a2 + v6)), *(int8x16_t *)(v5 + (a2 + v6))), a4)), a3);
  return (*(uint64_t (**)(void))(v4 + 8 * ((112 * ((v7 ^ 0x9C8) == 1133)) ^ v7 ^ 0x9C8)))();
}

void sub_22B354838(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *uint64_t v1 = 604092286;
}

uint64_t sub_22B354848(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((a4 + 33967869) | 0x4200030) ^ 0x6265705) + 20 * (a4 ^ 0x147)) * (v4 == a3)) ^ a4)))();
}

uint64_t sub_22B3548A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v47
                                                     + 8
                                                     * ((15
                                                       * (*a28
                                                        - 485372004
                                                        + ((2 * *a33) & 0x7A ^ 0x32)
                                                        + (*a33 & ((95 * ((a47 + 453) ^ 0x23F)) ^ 0x978) ^ 0x97F73E4u) > 0xFFFFFFBF)) ^ (a47 + 453))))(a1, 4274490664);
}

uint64_t sub_22B3548DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14, _DWORD *a15, _DWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,int a23,uint64_t a24,int *a25,uint64_t a26,int a27,unsigned int a28)
{
  int v32 = v28;
  unsigned int v33 = 1866394843 * ((&a24 - 1095000019 - 2 * (&a24 & 0xBEBBA02D)) ^ 0x54AC97D9);
  a24 = a17;
  LODWORD(a25) = v33 ^ 0x65998521;
  HIDWORD(a25) = v33 + v30 + 168;
  (*(void (**)(uint64_t *))(v29 + 8 * (v30 + 2781)))(&a24);
  unsigned int v34 = 1734664879 * (&a24 ^ 0x2FDB281A);
  LODWORD(a24) = -38327932 - v34;
  a25 = &a20;
  a26 = a17;
  a27 = v30 - v34 + 2163;
  a28 = v34 - 635067263;
  (*(void (**)(uint64_t *))(v29 + 8 * (v30 + 2835)))(&a24);
  *v31 += a20;
  *a16 += a21;
  *a15 += a22;
  *a14 += a23;
  a26 = a13;
  LODWORD(a25) = 1734664879 * (((&a24 | 0x92B092C6) - (&a24 & 0x92B092C6)) ^ 0xBD6BBADC)
               + 1062496493
               + v30
               + 1826;
  a24 = a17;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v29 + 8 * (v30 ^ 0xAF9)))(&a24);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((11
                                              * (((v30 - 1823521715) & 0x6CB0BFBE ^ 0xCAD8BE3C) + v32 >= (((v30 - 1006) | 0xA12) ^ 0xFFFFF4F6))) ^ v30)))(v35);
}

uint64_t sub_22B354AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  return (*(uint64_t (**)(void))(v28 + 8 * ((3687 * (a27 == ((v27 - 19) ^ 0xB38B1FB2))) ^ v27)))();
}

uint64_t sub_22B354B0C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((16 * (v1 == 1801476204)) | 0x6A6u)))();
}

uint64_t sub_22B354B30(uint64_t a1)
{
  unsigned int v6 = *(unsigned __int8 *)(v1 + (v3 + v4 + 3286));
  return (*(uint64_t (**)(uint64_t, void, void))(v2 + 8 * (int)((39 * ((v6 >> 7) ^ 1)) ^ v5)))(a1, ((2 * v6) & 0xDDDDDDDD) + (v6 ^ 0xFFFB5EEE) + 1801779582, (v5 - 181));
}

uint64_t sub_22B354BA8(int a1, int a2, int a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  v59.val[1].i64[0] = ((_BYTE)v52 + 1) & 0xF;
  v59.val[1].i64[1] = v52 & 0xF;
  v59.val[2].i64[0] = ((_BYTE)v52 - 1) & 0xF;
  v59.val[2].i64[1] = ((_BYTE)v52 + 14) & 0xF;
  v59.val[3].i64[0] = ((_BYTE)v52 + 13) & 0xF;
  v59.val[3].i64[1] = ((_BYTE)v52 + 12) & 0xF;
  unsigned int v54 = a1 + a3 + a2;
  v55.i64[0] = 0x8181818181818181;
  v55.i64[1] = 0x8181818181818181;
  v59.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)a2) & 0xF;
  v59.val[0].i64[1] = ((_BYTE)v52 + 2) & 0xF;
  v56.i64[0] = vqtbl4q_s8(v59, (int8x16_t)xmmword_22B4975D0).u64[0];
  v60.val[0].i64[1] = ((_BYTE)v52 + 10) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)v52 + 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)v52 + 6) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)v52 + 4) & 0xF;
  v60.val[0].i64[0] = ((_BYTE)v52 + 11) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)v52 + 9) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)v52 + 7) & 0xF;
  v60.val[3].i64[0] = (v52 + 5) & 0xF;
  v56.i64[1] = vqtbl4q_s8(v60, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v57 = vrev64q_s8(vmulq_s8(v56, v55));
  *(int8x16_t *)(a47 - 15 + v54) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v49 + (v54 & 0xF) - 15), *(int8x16_t *)(a47 - 15 + v54)), *(int8x16_t *)(v50 + (v54 & 0xF) - 15)), *(int8x16_t *)(((a5 - 1853637272) & 0x6E7C475E)+ (unint64_t)(v54 & 0xF)+ v51- 1576)), vextq_s8(v57, v57, 8uLL));
  return (*(uint64_t (**)(void))(a49 + 8 * ((3162 * ((v53 & 0xFFFFFFF0) == 16)) ^ a5)))();
}

uint64_t sub_22B354D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, int a16)
{
  unsigned int v21 = 1990461019 * (((&a12 | 0xBCC95E1D) + (~&a12 | 0x4336A1E2)) ^ 0x932DFC95);
  a12 = v16;
  a13 = a11;
  a14 = v21 ^ ((v17 ^ 0x5F7ED9FB) - 436259074 + ((2 * v17) & 0xBEFDB3F6));
  a16 = (v20 + 2328) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 ^ 0x13EB)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a15 == v18) * (v20 + 1130)) ^ v20)))(v22);
}

uint64_t sub_22B354DD4@<X0>(int8x8_t *a1@<X8>)
{
  *a1 = veor_s8(*v4, (int8x8_t)0x2A2A2A2A2A2A2A2ALL);
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((11 * ((v1 & 0xFFFFFFFFFFFFFFF8) - (v3 - 2011) == -921)) ^ v2)))();
}

uint64_t sub_22B354E24(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  unsigned int v45 = *(_DWORD *)(v43 + ((v41 + a2) & 0xFFFFFFFC));
  *(unsigned char *)(a40 + (v41 + a2)) = v45 ^ 0x13;
  *(unsigned char *)(a40 + (v41 + a2 + 1)) = (BYTE1(v45) ^ 0x67)
                                                 - ((((v45 >> 8) ^ 0x67) << (((v40 + 22) | 0x61) - 96)) & 0x54)
                                                 + 42;
  *(unsigned char *)(a40 + (v41 + a2 + 2)) = (BYTE2(v45) ^ 0x95) + (~(v45 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a40 + (v41 + a2 + 3)) = (HIBYTE(v45) ^ 0x11) - ((v45 >> 23) & 0x54) + 42;
  unsigned int v46 = *v42 - 1770538793;
  BOOL v47 = v41 + 2116611464 < v46;
  if ((v41 + 2116611464) < 0xA9E674FE != v46 < 0xA9E674FE) {
    BOOL v47 = v46 < 0xA9E674FE;
  }
  return (*(uint64_t (**)(void))(v44 + 8 * (v47 | (4 * v47) | v40)))();
}

uint64_t sub_22B354F20(uint64_t result)
{
  if ((*(unsigned __int8 *)(result + 8) ^ (-41
                                                                         * ((result + 41 - 2 * (result & 0x29)) ^ 0xC7)))
     - 79 >= 3)
    int v1 = 604091428;
  else {
    int v1 = -604050357;
  }
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_22B354F78(uint64_t a1)
{
  BOOL v3 = *(void *)(a1 + 16) == 0x66E5C4D1D99E9762 || *(void *)a1 == 0x717BE438C5D0856CLL;
  int v1 = *(_DWORD *)(a1 + 12) - 731811679 * (a1 ^ 0x49F6A644);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v1 ^ 0xA84)) + ((v3 * (((v1 - 2476) | 8) ^ 0x25D)) ^ v1) - 1))();
}

uint64_t sub_22B355010()
{
  int v5 = v1 + 19;
  int v6 = (v1 + 1699) | 1;
  int v7 = 1990461019
     * ((((v4 - 152) ^ 0xBFB0456B | 0x3BC0FE9A) - ((v4 - 152) ^ 0xBFB0456B) + (((v4 - 152) ^ 0xBFB0456B) & 0xC43F0161)) ^ 0xAB941978);
  int v10 = v1;
  STACK[0xD90] = v0 + 0x717BE438C5D0856CLL;
  STACK[0xD98] = *(void *)(v3 + 8 * (v1 ^ 0x1F1)) - 4;
  *(_DWORD *)(v4 - 152) = v1 - v7 + 1091;
  *(_DWORD *)(v4 - 112) = 362873235 - v7;
  STACK[0xD80] = (unint64_t)&STACK[0x7E9805B87EA7CA02];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0x1075)))(v4 - 152);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((*(_DWORD *)(v4 - 136) == -604050357) * (v5 + v6 + 973)) ^ v10)))(v8);
}

uint64_t sub_22B35513C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((224
                                * (((v2 - 100) ^ ((unint64_t)&STACK[0x560]
                                                                 + STACK[0x240]
                                                                 - a1
                                                                 + v1
                                                                 + ((v2 - 633842530) & 0x25C7AEB3)
                                                                 - 0x3D63BD934F87EAAALL < 0x10)) & 1)) ^ v2)))();
}

uint64_t sub_22B3551E8(uint64_t a1)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 8);
  int v2 = *(_DWORD **)(a1 + 16);
  unsigned int v84 = (*v2 ^ 0xFBFFF5FF) + 2109636530 + ((2 * *v2) & 0xF7FFEBFE);
  unsigned int v85 = (v2[1] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[1]) & 0xF7FFEBFE);
  unsigned int v86 = (v2[2] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[2]) & 0xF7FFEBFE);
  unsigned int v87 = (v2[3] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[3]) & 0xF7FFEBFE);
  unsigned int v88 = (v2[4] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[4]) & 0xF7FFEBFE);
  unsigned int v89 = (v2[5] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[5]) & 0xF7FFEBFE);
  unsigned int v90 = (v2[6] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[6]) & 0xF7FFEBFE);
  unsigned int v91 = (v2[7] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[7]) & 0xF7FFEBFE);
  unsigned int v92 = (v2[8] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[8]) & 0xF7FFEBFE);
  unsigned int v93 = (v2[9] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[9]) & 0xF7FFEBFE);
  unsigned int v94 = (v2[10] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[10]) & 0xF7FFEBFE);
  unsigned int v95 = (v2[11] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[11]) & 0xF7FFEBFE);
  unsigned int v96 = (v2[12] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[12]) & 0xF7FFEBFE);
  unsigned int v97 = (v2[13] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[13]) & 0xF7FFEBFE);
  unsigned int v98 = (v2[14] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[14]) & 0xF7FFEBFE);
  unsigned int v99 = (v2[15] ^ 0xFBFFF5FF) + 2109636530 + ((2 * v2[15]) & 0xF7FFEBFE);
  uint64_t v83 = v1;
  int v3 = *(_DWORD *)(v1 - 0x30647C9BC9CD7D43);
  int v4 = *(_DWORD *)(v1 - 0x30647C9BC9CD7D3FLL);
  int v5 = *(_DWORD *)(v1 - 0x30647C9BC9CD7D3BLL);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x30647C9BC9CD7D47) + v84 + 1571565255 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  int v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0xA273EC86) + 1362753091;
  HIDWORD(v6) = v5 + v85 + 1862877605 + (v3 & (v7 ^ 0x5139F643) | v4 & ~(v7 ^ 0x5139F643));
  LODWORD(v6) = HIDWORD(v6);
  int v8 = (v6 >> 20) + (v7 ^ 0x5139F643) - ((2 * ((v6 >> 20) + (v7 ^ 0x5139F643))) & 0x41D3564A) - 1595299035;
  HIDWORD(v6) = v4 + v86 - 1436419286 + ((v8 ^ 0xA0E9AB25) & (v7 ^ (v3 - ((2 * v3) & 0xA273EC86) + 1362753091)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0xA0E9AB25) - ((2 * ((v6 >> 15) + (v8 ^ 0xA0E9AB25))) & 0x15BB366C) - 1965188298;
  int v9 = v1 ^ 0x8ADD9B36;
  HIDWORD(v6) = v3
              + v87
              + 1207916861
              + ((((v1 ^ 0x8ADD9B36) & (v7 ^ 0xF1D05D66 ^ v8))
                - ((2 * ((v1 ^ 0x8ADD9B36) & (v7 ^ 0xF1D05D66 ^ v8))) & 0xA273EC86)
                + 1362753091) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  int v10 = (v6 >> 10) + (v1 ^ 0x8ADD9B36) - ((2 * ((v6 >> 10) + (v1 ^ 0x8ADD9B36))) & 0xAC584672) - 701750471;
  unsigned int v11 = v10 ^ 0xD62C2339;
  HIDWORD(v6) = v88
              + (v7 ^ 0x5139F643)
              + 2076023294
              + ((((v10 ^ 0xD62C2339) & (v8 ^ 0x2A343013 ^ v1))
                - ((2 * ((v10 ^ 0xD62C2339) & (v8 ^ 0x2A343013 ^ v1))) & 0x41D3564A)
                - 1595299035) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  int v12 = (v6 >> 25) + (v10 ^ 0xD62C2339) - ((2 * ((v6 >> 25) + (v10 ^ 0xD62C2339))) & 0xBDDFB6E8) + 1592777588;
  HIDWORD(v6) = v89
              + (v8 ^ 0xA0E9AB25)
              - 842444679
              + ((((v12 ^ 0x5EEFDB74) & (v1 ^ 0x5CF1B80F ^ v10))
                - ((2 * ((v12 ^ 0x5EEFDB74) & (v1 ^ 0x5CF1B80F ^ v10))) & 0x15BB366C)
                - 1965188298) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v12 ^ 0x5EEFDB74) - ((2 * ((v6 >> 20) + (v12 ^ 0x5EEFDB74))) & 0xE459A2F2) + 1915539833;
  int v13 = v1 ^ 0x722CD179;
  HIDWORD(v6) = v90
              + v9
              + 779210850
              + ((((v1 ^ 0x722CD179) & (v10 ^ 0x88C3F84D ^ v12))
                - ((2 * ((v1 ^ 0x722CD179) & (v10 ^ 0x88C3F84D ^ v12))) & 0xAC584672)
                - 701750471) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  int v14 = (v6 >> 15) + (v1 ^ 0x722CD179) - ((2 * ((v6 >> 15) + (v1 ^ 0x722CD179))) & 0x99791834) + 1287425050;
  int v15 = v14 ^ 0x4CBC8C1A;
  HIDWORD(v6) = v91
              + v11
              - 2088231088
              + ((((v14 ^ 0x4CBC8C1A) & (v12 ^ 0x2CC30A0D ^ v1))
                - ((2 * ((v14 ^ 0x4CBC8C1A) & (v12 ^ 0x2CC30A0D ^ v1))) & 0xBDDFB6E8)
                + 1592777588) ^ v12);
  LODWORD(v6) = HIDWORD(v6);
  int v16 = (v6 >> 10) + (v14 ^ 0x4CBC8C1A) - ((2 * ((v6 >> 10) + (v14 ^ 0x4CBC8C1A))) & 0x39AC2BA8) - 1663691308;
  HIDWORD(v6) = v92
              + (v12 ^ 0x5EEFDB74)
              - 272489689
              + ((((v16 ^ 0x9CD615D4) & (v1 ^ 0x3E905D63 ^ v14))
                - ((2 * ((v16 ^ 0x9CD615D4) & (v1 ^ 0x3E905D63 ^ v14))) & 0xE459A2F2)
                + 1915539833) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v16 ^ 0x9CD615D4) - ((2 * ((v6 >> 25) + (v16 ^ 0x9CD615D4))) & 0x4CC75182) + 644065473;
  int v17 = v1 ^ 0x2663A8C1;
  HIDWORD(v6) = v93
              + v13
              + 294027774
              + ((((v1 ^ 0x2663A8C1) & (v14 ^ 0xD06A99CE ^ v16))
                - ((2 * ((v1 ^ 0x2663A8C1) & (v14 ^ 0xD06A99CE ^ v16))) & 0x99791834)
                + 1287425050) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  int v18 = (v6 >> 20) + (v1 ^ 0x2663A8C1) - ((2 * ((v6 >> 20) + (v1 ^ 0x2663A8C1))) & 0x39069F48) + 478367652;
  int v19 = v18 ^ 0x1C834FA4;
  HIDWORD(v6) = v94
              + v15
              - 2042567168
              + ((((v18 ^ 0x1C834FA4) & (v16 ^ 0xBAB5BD15 ^ v1))
                - ((2 * ((v18 ^ 0x1C834FA4) & (v16 ^ 0xBAB5BD15 ^ v1))) & 0x39AC2BA8)
                - 1663691308) ^ v16);
  LODWORD(v6) = HIDWORD(v6);
  int v20 = (v6 >> 15) + (v18 ^ 0x1C834FA4) - 495940754 + (~(2 * ((v6 >> 15) + (v18 ^ 0x1C834FA4))) | 0x3B1EE923) + 1;
  unsigned int v21 = v20 ^ 0xE2708B6E;
  HIDWORD(v6) = v95
              + (v16 ^ 0x9CD615D4)
              + 262038029
              + ((((v20 ^ 0xE2708B6E) & (v1 ^ 0x3AE0E765 ^ v18))
                - ((2 * ((v20 ^ 0xE2708B6E) & (v1 ^ 0x3AE0E765 ^ v18))) & 0x4CC75182)
                + 644065473) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v20 ^ 0xE2708B6E) - ((2 * ((v6 >> 10) + (v20 ^ 0xE2708B6E))) & 0x9BAABD86) - 841654589;
  int v22 = v1 ^ 0xCDD55EC3;
  HIDWORD(v6) = v96
              + v17
              - 237921423
              + ((((v1 ^ 0xCDD55EC3) & (v18 ^ 0xFEF3C4CA ^ v20))
                - ((2 * ((v1 ^ 0xCDD55EC3) & (v18 ^ 0xFEF3C4CA ^ v20))) & 0x39069F48)
                + 478367652) ^ v18);
  LODWORD(v6) = HIDWORD(v6);
  int v23 = (v6 >> 25) + (v1 ^ 0xCDD55EC3) - ((2 * ((v6 >> 25) + (v1 ^ 0xCDD55EC3))) & 0xCF1BABA8) + 1737348564;
  int v24 = v23 ^ 0x678DD5D4;
  HIDWORD(v6) = v97
              + v19
              - 2082866206
              + ((((v23 ^ 0x678DD5D4) & (v20 ^ 0x2FA5D5AD ^ v1))
                - ((2 * ((v23 ^ 0x678DD5D4) & (v20 ^ 0x2FA5D5AD ^ v1))) & 0xC4E116DC)
                - 495940754) ^ v20);
  LODWORD(v6) = HIDWORD(v6);
  int v25 = (v6 >> 20) + (v23 ^ 0x678DD5D4) - ((2 * ((v6 >> 20) + (v23 ^ 0x678DD5D4))) & 0x8588B528) + 1120164500;
  HIDWORD(v6) = v98
              + v21
              + 750439901
              + ((((v25 ^ 0x42C45A94) & (v1 ^ 0xAA588B17 ^ v23))
                - ((2 * ((v25 ^ 0x42C45A94) & (v1 ^ 0xAA588B17 ^ v23))) & 0x9BAABD86)
                - 841654589) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v25 ^ 0x42C45A94) - ((2 * ((v6 >> 15) + (v25 ^ 0x42C45A94))) & 0x5040926E) - 1474279113;
  int v26 = v1 ^ 0xA8204937;
  HIDWORD(v6) = v99
              + v22
              - 805989776
              + ((((v1 ^ 0xA8204937) & (v23 ^ 0x25498F40 ^ v25))
                - ((2 * ((v1 ^ 0xA8204937) & (v23 ^ 0x25498F40 ^ v25))) & 0xCF1BABA8)
                + 1737348564) ^ v23);
  LODWORD(v6) = HIDWORD(v6);
  int v27 = (v6 >> 10) + (v1 ^ 0xA8204937) - ((2 * ((v6 >> 10) + (v1 ^ 0xA8204937))) & 0x462520AA) - 1559064491;
  HIDWORD(v6) = v85
              + v24
              + 2086645681
              + ((((v1 ^ 0xB32D962 ^ v27) & (v25 ^ 0x42C45A94))
                - ((2 * ((v1 ^ 0xB32D962 ^ v27) & (v25 ^ 0x42C45A94))) & 0x5040926E)
                - 1474279113) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v27 ^ 0xA3129055;
  LODWORD(v1) = (v6 >> 27) + (v27 ^ 0xA3129055) - ((2 * ((v6 >> 27) + (v27 ^ 0xA3129055))) & 0x749BF5DA) - 1169294611;
  HIDWORD(v6) = v90
              + (v25 ^ 0x42C45A94)
              + 1182940559
              + ((((v27 ^ 0x195F6AB8 ^ v1) & v26) - ((2 * ((v27 ^ 0x195F6AB8 ^ v1) & v26)) & 0x462520AA) - 1559064491) ^ v27);
  LODWORD(v6) = HIDWORD(v6);
  int v28 = v1 ^ 0xBA4DFAED;
  int v29 = (v6 >> 23) + (v1 ^ 0xBA4DFAED) - ((2 * ((v6 >> 23) + (v1 ^ 0xBA4DFAED))) & 0xDE700AA) + 116621397;
  HIDWORD(v6) = v95
              + v26
              - 1398807392
              + ((((v1 ^ 0xBCBE7AB8 ^ v29) & v2)
                - ((2 * ((v1 ^ 0xBCBE7AB8 ^ v29) & v2)) & 0x749BF5DA)
                - 1169294611) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  int v30 = v29 ^ 0x6F38055;
  LODWORD(v1) = (v6 >> 18) + (v29 ^ 0x6F38055) - ((2 * ((v6 >> 18) + (v29 ^ 0x6F38055))) & 0x12F210D6) + 158926955;
  HIDWORD(v6) = v84
              + v2
              + 1878544889
              + ((((v29 ^ 0xF8A883E ^ v1) & v28) - ((2 * ((v29 ^ 0xF8A883E ^ v1) & v28)) & 0xDE700AA) + 116621397) ^ v29);
  LODWORD(v6) = HIDWORD(v6);
  int v31 = v1 ^ 0x979086B;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x979086B) - ((2 * ((v6 >> 12) + (v1 ^ 0x979086B))) & 0x5BDF72A) - 2099315819;
  HIDWORD(v6) = v89
              + v28
              + 1550883500
              + ((((v1 ^ 0x8BA7F3FE ^ v2) & v30)
                - ((2 * ((v1 ^ 0x8BA7F3FE ^ v2) & v30)) & 0x12F210D6)
                + 158926955) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v32 = v2 ^ 0x82DEFB95;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x82DEFB95)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x82DEFB95))) & 0xD56202FC)
              - 357498498;
  HIDWORD(v6) = v94
              + v30
              - 2004509022
              + ((((v2 ^ 0x686FFAEB ^ v1) & v31)
                - ((2 * ((v2 ^ 0x686FFAEB ^ v1) & v31)) & 0x5BDF72A)
                - 2099315819) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v33 = v1 ^ 0xEAB1017E;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0xEAB1017E) - ((2 * ((v6 >> 23) + (v1 ^ 0xEAB1017E))) & 0x96DAFBCC) - 882016794;
  HIDWORD(v6) = v99
              + v31
              + 1591963856
              + ((((v1 ^ 0x21DC7C98 ^ v2) & v32)
                - ((2 * ((v1 ^ 0x21DC7C98 ^ v2) & v32)) & 0xD56202FC)
                - 357498498) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v34 = v2 ^ 0xCB6D7DE6;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xCB6D7DE6)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xCB6D7DE6))) & 0xAC4708C6)
              + 1445168227;
  HIDWORD(v6) = v88
              + v32
              + 1846904343
              + ((((v2 ^ 0x9D4EF985 ^ v1) & v33)
                - ((2 * ((v2 ^ 0x9D4EF985 ^ v1) & v33)) & 0x96DAFBCC)
                - 882016794) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v35 = v1 ^ 0x56238463;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x56238463) - ((2 * ((v6 >> 12) + (v1 ^ 0x56238463))) & 0xEFF22D0E) - 134670713;
  HIDWORD(v6) = v93
              + v33
              - 1474078667
              + ((((v1 ^ 0xA1DA92E4 ^ v2) & v34)
                - ((2 * ((v1 ^ 0xA1DA92E4 ^ v2) & v34)) & 0xAC4708C6)
                + 1445168227) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v36 = v2 ^ 0xF7F91687;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xF7F91687)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xF7F91687))) & 0xFEBE7D82)
              + 2136948417;
  HIDWORD(v6) = v98
              + v34
              + 1232638501
              + ((((v2 ^ 0x88A62846 ^ v1) & v35)
                - ((2 * ((v2 ^ 0x88A62846 ^ v1) & v35)) & 0xEFF22D0E)
                - 134670713) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v37 = v1 ^ 0x7F5F3EC1;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x7F5F3EC1) - ((2 * ((v6 >> 23) + (v1 ^ 0x7F5F3EC1))) & 0x1F941EC4) + 264900450;
  HIDWORD(v6) = v87
              + v35
              + 2065078230
              + ((((v1 ^ 0x709531A3 ^ v2) & v36)
                - ((2 * ((v1 ^ 0x709531A3 ^ v2) & v36)) & 0xFEBE7D82)
                + 2136948417) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v38 = v2 ^ 0xFCA0F62;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xFCA0F62)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xFCA0F62))) & 0xFC6F3C84)
              - 29909438;
  HIDWORD(v6) = v92
              + v36
              - 878993604
              + ((((v2 ^ 0xF1FD9120 ^ v1) & v37)
                - ((2 * ((v2 ^ 0xF1FD9120 ^ v1) & v37)) & 0x1F941EC4)
                + 264900450) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v39 = v1 ^ 0xFE379E42;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xFE379E42) - ((2 * ((v6 >> 12) + (v1 ^ 0xFE379E42))) & 0x68207C0C) + 873479686;
  HIDWORD(v6) = v97
              + v37
              + 807760724
              + ((((v1 ^ 0xCA27A044 ^ v2) & v38)
                - ((2 * ((v1 ^ 0xCA27A044 ^ v2) & v38)) & 0xFC6F3C84)
                - 29909438) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 27) + (v2 ^ 0x34103E06);
  unsigned int v40 = v1 + 387565496 - ((2 * v1) & 0x2E338F70);
  HIDWORD(v6) = v86
              + v38
              - 2093928889
              + ((((v2 ^ 0x2309F9BE ^ v40) & v39)
                - ((2 * ((v2 ^ 0x2309F9BE ^ v40) & v39)) & 0x68207C0C)
                + 873479686) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v41 = (v6 >> 23) + (v40 ^ 0x1719C7B8) - ((2 * ((v6 >> 23) + (v40 ^ 0x1719C7B8))) & 0x9FC1E1E6) + 1340141811;
  HIDWORD(v6) = v91
              + v39
              - 307196632
              + ((((v40 ^ 0x58F9374B ^ v41) & (v2 ^ 0x34103E06))
                - ((2 * ((v40 ^ 0x58F9374B ^ v41) & (v2 ^ 0x34103E06))) & 0x2E338F70)
                + 387565496) ^ v40);
  LODWORD(v6) = HIDWORD(v6);
  int v42 = v41 ^ 0x4FE0F0F3;
  int v43 = (v6 >> 18) + (v41 ^ 0x4FE0F0F3) + 350967357 + (~(2 * ((v6 >> 18) + (v41 ^ 0x4FE0F0F3))) | 0xD6295385) + 1;
  HIDWORD(v6) = v96
              + (v2 ^ 0x34103E06)
              + 325834457
              + ((((v41 ^ 0x5B0BA6CE ^ v43) & (v40 ^ 0x1719C7B8))
                + 1340141811
                + (~(2 * ((v41 ^ 0x5B0BA6CE ^ v43) & (v40 ^ 0x1719C7B8))) | 0x603E1E19)
                + 1) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v44 = (v6 >> 12) + (v43 ^ 0x14EB563D) - ((2 * ((v6 >> 12) + (v43 ^ 0x14EB563D))) & 0x116B1A0C) + 146115846;
  uint64_t v45 = 4 * ((v1 + 387565496) & 0xF ^ 8u);
  unsigned int v46 = *(unsigned int *)((char *)&v84 + v45);
  uint64_t v47 = 4 * (v44 & 0xF ^ 6);
  *(unsigned int *)((char *)&v84 + v45) = *(unsigned int *)((char *)&v84 + v47);
  *(unsigned int *)((char *)&v84 + v47) = v46;
  uint64_t v48 = 4 * (v43 & 0xF ^ 0xDu);
  LODWORD(v47) = *(unsigned int *)((char *)&v84 + v48);
  uint64_t v49 = 4 * (v41 & 0xF ^ 3u);
  *(unsigned int *)((char *)&v84 + v48) = *(unsigned int *)((char *)&v84 + v49);
  *(unsigned int *)((char *)&v84 + v49) = v47;
  uint64_t v50 = 4 * ((v40 >> 4) ^ 0xBu);
  LODWORD(v47) = *(unsigned int *)((char *)&v84 + v50);
  uint64_t v51 = 4 * (v44 >> 4);
  *(unsigned int *)((char *)&v84 + v50) = *(unsigned int *)((char *)&v84 + v51);
  *(unsigned int *)((char *)&v84 + v51) = v47;
  uint64_t v52 = 4 * ((v40 >> 8) & 0xF ^ 7);
  LODWORD(v47) = *(unsigned int *)((char *)&v84 + v52);
  uint64_t v53 = 4 * ((v44 >> 8) & 0xF ^ 0xD);
  *(unsigned int *)((char *)&v84 + v52) = *(unsigned int *)((char *)&v84 + v53);
  *(unsigned int *)((char *)&v84 + v53) = v47;
  uint64_t v54 = 4 * (((unsigned __int16)v40 >> 12) ^ 0xCu);
  LODWORD(v53) = *(unsigned int *)((char *)&v84 + v54);
  uint64_t v55 = 4
      * (((unsigned __int16)((v6 >> 12) + (v43 ^ 0x563D) - ((2 * ((v6 >> 12) + (v43 ^ 0x563D))) & 0x1A0C) - 29434) >> 12) ^ 8u);
  *(unsigned int *)((char *)&v84 + v54) = *(unsigned int *)((char *)&v84 + v55);
  *(unsigned int *)((char *)&v84 + v55) = v53;
  HIDWORD(v6) = v89
              + (v40 ^ 0x1719C7B8)
              - 2042903663
              + (((v43 ^ 0x1C5EDB3B ^ v44) - ((2 * (v43 ^ 0x1C5EDB3B ^ v44)) & 0x9FC1E1E6) + 1340141811) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  int v56 = (v6 >> 28) + (v44 ^ 0x8B58D06) - ((2 * ((v6 >> 28) + (v44 ^ 0x8B58D06))) & 0x19D817F6) - 1930687493;
  unsigned int v57 = v93;
  HIDWORD(v6) = v92
              + v42
              + 229867728
              + (((v56 ^ v44 ^ 0x845986FD) - 2 * ((v56 ^ v44 ^ 0x845986FD) & 0x14EB563F ^ (v56 ^ v44) & 2) + 350967357) ^ v43);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 21) + (v56 ^ 0x8CEC0BFB) - ((2 * ((v6 >> 21) + (v56 ^ 0x8CEC0BFB))) & 0x977A6B56) - 876792405;
  HIDWORD(v6) = v95
              + (v43 ^ 0x14EB563D)
              - 203494543
              + (((v56 ^ 0x47513E50 ^ v54) - ((2 * (v56 ^ 0x47513E50 ^ v54)) & 0x116B1A0C) + 146115846) ^ v44);
  LODWORD(v6) = HIDWORD(v6);
  int v58 = v54 ^ 0xCBBD35AB;
  LODWORD(v51) = (v6 >> 16) + (v54 ^ 0xCBBD35AB) - ((2 * ((v6 >> 16) + (v54 ^ 0xCBBD35AB))) & 0xEF3087BE) - 141016097;
  HIDWORD(v6) = v98
              + (v44 ^ 0x8B58D06)
              - 2077834661
              + (((v54 ^ 0x3C257674 ^ v51) - ((2 * (v54 ^ 0x3C257674 ^ v51)) & 0x19D817F6) - 1930687493) ^ v56);
  LODWORD(v6) = HIDWORD(v6);
  int v59 = v51 ^ 0xF79843DF;
  int v60 = (v6 >> 9) + (v51 ^ 0xF79843DF) + 825890759 + (~(2 * ((v6 >> 9) + (v51 ^ 0xF79843DF))) | 0x9D8BD071) + 1;
  HIDWORD(v6) = v85
              + (v56 ^ 0x8CEC0BFB)
              + 721450131
              + (((v51 ^ 0xC6A25418 ^ v60) - ((2 * (v51 ^ 0xC6A25418 ^ v60)) & 0x977A6B56) - 876792405) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 28) + (v60 ^ 0x313A17C7) - ((2 * ((v6 >> 28) + (v60 ^ 0x313A17C7))) & 0x2B2E9CEE) + 362237559;
  HIDWORD(v6) = v88
              + v58
              - 769631752
              + (((v60 ^ 0x24AD59B0 ^ v54) - ((2 * (v60 ^ 0x24AD59B0 ^ v54)) & 0xEF3087BE) - 141016097) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = v54 ^ 0x15974E77;
  LODWORD(v55) = (v6 >> 21) + (v54 ^ 0x15974E77) - ((2 * ((v6 >> 21) + (v54 ^ 0x15974E77))) & 0x4083A718) - 1606298740;
  HIDWORD(v6) = v91
              + v59
              + 2096944559
              + (((v54 ^ 0xB5D69DFB ^ v55) - ((2 * (v54 ^ 0xB5D69DFB ^ v55)) & 0x62742F8E) + 825890759) ^ v60);
  LODWORD(v6) = HIDWORD(v6);
  int v61 = v55 ^ 0xA041D38C;
  int v62 = (v6 >> 16) + (v55 ^ 0xA041D38C) - ((2 * ((v6 >> 16) + (v55 ^ 0xA041D38C))) & 0xA1D1E6BA) - 790039715;
  HIDWORD(v6) = v94
              + (v60 ^ 0x313A17C7)
              + 1157711551
              + (((v62 ^ v55 ^ 0x70A920D1) - 2 * ((v62 ^ v55 ^ 0x70A920D1) & 0x15974E7F ^ (v62 ^ v55) & 8) + 362237559) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 9) + (v62 ^ 0xD0E8F35D) - ((2 * ((v6 >> 9) + (v62 ^ 0xD0E8F35D))) & 0x3FD931EC) - 1611884298;
  HIDWORD(v6) = v97
              + v51
              - 1361245931
              + (((v54 ^ v62 ^ 0x4F046BAB)
                - 2 * ((v54 ^ v62 ^ 0x4F046BAB) & 0x2041D39C ^ (v54 ^ v62) & 0x10)
                - 1606298740) ^ v55);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = v54 ^ 0x9FEC98F6;
  LODWORD(v55) = (v6 >> 28) + (v54 ^ 0x9FEC98F6) - ((2 * ((v6 >> 28) + (v54 ^ 0x9FEC98F6))) & 0x58E5DC56) - 1401754069;
  HIDWORD(v6) = v84
              + v61
              + 1893904969
              + (((v55 ^ v54 ^ 0x339E76DD) - 2 * ((v55 ^ v54 ^ 0x339E76DD) & 0x50E8F35F ^ (v55 ^ v54) & 2) - 790039715) ^ v62);
  LODWORD(v6) = HIDWORD(v6);
  int v63 = v55 ^ 0xAC72EE2B;
  int v64 = (v6 >> 21) + (v55 ^ 0xAC72EE2B) - ((2 * ((v6 >> 21) + (v55 ^ 0xAC72EE2B))) & 0x6AE98130) + 896843928;
  uint64_t result = v86;
  HIDWORD(v6) = v87
              + (v62 ^ 0xD0E8F35D)
              + 1529920212
              + (((v55 ^ 0x99062EB3 ^ v64) - ((2 * (v55 ^ 0x99062EB3 ^ v64)) & 0x3FD931EC) - 1611884298) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 16) + (v64 ^ 0x3574C098) - ((2 * ((v6 >> 16) + (v64 ^ 0x3574C098))) & 0x7F0BF586) - 1081738557;
  HIDWORD(v6) = v90
              + v51
              - 1966495916
              + (((v54 ^ v64 ^ 0x8AF13A5B) - 2 * ((v54 ^ v64 ^ 0x8AF13A5B) & 0x2C72EE2F ^ (v54 ^ v64) & 4) - 1401754069) ^ v55);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = v54 ^ 0xBF85FAC3;
  LODWORD(v55) = (v6 >> 9) + (v54 ^ 0xBF85FAC3) - ((2 * ((v6 >> 9) + (v54 ^ 0xBF85FAC3))) & 0xA8ECE568) + 1417048756;
  HIDWORD(v6) = v93
              + v63
              + 1612077704
              + (((v54 ^ 0xEBF38877 ^ v55) - ((2 * (v54 ^ 0xEBF38877 ^ v55)) & 0x6AE98130) + 896843928) ^ v64);
  LODWORD(v6) = HIDWORD(v6);
  int v66 = v55 ^ 0x547672B4;
  int v67 = (v6 >> 28) + (v55 ^ 0x547672B4) - ((2 * ((v6 >> 28) + (v55 ^ 0x547672B4))) & 0xC2D7CC8C) + 1634461254;
  HIDWORD(v6) = v96
              + (v64 ^ 0x3574C098)
              + 1830626356
              + (((v67 ^ v55 ^ 0x351D94F2) - 2 * ((v67 ^ v55 ^ 0x351D94F2) & 0x3F85FAC7 ^ (v67 ^ v55) & 4) - 1081738557) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v67 ^ 0x616BE646;
  LODWORD(v54) = (v6 >> 21) + (v67 ^ 0x616BE646) - ((2 * ((v6 >> 21) + (v67 ^ 0x616BE646))) & 0xAF06DE04) - 679252222;
  HIDWORD(v6) = v99
              + v51
              - 1511782585
              + (((v54 ^ v67 ^ 0xB6E88944) - 2 * ((v54 ^ v67 ^ 0xB6E88944) & 0x547672B6 ^ (v54 ^ v67) & 2) + 1417048756) ^ v55);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v53) = v54 ^ 0xD7836F02;
  LODWORD(v55) = (v6 >> 16) + (v54 ^ 0xD7836F02) - ((2 * ((v6 >> 16) + (v54 ^ 0xD7836F02))) & 0xDA7F360C) + 1832884998;
  HIDWORD(v6) = v86
              + v66
              + 1257103540
              + (((v55 ^ v54 ^ 0xBABCF404) - 2 * ((v55 ^ v54 ^ 0xBABCF404) & 0x616BE64E ^ (v55 ^ v54) & 8) + 1634461254) ^ v67);
  LODWORD(v6) = HIDWORD(v6);
  int v68 = (v6 >> 9) + (v55 ^ 0x6D3F9B06) - ((2 * ((v6 >> 9) + (v55 ^ 0x6D3F9B06))) & 0x3EE43EC4) - 1619910814;
  unsigned int v69 = v68 ^ 0x9F721F62;
  HIDWORD(v6) = v84
              + v2
              + 2053811347
              + (((v69 | v54 ^ 0x287C90FD) - ((2 * (v69 | v54 ^ 0x287C90FD)) & 0xDA7F360C) + 1832884998) ^ v55);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 26) + v69 - ((2 * ((v6 >> 26) + v69)) & 0x649E9948) - 1303425884;
  int v70 = v54 ^ 0xB24F4CA4;
  HIDWORD(v6) = v91
              + v53
              - 915633690
              + (((v54 ^ 0xB24F4CA4 | v55 ^ 0x92C064F9)
                - ((2 * (v54 ^ 0xB24F4CA4 | v55 ^ 0x92C064F9)) & 0x3EE43EC4)
                - 1619910814) ^ v68);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v53) = (v6 >> 22) + (v54 ^ 0xB24F4CA4) - ((2 * ((v6 >> 22) + (v54 ^ 0xB24F4CA4))) & 0xDC3BB91A) - 300032883;
  int v71 = v53 ^ 0xEE1DDC8D;
  HIDWORD(v6) = v98
              + (v55 ^ 0x6D3F9B06)
              + 836087286
              + (((v71 | v68 ^ 0x608DE09D) - ((2 * (v71 | v68 ^ 0x608DE09D)) & 0x649E9948) - 1303425884) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 17) + v71 - ((2 * ((v6 >> 17) + v71)) & 0x7CBFA290) + 1046466888;
  unsigned int v72 = v2 ^ 0x3E5FD148;
  HIDWORD(v6) = v89
              + v69
              - 2099959160
              + (((v72 | v54 ^ 0x4DB0B35B) - ((2 * (v72 | v54 ^ 0x4DB0B35B)) & 0xDC3BB91A) - 300032883) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 11) + v72 - ((2 * ((v6 >> 11) + v72)) & 0xB9B16D7C) - 589777218;
  int v73 = v54 ^ 0xDCD8B6BE;
  HIDWORD(v6) = v96
              + v70
              - 342039534
              + (((v73 | v53 ^ 0x11E22372) - ((2 * (v73 | v53 ^ 0x11E22372)) & 0x7CBFA290) + 1046466888) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v53) = (v6 >> 26) + v73 + 1894364055 + (~(2 * ((v6 >> 26) + v73)) | 0x1E2C98D1) + 1;
  int v74 = v53 ^ 0x70E9B397;
  HIDWORD(v6) = v87
              + v71
              + 357455585
              + (((v53 ^ 0x70E9B397 | v2 ^ 0xC1A02EB7)
                - ((2 * (v53 ^ 0x70E9B397 | v2 ^ 0xC1A02EB7)) & 0xB9B16D7C)
                - 589777218) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 22) + (v53 ^ 0x70E9B397) - ((2 * ((v6 >> 22) + (v53 ^ 0x70E9B397))) & 0x79496A2C) + 1017427222;
  unsigned int v75 = v2 ^ 0x3CA4B516;
  HIDWORD(v6) = v94
              + v72
              - 2043576628
              + (((v75 | v54 ^ 0x23274941) - ((2 * (v75 | v54 ^ 0x23274941)) & 0xE1D3672E) + 1894364055) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 17) + v75 - ((2 * ((v6 >> 17) + v75)) & 0x494C5D94) + 614870730;
  int v76 = v54 ^ 0x24A62ECA;
  HIDWORD(v6) = v85
              + v73
              + 197519392
              + (((v76 | v53 ^ 0x8F164C68) - ((2 * (v76 | v53 ^ 0x8F164C68)) & 0x79496A2C) + 1017427222) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v53) = (v6 >> 11) + v76 - ((2 * ((v6 >> 11) + v76)) & 0x3A682648) - 1657531612;
  int v77 = v53 ^ 0x9D341324;
  HIDWORD(v6) = v92
              + v74
              - 169211746
              + (((v53 ^ 0x9D341324 | v2 ^ 0xC35B4AE9)
                - ((2 * (v53 ^ 0x9D341324 | v2 ^ 0xC35B4AE9)) & 0x494C5D94)
                + 614870730) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 26) + (v53 ^ 0x9D341324) - ((2 * ((v6 >> 26) + (v53 ^ 0x9D341324))) & 0xFEF22972) - 8842055;
  unsigned int v78 = v2 ^ 0xFF7914B9;
  HIDWORD(v6) = v99
              + v75
              - 2073136849
              + (((v78 | v54 ^ 0xDB59D135) - ((2 * (v78 | v54 ^ 0xDB59D135)) & 0x3A682648) - 1657531612) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 22) + v78 - ((2 * ((v6 >> 22) + v78)) & 0xCB34599A) - 442880819;
  int v79 = v54 ^ 0xE59A2CCD;
  HIDWORD(v6) = v90
              + v76
              + 692243811
              + (((v54 ^ 0xE59A2CCD | v53 ^ 0x62CBECDB)
                - ((2 * (v54 ^ 0xE59A2CCD | v53 ^ 0x62CBECDB)) & 0xFEF22972)
                - 8842055) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v53) = (v6 >> 17) + (v54 ^ 0xE59A2CCD) - ((2 * ((v6 >> 17) + (v54 ^ 0xE59A2CCD))) & 0x834EAC56) + 1101485611;
  int v80 = v53 ^ 0x41A7562B;
  HIDWORD(v6) = v97
              + v77
              - 733373456
              + (((v53 ^ 0x41A7562B | v2 ^ 0x86EB46)
                - ((2 * (v53 ^ 0x41A7562B | v2 ^ 0x86EB46)) & 0xCB34599A)
                - 442880819) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  int v81 = (v6 >> 11) + (v53 ^ 0x41A7562B) - ((2 * ((v6 >> 11) + (v53 ^ 0x41A7562B))) & 0x8818D714) - 1005818998;
  unsigned int v82 = v81 ^ 0xC40C6B8A;
  HIDWORD(v6) = v88
              + (v2 ^ 0xFF7914B9)
              + 2106919121
              + (((v82 | v54 ^ 0x1A65D332) - ((2 * (v82 | v54 ^ 0x1A65D332)) & 0x834EAC56) + 1101485611) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v54) = (v6 >> 26) + v82 - ((2 * ((v6 >> 26) + v82)) & 0x208F6C0E) + 273135111;
  HIDWORD(v6) = v95
              + v79
              + 1132231812
              + (((v54 ^ 0x1047B607 | v53 ^ 0xBE58A9D4)
                - 1005818998
                + (~(2 * (v54 ^ 0x1047B607 | v53 ^ 0xBE58A9D4)) | 0x77E728EB)
                + 1) ^ v81);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v83 - 0x30647C9BC9CD7D47) += v54 ^ 0x1047B607;
  LODWORD(v53) = ((2 * ((v6 >> 22) + (v54 ^ 0x1047B607))) & 0xFDE9FD72)
               + (((v6 >> 22) + (v54 ^ 0x1047B607)) ^ 0xFEF4FEB9)
               + 17498439;
  HIDWORD(v6) = result
              + v80
              - 1323737846
              + (((v53 | v81 ^ 0x3BF39475) - ((2 * (v53 | v81 ^ 0x3BF39475)) & 0x208F6C0E) + 273135111) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v53 + (v6 >> 17);
  HIDWORD(v6) = v57 + (v81 ^ 0xC40C6B8A) + 1908956640 + ((v2 | v54 ^ 0xEFB849F8) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v83 - 0x30647C9BC9CD7D43) += v2 + (v6 >> 11);
  *(_DWORD *)(v83 - 0x30647C9BC9CD7D3FLL) += v2;
  *(_DWORD *)(v83 - 0x30647C9BC9CD7D3BLL) += v53;
  return result;
}

uint64_t *sub_22B356D70(uint64_t *result)
{
  uint64_t v1 = *result;
  *(void *)(v1 - 0x21AEEC4F795AEEC7) = 0xFBDC740BB9F3DCDCLL;
  *(void *)(v1 - 0x21AEEC4F795AEEBFLL) = 0x5190721660F77F86;
  *(void *)(v1 - 0x21AEEC4F795AEEB7) = 0x7C3C7B337C3C7B33;
  return result;
}

uint64_t sub_22B356DE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v12
                                                                                                 + 8
                                                                                                 * ((((a12 & 0x4A05E2FE) != 0x74) * (a4 - 3168)) ^ (a4 - 271))))(a1, 4211643493, 116, 439, a5, a6, (a4 - 3157));
}

uint64_t sub_22B356E50()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 595725765) ^ v4)
                                 + 2147217260
                                 + (((v0 - 382418318) & 0x16CB3BDE ^ 0xB8FBE4AE) & v1)
                                 - 1551492907 < ((((v0 - 382418318) & 0x16CB3BDE) + 562) | 0x130u) + 2147479755)
                                * ((412 * ((v0 - 382418318) & 0x16CB3BDE ^ 0xBDA)) ^ 0xCCA)) ^ (v0 - 382418318) & 0x16CB3BDE)))();
}

uint64_t sub_22B356EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int8x16_t v10 = vrev64q_s8(*(int8x16_t *)*(void *)(a1 + 32));
  int8x16_t v11 = vextq_s8(v10, v10, 8uLL);
  v12.i64[0] = 0x2C2C2C2C2C2C2C2CLL;
  v12.i64[1] = 0x2C2C2C2C2C2C2C2CLL;
  int8x16_t v13 = vorrq_s8(v11, v12);
  int8x16_t v14 = vaddq_s8(v11, vornq_s8(v12, v11));
  v12.i64[0] = 0x6E6E6E6E6E6E6E6ELL;
  v12.i64[1] = 0x6E6E6E6E6E6E6E6ELL;
  int8x16_t v15 = vrev64q_s8(veorq_s8(vaddq_s8(v14, vaddq_s8(v13, v12)), (int8x16_t)xmmword_22B4975F0));
  *(int8x16_t *)(v9 - 192) = vextq_s8(v15, v15, 8uLL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)((4 * (((v9 == 192) ^ (a7 + 56)) & 1)) & 0xF7 | (8 * (((v9 == 192) ^ (a7 + 56)) & 1)) | a7)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_22B356F98()
{
  *int v0 = -1;
  JUMPOUT(0x22B356FD4);
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B357050(void *a1)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  uint64_t v1 = a1[2];
  int v2 = (_DWORD *)*a1;
  unsigned int v84 = (*(_DWORD *)*a1 ^ 0x76FFAF2D) - 1074823680 + ((2 * *(_DWORD *)*a1) & 0xEDFF5E5A);
  unsigned int v85 = (v2[1] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[1]) & 0xEDFF5E5A);
  unsigned int v86 = (v2[2] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[2]) & 0xEDFF5E5A);
  unsigned int v87 = (v2[3] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[3]) & 0xEDFF5E5A);
  unsigned int v88 = (v2[4] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[4]) & 0xEDFF5E5A);
  unsigned int v89 = (v2[5] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[5]) & 0xEDFF5E5A);
  unsigned int v90 = (v2[6] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[6]) & 0xEDFF5E5A);
  unsigned int v91 = (v2[7] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[7]) & 0xEDFF5E5A);
  unsigned int v92 = (v2[8] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[8]) & 0xEDFF5E5A);
  unsigned int v93 = (v2[9] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[9]) & 0xEDFF5E5A);
  unsigned int v94 = (v2[10] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[10]) & 0xEDFF5E5A);
  unsigned int v95 = (v2[11] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[11]) & 0xEDFF5E5A);
  unsigned int v96 = (v2[12] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[12]) & 0xEDFF5E5A);
  unsigned int v97 = (v2[13] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[13]) & 0xEDFF5E5A);
  unsigned int v98 = (v2[14] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[14]) & 0xEDFF5E5A);
  unsigned int v99 = (v2[15] ^ 0x76FFAF2D) - 1074823680 + ((2 * v2[15]) & 0xEDFF5E5A);
  uint64_t v83 = v1;
  int v3 = *(_DWORD *)(v1 - 0x58EC2842BB8F6B6FLL);
  int v4 = *(_DWORD *)(v1 - 0x58EC2842BB8F6B6BLL);
  int v5 = *(_DWORD *)(v1 - 0x58EC2842BB8F6B67);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x58EC2842BB8F6B73) + v84 - 1602521269 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  int v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0x251D03B8) + 311329244;
  HIDWORD(v6) = v5 + v85 - 1311208919 + (v3 & (v7 ^ 0x128E81DC) | v4 & ~(v7 ^ 0x128E81DC));
  LODWORD(v6) = HIDWORD(v6);
  int v8 = (v6 >> 20) + (v7 ^ 0x128E81DC) - ((2 * ((v6 >> 20) + (v7 ^ 0x128E81DC))) & 0x8E95C2F4) - 951393926;
  HIDWORD(v6) = v4 + v86 - 315538514 + ((v8 ^ 0xC74AE17A) & (v7 ^ (v3 - ((2 * v3) & 0x251D03B8) + 311329244)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0xC74AE17A) - ((2 * ((v6 >> 15) + (v8 ^ 0xC74AE17A))) & 0xF26EA60) - 2020379344;
  HIDWORD(v6) = v3
              + v87
              - 1966169663
              + ((((v1 ^ 0x87937530) & (v7 ^ 0xD5C460A6 ^ v8))
                - ((2 * ((v1 ^ 0x87937530) & (v7 ^ 0xD5C460A6 ^ v8))) & 0x251D03B8)
                + 311329244) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  int v9 = (v6 >> 10) + (v1 ^ 0x87937530) - ((2 * ((v6 >> 10) + (v1 ^ 0x87937530))) & 0xAC7334EA) - 700867979;
  unsigned int v10 = v9 ^ 0xD6399A75;
  HIDWORD(v6) = v88
              + (v7 ^ 0x128E81DC)
              - 1098063230
              + ((((v9 ^ 0xD6399A75) & (v8 ^ 0x40D9944A ^ v1))
                - ((2 * ((v9 ^ 0xD6399A75) & (v8 ^ 0x40D9944A ^ v1))) & 0x8E95C2F4)
                - 951393926) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  int v11 = (v6 >> 25) + (v9 ^ 0xD6399A75) - ((2 * ((v6 >> 25) + (v9 ^ 0xD6399A75))) & 0xA107603C) - 796676066;
  LODWORD(v2) = v11 ^ 0xD083B01E;
  HIDWORD(v6) = v89
              + (v8 ^ 0xC74AE17A)
              + 278436093
              + ((((v11 ^ 0xD083B01E) & (v1 ^ 0x51AAEF45 ^ v9))
                - ((2 * ((v11 ^ 0xD083B01E) & (v1 ^ 0x51AAEF45 ^ v9))) & 0xF26EA60)
                - 2020379344) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  int v12 = (v6 >> 20) + (v11 ^ 0xD083B01E) - ((2 * ((v6 >> 20) + (v11 ^ 0xD083B01E))) & 0x23A61AA0) + 299044176;
  HIDWORD(v6) = v90
              + (v1 ^ 0x87937530)
              + 1900091622
              + ((((v12 ^ 0x11D30D50) & (v9 ^ 0x6BA2A6B ^ v11))
                - 700867979
                + (~(2 * ((v12 ^ 0x11D30D50) & (v9 ^ 0x6BA2A6B ^ v11))) | 0x538CCB15)
                + 1) ^ v9);
  LODWORD(v6) = HIDWORD(v6);
  int v13 = (v6 >> 15) + (v12 ^ 0x11D30D50) - ((2 * ((v6 >> 15) + (v12 ^ 0x11D30D50))) & 0xB180D698) + 1489005388;
  HIDWORD(v6) = v91
              + v10
              - 967350316
              + ((((v13 ^ 0x58C06B4C) & (v11 ^ 0xC150BD4E ^ v12))
                - ((2 * ((v13 ^ 0x58C06B4C) & (v11 ^ 0xC150BD4E ^ v12))) & 0xA107603C)
                - 796676066) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  int v14 = (v6 >> 10) + (v13 ^ 0x58C06B4C) - ((2 * ((v6 >> 10) + (v13 ^ 0x58C06B4C))) & 0xED242D58) - 158198100;
  HIDWORD(v6) = v92
              + v2
              + 848391083
              + ((((v14 ^ 0xF69216AC) & (v12 ^ 0x4913661C ^ v13))
                - ((2 * ((v14 ^ 0xF69216AC) & (v12 ^ 0x4913661C ^ v13))) & 0x23A61AA0)
                + 299044176) ^ v12);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 25) + (v14 ^ 0xF69216AC) - ((2 * ((v6 >> 25) + (v14 ^ 0xF69216AC))) & 0x99B5DA48) - 858067676;
  unsigned int v15 = v2 ^ 0xCCDAED24;
  HIDWORD(v6) = v93
              + (v12 ^ 0x11D30D50)
              + 1414908546
              + ((((v2 ^ 0xCCDAED24) & (v13 ^ 0xAE527DE0 ^ v14))
                - ((2 * ((v2 ^ 0xCCDAED24) & (v13 ^ 0xAE527DE0 ^ v14))) & 0xB180D698)
                + 1489005388) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20)
              + (v2 ^ 0xCCDAED24)
              - ((2 * ((v6 >> 20) + (v2 ^ 0xCCDAED24))) & 0x9934279E)
              - 862317617;
  int v16 = v1 ^ 0xCC9A13CF;
  HIDWORD(v6) = v94
              + (v13 ^ 0x58C06B4C)
              - 921686396
              + ((((v1 ^ 0xCC9A13CF) & (v14 ^ 0x3A48FB88 ^ v2))
                - ((2 * ((v1 ^ 0xCC9A13CF) & (v14 ^ 0x3A48FB88 ^ v2))) & 0xED242D58)
                - 158198100) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  int v17 = (v6 >> 15) + (v1 ^ 0xCC9A13CF) - ((2 * ((v6 >> 15) + (v1 ^ 0xCC9A13CF))) & 0xC6F3B4A8) - 478553516;
  HIDWORD(v6) = v95
              + (v14 ^ 0xF69216AC)
              + 1382918801
              + ((((v17 ^ 0xE379DA54) & (v2 ^ 0x40FEEB ^ v1))
                - ((2 * ((v17 ^ 0xE379DA54) & (v2 ^ 0x40FEEB ^ v1))) & 0x99B5DA48)
                - 858067676) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 10) + (v17 ^ 0xE379DA54) - ((2 * ((v6 >> 10) + (v17 ^ 0xE379DA54))) & 0x310DFCEC) + 411500150;
  unsigned int v18 = v2 ^ 0x1886FE76;
  HIDWORD(v6) = v96
              + v15
              + 882959349
              + ((((v2 ^ 0x1886FE76) & (v1 ^ 0x2FE3C99B ^ v17))
                - ((2 * ((v2 ^ 0x1886FE76) & (v1 ^ 0x2FE3C99B ^ v17))) & 0x9934279E)
                - 862317617) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25)
              + (v2 ^ 0x1886FE76)
              - ((2 * ((v6 >> 25) + (v2 ^ 0x1886FE76))) & 0x64C9B8FE)
              - 1302012801;
  int v19 = v1 ^ 0xB264DC7F;
  HIDWORD(v6) = v97
              + v16
              - 961985434
              + ((((v1 ^ 0xB264DC7F) & (v17 ^ 0xFBFF2422 ^ v2))
                - ((2 * ((v1 ^ 0xB264DC7F) & (v17 ^ 0xFBFF2422 ^ v2))) & 0xC6F3B4A8)
                - 478553516) ^ v17);
  LODWORD(v6) = HIDWORD(v6);
  int v20 = (v6 >> 20) + (v1 ^ 0xB264DC7F) - ((2 * ((v6 >> 20) + (v1 ^ 0xB264DC7F))) & 0xCF02413A) + 1736515741;
  HIDWORD(v6) = v98
              + (v17 ^ 0xE379DA54)
              + 1871320673
              + ((((v20 ^ 0x6781209D) & (v2 ^ 0xAAE22209 ^ v1))
                - ((2 * ((v20 ^ 0x6781209D) & (v2 ^ 0xAAE22209 ^ v1))) & 0x310DFCEC)
                + 411500150) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 15) + (v20 ^ 0x6781209D) - ((2 * ((v6 >> 15) + (v20 ^ 0x6781209D))) & 0x28398734) + 337429402;
  unsigned int v21 = v2 ^ 0x141CC39A;
  HIDWORD(v6) = v99
              + v18
              + 314890996
              + ((((v2 ^ 0x141CC39A) & (v1 ^ 0xD5E5FCE2 ^ v20))
                - 1302012801
                + (~(2 * ((v2 ^ 0x141CC39A) & (v1 ^ 0xD5E5FCE2 ^ v20))) | 0x9B364701)
                + 1) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10)
              + (v2 ^ 0x141CC39A)
              - ((2 * ((v6 >> 10) + (v2 ^ 0x141CC39A))) & 0xC2FA433E)
              - 511893089;
  HIDWORD(v6) = v85
              + v19
              - 1087440843
              + ((((v2 ^ 0xF561E205 ^ v1) & (v20 ^ 0x6781209D))
                - ((2 * ((v2 ^ 0xF561E205 ^ v1) & (v20 ^ 0x6781209D))) & 0x28398734)
                + 337429402) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v22 = v1 ^ 0xE17D219F;
  LODWORD(v2) = (v6 >> 27) + (v1 ^ 0xE17D219F) - ((2 * ((v6 >> 27) + (v1 ^ 0xE17D219F))) & 0xC9EC34F4) - 453633414;
  HIDWORD(v6) = v90
              + (v20 ^ 0x6781209D)
              - 1991145965
              + ((((v1 ^ 0x58B3BE5 ^ v2) & v21)
                - ((2 * ((v1 ^ 0x58B3BE5 ^ v2) & v21)) & 0xC2FA433E)
                - 511893089) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v23 = v2 ^ 0xE4F61A7A;
  LODWORD(v1) = (v6 >> 23)
              + (v2 ^ 0xE4F61A7A)
              - ((2 * ((v6 >> 23) + (v2 ^ 0xE4F61A7A))) & 0xA025E94E)
              - 804064089;
  HIDWORD(v6) = v95
              + v21
              - 277926620
              + ((((v2 ^ 0x34E4EEDD ^ v1) & v22)
                - ((2 * ((v2 ^ 0x34E4EEDD ^ v1) & v22)) & 0xC9EC34F4)
                - 453633414) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v24 = v1 ^ 0xD012F4A7;
  LODWORD(v2) = (v6 >> 18) + (v1 ^ 0xD012F4A7) - ((2 * ((v6 >> 18) + (v1 ^ 0xD012F4A7))) & 0x2C7BFD6A) - 1774321995;
  HIDWORD(v6) = v84
              + v22
              - 1295541635
              + ((((v1 ^ 0x462F0A12 ^ v2) & v23)
                - ((2 * ((v1 ^ 0x462F0A12 ^ v2) & v23)) & 0xA025E94E)
                - 804064089) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v25 = v2 ^ 0x963DFEB5;
  LODWORD(v1) = (v6 >> 12)
              + (v2 ^ 0x963DFEB5)
              - ((2 * ((v6 >> 12) + (v2 ^ 0x963DFEB5))) & 0x2AA7171E)
              - 1789686897;
  HIDWORD(v6) = v89
              + v23
              - 1623203024
              + ((((v2 ^ 0x36E753A ^ v1) & v24)
                - ((2 * ((v2 ^ 0x36E753A ^ v1) & v24)) & 0x2C7BFD6A)
                - 1774321995) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v26 = v1 ^ 0x95538B8F;
  LODWORD(v2) = (v6 >> 27) + (v1 ^ 0x95538B8F) + 1207689548 + (~(2 * ((v6 >> 27) + (v1 ^ 0x95538B8F))) | 0x70083D67) + 1;
  HIDWORD(v6) = v94
              + v24
              - 883628250
              + ((((v1 ^ 0xD2A86AC3 ^ v2) & v25)
                - ((2 * ((v1 ^ 0xD2A86AC3 ^ v2) & v25)) & 0x2AA7171E)
                - 1789686897) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v27 = v2 ^ 0x47FBE14C;
  LODWORD(v1) = (v6 >> 23)
              + (v2 ^ 0x47FBE14C)
              - ((2 * ((v6 >> 23) + (v2 ^ 0x47FBE14C))) & 0x132226D0)
              + 160502632;
  HIDWORD(v6) = v99
              + v25
              - 1582122668
              + ((((v2 ^ 0x4E6AF224 ^ v1) & v26)
                - ((2 * ((v2 ^ 0x4E6AF224 ^ v1) & v26)) & 0x8FF7C298)
                + 1207689548) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v28 = v1 ^ 0x9911368;
  LODWORD(v2) = (v6 >> 18) + (v1 ^ 0x9911368) - ((2 * ((v6 >> 18) + (v1 ^ 0x9911368))) & 0xF542FA78) + 2057403708;
  HIDWORD(v6) = v88
              + v26
              - 1327182181
              + ((((v1 ^ 0x73306E54 ^ v2) & v27)
                - ((2 * ((v1 ^ 0x73306E54 ^ v2) & v27)) & 0x132226D0)
                + 160502632) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v29 = v2 ^ 0x7AA17D3C;
  LODWORD(v1) = (v6 >> 12)
              + (v2 ^ 0x7AA17D3C)
              - ((2 * ((v6 >> 12) + (v2 ^ 0x7AA17D3C))) & 0x77B23CDA)
              - 1143398803;
  HIDWORD(v6) = v93
              + v27
              - 353197895
              + ((((v2 ^ 0xC1786351 ^ v1) & v28)
                - ((2 * ((v2 ^ 0xC1786351 ^ v1) & v28)) & 0xF542FA78)
                + 2057403708) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v30 = v1 ^ 0xBBD91E6D;
  LODWORD(v2) = (v6 >> 27) + (v1 ^ 0xBBD91E6D) - ((2 * ((v6 >> 27) + (v1 ^ 0xBBD91E6D))) & 0x136D39BE) - 1984520993;
  HIDWORD(v6) = v98
              + v28
              - 1941448023
              + ((((v1 ^ 0x326F82B2 ^ v2) & v29)
                - ((2 * ((v1 ^ 0x326F82B2 ^ v2) & v29)) & 0x77B23CDA)
                - 1143398803) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v31 = v2 ^ 0x89B69CDF;
  LODWORD(v1) = (v6 >> 23)
              + (v2 ^ 0x89B69CDF)
              - ((2 * ((v6 >> 23) + (v2 ^ 0x89B69CDF))) & 0x9084417C)
              + 1212293310;
  HIDWORD(v6) = v87
              + v29
              - 1109008294
              + ((((v2 ^ 0xC1F4BC61 ^ v1) & v30)
                - ((2 * ((v2 ^ 0xC1F4BC61 ^ v1) & v30)) & 0x136D39BE)
                - 1984520993) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v32 = v1 ^ 0x484220BE;
  LODWORD(v2) = (v6 >> 18) + (v1 ^ 0x484220BE) - ((2 * ((v6 >> 18) + (v1 ^ 0x484220BE))) & 0x6E486542) + 925119137;
  HIDWORD(v6) = v92
              + v30
              + 241887168
              + ((((v1 ^ 0x7F66121F ^ v2) & v31)
                - ((2 * ((v1 ^ 0x7F66121F ^ v2) & v31)) & 0x9084417C)
                + 1212293310) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 12)
              + (v2 ^ 0x372432A1)
              - ((2 * ((v6 >> 12) + (v2 ^ 0x372432A1))) & 0x220D7E6A)
              + 285654837;
  HIDWORD(v6) = v97
              + v31
              + 1928641496
              + ((((v2 ^ 0x26228D94 ^ v1) & v32)
                - ((2 * ((v2 ^ 0x26228D94 ^ v1) & v32)) & 0x6E486542)
                + 925119137) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v33 = (v6 >> 27) + (v1 ^ 0x1106BF35) - ((2 * ((v6 >> 27) + (v1 ^ 0x1106BF35))) & 0x542F978A) - 1441281083;
  HIDWORD(v6) = v86
              + v32
              - 973048117
              + ((((v1 ^ 0xBB1174F0 ^ v33) & (v2 ^ 0x372432A1))
                - ((2 * ((v1 ^ 0xBB1174F0 ^ v33) & (v2 ^ 0x372432A1))) & 0x220D7E6A)
                + 285654837) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  int v34 = (v6 >> 23) + (v33 ^ 0xAA17CBC5) - ((2 * ((v6 >> 23) + (v33 ^ 0xAA17CBC5))) & 0x57E5AC32) - 1410148839;
  HIDWORD(v6) = v91
              + (v2 ^ 0x372432A1)
              + 813684140
              + ((((v33 ^ 0x1E51DDC ^ v34) & (v1 ^ 0x1106BF35))
                - ((2 * ((v33 ^ 0x1E51DDC ^ v34) & (v1 ^ 0x1106BF35))) & 0x542F978A)
                - 1441281083) ^ v33);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v35 = v34 ^ 0xABF2D619;
  int v36 = (v6 >> 18) + (v34 ^ 0xABF2D619) + 1496470815 - ((2 * ((v6 >> 18) + (v34 ^ 0xABF2D619))) & 0xB264AA3E);
  HIDWORD(v6) = v96
              + (v1 ^ 0x1106BF35)
              + 1446715229
              + ((((v34 ^ 0xF2C08306 ^ v36) & (v33 ^ 0xAA17CBC5))
                - ((2 * ((v34 ^ 0xF2C08306 ^ v36) & (v33 ^ 0xAA17CBC5))) & 0x57E5AC32)
                - 1410148839) ^ v34);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v37 = (v6 >> 12) + (v36 ^ 0x5932551F) - ((2 * ((v6 >> 12) + (v36 ^ 0x5932551F))) & 0x7EB13BF2) + 1062772217;
  uint64_t v38 = 4 * (v33 & 0xF ^ 5u);
  unsigned int v39 = *(unsigned int *)((char *)&v84 + v38);
  uint64_t v40 = 4
      * (((v6 >> 12)
        + (v36 ^ 0x1F)
        - ((2 * ((v6 >> 12) + (v36 ^ 0x1F))) & 0xF2)
        - 7) & 0xF ^ 9u);
  *(unsigned int *)((char *)&v84 + v38) = *(unsigned int *)((char *)&v84 + v40);
  uint64_t v41 = 4 * ((-17 - (_BYTE)v36) & 0xF);
  *(unsigned int *)((char *)&v84 + v40) = *(unsigned int *)((char *)&v84 + v41);
  uint64_t v42 = 4 * (v34 & 0xF ^ 9u);
  *(unsigned int *)((char *)&v84 + v41) = *(unsigned int *)((char *)&v84 + v42);
  uint64_t v43 = 4 * ((v33 >> 4) ^ 0xCu);
  *(unsigned int *)((char *)&v84 + v42) = *(unsigned int *)((char *)&v84 + v43);
  uint64_t v44 = 4 * (~(v37 >> 4) & 0xF);
  *(unsigned int *)((char *)&v84 + v43) = *(unsigned int *)((char *)&v84 + v44);
  uint64_t v45 = 4 * ((v36 >> 4) ^ 1u);
  *(unsigned int *)((char *)&v84 + v44) = *(unsigned int *)((char *)&v84 + v45);
  uint64_t v46 = 4 * ((v34 >> 4) ^ 1u);
  *(unsigned int *)((char *)&v84 + v45) = *(unsigned int *)((char *)&v84 + v46);
  *(unsigned int *)((char *)&v84 + v46) = v39;
  HIDWORD(v6) = v89
              + (v33 ^ 0xAA17CBC5)
              - 922022891
              + (((v36 ^ 0x666AC8E6 ^ v37) - ((2 * (v36 ^ 0x666AC8E6 ^ v37)) & 0x57E5AC32) - 1410148839) ^ v34);
  LODWORD(v6) = HIDWORD(v6);
  int v47 = (v6 >> 28) + (v37 ^ 0x3F589DF9) - ((2 * ((v6 >> 28) + (v37 ^ 0x3F589DF9))) & 0x32470704) + 421757826;
  unsigned int v48 = v93;
  HIDWORD(v6) = v92
              + v35
              + 1350748500
              + (((v37 ^ 0x267B1E7B ^ v47) - ((2 * (v37 ^ 0x267B1E7B ^ v47)) & 0xB264AA3E) + 1496470815) ^ v36);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 21) + (v47 ^ 0x19238382) - ((2 * ((v6 >> 21) + (v47 ^ 0x19238382))) & 0x9000E6F2) - 939494535;
  HIDWORD(v6) = v95
              + (v36 ^ 0x5932551F)
              + 917386229
              + (((v45 ^ v47 ^ 0xD123F0FB) - 2 * ((v45 ^ v47 ^ 0xD123F0FB) & 0x3F589DFD ^ (v45 ^ v47) & 4) + 1062772217) ^ v37);
  LODWORD(v6) = HIDWORD(v6);
  int v49 = v45 ^ 0xC8007379;
  LODWORD(v46) = (v6 >> 16) + (v45 ^ 0xC8007379) - ((2 * ((v6 >> 16) + (v45 ^ 0xC8007379))) & 0x9330A8B6) - 912763813;
  HIDWORD(v6) = v98
              + (v37 ^ 0x3F589DF9)
              - 956953889
              + (((v46 ^ v45 ^ 0x1982722) - 2 * ((v46 ^ v45 ^ 0x1982722) & 0x19238393 ^ (v46 ^ v45) & 0x11) + 421757826) ^ v47);
  LODWORD(v6) = HIDWORD(v6);
  int v50 = v46 ^ 0xC998545B;
  int v51 = (v6 >> 9) + (v46 ^ 0xC998545B) - ((2 * ((v6 >> 9) + (v46 ^ 0xC998545B))) & 0x91DF326) - 2071004781;
  HIDWORD(v6) = v85
              + (v47 ^ 0x19238382)
              + 1842330903
              + (((v51 ^ v46 ^ 0x4D16ADC8) - 2 * ((v51 ^ v46 ^ 0x4D16ADC8) & 0x4800737D ^ (v51 ^ v46) & 4) - 939494535) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v51 ^ 0x848EF993;
  LODWORD(v45) = (v6 >> 28) + (v51 ^ 0x848EF993) - ((2 * ((v6 >> 28) + (v51 ^ 0x848EF993))) & 0xA9A2E2EA) + 1423012213;
  HIDWORD(v6) = v88
              + v49
              + 351249020
              + (((v51 ^ 0xD05F88E6 ^ v45) - ((2 * (v51 ^ 0xD05F88E6 ^ v45)) & 0x9330A8B6) - 912763813) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  int v52 = v45 ^ 0x54D17175;
  LODWORD(v46) = (v6 >> 21) + (v45 ^ 0x54D17175) - ((2 * ((v6 >> 21) + (v45 ^ 0x54D17175))) & 0x62118500) - 1324825984;
  HIDWORD(v6) = v91
              + v50
              - 1077141965
              + (((v45 ^ 0xE5D9B3F5 ^ v46) - ((2 * (v45 ^ 0xE5D9B3F5 ^ v46)) & 0x91DF326) - 2071004781) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  int v53 = v46 ^ 0xB108C280;
  int v54 = (v6 >> 16) + (v46 ^ 0xB108C280) - ((2 * ((v6 >> 16) + (v46 ^ 0xB108C280))) & 0x1EB7884A) + 257672229;
  HIDWORD(v6) = v94
              + v2
              - 2016374973
              + (((v54 ^ v46 ^ 0xBE5306A5) - 2 * ((v54 ^ v46 ^ 0xBE5306A5) & 0x54D1717D ^ (v54 ^ v46) & 8) + 1423012213) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v54 ^ 0xF5BC425;
  LODWORD(v45) = (v6 >> 9) + (v54 ^ 0xF5BC425) - ((2 * ((v6 >> 9) + (v54 ^ 0xF5BC425))) & 0x270AF480) - 1819968960;
  HIDWORD(v6) = v97
              + v52
              - 240365159
              + (((v54 ^ 0x9CDEBE65 ^ v45) - 1324825984 + (~(2 * (v54 ^ 0x9CDEBE65 ^ v45)) | 0x9DEE7AFF) + 1) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  int v55 = v45 ^ 0x93857A40;
  LODWORD(v46) = (v6 >> 28) + (v45 ^ 0x93857A40) - ((2 * ((v6 >> 28) + (v45 ^ 0x93857A40))) & 0x8F8A4E20) + 1204102928;
  HIDWORD(v6) = v84
              + v53
              - 1280181555
              + (((v45 ^ 0xD4405D50 ^ v46) + 257672229 + (~(2 * (v45 ^ 0xD4405D50 ^ v46)) | 0xE14877B5) + 1) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  int v56 = v46 ^ 0x47C52710;
  int v57 = (v6 >> 21) + (v46 ^ 0x47C52710) - ((2 * ((v6 >> 21) + (v46 ^ 0x47C52710))) & 0x878F5E8E) - 1010323641;
  uint64_t result = v86;
  HIDWORD(v6) = v87
              + v2
              - 1644166312
              + (((v46 ^ 0x84028857 ^ v57) - ((2 * (v46 ^ 0x84028857 ^ v57)) & 0x270AF480) - 1819968960) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 16) + (v57 ^ 0xC3C7AF47) - ((2 * ((v6 >> 16) + (v57 ^ 0xC3C7AF47))) & 0x7E53BB82) - 1087775295;
  HIDWORD(v6) = v90
              + v55
              - 845615144
              + (((v57 ^ 0x7CEE7286 ^ v45) - ((2 * (v57 ^ 0x7CEE7286 ^ v45)) & 0x8F8A4E20) + 1204102928) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  int v59 = v45 ^ 0xBF29DDC1;
  LODWORD(v46) = (v6 >> 9) + (v45 ^ 0xBF29DDC1) - ((2 * ((v6 >> 9) + (v45 ^ 0xBF29DDC1))) & 0x546DC886) + 708240451;
  HIDWORD(v6) = v93
              + v56
              - 1562008820
              + (((v46 ^ v45 ^ 0x951F3982)
                - 2 * ((v46 ^ v45 ^ 0x951F3982) & 0x43C7AF5F ^ (v46 ^ v45) & 0x18)
                - 1010323641) ^ v57);
  LODWORD(v6) = HIDWORD(v6);
  int v60 = v46 ^ 0x2A36E443;
  int v61 = (v6 >> 28) + (v46 ^ 0x2A36E443) - ((2 * ((v6 >> 28) + (v46 ^ 0x2A36E443))) & 0x1CBF0CBA) + 241141341;
  HIDWORD(v6) = v96
              + (v57 ^ 0xC3C7AF47)
              - 1343460168
              + (((v46 ^ 0x2469621E ^ v61) - ((2 * (v46 ^ 0x2469621E ^ v61)) & 0x7E53BB82) - 1087775295) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v61 ^ 0xE5F865D;
  LODWORD(v45) = (v6 >> 21) + (v61 ^ 0xE5F865D) - ((2 * ((v6 >> 21) + (v61 ^ 0xE5F865D))) & 0x9152D876) + 1219062843;
  HIDWORD(v6) = v99
              + v59
              - 390901813
              + (((v61 ^ 0x46F6EA66 ^ v45) - ((2 * (v61 ^ 0x46F6EA66 ^ v45)) & 0x546DC886) + 708240451) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  int v62 = v45 ^ 0x48A96C3B;
  LODWORD(v46) = (v6 >> 16) + (v45 ^ 0x48A96C3B) - ((2 * ((v6 >> 16) + (v45 ^ 0x48A96C3B))) & 0x5E3213FC) + 790170110;
  HIDWORD(v6) = v86
              + v60
              - 1916982984
              + (((v45 ^ 0x67B065C5 ^ v46) - ((2 * (v45 ^ 0x67B065C5 ^ v46)) & 0x1CBF0CBA) + 241141341) ^ v61);
  LODWORD(v6) = HIDWORD(v6);
  int v63 = (v6 >> 9) + (v46 ^ 0x2F1909FE) - ((2 * ((v6 >> 9) + (v46 ^ 0x2F1909FE))) & 0xBC659E08) - 567095548;
  unsigned int v64 = v63 ^ 0xDE32CF04;
  HIDWORD(v6) = v84
              + v2
              - 1120275177
              + (((v64 | v45 ^ 0xB75693C4) + 790170110 + (~(2 * (v64 | v45 ^ 0xB75693C4)) | 0xA1CDEC03) + 1) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 26) + v64 - ((2 * ((v6 >> 26) + v64)) & 0x520B62DA) + 688238957;
  int v65 = v45 ^ 0x2905B16D;
  HIDWORD(v6) = v91
              + v62
              + 205247082
              + (((v45 ^ 0x2905B16D | v46 ^ 0xD0E6F601)
                - ((2 * (v45 ^ 0x2905B16D | v46 ^ 0xD0E6F601)) & 0xBC659E08)
                - 567095548) ^ v63);
  LODWORD(v6) = HIDWORD(v6);
  int v66 = (v6 >> 22) + (v45 ^ 0x2905B16D) - ((2 * ((v6 >> 22) + (v45 ^ 0x2905B16D))) & 0x7F9E06AC) - 1076952234;
  unsigned int v67 = v66 ^ 0xBFCF0356;
  HIDWORD(v6) = v98
              + (v46 ^ 0x2F1909FE)
              + 1956968058
              + (((v67 | v63 ^ 0x21CD30FB) - ((2 * (v67 | v63 ^ 0x21CD30FB)) & 0x520B62DA) + 688238957) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 17) + v67 - ((2 * ((v6 >> 17) + v67)) & 0x8F6F516C) - 944265034;
  unsigned int v68 = v2 ^ 0xC7B7A8B6;
  HIDWORD(v6) = v89
              + (v63 ^ 0xDE32CF04)
              - 979078388
              + (((v2 ^ 0xC7B7A8B6 | v45 ^ 0xD6FA4E92)
                - ((2 * (v2 ^ 0xC7B7A8B6 | v45 ^ 0xD6FA4E92)) & 0x7F9E06AC)
                - 1076952234) ^ v66);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 11)
               + (v2 ^ 0xC7B7A8B6)
               - ((2 * ((v6 >> 11) + (v2 ^ 0xC7B7A8B6))) & 0x969A912A)
               - 884127595;
  int v69 = v45 ^ 0xCB4D4895;
  HIDWORD(v6) = v96
              + v65
              + 778841238
              + (((v69 | v66 ^ 0x4030FCA9) - ((2 * (v69 | v66 ^ 0x4030FCA9)) & 0x8F6F516C) - 944265034) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v70 = (v6 >> 26) + v69 - ((2 * ((v6 >> 26) + v69)) & 0x50985472) - 1471403463;
  unsigned int v71 = v70 ^ 0xA84C2A39;
  HIDWORD(v6) = v87
              + v67
              + 1478336357
              + (((v70 ^ 0xA84C2A39 | v2 ^ 0x38485749)
                - ((2 * (v70 ^ 0xA84C2A39 | v2 ^ 0x38485749)) & 0x969A912A)
                - 884127595) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 22) + (v70 ^ 0xA84C2A39) - ((2 * ((v6 >> 22) + (v70 ^ 0xA84C2A39))) & 0xA51BA196) - 762457909;
  unsigned int v72 = v2 ^ 0xD28DD0CB;
  HIDWORD(v6) = v94
              + v68
              - 922695856
              + (((v72 | v45 ^ 0x34B2B76A) - ((2 * (v72 | v45 ^ 0x34B2B76A)) & 0x50985472) - 1471403463) ^ v70);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 17) + v72 - ((2 * ((v6 >> 17) + v72)) & 0xF17C0DB4) + 2025719514;
  int v73 = v45 ^ 0x78BE06DA;
  HIDWORD(v6) = v85
              + v69
              + 1318400164
              + (((v45 ^ 0x78BE06DA | v70 ^ 0x57B3D5C6)
                - ((2 * (v45 ^ 0x78BE06DA | v70 ^ 0x57B3D5C6)) & 0xA51BA196)
                - 762457909) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v74 = (v6 >> 11) + (v45 ^ 0x78BE06DA) + 398278036 + (~(2 * ((v6 >> 11) + (v45 ^ 0x78BE06DA))) | 0xD08584D7) + 1;
  int v75 = v74 ^ 0x17BD3D94;
  HIDWORD(v6) = v92
              + v71
              + 951669026
              + (((v74 ^ 0x17BD3D94 | v2 ^ 0x2D722F34)
                - ((2 * (v74 ^ 0x17BD3D94 | v2 ^ 0x2D722F34)) & 0xF17C0DB4)
                + 2025719514) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 26) + (v74 ^ 0x17BD3D94) - ((2 * ((v6 >> 26) + (v74 ^ 0x17BD3D94))) & 0x95613FD8) - 894394388;
  unsigned int v76 = v2 ^ 0xCAB09FEC;
  HIDWORD(v6) = v99
              + v72
              - 952256077
              + (((v76 | v45 ^ 0x8741F925) - ((2 * (v76 | v45 ^ 0x8741F925)) & 0x2F7A7B28) + 398278036) ^ v74);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 22) + v76 - ((2 * ((v6 >> 22) + v76)) & 0xA37F2C0C) - 775973370;
  int v77 = v45 ^ 0xD1BF9606;
  HIDWORD(v6) = v90
              + v73
              + 1813124583
              + (((v45 ^ 0xD1BF9606 | v74 ^ 0xE842C26B)
                - ((2 * (v45 ^ 0xD1BF9606 | v74 ^ 0xE842C26B)) & 0x95613FD8)
                - 894394388) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v78 = (v6 >> 17) + (v45 ^ 0xD1BF9606) - ((2 * ((v6 >> 17) + (v45 ^ 0xD1BF9606))) & 0x73F7B1FA) - 1174677251;
  unsigned int v79 = v78 ^ 0xB9FBD8FD;
  HIDWORD(v6) = v97
              + v75
              + 387507316
              + (((v78 ^ 0xB9FBD8FD | v2 ^ 0x354F6013)
                - ((2 * (v78 ^ 0xB9FBD8FD | v2 ^ 0x354F6013)) & 0xA37F2C0C)
                - 775973370) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  int v80 = (v6 >> 11) + (v78 ^ 0xB9FBD8FD) - ((2 * ((v6 >> 11) + (v78 ^ 0xB9FBD8FD))) & 0xB804766E) - 603833545;
  unsigned int v81 = v80 ^ 0xDC023B37;
  HIDWORD(v6) = v88
              + (v2 ^ 0xCAB09FEC)
              - 1067167403
              + (((v81 | v45 ^ 0x2E4069F9) - ((2 * (v81 | v45 ^ 0x2E4069F9)) & 0x73F7B1FA) - 1174677251) ^ v78);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 26) + v81 - ((2 * ((v6 >> 26) + v81)) & 0xB24812D8) - 651949716;
  HIDWORD(v6) = v95
              + v77
              - 2041854712
              + (((v45 ^ 0xD924096C | v78 ^ 0x46042702)
                - ((2 * (v45 ^ 0xD924096C | v78 ^ 0x46042702)) & 0xB804766E)
                - 603833545) ^ v80);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v83 - 0x58EC2842BB8F6B73) += v45 ^ 0xD924096C;
  int v82 = ((2 * ((v6 >> 22) + (v45 ^ 0xD924096C))) & 0xAFFFB4BE)
      + (((v6 >> 22) + (v45 ^ 0xD924096C)) ^ 0xD7FFDA5F)
      + 671098273;
  HIDWORD(v6) = result
              + v79
              - 202857074
              + (((v82 | v80 ^ 0x23FDC4C8) - ((2 * (v82 | v80 ^ 0x23FDC4C8)) & 0xB24812D8) - 651949716) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v82 + (v6 >> 17);
  HIDWORD(v6) = v48 + (v80 ^ 0xDC023B37) - 1265129884 + ((v2 | v45 ^ 0x26DBF693) ^ v82);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v83 - 0x58EC2842BB8F6B6FLL) += v2 + (v6 >> 11);
  *(_DWORD *)(v83 - 0x58EC2842BB8F6B6BLL) += v2;
  *(_DWORD *)(v83 - 0x58EC2842BB8F6B67) += v82;
  return result;
}

uint64_t sub_22B358BB4(uint64_t result)
{
  *(void *)(v2 - 0x689CF6FF511E74A3) = result + 0x3FB394992CBB4F6FLL;
  *(_DWORD *)(v1 + 24) = -604050357;
  return result;
}

void sub_22B358C00(_DWORD *a1, uint64_t a2)
{
  BOOL v2 = (*a1 + 525051827 + *(_DWORD *)(a2 - 0x48A9B556C05DE57DLL)) < 0xC9;
  __asm { BRAA            X12, X17 }
}

void sub_22B358C60(uint64_t a1)
{
  int v1 = 1990461019 * (((a1 | 0xCCBA46E4) - (a1 & 0xCCBA46E4)) ^ 0xE35EE46D);
  int v2 = *(_DWORD *)(a1 + 24) ^ v1;
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 8) + v1;
  int v5 = *(_DWORD *)(v3 - 0x21AEEC4F795AEEB7);
  *(_DWORD *)(v3 - 0x21AEEC4F795AEEB7) = v5 + 8 * v4 + 1899709280;
  unsigned int v6 = v5 + 8 * v4 + 1040229117;
  BOOL v7 = v6 < v5 - 859480163;
  if ((v5 - 859480163) < 0x4901DAD0 != v6 < 0x4901DAD0) {
    BOOL v7 = (v5 - 859480163) < 0x4901DAD0;
  }
  *(_DWORD *)(v3 - 0x21AEEC4F795AEEB3) += ((v4 - 836278164) >> 29) + v7;
  __asm { BRAA            X8, X17 }
}

void sub_22B358DD4()
{
}

uint64_t sub_22B358DF8@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 2013301698) & 0x87FF6BB7 ^ 0xFFFFF3F7) + (v2 ^ 0x4D3)) * (a2 == a1)) ^ v2)))();
}

uint64_t sub_22B358E40()
{
  int v4 = v0 ^ 0x402;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0xE74)))(v1 - 0x24B64731C5A68327);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * ((909
                                              * (v2 == (((v4 + 593) | 0x154) ^ 0xDBFED6A5)
                                                     + ((v4 + 1551509147) & 0xA385DFFF))) ^ v4)))(v5);
}

void sub_22B358ED4()
{
}

uint64_t sub_22B359038(uint64_t a1)
{
  int v5 = v2 + 1769498433;
  BOOL v6 = v5 < 542576690;
  BOOL v7 = v4 + 1769498433 < v5;
  if (v6 != v4 + 1769498433 < ((v3 + 195) ^ 0xE81) + 542573931) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v3 ^ (4 * v7))))(a1, 1678219538);
}

uint64_t sub_22B3590A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8 * (((*(unsigned __int8 *)(*(void *)(v13 + 8) + 1) == (v12 - 121)) * (((v12 - 929) | 0xE10) ^ 0x973)) ^ v12)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_22B3590E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                                         + 8
                                                                                         * ((3544
                                                                                           * (((v22 + 35) ^ 0x88F4F78E)
                                                                                            + a11 < ((v22 + 2162) | 0x20u) + 2147480780)) ^ v22)))(a1, a2, a3, a4, a5, a22);
}

uint64_t sub_22B359138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, unsigned int a17)
{
  int v19 = a7 ^ (a7 - 527);
  unsigned int v20 = ((v19 + 2612) ^ 0x78E6057A) + a15;
  BOOL v21 = v20 < 0x990A1F4A;
  BOOL v22 = v20 > a17;
  if (a17 < 0x990A1F4A != v21) {
    BOOL v23 = v21;
  }
  else {
    BOOL v23 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8 * ((v23 * ((2 * v19) ^ 0x429)) ^ (v18 + a7 - 418))))(a1, 3755731375);
}

uint64_t sub_22B359144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,unsigned int a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  if (a49 < 0x1D59F90D != (a53 - 89147071) < 0x1D59F90D) {
    BOOL v54 = (a53 - 89147071) < 0x1D59F90D;
  }
  else {
    BOOL v54 = a53 - 89147071 > a49;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)((!v54 * (((a48 & 0xE4F36F8D) + 2234) ^ 0x9A7)) ^ (a3 + 1305))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

void sub_22B35914C()
{
}

void sub_22B359168()
{
  *(_DWORD *)(v0 + 24) = 604092275;
}

uint64_t sub_22B359174(_DWORD *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  unsigned int v2 = 225134719 * ((-2 - ((a1 | 0x4D9738CC) + (~a1 | 0xB268C733))) ^ 0xA4988219);
  unsigned int v3 = a1[4] - v2;
  unsigned int v4 = a1[3] + v2;
  v10[1] = v3
         - 1990461019
         * ((1842346900 - (v10 | 0x6DCFFB94) + (v10 | 0x9230046B)) ^ 0xBDD4A6E2)
         - 430125777;
  int v5 = (char *)*(&off_26DE9F480 + (int)(v3 ^ 0x2B6F8007)) - 8;
  uint64_t result = (*(uint64_t (**)(_DWORD *))&v5[8 * (v3 - 728723765)])(v10);
  unsigned int v7 = v4 - 713647560;
  unsigned int v8 = 0;
  switch(v7)
  {
    case 0u:
      break;
    case 1u:
      unsigned int v8 = 2;
      break;
    case 2u:
      unsigned int v8 = 1;
      break;
    case 3u:
      unsigned int v8 = 3;
      break;
    case 5u:
      unsigned int v8 = 5;
      break;
    case 6u:
      unsigned int v8 = 4;
      break;
    default:
      a1[12] = 604092407;
      return result;
  }
  uint64_t v9 = *(void *)&v5[8
                    * ((((*(uint64_t (**)(void, uint64_t))&v5[8 * (v3 - 728723849)])((*((_DWORD *)*(&off_26DE9F480 + (int)(v3 - 728727787)) + 6 * v8 + 1)- 1801476204), 2970849626) == 0)* ((v3 + 2000649362) & 0x5D5107EE ^ 0x5CB)) ^ (v3 - 728725650))];
  __asm { BRAA            X8, X17 }
  return result;
}

uint64_t sub_22B359368@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((2325
                                * (((*(unsigned __int8 *)(a1 + 5) - 13) ^ v5)
                                 + v3
                                 + (((a2 - 379434286) & 0x169DBBD1 ^ (v4 + 1392)) & (2
                                                                                   * (*(unsigned __int8 *)(a1 + 5) - 13))) == a3)) ^ a2)))();
}

uint64_t sub_22B3593C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  LODWORD(STACK[0x268]) = 1735343901;
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8 * (v54 ^ 0x6B1)))(1576, 2940923044);
  unint64_t v58 = STACK[0x270];
  STACK[0x490] = v57 + v55;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (int)(((v57 == 0) * (((v54 - 1299) | 0x811) + (v54 ^ 0xFFFFFAE0))) ^ v54)))(v57, v59, v60, v61, v62, v63, &STACK[0x310], v64, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_22B359440@<X0>(void *a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  LODWORD(STACK[0x424]) = STACK[0x258];
  uint64_t v56 = (2 * (a2 ^ 0xCEC)) ^ 0x1A94u;
  LODWORD(STACK[0x4A8]) = STACK[0x260];
  a1[14] = STACK[0x240];
  a1[17] = STACK[0x248];
  a1[45] = STACK[0x250];
  *(_DWORD *)(a54 + 52) += (370 * ((2 * (a2 ^ 0xCEC)) ^ 0x102E)) ^ 0x2E5;
  LODWORD(STACK[0x464]) = *(_DWORD *)(a54 + 392);
  a1[20] = v54 + v56 - 2744;
  LODWORD(STACK[0x290]) = -604050357;
  LODWORD(STACK[0x260]) = STACK[0x4A8];
  LODWORD(STACK[0x258]) = STACK[0x424];
  return (*(uint64_t (**)(void))(v55 + 8 * (int)((446 * (a1[39] != 0)) ^ v56)))();
}

uint64_t sub_22B359498(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  unsigned int v344 = a1 ^ 0xB1846C88;
  uint64_t v55 = a6 ^ (a51 - 874087496);
  *(void *)(v53 - 200) = v55;
  unsigned int v56 = *(_DWORD *)(a26 + 4 * (*(unsigned __int8 *)(v54 + v55) ^ 0xC3));
  uint64_t v57 = a6 & 0xFFFFFFFB ^ 0xCBE68A84;
  *(void *)(v53 - 184) = v57;
  unsigned int v58 = *(_DWORD *)(a26 + 4 * (*(unsigned __int8 *)(v54 + v57) ^ 0x5FLL));
  uint64_t v59 = a6 & 0xFFFFFFF8 ^ 0xCBE68A87;
  *(void *)(v53 - 144) = v59;
  uint64_t v60 = a6 & 0xFFFFFFF1 ^ 0xCBE68A8E;
  *(void *)(v53 - 232) = v60;
  int v61 = *(unsigned __int8 *)(a27 + (*(unsigned __int8 *)(v54 + v59) ^ 0x22)) ^ (*(unsigned char *)(v54 + v59)
                                                                                                 - ((2 * *(unsigned char *)(v54 + v59)) & 0x4C)
                                                                                                 - 90) ^ 0x8C ^ (v58 >> 7) ^ 0x1506D7C ^ (v58 >> 4);
  uint64_t v62 = a6 & 0xFFFFFFFA ^ 0xCBE68A85;
  *(void *)(v53 - 160) = v62;
  uint64_t v63 = *(unsigned __int8 *)(v54 + v62);
  uint64_t v64 = a6 & 0xFFFFFFFC ^ 0xCBE68A83;
  *(void *)(v53 - 176) = v64;
  LODWORD(v63) = *(_DWORD *)(a25 + 4 * (v63 ^ 0xE6));
  uint64_t v65 = *(unsigned __int8 *)(v54 + v64);
  unsigned int v66 = v58 ^ (v63 >> 5) ^ (v63 >> 1) ^ 0x226492AC ^ (v61
                                                                                - ((2 * v61) & 0x15C17CB6)
                                                                                + 1256242779);
  int v67 = v63 ^ 0xD46C7E54 ^ (v66 - ((2 * v66) & 0x4B135F10) + 629780360);
  LODWORD(v63) = *(unsigned __int8 *)(a27 + (v65 ^ 0x94));
  uint64_t v68 = a6 & 0xFFFFFFF7 ^ 0xCBE68A88;
  *(void *)(v53 - 256) = v68;
  int v69 = v63 ^ ((((v65 ^ 0x1D) & 8 | 0x27) ^ (v65 ^ 0x1D) & 0xF7)
                              - 2 * ((((v65 ^ 0x1D) & 8 | 0x27) ^ (v65 ^ 0x1D) & 0xF7) & 0x2E ^ (v65 ^ 0x1D) & 8)
                              - 90);
  uint64_t v70 = a6 & 0xFFFFFFFD ^ 0xCBE68A82;
  *(void *)(v53 - 168) = v70;
  LODWORD(v63) = *(_DWORD *)(a28 + 4 * (*(unsigned __int8 *)(v54 + v70) ^ 0x23)) - 1151915347;
  uint64_t v71 = a6 & 0xFFFFFFF3 ^ 0xCBE68A8C;
  char v343 = 4 * v63;
  uint64_t v72 = a6 & 0xFFFFFFF4 ^ 0xCBE68A8B;
  *(void *)(v53 - 192) = v72;
  uint64_t v73 = *(unsigned __int8 *)(v54 + v72);
  int v74 = *(unsigned __int8 *)(a27 + (v73 ^ 0x68));
  LODWORD(v73) = ~(2 * ((v73 ^ 0xFFFFFFC6) & 0x27 ^ v73 & 1)) + (v73 ^ 0xFFFFFFC6);
  uint64_t v75 = a6 & 0xFFFFFFFE ^ 0xCBE68A81;
  *(void *)(v53 - 208) = v75;
  uint64_t v76 = a6 & 0xFFFFFFF0 ^ 0xCBE68A8F;
  *(void *)(v53 - 152) = v76;
  int v77 = ((v73 - 89) ^ v74) & 0xCC | ((v73 + 39) ^ v74) & 0x33;
  LODWORD(v73) = *(unsigned __int8 *)(a27 + (*(unsigned __int8 *)(v54 + v76) ^ 0x44)) ^ (*(unsigned char *)(v54 + v76) - ((2 * *(unsigned char *)(v54 + v76)) & 0x4C) - 90);
  uint64_t v78 = a6 & 0xFFFFFFF9 ^ 0xCBE68A86;
  *(void *)(v53 - 216) = v78;
  int v79 = *(_DWORD *)(a28 + 4 * (*(unsigned __int8 *)(v54 + v78) ^ 0xBBLL)) - 1151915347;
  HIDWORD(v80) = v67;
  LODWORD(v80) = v67;
  uint64_t v81 = a6 & 0xFFFFFFF5 ^ 0xCBE68A8A;
  uint64_t v82 = a6 & 0xFFFFFFF6 ^ 0xCBE68A89;
  *(void *)(v53 - 248) = v82;
  *(void *)(v53 - 240) = v81;
  unsigned int v83 = *(_DWORD *)(a25 + 4 * (*(unsigned __int8 *)(v54 + v82) ^ 0xFDLL));
  uint64_t v84 = a6 & 0xFFFFFFF2 ^ 0xCBE68A8D;
  *(void *)(v53 - 224) = v84;
  int v85 = (v83 >> 5) ^ (v83 >> 1);
  int v86 = v85 ^ 0x7F7DC660;
  int v87 = (v85 ^ 0x7F7DC660) & 0x1981101E ^ v85 & 8;
  unsigned int v88 = *(_DWORD *)(a26 + 4 * (*(unsigned __int8 *)(v54 + v68) ^ 0x51));
  int v89 = v86 + 427888662 - 2 * v87;
  int v90 = *(_DWORD *)(a28 + 4 * (*(unsigned __int8 *)(v54 + v81) ^ 0xF6));
  unsigned int v91 = (v88 >> 7) ^ (v88 >> 4) ^ (v90 - 1151915347) ^ v83 ^ v77 ^ (312694088 - 4 * v90) & 0xFE8CF5B8 ^ v89;
  unsigned int v92 = *(_DWORD *)(a25 + 4 * (*(unsigned __int8 *)(v54 + v84) ^ 0xAELL));
  int v93 = ((v92 >> 5) ^ (v92 >> 1) ^ 0x7F7DC660)
      - 2 * (((v92 >> 5) ^ (v92 >> 1) ^ 0x7F7DC660) & 0x29BDF7DF ^ ((v92 >> 5) ^ (v92 >> 1)) & 0x19);
  LODWORD(v73) = v73 ^ v92;
  unsigned int v94 = *(_DWORD *)(a26 + 4 * (*(unsigned __int8 *)(v54 + v71) ^ 0x11));
  int v95 = *(_DWORD *)(a28 + 4 * (*(unsigned __int8 *)(v54 + v60) ^ 0x4ALL)) - 1151915347;
  LODWORD(v73) = v73 ^ (4 * v95) & 0xFE8CF5B8 ^ (v94 >> 4) ^ (v94 >> 7) ^ (v93 - 1447168058);
  unsigned int v96 = *(_DWORD *)(a25 + 4 * (*(unsigned __int8 *)(v54 + v75) ^ 0x99));
  int v97 = v69 ^ (4 * v63) & 0xFE8CF5B8 ^ (v56 >> 7) ^ (v56 >> 4) ^ v63 ^ (v96 >> 1) ^ (v96 >> 5) ^ 0x7E2DABD3;
  HIDWORD(v80) = (v80 >> 31) ^ __ROR4__((4 * v79) & 0xFE8CF5B8 ^ v79, 31) ^ 0xBADAEC51;
  LODWORD(v80) = HIDWORD(v80);
  unsigned int v98 = (v97 - ((2 * v97) & 0x9D3957C4) + 1318890466) ^ a4 ^ 0x6FD18EAB;
  unsigned int v99 = v56 ^ 0x466D1009 ^ (v98 - ((2 * v98) & 0xA329F53C) + 1368717982);
  unsigned int v100 = v96 ^ HIDWORD(a31) ^ (v99 - ((2 * v99) & 0x24438136) + 304201883);
  int v101 = v95 ^ v344 ^ ((v73 ^ 0x59084B8C)
                     + 79404727
                     - 2 * ((v73 ^ 0x59084B8C) & 0x4BB9EBF ^ (v73 ^ 0xEA) & 8));
  unsigned int v102 = ((v91 ^ 0xE934ACB6) + 1565368868 - 2 * ((v91 ^ 0xE934ACB6) & 0x5D4DA22D ^ v91 & 9)) ^ v51 ^ 0xC83F7D08;
  LODWORD(v81) = v52 ^ 0x2033F5E6 ^ HIDWORD(a19) ^ ((v80 >> 1) - ((2 * (v80 >> 1)) & 0xDF6F9884) + 1874316354);
  unsigned int v103 = v94 ^ HIDWORD(a44) ^ (v101 - ((2 * v101) & 0xAE0EBD18) + 1460100748);
  LODWORD(v68) = HIBYTE(v100);
  unsigned int v104 = v88 ^ a44 ^ (v102 - ((2 * v102) & 0x1615D1DE) + 185264367);
  LOBYTE(v102) = (v88 ^ a44 ^ (v102 - ((2 * v102) & 0xDE) - 17)) & 0x18;
  int v105 = *(_DWORD *)(v53 - 136);
  uint64_t v106 = (char *)*(&off_26DE9F480 + v105 - 477) - 12;
  unsigned int v107 = (v103 ^ 0xA3E4381D) >> (v102 ^ 8) >> (v102 ^ 0x10);
  unint64_t v108 = (char *)*(&off_26DE9F480 + SHIDWORD(a17)) - 8;
  int v109 = *(_DWORD *)&v108[4 * (BYTE2(v81) ^ 0x12)];
  HIDWORD(v80) = v109 ^ 0x137;
  LODWORD(v80) = v109 ^ 0xC356A00;
  unsigned __int8 v110 = (char *)*(&off_26DE9F480 + v105 - 620) - 4;
  LODWORD(v73) = *(_DWORD *)&v110[4 * (BYTE1(v104) ^ 0x8A)] + 179505213;
  int v111 = v103;
  int v112 = v73 ^ (v73 >> 2) & 0x6664085 ^ *(_DWORD *)&v106[4 * (HIBYTE(v100) ^ 0x36)] ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16));
  unsigned int v113 = (v103 ^ 0xAC64162B) + (v103 ^ 0x1D) + ((2 * v103) & 0x6C ^ 0x28);
  int v114 = *(_DWORD *)&v108[4 * (BYTE2(v104) ^ 0x9E)];
  LODWORD(v73) = v112 - 734308017 - ((2 * v112) & 0xA876B29E);
  HIDWORD(v80) = v114 ^ 0x137;
  LODWORD(v80) = v114 ^ 0xC356A00;
  LODWORD(v63) = *(_DWORD *)&v110[4 * (BYTE1(v103) ^ 0x6F)] + 179505213;
  unsigned int v115 = (v81 ^ 0x756528CA) >> 24;
  int v116 = v63 ^ (v63 >> 2) & 0x6664085 ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16)) ^ *(_DWORD *)&v106[4 * (v115 ^ 0x5E)];
  uint64_t v117 = (uint64_t)*(&off_26DE9F480 + v105 - 523);
  int v118 = *(_DWORD *)&v108[4 * (BYTE2(v103) ^ 0x93)];
  int v119 = a17 ^ v115 ^ (((2 * v100) ^ 0x1D0) - 1402726858) ^ *(_DWORD *)(v117
                                                                                       + 4
                                                                                       * (v100 ^ 0xC2u)) ^ (v116 - 734308017 - ((2 * v116) & 0xA876B29E));
  HIDWORD(v80) = v118 ^ 0x137;
  LODWORD(v80) = v118 ^ 0xC356A00;
  int v120 = (v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16);
  int v121 = *(_DWORD *)&v108[4 * (BYTE2(v100) ^ 0x74)];
  HIDWORD(v80) = v121 ^ 0x137;
  LODWORD(v80) = v121 ^ 0xC356A00;
  int v122 = v107;
  LODWORD(v75) = v107 + 1583678987 - ((2 * v107) & 0x16);
  int v123 = *(_DWORD *)(v117 + 4 * (v111 ^ 0x37u)) ^ a20 ^ v113 ^ v73;
  LODWORD(v73) = *(_DWORD *)&v110[4 * (BYTE1(v81) ^ 0x7F)] + 179505213;
  int v124 = *(_DWORD *)&v106[4 * (v122 ^ 0x5E)] ^ a43 ^ *(_DWORD *)(v117 + 4 * (v104 ^ 0xA6u)) ^ v73 ^ (v73 >> 2) & 0x6664085 ^ (((2 * v104) ^ 0x118) - 2137034875 - ((2 * ((2 * v104) ^ 0x118) + 147336300) & 0x840329C)) ^ v75;
  unsigned int v125 = HIBYTE(v104);
  int v126 = *(_DWORD *)&v106[4 * (HIBYTE(v104) ^ 0x34)];
  unsigned int v127 = v124 ^ (v80 >> 9);
  LODWORD(v63) = *(_DWORD *)&v110[4 * (BYTE1(v100) ^ 0x14)] + 179505213;
  unsigned int v128 = (v119 - 193217215 - ((2 * v119) & 0xE8F77A82)) ^ HIDWORD(a45);
  LODWORD(v81) = v126 ^ HIDWORD(a43) ^ (2 * (v81 ^ 0xCA)
                                      - 2137034874
                                      + ((4 * (v81 ^ 0xCA) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ *(_DWORD *)(v117 + 4 * (v81 ^ 0xE0u)) ^ v63 ^ v120 ^ (v63 >> 2) & 0x6664085;
  int v129 = *(_DWORD *)&v108[4 * (BYTE2(v128) ^ 0xA9)];
  unsigned int v130 = (v129 ^ 0xC356B37u) >> (v343 & 8) >> (v343 & 8 ^ 9);
  unsigned int v131 = (v130 | (v129 << 23) ^ 0x9B800000)
       + 1583678987
       - 2 * ((v130 | (v129 << 23) ^ 0x9B800000) & 0x5E65061B ^ v130 & 0x10);
  int v132 = *(_DWORD *)&v108[4 * (BYTE2(v81) ^ 0x42)];
  HIDWORD(v80) = v132 ^ 0x137;
  LODWORD(v80) = v132 ^ 0xC356A00;
  LODWORD(v73) = v123 ^ v68 ^ 0x6F168B3A;
  unsigned int v133 = *(_DWORD *)&v110[4 * (BYTE1(v127) ^ 0x3E)] + 179505213;
  int v134 = HIDWORD(a16) ^ *(_DWORD *)&v106[4 * (HIBYTE(v128) ^ 0x7E)] ^ *(_DWORD *)(v117
                                                                                + 4
                                                                                * ((v123 ^ v68) ^ 0x10u)) ^ HIBYTE(v128) ^ v133 ^ (v133 >> 2) & 0x6664085 ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16));
  int v135 = *(_DWORD *)&v108[4 * (BYTE2(v127) ^ 0xCA)];
  HIDWORD(v80) = v135 ^ 0x137;
  LODWORD(v80) = v135 ^ 0xC356A00;
  int v136 = v134 ^ (2 * ((v123 ^ v68) ^ 0x3A)
               - 2137034875
               - ((4 * ((v123 ^ v68) ^ 0x3A) + 147336300) & 0x840329C));
  int v137 = (v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16);
  LODWORD(v63) = *(_DWORD *)&v108[4 * (BYTE2(v123) ^ 0x61)];
  HIDWORD(v80) = v63 ^ 0x137;
  LODWORD(v80) = v63 ^ 0xC356A00;
  LODWORD(v68) = *(_DWORD *)&v110[4 * (BYTE1(v81) ^ 0xA7)] + 179505213;
  LODWORD(v73) = BYTE3(v73);
  int v138 = *(_DWORD *)&v106[4 * (v73 ^ 0x5E)] ^ HIDWORD(a42) ^ *(_DWORD *)(v117
                                                                                     + 4
                                                                                     * (v127 ^ 0xDDu)) ^ v68 ^ (v68 >> 2) & 0x6664085 ^ (((2 * v127) ^ 0x1EE) - 2137034874 + ((2 * ((2 * v127) ^ 0x1EE) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ v131;
  unsigned int v139 = *(_DWORD *)&v110[4 * (BYTE1(v123) ^ 0xDC)] + 179505213;
  unsigned int v140 = HIBYTE(v127);
  unsigned int v141 = BYTE3(v81) ^ a42 ^ *(_DWORD *)&v106[4 * (BYTE3(v81) ^ 0xE6)] ^ *(_DWORD *)(v117
                                                                                  + 4
                                                                                  * (v128 ^ 0x52u)) ^ v139 ^ (v139 >> 2) & 0x6664085 ^ v137 ^ (((2 * v128) ^ 0xF0) - 2137034874 + ((2 * ((2 * v128) ^ 0xF0) + 3180) & 0x129C ^ 0xF7BFDFFF));
  unsigned int v142 = *(_DWORD *)&v110[4 * (BYTE1(v128) ^ 0xC)] + 179505213;
  int v143 = (((2 * (v81 ^ v125)) ^ 0x92)
        - 2137034875
        - ((2 * ((2 * (v81 ^ v125)) ^ 0x92) + 147336300) & 0x840329C)) ^ HIDWORD(a40) ^ *(_DWORD *)&v106[4 * (HIBYTE(v127) ^ 0x1E)] ^ *(_DWORD *)(v117 + 4 * ((v81 ^ v125) ^ 0x63u));
  unsigned int v144 = ((v136 ^ 0x20) + 679452529 - ((2 * (v136 ^ 0x20)) & 0x50FF3EE2)) ^ a45;
  int v145 = v143 ^ v142 ^ (v142 >> 2) & 0x6664085 ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16));
  LODWORD(v81) = v145 ^ v140 ^ 0x9B707775;
  int v146 = *(_DWORD *)&v108[4 * (BYTE2(v144) ^ 0x80)];
  HIDWORD(v80) = v146 ^ 0x137;
  LODWORD(v80) = v146 ^ 0xC356A00;
  LODWORD(v63) = *(_DWORD *)&v110[4 * (BYTE1(v141) ^ 0x60)] + 179505213;
  LODWORD(v73) = v138 ^ v73;
  int v147 = *(_DWORD *)&v106[4 * (((v73 ^ 0x729D089B) >> 24) ^ 0x5E)] ^ a32 ^ *(_DWORD *)(v117 + 4 * ((v145 ^ v140) ^ 0x5Fu)) ^ v63 ^ (v63 >> 2) & 0x6664085 ^ ((v73 ^ 0x729D089B) >> 24) ^ (2 * ((v145 ^ v140) ^ 0x75) - 2137034874 + ((4 * ((v145 ^ v140) ^ 0x75) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16));
  int v148 = *(_DWORD *)&v108[4 * (BYTE2(v141) ^ 0xEF)];
  HIDWORD(v80) = v148 ^ 0x137;
  LODWORD(v80) = v148 ^ 0xC356A00;
  int v149 = (v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16);
  LODWORD(v68) = 2 * (v73 ^ 0x9B)
               - 2137034874
               + ((4 * (v73 ^ 0x9B) + 3180) & 0x129C ^ 0xF7BFDFFF);
  int v150 = *(_DWORD *)&v108[4 * (BYTE2(v145) ^ 7)];
  HIDWORD(v80) = v150 ^ 0x137;
  LODWORD(v80) = v150 ^ 0xC356A00;
  int v151 = *(_DWORD *)&v110[4 * (BYTE1(v138) ^ 0x5F)];
  int v152 = v151 - ((2 * v151 + 90574970) & 0x477F49C) - 1930493301;
  int v153 = HIBYTE(v141) ^ *(_DWORD *)&v106[4 * (HIBYTE(v141) ^ 0xA3)] ^ *(_DWORD *)(v117
                                                                                + 4 * (v144 ^ 0x54u)) ^ (((2 * v144) ^ 0xFC) - 2137034874 + ((2 * ((2 * v144) ^ 0xFC) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16)) ^ (((v152 ^ 0x645D07A6) + (v152 & 0xE666FDE8 ^ 0x9BBBFA5F) + 1) >> 2) ^ 0xFD;
  int v154 = *(_DWORD *)&v108[4 * (BYTE2(v138) ^ 0xEA)];
  HIDWORD(v80) = v154 ^ 0x137;
  LODWORD(v80) = v154 ^ 0xC356A00;
  unsigned int v155 = HIBYTE(v144);
  LODWORD(v63) = *(_DWORD *)&v106[4 * (HIBYTE(v144) ^ 0x99)] ^ HIDWORD(a41) ^ *(_DWORD *)(v117
                                                                                        + 4
                                                                                        * (v73 ^ 0xB1u));
  LODWORD(v73) = *(_DWORD *)&v110[4 * (BYTE1(v145) ^ 0x20)] + 179505213;
  unsigned int v156 = v63 ^ v73 ^ (v73 >> 2) & 0x6664085 ^ v149 ^ v68;
  LODWORD(v63) = v147 - 353691721 - ((2 * v147) & 0xD5D62F6E);
  unsigned int v157 = v152 ^ a41 ^ (v153 - ((2 * v153) & 0x477F49C) - 2109998514);
  unsigned int v158 = *(_DWORD *)&v110[4 * (BYTE1(v144) ^ 0xD6)] + 179505213;
  unsigned int v159 = BYTE3(v81) ^ a40 ^ (((2 * v141) ^ 0x2E)
                           - 2137034874
                           + ((2 * ((2 * v141) ^ 0x2E) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ *(_DWORD *)(v117 + 4 * (v141 ^ 0x3Du)) ^ *(_DWORD *)&v106[4 * (BYTE3(v81) ^ 0x5E)] ^ v158 ^ (v158 >> 2) & 0x6664085 ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16));
  LOBYTE(v153) = (v152 ^ a41 ^ (v153 - ((2 * v153) & 0x9C) + 78)) & 0x10;
  unsigned int v160 = *(_DWORD *)&v108[4 * (((v156 ^ v155 ^ 0xE29C87CF) >> (v153 ^ 0x10) >> v153) ^ 0x77)];
  int v161 = *(_DWORD *)&v108[4 * (BYTE2(v157) ^ 0x1E)];
  LODWORD(v81) = ((v160 >> 9) ^ 0x61AB5) + 1583678987 - ((2 * ((v160 >> 9) ^ 0x61AB5)) & 0xCA0C16);
  HIDWORD(v80) = v161 ^ 0x137;
  LODWORD(v80) = v161 ^ 0xC356A00;
  unsigned int v162 = ((2 * v159) ^ 0x36)
       - 2137034874
       + ((2 * ((2 * v159) ^ 0x36) + 3180) & 0x129C ^ 0xF7BFDFFF);
  int v163 = (v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16);
  unsigned int v164 = v63 ^ HIDWORD(a32);
  unsigned int v165 = ((2 * (v63 ^ BYTE4(a32))) ^ 0x164)
       - 2137034874
       + ((2 * ((2 * (v63 ^ BYTE4(a32))) ^ 0x164) + 3180) & 0x129C ^ 0xF7BFDFFF);
  LODWORD(v63) = *(_DWORD *)&v110[4 * (BYTE1(v159) ^ 0x58)] + 179505213;
  int v166 = a16 ^ HIBYTE(v156) ^ *(_DWORD *)&v106[4 * (HIBYTE(v156) ^ 0xBC)] ^ v63 ^ *(_DWORD *)(v117
                                                                                            + 4
                                                                                            * (v164 ^ 0x98u)) ^ (v63 >> 2) & 0x6664085;
  LODWORD(v63) = *(_DWORD *)&v108[4 * (BYTE2(v159) ^ 0x1E)];
  HIDWORD(v80) = v63 ^ 0x137;
  LODWORD(v80) = v63 ^ 0xC356A00;
  int v167 = v166 ^ v165 ^ 0xE2 ^ v163;
  unsigned int v168 = *(_DWORD *)&v110[4 * (BYTE1(v164) ^ 1)] + 179505213;
  int v169 = v168 ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16)) ^ (v168 >> 2) & 0x6664085 ^ *(_DWORD *)&v106[4 * (HIBYTE(v157) ^ 0xBA)];
  HIDWORD(v80) = *(_DWORD *)(v117 + 4 * ((v156 ^ v155) ^ 0xE5u)) ^ 0x79CBF298 ^ HIBYTE(v157) ^ (v169 - 734308017 - ((2 * v169) & 0xA876B29E));
  LODWORD(v80) = HIDWORD(v80);
  int v170 = v80 >> 3;
  LODWORD(v80) = __ROR4__(((2 * (v156 ^ v155)) ^ 0x19E) - 1402726858, 3);
  int v171 = (v170 ^ v80) - ((2 * (v170 ^ v80)) & 0xB243B760);
  int v172 = *(_DWORD *)&v108[4 * (BYTE2(v164) ^ 0x86)];
  HIDWORD(v80) = v172 ^ 0x137;
  LODWORD(v80) = v172 ^ 0xC356A00;
  LODWORD(v73) = *(_DWORD *)&v110[4 * (BYTE1(v156) ^ 0xD0)] + 179505213;
  int v173 = *(_DWORD *)&v106[4 * (HIBYTE(v159) ^ 0xBA)] ^ HIBYTE(v159) ^ v73 ^ (v73 >> 2) & 0x6664085 ^ *(_DWORD *)(v117 + 4 * (v157 ^ 0x31u)) ^ (((2 * v157) ^ 0x36) - 2137034874 + ((2 * ((2 * v157) ^ 0x36) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16));
  int v174 = *(_DWORD *)&v106[4 * (HIBYTE(v164) ^ 0xDE)] ^ HIDWORD(a29) ^ (v160 << 23);
  LODWORD(v73) = *(_DWORD *)&v110[4 * (BYTE1(v157) ^ 0x58)] + 179505213;
  unsigned int v175 = (v167 + 79184213 - ((2 * v167) & 0x97082AA)) ^ a30;
  int v176 = *(_DWORD *)(v117 + 4 * (v159 ^ 0x31u)) ^ v73 ^ (v73 >> 2) & 0x6664085;
  int v177 = a39 ^ __ROR4__(v171 - 652092496, 29);
  LODWORD(v81) = v174 ^ v176 ^ v162 ^ v81;
  int v178 = v81 ^ HIBYTE(v164);
  unsigned int v179 = (v178 ^ 0x3F61FF0Du) >> 24;
  int v180 = *(_DWORD *)&v108[4 * (BYTE2(v175) ^ 0xD7)];
  HIDWORD(v80) = v180 ^ 0x137;
  LODWORD(v80) = v180 ^ 0xC356A00;
  unsigned int v181 = *(_DWORD *)&v110[4 * (BYTE1(v177) ^ 0x77)] + 179505213;
  unsigned int v182 = ((v173 ^ 0xE4) + 9069995 - 2 * ((v173 ^ 0xE4) & 0x8A65BB ^ v173 & 0x10)) ^ HIDWORD(a39);
  int v183 = v181 ^ *(_DWORD *)&v106[4 * (v179 ^ 0x5E)] ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16)) ^ (v181 >> 2) & 0x6664085 ^ (((2 * (((v173 ^ 0xE4) - 85 - 2 * ((v173 ^ 0xE4) & 0xBB ^ v173 & 0x10)) ^ BYTE4(a39))) ^ 0xB8) - 1402726858);
  LODWORD(v73) = (v183 - 734308017 - ((2 * v183) & 0xA876B29E)) ^ *(_DWORD *)(v117
                                                                            + 4
                                                                            * ((((v173 ^ 0xE4)
                                                                                                - 85
                                                                                                - 2
                                                                                                * ((v173 ^ 0xE4) & 0xBB ^ v173 & 0x10)) ^ BYTE4(a39)) ^ 0x76u));
  int v184 = *(_DWORD *)&v108[4 * (BYTE2(v177) ^ 0xDB)];
  HIDWORD(v80) = v184 ^ 0x137;
  LODWORD(v80) = v184 ^ 0xC356A00;
  int v185 = v80 >> 9;
  unsigned int v186 = 2 * (v178 ^ 0xD)
       - 2137034874
       + ((4 * (v178 ^ 0xD) + 3180) & 0x129C ^ 0xF7BFDFFF);
  int v187 = *(_DWORD *)&v108[4 * (BYTE2(v182) ^ 0x40)];
  HIDWORD(v80) = v187 ^ 0x137;
  LODWORD(v80) = v187 ^ 0xC356A00;
  unsigned int v188 = (v177 ^ 0xC1AC20E1) >> 24;
  LODWORD(v75) = *(_DWORD *)&v110[4 * (BYTE1(v81) ^ 0xA8)] + 179505213;
  int v189 = v75 ^ ((v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16)) ^ *(_DWORD *)&v106[4 * (v188 ^ 0x5E)] ^ (v75 >> 2) & 0x6664085;
  unsigned int v190 = v189 - 734308017 - ((2 * v189) & 0xA876B29E);
  int v191 = *(_DWORD *)&v108[4 * (BYTE2(v81) ^ 0x16)];
  HIDWORD(v80) = v191 ^ 0x137;
  LODWORD(v80) = v191 ^ 0xC356A00;
  int v192 = (v80 >> 9) + 1583678987 - ((2 * (v80 >> 9)) & 0xBCCA0C16);
  BOOL v193 = (v73 & HIDWORD(a23)) == 0;
  int v194 = (v179 ^ 0x6AF1245D ^ v73) - 1054088496;
  if (v193) {
    int v195 = a24;
  }
  else {
    int v195 = a23;
  }
  int v196 = *(_DWORD *)&v106[4 * (HIBYTE(v175) ^ 0x59)] ^ HIDWORD(a30) ^ *(_DWORD *)(v117
                                                                                + 4 * (v178 ^ 0x27u));
  unsigned int v197 = *(_DWORD *)&v110[4 * (BYTE1(v182) ^ 0x5B)] + 179505213;
  int v198 = v196 ^ v197 ^ (v197 >> 2) & 0x6664085 ^ v186 ^ ((HIBYTE(v175) ^ 7)
                                                       + 1583678987
                                                       - 2 * ((HIBYTE(v175) ^ 7) & 0x1B ^ HIBYTE(v175) & 0x10)) ^ v185;
  unsigned int v199 = 2 * (v177 ^ 0xE1)
       - 2137034874
       + ((4 * (v177 ^ 0xE1) + 3180) & 0x129C ^ 0xF7BFDFFF);
  unsigned int v200 = (((2 * v175) ^ 0x1C2) - 1402726858) ^ HIDWORD(a38) ^ *(_DWORD *)(v117
                                                                                         + 4
                                                                                         * (v175 ^ 0xCBu)) ^ v190;
  unsigned int v201 = *(_DWORD *)&v110[4 * (BYTE1(v175) ^ 0xA9)] + 179505213;
  int v202 = *(_DWORD *)&v106[4 * (HIBYTE(v182) ^ 0x8B)] ^ a38 ^ v201 ^ (v201 >> 2) & 0x6664085 ^ *(_DWORD *)(v117 + 4 * (v177 ^ 0xCBu));
  unsigned int v203 = v198 ^ 0x79CBF27C;
  unsigned int v204 = v202 ^ v192 ^ v199;
  LOBYTE(v199) = v202 ^ v192 ^ v199 ^ HIBYTE(v182);
  int v205 = *(_DWORD *)&v108[4 * (((v198 ^ 0x79CBF27Cu) >> 16) ^ 0x25)];
  HIDWORD(v206) = v205 ^ 0x137;
  LODWORD(v206) = v205 ^ 0xC356A00;
  unsigned int v207 = *(_DWORD *)&v110[4 * (BYTE1(v200) ^ 0x39)] + 179505213;
  unsigned int v208 = (v194 + v195) ^ HIDWORD(a18);
  int v209 = *(_DWORD *)(v117 + 4 * (v199 ^ 0xF5u)) ^ v207 ^ (v207 >> 2) & 0x6664085 ^ ((v206 >> 9) + 1583678987 - ((2 * (v206 >> 9)) & 0xBCCA0C16)) ^ HIBYTE(v208) ^ *(_DWORD *)&v106[4 * (HIBYTE(v208) ^ 0xD7)] ^ (((2 * v199) ^ 0x1BE) - 2137034874 + ((2 * ((2 * v199) ^ 0x1BE) + 3180) & 0x129C ^ 0xF7BFDFFF));
  unsigned int v210 = (v209 & 2 ^ 0xBBEFBC6F) + 2 * (v209 & 2);
  BOOL v193 = ((v210 + 1141916561) & HIDWORD(a24)) == 0;
  unsigned int v211 = v210 + 2096975872;
  unsigned int v212 = -186857250 - v210;
  if (v193) {
    unsigned int v213 = v211;
  }
  else {
    unsigned int v213 = v212;
  }
  int v214 = *(_DWORD *)&v108[4 * (BYTE2(v200) ^ 0x3E)];
  HIDWORD(v215) = v214 ^ 0x137;
  LODWORD(v215) = v214 ^ 0xC356A00;
  int v216 = *(_DWORD *)&v108[4 * (BYTE2(v204) ^ 0x3E)];
  int v217 = (v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16);
  HIDWORD(v215) = v216 ^ 0x137;
  LODWORD(v215) = v216 ^ 0xC356A00;
  unsigned int v218 = *(_DWORD *)&v110[4 * (BYTE1(v208) ^ 0x3A)] + 179505213;
  int v219 = HIBYTE(v200) ^ (((2 * v203) ^ 0x1A2)
                       - 2137034875
                       - ((2 * ((2 * v203) ^ 0x1A2) + 147336300) & 0x840329C)) ^ *(_DWORD *)(v117 + 4 * (v203 ^ 0xFBu)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v200) ^ 0x45)] ^ v218 ^ ((v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16)) ^ (v218 >> 2) & 0x6664085;
  int v220 = *(_DWORD *)&v108[4 * (BYTE2(v208) ^ 0xB1)];
  HIDWORD(v215) = v220 ^ 0x137;
  LODWORD(v215) = v220 ^ 0xC356A00;
  int v221 = v200 ^ v188;
  unsigned int v222 = *(_DWORD *)&v110[4 * (BYTE1(v198) ^ 0x66)] + 179505213;
  int v223 = v222 ^ *(_DWORD *)&v106[4 * (HIBYTE(v204) ^ 0xD0)] ^ (v222 >> 2) & 0x6664085 ^ ((v215 >> 9)
                                                                                       + 1583678987
                                                                                       - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  unsigned int v224 = a22 ^ v209 & 0xFFFFFFFD ^ (a18 + v213);
  unsigned int v225 = HIBYTE(v203);
  int v226 = *(_DWORD *)&v106[4 * (HIBYTE(v203) ^ 0x34)];
  unsigned int v227 = (((2 * v221) ^ 0x14) - 1402726858) ^ a31 ^ *(_DWORD *)(v117 + 4 * (v221 ^ 0x20u)) ^ (v223
                                                                                              - 734308017
                                                                                              - ((2 * v223) & 0xA876B29E));
  unsigned int v228 = *(_DWORD *)&v110[4 * (BYTE1(v204) ^ 0x39)] + 179505213;
  unsigned int v229 = v226 ^ a37 ^ v228 ^ (v228 >> 2) & 0x6664085 ^ *(_DWORD *)(v117 + 4 * (v208 ^ 0xC0u)) ^ v217 ^ (((2 * v208) ^ 0x1D4) - 2137034874 + ((2 * ((2 * v208) ^ 0x1D4) + 3180) & 0x129C ^ 0xF7BFDFFF));
  unsigned int v230 = ((v219 ^ 0x1B) - ((2 * (v219 ^ 0x1B)) & 0x4BCDFA04) - 1511588606) ^ HIDWORD(a37);
  int v231 = *(_DWORD *)&v108[4 * (BYTE2(v229) ^ 0x20)];
  HIDWORD(v215) = v231 ^ 0x137;
  LODWORD(v215) = v231 ^ 0xC356A00;
  int v232 = (v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16);
  int v233 = (((2 * (v227 ^ HIBYTE(v204))) ^ 0xA0)
        - 2137034875
        - ((2 * ((2 * (v227 ^ HIBYTE(v204))) ^ 0xA0) + 147336300) & 0x840329C)) ^ *(_DWORD *)(v117 + 4 * ((v227 ^ HIBYTE(v204)) ^ 0x7Au));
  int v234 = v233 - 1793778093 - ((2 * v233) & 0x2A2A3CA6);
  int v235 = *(_DWORD *)&v108[4 * (BYTE2(v230) ^ 0xCA)];
  HIDWORD(v215) = v235 ^ 0x137;
  LODWORD(v215) = v235 ^ 0xC356A00;
  unsigned int v236 = *(_DWORD *)&v110[4 * (BYTE1(v227) ^ 0x20)] + 179505213;
  int v237 = v236 ^ *(_DWORD *)&v106[4 * (HIBYTE(v229) ^ 0x43)] ^ (v236 >> 2) & 0x6664085 ^ ((v215 >> 9)
                                                                                       + 1583678987
                                                                                       - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  unsigned int v238 = *(_DWORD *)(v117 + 4 * (v224 ^ 0xDAu)) ^ HIBYTE(v229) ^ (((2 * v224) ^ 0x1E0)
                                                                                   - 1402726858) ^ 0x1D ^ (v237 - 734308017 - ((2 * v237) & 0xA876B29E));
  int v239 = *(_DWORD *)&v106[4 * (HIBYTE(v230) ^ 0xBE)] ^ ((HIBYTE(v230) ^ 0xE0) + 1583678987 - ((v230 >> 23) & 0x16)) ^ 0x79CBF27C;
  int v240 = *(_DWORD *)&v108[4 * (BYTE2(v227) ^ 0xCE)];
  HIDWORD(v215) = v240 ^ 0x137;
  LODWORD(v215) = v240 ^ 0xC356A00;
  int v241 = v239 + (v215 >> 9) - 2 * (v239 & (v215 >> 9));
  LOBYTE(v240) = v229 ^ v225;
  int v242 = (2 * (v229 ^ v225)) ^ 0x1DE;
  int v243 = *(_DWORD *)&v108[4 * (BYTE2(v224) ^ 0xA6)];
  HIDWORD(v215) = v243 ^ 0x137;
  LODWORD(v215) = v243 ^ 0xC356A00;
  unsigned int v244 = HIBYTE(v224);
  unsigned int v245 = *(_DWORD *)&v110[4 * (BYTE1(v230) ^ 0x3E)] + 179505213;
  unsigned int v246 = HIDWORD(a21) ^ *(_DWORD *)&v106[4 * (HIBYTE(v224) ^ 0x89)] ^ v245 ^ (v245 >> 2) & 0x6664085 ^ v232 ^ v234;
  unsigned int v247 = *(_DWORD *)&v110[4 * (BYTE1(v229) ^ 0xF5)] + 179505213;
  unsigned int v248 = *(_DWORD *)&v110[4 * (BYTE1(v224) ^ 0x4C)] + 179505213;
  int v249 = HIBYTE(v227) ^ HIDWORD(a35) ^ (((2 * v230) ^ 0x1EE)
                                      - 2137034875
                                      - ((2 * ((2 * v230) ^ 0x1EE) + 147336300) & 0x840329C)) ^ *(_DWORD *)(v117 + 4 * (v230 ^ 0xDDu)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v227) ^ 0xDF)] ^ v247 ^ (v247 >> 2) & 0x6664085;
  unsigned int v250 = (v238 - ((2 * v238) & 0xFBDD5C46) + 2112794147) ^ HIDWORD(a36);
  unsigned int v251 = v249 ^ ((v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  unsigned int v252 = *(_DWORD *)(v117 + 4 * (v240 ^ 0xC5u)) ^ a36 ^ v248 ^ (v242
                                                                                 - 2137034875
                                                                                 - ((2 * v242 + 147336300) & 0x840329C)) ^ (v248 >> 2) & 0x6664085 ^ v241;
  int v253 = *(_DWORD *)&v108[4 * (BYTE2(v250) ^ 0x3A)];
  HIDWORD(v215) = v253 ^ 0x137;
  LODWORD(v215) = v253 ^ 0xC356A00;
  int v254 = (v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16);
  int v255 = *(_DWORD *)&v110[4 * (BYTE1(v252) ^ 0xCC)];
  unsigned int v256 = ((2 * v255 + 833206112) & 0xE3BC591A) + ((v255 - 1730880592) ^ 0x71DE2C8D);
  unsigned int v257 = *(_DWORD *)&v108[4 * (BYTE2(v252) ^ 1)];
  unsigned int v258 = HIBYTE(v250);
  unsigned int v259 = *(_DWORD *)&v110[4 * (BYTE1(v251) ^ 0x3E)] + 179505213;
  int v260 = *(_DWORD *)&v106[4 * (HIBYTE(v250) ^ 0xD3)] ^ (v257 << 23) ^ v259 ^ (v259 >> 2) & 0x6664085 ^ (((v257 >> 9) ^ 0x61AB5) + 1583678987 - ((2 * ((v257 >> 9) ^ 0x61AB5)) & 0xCA0C16));
  unsigned int v261 = (v260 ^ 0x9B800000) - 734308017 - 2 * ((v260 ^ 0x9B800000) & 0x543B595F ^ v260 & 0x10);
  int v262 = *(_DWORD *)&v108[4 * (BYTE2(v251) ^ 0xCA)];
  HIDWORD(v215) = v262 ^ 0x137;
  LODWORD(v215) = v262 ^ 0xC356A00;
  unsigned int v263 = *(_DWORD *)&v110[4 * (BYTE1(v246) ^ 0x3E)] + 179505213;
  int v264 = v263 ^ *(_DWORD *)&v106[4 * (HIBYTE(v252) ^ 0xB2)] ^ (v263 >> 2) & 0x6664085 ^ (((2 * v250) ^ 0xB6)
                                                                                       - 1402726858) ^ ((v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  int v265 = *(_DWORD *)&v108[4 * (BYTE2(v246) ^ 0x3D)];
  HIDWORD(v215) = v265 ^ 0x137;
  LODWORD(v215) = v265 ^ 0xC356A00;
  int v266 = a21 ^ (((2 * (v246 ^ v244)) ^ 0xC6) - 1402726858) ^ *(_DWORD *)(v117
                                                                                        + 4
                                                                                        * ((v246 ^ v244) ^ 0x49u));
  unsigned int v267 = HIBYTE(v246);
  int v268 = *(_DWORD *)&v106[4 * (HIBYTE(v246) ^ 0xF)];
  unsigned int v269 = v266 ^ v261;
  unsigned int v270 = v268 ^ a34 ^ *(_DWORD *)(v117 + 4 * (v251 ^ 0x5Cu)) ^ v256 ^ (v256 >> 2) & 0x6664085 ^ (((2 * v251) ^ 0xEC) - 2137034874 + ((2 * ((2 * v251) ^ 0xEC) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ v254;
  unsigned int v271 = HIDWORD(a20) ^ *(_DWORD *)(v117 + 4 * (v250 ^ 0x71u)) ^ (v264
                                                                                   - 734308017
                                                                                   - ((2 * v264) & 0xA876B29E));
  unsigned int v272 = *(_DWORD *)&v110[4 * (BYTE1(v250) ^ 0x5C)] + 179505213;
  int v273 = (v272 >> 2) & 0x6664085;
  int v274 = *(_DWORD *)&v108[4 * (((v266 ^ v261) >> 16) ^ 0x86)];
  int v275 = HIBYTE(v251) ^ a35 ^ (((2 * v252) ^ 0x116)
                             - 2137034874
                             + ((2 * ((2 * v252) ^ 0x116) + 3180) & 0x129C ^ 0xF7BFDFFF)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v251) ^ 0x1E)] ^ *(_DWORD *)(v117 + 4 * (v252 ^ 0xA1u)) ^ v272 ^ ((v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  HIDWORD(v215) = v274 ^ 0x137;
  LODWORD(v215) = v274 ^ 0xC356A00;
  int v276 = v275 ^ v273;
  unsigned int v277 = *(_DWORD *)&v110[4 * (BYTE1(v271) ^ 0x54)] + 179505213;
  int v278 = v277 ^ *(_DWORD *)&v106[4 * (HIBYTE(v270) ^ 0x7D)] ^ (v277 >> 2) & 0x6664085 ^ ((v215 >> 9)
                                                                                       + 1583678987
                                                                                       - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  unsigned int v279 = v276 ^ 0xC8A83229;
  int v280 = v271 ^ ((HIBYTE(v252) ^ 0xEC) - 2 * ((HIBYTE(v252) ^ 0xEC) & 0x3E ^ HIBYTE(v252) & 0x10) - 97351378);
  unsigned int v281 = HIBYTE(v270) ^ (2 * (v276 ^ 0x29) - 1402726858) ^ *(_DWORD *)(v117
                                                                                      + 4
                                                                                      * (v276 ^ 3u)) ^ 0x23 ^ (v278 - 734308017 - ((2 * v278) & 0xA876B29E));
  int v282 = *(_DWORD *)&v108[4 * (BYTE2(v271) ^ 0x1C)];
  HIDWORD(v215) = v282 ^ 0x137;
  LODWORD(v215) = v282 ^ 0xC356A00;
  unsigned int v283 = *(_DWORD *)&v110[4 * (BYTE1(v276) ^ 0x65)] + 179505213;
  unsigned int v346 = HIBYTE(v269);
  int v284 = v283 ^ (v283 >> 2) & 0x6664085 ^ *(_DWORD *)&v106[4 * (HIBYTE(v269) ^ 0x3D)] ^ ((v215 >> 9)
                                                                                       + 1583678987
                                                                                       - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  int v285 = *(_DWORD *)&v108[4 * (BYTE2(v276) ^ 0xDF)];
  HIDWORD(v215) = v285 ^ 0x137;
  LODWORD(v215) = v285 ^ 0xC356A00;
  int v286 = (v215 >> 9) + 1583678987 - ((2 * (v215 >> 9)) & 0xBCCA0C16);
  LOBYTE(v285) = v269 ^ v258;
  unsigned int v287 = ((2 * (v269 ^ v258)) ^ 0x1D8)
       - 2137034874
       + ((2 * ((2 * (v269 ^ v258)) ^ 0x1D8) + 3180) & 0x129C ^ 0xF7BFDFFF);
  unsigned int v288 = (v280 ^ 0x47598AA5u) >> 24;
  int v289 = *(_DWORD *)&v106[4 * (v288 ^ 0x5E)];
  int v290 = *(_DWORD *)&v108[4 * (BYTE2(v270) ^ 0xD4)];
  HIDWORD(v215) = v290 ^ 0x137;
  LODWORD(v215) = v290 ^ 0xC356A00;
  LOBYTE(v267) = v270 ^ v267;
  int v291 = *(_DWORD *)&v110[4 * (BYTE1(v269) ^ 0x54)];
  int v292 = *(_DWORD *)(v117 + 4 * (v267 ^ 0x69u));
  int v293 = *(_DWORD *)(v117 + 4 * (v285 ^ 0xC6u));
  unsigned int v294 = *(_DWORD *)&v106[4 * (HIBYTE(v279) ^ 0x5E)] ^ HIBYTE(v279) ^ *(_DWORD *)(v117
                                                                                + 4 * (v280 ^ 0x8Fu)) ^ (2 * (v280 ^ 0xA5) - 2137034874 + ((4 * (v280 ^ 0xA5) + 3180) & 0x129C ^ 0xF7BFDFFF));
  unsigned int v295 = *(_DWORD *)&v110[4 * (BYTE1(v270) ^ 0xF2)] + 179505213;
  int v296 = v294 ^ (v291 + 179505213) ^ ((v291 + 179505213) >> 2) & 0x6664085 ^ ((v215 >> 9)
                                                                                          + 1583678987
                                                                                          - ((2 * (v215 >> 9)) & 0xBCCA0C16));
  unsigned int v297 = (v281 + 896359753 - ((2 * v281) & 0x6ADABA92)) ^ HIDWORD(a34);
  unsigned int v298 = (((2 * v267) ^ 0x86) - 1402726858) ^ HIDWORD(a33) ^ v292 ^ (v284
                                                                                    - 734308017
                                                                                    - ((2 * v284) & 0xA876B29E));
  unsigned int v299 = v289 ^ a46 ^ v288 ^ v295 ^ v293 ^ (v295 >> 2) & 0x6664085 ^ v287 ^ v286;
  uint64_t v300 = *(unsigned int *)(v53 - 136);
  uint64_t v301 = (uint64_t)*(&off_26DE9F480 + (int)v300 - 495);
  int v302 = *(_DWORD *)(v301 + 4 * (HIBYTE(v297) ^ 0x55));
  HIDWORD(v215) = v302 ^ 0x14D923;
  LODWORD(v215) = v302 ^ 0xE6400000;
  unsigned int v345 = v215 >> 22;
  unsigned int v342 = (BYTE1(v299) ^ 0x47)
       + 403757238
       + ((2 * ((((v299 >> 8) ^ 0x13E947) + 20) & 0x23 ^ ((v299 >> 8) ^ 0x13E947 | 0xFFFFFFFD))) ^ 0x4021D805);
  int v303 = *(_DWORD *)(v301 + 4 * (HIBYTE(v298) ^ 0x55));
  HIDWORD(v215) = v303 ^ 0x14D923;
  LODWORD(v215) = v303 ^ 0xE6400000;
  unsigned int v304 = v215 >> 22;
  unsigned int v341 = (BYTE2(v299) ^ 0xE9) + 114620834 + ((2 * (BYTE2(v299) ^ 0xE9) + 950) & 0x78C ^ 0xEFAFFFFF);
  unsigned int v305 = (v296 - ((2 * v296) & 0xEDC0BD78) + 1994415804) ^ a33;
  int v306 = *(_DWORD *)(v301 + 4 * (HIBYTE(v299) ^ 0x13));
  HIDWORD(v215) = v306 ^ 0x14D923;
  LODWORD(v215) = v306 ^ 0xE6400000;
  unsigned int v307 = v215 >> 22;
  int v308 = *(_DWORD *)(v301 + 4 * (HIBYTE(v305) ^ 0x68));
  HIDWORD(v215) = v308 ^ 0x14D923;
  LODWORD(v215) = v308 ^ 0xE6400000;
  uint64_t v309 = (char *)*(&off_26DE9F480 + SHIDWORD(a15)) - 8;
  int v310 = *(_DWORD *)&v309[4 * (BYTE2(v298) ^ 0xB8)];
  int v311 = *(_DWORD *)&v309[4 * (BYTE2(v299) ^ 0x52)];
  int v312 = *(_DWORD *)&v309[4 * (BYTE2(v305) ^ 0xB9)];
  uint64_t v313 = (uint64_t)*(&off_26DE9F480 + (int)v300 - 619);
  int v314 = *(_DWORD *)(v313 + 4 * (BYTE1(v299) ^ 0xDCu));
  int v315 = *(_DWORD *)(v313 + 4 * (BYTE1(v305) ^ 0x15u));
  int v316 = *(_DWORD *)&v309[4 * (BYTE2(v297) ^ 0xB8)] ^ ((BYTE2(v297) ^ 3)
                                                     + 114620834
                                                     + ((2 * (BYTE2(v297) ^ 3) + 950) & 0x78C ^ 0xEFAFFFFF)) ^ (v215 >> 22) ^ ((v215 >> 22) >> 1) & 0x21041D34;
  LODWORD(v309) = *(_DWORD *)(v313 + 4 * (BYTE1(v297) ^ 0x17u));
  int v317 = *(_DWORD *)(v313 + 4 * (BYTE1(v298) ^ 0x17u));
  uint64_t v318 = (uint64_t)*(&off_26DE9F480 + (int)v300 - 348);
  uint64_t v319 = HIDWORD(a13) ^ a33 ^ ((BYTE1(v298) ^ 0x8C) + 544730260) ^ (*(_DWORD *)(v318
                                                                                            + 4
                                                                                            * (v299 ^ 2u))
                                                                                - 617028282) ^ v317 ^ (v316 - ((2 * v316) & 0xEF31D842) - 140973023);
  uint64_t v320 = v310 ^ HIDWORD(a46) ^ v314 ^ v345 ^ (*(_DWORD *)(v318
                                                        + 4
                                                        * (((v296 - ((2 * v296) & 0x78) - 68) ^ a33) ^ 0xC5u))
                                            - 617028282) ^ (v345 >> 1) & 0x21041D34 ^ ((BYTE2(v298) ^ 3)
                                                                                     + 114620834
                                                                                     + ((2 * (BYTE2(v298) ^ 3) + 950) & 0x78C ^ 0xEFAFFFFF)) ^ v342;
  unsigned int v321 = v311 ^ a19 ^ v304 ^ v315 ^ v341 ^ (v304 >> 1) & 0x21041D34 ^ ((BYTE1(v305) ^ 0x8E)
                                                                     + 403757238
                                                                     + ((2 * ((v305 >> 8) ^ 0x68028E) + 40) & 0x42 ^ 0xBFDE27FF)) ^ (*(_DWORD *)(v318 + 4 * (v297 ^ 0x70u)) - 617028282);
  unsigned int v322 = (~((2 * (BYTE1(v297) ^ 0x8C) + 1089460520) & 0x4021D842) + (BYTE1(v297) ^ 0x8C) + 403757238) ^ HIDWORD(a13) ^ v312 ^ v309 ^ v307 ^ (v307 >> 1) & 0x21041D34 ^ (*(_DWORD *)(v318 + 4 * (v346 ^ 0x13 ^ v298)) - 617028282) ^ ((BYTE2(v305) ^ 2) + 114620834 + ((2 * (BYTE2(v305) ^ 2) + 950) & 0x78C ^ 0xEFAFFFFF));
  unsigned int v323 = v322 ^ 0xC0C9B80C ^ -(v322 ^ 0xC0C9B80C) ^ ((v322 ^ 0x2998DF2D) + 380541151);
  uint64_t v324 = v323 - ((2 * v323 + 761082300) & 0xA2F0E0CE) + 1747388741;
  int v325 = (char *)*(&off_26DE9F480 + (int)a15) - 8;
  *(unsigned char *)(a47 + v71) = v325[BYTE3(v319) ^ 0xA4] ^ ((BYTE3(v319) ^ 0x67)
                                                      - ((2 * (BYTE3(v319) ^ 0x67) + 68) & 0xDA)
                                                      + 15) ^ 0xB8;
  uint64_t v326 = *(void *)(v53 - 200);
  *(unsigned char *)(a47 + v326) = ((BYTE3(v320) ^ 0xC7) + (~(2 * (BYTE3(v320) ^ 0xC7) + 68) | 0x25) + 16) ^ 0x64 ^ v325[BYTE3(v320) ^ 4];
  uint64_t v327 = HIBYTE(v321);
  *(unsigned char *)(a47 + *(void *)(v53 - 256)) = v325[BYTE3(v324) ^ 0xC7] ^ ((BYTE3(v324) ^ 4)
                                                                         - ((2 * (BYTE3(v324) ^ 4) + 68) & 0xDA)
                                                                         + 15) ^ 0x6B;
  uint64_t v328 = (uint64_t)*(&off_26DE9F480 + (int)v300 - 345);
  int v329 = *(unsigned __int8 *)(v328 + (BYTE2(v324) ^ 0xA5));
  HIDWORD(v215) = v329 ^ 0xD;
  LODWORD(v215) = (v329 ^ 0xC0) << 24;
  *(unsigned char *)(a47 + *(void *)(v53 - 248)) = (v215 >> 29) ^ 0x5A;
  LOBYTE(v329) = v325[v327 ^ 0x4E];
  LODWORD(v325) = (v327 ^ 0x8D) - ((2 * (v327 ^ 0x8D) + 68) & 0xE6) - 107;
  LOBYTE(v327) = v325 ^ 0x73;
  char v330 = (v329 & 2) + v327 - ((2 * ((v329 & 2) + v327)) & 0xBA);
  BOOL v193 = (v329 & 2 & ~v325) == 0;
  char v331 = v327 - (v329 & 2) - ((2 * (v327 - (v329 & 2))) & 0xBA);
  char v332 = v329 & 0xFD ^ 0xED;
  if (v193) {
    char v331 = v330;
  }
  *(unsigned char *)(a47 + *(void *)(v53 - 184)) = (v332 - ((2 * v332) & 0xBB) - 35) ^ 0x15 ^ (v331 - 35);
  unsigned int v333 = (char *)*(&off_26DE9F480 + SHIDWORD(a14)) - 8;
  *(unsigned char *)(a47 + *(void *)(v53 - 240)) = v333[BYTE1(v324) ^ 0xF8] ^ 0xE3;
  uint64_t v334 = (uint64_t)*(&off_26DE9F480 + (int)a14);
  *(unsigned char *)(a47 + *(void *)(v53 - 192)) = *(unsigned char *)(v334 + (v324 ^ 0x67)) ^ (((16 * *(unsigned char *)(v334 + (v324 ^ 0x67))) ^ (*(unsigned char *)(v334 + (v324 ^ 0x67)) << 7))
                                                                                                  - ((32 * *(unsigned char *)(v334 + (v324 ^ 0x67))) & 0xC0)
                                                                                                  + 99) ^ 0xE1;
  *(unsigned char *)(a47 + *(void *)(v53 - 216)) = v333[BYTE1(v321) ^ 0xA0] ^ 0x82;
  *(unsigned char *)(a47 + *(void *)(v53 - 176)) = *(unsigned char *)(v334 + (v320 ^ 0x40)) ^ (((16 * *(unsigned char *)(v334 + (v320 ^ 0x40))) ^ (*(unsigned char *)(v334 + (v320 ^ 0x40)) << 7))
                                                                                                  - 32 * (*(unsigned char *)(v334 + (v320 ^ 0x40)) & 3)
                                                                                                  - 67) ^ 0xFC;
  int v335 = *(unsigned __int8 *)(v328 + (BYTE2(v321) ^ 0x83));
  HIDWORD(v336) = v335 ^ 0xD;
  LODWORD(v336) = (v335 ^ 0xC0) << 24;
  *(unsigned char *)(a47 + *(void *)(v53 - 160)) = (v336 >> 29) ^ 0xF6;
  int v337 = *(unsigned __int8 *)(v328 + (((v319 ^ 0xEACB18) >> 16) ^ 0x91));
  HIDWORD(v336) = v337 ^ 0xD;
  LODWORD(v336) = (v337 ^ 0xC0) << 24;
  *(unsigned char *)(a47 + *(void *)(v53 - 224)) = (v336 >> 29) ^ 0xF1;
  *(unsigned char *)(a47 + *(void *)(v53 - 232)) = v333[((unsigned __int16)(v319 ^ 0xCB18) >> 8) ^ 0x7DLL] ^ 0x62;
  *(unsigned char *)(a47 + *(void *)(v53 - 168)) = v333[BYTE1(v320) ^ 0xF8] ^ 0xBF;
  unsigned int v338 = *(unsigned __int8 *)(v328 + (BYTE2(v320) ^ 0xDCLL));
  *(unsigned char *)(a47 + *(void *)(v53 - 208)) = ((8 * v338) ^ 0x68) & 0x30 ^ (((v338 & 0x20) != 0) | 0x20) | ((8 * v338) ^ 0x68) & 0xCF ^ ((v338 >> 5) & 6 | 0xC0);
  *(unsigned char *)(a47 + *(void *)(v53 - 152)) = *(unsigned char *)(v334 + (v319 ^ 0xCFLL)) ^ 0xA8 ^ (((16 * *(unsigned char *)(v334 + (v319 ^ 0xCFLL))) ^ (*(unsigned char *)(v334 + (v319 ^ 0xCFLL)) << 7)) - ((32 * *(unsigned char *)(v334 + (v319 ^ 0xCFLL))) & 0xC0) + 98);
  uint64_t v339 = v326 - 874083712 - ((2 * v326 + 32) & 0x97CD1500) + 16;
  *(unsigned char *)(a47 + *(void *)(v53 - 144)) = *(unsigned char *)(v334 + (v321 ^ 0x43)) ^ 0x49 ^ (((16 * *(unsigned char *)(v334 + (v321 ^ 0x43))) ^ (*(unsigned char *)(v334 + (v321 ^ 0x43)) << 7)) - ((32 * *(unsigned char *)(v334 + (v321 ^ 0x43))) & 0x40) + 39);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a49 + 8 * (((2 * ((v339 ^ 0xCBE68A80) < HIDWORD(a22))) | (4 * ((v339 ^ 0xCBE68A80) < HIDWORD(a22)))) ^ ((int)v300 + 705))))(v319, v326, 186, v320, v324, v339, HIDWORD(a13), v300, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_22B3594D4@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W8>)
{
  *(void *)(a2 + v4 + ((a3 + 2016) ^ 0xFFFFFFFFC617BB51)) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & 0xFFFFFFFFFFFFFFF8) == 8) * a1) ^ a3)))();
}

uint64_t sub_22B35951C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v1 + v2 + 3105) = *(unsigned char *)(v5 + v1 + v2 + 3105) ^ 0x2A;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v2 + 1 == v3) * ((1562 * (v4 ^ 0xC23)) ^ 0x15A)) ^ (v4 - 1865))))();
}

uint64_t sub_22B359570()
{
  if (v1) {
    BOOL v4 = *(void *)((v2 ^ 0x6FDCEC412A2DC68BLL) - 0x6FDCEC412A2DC673) == 0x3FB394992CBB4F6FLL;
  }
  else {
    BOOL v4 = 1;
  }
  int v6 = v4 || v0 == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((21 * v6) ^ 0x320)))();
}

uint64_t sub_22B3595FC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, _DWORD *a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((22 * (((*a6 == a4 + 7) ^ (a3 + a5 + 117)) & 1)) ^ (a3 + a5 - 1589))))();
}

uint64_t sub_22B359660()
{
  return (*(uint64_t (**)(void))(*(void *)(v3 + 8 * (v0 ^ 0x2C0))
                              - 8
                              + 8 * ((3822 * (v1 - 1 < (v2 | 0x380u) + 2147482685)) ^ v0)))();
}

uint64_t sub_22B3596A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v14 = (a6 - 1500310720);
  *(unsigned char *)(*(void *)(v13 - 136) + v14) ^= *(unsigned char *)(v10 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v11 + 2) ^ *(unsigned char *)(v9 + (v14 & 0xF)) ^ (107 * (v14 & 0xF));
  return (*(uint64_t (**)(void))(v12 + 8 * ((3162 * (a6 - 1 == v8)) ^ (a8 + 1094))))();
}

uint64_t sub_22B359714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, int a12, int a13, int a14, uint64_t a15, uint64_t a16)
{
  STACK[0x200] = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8 * (LODWORD(STACK[0x240]) + 1744)))(a16, 2965982036);
  unsigned int v18 = (*(uint64_t (**)(void))(v16 + 8 * a13))();
  *uint64_t v17 = v18;
  unsigned int v19 = v18 ^ 0xDFC0C049 ^ ((v18 >> 30) - 541015991 - (a11 & (2 * (v18 >> 30))));
  v17[1] = ((1812433253 * v19) ^ 0x6F5BFDDD) + ((-670100790 * v19) & 0xDEB7FBBA) - 1868299740;
  return (*(uint64_t (**)(void))(v16 + 8 * (a14 ^ 0x1E6)))();
}

void sub_22B359828(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 4) - 1328090399 * ((-2 - ((a1 | 0xEE2656C1) + (~a1 | 0x11D9A93E))) ^ 0xEE0ACD04);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[1] = v1 + 1438293641 * (((~v4 & 0x64328604) - (~v4 | 0x64328605)) ^ 0xDCF5D37A) + 581;
  uint64_t v5 = v2;
  uint64_t v3 = (char *)*(&off_26DE9F480 + v1 - 19) - 8;
  (*(void (**)(_DWORD *))&v3[8 * v1 + 29624])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B35996C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((45 * (**(unsigned char **)(a2 - 0x48A9B556C05DE579) != 0)) ^ 0x251u)))();
}

void sub_22B3599B0()
{
  unsigned int v5 = v3 - ((((v4 + 2556) ^ 0x7503D307) + 2 * v3) & 0xD0BE2342) + 585171112;
  *unsigned int v7 = (HIBYTE(v5) ^ 0x68) - 2 * ((HIBYTE(v5) ^ 0x68) & 0x2B ^ HIBYTE(v5) & 1) + 42;
  v7[1] = (BYTE2(v5) ^ 0x5F) - ((2 * (BYTE2(v5) ^ 0x5F)) & 0x55) + 42;
  v7[2] = (BYTE1(v5) ^ 0x11) + (~(v5 >> 7) | 0xAB) + 43;
  v7[3] = (v3 - ((((v4 - 4) ^ 7) + 2 * v3) & 0x42) - 88) ^ 0x8B;
  uint64_t v6 = v2 - ((2 * v2) & 0x21062569B8736126) - 0x6F7CED4B23C64F6DLL;
  v7[4] = (HIBYTE(v6) ^ 0x90) - ((2 * HIBYTE(v6)) & 0x55) + 42;
  v7[5] = (BYTE6(v6) ^ 0x83) - 2 * ((BYTE6(v6) ^ 0x83) & 0x2E ^ BYTE6(v6) & 4) + 42;
  v7[6] = (BYTE5(v6) ^ 0x12) + ~(2 * ((BYTE5(v6) ^ 0x12) & 0x2B ^ BYTE5(v6) & 1)) + 43;
  v7[7] = (BYTE4(v6) ^ 0xB4) - 2 * ((BYTE4(v6) ^ 0xB4) & 0x2B ^ BYTE4(v6) & 1) + 42;
  v7[8] = (((v2 - ((2 * v2) & 0xB8736126) - 600199021) >> 24) ^ 0xDC)
        - ((2 * (((v2 - ((2 * v2) & 0xB8736126) - 600199021) >> 24) ^ 0xDC)) & 0x55)
        + 42;
  v7[9] = (BYTE2(v6) ^ 0x39) - ((2 * (BYTE2(v6) ^ 0x39)) & 0x55) + 42;
  v7[10] = (BYTE1(v6) ^ 0xB0) - 2 * ((BYTE1(v6) ^ 0xB0) & 0x2B ^ BYTE1(v6) & 1) + 42;
  v7[11] = v6 ^ 0xB9;
  *(_DWORD *)(v0 + 20) = *(_DWORD *)(v1 - 0x19157D3ABD2659C6);
}

uint64_t sub_22B359B88(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  v27.n128_u64[0] = 0x5454545454545454;
  v27.n128_u64[1] = 0x5454545454545454;
  v28.n128_u64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v28.n128_u64[1] = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v26 + 8 * (((629 * (v25 ^ 0x296) + 17 * (v25 ^ 0x2DE) - 1017) * (a18 < 0xFFFFFFFE)) ^ v25 ^ 0x2AC)))(755338528, 634835353, a25, 3660131943, 4123138792, a10, 3792312788, a1, a2, a3, a4, v27, v28);
}

uint64_t sub_22B359C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,unint64_t a32,uint64_t a33,_DWORD *a34)
{
  *a34 = 0;
  unsigned int v37 = ((v34 ^ (v34 >> 11)) << a18) & 0x9D2C5680 ^ v34 ^ (v34 >> 11);
  *(_DWORD *)(*a31 + a32) ^= (v37 << 15) & 0xEFC60000 ^ v37 ^ (((v37 << 15) & 0xEFC60000 ^ v37) >> 18);
  return (*(uint64_t (**)(void))(v36 + 8 * ((v35 + 1618120765) ^ (181 * (a32 < 0x1FC)))))();
}

uint64_t sub_22B359C2C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  BOOL v4 = a2 + a1 + 546078727 >= (((a3 ^ 0x941) - 2049) ^ 0x469u);
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * v4) | (8 * v4)) ^ a3 ^ 0x935)))();
}

uint64_t sub_22B359CB8(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((21 * (a2 + a1 + 595593249 >= ((v2 - 1058) | 0x418u) - 1045)) ^ v2)))();
}

uint64_t sub_22B359D38(_DWORD *a1)
{
  unsigned int v1 = 1503746353 * (((a1 | 0xD5B13F5D) - (a1 & 0xD5B13F5D)) ^ 0xF3D0FDEB);
  unsigned int v2 = *a1 - v1;
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (int)(v2 ^ 0x9F1))
          + (int)(((a1[4] - v1 - 1299996371 > 6) * ((v2 ^ 0xE30) - 5040 + ((v2 + 539018468) & 0xDFDF3FCD))) ^ v2)
          - 1))();
}

uint64_t sub_22B359DF4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((123 * (a1 - 1327893013 < (v1 ^ 0xAC7A1B80))) ^ (v1 + 1401285846))))();
}

uint64_t sub_22B359E50(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 - 784 + a4 - 951 - 4405) * (v4 == a3)) ^ a4)))();
}

uint64_t sub_22B359E80@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v18 = v13 + a2 + ((a6 - 2608) | 0x95u) - 149;
  int v19 = (v7 ^ v12)
      + v11
      + *(_DWORD *)(a4 + 4 * v18)
      + (((a1 ^ v12 | v8 ^ v9) + v12 - (v14 & (2 * (a1 ^ v12 | v8 ^ v9)))) ^ v17)
      + (*(_DWORD *)(a7 + 4 * (*(unsigned char *)(a3 + v18) - 53)) ^ v10);
  unsigned int v20 = (v19 + v12 - (v14 & (2 * v19))) ^ v12;
  LODWORD(v18) = ((v20 << (*(unsigned char *)(a5 + v18) - 113)) | (v20 >> (113 - *(unsigned char *)(a5 + v18)))) + (a1 ^ v12);
  return (*(uint64_t (**)(void))(v15 + 8 * ((113 * (a2 + 1 == v16 + 64)) ^ a6)))(v18 + v12 - (v14 & (2 * v18)));
}

uint64_t sub_22B359F98@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((123
                                * (((*(unsigned __int8 *)(v4 + 6) - 1) ^ v3)
                                 + v2
                                 + (((a1 + 37) ^ 0x4B1 ^ v5) & (2 * (*(unsigned __int8 *)(v4 + 6) - 1))) != a2)) ^ a1)))();
}

uint64_t sub_22B359FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18 + 8 * (((a16 == v17 + v16 + 520 - 3479) * (3 * (v16 ^ 0x9FD) - 1843)) ^ v16)))();
}

uint64_t sub_22B35A024()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((((v0 - 1892970058) < 0x38)
                                                       * (((v2 + 92) | 0xA18) - 2613)) ^ (v2 + 789))))(2345, 362);
}

uint64_t sub_22B35A07C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v7 = ((a4 - 52514126) & 0x3214EFF ^ 0x87B2FBA4) + v6;
  BOOL v9 = v7 > 1993606874 || v7 < v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((105 * v9) ^ a4)))();
}

uint64_t sub_22B35A0E4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((a1 + 961389845) & 0xC6B25BFF) - 5097 + ((a1 - 2296) | 0x9D0)) * (v2 == v1)) ^ a1)))();
}

uint64_t sub_22B35A148(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  *(void *)(a5 + v7) = *(void *)(v6 + v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8 * (((a3 == 0) * v5) ^ a4)))(a1, a2, (a3 + 8));
}

uint64_t sub_22B35A178()
{
  char v4 = *(unsigned char *)(v2 - 0x3707DB8770DACECELL);
  v6[0] = v3 - 1988622253 * ((~v6 & 0xC6BBBC32 | v6 & 0x394443CD) ^ 0x30A3FC92) + 1019600273;
  char v7 = (v4 ^ 0x69)
     - 83 * ((~v6 & 0x32 | v6 & 0xCD) ^ 0x92)
     + (((v3 ^ 0x95) + 113) & (2 * v4) ^ 0x2C);
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v3 ^ 0x12BCu)))(v6);
  *int v0 = v6[1];
  return result;
}

void sub_22B35A264()
{
}

void sub_22B35A280()
{
}

uint64_t sub_22B35A294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = 15 * (v5 ^ 0xBF9);
  if (v6) {
    int v9 = -604050357;
  }
  else {
    int v9 = a5 + 3;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((948 * (v9 == (((v8 ^ 0xC90) - 604052566) ^ v8 ^ 0x375))) ^ v8)))();
}

uint64_t sub_22B35A2C8()
{
  int v3 = *(unsigned char **)(v2 - 200);
  *(unsigned char *)(v2 - 112) = *v3;
  *(unsigned char *)(v2 - 111) = v3[1];
  *(unsigned char *)(v2 - 110) = v3[2];
  *(unsigned char *)(v2 - 109) = v3[3];
  *(unsigned char *)(v2 - 108) = v3[4];
  *(unsigned char *)(v2 - 107) = v3[5];
  *(unsigned char *)(v2 - 106) = v3[6];
  *(unsigned char *)(v2 - 105) = v3[7];
  *(unsigned char *)(v2 - 104) = v3[8];
  *(unsigned char *)(v2 - 103) = v3[9];
  *(unsigned char *)(v2 - 102) = v3[10];
  *(unsigned char *)(v2 - 101) = v3[11];
  *(unsigned char *)(v2 - 100) = v3[12];
  *(unsigned char *)(v2 - 99) = v3[13];
  *(unsigned char *)(v2 - 98) = v3[14];
  *(unsigned char *)(v2 - 97) = v3[15];
  *(void *)(v2 - 128) = *(void *)v3;
  *(void *)(v2 - 120) = *((void *)v3 + 1);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 - 343646221) & 0x147B9CFD) - 1928806842) & 0x72F73F3D ^ 0x66D) * (v3 == 0)) ^ (v0 - 343646221) & 0x147B9CFD)))();
}

void sub_22B35A3D0()
{
}

uint64_t sub_22B35A3E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  BOOL v21 = v20 > -1547569001;
  *(_DWORD *)(a16 + 4 * (a1 - 963274103) - 0x54EEBA8C0E75CADCLL) = v16;
  int v22 = (v17 ^ 0x188) + a1;
  int v23 = a1 - 1563188750;
  uint64_t v24 = (v22 - 2890);
  int v25 = v21 ^ (v23 < 1547569000);
  BOOL v26 = v23 < v18;
  if (!v25) {
    BOOL v21 = v26;
  }
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (v17 | (16 * v21))))(v24);
}

void sub_22B35A470(uint64_t a1)
{
  if (*(void *)(a1 + 48)) {
    BOOL v2 = *(void *)(a1 + 8) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  int v1 = *(_DWORD *)(a1 + 24) - 1866394843 * ((((2 * a1) | 0xB40DB18) - a1 - 94399884) ^ 0xEFB75A78);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_22B35A550(uint64_t a1)
{
  unsigned int v7 = ((v1 ^ 0x17A) + 1014781581) & 0xC383A5F6;
  *int v10 = a1;
  *int v3 = (v2 + (v1 ^ 0x17A) - 1202) ^ v12;
  int v8 = 337 * (v7 ^ 0x135);
  uint64_t v15 = v11;
  unsigned int v14 = (v7 + 2197) ^ (((((&v14 | 0xA2F36EB6) ^ 0xFFFFFFFE) - (~&v14 | 0x5D0C9149)) ^ 0x4BFCD463)
                     * v6);
  (*(void (**)(unsigned int *))(v5 + 8 * (int)(v7 ^ 0xEEF)))(&v14);
  uint64_t v15 = v13;
  unsigned int v14 = (v8 + 1496) ^ (((((&v14 | 0xEB8B9512) ^ 0xFFFFFFFE) - (~&v14 | 0x14746AED)) ^ 0x2842FC7)
                     * v6);
  (*(void (**)(unsigned int *))(v5 + 8 * (v8 + 3046)))(&v14);
  return v4 ^ v2;
}

#error "22B35E730: call analysis failed (funcsize=3964)"

uint64_t sub_22B35E734@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X6>, int a6@<W8>)
{
  int v17 = (a6 ^ v15)
      + v9
      + *(_DWORD *)(a3 + 4 * (a5 + v14))
      + (((a4 ^ a1) + v15 - (((a4 ^ a1) << ((v10 + 9) & 0xF9 ^ 0xD8)) & v12)) ^ v7)
      + (*(_DWORD *)(v6 + 4 * (*(unsigned char *)(a2 + a5 + v14) - 53)) ^ v13);
  unsigned int v18 = (v17 + v15 - (v12 & (2 * v17))) ^ v15;
  int v19 = ((v18 << (*(unsigned char *)(v8 + a5 + v14) - 113)) | (v18 >> (113 - *(unsigned char *)(v8 + a5 + v14)))) + (a1 ^ v15);
  return (*(uint64_t (**)(void))(v11 + 8 * ((15 * (a5 + 1 == v16 + 32)) ^ v10)))(v19 + v15 - (v12 & (2 * v19)));
}

uint64_t sub_22B35E818@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((*(unsigned __int8 *)(v5 + 7) - 1) ^ v4)
                                 + v2
                                 + (v3 & (2 * (*(unsigned __int8 *)(v5 + 7) - 1))) == a2)
                                * ((a1 + 120) ^ 0xD9C)) ^ a1)))();
}

uint64_t sub_22B35E858()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((468 * ((((v0 - 2020437789) ^ (*(void *)(v1 + 24) == 0x124BD769AAC602A0)) & 1) == 0)) ^ v0)))();
}

void sub_22B35E8A4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_22B35E900(int a1@<W8>)
{
  *(_DWORD *)(v1 - 248) = v2;
  *(_DWORD *)(v1 - 256) = a1;
  JUMPOUT(0x22B35E960);
}

uint64_t sub_22B35EA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  *(_DWORD *)(v62 - 120) = (v61 + 1060) ^ (225134719 * ((v62 - 1776634037 - 2 * ((v62 - 144) & 0x961AB7DB)) ^ 0x80EAF2F1));
  *(void *)(v62 - 136) = a45 + (a59 - 230568399);
  *(void *)(v62 - 128) = &STACK[0x5E30592FF90A5610];
  *(void *)(v62 - 144) = &STACK[0x1901A95D18EF6B4D];
  *(void *)(v62 - 112) = a46;
  (*(void (**)(uint64_t))(v60 + 8 * (v61 + 4018)))(v62 - 144);
  return (*(uint64_t (**)(uint64_t))(v60
                                            + 8
                                            * ((1239
                                              * (*(_DWORD *)(v62 - 104) == ((v61 + 1843403869) & 0x921FEB6F)
                                                                         + (v61 ^ 0x1B ^ (v59 - 2278)))) ^ v61)))(a23);
}

uint64_t sub_22B35EB5C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((46 * (*(void *)(qword_26DE9F660 - 4) != 0)) | 0x801u)))();
}

uint64_t sub_22B35EB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t))
{
  unsigned int v31 = (v27 + 657150632) & 0xD8D4AAE7;
  *(unsigned char *)(a3 + (v26 + 2)) = *(unsigned char *)(a4 + (v31 ^ 0xEB4C6A26) + v28);
  int v32 = 1948972247 * ((v30 + 370653895 - 2 * ((v30 - 168) & 0x1617BB6F)) ^ 0xA3894E81);
  *(void *)(v30 - 160) = a25;
  *(_DWORD *)(v30 - 152) = v31 - v32 + 519;
  *(_DWORD *)(v30 - 168) = v32 + 1460438876;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (int)(v31 + 4027)))(v30 - 168);
  return a26(v33);
}

uint64_t sub_22B35EC40@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  unsigned int v9 = v8 + v5 + v4 + v3 + 3698;
  uint64_t v10 = a1 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a2 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v7
                              + 8 * (int)((((v2 & 0xFFFFFFE0) == 32) * ((v6 + 856844584) & 0xCCED9BB5 ^ 0x1A1)) ^ v6)))();
}

void sub_22B35ECB0(uint64_t a1)
{
  int v1 = 1734664879 * (((a1 | 0x69305C2F) - a1 + (a1 & 0x96CFA3D0)) ^ 0x46EB7435);
  int v2 = *(_DWORD *)a1 - v1;
  if (*(void *)(a1 + 24)) {
    BOOL v3 = *(_DWORD *)(a1 + 16) - v1 == 1646535767;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B35ED7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((a4 - 7289835) ^ 0xFF90CB1A) + ((a4 - 7289835) & 0x6F3DB5) - 4478)
                                     * (*(_DWORD *)(v5 - 244) == *(_DWORD *)(v5 - 256))) ^ a4)))();
}

uint64_t sub_22B35EDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9)
{
  uint64_t v11 = a7[69];
  a7[37] = *(void *)(v10 + 8 * v9);
  return sub_22B33E74C(a1, 17, a5, a7, a8, v11, a9);
}

uint64_t sub_22B35EE20@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v4 + a1 + 24) = *(_OWORD *)(v3 + a1 + 24);
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 == 48) * (v2 ^ v1)) ^ v2)))();
}

uint64_t sub_22B35EE58@<X0>(uint64_t a1@<X0>, int a2@<W2>, char a3@<W3>, int a4@<W8>)
{
  return sub_22B34A148(a1, a2 + 1280, a3, *(_DWORD *)(*v5 + 4 * (int)(((a2 + 1280) ^ 0xB6A4CE55) + v6) - 0x54EEBA8C0E75CADCLL), v4, a4);
}

uint64_t sub_22B35EE94(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (((v4 + 1297986621) & 0xB2A24BFF) + a2 - 677548768) % v2;
  *(unsigned char *)(v3 + v7) ^= *(unsigned char *)(a2 + v6 - 151 - 677547889) ^ 0x80;
  return (*(uint64_t (**)(void))(v5 + 8 * ((93 * (a2 + 1 == a1 + 35)) ^ v4)))();
}

uint64_t sub_22B35EF18(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 & 0x18) == ((((a3 - 2594) ^ 0x153) + 773) ^ 0x308))
                                * (973 * ((a3 - 2594) ^ 0x153) - 507)) ^ (a3 - 2594))))();
}

void sub_22B35F0D0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30)
{
  int v33 = (*a30 ^ (v32 + 1219) ^ (467 * (a1 ^ 0x3E3))) + (v30 ^ v32);
  *a30 = v33 + v32 - (v31 & (2 * v33));
  JUMPOUT(0x22B35F118);
}

void sub_22B35F1B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, uint64_t a18, unsigned char *a19, unsigned char *a20,unsigned char *a21,unsigned char *a22,unsigned int *a23,unsigned char *a24,unsigned char *a25,unsigned char *a26,unsigned char *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned __int8 *a33,unsigned int *a34)
{
  int v34 = *a33 ^ 0x22;
  if (v34 == 1)
  {
    unsigned int v42 = *a34;
    char v40 = a3 - 79;
    *a27 = ((8 * *(unsigned char *)a34) ^ 0xC8) - ((2 * ((8 * *(unsigned char *)a34) ^ 0xC8)) & 0x55) + 42;
    *a26 = ((a3 - 79) ^ 0xA2 ^ (v42 >> 5)) - 2 * (((a3 - 79) ^ 0xA2 ^ (v42 >> 5)) & 0x2F ^ (v42 >> 5) & 5) + 42;
    *a25 = ((v42 >> 13) ^ 0x29) - ((2 * ((v42 >> 13) ^ 0x29)) & 0x55) + 42;
    char v39 = 84;
    *a24 = ((v42 >> 21) ^ 0x11) - ((v42 >> 20) & 0x54) + 42;
    unsigned int v43 = *a23;
    HIDWORD(v44) = *a23 ^ 6;
    LODWORD(v44) = v42 ^ 0x20000000;
    *a22 = (v44 >> 29) - ((2 * (v44 >> 29)) & 0x55) + 42;
    *a21 = ((v43 >> 5) ^ 0x9D) - ((2 * ((v43 >> 5) ^ 0x9D)) & 0x55) + 42;
    *a20 = ((v43 >> 13) ^ 0xBD) - ((2 * ((v43 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v38 = v43 >> 21;
    int v41 = (v43 >> 21) ^ 0x40;
  }
  else
  {
    if (v34 != 2) {
      goto LABEL_6;
    }
    unsigned int v35 = *a23;
    *a27 = (a16 ^ (*a23 >> 21) ^ 0x52) - ((*a23 >> 20) & 0x54) + 42;
    *a26 = ((v35 >> 13) ^ 0xBD) - ((2 * ((v35 >> 13) ^ 0xBD)) & 0x55) + 42;
    *a25 = ((v35 >> 5) ^ 0x9D) - ((2 * ((v35 >> 5) ^ 0x9D)) & 0x55) + 42;
    unsigned int v36 = *a34;
    HIDWORD(v37) = v35 ^ 6;
    LODWORD(v37) = *a34 ^ 0x20000000;
    *a24 = (v37 >> 29) - ((2 * (v37 >> 29)) & 0x55) + 42;
    *a22 = ((v36 >> 21) ^ 0x11) - ((v36 >> 20) & 0x54) + 42;
    *a21 = ((v36 >> 13) ^ 0x29) - 2 * (((v36 >> 13) ^ 0x29) & 0x2E ^ (v36 >> 13) & 4) + 42;
    *a20 = ((v36 >> 5) ^ 0xB0) - 2 * (((v36 >> 5) ^ 0xB0) & 0x2B ^ ((v36 & 0x20) != 0)) + 42;
    LOBYTE(v38) = (8 * v36) ^ 0xC8;
    char v39 = 80;
    char v40 = a16;
    LOBYTE(v41) = v38;
  }
  *a19 = v41 - (((_BYTE)v38 << (v40 - 17)) & v39) + 42;
LABEL_6:
  JUMPOUT(0x22B33C284);
}

uint64_t sub_22B35F448@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A6830FLL) = v3;
  unsigned int v4 = *v2 - ((2 * *v2 + 692014888) & 0xBBD5D166) - 225800121;
  return (*(uint64_t (**)(void))(v1
                                           + 8
                                           * ((49
                                             * (((2 * v4) & 0xDF7BCBFC ^ 0x9B51C164) + (v4 ^ 0x32570D4D) - 134578188 == 1740137970)) ^ 0xF9Eu)))(0);
}

uint64_t sub_22B35F51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (int)((v23 + 1181) | ((a22 & 0x20000000u) >> 24))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_22B35F540(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(_DWORD *)(a1 + 48 * (v2 - 381654869) + 36) == v2)
                                     * (((v1 + 664336726) & 0xD86701FD) - 433)) ^ v1)))();
}

void sub_22B35F59C()
{
}

void sub_22B35FA00()
{
  *int v2 = v3 + v4 + *v2 - 356028237;
  *(_DWORD *)(v0 + 40) = v1 + 965;
}

uint64_t sub_22B35FA64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v9 + (a4 + v8)) = *(unsigned char *)(v7 + (a4 + v8)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v10 + 8 * (int)(((a4 - 1 == v6) * (((a6 + 959167150) & 0xC6D44BFF) - 1037)) ^ a6)))();
}

uint64_t sub_22B35FAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int8x16x4_t v82 = vld4q_s8(a6);
  uint64_t v62 = (HIDWORD(a41) + 193462314) & 0xF477FB61;
  uint8x16_t v63 = (uint8x16_t)veorq_s8(v82.val[1], v61);
  _Q17 = vmovl_u8(*(uint8x8_t *)v63.i8);
  _Q16 = vmovl_high_u8(v63);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint64_t v72 = v62 ^ 0x40D;
  uint64_t v73 = v56 + 16 + v57;
  int v74 = *(_DWORD *)(v60 + 4 * (v73 + v72) - 4540);
  uint64_t v75 = (_DWORD *)(v60 + 4 * v73);
  unsigned int v76 = (*(v75 - 8) ^ v74) + v59 - ((2 * (*(v75 - 8) ^ v74)) & 0xB7FDD896);
  int v77 = *(v75 - 16) ^ *(v75 - 14);
  uint64_t v78 = v77 ^ 0x5BFEEC4B ^ v76;
  HIDWORD(v79) = v77 ^ 0x5BFEEC4B ^ v76;
  LODWORD(v79) = v77 ^ ~v76;
  *uint64_t v75 = (v79 >> 31) + v59 - ((2 * (v79 >> 31)) & 0xB7FDD896);
  unint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (int)((v62 + 1279) ^ (2 * (v56 + 17 == v56 + 80))));
  return v80(a1, 3086866582, a3, v62, v80, v78, v72, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_22B35FC90@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v29 - 152) = v27;
  *(void *)(v29 - 120) = v22 - 7;
  *(void *)(v29 - 128) = v28 - 7;
  *(_DWORD *)(v29 - 160) = v27 & 0xFFFFFFF8;
  *(_DWORD *)(v29 - 136) = -(v27 & 0xFFFFFFF8);
  int v30 = -8 - a6;
  int v31 = a2 + a4 + a3;
  *(_DWORD *)(v29 - 144) = v31 + 12;
  uint64_t v32 = a1 ^ 0x40Cu;
  *(void *)(v29 - 168) = v32;
  v32 -= 646;
  uint64_t v33 = (a4 + a3 + a5 + v30 + 8);
  v35.val[0].i64[0] = v33 & v32;
  v35.val[0].i64[1] = ((_BYTE)v31 + 2 + (_BYTE)v30 + 8) & 0xF;
  v35.val[1].i64[0] = ((_BYTE)v31 + 1 + (_BYTE)v30 + 8) & 0xF;
  v35.val[1].i64[1] = (v26 + (_BYTE)v30 + 8) & 0xF;
  v35.val[2].i64[0] = ((_BYTE)v31 + 15 + (_BYTE)v30 + 8) & 0xF;
  v35.val[2].i64[1] = ((_BYTE)v31 + 14 + (_BYTE)v30 + 8) & 0xF;
  v35.val[3].i64[0] = ((_BYTE)v31 + 13 + (_BYTE)v30 + 8) & 0xF;
  v35.val[3].i64[1] = (*(_DWORD *)(v29 - 144) + (_BYTE)v30 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v29 - 128) + v33) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v25 + (v33 & v32) - 7), *(int8x8_t *)(*(void *)(v29 - 120) + v33)), veor_s8(*(int8x8_t *)((v33 & v32) + v23 - 2), *(int8x8_t *)(v24 + (v33 & v32) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v35, (int8x16_t)xmmword_22B497560), (int8x8_t)0xA3A3A3A3A3A3A3A3)));
  return (*(uint64_t (**)(__n128))(a22 + 8 * ((3321 * (*(_DWORD *)(v29 - 136) == v30)) ^ a1)))((__n128)xmmword_22B497560);
}

uint64_t sub_22B35FE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  BOOL v35 = v32 != v31 + v29 - 437 || a29 != v30;
  return (*(uint64_t (**)(void))(v33 + 8 * ((v35 * ((v29 + 3210) ^ 0x951)) ^ v29)))();
}

void sub_22B35FE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int v9 = 1948972247 * ((((2 * (v7 - 192)) | 0x7FFB5882) - (v7 - 192) + 1073894335) ^ 0xA6359AF);
  STACK[0x1948] = a6;
  *(_DWORD *)(v7 - 172) = -118723830 - v9;
  *(_DWORD *)(v7 - 192) = (v6 + 514405679) ^ v9;
  (*(void (**)(uint64_t))(v8 + 8 * (int)(v6 ^ 0xFC4)))(v7 - 192);
  STACK[0x2F0] = *(void *)(STACK[0x270] + 8 * v6);
  JUMPOUT(0x22B33FC28);
}

uint64_t sub_22B35FED4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  unsigned int v23 = *(_DWORD *)(v20 + 4 * (v18 - 1));
  *(_DWORD *)(v20 + 4 * v18) = ((1566083941 * (v23 ^ (v23 >> 30))) ^ *(_DWORD *)(v20 + 4 * v18)) - v18;
  unint64_t v24 = 1292559617 * ((0xF1A19130C2728AF6 - ((v22 - 144) | 0xF1A19130C2728AF6) + a18) ^ 0xD7C453B79ADE1D60);
  *(_DWORD *)(v22 - 140) = (a1 - 1604164844) ^ v24;
  *(_DWORD *)(v22 - 120) = (a1 + 655060587) ^ v24;
  *(_DWORD *)(v22 - 112) = a1 + 655060788 + v24;
  *(_DWORD *)(v22 - 108) = a1 + 655060788 - v24 + 25;
  *(_DWORD *)(v22 - 116) = v24 ^ 1;
  *(void *)(v19 + 16) = v18 + 1 - v24;
  *(void *)(v19 + 24) = 623 - v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (a1 + 2103)))(v22 - 144);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * *(int *)(v22 - 144)))(v25);
}

uint64_t sub_22B35FFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v13 = (a11 ^ 0x5BFBFFF6)
      + ((2 * a11) & 0xB7F7FFEC)
      + ((10 * (v12 ^ 0x2B8) + 593257783) & 0xDCA396C7)
      - 1364855771
      - 178387684 < 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v11 + 8 * ((2 * v13) | (v13 << 6) | v12)))();
}

uint64_t sub_22B360058(unsigned __int8 a1, char a2, int a3, int8x16_t a4, int8x8_t a5, uint64_t a6, int a7, int a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = a9 - 8;
  uint64_t v33 = (a3 + v32);
  v35.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v32) & 0xF;
  v35.val[0].i64[1] = (a2 + (_BYTE)v32 + 9) & 0xF;
  v35.val[1].i64[0] = (a2 + (_BYTE)v32 + 8) & 0xF;
  v35.val[1].i64[1] = (a2 + (_BYTE)v32 + 7) & 0xF;
  v35.val[2].i64[0] = (a2 + (_BYTE)v32 + 6) & 0xF;
  v35.val[2].i64[1] = (a2 + (_BYTE)v32 + 5) & 0xF;
  v35.val[3].i64[0] = (a2 + (_BYTE)v32 + (a1 ^ 0xF9)) & 0xF;
  v35.val[3].i64[1] = (a2 + (_BYTE)v32 + 3) & 0xF;
  *(int8x8_t *)(a10 + v33) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v27 + (v33 & 0xF) - 7), *(int8x8_t *)(v28 + v33)), veor_s8(*(int8x8_t *)(v30 + (v33 & 0xF) - 7), *(int8x8_t *)(v29 + (v33 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v35, a4), a5)));
  return (*(uint64_t (**)(void))(a27 + 8 * (((v31 == v32) * a7) ^ a8)))();
}

uint64_t sub_22B360060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((a6 - 2442) ^ 0xFFFFF270) + ((a6 - 3083) ^ 0xBB3)) * (v6 != a5)) ^ (a6 - 3083))))();
}

uint64_t sub_22B360098@<X0>(int a1@<W2>, int a2@<W8>)
{
  if ((a2 + 1282729728) > 0x18 || ((1 << a2) & 0x1000581) == 0) {
    JUMPOUT(0x22B3438E0);
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((56 * (((((v2 + a1 - 38) | 0xB4u) ^ 0xFFFFFFFFFFFFE4ALL) & v4) != 0)) ^ (v2 + a1 + 2544))))();
}

uint64_t sub_22B36011C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((v1 - 304220821) & 0xBB67DEF7) + v3) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_22B360158@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18)
{
  *(&a18 + a1 - 1913594376) = 42;
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((4 * ((unint64_t)(a1 - 1913594375) < 0x38)) | (((unint64_t)(a1 - 1913594375) < 0x38) << 6)) ^ (v20 + v18 + 1355))))();
}

uint64_t sub_22B3601A0(int a1)
{
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((((((17 * (v1 ^ 0x3C5)) ^ 0xB75) & a1) == 0) * ((4 * v1) ^ 0x6F6)) ^ v1)))((4 * v1) ^ 0x580u);
}

uint64_t sub_22B3601EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((((((a8 + 1077) | 0x4A) + 509042276) & 0xE1A89D5F) + 1903) ^ 0xA9B)
                                     * ((v8 & 8) == 0)) ^ ((a8 + 1077) | 0x4A))))();
}

uint64_t sub_22B360240(uint64_t result)
{
  unint64_t v1 = 1328090399 * ((2 * (result & 0x58B74E4A150132C1) - result + 0x2748B1B5EAFECD3ELL) ^ 0xFE573689152DA904);
  uint64_t v2 = (_DWORD *)(result + 8);
  unint64_t v3 = *(void *)(result + 24) - v1;
  unint64_t v4 = *(void *)(result + 40) ^ v1;
  BOOL v5 = v4 >= v3;
  BOOL v6 = (uint64_t)v4 < (uint64_t)v3;
  int v7 = !v5;
  if ((*(_DWORD *)(result + 32) + 1328090399 * ((2 * (result & 0x150132C1) - result - 352400066) ^ 0x152DA904))) {
    int v8 = v6;
  }
  else {
    int v8 = v7;
  }
  if (!v8) {
    uint64_t v2 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 12) = *(_DWORD *)(result + 16) ^ (1328090399
                                                       * ((2 * (result & 0x150132C1) - result - 352400066) ^ 0x152DA904)) ^ (*v2 + 1328090399 * ((2 * (result & 0x150132C1) - result - 352400066) ^ 0x152DA904));
  return result;
}

void sub_22B3602E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 28) ^ (1990461019 * ((a1 & 0x2E0916E9 | ~(a1 | 0x2E0916E9)) ^ 0xFE124B9F));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B3603C0@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0x273)))(a1 ^ (v2 - 3110) ^ (6 * (v1 ^ 0xCAE)) ^ 0xB38u, 2917507175) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((70 * v4) ^ v1)))();
}

void sub_22B36042C()
{
  int v5 = 1948972247 * ((-2105644017 - ((v4 - 136) | 0x827E6C0F) + ((v4 - 136) | 0x7D8193F0)) ^ 0xC81F661E);
  *(_DWORD *)(v4 - 136) = (v1 + 1633) ^ v5;
  *(_DWORD *)(v4 - 132) = v2 - v5 - 843692395;
  *(void *)(v4 - 128) = v3;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 2397)))(v4 - 136);
  JUMPOUT(0x22B3604A8);
}

uint64_t sub_22B360558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21,uint64_t a22,int *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,int a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v36 = *a23;
  uint64_t v37 = *a21;
  unsigned int v38 = 2009815553 * ((2 * (&a27 & 0x3CEFAA80) - &a27 - 1022339713) ^ 0x321B7B3A);
  a30 = v34 - v38 + 1583;
  a29 = a15;
  a27 = a13;
  a34 = 285189382 - v38 + v36;
  a31 = v37;
  a32 = a14;
  a33 = a12;
  uint64_t v40 = (*(uint64_t (**)(uint64_t *))(v35 + 8 * (v34 | 0x910)))(&a27);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35
                                                                                         + 8
                                                                                         * (((a28 == -604050357)
                                                                                           * (((v34 - 1705) | 0x120) ^ 0xF1C)) ^ v34)))(v40, a2, 4164039495, 1801476207, 130930587, a17);
}

uint64_t sub_22B360678@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *((unsigned char *)&STACK[0x28C] + (((v4 - 2334) ^ 0xFFFFFF8DLL) & (a2 + v2))) = *(unsigned char *)(v3 + v6 - 1532947935)
                                                                                       - ((2
                                                                                         * *(unsigned char *)(v3 + v6 - 1532947935)) & 0x55)
                                                                                       + 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((123 * ((a1 + a2 + 1) > 0x3F)) ^ v4)))();
}

uint64_t sub_22B3606E8(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v2 + v1 - 1874716158) > 7) * (24 * (a1 ^ 0x27A) - 3688)) | a1)))();
}

uint64_t sub_22B360744(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  int v2 = 1734664879 * ((2 * (a1 & 0x5C09438B) - a1 - 1544110988) ^ 0x8C2D946E);
  int v3 = *(_DWORD *)(a1 + 32) + v2;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unsigned int v8 = 1990461019 * ((2 * (v11 & 0x46F57180) - v11 - 1190490500) ^ 0x96EE2CF5);
  unsigned int v9 = (((*(_DWORD *)(a1 + 24) - v2) ^ 0x247F81F0)
      + 1237745529
      + ((2 * (*(_DWORD *)(a1 + 24) - v2)) & 0xEEFFE3DE ^ 0xA600E01E)) ^ v8;
  int v12 = v3 + 1652554754 - v8 + 2202;
  unsigned int v13 = v9;
  v11[0] = v5;
  v11[1] = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v4;
  uint64_t result = (*((uint64_t (**)(void *))*(&off_26DE9F480 + v3 + 1652554754) + (int)(v3 ^ 0x9D801548) - 1))(v11);
  *(_DWORD *)(a1 + 28) = v16;
  return result;
}

void sub_22B3608B0()
{
}

void sub_22B360A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16)
{
  int v20 = (*a16 ^ (v19 - 812) ^ (164 * (v17 ^ 0xB67))) + (v16 ^ v19);
  *a16 = v20 + v19 - (v18 & (2 * v20));
  JUMPOUT(0x22B360AE0);
}

uint64_t sub_22B360B78@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v4 + (v3 - 433310473)) = *(unsigned char *)(a1 + (v3 - 433310473))
                                                  - ((2 * *(unsigned char *)(a1 + (v3 - 433310473))) & 0x55)
                                                  + 42;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 - 1 == v2) * ((v1 + 410) ^ 0x383)) ^ v1)))();
}

void sub_22B360BC8()
{
}

uint64_t sub_22B360BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  return a27(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

void sub_22B360BE0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_22B360C78()
{
  if (v0 == 161119631) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 24) = v1;
}

uint64_t sub_22B360CDC@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v7 = (unsigned __int8 *)(a1 + v2 + v3);
  int v8 = ((v7[1] ^ 0x2A) << ((a2 - 97) ^ 0x71)) | ((*v7 ^ 0x2A) << 24) | ((v7[2] ^ 0x2A) << 8);
  *(_DWORD *)(v6 + ((v2 + v3) & 0xFFFFFFFFFFFFFFFCLL)) = (v8 | v7[3] ^ 0x2A)
                                                       + v5
                                                       - 2 * ((v8 | v7[3] ^ 0x2A) & 0x5BFEEC4F ^ (v7[3] ^ 0x2A) & 4);
  return (*(uint64_t (**)(void))(v4 + 8 * ((23 * ((unint64_t)(v2 + 4 + v3) > 0x3F)) ^ a2)))();
}

uint64_t sub_22B360D78(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(void))
{
  LODWORD(STACK[0x298]) = (v37 ^ v38) + (v35 ^ v38) + v38 - (v39 & (2 * ((v37 ^ v38) + (v35 ^ v38))));
  LODWORD(STACK[0x29C]) = (a1 ^ v38) + (v34 ^ v38) + v38 - (v39 & (2 * ((a1 ^ v38) + (v34 ^ v38))));
  LODWORD(STACK[0x2A0]) = (v36 ^ v38) + (v33 ^ v38) + v38 - (v39 & (2 * ((v36 ^ v38) + (v33 ^ v38))));
  LODWORD(STACK[0x2A4]) = (a2 ^ v38) + (v32 ^ v38) + v38 - (v39 & (2 * ((a2 ^ v38) + (v32 ^ v38))));
  return a32();
}

uint64_t sub_22B360D94(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * (int)((((*(_DWORD *)(*v4 + 4 * v7 - 0x54EEBA8C0E75CADCLL) ^ v2) > (*(_DWORD *)(*v5 + 4 * v7 - 0x54EEBA8C0E75CADCLL) ^ v2))
                                                            * ((89 * (v6 ^ 0xB7C) + 135676552) & 0xF7E9B6F6 ^ 0x4A6)) ^ v6)))(a1, v3);
}

uint64_t sub_22B360E14(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v6 = (a4 - 758) | 0x8E4;
  uint64_t v7 = (a2 + v6 - 40893247);
  BOOL v9 = v4 - 961452364 > 2106593188 || v4 - 961452364 < (int)v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v5 + 8 * ((v9 * (((v6 - 2610) | 0x444) - 1268)) ^ v6)))(a1, v7, 1092, 3333514932, 2106593188, 2189296923, 2105668854, 0xAB114573F18A3524);
}

void sub_22B360EF4(int a1@<W8>, int a2, __int16 a3, char a4, char a5, int8x16_t a6, int a7, char a8, int8x16_t a9)
{
  uint64_t v14 = (uint64_t *)(v13 - 128);
  uint64_t v15 = *v10;
  if (v9 == 123)
  {
LABEL_5:
    uint64_t v16 = (uint64_t)&v15[56 * *v15 + 24];
    int v17 = 1948972247 * ((v13 - 128 - 2 * ((v13 - 128) & 0x38FE8E8F) + 956206735) ^ 0x8D607B61);
    *(void *)(v13 - 104) = &STACK[0x1C88CB57747EAF59];
    *uint64_t v14 = v16;
    *(_DWORD *)(v13 - 112) = -1493880289 - v17;
    *(_WORD *)(v13 - 116) = 27086 - -2857 * ((v13 - 128 - 2 * ((v13 - 128) & 0x8E8F) - 29041) ^ 0x7B61);
    *(_DWORD *)(v13 - 120) = v17 + v12 - 2327;
    (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x1C68)))(v13 - 128);
    int v18 = 1734664879 * ((v13 - 128) ^ 0x2FDB281A);
    *(void *)(v13 - 104) = &a4;
    int v19 = v18 + 1646535768;
    *(_DWORD *)(v13 - 112) = v18 + 1646535768;
    int v20 = v12 + v18 - 1539;
    *(_DWORD *)uint64_t v14 = v20;
    *(void *)(v13 - 120) = &STACK[0x1C88CB57747EAF59];
    (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x39E)))(v13 - 128);
    *(void *)(v13 - 120) = &STACK[0x1C88CB57747EAF59];
    *(void *)(v13 - 104) = &a5;
    *(_DWORD *)(v13 - 112) = v19;
    *(_DWORD *)uint64_t v14 = v20;
    (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x39E)))(v13 - 128);
    *(_DWORD *)(v13 - 120) = (v12 - 3050) ^ (1438293641
                                           * ((((v13 - 128) | 0x2AC53E67) - (v13 - 128) + ((v13 - 128) & 0xD53AC198)) ^ 0x92026B18));
    *(void *)(v13 - 112) = &a8;
    *uint64_t v14 = (uint64_t)&STACK[0x1C88CB57747EAF59];
    (*(void (**)(uint64_t))(v11 + 8 * (v12 + 976)))(v13 - 128);
    sub_22B349970();
    return;
  }
  if (v9 != 26)
  {
    if (v9 != 25)
    {
      sub_22B361450(a1);
      return;
    }
    goto LABEL_5;
  }
  *uint64_t v14 = (uint64_t)&STACK[0x21AEEC4F795AEF9B];
  *(_DWORD *)(v13 - 120) = v12
                         - 1438293641 * ((((v13 - 128) | 0x1A18ACCE) - ((v13 - 128) & 0x1A18ACCE)) ^ 0xA2DFF9B1)
                         + 1118656238;
  (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x1C4B)))(v13 - 128);
  int v21 = 1990461019 * ((-1294110926 - ((v13 - 128) | 0xB2DD6F32) + ((v13 - 128) | 0x4D2290CD)) ^ 0x62C63244);
  *uint64_t v14 = (uint64_t)&STACK[0x21AEEC4F795AEF9B];
  *(void *)(v13 - 120) = &a4;
  *(_DWORD *)(v13 - 112) = v12 + 1298779074 + v21;
  *(_DWORD *)(v13 - 108) = 1625468338 - v21;
  (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x1C42)))(v13 - 128);
  int v22 = 1990461019 * (((v13 - 128) & 0xB4926575 | ~((v13 - 128) | 0xB4926575)) ^ 0x64893803);
  *(_DWORD *)(v13 - 112) = v12 + 1298779074 + v22;
  *(_DWORD *)(v13 - 108) = 1625468338 - v22;
  *uint64_t v14 = (uint64_t)&STACK[0x21AEEC4F795AEF9B];
  *(void *)(v13 - 120) = &a5;
  (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x1C42)))(v13 - 128);
  unsigned int v23 = &v15[56 * *v15];
  *(unsigned char *)(v13 - 129) = v23[43] ^ ((v12 ^ 0x76) - 19);
  *(unsigned char *)(v13 - 130) = v23[42] ^ 0x2A;
  *(unsigned char *)(v13 - 131) = v23[41] ^ 0x2A;
  *(unsigned char *)(v13 - 132) = v23[40] ^ 0x2A;
  *(unsigned char *)(v13 - 133) = v23[39] ^ 0x2A;
  *(unsigned char *)(v13 - 134) = v23[38] ^ 0x2A;
  *(unsigned char *)(v13 - 135) = v23[37] ^ 0x2A;
  *(unsigned char *)(v13 - 136) = v23[36] ^ 0x2A;
  *(unsigned char *)(v13 - 137) = v23[35] ^ 0x2A;
  *(unsigned char *)(v13 - 138) = v23[34] ^ 0x2A;
  *(unsigned char *)(v13 - 139) = v23[33] ^ 0x2A;
  *(unsigned char *)(v13 - 140) = v23[32] ^ 0x2A;
  *(unsigned char *)(v13 - 141) = v23[31] ^ 0x2A;
  *(unsigned char *)(v13 - 142) = v23[30] ^ 0x2A;
  *(unsigned char *)(v13 - 143) = v23[29] ^ 0x2A;
  *(unsigned char *)(v13 - 144) = v23[28] ^ 0x2A;
  *(unsigned char *)(v13 - 145) = v23[27] ^ 0x2A;
  *(unsigned char *)(v13 - 146) = v23[26] ^ 0x2A;
  *(unsigned char *)(v13 - 147) = v23[25] ^ 0x2A;
  *(unsigned char *)(v13 - 148) = v23[24] ^ 0x2A;
  *(_DWORD *)(v13 - 112) = v12 + 1734664879 * ((v13 + 1529604084 - 2 * ((v13 - 128) & 0x5B2BE874)) ^ 0x74F0C06E) - 1349;
  *(void *)(v13 - 104) = &a6;
  *uint64_t v14 = (uint64_t)&STACK[0x21AEEC4F795AEF9B];
  *(void *)(v13 - 120) = v13 - 148;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v12 ^ 0x38A)))(v13 - 128);
  v25.i64[0] = 0x5454545454545454;
  v25.i64[1] = 0x5454545454545454;
  v26.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v26.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  int8x16_t v27 = vrev64q_s8(*(int8x16_t *)((char *)&a6 + 4));
  int8x16_t v28 = vextq_s8(v27, v27, 8uLL);
  int8x16_t v29 = vrev64q_s8(vaddq_s8(vsubq_s8(v28, vandq_s8(vaddq_s8(v28, v28), v25)), v26));
  a9 = vextq_s8(v29, v29, 8uLL);
  (*(void (**)(uint64_t))(v11 + 8 * (v12 ^ 0x100)))(v24);
}

uint64_t sub_22B3613EC()
{
  return sub_22B361450();
}

void sub_22B361450(int a1@<W8>)
{
  *(_DWORD *)(v1 + 28) = a1;
}

uint64_t sub_22B361490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((54 * (v4 + 1 == a3 + 4)) ^ v5)))();
}

uint64_t sub_22B36155C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 == v0) ^ (v1 - 83)) & 1) * (v1 - 1928)) ^ v1)))();
}

uint64_t sub_22B36158C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((56 * (v0 != 0)) ^ 0xE0Bu)))();
}

uint64_t sub_22B3615C0()
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v2 + 8 * (v4 ^ 0xD4B)))(**(unsigned int **)(v3 + 8 * (v4 ^ 0x2AC)), v6, v7);
  *(_DWORD *)(v0 + 52) = v1;
  return result;
}

uint64_t sub_22B3615F4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1739 * (a1 + ((v1 - 1948729473) & 0xF255FBFF ^ 0x8DF0D786) < 0x38)) ^ (v3 + v1 + 1355))))();
}

uint64_t sub_22B361644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 24632))(a1, a2, a3, a4, a5, a38);
}

uint64_t sub_22B3616AC(uint64_t a1, int a2, int a3)
{
  unsigned int v8 = v5 + v4 + a2;
  uint64_t v9 = v6 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((v3 & 0xFFFFFFE0) != 32) * ((((a3 ^ 0xECE) + 362344292) & 0xEA670E49) - 2553)) ^ ((a3 ^ 0xECE) - 1746))))();
}

uint64_t sub_22B36171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, void, uint64_t, uint64_t))(v31 + 8 * ((1623 * (a12 + ((2 * (STACK[0x2A4] & 0x3F)) ^ 0x32) + (((v30 + 2275) | 0x402) ^ ((v30 ^ 0x11C) + 964422099) ^ STACK[0x2A4] & 0x3F) < 0xFFFFFFC0)) ^ (v30 + 2753))))(a1, 42, 3091215624, a4, &STACK[0x260], a30, 94, 82);
}

void sub_22B3617C8()
{
}

uint64_t sub_22B361940()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 - 144983884) & 0x8A44CFF) + 380) ^ ((v1 - 590) | 0x802))
                                * (v0 != v2 - 316462007)) ^ v1)))();
}

uint64_t sub_22B361994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x248] = 0xAFEF29A936E79976;
  LODWORD(STACK[0x244]) = **(_DWORD **)(v68 + 8 * (v67 ^ 0x93E));
  uint64_t v72 = **(unsigned int **)(v68 + 8 * (v67 ^ 0x9E1));
  *(void *)(v71 - 152) = -1990461019 * a67;
  int v73 = v67 - 926268515 + 1990461019 * a67;
  *(_DWORD *)(v71 - 124) = v73;
  *(_DWORD *)(v71 - 120) = ((v67 - 926268515) ^ 0xAA) + 1990461019 * a67;
  *(_DWORD *)(v71 - 144) = 1990461019 * a67;
  *(_DWORD *)(v71 - 128) = (v67 - 1084415748) ^ (1990461019 * a67);
  *(_DWORD *)(v71 - 116) = v73 + 9;
  *(void *)(v70 + 16) = v72 - 1990461019 * a67;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v69 + 8 * (v67 + 1815)))(v71 - 152);
  return (*(uint64_t (**)(uint64_t))(v69 + 8 * *(int *)(v71 - 140)))(v74);
}

uint64_t sub_22B361A64()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((*(_DWORD *)(v4 + 48 * v0 + 36) + 1934182843) < 0x80000004)
                                * ((v1 ^ (v3 - 460)) - v3 + 2783)) ^ v1)))();
}

void sub_22B361AC0(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int *a46)
{
  (*(void (**)(void, uint64_t, void))(v46 + 8 * (a2 + 3283)))(*a46, a1, LODWORD(STACK[0x368]));
  JUMPOUT(0x22B361AE0);
}

uint64_t sub_22B361B98(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14)
{
  unsigned int v27 = v19 - 16;
  uint64_t v28 = v27 & 0xF;
  uint64_t v29 = v17;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(v18 + v27) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v28 - 15), *(int8x16_t *)(a14 + v27)), veorq_s8(*(int8x16_t *)(v28 + v14 - 13), *(int8x16_t *)(v16 + v28 - 15))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * (((v20 == 16) * v21) ^ a13)))();
}

uint64_t sub_22B361BA4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1720 * (*(_DWORD *)(v1 + 4) - v0 == (((v3 - 652) | 0x601) ^ 0x5DC2D861))) ^ v3)))();
}

uint64_t sub_22B361BEC@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v7 = a3 + v5;
  *(unsigned char *)(v7 + a2 - 1) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 < 0x38) * a1) ^ (v3 - 1374))))();
}

void sub_22B361C2C()
{
}

uint64_t sub_22B361C7C@<X0>(int a1@<W7>, int a2@<W8>, __n128 a3@<Q1>, int8x16_t a4@<Q4>, int8x16_t a5@<Q5>)
{
  uint64_t v22 = a2 - 16 + (a1 ^ (v11 + 698));
  uint64_t v23 = ((_BYTE)a2 - 16 + (a1 ^ (v11 - 70))) & 0xF;
  uint64_t v24 = v13;
  v25.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a3 - 1), a4).u64[0];
  v25.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v18, a4).u64[0];
  int8x16_t v26 = vrev64q_s8(vmulq_s8(v25, a5));
  *(int8x16_t *)(v14 + v22) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 + (v22 & 0xF) - 15), *(int8x16_t *)(v12 + v22)), veorq_s8(*(int8x16_t *)(v10 + (v22 & 0xF) - 15), *(int8x16_t *)((v22 & 0xF) + v8 - 11))), vextq_s8(v26, v26, 8uLL));
  return (*(uint64_t (**)(void))(v17 + 8 * (((v15 == 16) * v16) ^ v7)))();
}

uint64_t sub_22B361C8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (a3 ^ (127
                                     * ((((a10 - (a19 & 0x7CF8628E) + 1881253539) << (((-23 * (a3 ^ 0x33)) ^ 0x31) + 30)) & 0xCFFDF4FE ^ 0x4CF8608E)
                                      + ((a10 - (a19 & 0x7CF8628E) + 1881253539) ^ 0xD982CB38)
                                      - 1104435716 != 640327803)))))();
}

uint64_t sub_22B361D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = *(unsigned char **)(v13 + 8);
  unsigned int v20 = 1503746353 * ((&a11 - 445393276 - 2 * (&a11 & 0xE573D684)) ^ 0xC3121432);
  LODWORD(a13) = v20 + 1299996384;
  a12 = v16;
  LODWORD(a11) = v18 + 1393 + v20;
  (*(void (**)(uint64_t *))(v15 + 8 * (v18 + 3259)))(&a11);
  int v21 = *v17;
  int v22 = 2 * *v17 + 126290330;
  unsigned int v23 = 2009815553
      * ((-1329413884 - (&a11 | 0xB0C2C104) + (&a11 | 0x4F3D3EFB)) ^ 0xBE3610BE);
  LODWORD(a12) = v18 - 715354614 + v23;
  HIDWORD(a12) = v23 + v21 + 2135133267 - (v22 & 0xF7000F0C);
  a11 = v14 - 0x1DE0C3AB9D5F9684;
  (*(void (**)(uint64_t *))(v15 + 8 * (v18 + 3330)))(&a11);
  unsigned int v24 = 2009815553 * (&a11 ^ 0xF10B2E45);
  unsigned int v25 = v24
      + *(_DWORD *)(v14 - 0x21AEEC4F795AEEB3)
      + 2135133267
      - ((2 * *(_DWORD *)(v14 - 0x21AEEC4F795AEEB3) + 126290330) & 0xF7000F0C);
  LODWORD(a12) = v18 - 715354614 + v24;
  HIDWORD(a12) = v25;
  a11 = v14 - 0x1DE0C3AB9D5F9680;
  (*(void (**)(uint64_t *))(v15 + 8 * (v18 + 3330)))(&a11);
  a12 = v14 - 0x1A311C056C7BD919;
  a13 = v16;
  LODWORD(a11) = 225134719 * (((&a11 | 0x424E1FD7) + (~&a11 | 0xBDB1E028)) ^ 0x54BE5AFC)
               - 157117291
               + v18
               + 977;
  (*(void (**)(uint64_t *))(v15 + 8 * (v18 + 3401)))(&a11);
  unsigned int v26 = 1503746353 * (((&a11 | 0x273325F1) + (~&a11 | 0xD8CCDA0E)) ^ 0x152E746);
  LODWORD(a13) = v26 + 1299996374;
  a12 = v14 - 0x21AEEC4F795AEEC7;
  LODWORD(a11) = v18 + 1393 + v26;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v15 + 8 * (v18 ^ 0xCCF)))(&a11);
  *uint64_t v19 = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC7);
  v19[1] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC6);
  v19[2] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC5);
  v19[3] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC4);
  v19[4] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC3);
  v19[5] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC2);
  v19[6] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC1);
  v19[7] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEC0);
  v19[8] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEBFLL);
  v19[9] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEBELL);
  v19[10] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEBDLL);
  v19[11] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEBCLL);
  v19[12] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEBBLL);
  v19[13] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEBALL);
  v19[14] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEB9);
  v19[15] = *(unsigned char *)(v14 - 0x21AEEC4F795AEEB8);
  *(_OWORD *)(v14 - 0x21AEEC4F795AEEC7) = 0u;
  *uint64_t v17 = 2084338483;
  *(_DWORD *)(v14 - 0x21AEEC4F795AEEB3) = 2084338483;
  *(_OWORD *)(v14 - 0x21AEEC4F795AEEAFLL) = 0u;
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1950 * (v18 == 858)) ^ v18)))(v27);
}

uint64_t sub_22B3621D8(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((2029
                                     * ((a1 ^ 0x1C0BEC13 ^ (541 * (v1 & 0xE0761BE9 ^ 0xBEE)))
                                      + ((2 * a1) & 0xBFB6FFF6 ^ v2)
                                      - 1217929904 == (((v1 & 0xE0761BE9 ^ 0xBEE) + 1326) ^ 0x1743587E))) ^ v1 & 0xE0761BE9)))();
}

uint64_t sub_22B362258@<X0>(int a1@<W8>)
{
  int v7 = ((v4 - 84) | 0x2F) + *(unsigned __int8 *)(v3 + 5) - 956;
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((3250 * ((v7 ^ v2) + v1 + ((((v4 - 688) | 0x641) ^ v5) & (2 * v7)) == a1)) ^ v4)))();
}

uint64_t sub_22B3622B0@<X0>(unint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  STACK[0x2F0] = *(void *)(v50 + 8 * (int)(STACK[0x278] - 3114));
  unint64_t v51 = STACK[0x260];
  STACK[0x538] = STACK[0x268];
  LODWORD(STACK[0x544]) = 556261543;
  STACK[0x330] = a1;
  return (*(uint64_t (**)(void))(v50
                              + 8
                              * ((231
                                * ((v49 & (2 * *(_DWORD *)(v51 + 196)) ^ 0x22)
                                 + (*(_DWORD *)(v51 + 196) & 0x3F ^ 0x756E7ACCu)
                                 - 1970174727 < 0xFFFFFFC0)) ^ a48 & 0x5DC21FE6)))();
}

uint64_t sub_22B3622CC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 == v1) * ((v0 - 1587) ^ v0 ^ 0xA5C)) ^ (v0 - 414))))();
}

uint64_t sub_22B3622FC()
{
  int v5 = v1 + v0;
  unsigned int v6 = v5 + ((v2 + 645) ^ 0x8303094F);
  if (v6 <= 0x40) {
    unsigned int v6 = 64;
  }
  BOOL v7 = __CFADD__(v5 - 2096955391, v3 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * (v7 | (2 * v7) | v2)))();
}

uint64_t sub_22B362360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v17 = 1948972247 * ((2 * ((v16 - 120) & 0x60637EE0) - (v16 - 120) - 1617133282) ^ 0x2A0274F0);
  *(_DWORD *)(v16 - 120) = v17 + a14 - 332430158;
  *(void *)(v16 - 112) = a11;
  *(_DWORD *)(v16 - 104) = v15 - v17 + 501;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 4009)))(v16 - 120);
  uint64_t v19 = *(_DWORD *)(v16 - 152) & 0x3F;
  *(unsigned char *)(v16 - 220 + (v19 ^ 0x19)) = -86;
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((2061 * ((v19 ^ 0x19) > 0x37)) ^ v15)))(v18);
}

uint64_t sub_22B36247C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v8 = v3 - 2009815553 * ((&v5 & 0xCD6F9BD7 | ~(&v5 | 0xCD6F9BD7)) ^ 0xC39B4A6D) + 1772;
  uint64_t v6 = v2;
  uint64_t v7 = v2;
  uint64_t v5 = a1;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 + 3262)))(&v5);
}

uint64_t sub_22B3624DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v48 = v43 - 1711;
  int v49 = (v48 - 1702548358) | 0x5084801;
  uint64_t v50 = (*(uint64_t (**)(uint64_t, void))(v44 + 8 * (v48 ^ 0x14A3)))(a16, 0);
  uint64_t v51 = 8 * (v48 + 2877);
  (*(void (**)(uint64_t))(v44 + v51))(v50);
  *(_DWORD *)(v46 + 4 * (v45 + 1215976522)) = (*(uint64_t (**)(void))(v44 + v51))()
                                                            + ((1664525
                                                              * (*(_DWORD *)(v46 + 4
                                                                                 * (v45 + 1215976521)) ^ (*(_DWORD *)(v46 + 4 * (v45 + 1215976521)) >> 30))) ^ *(_DWORD *)(v46 + 4 * (v45 + 1215976522)));
  int v52 = v49 + 5712567 - a43;
  *(_DWORD *)(v47 - 144) = v52 - 39;
  *(_DWORD *)(v47 - 140) = 84358355 - a43 + v49;
  *(void *)(v47 - 120) = a43 + 3215497864;
  *(void *)(v47 - 104) = a43 ^ 0xBFA89A8ALL;
  *(_DWORD *)(v47 - 112) = -(int)a43;
  *(_DWORD *)(v47 - 128) = a43 ^ (v49 + 5712567) ^ 0xF5;
  *(_DWORD *)(v47 - 136) = v52;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (int)(v49 ^ 0x9F8D76CC)))(v47 - 144);
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * *(int *)(v47 - 132)))(v53);
}

uint64_t sub_22B36264C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * (v5 + 1 == a3 + 44)) | (16 * (v5 + 1 == a3 + 44))) ^ v4)))();
}

uint64_t sub_22B362714()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((((v0 - 815968876) & 0x30A2B59F) - 942) * (v1 != 0x9C887A0F)) ^ v0)))(2120100184);
}

uint64_t sub_22B36276C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,int a21)
{
  *a5 = 0;
  *a6 = 0;
  a20 = (1292559617 * ((842773906 - (&a20 | 0x323BB592) + (&a20 | 0xCDC44A6D)) ^ 0x6A972204)) ^ 0x9B42BBAD;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v21 + 32176))(&a20);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((2954 * (a21 == v22)) ^ 0x3A9u)))(v23);
}

uint64_t sub_22B362818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v14 = v11 - 1569460846 + v10;
  uint64_t v15 = v11 - (v8 & 0x1FFFFFFF8) + 8;
  uint64_t v16 = a6 + v11 + v9 + (v12 - 425);
  *(void *)(v7 + (v16 - 1231)) = *(void *)(a7 + v14);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((2947 * (v15 == 0)) ^ v12)))(v16 - 1223);
}

uint64_t sub_22B362880(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((a2 + 72 + ((a2 + 529) | 0x110) - 339)
                                              * (*(_DWORD *)(v28 - 140) == *(_DWORD *)(v28 - 144))) ^ a2)))(a27);
}

_DWORD *sub_22B3628BC(_DWORD *result)
{
  *uint64_t result = ((v2 - 709) | 0xA05) - v1 - 938530977;
  return result;
}

uint64_t sub_22B3628E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  unsigned int v53 = ((-1015934418 - (v46 | 0xC372122E) + (v46 | 0x3C8DEDD1)) ^ 0xD69ADA25) * v45;
  v48[34] = v50;
  v48[36] = a44;
  v48[37] = a45;
  *(_DWORD *)(v51 - 176) = (v47 - 1875) ^ v53;
  *(_DWORD *)(v51 - 152) = v53 - 1335958178;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (v47 + 1610)))(v51 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * ((965
                                              * (((41 * (v47 ^ 0xDA) + 1) ^ (*(_DWORD *)(v51 - 192) == v49 + ((2 * v47) ^ 0x1318) - 164)) & 1)) ^ v47)))(v54);
}

uint64_t sub_22B3629C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x530]) = 604092319;
  return (*(uint64_t (**)(void))(v8 + 8 * ((13 * (*(void *)(a7 + 432) != 0)) ^ (v7 - 738))))();
}

uint64_t sub_22B3629FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9)
{
  a7[37] = *(void *)(v10 + 8 * v9);
  return sub_22B33E74C(a1, a2, a5, a7, a8, a6, a9);
}

uint64_t sub_22B362A10()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((108 * ((v0 ^ 0xEAB4E5E6) + v1 == 534525742)) ^ v0)))();
}

void sub_22B362A48(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x2970AB8229FC3CEELL) = (*(_DWORD *)(a1 - 0x2970AB8229FC3CEELL) ^ 0xC817B3A6)
                                         - 937970778
                                         - ((2 * (*(_DWORD *)(a1 - 0x2970AB8229FC3CEELL) ^ 0xC817B3A6) + 2) & 0x902F674C)
                                         + 1;
}

uint64_t sub_22B362A90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (1438293641 * ((2 * (a1 & 0xC77E475F) - a1 + 948025504) ^ 0x8046EDDF));
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + v1 - 1282)
          + ((26 * (*(void *)(a1 + 8) != 0x3707DB8770DACED2)) ^ v1)
          - 1))();
}

uint64_t sub_22B362B30@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((a1 + a2 - 1251 + ((a2 + 546598472) | 0x93200000) - 1356) * (v3 == v2)) ^ a2)))();
}

uint64_t sub_22B362B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v26 = 4 * (v23 + v19);
  int v27 = v13 + v22 + (*(_DWORD *)(*(void *)(a10 - 0x281D12643933BF1BLL) + v26 - 0x54EEBA8C0E75CADCLL) ^ v24);
  *(_DWORD *)(*(void *)(a13 - 0x281D12643933BF1BLL) + v26 - 0x54EEBA8C0E75CADCLL) = v27 + v24 - (v20 & (2 * v27));
  int v28 = v23 + 1 + v15;
  int v29 = (v21 > v18) ^ (v28 < v14);
  BOOL v30 = v28 < v17;
  if (v29) {
    BOOL v30 = v21 > v18;
  }
  return (*(uint64_t (**)(void))(v25 + 8 * ((2914 * v30) ^ ((v16 ^ 0xD74) - 676))))();
}

uint64_t sub_22B362C7C()
{
  *(_DWORD *)(v6 - 120) = v4 + ((((v6 - 136) | 0x89CAE6D9) - ((v6 - 136) & 0x89CAE6D9)) ^ 0x63DDD12D) * v3 + 1339;
  *(void *)(v6 - 112) = v1;
  *(void *)(v6 - 128) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 2662)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*(_DWORD *)(v6 - 136) > v0) * (v4 - 1358)) ^ v4)))(v7);
}

uint64_t sub_22B362D04@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((125
                                     * (((((((v3 ^ 0x238) - 3071) | 0x50C) ^ 0xC9215243) + v1)
                                       * ((((v3 ^ 0x238) - 1779) ^ 0xC9215243) + v2)) >> 31)) ^ v3 ^ 0x238)))();
}

uint64_t sub_22B362D54(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((861 * (v4 < ((((a4 + 15737384) & 0xFF0FDFED) - 113) ^ a4 ^ 0x28B))) ^ a4)))();
}

uint64_t sub_22B362DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v14
                                           + 8
                                           * (((a13 == v13 + (v15 ^ 0x17A) - 1202)
                                             * (((v15 - 976443354) & 0x3A335F9F) + 81)) ^ v15)))(0);
}

uint64_t sub_22B362DF4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v31 = v28 + (((a2 - 564) | 0x4A8) ^ (v30 + 2522));
  long long v32 = *(_OWORD *)(a27 + v31 - 15);
  long long v33 = *(_OWORD *)(a27 + v31 - 31);
  int v34 = (char *)&STACK[0x22C] + v31;
  *(_OWORD *)(v34 - 15) = v32;
  *(_OWORD *)(v34 - 31) = v33;
  return (*(uint64_t (**)(void))(v29 + 8 * ((a2 - 276) ^ (4 * ((v27 & 0xFFFFFFE0) == 32)))))();
}

uint64_t sub_22B362E54(double a1)
{
  *(double *)(v4 + v6) = a1;
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v5 == v6) ^ v1) & 1) * v2) ^ v3)))();
}

uint64_t sub_22B362E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unsigned int v18 = (HIDWORD(a12) & 0xDA3BFCE6) + (v15 ^ 0xED1DFE73);
  BOOL v20 = (((_BYTE)v18 + 13) & 0xF) == 0 && v18 != ((v16 - 1274071875) & 0x4BF0CFF6) - 316802931;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((v20 | (8 * v20)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_22B362EF4(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((a1 - 1298) | 0x821) ^ 0xFFFFF474) + ((a1 - 2326) | 0xC25))
                                     * (*(_DWORD *)(v2 - 232) == *(_DWORD *)(v2 - 236))) ^ a1)))();
}

uint64_t sub_22B362F3C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 + 153) ^ (41 * (v0 <= v1 - 2687)))))();
}

uint64_t sub_22B36302C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1847 * (v1 != 836278164)))))();
}

uint64_t sub_22B36307C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  *(_OWORD *)(a3 + (v7 + a2)) = *a7;
  return (*(uint64_t (**)(void))(v11 + 8 * ((1153 * ((v8 ^ v10) - 1515 == ((v9 + 1) & 0x1FFFFFFF0))) ^ v8)))();
}

uint64_t sub_22B3630D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (((v5 == ((v4 - 3030) ^ 0x69))
                                                                                           * (6 * (v4 ^ 0xDC2) - 2936)) ^ v4)))(a1, -733245989, a3, a4, 798, 22);
}

uint64_t sub_22B363120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,int a37)
{
  int v48 = LOBYTE(STACK[0x2B0]) ^ 0x22;
  if (v48 == 1)
  {
    unsigned int v55 = STACK[0x294];
    unsigned int v56 = STACK[0x290];
    char v57 = ((LODWORD(STACK[0x294]) >> 5) ^ 0xB0)
        - 2 * (((LODWORD(STACK[0x294]) >> 5) ^ 0xB0) & 0x2F ^ (LODWORD(STACK[0x294]) >> 5) & 5);
    int v58 = (LODWORD(STACK[0x294]) >> 13) ^ 0x29;
    LOBYTE(STACK[0x288]) = ((8 * LOBYTE(STACK[0x294])) ^ 0xC8)
                         - ((v46 + 41) & (2 * ((8 * LOBYTE(STACK[0x294])) ^ 0xC8)))
                         + 42;
    LOBYTE(STACK[0x289]) = v57 + 42;
    LOBYTE(STACK[0x28A]) = v58 + (~(2 * v58) | 0xAB) + 43;
    char v53 = 84;
    char v59 = ((v55 >> 21) ^ 0x11) - ((v55 >> 20) & 0x54);
    HIDWORD(v60) = v56 ^ 6;
    LODWORD(v60) = v55 ^ 0x20000000;
    char v49 = v46 + 3;
    LOBYTE(STACK[0x28B]) = v59 + 42;
    LOBYTE(STACK[0x28C]) = (v60 >> 29) + (~(2 * (v60 >> 29)) | 0xAB) + 43;
    LOBYTE(STACK[0x28D]) = ((v56 >> 5) ^ 0x9D) + (~(2 * ((v56 >> 5) ^ 0x9D)) | 0xAB) + 43;
    LOBYTE(STACK[0x28E]) = ((v56 >> 13) ^ 0xBD) - ((2 * ((v56 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v52 = v56 >> 21;
    char v54 = v52 ^ 0x40;
  }
  else
  {
    if (v48 != 2) {
      goto LABEL_6;
    }
    char v49 = -94 * (v46 ^ 0x22);
    unsigned int v52 = STACK[0x290];
    unsigned int v50 = STACK[0x294];
    LOBYTE(STACK[0x288]) = ((LODWORD(STACK[0x290]) >> (v49 ^ 0x3F)) ^ 0x40)
                         - ((2 * (LODWORD(STACK[0x290]) >> (v49 ^ 0x3F))) & 0x55)
                         + 42;
    LOBYTE(STACK[0x289]) = ((v52 >> 13) ^ 0xBD) - ((2 * ((v52 >> 13) ^ 0xBD)) & 0x55) + 42;
    LOBYTE(STACK[0x28A]) = ((v52 >> 5) ^ 0x9D) - ((2 * ((v52 >> 5) ^ 0x9D)) & 0x55) + 42;
    HIDWORD(v51) = v52 ^ 6;
    LODWORD(v51) = v50 ^ 0x20000000;
    LOBYTE(STACK[0x28B]) = (v51 >> 29) + (~(2 * (v51 >> 29)) | 0xAB) + 43;
    LOBYTE(STACK[0x28C]) = ((v50 >> 21) ^ 0x11) + (~(v50 >> 20) | 0xAB) + 43;
    LOBYTE(STACK[0x28D]) = ((v50 >> 13) ^ 0x29) - ((2 * ((v50 >> 13) ^ 0x29)) & 0x55) + 42;
    LOBYTE(STACK[0x28E]) = ((v50 >> 5) ^ 0xB0) - 2 * (((v50 >> 5) ^ 0xB0) & 0x2B ^ ((v50 & 0x20) != 0)) + 42;
    LOBYTE(v52) = (8 * v50) ^ 0xC8;
    char v53 = 80;
    char v54 = v52;
  }
  LOBYTE(STACK[0x28F]) = v54 - (((_BYTE)v52 << (v49 ^ 0x2B)) & v53) + 42;
LABEL_6:
  uint64_t v61 = LODWORD(STACK[0x29C]);
  int v62 = LOBYTE(STACK[0x2B0]) ^ 0x22;
  if (v62 == 2)
  {
    int8x16x4_t v88 = vld4q_s8((const char *)&STACK[0x250]);
    int v76 = (v46 - 14) | 0x866;
    uint8x16_t v77 = (uint8x16_t)veorq_s8(v88.val[1], v47);
    _Q17 = vmovl_u8(*(uint8x8_t *)v77.i8);
    _Q16 = vmovl_high_u8(v77);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    int8x16x4_t v82 = (_DWORD *)(v42 + 4 * (v40 + 1592449649));
    int v83 = *(v82 - 8) ^ *(v82 - 3);
    unsigned int v84 = v83 + v41 - ((2 * v83) & 0xB7FDD896);
    int v85 = *(v82 - 16) ^ *(v82 - 14);
    HIDWORD(v86) = v85 ^ (v76 + 1543431116) ^ v84;
    LODWORD(v86) = v85 ^ ~v84;
    *int8x16x4_t v82 = (v86 >> 31) + v41 - ((2 * (v86 >> 31)) & 0xB7FDD896);
    return (*(uint64_t (**)(uint64_t))(v38 + 8 * ((253 * (v43 != 1592449586)) ^ v76)))(v61);
  }
  else
  {
    if (v62 != 1) {
      JUMPOUT(0x22B3642D8);
    }
    int8x16x4_t v87 = vld4q_s8((const char *)&STACK[0x250]);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v87.val[2], v47);
    _Q21 = vmovl_high_u8(v63);
    _Q20 = vmovl_u8(*(uint8x8_t *)v63.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v70 = v43 - 16;
    int v71 = (LODWORD(STACK[0x298]) ^ v39)
        - 1971744649
        + ((v37 ^ (v39 - 1389) ^ LODWORD(STACK[0x2A4])) & (v61 ^ v45) | (LODWORD(STACK[0x2A0]) ^ v39) & (v61 ^ v39))
        + *((_DWORD *)*(&off_26DE9F480 + a35) + v70 + v40 - 3)
        + (*(_DWORD *)(v42 + 4 * (*((unsigned char *)*(&off_26DE9F480 + a36) + v70 + v40 - 4) - 53)) ^ v41);
    uint64_t v72 = (char *)*(&off_26DE9F480 + a34) - 8;
    unsigned int v73 = (v71 + v39 - (v44 & (2 * v71))) ^ v39;
    int v74 = ((v73 << (v72[v70 + v40] - 113)) | (v73 >> (113 - v72[v70 + v40]))) + (v61 ^ v39);
    return (*(uint64_t (**)(void))(v38 + 8 * a37))(v39 + v74 - (v44 & (2 * v74)));
  }
}

uint64_t sub_22B363354(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x70D52A7E711E5046) = *(_DWORD *)(a2 - 0x48A9B556C05DE57DLL);
  *(void *)(a1 - 0x70D52A7E711E503ELL) = *(void *)(a2 - 0x48A9B556C05DE579);
  return 0;
}

void sub_22B3633AC(uint64_t a1)
{
  int v1 = ((*(_DWORD *)(a1 + 8) ^ (1438293641 * ((a1 & 0x30527E63 | ~(a1 | 0x30527E63)) ^ 0x776AD4E3))) + 212184248) & 0xF35A4DB7;
  __asm { BRAA            X7, X17 }
}

uint64_t sub_22B36356C@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W3>, char a4@<W4>, uint64_t a5@<X5>, int a6@<W6>, char a7@<W7>, uint64_t a8@<X8>)
{
  int v15 = (v10 ^ 0x1F) * a2;
  uint64_t v16 = (v11 + a3);
  *(unsigned char *)(a1 + v16 + v13) = ((v16 & 0xF) * a4) ^ *(unsigned char *)(a5 + v16) ^ *(unsigned char *)(v8 + (v16 & 0xF)) ^ v15 ^ *(unsigned char *)(v9 + (v16 & 0xF)) ^ *(unsigned char *)(a8 + (v16 & 0xF)) ^ a7;
  return (*(uint64_t (**)(void))(v14 + 8 * ((56 * (v11 - 1 == v12 + (v15 ^ a6) - 4 - 38)) ^ (v15 + 756))))();
}

uint64_t sub_22B3635E8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>)
{
  uint64_t v12 = (v8 - 428844323) & 0x198FA6FB;
  v13.i64[0] = 0x5454545454545454;
  v13.i64[1] = 0x5454545454545454;
  v14.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v14.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  *(int8x16_t *)(v9 + (a6 + v6)) = vaddq_s8(vsubq_s8(*v10, vandq_s8(vaddq_s8(*v10, *v10), v13)), v14);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((297 * ((v12 ^ 0x6AB) == ((v7 + 1) & 0x1FFFFFFF0))) ^ v8));
  return v15(v12, 297, v15, a1, a2, a3, a4, a5);
}

uint64_t sub_22B363674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned int a43,uint64_t a44,unsigned __int8 *a45,unsigned char *a46,unsigned char *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,unsigned char *a56,unsigned char *a57,unsigned char *a58,unsigned char *a59,unsigned char *a60,uint64_t a61,unsigned char *a62,unsigned char *a63)
{
  unint64_t v84 = v83 + 1;
  STACK[0x200] = v84;
  uint64_t v85 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1018)
                           + a5);
  *a56 = v85;
  uint64_t v106 = *(unsigned __int8 *)(*(void *)(a40
                                        + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                        + 0x19F22A1038)
                            + v71);
  *a57 = v106;
  uint64_t v107 = *(unsigned __int8 *)(*(void *)(a40
                                        + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                        + 0x19F22A1058)
                            + a2);
  *a58 = v107;
  uint64_t v108 = *(unsigned __int8 *)(*(void *)(a40
                                        + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                        + 0x19F22A1078)
                            + v78);
  *a59 = v108;
  uint64_t v86 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1040)
                           + v81);
  *a60 = v86;
  uint64_t v87 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1060)
                           + v77);
  *a62 = v87;
  uint64_t v88 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1080)
                           + a4);
  *a70 = v88;
  uint64_t v105 = *(unsigned __int8 *)(*(void *)(a40
                                        + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                        + 0x19F22A1020)
                            + v74);
  *a71 = v105;
  uint64_t v89 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1068)
                           + a3);
  *a45 = v89;
  uint64_t v90 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1028)
                           + a1);
  *a46 = v90;
  uint64_t v91 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1088)
                           + a7);
  *a63 = v91;
  uint64_t v92 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1048)
                           + v80);
  *a65 = v92;
  uint64_t v93 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1070)
                           + v79);
  *a66 = v93;
  uint64_t v94 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1050)
                           + v76);
  *a67 = v94;
  uint64_t v95 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1030)
                           + v75);
  *a68 = v95;
  uint64_t v96 = *(unsigned __int8 *)(*(void *)(a40
                                       + ((v84 + ((a55 - 2905227) & 0xDFFDD6DB ^ 0x1FFFFFF13CA2FB2)) << 7)
                                       + 0x19F22A1090)
                           + v73);
  *a47 = v96;
  int v97 = (void *)(a40 + ((unint64_t)(STACK[0x200] % a43) << 7));
  unsigned int v98 = v97 + 147;
  LODWORD(v89) = *(_DWORD *)(v97[148] + 4 * v86) ^ *(_DWORD *)(v97[147] + 4 * v85) ^ *(_DWORD *)(v97[149] + 4 * v89) ^ *(_DWORD *)(v97[150] + 4 * v96);
  *a47 = BYTE3(v89);
  *a45 = BYTE2(v89);
  *a60 = BYTE1(v89);
  *a56 = v89;
  unsigned int v99 = &v97[4 * a44 + 147];
  LODWORD(v91) = *(_DWORD *)(v99[1] + 4 * v87) ^ *(_DWORD *)(*v99 + 4 * v106) ^ *(_DWORD *)(v99[2] + 4 * v91) ^ *(_DWORD *)(v99[3] + 4 * v95);
  *a68 = BYTE3(v91);
  *a63 = BYTE2(v91);
  *a62 = BYTE1(v91);
  *a57 = v91;
  LODWORD(v86) = *(_DWORD *)(v98[4 * a42 + 1] + 4 * v88) ^ *(_DWORD *)(v98[4 * a42] + 4 * v107) ^ *(_DWORD *)(v98[4 * a42 + 2] + 4 * v90) ^ *(_DWORD *)(v98[4 * a42 + 3] + 4 * v94);
  *a67 = BYTE3(v86);
  *a46 = BYTE2(v86);
  *a70 = BYTE1(v86);
  *a58 = v86;
  int v100 = *(_DWORD *)(v98[4 * a41 + 1] + 4 * v105) ^ *(_DWORD *)(v98[4 * a41] + 4 * v108) ^ *(_DWORD *)(v98[4 * a41 + 2] + 4 * v92) ^ *(_DWORD *)(v98[4 * a41 + 3] + 4 * v93);
  *a66 = HIBYTE(v100);
  *a65 = BYTE2(v100);
  *a71 = BYTE1(v100);
  *a59 = v100;
  int v101 = a69 + 16 - 2 * ((v72 + 16) & 0x38A00FB0 ^ (a6 + 16) & 0x10);
  *a56 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FA1)) ^ v89;
  *a60 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FA0)) ^ BYTE1(v89);
  unsigned __int8 v102 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FA3)) ^ BYTE2(v89);
  *a45 = v102;
  *a47 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FA3)) ^ BYTE3(v89);
  *a57 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FA5)) ^ v91;
  *a62 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FA5)) ^ BYTE1(v91);
  *a63 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FA7)) ^ BYTE2(v91);
  *a68 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FA7)) ^ BYTE3(v91);
  LOBYTE(v87) = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FA9)) ^ v86;
  *a58 = v87;
  *a70 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FA9)) ^ BYTE1(v86);
  *a46 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FAB)) ^ BYTE2(v86);
  *a67 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FAB)) ^ BYTE3(v86);
  *a59 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FAD)) ^ v100;
  *a71 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FAD)) ^ BYTE1(v100);
  *a65 = *(unsigned char *)(a48 + (int)(v101 ^ 0xB8A00FAF)) ^ BYTE2(v100);
  unint64_t v103 = STACK[0x200];
  *a66 = *(unsigned char *)(a48 + (int)(v101 & 0xFFFFFFF0 ^ 0xB8A00FAF)) ^ HIBYTE(v100);
  return (*(uint64_t (**)(void, void))(v82 + 8 * ((1074 * (v103 == 8)) ^ a55)))(v102, v87);
}

uint64_t sub_22B36369C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v10
                                                                             + 8
                                                                             * ((56
                                                                               * (v8 >= ((a8 - 360) ^ (a8 + 1135) ^ 0xAFFu))) | a8));
  *(_DWORD *)(v11 - 136) = v9;
  return v12(a1, a2, a3, a4, 0);
}

uint64_t sub_22B3636DC(unsigned int a1, uint64_t a2, int a3, int a4)
{
  unsigned int v11 = a4 - 1 + v5;
  *(_DWORD *)(*v8 + 4 * (v11 + 1) + a2) = v7;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v11 < v4 + (v9 & a1) + 2747) * a3) ^ (v6 + 886))))();
}

void sub_22B3636E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  *int v39 = 0x80000000;
  (*(void (**)(uint64_t))(v38 + 8 * (v37 + 3873)))(a37);
  JUMPOUT(0x22B363728);
}

uint64_t sub_22B363834@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v6 = v3 + a3;
  unsigned int v7 = ((563 * ((a2 | 0x4A4) ^ 0x4A2)) ^ 0xC970B77) + v6;
  if (v7 <= 0x40) {
    unsigned int v7 = v4;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((-211222920 - v6 >= a1 + v7) * ((((a2 | 0x4A4) - 1042130128) & 0x3E1DA76A) - 1734)) ^ (a2 | 0x4A4))))();
}

uint64_t sub_22B3638C4@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a1 + a2 - 1081) ^ 0x6D6) * (((a3 == v3) | (2 * (a3 == v3))) != 0)) ^ (a1 + a2 + 853))))();
}

void sub_22B363908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v21 = 1948972247 * ((v20 - 144) ^ 0xB59EF5EE);
  *(_DWORD *)(v20 - 144) = (a7 + 514405604) ^ v21;
  *(_DWORD *)(v20 - 124) = -118723830 - v21;
  *(void *)(v20 - 136) = a19;
  (*(void (**)(uint64_t))(v19 + 8 * (a7 ^ 0xF91)))(v20 - 144);
  JUMPOUT(0x22B34E18CLL);
}

uint64_t sub_22B3639B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  *(_DWORD *)(v16 - 0x1901A95D18EF69DDLL) = 473653325;
  a14 = v19
      + 731811679
      * (((&a12 | 0xA7863943) - &a12 + (&a12 & 0x5879C6B8)) ^ 0xEE709F07)
      + 2366;
  a12 = v17;
  a15 = &STACK[0x66E5C4D1D99E9776];
  a16 = v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t *))(v18 + 8 * (v19 ^ 0x1297)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((117 * (a13 == v19 - 604051045)) ^ v19)))(v21);
}

uint64_t sub_22B363A80@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v10 = a6 - v7 + a4 - (unint64_t)(a1 + v8) < (unint64_t)(12 * (v9 ^ 0xD73u)) - 1592;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 | (8 * v10)) ^ v9)))();
}

uint64_t sub_22B363AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  if ((v51 - 1187837911) >= 2)
  {
    if (v51 != 1187837913)
    {
      int v65 = STACK[0x290];
      goto LABEL_7;
    }
    uint64_t v61 = *(void *)(a7 + 312);
    unsigned int v62 = LODWORD(STACK[0x294]) ^ 0xDBD3EDEB;
    unsigned int v63 = (2 * LODWORD(STACK[0x294])) & 0xB7A7DBD6;
    int v64 = 1988622253 * ((((2 * (v55 - 192)) | 0xEE1BEFD2) - (v55 - 192) + 150079511) ^ 0x115B749);
    v50[38] = a46;
    v50[39] = a47;
    v50[36] = v61;
    *(_DWORD *)(v55 - 136) = v62 - v64 + v63 + 1707013112;
    *(_DWORD *)(v55 - 192) = v53 - v64 - 1814974275;
    *(_DWORD *)(v55 - 176) = v64 ^ 0xC4A9DEA8;
    v50[34] = v52;
    int v60 = v53 + 1003;
  }
  else
  {
    unsigned int v57 = LODWORD(STACK[0x294]) ^ 0xD3B7E1F7;
    unsigned int v58 = (2 * LODWORD(STACK[0x294])) & 0xA76FC3EE;
    int v59 = 1988622253 * ((((v55 - 192) | 0xF277EBDB) - ((v55 - 192) & 0xF277EBDB)) ^ 0x46FAB7B);
    v50[36] = *(void *)(a7 + 312);
    v50[34] = v52;
    *(_DWORD *)(v55 - 136) = v57 - v59 + v58 + 1843068908;
    *(_DWORD *)(v55 - 176) = (v51 - ((2 * v51 + 1919291476) & 0x8953BD56) + 2111629013) ^ v59;
    *(_DWORD *)(v55 - 192) = v53 - v59 - 1814974275;
    v50[38] = a49;
    v50[39] = a50;
    int v60 = v53 ^ 0x1C6D;
  }
  a1 = (*(uint64_t (**)(uint64_t))(v56 + 8 * v60))(v55 - 192);
  unint64_t v53 = STACK[0x278];
  unint64_t v56 = STACK[0x270];
  int v65 = *(_DWORD *)(v55 - 160);
  LODWORD(STACK[0x290]) = v65;
LABEL_7:
  LODWORD(STACK[0x260]) = 528895453;
  return (*(uint64_t (**)(uint64_t))(v56
                                            + 8 * (int)(((v65 == v54) * (20 * (v53 ^ 0xC76) + 1264)) ^ (v53 - 2415))))(a1);
}

uint64_t sub_22B363CE4@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(unsigned char *)(v3 + v4 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + v4) < 0x38) * a2) ^ v2)))();
}

uint64_t sub_22B363D10(uint64_t a1)
{
  *(void *)(a1 - 7 + (v3 + v2 - v5)) = *(void *)(v1 - 7 + (v3 + v2 - v5));
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((1963
                                * (((20 * (v6 ^ 0xC9A) + 1194897275) & 0xB8C74EFA ^ 0xA12) + v5 != ((20 * (v6 ^ 0xC9A) - 2988) & v4))) ^ (20 * (v6 ^ 0xC9A)))))();
}

void sub_22B363D88()
{
}

uint64_t sub_22B363DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v22 = ((v19 - 548) | 0x83) ^ 0x18A ^ *(_DWORD *)(v21 - 160) & 0x3F;
  *(unsigned char *)(v21 - 228 + v22) = -86;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20
                                                                                         + 8
                                                                                         * ((3387 * (v22 > 0x37)) ^ (v19 - 790))))(a1, a2, a3, a4, 3010711576, a19);
}

void sub_22B363E28()
{
}

void sub_22B364288(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v10 = (a2 ^ (v8 - 27) ^ ((a8 - 3286) | 0x21)) + (a7 ^ v8);
  LODWORD(STACK[0x2A8]) = v10 + v8 - (v9 & (2 * v10));
  JUMPOUT(0x22B3642D4);
}

void sub_22B36435C()
{
}

uint64_t sub_22B3644EC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == (v1 ^ 0xECEu) + 0x196BFAA6EC139860) * (v1 - 1970)) ^ v1)))();
}

uint64_t sub_22B36452C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((2115
                                * ((int)(v1 + (v3 ^ 0xFFFFFA6E) + v2 + 283 * (v3 ^ 0x596) - 1982) > (v3 ^ 0x596) - 8)) ^ v3 ^ 0x25A)))();
}

uint64_t sub_22B364584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8 * (((((a10 == v10 + 2091) ^ (v12 - 11)) & 1) * (v12 - 796)) | v12)))();
}

uint64_t sub_22B3645B8@<X0>(int a1@<W1>, unsigned int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  int v10 = (unsigned int *)(v9 + 4 * v5);
  uint64_t v11 = v5 + 1;
  int v12 = *(_DWORD *)(v9 + 4 * v11);
  unsigned int v13 = v10[397] ^ ((v12 & 0x7FFFFFFE | v4 & 0x80000000) >> 1);
  *int v10 = (v13 + a1 - (v6 & (2 * v13))) ^ *(_DWORD *)(v8 + 4 * (v12 & ((a4 ^ a2) - 509)));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v11 == 227) * a3) ^ a4)))();
}

uint64_t sub_22B36461C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((55 * ((v1 & 0xFFFFFFF8) - (unint64_t)(v3 - 772) + 1476 == v2)) ^ v3)))();
}

uint64_t sub_22B36465C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, unsigned int a13, uint64_t a14, int a15)
{
  unsigned int v18 = 1990461019
      * ((-1758987483 - (&a12 | 0x9727FB25) + (&a12 | 0x68D804DA)) ^ 0x473CA653);
  a15 = v18 + a10 - 1283;
  a13 = v18 + 1573051948;
  a14 = v17;
  uint64_t v19 = (*(uint64_t (**)(int *))(v15 + 8 * (a10 ^ 0x1B3C)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8 * ((52 * (a12 != (a10 ^ (v16 + 52) ^ (972 * (a10 ^ 0xB53))))) ^ a10)))(v19);
}

uint64_t sub_22B36471C(int a1, uint64_t a2, unsigned int a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v48 = v46 + 4;
  uint64_t v49 = (v48 + a1);
  unsigned int v50 = *(_DWORD *)(a44 + v49);
  *(unsigned char *)(a45 + v49) = a30 ^ 5 ^ v50;
  *(unsigned char *)(a45 + (v49 + 1)) = (BYTE1(v50) ^ 0x67) - ((2 * (BYTE1(v50) ^ 0x67)) & 0x55) + 42;
  *(unsigned char *)(a45 + (v49 + 2)) = (BYTE2(v50) ^ 0x95) + (~(v50 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a45 + (v49 + 3)) = (HIBYTE(v50) ^ 0x11) - (a5 & (v50 >> 23)) + 42;
  BOOL v51 = v48 + 414737976 < v45;
  if (v45 < a3 != v48 + 414737976 < a3) {
    BOOL v51 = v45 < a3;
  }
  return (*(uint64_t (**)(void))(v47 + 8 * ((!v51 | (!v51 << 6)) ^ a30)))();
}

uint64_t sub_22B364724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  (*(void (**)(uint64_t, uint64_t))(v24 + 8 * (int)a10))(a12, 2965982036);
  uint64_t v25 = (*(uint64_t (**)(void))(v24 + 8 * (v23 + 2134)))();
  *unsigned int v22 = v25;
  return sub_22B364770(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_22B364770@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(v6 + 4 * a2) = a2 + ((a1 >> (((v2 + 61) | v3) + 13)) ^ a1) * v4;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 < 0x26F) * v5) ^ v2)))();
}

uint64_t sub_22B3647B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v22 = a1 + v9 + ((v19 + v13) & v14) + ((v12 + ((v19 - 998) | 6) - 278) ^ 0x3B30BFADu);
  *(_DWORD *)(v20 + 4 * v21 + a8) = v22 + v12 - (v11 & (2 * v22));
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v15 ^ HIDWORD(v22)) + (v16 & (v22 >> 31)) + v17 == v10) * v18) ^ v19)))();
}

uint64_t sub_22B364824(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v9 = v5 == v6 || STACK[0x298] == v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v9 * (((a4 - 1582) | v4) - 1835)) ^ (a4 - 850))))();
}

uint64_t sub_22B364838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, int a12, char a13)
{
  a13 = (*(unsigned char *)(v14 - 0x3707DB8770DACECBLL) ^ 0xC4)
      - 95 * (((&a11 | 0xE6) - &a11 + (&a11 & 0x18)) ^ 0xA2)
      + ((2 * *(unsigned char *)(v14 - 0x3707DB8770DACECBLL)) & 0xE4 ^ 0x64)
      + 112;
  a11 = v15
      - 731811679
      * (((&a11 | 0x10C9A6E6) - &a11 + (&a11 & 0xEF365918)) ^ 0x593F00A2)
      + 120;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v13 + 8 * (v15 ^ 0x12E3)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((303 * (a12 == (((v15 - 204) | 0x441) ^ 0xDBFEEA06))) ^ v15)))(v16);
}

void sub_22B364914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 *a10)
{
  unint64_t v12 = ((unint64_t)(((((v10 | 0x30A) + 52) & 0xFFFFFFBF) - 9) ^ *a10) << 56) | ((unint64_t)(a10[1] ^ 0x2Au) << 48) | ((unint64_t)(a10[2] ^ 0x2Au) << 40) | ((unint64_t)(a10[3] ^ 0x2Au) << 32) | ((a10[4] ^ 0x2ALL) << 24) | ((a10[5] ^ 0x2ALL) << 16) | ((a10[6] ^ 0x2ALL) << 8) | a10[7] ^ 0x2ALL;
  *(void *)(*(void *)(v11 + 16) - 0x1E43BA5646C78EE8) = v12
                                                            - ((2 * v12) & 0x7BA357DC35DCCF3ELL)
                                                            - 0x422E5411E5119861;
  JUMPOUT(0x22B3649D8);
}

uint64_t sub_22B364A14@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((*(_DWORD *)(v2 + 4 * ((((v7 ^ v6) * v8 + a2) ^ (v7 + v4) & v5) + a1)) != v3) * v9) ^ v7)))();
}

uint64_t sub_22B364A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  uint64_t v31 = v30;
  *(unsigned char *)(v30 - 16) = *v28;
  uint64_t v32 = (unsigned char *)(v30 - 16);
  v32[1] = v28[1];
  v32[2] = v28[2];
  v32[3] = v28[3];
  v32[4] = v28[4];
  v32[5] = v28[5];
  v32[6] = v28[6];
  v32[7] = v28[7];
  v32[8] = v28[8];
  v32[9] = v28[9];
  v32[10] = v28[10];
  v32[11] = v28[11];
  v32[12] = v28[12];
  v32[13] = v28[13];
  v32[14] = v28[14];
  v32[15] = v28[15];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4
                                                              + 8
                                                              * (((a28 + ((v29 + 857) | 0x1Au) - 927077294 < ((((v29 + 857) | 0x1A) - 955991521) & 0x38FB3FF6u) + 2147483487)
                                                                * ((((v29 + 857) | 0x1A) + 140) ^ 0x7E2)) ^ ((v29 + 857) | 0x1A))))(a1, a2, v31);
}

uint64_t sub_22B364A48()
{
  unsigned int v5 = v2 + v0 + 69484903;
  if (v5 <= 0x40) {
    int v6 = 64;
  }
  else {
    int v6 = v2 + v0 + 69484903;
  }
  BOOL v7 = !__CFADD__(v5 + ((v1 - 3613) | 0x108) - 272, v3 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((v1 ^ 0xBB3) - 1328)) ^ v1)))();
}

uint64_t sub_22B364AAC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  *(void *)(a1 - 7 + (v6 + v7 + a3 - v8)) = *(void *)(v4 - 7 + (v6 + v7 + a3 - v8));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 - (v5 & 0xFFFFFFF8) == -8) * (a4 + 3303)) ^ a4)))();
}

uint64_t sub_22B364B00(int a1, int a2)
{
  unsigned int v5 = v3 + v2 - 1970174676;
  if (v5 <= 0x40) {
    int v6 = 64;
  }
  else {
    int v6 = v3 + v2 - 1970174676;
  }
  BOOL v7 = __CFADD__(v5 - 1, a2 + v6);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v7 ^ (a1 + 28)) & 1) * ((a1 + 287500680) & 0xEEDD13E7 ^ 0x9A)) ^ a1)))();
}

uint64_t sub_22B364B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  int v26 = ((a24 - 1499590548) ^ v24) + (HIDWORD(a13) & 0x4D3C3DBA);
  BOOL v28 = (((_BYTE)v26 + (((_BYTE)a24 - 126) & 0x7D) + 2) & 0xF) == 0
     && v26 != ((a24 + 1187931022) & 0xB9318FFF ^ 0xA69E1F22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((52 * v28) ^ (a24 - 407))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

void sub_22B364C18()
{
}

void sub_22B364CA8()
{
}

uint64_t sub_22B364CB8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((436 * (v0 ^ 0xCFC) + ((v0 - 3071) ^ 0xFFFFF74F)) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_22B364CF8(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v7 = *(_DWORD *)STACK[0x260] != ((v3 + a3) & 0x44B53DDF ^ LODWORD(STACK[0x250]))
    || v4 != ((v3 + 2178) ^ LODWORD(STACK[0x248]));
  return (*(uint64_t (**)(void))(v5 + 8 * ((2896 * v7) ^ v3)))();
}

uint64_t sub_22B364D58@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 - 103160299) & 0x6261228) - 494) * (v1 == 1468808320)) ^ v2)))();
}

uint64_t sub_22B364DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14, unsigned int a15, unint64_t *a16, uint64_t a17)
{
  unsigned int v20 = 1328090399 * ((2 * (&a12 & 0x5FBFA4D8) - &a12 + 541088550) ^ 0xDF933F1C);
  a15 = v20 ^ 0x881FFD3C;
  a16 = &STACK[0x25ABA05A3795B102];
  a17 = a11;
  a12 = (v19 - 1653803030) ^ v20;
  a13 = -232435605 - v20;
  uint64_t v21 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 ^ 0x1895)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1281 * (a14 == v18 + v19 - 1687 - 490)) ^ v19)))(v21);
}

uint64_t sub_22B364E8C@<X0>(unsigned int a1@<W8>)
{
  int v6 = v2 - 732;
  BOOL v7 = v1 < a1;
  *(unsigned char *)(v5 - 0x21AEEC4F795AEEAFLL) = *v4;
  if (v7 == a1 > 0x9AC213CA) {
    BOOL v7 = v1 > 0x9AC213CA;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((3353 * v7) ^ v6)))();
}

void sub_22B364F0C()
{
  int v3 = 1948972247
     * ((2 * (((v1 - 192) ^ 0xFCA730C9) & 0x1ADDC840) - ((v1 - 192) ^ 0xFCA730C9) - 450742343) ^ 0xAC1BF29E);
  STACK[0x1948] = STACK[0x268];
  *(_DWORD *)(v1 - 192) = (v0 + 514405705) ^ v3;
  *(_DWORD *)(v1 - 172) = -118723830 - v3;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0xFEA)))(v1 - 192);
  JUMPOUT(0x22B33FC04);
}

uint64_t sub_22B364FC8()
{
  int v6 = *(unsigned __int8 *)(*v1 + v0 - 0x2B36511958BABFBCLL) - *(unsigned __int8 *)(v5 + v0 - 0x2B36511958BABFBCLL);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x77BFFFEB) - 909905568 + ((2 * v6) & 0xEF7FFFD6) != 1099166027 || v7 == (v4 ^ 0x34Cu) + v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1840 * v9) ^ v4)))();
}

uint64_t sub_22B365054(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((a2 + 1482064182) & 0xA7A97DD3 ^ 0xFFFFF901) + ((a2 - 760767070) & 0x2D585FFE))
                                     * (v2 == v3)) ^ a2)))();
}

uint64_t sub_22B3650AC(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x281D12643933BF1FLL) - 2058610946;
  int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x281D12643933BF1FLL) - 2058610946;
  int v4 = (v2 < 1009434607) ^ (v3 < 1009434607);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < 1009434607;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 16) - 1866394843 * ((-2065391642 - (a1 | 0x84E49FE6) + (a1 | 0x7B1B6019)) ^ 0x910C57ED);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v1 ^ 0xBAD))
          + ((!v6 * ((v1 - 613316400) & 0x248E6FEB ^ 0x24B)) ^ v1)
          - 1))();
}

uint64_t sub_22B3651A8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a2 + 2486) ^ 0xB5F) + 1030) * ((v2 & 0x18) == 0)) ^ a2)))();
}

uint64_t sub_22B3651D8@<X0>(int a1@<W8>)
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ a1)))();
}

uint64_t sub_22B3651FC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((82
                                                       * (v2 + v1 + ((v4 - 340011364) & 0x77EEECF4 ^ 0xF3E8D6D2) < 8)) ^ v4)))(a1, v3);
}

uint64_t sub_22B365260@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3619 * (a2 + 1 == v3 + 24)) ^ a1)))();
}

void sub_22B36532C()
{
}

uint64_t sub_22B365340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int *a52)
{
  (*(void (**)(void, unint64_t *, uint64_t))(v54 + 8 * (v52 ^ 0xDAE)))(*a52, &STACK[0x328], 2048);
  int v55 = (*(uint64_t (**)(void, unint64_t *, void, uint64_t))(STACK[0x270] + 8 * (v52 + 3626)))(*a52, &STACK[0x430], (LODWORD(STACK[0x37C]) + v53), 1);
  return (*(uint64_t (**)(void))(STACK[0x270]
                              + 8
                              * ((168 * (((2 * v55) & 0xEBEEFFFE) + (v55 ^ 0x75F77FFF) != ((v52 - 176) ^ 0x75F77E93))) ^ v52)))();
}

uint64_t sub_22B365408(uint64_t a1, int a2, unsigned int a3, int a4)
{
  uint64_t v11 = *(uint64_t (**)(void))(v6 + 8 * (v9 - 1202));
  unsigned int v12 = a2 + 8 + a4;
  uint64_t v13 = *v10;
  *(unsigned char *)(*v10 + v12) = (HIBYTE(a3) ^ v7) - 2 * ((HIBYTE(a3) ^ v7) & 0x2B ^ HIBYTE(a3) & 1) + 42;
  *(unsigned char *)(v13 + v12 + 1) = (v4 ^ BYTE2(a3)) - ((2 * (v4 ^ BYTE2(a3))) & 0x55) + 42;
  *(unsigned char *)(v13 + v12 + 2) = (BYTE1(a3) ^ 0x11) + (v8 | ~(a3 >> 7)) + 43;
  *(unsigned char *)(v13 + v12 + 3) = a3 ^ v5;
  return v11();
}

uint64_t sub_22B365418()
{
  BOOL v3 = *(_DWORD *)(v2 - 0x19157D3ABD2659C6) == v0 - 604050694;
  return (*(uint64_t (**)(void))(v1 + 8 * (((16 * v3) | (32 * v3)) ^ v0)))();
}

uint64_t sub_22B36545C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (v1 == 836278164)) ^ v0)))();
}

uint64_t sub_22B365490@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  a8 = a1;
  a7 = (v9 + v10 + 2384) ^ (225134719 * (&a7 ^ 0x16F0452A));
  uint64_t v11 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 + v10 + 3934)))(&a7);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (int)(((a5 != 0) * (((v10 - 552341248) & 0xBF18EBBC) - 434)) ^ (v9 + v10 + 1640))))(v11);
}

uint64_t sub_22B365518(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((101
                                * (a1 + v5 + 63 >= ((2014 * (v6 ^ v7 ^ (a5 + 2))) ^ (a1 + 3652)) + v5)) ^ v6)))();
}

void df35957c4e0()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9FDA0
                                                  + (*((unsigned __int8 *)off_26DEA02C0
                                                     + (-121
                                                                       * ((qword_2683EB0F0 - dword_2683EB1A0) ^ 0x4D))
                                                     - 8) ^ 0xE6u)
                                                  - 8) ^ (-121 * ((qword_2683EB0F0 - dword_2683EB1A0) ^ 0x4D)))
                + 334);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 - v1) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 - v1) ^ 0x4D))] ^ 0x4F])
                + 14);
  uint64_t v3 = 2059148423 * ((v1 - (void)&v5 + *(void *)(v2 - 4)) ^ 0xD2361EE8B96764DLL);
  *(void *)(v0 - 4) = v3;
  *(void *)(v2 - 4) = v3;
  v6[0] = (1292559617 * ((v6 + 1561462356 - 2 * (v6 & 0x5D120654)) ^ 0xFA416E3D)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x4D);
  char v4 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_2683EB1A0) ^ 0x4D)) ^ byte_22B48A580[byte_22B47E680[(-121 * ((qword_2683EB0F0 + dword_2683EB1A0) ^ 0x4D))] ^ 0x27])
               + 147)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_26DE9FD38
                                                          + (*((unsigned __int8 *)off_26DE9F7D0 + v2
                                                                                                - 4) ^ 0x9Eu)
                                                          - 12) ^ v2)
                                      + 31048])(v6);
  __asm { BRAA            X8, X17 }
}

void sub_22B36578C()
{
}

uint64_t sub_22B3657D8@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,_DWORD *a54)
{
  *a54 = STACK[0x2E0];
  a54[93] = STACK[0x4AC];
  a54[94] = STACK[0x2A4];
  a54[95] = STACK[0x364];
  a54[96] = STACK[0x33C];
  return (*(uint64_t (**)(void))(v54
                              + 8
                              * (((((*(void *)(a1 + 480) == 0) ^ (a2 - 74)) & 1) * (a2 + 206)) ^ (a2 + 501))))();
}

uint64_t sub_22B36580C@<X0>(unsigned char *a1@<X4>, int a2@<W8>)
{
  char v10 = a1[5];
  char v11 = a1[6];
  int v12 = 1503746353 * ((((v9 - 152) | 0xA8A77151) - ((v9 - 152) | 0x57588EAE) + 1465421486) ^ 0x8EC6B3E7);
  char v13 = -12 - 49 * ((((v9 + 104) | 0x51) - ((v9 + 104) | 0xAE) - 82) ^ 0xE7);
  *(unsigned char *)(v9 - 123) = v13 + a1[4] + ((2 * a1[4]) & 0xE7 ^ ((a2 ^ 0xCC) + 38));
  *(unsigned char *)(v9 - 124) = v13 + (v10 ^ 0x5D) + ((2 * v10) & 0xBB);
  *(void *)(v7 + 2976) = v8;
  *(unsigned char *)(v9 - 148) = v11
                       - 49 * ((((v9 + 104) | 0x51) - ((v9 + 104) | 0xAE) - 82) ^ 0xE7)
                       - ((2 * v11 + 2) & 0xE0)
                       + 113;
  *(void *)(v7 + 2984) = v6;
  *(_DWORD *)(v9 - 128) = v12 + a2 - 1659;
  *(_DWORD *)(v9 - 152) = (v5 ^ 0x7732260E) - v12;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a2 ^ 0x1E3F)))(v9 - 152);
  *uint64_t v3 = -1;
  *(_DWORD *)(v2 + 40) = v5;
  return result;
}

uint64_t sub_22B365948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50)
{
  *(_DWORD *)a1 = 1498173510;
  *(unsigned char *)(a1 + 4) = a49;
  *(_WORD *)(a1 + 5) = 513;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = -2113929216;
  *(unsigned char *)(a1 + 12) = 2;
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(v50 + 14);
  *(_WORD *)(v53 - 124) = 23041 * ((((v53 - 144) | 0x1E1C) - ((v53 - 144) | 0xE1E3) - 7709) ^ 0x3059) + 5730;
  *(void *)(v53 - 136) = a1 + 0x23BCFE0A21D47084;
  *(_DWORD *)(v53 - 128) = v52
                         - 2009815553
                         * ((((v53 - 144) | 0x4F2B1E1C) - ((v53 - 144) | 0xB0D4E1E3) - 1328225821) ^ 0xBE203059)
                         + 1212;
  (*(void (**)(uint64_t))(v51 + 8 * (v52 ^ 0x1476)))(v53 - 144);
  *(_WORD *)(a1 + 14) = 256;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((218 * (a1 - a50 - 118 < (unint64_t)((v52 + 1477200542) & 0xA7F3B58B) - 1122)) ^ v52)))(a1, v54, v55, v56, v57, v58, v59, v60, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_22B365A80(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v9 + ((a3 - 2312) ^ 0x98479B59) + a2) = *(unsigned char *)(a8 + ((a3 - 2312) ^ 0x98479B59) + a2);
  return (*(uint64_t (**)(void))(v10 + 8 * ((2169 * (a2 - 1 == v8)) ^ (a3 - 1021))))();
}

uint64_t sub_22B365AC4@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  unsigned int v12 = a11 + ((2 * a4) & 0xED899882 ^ 0xFFFFF1B5 ^ (a1 + 2634)) + 1668167708;
  BOOL v13 = ((2 * v12) & 0x6DFAE7AE ^ 0x6D888082) + (v12 ^ 0xC039BF96) + 2046226412 != 821322691;
  return (*(uint64_t (**)(void))(v11 + 8 * (v13 | (8 * v13) | a1)))();
}

uint64_t sub_22B365B8C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 - 1 >= 0) * v2) ^ v0)))();
}

void sub_22B365BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v25 = 1292559617 * ((v24 + 515913877 - 2 * ((v24 - 144) & 0x1EC03925)) ^ 0xB993514C);
  *(_DWORD *)(v24 - 136) = (v23 + 381) ^ v25;
  *(_DWORD *)(v24 - 132) = v25 ^ 0x52EC3B2E;
  *(void *)(v24 - 144) = a19;
  (*(void (**)(uint64_t))(v22 + 8 * (v23 + 2886)))(v24 - 144);
  *(void *)(v24 - 128) = v21;
  *(void *)(v24 - 120) = v19;
  *(void *)(v24 - 104) = v20;
  *(_DWORD *)(v24 - 112) = v23
                         - 1948972247 * ((2 * ((v24 - 144) & 0x6B0F60E8) - (v24 - 144) + 351313685) ^ 0xA16E6AFB)
                         + 772;
  *(void *)(v24 - 144) = a19;
  *(void *)(v24 - 136) = v20;
  (*(void (**)(uint64_t))(v22 + 8 * (v23 + 2884)))(v24 - 144);
  JUMPOUT(0x22B34DB1CLL);
}

uint64_t sub_22B365CA0(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = (a3 + a2 + a4);
  unint64_t v15 = a9 + ((19 * (a5 ^ 0xE48u)) ^ 0x83035DC0D222F921) + v14;
  uint64_t v16 = (((4 * a5) ^ 0x3DC8) - 1013) & v14;
  unint64_t v17 = v9 + v16 - v14;
  unint64_t v18 = v9 + v16 + 1;
  unint64_t v19 = v10 + v16 - v14;
  unint64_t v20 = v10 + v16 + 1;
  unint64_t v21 = v11 + v16 + 1 - v14;
  unint64_t v22 = v16 + v11 + 2;
  BOOL v24 = v12 < v18 && v17 < v15;
  int v26 = v12 < v20 && v19 < v15 || v24;
  if (v12 >= v22 || v21 >= v15) {
    int v28 = v26;
  }
  else {
    int v28 = 1;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((247 * v28) ^ a5)))();
}

uint64_t sub_22B365D54()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((35 * ((v1 ^ ((((v1 ^ 0x83A) - 1101) ^ v0) < 8)) & 1)) ^ v1)))();
}

uint64_t sub_22B365D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v10
                                                                                                 + 8
                                                                                                 * ((((v9 & 0xFFFFFFF0) == (((a8 + 2085) | 0x40) ^ 0x68A3A320)) * ((a8 - 840) ^ 0xF69)) ^ a8)))(a1, a2, a3, a4, a5, (a8 - 840), v8);
}

uint64_t sub_22B365DDC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, unint64_t a4@<X8>, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (a2 + a1 + a3);
  unint64_t v12 = v11 + a6 - 0x1CBC873A87398388 + 1;
  uint64_t v13 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  uint64_t v14 = v13 - v11;
  unint64_t v15 = v6 + v13 - v11;
  unint64_t v16 = v13 + v6 + 1;
  unint64_t v17 = v13 + v7 - v11 + 2;
  unint64_t v18 = v13 + v7 + 3;
  unint64_t v19 = v8 + v14 + ((((v9 - 3426) | 0x800u) + 857) ^ 0xB79);
  unint64_t v20 = v13 + v8 + 5;
  BOOL v22 = a4 < v18 && v17 < v12;
  if (a4 < v16 && v15 < v12) {
    BOOL v22 = 1;
  }
  if (a4 < v20 && v19 < v12) {
    BOOL v22 = 1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((28 * v22) ^ v9)))();
}

void sub_22B365E8C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) + 225134719 * ((1781271032 - (a1 | 0x6A2C09F8) + (a1 | 0x95D3F607)) ^ 0x8323B32D);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B365FC0(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (((v6 - 306) | 0x737) ^ 0x8D7)))(a1, 0);
  int v9 = ((2 * result) & 0x3FFFDFDE) + (result ^ 0x1FFFEFEF);
  if (v9 == 536866815)
  {
    --v2;
    goto LABEL_7;
  }
  if (v9 == 536866811)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ 0x8F1)))(a1);
    int v10 = v2;
    goto LABEL_8;
  }
  if (v9 != 536866799)
  {
    v2 -= 2;
    goto LABEL_7;
  }
  *uint64_t v4 = a1;
  int v10 = 1447114433;
LABEL_8:
  *(_DWORD *)(v1 + 16) = v10 - 1447114433;
  return result;
}

uint64_t sub_22B366094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((1019 * (v22 != ((38 * ((a22 - 942053109) & 0xB9F7DFFF ^ (a7 - 53))) ^ 0x7E1))) ^ a22)))();
}

uint64_t sub_22B3660E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v25
                                                                      + 8
                                                                      * ((1913 * (v24 + a4 + 85 == -604049920)) ^ (a4 + 85))))(a1, a2, a3, a24);
}

uint64_t sub_22B366138@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, int a3@<W8>)
{
  *(unsigned char *)(a1 + v3) = *(unsigned char *)(a2 + (a3 + v5))
                      - ((2 * *(unsigned char *)(a2 + (a3 + v5))) & 0x55)
                      + 42;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 63) * v6) ^ v4)))();
}

uint64_t sub_22B366188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((61 * ((a7 + 1 + v8) < 0x30)) ^ v7)))();
}

uint64_t sub_22B366278()
{
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((8 * (((v0 == v1 - 2692) ^ (v1 + 119)) & 1)) & 0xEF | (16 * (((v0 == v1 - 2692) ^ (v1 + 119)) & 1)) | v1)))((v1 - 653));
}

uint64_t sub_22B3662D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(void), uint64_t a15, _DWORD *a16, _DWORD *a17, _DWORD *a18, uint64_t a19, uint64_t a20,uint64_t a21,_DWORD *a22,int a23,int a24,int a25,int a26)
{
  *a18 = (v29 ^ v28) + (a26 ^ v28) + v28 - (v27 & (2 * ((v29 ^ v28) + (a26 ^ v28))));
  *a17 = (a8 ^ v28) + (a23 ^ v28) + v28 - (v27 & (2 * ((a8 ^ v28) + (a23 ^ v28))));
  *a16 = (v26 ^ v28) + (a24 ^ v28) + v28 - (v27 & (2 * ((v26 ^ v28) + (a24 ^ v28))));
  *a22 = (v30 ^ v28) + (a25 ^ v28) + v28 - (v27 & (2 * ((v30 ^ v28) + (a25 ^ v28))));
  return a14();
}

uint64_t sub_22B3662F4@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((a1 == a2) ^ (17 * (v2 ^ 0x7E))) & 1) * (v2 - 3091)) ^ v2)))();
}

uint64_t sub_22B366334()
{
  unsigned int v5 = v2 + 69484903;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (v0 | (32
                                                   * (-v1 - 69484903 - v3 + v5 >= ((v0 + 3297) ^ 0xF24 ^ ((v0 - 67) | 0xFu)))))))(2332161312);
}

uint64_t sub_22B3663A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v38 = HIDWORD(a10) - ((2 * HIDWORD(a10) + 494083376) & 0x1869A908) - 890346724;
  BOOL v40 = ((((v35 - 34) ^ (2 * (_BYTE)v38) & 0xDA) + (v38 ^ 0x69) + 3) & 0xF) == ((v36 - 906301201) & 0x36050F77) - 3908
     && ((v35 + 405348318) ^ (2 * v38) & 0x392F7FDA) + (v38 ^ 0x90A36B69) != -1667776531;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((62 * v40) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_22B36645C(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 - 161 + a2 + 846 - 669) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_22B366488(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((2980 * (v4 + 866259294 != a4)) ^ v4)))(((v4 + 866259294) ^ a4) + 1013581226);
}

uint64_t sub_22B3664D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(v73 - 140) = v72 - 3154;
  uint64_t v74 = (char *)*(&off_26DE9F480 + ((v72 - 2442) ^ 0x598)) - 8;
  int v75 = v74[*(unsigned __int8 *)(v73 - 112) ^ 0xCLL] ^ ((*(unsigned char *)(v73 - 112) ^ 0x15)
                                                                                        - ((2
                                                                                          * (*(unsigned char *)(v73 - 112) ^ 0x15)
                                                                                          + 6) & 0xB2)
                                                                                        + 92);
  *(_DWORD *)(v73 - 176) = v75;
  uint64_t v76 = (char *)*(&off_26DE9F480 + (int)((v72 - 2442) & 0xCE0A30A0)) - 12;
  int v77 = v76[*(unsigned __int8 *)(v73 - 111) ^ 0x8ALL];
  int v78 = v77 ^ (16 * v77);
  *(_DWORD *)(v73 - 216) = v78;
  int v79 = ((v75 ^ 0x32) << ((v72 - 82) ^ 0x6F)) | ((v78 ^ 0x33) << 16);
  uint64_t v80 = (char *)*(&off_26DE9F480 + ((v72 - 2442) ^ 0x4A1)) - 8;
  int v81 = v80[*(unsigned __int8 *)(v73 - 110) ^ 0x41];
  uint64_t v82 = *(unsigned __int8 *)(v73 - 109);
  HIDWORD(v83) = v81 ^ 5;
  LODWORD(v83) = (v81 ^ 0x40) << 24;
  int v84 = (8 * (v83 >> 28) + 120) ^ (v83 >> 28);
  *(_DWORD *)(v73 - 224) = v84;
  int v85 = v84 ^ 0xE4;
  int v86 = (v82 ^ 0xFFFFFFDD) + (v82 ^ 0xFFFFFF97) + 1;
  uint64_t v87 = v82 ^ 0x52;
  uint64_t v88 = (char *)*(&off_26DE9F480 + ((v72 - 2442) ^ 0x4A8)) - 8;
  uint64_t v89 = (v86 - ((2 * v86) & 0xFFFFFF9F) - 49) ^ v88[v87];
  *(void *)(v73 - 232) = v89;
  int v90 = v79 | (v85 << 8) | v89;
  LODWORD(v89) = ((*(unsigned __int8 *)(v73 - 108) ^ 0x17)
                - ((2 * (*(unsigned __int8 *)(v73 - 108) ^ 0x17) + 6) & 0x3B2)
                + 92) ^ v74[*(unsigned __int8 *)(v73 - 108) ^ 0xELL];
  *(_DWORD *)(v73 - 192) = v89;
  int v91 = v76[*(unsigned __int8 *)(v73 - 107) ^ 0x20];
  LODWORD(v87) = v91 ^ (16 * v91);
  *(_DWORD *)(v73 - 240) = v87;
  int v92 = (v87 ^ 0x48) << 16;
  LODWORD(v87) = v80[*(unsigned __int8 *)(v73 - 106) ^ 0xC6];
  LODWORD(v89) = v92 | ((v89 ^ 0x40) << 24);
  HIDWORD(v83) = v87 ^ 5;
  LODWORD(v83) = (v87 ^ 0x40) << 24;
  uint64_t v93 = *(unsigned __int8 *)(v73 - 105);
  int v94 = (8 * (v83 >> 28) + 120) ^ (v83 >> 28);
  *(_DWORD *)(v73 - 248) = v94;
  unint64_t v95 = ((v93 ^ 0x16)
       + (v93 ^ 0x5C)
       + 1
       - ((2 * ((v93 ^ 0x16) + (v93 ^ 0x5C) + 1)) & 0xFFFFFF9F)
       - 49) ^ v88[v93 ^ 0x99];
  STACK[0x220] = v95;
  LODWORD(v89) = v89 & 0xFFFF00FF | ((v94 ^ 0xF1) << 8);
  unsigned int v635 = v74[*(unsigned __int8 *)(v73 - 104) ^ 0xC3] ^ ((*(unsigned __int8 *)(v73 - 104) ^ 0xFFFFFFDA)
                                                                         - ((2
                                                                           * (*(unsigned __int8 *)(v73 - 104) ^ 0xFFFFFFDA)
                                                                           + 6) & 0xFFFFFFB2)
                                                                         + 92) ^ 0xFFFFFFED;
  LOBYTE(v94) = v76[*(unsigned __int8 *)(v73 - 103) ^ 0x67];
  HIDWORD(v83) = ((((v94 ^ (16 * v94)) ^ 0x15) << 20) | (v635 << 28) | (v635 >> 4)) ^ 0x2469B262;
  LODWORD(v83) = HIDWORD(v83);
  int v96 = v83 >> 4;
  int v97 = v80[*(unsigned __int8 *)(v73 - 102) ^ 8];
  HIDWORD(v83) = v97 ^ 5;
  LODWORD(v83) = (v97 ^ 0x40) << 24;
  unsigned int v98 = v96 + 667485938 + ((2 * v96) & 0x4F920444 ^ 0xFFFFFFFB);
  *(_DWORD *)(v73 - 144) = v98;
  uint64_t v99 = *(unsigned __int8 *)(v73 - 101);
  LODWORD(v99) = ((v99 + (v99 ^ 0xCA) - 127 - ((2 * (v99 + (v99 ^ 0xCA) - 127)) & 0x9F) - 49) ^ v88[v99 ^ 0xF]) & 0xFFFF00FF | ((((v83 >> 28) ^ (8 * (v83 >> 28) + 120)) ^ 0x88) << 8);
  LOBYTE(v76) = v76[*(unsigned __int8 *)(v73 - 99) ^ 0x10];
  int v100 = v74[*(unsigned __int8 *)(v73 - 100) ^ 0x86] ^ ((*(unsigned char *)(v73 - 100) ^ 0x9F)
                                                                                          - ((2
                                                                                            * (*(unsigned char *)(v73 - 100) ^ 0x9F)
                                                                                            + 6) & 0xB2)
                                                                                          + 92);
  LODWORD(v74) = v80[*(unsigned __int8 *)(v73 - 98) ^ 0x1CLL];
  LOBYTE(v93) = ((_BYTE)v76 - ((2 * (_BYTE)v76) & 0xAC) - 42) ^ (16 * ((_BYTE)v76 - ((2 * (_BYTE)v76) & 0xAC) - 42));
  LODWORD(v76) = ((v100 ^ 7) << 24) | ((v93 ^ 0xF6) << 16);
  HIDWORD(v83) = v74 ^ 5;
  LODWORD(v83) = (v74 ^ 0x40) << 24;
  LOBYTE(v80) = (v83 >> 28) ^ 0x5F ^ (8 * (v83 >> 28) + 120);
  uint64_t v101 = *(unsigned __int8 *)(v73 - 97);
  int v102 = v88[v101 ^ 0x7C];
  uint64_t v103 = (uint64_t)*(&off_26DE9F480 + ((v72 - 2442) ^ 0x4B3));
  uint64_t v104 = 4 * (v93 ^ 0xDCu);
  *(void *)(v73 - 256) = v104;
  HIDWORD(v83) = *(_DWORD *)(v103 + v104);
  LODWORD(v83) = HIDWORD(v83) ^ 0x4A94B7AC;
  unint64_t v105 = ((v101 ^ 0xFFFFFFF3) + (v101 ^ 0xFFFFFFB9) + 1) ^ v102;
  STACK[0x238] = v105;
  uint64_t v106 = (char *)*(&off_26DE9F480 + ((v72 - 2442) ^ 0x539)) - 4;
  LODWORD(v104) = *(_DWORD *)&v106[4 * (v105 ^ 0x95)];
  LODWORD(v76) = v76 & 0xFFFFFF00 | v105 ^ 0xCF;
  LODWORD(v105) = v104 - ((2 * v104 + 238460694) & 0x8A42C37A);
  *(_DWORD *)(v73 - 200) = v100;
  LODWORD(v104) = ((v100 ^ 0xFFFFFF38) + 91) ^ ((v100 ^ 0xFFFFFF62) + 1);
  uint64_t v107 = ((v100 ^ 0x2716EDBE ^ (v104 - ((2 * v104) & 0x4E2DDA46) + 655813923)) + 90) ^ 2;
  uint64_t v108 = (char *)*(&off_26DE9F480 + v72 - 3526) - 12;
  unsigned int v109 = v105 + 1279045960;
  unsigned __int8 v110 = (v108[v107] - 60) ^ 0x54 ^ (112 * (v108[v107] - 60));
  LODWORD(v76) = v76 & 0xFFFF00FF | (v80 << 8);
  int v111 = v72 - 2442;
  uint64_t v112 = (uint64_t)*(&off_26DE9F480 + ((v72 - 2442) ^ 0x47C));
  LODWORD(STACK[0x230]) = v80;
  LODWORD(v80) = *(_DWORD *)(v112 + 4 * (v80 ^ 0xE2u)) ^ 0x7769BE89;
  LODWORD(v88) = (v83 >> 2) ^ v90 ^ v80 ^ (587098372 * v80) ^ ((v83 >> 2) >> 4) & 0xACF237F ^ v109 ^ (v109 >> 2) ^ (v109 >> 6);
  unsigned int v641 = v88;
  LODWORD(STACK[0x228]) = v98 ^ v99;
  int v113 = v98 ^ v99 ^ 0x631A7CF6;
  LODWORD(v88) = v88 ^ v110;
  LODWORD(v80) = v88 ^ (v89 & 0xFFFFFF00 | v95);
  LODWORD(v99) = v88;
  LODWORD(STACK[0x204]) = v80;
  unsigned int v114 = v80 ^ 0x9133F2A4;
  LODWORD(STACK[0x20C]) = v80 ^ 0x9133F2A4 ^ v113;
  LODWORD(v88) = v80 ^ 0x9133F2A4 ^ v113 ^ v76;
  __int16 v115 = (unsigned __int16)v88 ^ 0xAFD1;
  unsigned int v116 = v88;
  LODWORD(STACK[0x21C]) = ((v88 ^ 0xDBAFD1) >> 16);
  HIDWORD(v83) = *(_DWORD *)(v103 + 4 * (((v88 ^ 0xDBAFD1) >> 16) ^ 0x12u));
  LODWORD(v83) = HIDWORD(v83) ^ 0x4A94B7AC;
  LODWORD(v80) = ((v83 >> 2) >> 4) & 0xACF237F ^ (v83 >> 2);
  int v631 = v99;
  LODWORD(v88) = (v80 + (v99 ^ 0x88243AB ^ v80) + 1) ^ ((v99 ^ 0x88243AB) + 1);
  LODWORD(v88) = v99 ^ 0xF291EBA7 ^ (v88 - ((2 * v88) & 0xBD8AFE6) + 99375091);
  int v117 = *(_DWORD *)&v106[4 * (v115 ^ 0x3F)];
  int v118 = v88 + v80;
  unsigned int v119 = ((v117 - 2028253301) >> 6) ^ ((v117 - 2028253301) >> 2);
  int v120 = v119 & 0x10000 | 0x2BA83C31;
  if ((v119 & 0x10000 & (v117 + 85899)) != 0) {
    int v120 = 1464891490 - v120;
  }
  int v121 = HIBYTE(v115);
  LODWORD(STACK[0x208]) = v121;
  int v122 = *(_DWORD *)(v112 + 4 * (v121 ^ 0xB5u));
  unint64_t v123 = HIBYTE(v116);
  STACK[0x210] = v123;
  unsigned int v124 = (587098372 * (v122 ^ 0x7769BE89)) ^ v122 ^ v119 & 0xFFFEFFFF ^ ((112 * (v108[v123 ^ 0x6C] - 60)) ^ (v108[v123 ^ 0x6C] - 60)) ^ (v117 + 1534268250 + v120) ^ v118;
  int v125 = v124 ^ 0x1F973750;
  unsigned int v126 = v124;
  unsigned int v633 = v124;
  unsigned int v616 = v124 ^ 0x1F973750 ^ v113;
  unsigned __int8 v621 = v116;
  unsigned int v127 = v616 ^ 0xE6B68CA ^ v116;
  int v619 = BYTE2(v127);
  HIDWORD(v128) = *(_DWORD *)(v103 + 4 * (BYTE2(v127) ^ 0xDEu));
  LODWORD(v128) = HIDWORD(v128) ^ 0x4A94B7AC;
  LODWORD(v123) = v125 ^ v114;
  int v629 = v616 ^ 0xCA ^ v116;
  int v129 = *(_DWORD *)&v106[4 * (v629 ^ 0xC5)];
  unsigned int v130 = v129 - ((2 * v129 + 238460694) & 0xCAD57C30) - 326759005;
  uint64_t v614 = HIBYTE(v127);
  int v612 = BYTE1(v127);
  int v131 = *(_DWORD *)(v112 + 4 * (BYTE1(v127) ^ 0xCEu)) ^ 0x7769BE89;
  int v132 = (v128 >> 2) ^ v131 ^ (587098372 * v131) ^ ((v128 >> 2) >> 4) & 0xACF237F ^ v130 ^ ((112 * (v108[v614 ^ 0x12] - 60)) ^ (v108[v614 ^ 0x12] - 60)) ^ v126 ^ (((v130 >> 6) ^ (v130 >> 2) ^ 0x18CF057E) - ((2 * ((v130 >> 6) ^ (v130 >> 2) ^ 0x18CF057E)) & 0x4AD57C30) + 1701494296);
  unsigned int v605 = v123;
  unsigned int v133 = v132 ^ v123;
  int v134 = v132;
  unsigned int v135 = v132 ^ v123 ^ v116;
  unsigned int v136 = v133;
  unsigned int v589 = v133;
  int v607 = BYTE2(v135);
  HIDWORD(v128) = *(_DWORD *)(v103 + 4 * (BYTE2(v135) ^ 0x32u));
  LODWORD(v128) = HIDWORD(v128) ^ 0x4A94B7AC;
  int v603 = v135;
  int v137 = *(_DWORD *)&v106[4 * (v135 ^ 0xDB)];
  unsigned int v138 = v137 - ((2 * v137 + 238460694) & 0x9C27E60E) - 718323054;
  uint64_t v600 = HIBYTE(v135);
  int v597 = BYTE1(v135);
  unsigned int v594 = v135;
  int v139 = *(_DWORD *)(v112 + 4 * (BYTE1(v135) ^ 0x69u)) ^ 0x7769BE89;
  int v140 = (v128 >> 2) ^ v139 ^ (587098372 * v139) ^ ((v128 >> 2) >> 4) & 0xACF237F ^ v138 ^ (v138 >> 2) ^ (v138 >> 6) ^ (v108[v600 ^ 0x94] - 60) ^ 0x54 ^ (112 * (v108[v600 ^ 0x94] - 60));
  unsigned int v591 = v136 ^ v616 ^ 0xE6B68CA;
  unsigned int v580 = v140 ^ v123;
  int v141 = v140 ^ v123 ^ 0x8D3AACB;
  unsigned int v576 = v591 ^ v141;
  int v623 = v591 ^ v141 ^ v135;
  int v587 = ((v623 ^ 0x876B45EF) >> 16);
  HIDWORD(v128) = *(_DWORD *)(v103 + 4 * (v587 ^ 0xB5u));
  LODWORD(v128) = HIDWORD(v128) ^ 0x4A94B7AC;
  int v142 = *(_DWORD *)&v106[4 * (v623 ^ 0xC5)];
  unsigned int v143 = v142 - ((2 * v142 + 238460694) & 0x23C50CFC) - 1728195063;
  uint64_t v585 = (v623 ^ 0x876B45EF) >> 24;
  int v583 = ((unsigned __int16)(v623 ^ 0x45EF) >> 8);
  int v144 = *(_DWORD *)(v112 + 4 * (v583 ^ 0x8Bu)) ^ 0x7769BE89;
  unsigned int v574 = v134 ^ v140;
  unsigned int v566 = (v128 >> 2) ^ v144 ^ (587098372 * v144) ^ ((v128 >> 2) >> 4) & 0xACF237F ^ v143 ^ v134 ^ v140 ^ (v108[v585 ^ 0x28] - 60) ^ 0x54 ^ (112 * (v108[v585 ^ 0x28] - 60)) ^ (((v143 >> 6) ^ (v143 >> 2) ^ 0x43F2B86) - 2 * (((v143 >> 6) ^ (v143 >> 2) ^ 0x43F2B86) & 0x11E2867F ^ ((v143 >> 6) ^ (v143 >> 2)) & 1) + 300058238);
  unsigned int v569 = v566 ^ v141;
  int v145 = v566 ^ v141 ^ 0x3928D9FE;
  unsigned int v609 = v145 ^ v576 ^ v623 ^ 0x876B45EF;
  int v146 = ((v609 ^ 0x655F7FDC) >> 16);
  *(_DWORD *)(v73 - 148) = v146;
  HIDWORD(v128) = *(_DWORD *)(v103 + 4 * (v146 ^ 0xE5u));
  LODWORD(v128) = HIDWORD(v128) ^ 0x4A94B7AC;
  unsigned int v147 = (v128 >> 2) - ((2 * (v128 >> 2)) & 0xFC6C07DE) + 2117469167;
  int v148 = *(_DWORD *)&v106[4 * (v609 ^ 0xA0)];
  unsigned int v149 = v148 - 1697692727 + (~(2 * v148 + 238460694) | 0xD8981785);
  int v150 = *(_DWORD *)(v112 + 4 * (((unsigned __int16)(v609 ^ 0x7FDC) >> 8) ^ 0xFDu)) ^ 0x7769BE89;
  int v151 = (((v147 >> 4) & 0xACF237F ^ 0x2C3203E)
        + (v147 ^ 0x7E3603EF)
        - 2 * (((v147 >> 4) & 0xACF237F ^ 0x2C3203E) & (v147 ^ 0x7E3603EF))) ^ (587098372 * v150);
  uint64_t v571 = (v609 ^ 0x655F7FDC) >> 24;
  unsigned int v560 = v149 ^ v150 ^ (v149 >> 6) ^ (v149 >> 2) ^ (v108[v571 ^ 0x86] - 60) ^ 0x54 ^ (112 * (v108[v571 ^ 0x86] - 60)) ^ v566 ^ (v151 - ((2 * v151) & 0xEB4C3886) - 173663165);
  unsigned int v152 = v145 ^ v576 ^ 0xC50F098A;
  char v153 = v145 ^ v576;
  unsigned int v543 = v145 ^ v576;
  unsigned int v557 = v560 ^ 0x466D6B29 ^ v145;
  unsigned int v564 = v557 ^ v152;
  unsigned int v154 = v557 ^ v152 ^ 0xF15EEE09;
  unsigned int v155 = v154 ^ v609 ^ 0x655F7FDC;
  int v625 = BYTE2(v155);
  HIDWORD(v128) = *(_DWORD *)(v103 + 4 * (BYTE2(v155) ^ 0xAAu));
  LODWORD(v128) = HIDWORD(v128) ^ 0x4A94B7AC;
  int v156 = (v154 ^ v609 ^ 0xDC);
  int v157 = *(_DWORD *)&v106[4 * (v156 ^ 0x97)];
  unsigned int v158 = v157 - ((2 * v157 + 238460694) & 0xE12B5834) + 2008087461;
  uint64_t v562 = HIBYTE(v155);
  LODWORD(v123) = *(_DWORD *)(v112 + 4 * (BYTE1(v155) ^ 0xD5u));
  int v159 = v123 ^ (v128 >> 2) ^ (587098372 * (v123 ^ 0x7769BE89)) ^ ((v128 >> 2) >> 4) & 0xACF237F ^ (v158 >> 2) ^ (v158 >> 6) ^ ((112 * (v108[v562 ^ 0x72] - 60)) ^ (v108[v562 ^ 0x72] - 60)) ^ 0x488E833F;
  unsigned int v551 = (v159 - ((2 * v159) & 0xCD29141E) - 426472945) ^ v158 ^ v560 ^ 0x466D6B29;
  int v160 = v551 ^ 0x50B9807;
  unsigned int v553 = v551 ^ 0x50B9807 ^ v557;
  int v161 = v553 ^ 0x690ABE46;
  unsigned int v162 = v161 - ((2 * v161) & 0xCC9E51D6) - 431019797;
  int v163 = (char *)*(&off_26DE9F480 + (v111 ^ 0x584)) - 8;
  unsigned int v164 = *(_DWORD *)&v163[4 * (((v162 ^ v154) >> 24) ^ 0x6D)];
  *(_DWORD *)(v73 - 156) = v162 ^ v154;
  *(_DWORD *)(v73 - 152) = v164;
  int v165 = (v164 & 0x4000 ^ 0x527CFFFF) + 2 * (v164 & 0x4000);
  int v548 = (v164 >> 1) ^ 0x41F013BE;
  BOOL v166 = ((v165 + 763559937) & v548) == 0;
  int v167 = -1533940284 - v165;
  int v168 = v165 - 6820410;
  if (v166) {
    int v169 = v168;
  }
  else {
    int v169 = v167;
  }
  int v546 = v169;
  *(_DWORD *)(v73 - 184) = v111;
  uint64_t v533 = (uint64_t)*(&off_26DE9F480 + (v111 ^ 0x508));
  int v541 = ((BYTE1(v155) ^ 0xAF) - ((2 * (BYTE1(v155) ^ 0xAF)) & 0x10C) + 1766234758) ^ 0x6FD8A8EC ^ *(_DWORD *)(v533 + 4 * (BYTE1(v155) ^ 0xF8u));
  int v170 = (v541 & 0x800 ^ 0x2ED1BDDC) + 2 * (v541 & 0x800);
  int v171 = (char *)*(&off_26DE9F480 + (v111 ^ 0x4D8)) - 4;
  int v538 = *(_DWORD *)&v171[4 * (v156 ^ 0xA7)];
  BOOL v166 = ((v170 - 785497564) & (v538 + 233860221)) == 0;
  int v172 = v160 ^ (v152 - 2 * (v152 & 0x621B78B5 ^ v153 & 0x11) + 1645967524);
  int v173 = v172 ^ v155;
  int v535 = ((v172 ^ v155) >> 16);
  HIDWORD(v175) = *(_DWORD *)(v103 + 4 * (v535 ^ 0xAAu));
  LODWORD(v175) = HIDWORD(v175) ^ 0x4A94B7AC;
  unsigned int v174 = v175 >> 2;
  int v176 = v170 - 71308488;
  int v177 = 1499686640 - v170;
  if (!v166) {
    int v176 = v177;
  }
  int v537 = v176;
  *(_DWORD *)(v73 - 168) = v134;
  unsigned int v178 = v134 ^ 0x26643760;
  int v179 = v178 - ((2 * v178 + 316165230) & 0x26BE68B6) + 483089042;
  int v523 = v173;
  if ((v134 ^ 0x26643760u) < 0xF693D9C9) {
    int v179 = v134 ^ 0x353B033B;
  }
  BOOL v181 = v178 > 0xF693D9C8;
  int v180 = *(_DWORD *)&v106[4 * (v173 ^ 0x97)];
  unsigned int v182 = v180 - ((2 * v180 + 238460694) & 0x91D75C2A) + 1342635424;
  unsigned int v516 = v173;
  int v512 = BYTE1(v173);
  int v183 = *(_DWORD *)(v112 + 4 * (BYTE1(v173) ^ 0xD5u));
  uint64_t v518 = (v173 ^ 0x4BE1AF0Du) >> 24;
  int v184 = (587098372 * (v183 ^ 0x7769BE89)) ^ v174 ^ (v174 >> 4) & 0xACF237F ^ v182 ^ ((112 * (v108[v518 ^ 0x58] - 60)) ^ (v108[v518 ^ 0x58] - 60)) ^ (((v182 >> 6) ^ (v182 >> 2) ^ 0x3119453D) - ((2 * ((v182 >> 6) ^ (v182 >> 2) ^ 0x3119453D)) & 0x11D75C2A) - 924078571);
  unsigned int v185 = v160 ^ v183 ^ (v184 - ((2 * v184) & 0xC436F148) + 1645967524);
  unsigned int v186 = v185 ^ v161;
  unsigned int v187 = v185 ^ v161 ^ v172 ^ v173 ^ 0x4BE1AF0D;
  unsigned int v494 = v186 ^ v172;
  int v502 = BYTE2(v187);
  HIDWORD(v188) = *(_DWORD *)(v103 + 4 * (BYTE2(v187) ^ 0xC1u));
  LODWORD(v188) = HIDWORD(v188) ^ 0x4A94B7AC;
  int v501 = (v185 ^ v161 ^ v172 ^ v173 ^ 0xD);
  int v189 = *(_DWORD *)&v106[4 * (v501 ^ 0xD3)];
  unsigned int v190 = v189 - ((2 * v189 + 238460694) & 0x44B2C95E) - 1451969478;
  uint64_t v500 = HIBYTE(v187);
  char v191 = v108[v500 ^ 0x3E] - 60;
  *(_DWORD *)(v73 - 208) = BYTE1(v187);
  int v192 = *(_DWORD *)(v112 + 4 * (BYTE1(v187) ^ 0x6Au)) ^ 0x7769BE89;
  unsigned int v193 = (v188 >> 2) ^ v192 ^ (587098372 * v192) ^ ((v188 >> 2) >> 4) & 0xACF237F ^ v190 ^ ((112 * v191) ^ v191) ^ v185 ^ (((v190 >> 6) ^ (v190 >> 2) ^ 0x81F3CB9) - ((2 * ((v190 >> 6) ^ (v190 >> 2) ^ 0x81F3CB9)) & 0x44B2C95E) + 576283823);
  int v194 = v186 ^ v172 ^ 0x77C2F846;
  unsigned int v195 = v193 ^ 0x5769BE89 ^ v186;
  unsigned int v196 = v195 ^ 0xA698E075 ^ v194;
  unsigned int v197 = v196 ^ v187;
  int v627 = ((v196 ^ v187) >> 16);
  HIDWORD(v188) = *(_DWORD *)(v103 + 4 * (v627 ^ 0x9Bu));
  LODWORD(v188) = HIDWORD(v188) ^ 0x4A94B7AC;
  int v198 = *(_DWORD *)(v112
                   + 4
                   * ((BYTE1(v197) ^ 0xC479C165 ^ ((BYTE1(v197) ^ 0xFFFFFF8D)
                                                 + (BYTE1(v197) ^ 0xA4)
                                                 + 1
                                                 - ((2 * ((BYTE1(v197) ^ 0xFFFFFF8D) + (BYTE1(v197) ^ 0xA4) + 1)) & 0x770C7C7A)
                                                 + 998653501))
                    + 2 * ((((BYTE1(v197) ^ 0xFFFFFF8D) + (BYTE1(v197) ^ 0xA4) + 1) ^ 0xFC) & (BYTE1(v197) ^ 0xA4)))) ^ 0x7769BE89;
  int v525 = v193 ^ 0x89 ^ v186 ^ 0x75 ^ v194 ^ v187;
  int v199 = *(_DWORD *)&v106[4 * (v525 ^ 0xE0)];
  unsigned int v200 = v199 - ((2 * v199 + 238460694) & 0xA44EA09A) - 649945128;
  uint64_t v521 = (v196 ^ v187) >> 24;
  unsigned int v510 = v198 ^ (v188 >> 2) ^ ((v188 >> 2) >> 4) & 0xACF237F ^ v200 ^ (587098372 * v198) ^ (v200 >> 2) ^ (v200 >> 6) ^ ((112 * (v108[v521 ^ 0x8E] - 60)) ^ (v108[v521 ^ 0x8E] - 60)) ^ v193 ^ 0x5769BE89;
  unsigned int v504 = v510 ^ 0xCDF471C ^ v195 ^ 0xA698E075;
  unsigned int v201 = v510 ^ 0xCDF471C ^ v194;
  int v202 = *(_DWORD *)(v73 - 184);
  unsigned int v203 = (char *)*(&off_26DE9F480 + v202 - 846) - 12;
  int v204 = *(_DWORD *)&v203[4 * (HIBYTE(v504) ^ 0x7D)];
  if (v181) {
    char v205 = -110;
  }
  else {
    char v205 = 91;
  }
  unsigned int v507 = v510 ^ 0xCDF471C ^ v194;
  int v206 = *(_DWORD *)&v203[4 * (HIBYTE(v201) ^ 0x8F)];
  BOOL v166 = v179 == 325006427;
  HIDWORD(v503) = v197 ^ v201;
  int v207 = *(_DWORD *)&v203[4 * (((v197 ^ v201) >> 24) ^ 0x89)];
  unsigned int v640 = 342643101 * *(_DWORD *)&v203[4 * (*(_DWORD *)(v73 - 176) ^ 0x99)] - 1828402989;
  unsigned int v639 = 342643101 * *(_DWORD *)&v203[4 * (*(_DWORD *)(v73 - 192) ^ 0xC)] - 1828402989;
  unsigned int v638 = 342643101 * *(_DWORD *)&v203[4 * (HIBYTE(*(_DWORD *)(v73 - 144)) ^ 0x6D)] - 1828402989;
  unsigned int v637 = 342643101 * *(_DWORD *)&v203[4 * (*(_DWORD *)(v73 - 200) ^ 0x1C)] - 1828402989;
  *(_DWORD *)(v73 - 200) = 342643101 * *(_DWORD *)&v203[4 * (HIBYTE(v510) ^ 0xDC)] - 1828402989;
  unsigned int v499 = 342643101 * v204 - 1828402989;
  *(_DWORD *)(v73 - 192) = 342643101 * v206 - 1828402989;
  *(_DWORD *)(v73 - 176) = 342643101 * v207 - 1828402989;
  unsigned int v531 = *(_DWORD *)&v163[4 * (HIBYTE(v193) ^ 0xD4)];
  int v208 = ((v195 ^ 0x78A1049) >> 16);
  unsigned int v209 = *(_DWORD *)&v163[4 * (HIBYTE(v195) ^ 0xCC)];
  unsigned int v210 = (char *)*(&off_26DE9F480 + v202 - 1276) - 12;
  int v527 = (*(_DWORD *)&v171[4 * (v195 ^ 0x4B)] + 233860221) ^ *(_DWORD *)(v533
                                                                                        + 4
                                                                                        * (((unsigned __int16)(v195 ^ 0x1049) >> 8) ^ 0x8Du)) ^ *(_DWORD *)&v210[4 * (v208 ^ 0x11)] ^ v209 ^ v208 ^ 0x97 ^ (((unsigned __int16)(v195 ^ 0x1049) >> 8) - ((v195 >> 7) & 0x10C) + 1766234758) ^ ((v208 ^ 0x97) - 1673324707 - ((2 * (v208 ^ 0x97) + 1056302344) & 0x389041B2)) ^ 0x155F0D6E ^ (((v209 >> 5) ^ (v209 >> 4) ^ 0xC21034C) - ((2 * ((v209 >> 5) ^ (v209 >> 4) ^ 0xC21034C)) & 0xD7E5426) - 1765856749);
  int v211 = BYTE2(v196) ^ 0x2A;
  unsigned int v212 = *(_DWORD *)&v163[4 * (HIBYTE(v196) ^ 0x2F)];
  int v213 = (v196 >> 8) ^ 0x5B76E0;
  HIDWORD(v526) = (*(_DWORD *)&v171[4 * (v196 ^ 0xF)] + 233860221) ^ *(_DWORD *)(v533
                                                                                                + 4
                                                                                                * (v213 ^ 0x86u)) ^ *(_DWORD *)&v210[4 * (BYTE2(v196) ^ 0xAC)] ^ v212 ^ v211 ^ (v213 - ((2 * v213) & 0x10C) + 1766234758) ^ (v211 - 1673324706 + ((2 * ((v211 + 132) & 0xDB ^ (BYTE2(v196) ^ 0x3E | 0xFFFFFFFD))) ^ 0x38904005)) ^ (((v212 >> 5) ^ (v212 >> 4) ^ 0xC21034C) - ((2 * ((v212 >> 5) ^ (v212 >> 4) ^ 0xC21034C)) & 0x190E9FB2) - 863547431);
  unsigned int v214 = (v627 ^ 0x67) - 1673324706 + ((2 * (((v627 ^ 0x67) + 132) & 0xDB ^ (v627 ^ 0x67 | 0xFFFFFFFD))) ^ 0x38904005);
  unsigned int v215 = *(_DWORD *)&v163[4 * (v521 ^ 0xC7)];
  int v216 = v627 ^ 0x67 ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v196 ^ v187) >> 8) ^ 0xDCu)) ^ (*(_DWORD *)&v171[4 * (v525 ^ 0xB)] + 233860221) ^ *(_DWORD *)&v210[4 * (v627 ^ 0xE1)] ^ ((((unsigned __int16)(v196 ^ v187) >> 8) ^ 8) - ((v197 >> 7) & 0x10C) + 1766234758) ^ (v215 >> 4);
  unsigned int v628 = v215;
  LODWORD(v526) = v216 ^ (v215 >> 5) ^ v214;
  int v217 = *(_DWORD *)&v171[4 * (v185 ^ 0x63)];
  unsigned int v529 = v185;
  unsigned int v218 = *(_DWORD *)&v163[4
                        * (((v185 ^ 0xDD6511E8) >> ((v635 >> 4) & 8) >> ((v635 >> 4) & 8 ^ 0x18)) ^ 0x74)];
  unsigned int v522 = BYTE2(v185) ^ *(_DWORD *)(v533 + 4 * (BYTE1(v185) ^ 0x6Fu)) ^ ((BYTE2(v185) ^ 0x39)
                                                                        - 1673324706
                                                                        + ((2
                                                                          * (((BYTE2(v185) ^ 0x39) + 132) & 0xDB ^ (HIWORD(v185) | 0xFFFFFFFD))) ^ 0x38904005)) ^ *(_DWORD *)&v210[4 * (BYTE2(v185) ^ 0xBF)] ^ v218 ^ (v217 - ((2 * v217 + 467720442) & 0xD28D350C) + 2000094979) ^ 0x8721000D ^ (((v218 >> 5) ^ (v218 >> 4) ^ 0xC21034C) - 2 * (((v218 >> 5) ^ (v218 >> 4) ^ 0xC21034C) & 0x4C12759 ^ ((v218 >> 5) ^ (v218 >> 4)) & 0x10) + 79767369);
  unsigned int v219 = ((BYTE1(v186) ^ 0x10) - ((v186 >> 7) & 0x10C) + 1766234758) ^ BYTE2(v186) ^ 0xED ^ *(_DWORD *)(v533 + 4 * (BYTE1(v186) ^ 0x1Bu)) ^ ((BYTE2(v186) ^ 0xED) - 1673324706 + ((2 * (((BYTE2(v186) ^ 0xED) + 132) & 0xDB ^ (HIWORD(v186) | 0xFFFFFFFD))) ^ 0x38904005)) ^ (*(_DWORD *)&v171[4 * (v186 ^ 0x19)] + 233860221) ^ *(_DWORD *)&v210[4 * (BYTE2(v186) ^ 0x6B)];
  unsigned int v220 = *(_DWORD *)&v163[4 * (HIBYTE(v186) ^ 0x29)];
  int v221 = v220 ^ (v220 >> 5) ^ (v220 >> 4);
  int v222 = ((v219 ^ 0x6FD8A8B0) + (v219 ^ 0x1FE6737E ^ v221) + 1) ^ ((v221 ^ 0x703EDBCE) + 1);
  unsigned int v223 = v221 ^ 0xAC6389A8 ^ (v222 - ((2 * v222) & 0x47455B32) + 597863833);
  HIDWORD(v496) = (v219 ^ 0x8704B4C4 ^ (v223 - ((2 * v223) & 0xD1B838E8) - 388227980))
                + 2 * (v223 & (v219 ^ 0x6FD8A8B0));
  int v224 = ((v494 ^ 0xEB1513B2) >> 16);
  unsigned int v508 = (((unsigned __int16)(v494 ^ 0x13B2) >> 8) - (((v494 ^ 0xEB1513B2) >> 7) & 0x10C) + 1766234758) ^ v224 ^ (v224 - 1673324707 - ((2 * v224 + 1056302344) & 0x389041B2)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v494 ^ 0x13B2) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v494 ^ 0x39)] + 233860221) ^ *(_DWORD *)&v210[4 * (v224 ^ 0x86)];
  int v225 = *(_DWORD *)&v171[4 * (v501 ^ 0x5D)];
  int v487 = v225 - ((2 * v225 + 467720442) & 0xD28D350C);
  unsigned int v226 = *(_DWORD *)&v163[4 * (v500 ^ 0x1F)];
  LODWORD(v500) = v502 ^ 0x14;
  LODWORD(v496) = (v502 ^ 0x14) - 1673324706 + ((2 * (v502 ^ 0x14) + 264) & 0x1B2 ^ 0xC76FBFFF);
  HIDWORD(a25) = v226;
  HIDWORD(v495) = ((v226 >> 5) ^ (v226 >> 4) ^ 0xC21034C)
                - ((2 * ((v226 >> 5) ^ (v226 >> 4) ^ 0xC21034C)) & 0x6627842)
                - 1825489887;
  int v227 = ((v551 ^ 0x6F13B980) >> 16);
  unsigned int v228 = *(_DWORD *)&v163[4 * (HIBYTE(v551) ^ 0x1B)];
  unsigned int v229 = v228 ^ 0xCECB2FAB;
  HIDWORD(v492) = HIBYTE(v494);
  unsigned int v230 = ((((v228 >> 1) ^ 0x41F013BE) - ((2 * ((v228 >> 1) ^ 0x41F013BE)) & 0x9A5611AC) + 1294665942) ^ v228 ^ 0xCECB2FAB) >> (HIBYTE(v494) & 4 ^ 4) >> (HIBYTE(v494) & 4);
  unsigned int v552 = (((unsigned __int16)(v551 ^ 0xB980) >> 8) - (((v551 ^ 0x6F13B980) >> 7) & 0x10C) + 1766234758) ^ v227 ^ (v227 - 1673324706 + ((2 * ((v551 ^ 0x6F13B980) >> 16) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v551 ^ 0xB980) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v551 ^ 0xB)] + 233860221) ^ *(_DWORD *)&v210[4 * (v227 ^ 0x86)] ^ v229 ^ (v230 - ((2 * v230) & 0x9A5611AC) + 1294665942);
  int v231 = ((v553 ^ 0x757CE328) >> 16);
  unsigned int v232 = *(_DWORD *)&v163[4 * (HIBYTE(v553) ^ 1)];
  unsigned int v554 = v231 ^ (((unsigned __int16)(v553 ^ 0xE328) >> 8)
               - (((v553 ^ 0x757CE328) >> 7) & 0x10C)
               + 1766234758) ^ (v231 - 1673324706 + ((2 * ((v553 ^ 0x757CE328) >> 16) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v553 ^ 0xE328) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v553 ^ 0xA3)] + 233860221) ^ *(_DWORD *)&v210[4 * (v231 ^ 0x86)] ^ v232 ^ 0x33912AED ^ (((v232 >> 5) ^ (v232 >> 4) ^ 0xC21034C) - ((2 * ((v232 >> 5) ^ (v232 >> 4) ^ 0xC21034C)) & 0xE21B20) - 1334768240);
  unsigned int v233 = *(_DWORD *)(v73 - 156);
  int v489 = ((v233 >> 8) ^ 0x197976) & 0x8E ^ (v233 >> 8) & 8;
  int v490 = (v233 >> 8) ^ 0x197976;
  LODWORD(v493) = BYTE2(v233);
  HIDWORD(v493) = (BYTE2(v233) ^ 0x25) - 1673324706 + ((2 * (BYTE2(v233) ^ 0x25) + 264) & 0x1B2 ^ 0xC76FBFFF);
  unsigned int v234 = (((v548 - 1377103301 + v546) ^ *(_DWORD *)(v73 - 152) & 0xFFFFBFFF) >> 4) ^ 0x83E0277;
  int v547 = v234 - ((2 * v234) & 0x11F04FC) - 1601207682;
  unsigned int v235 = *(_DWORD *)&v163[4 * (v518 ^ 1)];
  unsigned int v549 = ((v512 ^ 0xAF) - 2 * ((v512 ^ 0xAF) & 0x96 ^ (v516 >> 8) & 0x10) + 1766234758) ^ v535 ^ 0x57 ^ ((v535 ^ 0x57) - 1673324706 + ((2 * (((v535 ^ 0x57) + 132) & 0xDB ^ (v535 ^ 0x57 | 0xFFFFFFFD))) ^ 0x38904005)) ^ *(_DWORD *)(v533 + 4 * (v512 ^ 0x7Du)) ^ (*(_DWORD *)&v171[4 * (v523 ^ 0x23)] + 233860221) ^ *(_DWORD *)&v210[4 * (v535 ^ 0xD1)] ^ v235 ^ (((v235 >> 5) ^ (v235 >> 4) ^ 0xC21034C) - ((2 * ((v235 >> 5) ^ (v235 >> 4) ^ 0xC21034C)) & 0xAAFE302) + 1431826817);
  int v236 = ((v560 ^ 0xBD9F035F) >> 16);
  unsigned int v237 = *(_DWORD *)&v163[4 * (HIBYTE(v560) ^ 0x99)];
  unsigned int v561 = v236 ^ (((unsigned __int16)(v560 ^ 0x35F) >> 8)
               - (((v560 ^ 0xBD9F035F) >> 7) & 0x10C)
               + 1766234758) ^ *(_DWORD *)(v533
                                         + 4 * (((unsigned __int16)(v560 ^ 0x35F) >> 8) ^ 0x83u)) ^ ((v236 ^ 0x9B) - 1673324706 + ((2 * (((v236 ^ 0x9B) + 132) & 0xDB ^ (v236 ^ 0x9B | 0xFFFFFFFD))) ^ 0x38904005)) ^ (*(_DWORD *)&v171[4 * (v560 ^ 0x3D)] + 233860221) ^ *(_DWORD *)&v210[4 * (v236 ^ 0x1D)] ^ v237 ^ 0x8D2CA65D ^ (((v237 >> 5) ^ (v237 >> 4) ^ 0xC21034C) - ((2 * ((v237 >> 5) ^ (v237 >> 4) ^ 0xC21034C)) & 0x1D990376) + 248283579);
  unsigned int v238 = *(_DWORD *)&v163[4 * (HIBYTE(v557) ^ 0xAF)];
  unsigned int v558 = BYTE2(v557) ^ ((BYTE2(v557) ^ 0x6E) - 1673324707 - ((2 * (BYTE2(v557) ^ 0x6E) + 1056302344) & 0x389041B2)) ^ ((BYTE1(v557) ^ 0xC6) - 2 * (((v557 >> 8) ^ 0x1711C6) & 0x96 ^ (v557 >> 8) & 0x10) + 1766234758) ^ (*(_DWORD *)&v171[4 * (v557 ^ 0x62)] + 233860221) ^ *(_DWORD *)(v533 + 4 * (BYTE1(v557) ^ 0x2Au)) ^ *(_DWORD *)&v210[4 * (BYTE2(v557) ^ 0xE8)] ^ v238 ^ 0xA22161FC ^ (((v238 >> 5) ^ (v238 >> 4) ^ 0xC21034C) - 2 * (((v238 >> 5) ^ (v238 >> 4) ^ 0xC21034C) & 0x1C146FF ^ ((v238 >> 5) ^ (v238 >> 4)) & 0x10) + 566314735);
  unsigned int v239 = *(_DWORD *)&v163[4 * (HIBYTE(v564) ^ 0x39)];
  int v240 = ((v564 ^ 0x4DFF7A0A) >> 16);
  unsigned int v565 = (((unsigned __int16)(v564 ^ 0x7A0A) >> 8) - (((v564 ^ 0x4DFF7A0A) >> 7) & 0x10C) + 1766234758) ^ v240 ^ (v240 - 1673324706 + ((2 * ((v564 ^ 0x4DFF7A0A) >> 16) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v564 ^ 0x7A0A) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v564 ^ 0x81)] + 233860221) ^ *(_DWORD *)&v210[4 * (v240 ^ 0x86)] ^ v239 ^ (((v239 >> 5) ^ (v239 >> 4) ^ 0xC21034C) - ((2 * ((v239 >> 5) ^ (v239 >> 4) ^ 0xC21034C)) & 0x1A1EC3EE) - 854629897);
  unsigned int v519 = v502 ^ 0x92;
  unsigned int v241 = *(_DWORD *)&v163[4 * (v562 ^ 0xC1)];
  unsigned int v242 = ((v625 ^ 0x92) - 1673324706 + ((2 * (((v625 ^ 0x92) + 132) & 0xDB ^ (v625 ^ 0x92 | 0xFFFFFFFD))) ^ 0x38904005)) ^ v625 ^ 0x92 ^ *(_DWORD *)&v210[4 * (v625 ^ 0x14)] ^ v541 & 0xFFFFF7FF ^ (v241 >> 4);
  unsigned int v626 = v241;
  int v563 = v242 ^ (v241 >> 5) ^ (v538 - 480328855 + v537);
  int v243 = *(_DWORD *)&v171[4 * (v566 ^ 0x3A)];
  int v244 = ((unsigned __int16)(v566 ^ 0x98B1) >> 8);
  HIDWORD(v245) = *(_DWORD *)(v533 + 4 * (v244 ^ 0x7Eu)) ^ (v244 - (((v566 ^ 0x32C298B1) >> 7) & 0x10C) + 1766234758);
  LODWORD(v245) = *(_DWORD *)(v533 + 4 * (v244 ^ 0x7Eu));
  int v246 = ((v566 ^ 0x32C298B1) >> 16);
  unsigned int v247 = *(_DWORD *)&v163[4 * (HIBYTE(v566) ^ 0x46)];
  unsigned int v567 = v246 ^ *(_DWORD *)&v210[4 * (v246 ^ 0xDA)] ^ ((v246 ^ 0x5C)
                                                     - 1673324706
                                                     + ((2
                                                       * (((v246 ^ 0x5C) + 132) & 0xDB ^ (((v566 ^ 0x32C298B1) >> 16) | 0xFFFFFFFD))) ^ 0x38904005)) ^ v247 ^ (((2 * v243 + 669519504) & 0x73F8CA6A) + ((v243 - 738982072) ^ 0x39FC6535)) ^ __ROR4__(v245 >> 31, 1) ^ 0xF4410853 ^ (((v247 >> 5) ^ (v247 >> 4) ^ 0xC21034C) - ((2 * ((v247 >> 5) ^ (v247 >> 4) ^ 0xC21034C)) & 0xF425EE4) + 2007052146);
  unsigned int v248 = (((unsigned __int16)(v569 ^ 0x6491) >> 8) - (((v569 ^ 0x30E56491) >> 7) & 0x10C) + 1766234758) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v569 ^ 0x6491) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v569 ^ 0x1A)] + 233860221) ^ 0x6FD8A8C5;
  unsigned int v249 = ((((v569 ^ 0x30E56491) >> 16) ^ 0x5C)
        - 1673324706
        + ((2 * (((v569 ^ 0x30E56491) >> 16) ^ 0x5C) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ ((v569 ^ 0x30E56491) >> 16) ^ 0x5C ^ *(_DWORD *)&v210[4 * (((v569 ^ 0x30E56491) >> 16) ^ 0xDA)];
  unsigned int v250 = *(_DWORD *)&v163[4 * (HIBYTE(v569) ^ 0x44)];
  int v251 = (v250 >> 5) ^ (v250 >> 4) ^ 0xC21034C ^ (v249 + v248 - 2 * (v249 & v248));
  int v636 = (v251 - ((2 * v251) & 0x72D86A16) + 963392779) ^ v250;
  int v252 = ((v543 ^ 0x433D82C7) >> 16);
  unsigned int v253 = *(_DWORD *)&v163[4 * (HIBYTE(v543) ^ 0x37)];
  unsigned int v570 = v252 ^ (((unsigned __int16)(v543 ^ 0x82C7) >> 8)
               - (((v543 ^ 0x433D82C7) >> 7) & 0x10C)
               + 1766234758) ^ ((v252 ^ 0x5C) - 1673324707 - ((2 * (v252 ^ 0x5C) + 1056302344) & 0x389041B2)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v543 ^ 0x82C7) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v543 ^ 0x4C)] + 233860221) ^ *(_DWORD *)&v210[4 * (v252 ^ 0xDA)] ^ v253 ^ 0x2C9644CD ^ (((v253 >> 5) ^ (v253 >> 4) ^ 0xC21034C) - 2 * (((v253 >> 5) ^ (v253 >> 4) ^ 0xC21034C) & 0xF7663EF ^ ((v253 >> 5) ^ (v253 >> 4)) & 3) - 1351195668);
  LODWORD(v503) = BYTE1(v609) ^ 0xE1;
  int v513 = (BYTE1(v609) ^ 0xF8) - ((2 * (BYTE1(v609) ^ 0xF8)) & 0x10C);
  unsigned int v524 = (*(_DWORD *)(v73 - 148) ^ 0x39)
       - 1673324706
       + ((2 * (*(_DWORD *)(v73 - 148) ^ 0x39) + 264) & 0x1B2 ^ 0xC76FBFFF);
  unsigned int v572 = *(_DWORD *)&v163[4 * (v571 ^ 0x44)];
  int v254 = *(_DWORD *)&v171[4 * (v574 ^ 0x95)];
  int v255 = ((v574 ^ 0x407E7A1E) >> 16);
  unsigned int v556 = v574 ^ 0x407E7A1E;
  unsigned int v256 = *(_DWORD *)&v163[4 * (HIBYTE(v574) ^ 0x34)];
  unsigned int v575 = v255 ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v574 ^ 0x7A1E) >> 8) ^ 0x7Eu)) ^ ((v255 ^ 0x5C) - 1673324706 + ((2 * (((v255 ^ 0x5C) + 132) & 0xDB ^ (((v574 ^ 0x407E7A1E) >> 16) | 0xFFFFFFFD))) ^ 0x38904005)) ^ *(_DWORD *)&v210[4 * (v255 ^ 0xDA)] ^ v256 ^ (v254 - ((2 * v254 + 467720442) & 0xD28D350C) + 2000094979) ^ 0xAF006FE6 ^ (((v256 >> 5) ^ (v256 >> 4) ^ 0xC21034C) - ((2 * ((v256 >> 5) ^ (v256 >> 4) ^ 0xC21034C)) & 0x19C0918E) + 752896199);
  unsigned int v257 = ((v580 ^ 0x188DBAA2) >> 16) - (((v580 ^ 0x188DBAA2) >> 15) & 0xB8) + 92;
  unsigned int v258 = v257 - ((2 * v257) & 0x10813F40);
  unsigned int v259 = *(_DWORD *)&v210[4 * ((v258 + 138452896) ^ 0x8409F26)] ^ (((v258 + 138452896) ^ 0x8409FA0)
                                                                 - 1673324707
                                                                 - 2
                                                                 * ((((v258 + 138452896) ^ 0x8409FA0) + 528151172) & 0x7CC824DB ^ ((v580 ^ 0x188DBAA2) >> 16) & 2));
  unsigned int v260 = *(_DWORD *)&v163[4 * (HIBYTE(v580) ^ 0x6C)];
  unsigned int v581 = (((unsigned __int16)(v580 ^ 0xBAA2) >> 8) - (((v580 ^ 0x188DBAA2) >> 7) & 0x10C) + 1766234758) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v580 ^ 0xBAA2) >> 8) ^ 0x7Eu)) ^ (v258 + 138452896) ^ (*(_DWORD *)&v171[4 * (v580 ^ 0x29)] + 233860221) ^ v260 ^ (((v260 >> 5) ^ (v260 >> 4) ^ 0xC21034C) - ((2 * ((v260 >> 5) ^ (v260 >> 4) ^ 0xC21034C)) & 0xE8F4F22) + 122136465) ^ 0x84A780EC ^ (v259 - ((2 * v259) & 0x10813F40) + 138452896);
  unsigned int v261 = *(_DWORD *)&v163[4 * (HIBYTE(v576) ^ 0x7C)];
  unsigned int v577 = BYTE2(v576) ^ ((BYTE1(v576) ^ 0x9E) - ((2 * ((v576 >> 8) ^ 0x8989E)) & 0x10C) + 1766234758) ^ ((BYTE2(v576) ^ 0xC4) - 1673324706 + ((2 * (((BYTE2(v576) ^ 0xC4) + 132) & 0xDB ^ (HIWORD(v576) | 0xFFFFFFFD))) ^ 0x38904005)) ^ *(_DWORD *)(v533 + 4 * (BYTE1(v576) ^ 0xE0u)) ^ (*(_DWORD *)&v171[4 * (v576 ^ 0x80)] + 233860221) ^ *(_DWORD *)&v210[4 * (BYTE2(v576) ^ 0x42)] ^ v261 ^ 0x5473CAAB ^ (((v261 >> 5) ^ (v261 >> 4) ^ 0xC21034C) - ((2 * ((v261 >> 5) ^ (v261 >> 4) ^ 0xC21034C)) & 0xF27DA24) - 678171374);
  int v262 = *(_DWORD *)(v533 + 4 * (v583 ^ 0x6Au));
  HIDWORD(v245) = v262 ^ 0x9A86;
  LODWORD(v245) = v262 ^ 0x69460000;
  int v263 = ((v623 ^ 0x876B45EF) << 8) & 0xFF0000 ^ 0x3CA45450 ^ (v245 >> 16);
  if (v166) {
    unsigned __int8 v264 = v205;
  }
  else {
    unsigned __int8 v264 = v134 ^ 0x3B;
  }
  unsigned int v265 = ((v587 ^ 0xD6) - 1673324706 + ((2 * (v587 ^ 0xD6) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ v587 ^ 0xD6 ^ (*(_DWORD *)&v171[4 * (v623 ^ 0xAB)] + 233860221) ^ *(_DWORD *)&v210[4 * (v587 ^ 0x50)];
  unsigned int v624 = *(_DWORD *)&v163[4 * (v585 ^ 0x68)];
  int v586 = v265 ^ (v624 >> 4) ^ (v624 >> 5) ^ __ROR4__(v263, 16);
  unsigned int v266 = *(_DWORD *)(v73 - 168);
  unsigned int v584 = ((BYTE1(v266) ^ 0x37) - ((2 * ((v266 >> 8) ^ 0x266437)) & 0x10C) + 1766234758) ^ BYTE2(v266) ^ 0xA5 ^ ((BYTE2(v266) ^ 0xA5) - 1673324706 + ((2 * (((BYTE2(v266) ^ 0xA5) + 132) & 0xDB ^ (HIWORD(v266) | 0xFFFFFFFD))) ^ 0x38904005)) ^ *(_DWORD *)(v533 + 4 * (BYTE1(v266) ^ 0x96u)) ^ *(_DWORD *)&v210[4 * (BYTE2(v266) ^ 0x23)] ^ (*(_DWORD *)&v171[4 * (v264 ^ 0xC1)] + 233860221);
  unsigned int v267 = *(_DWORD *)&v210[4 * (BYTE2(v589) ^ 0x13) + 540 + 4 * ((2 * (HIWORD(v589) ^ 0xF8FB)) & 0x10C ^ 0xFFFFFEFF)] ^ ((BYTE2(v589) ^ 0x13) - 1673324706 + ((2 * (((BYTE2(v589) ^ 0x13) + 132) & 0xDB ^ (HIWORD(v589) ^ 0xF8FB | 0xFFFFFFFD))) ^ 0x38904005));
  unsigned int v268 = *(_DWORD *)&v163[4 * (HIBYTE(v589) ^ 0x4F)];
  unsigned int v590 = ((BYTE1(v589) ^ 0x73) - 2 * (((v589 >> 8) ^ 0xF8FB73) & 0x8E ^ (v589 >> 8) & 8) + 1766234758) ^ BYTE2(v589) ^ 0xFB ^ *(_DWORD *)(v533 + 4 * (BYTE1(v589) ^ 0x7Fu)) ^ v268 ^ ((v589 ^ 0xFFFFFF24) - 738982072 - (v589 ^ 0xC6039A10 ^ -(v589 ^ 0xC6039A10) ^ ((v589 ^ 0xDB) + (v589 ^ 0x12A8FDCA ^ ((v589 ^ 0x35) - ((2 * (v589 ^ 0x35)) & 0x196) + 726964427)) + 1)) + *(_DWORD *)&v171[4 * (v589 ^ 0x9F)] + 1) ^ (((v268 >> 5) ^ (v268 >> 4) ^ 0xC21034C) - 2 * (((v268 >> 5) ^ (v268 >> 4) ^ 0xC21034C) & 0x70DDE7E ^ ((v268 >> 5) ^ (v268 >> 4)) & 0x12) + 655220332) ^ (v267 - ((2 * v267) & 0xF4A3EAA4) + 2052191570);
  int v269 = ((v591 ^ 0x510AA99D) >> 16);
  unsigned int v270 = *(_DWORD *)&v163[4 * (HIBYTE(v591) ^ 0x25)];
  unsigned int v579 = v269 ^ (((unsigned __int16)(v591 ^ 0xA99D) >> 8)
               - (((v591 ^ 0x510AA99D) >> 7) & 0x10C)
               + 1766234758) ^ (v269 - 1673324706 + ((2 * ((v591 ^ 0x510AA99D) >> 16) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v591 ^ 0xA99D) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v591 ^ 0x16)] + 233860221) ^ v270 ^ *(_DWORD *)&v210[4 * (v269 ^ 0x86)] ^ 0xCF503257 ^ (((v270 >> 5) ^ (v270 >> 4) ^ 0xC21034C) - ((2 * ((v270 >> 5) ^ (v270 >> 4) ^ 0xC21034C)) & 0x19602A54) + 1286608170);
  unsigned int v271 = ((v597 ^ 0x13) - 2 * ((v597 ^ 0x13) & 0xA6 ^ (v594 >> 8) & 0x20) + 1766234758) ^ v607 ^ 8 ^ ((v607 ^ 8) - 1673324706 + ((2 * (v607 ^ 8) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ *(_DWORD *)(v533 + 4 * (v597 ^ 0xD4u)) ^ (*(_DWORD *)&v171[4 * (v603 ^ 0x71)] + 233860221) ^ *(_DWORD *)&v210[4 * (v607 ^ 0x8E)];
  unsigned int v608 = *(_DWORD *)&v163[4 * (v600 ^ 0xD6)];
  unsigned int v604 = (v271 ^ (v608 >> 4) ^ (v608 >> 5) ^ 0x63F9AB30)
       - 323499603
       + ((2 * ((v271 ^ (v608 >> 4) ^ (v608 >> 5) ^ 0x63F9AB30) & 0x6CB7C9BE ^ (v271 ^ (v608 >> 4) ^ (v608 >> 5)) & 0x12)) ^ 0xFFFFFFDF);
  int v272 = ((unsigned __int16)(v633 ^ 0x5E58) >> 8);
  int v273 = v272 ^ 0x6FD8A8C5;
  int v274 = *(_DWORD *)(v533 + 4 * (v272 ^ 0x7Eu));
  int v275 = ((v633 ^ 0x6F8E5E58) >> 16);
  unsigned int v276 = *(_DWORD *)&v163[4 * (HIBYTE(v633) ^ 0x1B)];
  unsigned int v277 = v273 & 0x68588097 ^ v275 ^ 0x5C ^ ((v275 ^ 0x5C) - 1673324706 + ((2 * (v275 ^ 0x5C) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ (*(_DWORD *)&v171[4 * (v633 ^ 0xD3)] + 233860221) ^ *(_DWORD *)&v210[4 * (v275 ^ 0xDA)] ^ v276 ^ (v274 & 0x17A77A68 ^ v273 & 0x7802868 | v274 & 0xE8588597);
  int v278 = *(_DWORD *)&v171[4 * (v605 ^ 0x8A)];
  int v634 = v277 ^ (((v276 >> 5) ^ (v276 >> 4) ^ 0xC21034C)
               - 2 * (((v276 >> 5) ^ (v276 >> 4) ^ 0xC21034C) & 0x438FAF7 ^ ((v276 >> 5) ^ (v276 >> 4)) & 2)
               + 1144584949);
  int v598 = v487 + 2000094979;
  unsigned int v544 = v278 - ((2 * v278 + 467720442) & 0xD28D350C) + 2000094979;
  int v484 = ((v605 ^ 0x845369DB) >> 16);
  int v542 = v484 ^ 0xD9;
  HIDWORD(v536) = (v484 ^ 0xD9)
                - 1673324706
                + ((2 * (((v484 ^ 0xD9) + 132) & 0xDB ^ (((v605 ^ 0x845369DB) >> 16) | 0xFFFFFFFD))) ^ 0x38904005);
  unsigned int v539 = *(_DWORD *)&v163[4 * (HIBYTE(v605) ^ 0x1B)];
  HIDWORD(v483) = BYTE2(v616);
  unsigned int v595 = (BYTE2(v616) ^ 0x15) - 1673324706 + ((2 * (BYTE2(v616) ^ 0x15) + 264) & 0x1B2 ^ 0xC76FBFFF);
  unsigned int v592 = *(_DWORD *)&v163[4 * (HIBYTE(v616) ^ 0xAC)];
  int v481 = (v612 ^ 0xB4) - ((2 * (v612 ^ 0xB4)) & 0x10C);
  HIDWORD(v491) = (v619 ^ 0x19) - 1673324706 + ((2 * (v619 ^ 0x19) + 264) & 0x1B2 ^ 0xC76FBFFF);
  unsigned int v615 = *(_DWORD *)&v163[4 * (v614 ^ 0x5E)];
  LODWORD(v488) = ((v615 >> 5) ^ (v615 >> 4) ^ 0xC21034C)
                - 2 * (((v615 >> 5) ^ (v615 >> 4) ^ 0xC21034C) & 0xDF9B53D ^ ((v615 >> 5) ^ (v615 >> 4)) & 1)
                + 1576645948;
  int v279 = ((v631 ^ 0x81F9B81B) >> 16);
  unsigned int v280 = *(_DWORD *)&v163[4 * (HIBYTE(v641) ^ 0xF5)];
  unsigned int v534 = (((unsigned __int16)(v631 ^ 0xB81B) >> 8) - (((v631 ^ 0x81F9B81B) >> 7) & 0x10C) + 1766234758) ^ v279 ^ 0x5C ^ ((v279 ^ 0x5C) - 1673324706 + ((2 * (v279 ^ 0x5C) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ *(_DWORD *)(v533 + 4 * (((unsigned __int16)(v631 ^ 0xB81B) >> 8) ^ 0x7Eu)) ^ (*(_DWORD *)&v171[4 * (v631 ^ 0x90)] + 233860221) ^ v280 ^ *(_DWORD *)&v210[4 * (v279 ^ 0xDA)] ^ (((v280 >> 5) ^ (v280 >> 4) ^ 0xC21034C) - ((2 * ((v280 >> 5) ^ (v280 >> 4) ^ 0xC21034C)) & 0xEB1736A) - 1755792971);
  unsigned int v281 = LODWORD(STACK[0x204]) ^ 0xB02C1801;
  unsigned int v282 = STACK[0x204];
  int v283 = (BYTE2(v281) - ((v281 >> 15) & 0xC4) + 98);
  HIDWORD(v485) = v283;
  int v284 = (v283 ^ 0x1F7AF2E6) + ((2 * (HIWORD(v281) - ((v281 >> 15) & 0x14C4) + 807012962)) & 0x108);
  HIDWORD(v486) = v284 + 2093491418 + ((2 * (v284 & 0x4DD ^ (v283 ^ 0x1F7AF2E6 | 0x7FFFFFFB))) ^ 0x38904009);
  unsigned int v601 = *(_DWORD *)&v163[4 * (HIBYTE(LODWORD(STACK[0x204])) ^ 0x52)];
  LODWORD(v486) = ((v601 >> 5) ^ (v601 >> 4) ^ 0xC21034C)
                - ((2 * ((v601 >> 5) ^ (v601 >> 4) ^ 0xC21034C)) & 0x10F76A14)
                + 2021373194;
  unsigned int v285 = LODWORD(STACK[0x20C]) ^ 0x57E3B19E;
  int v286 = *(_DWORD *)&v171[4 * (v193 ^ 0x2C)];
  int v287 = *(_DWORD *)&v171[4 * (*(_DWORD *)(v73 - 156) ^ 0xFA)];
  int v288 = *(_DWORD *)&v171[4 * (v609 ^ 0x9A)];
  int v289 = (v616 >> 8) ^ 0xD84965;
  int v290 = *(_DWORD *)&v171[4 * (v616 ^ 0x71)];
  int v291 = *(_DWORD *)&v171[4 * (v629 ^ 0xE2)];
  int v292 = *(_DWORD *)&v171[4 * (LODWORD(STACK[0x204]) ^ 0x16)];
  int v293 = *(_DWORD *)&v171[4 * (LODWORD(STACK[0x20C]) ^ 0x15)];
  int v294 = *(_DWORD *)&v171[4 * (v621 ^ 0x59)];
  unsigned int v295 = *(_DWORD *)&v163[4 * (HIBYTE(LODWORD(STACK[0x20C])) ^ 0x23)];
  int v296 = ((v295 >> 5) ^ (v295 >> 4) ^ 0xC21034C)
       - 2 * (((v295 >> 5) ^ (v295 >> 4) ^ 0xC21034C) & 0x75E3BD3 ^ ((v295 >> 5) ^ (v295 >> 4)) & 0x12)
       + 123616193;
  unsigned int v297 = (BYTE1(v285) - ((v285 >> 7) & 0x10C) + 1766234758) ^ BYTE2(v285) ^ 0x3A ^ *(_DWORD *)(v533
                                                                                             + 4
                                                                                             * (BYTE1(v285) ^ 0x7Eu)) ^ ((BYTE2(v285) ^ 0x3A) - 1673324706 + ((2 * (((BYTE2(v285) ^ 0x3A) + 132) & 0xDB ^ (BYTE2(v285) ^ 0x3A | 0xFFFFFFFD))) ^ 0x38904005)) ^ (v293 + 233860221) ^ *(_DWORD *)&v210[4 * (BYTE2(v285) ^ 0xBC)] ^ v295;
  int v517 = *(_DWORD *)(v533 + 4 * (BYTE1(v193) ^ 0x16u));
  LODWORD(v497) = *(_DWORD *)(v533
                            + 4
                            * ((*(_DWORD *)(v73 - 208) ^ 0x53 ^ -(*(_DWORD *)(v73 - 208) ^ 0x53) ^ ((*(_DWORD *)(v73 - 208) ^ 0xFFFFFF2A)
                                                                                                  + 135))
                             + 134));
  *(_DWORD *)(v73 - 156) = *(_DWORD *)(v533 + 4 * (v490 ^ 0x7Eu));
  int v617 = *(_DWORD *)(v533 + 4 * v503);
  LODWORD(STACK[0x20C]) = BYTE1(v605);
  int v642 = *(_DWORD *)(v533 + 4 * (BYTE1(v605) ^ 0x19u));
  LODWORD(v483) = *(_DWORD *)(v533 + 4 * (v289 ^ 0x7Eu));
  LODWORD(v482) = *(_DWORD *)(v533 + 4 * (v612 ^ 0x8Au));
  int v298 = LODWORD(STACK[0x208]) ^ 0xCF;
  int v299 = BYTE1(v281);
  int v610 = *(_DWORD *)(v533 + 4 * (v299 ^ 0xE7u));
  int v300 = *(_DWORD *)(v533 + 4 * (LODWORD(STACK[0x208]) ^ 0xDFu));
  LODWORD(v503) = v297 ^ v296;
  LODWORD(STACK[0x204]) = v286 + 233860221;
  LODWORD(v495) = v287 + 233860221;
  int v613 = v288 + 233860221;
  LODWORD(v480) = v290 + 233860221;
  LODWORD(v479) = v291 + 233860221;
  LODWORD(v491) = v490 - 2 * v489 + 1766234758;
  HIDWORD(v482) = v513 + 1766234758;
  int v622 = v289 - ((2 * v289) & 0x10C) + 1766234758;
  int v301 = v481 + 1766234758;
  LODWORD(v492) = v299 - ((v282 >> 7) & 0x10C) + 1766234758;
  int v302 = v298 - ((2 * v298) & 0x10C) + 1766234758;
  int v514 = *(_DWORD *)&v210[4 * (BYTE2(v193) ^ 0xB6)];
  HIDWORD(v479) = *(_DWORD *)&v210[4 * v519];
  HIDWORD(v488) = *(_DWORD *)&v210[4 * (v493 ^ 0xA3)];
  int v303 = *(_DWORD *)(v73 - 148);
  HIDWORD(v480) = *(_DWORD *)&v210[4 * (v303 ^ 0xBF)];
  LODWORD(STACK[0x208]) = *(_DWORD *)&v210[4 * (v484 ^ 0x5F)];
  int v304 = *(_DWORD *)&v210[4 * (HIDWORD(v483) ^ 0x93)];
  int v305 = *(_DWORD *)&v210[4 * (v619 ^ 0x9F)];
  LODWORD(v485) = *(_DWORD *)&v210[4 * (v283 ^ 0xE4)];
  int v306 = *(_DWORD *)&v210[4 * (LODWORD(STACK[0x21C]) ^ 0x99)];
  unsigned int v632 = *(_DWORD *)&v163[4 * (HIDWORD(v492) ^ 0x9F)];
  unsigned int v630 = *(_DWORD *)&v163[4 * (HIBYTE(*(_DWORD *)(v73 - 168)) ^ 0xBB)];
  unsigned int v307 = *(_DWORD *)&v163[4 * (STACK[0x210] ^ 0xCE)];
  LODWORD(STACK[0x21C]) ^= v302 ^ ((LODWORD(STACK[0x21C]) ^ 0x1F)
                                 - 1673324706
                                 + ((2 * (LODWORD(STACK[0x21C]) ^ 0x1F) + 264) & 0x1B2 ^ 0xC76FBFFF)) ^ v300 ^ (v294 + 233860221) ^ v306 ^ v307 ^ 0x47B2847A ^ (((v307 >> 5) ^ (v307 >> 4) ^ 0xC21034C) - ((2 * ((v307 >> 5) ^ (v307 >> 4) ^ 0xC21034C)) & 0x17141766) - 1417016397);
  int v308 = *(_DWORD *)(v73 - 184);
  uint64_t v309 = (char *)*(&off_26DE9F480 + v308 - 957) - 8;
  int v310 = (char *)*(&off_26DE9F480 + v308 - 1170) - 8;
  int v311 = (((v640 >> 4) & 0xAE5F088) - ((v640 >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4
                                                                                               * (*(_DWORD *)(v73 - 216) ^ 0x89)];
  int v312 = (char *)*(&off_26DE9F480 + v308 - 1259) - 4;
  int v313 = v311 - ((2 * v311) & 0x777C9916);
  *(_DWORD *)(v73 - 168) = v312[*(void *)(v73 - 232) ^ 0xD2] ^ *(_DWORD *)&v310[4 * (*(_DWORD *)(v73 - 224) ^ 0xE7)];
  int v314 = (((v639 >> 4) & 0xAE5F088) - ((v639 >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4
                                                                                               * (*(_DWORD *)(v73 - 240) ^ 0x47)];
  int v315 = v314 - ((2 * v314) & 0x777C9916);
  *(_DWORD *)(v73 - 216) = v312[STACK[0x220] ^ 0xA3] ^ *(_DWORD *)&v310[4 * (*(_DWORD *)(v73 - 248) ^ 0x2E)];
  int v316 = (((v638 >> 4) & 0xAE5F088) - ((v638 >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4
                                                                                               * (BYTE2(*(_DWORD *)(v73 - 144)) ^ 0xC4)];
  int v317 = v316 - ((2 * v316) & 0x777C9916);
  *(_DWORD *)(v73 - 232) = v312[LODWORD(STACK[0x228]) ^ 0xE4] ^ *(_DWORD *)&v310[4 * (BYTE1(LODWORD(STACK[0x228])) ^ 0x40)];
  int v318 = (((v637 >> 4) & 0xAE5F088) - ((v637 >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[*(void *)(v73 - 256)];
  int v319 = v318 - ((2 * v318) & 0x777C9916);
  *(_DWORD *)(v73 - 240) = v312[STACK[0x238] ^ 0x39] ^ *(_DWORD *)&v310[4 * (LODWORD(STACK[0x230]) ^ 0xB6)];
  int v320 = (((*(_DWORD *)(v73 - 200) >> 4) & 0xAE5F088) - ((*(_DWORD *)(v73 - 200) >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4 * (BYTE2(v510) ^ 0xF6)];
  int v321 = v320 - ((2 * v320) & 0x777C9916);
  int v322 = (((v499 >> 4) & 0xAE5F088) - ((v499 >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4
                                                                                               * (BYTE2(v504) ^ 0xA9)];
  int v323 = v322 - ((2 * v322) & 0x777C9916);
  int v324 = *(_DWORD *)&v310[4 * (BYTE1(v504) ^ 0x29)] ^ v312[v504 ^ 0xA9] ^ v499;
  int v325 = (((*(_DWORD *)(v73 - 192) >> 4) & 0xAE5F088) - ((*(_DWORD *)(v73 - 192) >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4 * ~HIWORD(v507)];
  LODWORD(v309) = (((*(_DWORD *)(v73 - 176) >> 4) & 0xAE5F088) - ((*(_DWORD *)(v73 - 176) >> 3) & 0x102A110) + 1635997404) ^ *(_DWORD *)&v309[4 * (BYTE6(v503) ^ 0x33)];
  LODWORD(STACK[0x238]) = *(_DWORD *)&v310[4 * (BYTE1(v510) ^ 0xAD)];
  *(_DWORD *)(v73 - 248) = *(_DWORD *)&v310[4 * (BYTE1(v507) ^ 0x22)];
  *(_DWORD *)(v73 - 256) = *(_DWORD *)&v310[4 * (BYTE5(v503) ^ 0xD0)];
  HIDWORD(v497) = v313 + 1002327179;
  LODWORD(v498) = v315 + 1002327179;
  HIDWORD(v498) = v317 + 1002327179;
  int v505 = v319 + 1002327179;
  LODWORD(STACK[0x220]) = v321 + 1002327179;
  LODWORD(STACK[0x230]) = v325 - ((2 * v325) & 0x777C9916) + 1002327179;
  LODWORD(STACK[0x228]) = v309 - ((2 * v309) & 0x777C9916) + 1002327179;
  int v511 = v312[v510 ^ 0x17];
  LODWORD(STACK[0x210]) = v312[v507 ^ 0xD7];
  int v520 = v312[BYTE4(v503) ^ 0xF1];
  int v326 = v619 ^ v301 ^ HIDWORD(v491) ^ v482 ^ v479 ^ v305 ^ v615 ^ 0x3A56E188 ^ v488;
  *(_DWORD *)(v73 - 224) = v326;
  LODWORD(v614) = *(_DWORD *)(v73 - 208) ^ v500 ^ v496 ^ HIDWORD(v479) ^ HIDWORD(a25) ^ v497 ^ v598 ^ 0x7B4A8D50 ^ HIDWORD(v495);
  int v620 = v608 ^ 0x59407F71 ^ v604;
  HIDWORD(v611) = v303 ^ HIDWORD(v482) ^ v524 ^ v617 ^ v613 ^ HIDWORD(v480) ^ v572 ^ 0xDFF24E7E ^ (((v572 >> 5) ^ (v572 >> 4) ^ 0xC21034C)
                                                                                                 - ((2 * ((v572 >> 5) ^ (v572 >> 4) ^ 0xC21034C)) & 0xDF3CFBE)
                                                                                                 - 688265249);
  int v618 = HIDWORD(v483) ^ v622 ^ v595 ^ v480 ^ v483 ^ v304 ^ v592 ^ 0x95977CED ^ (((v592 >> 5) ^ (v592 >> 4) ^ 0xC21034C)
                                                                               - ((2
                                                                                 * ((v592 >> 5) ^ (v592 >> 4) ^ 0xC21034C)) & 0x6ADD722)
                                                                               + 1935076241);
  LODWORD(v312) = v326 + (HIDWORD(v496) ^ 0xAACDC384);
  int v327 = (v636 ^ 0x443843A7) - v614 + HIDWORD(v611) + v620 + v618 - v312;
  int v328 = v327 - 339803636;
  *(_DWORD *)(v73 - 208) = v327 - 25415557;
  LODWORD(v309) = v324 ^ 0x35226B7B ^ (v323 + 1002327179);
  unsigned int v329 = v492 ^ v283 ^ v610 ^ v485 ^ HIDWORD(v486) ^ (v292 + 233860221) ^ v601 ^ v486 ^ 0x93614546;
  LODWORD(v611) = v493 ^ v491 ^ HIDWORD(v493) ^ *(_DWORD *)(v73 - 156) ^ v495 ^ HIDWORD(v488) ^ *(_DWORD *)(v73 - 152) ^ 0xEB84D0D ^ v547;
  unint64_t v606 = __PAIR64__(v309, v329);
  int v330 = (v634 ^ 0x22D3CFBF) - v611 + v329 + v327 - 339803636 - 2136775831 + v309;
  HIDWORD(a60) = v330 - ((2 * v330 + 26163436) & 0xB4A9CF68) + 1528595498;
  int v331 = ((v590 ^ 0x14CFBC57 ^ HIDWORD(a60)) + (HIDWORD(a60) ^ 0x5A54E7B4) + 1) ^ ((v590 ^ 0x4E9B5BE3) + 1);
  unsigned int v332 = (v590 ^ 0x74601779 ^ (v331 - ((2 * v331) & 0x8A0966CA) - 989547675)) + (HIDWORD(a60) ^ 0x5A54E7B4);
  uint64_t v333 = *(unsigned __int8 *)(v73 - 128);
  uint64_t v334 = v333 ^ 0xE4;
  int v335 = v333 - ((2 * v333) & 0x6E);
  unint64_t v336 = (char *)*(&off_26DE9F480 + v308 - 1271) - 12;
  uint64_t v337 = *(unsigned __int8 *)(v73 - 117) ^ 0x51;
  unsigned int v338 = (*(unsigned __int8 *)(v73 - 115) ^ 0x84E05294)
       - 864230061
       + *(_DWORD *)&v336[4 * (*(unsigned __int8 *)(v73 - 115) ^ 0x5ALL)];
  uint64_t v339 = (char *)*(&off_26DE9F480 + (v308 ^ 0x422)) - 12;
  int v340 = *(_DWORD *)&v339[4 * (*(unsigned __int8 *)(v73 - 118) ^ 0xA5)];
  uint64_t v341 = (uint64_t)*(&off_26DE9F480 + v308 - 946);
  HIDWORD(v342) = (*(unsigned __int8 *)(v73 - 123) ^ 0x84E052FE)
                - 864230061
                + *(_DWORD *)&v336[4 * (*(unsigned __int8 *)(v73 - 123) ^ 0x30)];
  LODWORD(v342) = HIDWORD(v342);
  int v343 = *(_DWORD *)&v339[4 * (*(unsigned __int8 *)(v73 - 114) ^ 0x4FLL)];
  unsigned int v344 = (char *)*(&off_26DE9F480 + (v308 ^ 0x442)) - 8;
  int v345 = *(_DWORD *)&v339[4 * (*(unsigned __int8 *)(v73 - 126) ^ 0xF5)];
  v599 = v339;
  v602 = v336;
  unsigned int v346 = *(_DWORD *)&v336[4 * (*(unsigned __int8 *)(v73 - 119) ^ 0x27)]
       + (*(unsigned __int8 *)(v73 - 119) ^ 0x84E052E9)
       - 864230061;
  int v347 = *(_DWORD *)&v339[4 * (*(unsigned __int8 *)(v73 - 122) ^ 0xBBLL)];
  LODWORD(v333) = v344[*(unsigned __int8 *)(v73 - 121) ^ 0x17] ^ __ROR4__((v342 >> 13) ^ __ROR4__(*(_DWORD *)(v341 + 4 * (*(unsigned __int8 *)(v73 - 124) ^ 0xFLL)) ^ (*(unsigned __int8 *)(v73 - 124) - ((2 * *(unsigned __int8 *)(v73 - 124)) & 0x6E) + 944083255) ^ 0xB25DD65, 13) ^ 0x49D9312F, 19) ^ (16 * v347) ^ (v347 << 7) ^ 0xCBF8D42C;
  int v348 = STACK[0x21C];
  *(_DWORD *)(v73 - 144) = *(_DWORD *)(v341 + 4 * v334) ^ (v335 + 944083255) ^ v345 ^ ((*(unsigned __int8 *)(v73 - 127) ^ 0x84E052F9)
                                                                                     - 864230061
                                                                                     + *(_DWORD *)&v336[4 * (*(unsigned __int8 *)(v73 - 127) ^ 0x37)]) ^ v344[*(unsigned __int8 *)(v73 - 125) ^ 0xE2] ^ 0x48A5FE2C ^ (((16 * v345) ^ (v345 << 7) ^ 0xCBF8D440) - 2 * (((16 * v345) ^ (v345 << 7) ^ 0xCBF8D440) & 0x215C36D0 ^ (16 * v345) & 0x10) - 1587792178);
  *(_DWORD *)(v73 - 148) = v347 ^ 0x756602E ^ (v333 - ((2 * v333) & 0xE4B7562E) + 1918610199);
  *(_DWORD *)(v73 - 152) = v344[~*(unsigned char *)(v73 - 113)] ^ v343 ^ v338 ^ *(_DWORD *)(v341 + 4 * (*(unsigned __int8 *)(v73 - 116) ^ 0x4DLL)) ^ (*(unsigned __int8 *)(v73 - 116) - ((2 * *(unsigned __int8 *)(v73 - 116)) & 0x6E) + 944083255) ^ 0xF90970E6 ^ (((16 * v343) ^ (v343 << 7) ^ 0xCBF8D440) - 2 * (((16 * v343) ^ (v343 << 7) ^ 0xCBF8D440) & 0x2F9F67D0 ^ (16 * v343) & 0x10) + 798975941);
  v593 = v344;
  uint64_t v596 = v341;
  *(_DWORD *)(v73 - 156) = v344[v337] ^ *(_DWORD *)(v341
                                                                   + 4 * (*(unsigned __int8 *)(v73 - 120) ^ 0x60)) ^ (*(unsigned __int8 *)(v73 - 120) - ((2 * *(unsigned __int8 *)(v73 - 120)) & 0x6E) + 944083255) ^ v340 ^ v346 ^ 0x1F6189DC ^ (((v340 << 7) ^ (16 * v340) ^ 0xCBF8D440) - ((2 * ((v340 << 7) ^ (16 * v340) ^ 0xCBF8D440)) & 0xD045D360) + 1747118515);
  *(_DWORD *)(v73 - 184) = (HIDWORD(v526) ^ 0x4F6768A4)
                         - 2 * ((HIDWORD(v526) ^ 0x4F6768A4) & 0x5941FC5D ^ BYTE4(v526) & 1);
  HIDWORD(v588) = (v508 ^ (v632 >> 4) ^ (v632 >> 5) ^ 0x63F9AB89)
                + 1497496669
                + ((2
                  * ((v508 ^ (v632 >> 4) ^ (v632 >> 5) ^ 0x63F9AB89) & 0x5941FC5D ^ (v508 ^ (v632 >> 4) ^ (v632 >> 5)) & 1)) ^ 0xFFFFFFFD);
  unsigned int v349 = v552 - ((2 * v552) & 0xB283F8B8);
  unsigned int v350 = v554 - ((2 * v554) & 0xB283F8B8);
  unsigned int v351 = (v549 ^ 0xD6B7D6FC) - 2 * ((v549 ^ 0xD6B7D6FC) & 0x5941FC5E ^ v549 & 2);
  unsigned int v352 = v561 - ((2 * v561) & 0xB283F8B8);
  unsigned int v353 = v558 - ((2 * v558) & 0xB283F8B8);
  int v354 = (v565 ^ 0x4EEF468A) - 2 * ((v565 ^ 0x4EEF468A) & 0x5941FC5D ^ v565 & 1);
  int v355 = (v563 ^ 0xC21034C) - 2 * ((v563 ^ 0xC21034C) & 0x5941FC5F ^ v563 & 3);
  LODWORD(v339) = v567 - ((2 * v567) & 0xB283F8B8);
  unsigned int v356 = v570 - ((2 * v570) & 0xB283F8B8);
  unsigned int v357 = v575 - ((2 * v575) & 0xB283F8B8);
  LODWORD(v588) = v581 + 1497496669 + (~(2 * v581) | 0x4D7C0747);
  LODWORD(v341) = v577 - ((2 * v577) & 0xB283F8B8);
  int v358 = (v586 ^ 0xC21034C) - 2 * ((v586 ^ 0xC21034C) & 0x5941FC5F ^ v586 & 3);
  int v359 = (v584 ^ (v630 >> 4) ^ (v630 >> 5) ^ 0xC21034C)
       - 2 * ((v584 ^ (v630 >> 4) ^ (v630 >> 5) ^ 0xC21034C) & 0x5941FC7C ^ (v584 ^ (v630 >> 4) ^ (v630 >> 5)) & 0x20);
  LODWORD(v344) = v579 - ((2 * v579) & 0xB283F8B8);
  LODWORD(v337) = *(_DWORD *)(v73 - 208);
  LODWORD(v585) = 714708061 - v312 - ((-1565577214 - 2 * v312) & 0xB283F8B8);
  int v360 = (v534 ^ 0x14B89EC8) - 2 * ((v534 ^ 0x14B89EC8) & 0x5941FC5E ^ v534 & 2);
  HIDWORD(v582) = *(_DWORD *)(v73 - 168) ^ 0x86 ^ HIDWORD(v497);
  LODWORD(v582) = *(_DWORD *)(v73 - 216) ^ 0x86 ^ v498;
  HIDWORD(v578) = *(_DWORD *)(v73 - 232) ^ 0x86 ^ (v317 + 1002327179);
  LODWORD(v578) = *(_DWORD *)(v73 - 240) ^ 0x8A ^ v505;
  HIDWORD(v573) = *(_DWORD *)(v73 - 200) ^ LODWORD(STACK[0x238]) ^ v511 ^ 0x8A ^ LODWORD(STACK[0x220]);
  LODWORD(v573) = *(_DWORD *)(v73 - 176) ^ *(_DWORD *)(v73 - 256) ^ v520 ^ 0x86 ^ LODWORD(STACK[0x228]);
  LODWORD(v571) = *(_DWORD *)(v73 - 192) ^ *(_DWORD *)(v73 - 248) ^ LODWORD(STACK[0x210]) ^ 0x86 ^ LODWORD(STACK[0x230]);
  HIDWORD(v568) = LODWORD(STACK[0x204]) ^ v517 ^ v514 ^ v531 ^ BYTE2(v193) ^ 0x30 ^ (((v531 >> 5) ^ (v531 >> 4) ^ 0xC21034C)
                                                                                   - ((2
                                                                                     * ((v531 >> 5) ^ (v531 >> 4) ^ 0xC21034C)) & 0x1EABF1D2)
                                                                                   - 279578391) ^ ((BYTE1(v193) ^ 0xBE)
                                                                                                 - ((2 * ((v193 >> 8) ^ 0x7769BE)) & 0x10C)
                                                                                                 + 1766234758) ^ ((BYTE2(v193) ^ 0x30) - 1673324707 - ((2 * (BYTE2(v193) ^ 0x30) + 1056302344) & 0x389041B2));
  LODWORD(v568) = HIDWORD(v536) ^ v542 ^ v642 ^ LODWORD(STACK[0x208]) ^ v539 ^ v544 ^ (((v539 >> 5) ^ (v539 >> 4) ^ 0xC21034C)
                                                                                     - ((2
                                                                                       * ((v539 >> 5) ^ (v539 >> 4) ^ 0xC21034C)) & 0x17E0C6EA)
                                                                                     + 200303477) ^ (v328 - ((2 * v337) & 0xB283F8B8) + 1811884747);
  HIDWORD(a48) = v337 ^ LODWORD(STACK[0x20C]);
  LODWORD(v562) = (-782788607 - v312) ^ *(_DWORD *)(v73 - 224);
  HIDWORD(v559) = v529 >> 8;
  LODWORD(v559) = v556 >> 8;
  HIDWORD(v555) = v527 - ((2 * v527) & 0xB283F8B8) + 1497496668;
  LODWORD(v555) = *(_DWORD *)(v73 - 184) + 1497496668;
  HIDWORD(v550) = (v526 ^ 0xC21034C) - 2 * ((v526 ^ 0xC21034C) & 0x5941FC5E ^ v526 & 2) + 1497496668;
  LODWORD(v550) = v522 - ((2 * v522) & 0xB283F8B8) + 1497496668;
  HIDWORD(v545) = v349 + 1497496668;
  LODWORD(v545) = v350 + 1497496668;
  HIDWORD(v540) = v351 + 1497496668;
  LODWORD(v540) = v352 + 1497496668;
  LODWORD(v536) = v354 + 1497496668;
  HIDWORD(a40) = v355 + 1497496668;
  LODWORD(v533) = v339 + 1497496668;
  LODWORD(v532) = v357 + 1497496668;
  HIDWORD(v530) = v341 + 1497496668;
  HIDWORD(v528) = v359 + 1497496668;
  LODWORD(v528) = v332 - ((2 * v332) & 0xB283F8B8) + 1497496668;
  HIDWORD(v526) = v344 + 1497496668;
  HIDWORD(a34) = (v503 ^ 0x84BE1CBC) - 2 * ((v503 ^ 0x84BE1CBC) & 0x5941FC5D ^ v503 & 1) + 1497496668;
  LODWORD(v521) = v348
                - ((2 * v348) & 0x808DE178)
                + 1078390972
                - 2 * ((v348 - ((2 * v348) & 0x808DE178) + 1078390972) & 0x5941FC5F ^ v348 & 3)
                + 1497496668;
  LODWORD(v312) = *(_DWORD *)(v73 - 140);
  LODWORD(v518) = v312 ^ 0xFFFFFD8C;
  HIDWORD(v515) = v312 & 0xFE09CDF4;
  LODWORD(v515) = v312 ^ 0x211;
  HIDWORD(v509) = v312 ^ 0x235;
  LODWORD(v509) = v312 ^ 0x3DF;
  HIDWORD(v506) = v312 ^ 0x2F6;
  LODWORD(v506) = v312 ^ 0x354;
  uint64_t v361 = (v312 ^ 0xFFFFFD8C) & 0x268CDBF6 ^ 0x268CDBF6;
  *(void *)(v73 - 200) = v361;
  uint64_t v362 = *(unsigned __int8 **)(v73 - 136);
  uint64_t v363 = v362[v361];
  *(void *)(v73 - 168) = 12;
  int v364 = v363 + 944083255 - ((2 * v363) & 0x6E);
  uint64_t v365 = v362[12];
  *(void *)(v73 - 192) = 6;
  int v366 = v365 + 944083255 - ((2 * v365) & 0x6E);
  int v367 = *(_DWORD *)&v599[4 * (v362[6] ^ 0x5DLL)];
  *(void *)(v73 - 184) = 1;
  uint64_t v368 = v362[1];
  *(void *)(v73 - 256) = 2;
  int v369 = *(_DWORD *)&v599[4 * (v362[2] ^ 0xDBLL)];
  LODWORD(v368) = (v368 ^ 0x84E052E4) - 864230061 + *(_DWORD *)&v602[4 * (v368 ^ 0x2A)];
  *(void *)(v73 - 224) = 3;
  LODWORD(v334) = v593[v362[3] ^ 0xB0] ^ 0x6C ^ (v369 << 7) ^ (16 * v369) ^ v368;
  *(void *)(v73 - 232) = 5;
  *(void *)(v73 - 176) = 0;
  uint64_t v370 = *v362;
  LODWORD(v339) = *(_DWORD *)&v602[4 * (v362[5] ^ 0x89)] + (v362[5] ^ 0x84E05247) - 864230061;
  *(void *)(v73 - 208) = 13;
  unsigned int v371 = *(_DWORD *)&v602[4 * (v362[13] ^ 1)] + (v362[13] ^ 0x84E052CF) - 864230061;
  *(void *)(v73 - 216) = 15;
  LODWORD(v363) = *(_DWORD *)(v596 + 4 * (v363 ^ 0x40));
  LODWORD(v341) = v593[v362[15] ^ 0x9DLL];
  int v372 = *(_DWORD *)(v596 + 4 * (v365 ^ 0x34));
  LODWORD(v365) = *(_DWORD *)(v596 + 4 * (v370 ^ 0x9F)) ^ v369 ^ (v370 + 944083255 - ((2 * v370) & 0x6E));
  *(void *)(v73 - 248) = 10;
  LODWORD(v365) = v365 ^ ((v334 ^ 0xCBF8D440) - 2 * ((v334 ^ 0xCBF8D440) & 0x7292A7BF ^ v334 & 5) - 225269830);
  STACK[0x238] = 7;
  LODWORD(v368) = *(_DWORD *)&v599[4 * (v362[10] ^ 0xC6)];
  STACK[0x230] = 14;
  int v373 = *(_DWORD *)&v599[4 * (v362[14] ^ 0x57)];
  int v374 = v341 ^ 0xCBF8D440 ^ v366 ^ v372 ^ v371 ^ (16 * v373) ^ (v373 << 7) ^ 0x8E;
  int v375 = v593[v362[7] ^ 0x36];
  LODWORD(v334) = (v374 - ((2 * v374) & 0x6DB4869E) - 1227209905) ^ v373;
  *(void *)(v73 - 240) = 11;
  int v376 = v375 & 0x7F ^ ((v375 | 0x7F) - 107) ^ v364 ^ v367 ^ v363 ^ v339 ^ (((v367 << 7) ^ 0xCBF8D440 ^ (16 * v367))
                                                                                        - ((2
                                                                                          * ((v367 << 7) ^ 0xCBF8D440 ^ (16 * v367))) & 0x296C3D40)
                                                                                        - 1800003932);
  int v377 = v593[v362[11] ^ 0x43];
  STACK[0x220] = 8;
  uint64_t v378 = v362[8];
  int v379 = v377 ^ 0x6C ^ (v368 << 7) ^ 0xCBF8D440 ^ (16 * v368);
  STACK[0x228] = 9;
  int v380 = *(_DWORD *)(v596 + 4 * (v378 ^ 0x65)) ^ v368 ^ (v378 + 944083255 - ((2 * v378) & 0x6E)) ^ (*(_DWORD *)&v602[4 * (v362[9] ^ 0xA0)]
                                                                                                  + (v362[9] ^ 0x84E0526E)
                                                                                                  - 864230061) ^ (v379 - ((2 * v379) & 0x362927FE) - 1693150209);
  LODWORD(STACK[0x210]) = v365;
  LODWORD(STACK[0x20C]) = v334;
  uint64_t v381 = (char *)*(&off_26DE9F480 + (int)(v312 & 0xFE09CDF4)) - 12;
  int v382 = *(_DWORD *)&v381[4 * (((HIDWORD(v573) ^ v365) >> 24) ^ 0x75)];
  unsigned int v383 = ((v382 ^ 0xFD057EC1) + 1539013987) ^ ((v382 ^ 0xA6BE03A3) + 1);
  unsigned int v384 = v383 + 1497496668 - ((2 * v383) & 0xB283F8B8);
  LODWORD(v368) = *(_DWORD *)(v73 - 140);
  uint64_t v385 = (char *)*(&off_26DE9F480 + (int)v368 - 190) - 12;
  int v386 = *(_DWORD *)&v385[4 * (((v573 ^ v334 ^ 0x293613A8) >> 16) ^ 0xA4)];
  HIDWORD(v342) = v386 ^ 0x3456887C;
  LODWORD(v342) = v386 ^ 0x40000000;
  int v387 = HIDWORD(v568) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998 ^ ((v384 ^ v382) + 1539013986) ^ 0x6CB5DF94;
  LODWORD(STACK[0x204]) = v376 ^ 0x78;
  unsigned int v388 = v376 ^ 0x78 ^ HIDWORD(v606);
  int v389 = v388 ^ 0x2AEA60C0;
  uint64_t v390 = (uint64_t)*(&off_26DE9F480 + (int)v368 - 436);
  unsigned int v391 = (v387 + 1271227496 - ((2 * v387) & 0x978AC8D0)) ^ *(_DWORD *)(v390 + 4 * (v388 ^ 0x10u));
  int v392 = v391 + 255624796 - ((2 * v391) & 0x1E790CB8);
  LODWORD(v378) = *(_DWORD *)&v385[4
                                 * (((HIDWORD(v573) ^ v365 ^ 0x4CCED9DE) >> 16) ^ 0x17)];
  HIDWORD(v342) = v378 ^ 0x3456887C;
  LODWORD(v342) = v378 ^ 0x40000000;
  LODWORD(v341) = v342 >> 30;
  LODWORD(STACK[0x208]) = v380;
  LODWORD(v378) = v571 ^ v380;
  LODWORD(v344) = v571 ^ v380 ^ 0x2548ED9B;
  v393 = (char *)*(&off_26DE9F480 + (int)(v312 ^ 0x211)) - 8;
  unsigned int v394 = v392 ^ *(_DWORD *)&v393[4 * (BYTE1(v344) ^ 0xD5)];
  int v395 = *(_DWORD *)&v381[4 * (HIBYTE(v388) ^ 0xD4)] ^ HIDWORD(v555);
  int v396 = *(_DWORD *)&v385[4 * (BYTE2(v389) ^ 0xF0)];
  HIDWORD(v342) = v396 ^ 0x3456887C;
  LODWORD(v342) = v396 ^ 0x40000000;
  int v397 = v342 >> 30;
  int v398 = (((8 * v341) & 0x51A00998 ^ v395) + 255624796 - 2 * (((8 * v341) & 0x51A00998 ^ v395) & 0xF3C865F ^ v395 & 3)) ^ *(_DWORD *)&v393[4 * ((unsigned __int16)(v573 ^ v334 ^ 0x13A8) >> 8)];
  LODWORD(v378) = *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0x8A)] ^ v555;
  LODWORD(v337) = (((8 * v397) & 0x51A00998 ^ v378)
                 + 255624796
                 - 2 * (((8 * v397) & 0x51A00998 ^ v378) & 0xF3C865E ^ v378 & 2)) ^ *(_DWORD *)&v393[4 * (((unsigned __int16)(WORD2(v573) ^ v365 ^ 0xD9DE) >> 8) ^ 0x2F)];
  LODWORD(v378) = v397 ^ *(_DWORD *)(v390 + 4 * ((v573 ^ v334) ^ 0x95u)) ^ (v337
                                                                                             + 1271227496
                                                                                             - ((2 * v337) & 0x978AC8D0));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v344) ^ 0x7C)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = v342 >> 30;
  LODWORD(v312) = *(_DWORD *)&v381[4 * (((v573 ^ v334) >> 24) ^ 0x70)] ^ HIDWORD(v550);
  LODWORD(STACK[0x21C]) = 255624798;
  LODWORD(v312) = (((8 * v337) & 0x51A00998 ^ v312)
                 + 255624796
                 - 2 * (((8 * v337) & 0x51A00998 ^ v312) & 0xF3C865E ^ v312 & 2)) ^ *(_DWORD *)&v393[4 * (BYTE1(v389) ^ 0xAB)];
  LODWORD(v312) = (v312 + 1271227496 - ((2 * v312) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                                              + 4
                                                                                              * ((BYTE4(v573) ^ v365) ^ 0x66u));
  unsigned int v399 = v337 ^ v628 ^ (v312 - ((2 * v312) & 0x90761102) - 935655295);
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v399) ^ 0xDB)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = v342 >> 30;
  LODWORD(v342) = __ROR4__(*(_DWORD *)(v390 + 4 * (v344 ^ 0x4Bu)) ^ v341 ^ 0x34E134AC ^ (v398 + 1271227496 - ((2 * v398) & 0x978AC8D0)), 5) ^ 0xA8A82A5C;
  HIDWORD(v342) = v342;
  LODWORD(v337) = *(_DWORD *)&v381[4 * (HIBYTE(v394) ^ 0x6D)] ^ v550 ^ v337 ^ (8 * v337) & 0x51A00998;
  LODWORD(v337) = (v337 + 255624796 - ((2 * v337) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v378) ^ 0x2C)];
  unsigned int v400 = (v342 >> 27) - ((2 * (v342 >> 27)) & 0x2236F56E) - 1860470089;
  LODWORD(v312) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4
                                                                              * (((v342 >> 27)
                                                                                                 - ((2 * (v342 >> 27)) & 0x6E)
                                                                                                 - 73) ^ 0x8Au));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v394) ^ 0xB6)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = v342 >> 30;
  int v401 = (((8 * v337) & 0x51A00998) + 1497496668 - ((16 * v337) & 0xA2001030)) ^ *(_DWORD *)&v381[4
                                                                                                * (HIBYTE(v400) ^ 0xC8)];
  int v402 = (v401 + 255624796 - 2 * (v401 & 0xF3C865E ^ *(_DWORD *)&v381[4 * (HIBYTE(v400) ^ 0xC8)] & 2)) ^ *(_DWORD *)&v393[4 * ((unsigned __int16)(v399 ^ 0xB690) >> 8)];
  LODWORD(v341) = *(_DWORD *)(v390 + 4 * (v378 ^ 0x14u)) ^ HIDWORD(v496) ^ 0xAACDC384 ^ v337 ^ (v402 + 1271227496 - ((2 * v402) & 0x978AC8D0));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v400) ^ 0xBF)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0x8A)] ^ HIDWORD(v588) ^ *(_DWORD *)&v393[4 * (BYTE1(v394) ^ 0x5F)] ^ (v342 >> 30) ^ (((8 * (v342 >> 30)) & 0x51A00998) + 255624796 - ((16 * (v342 >> 30)) & 0x2400030));
  LODWORD(v337) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v399 ^ 0x90u));
  LODWORD(v378) = *(_DWORD *)&v385[4 * (BYTE2(v378) ^ 0x3F)];
  HIDWORD(v342) = v378 ^ 0x3456887C;
  LODWORD(v342) = v378 ^ 0x40000000;
  LODWORD(v378) = v342 >> 30;
  int v403 = (((8 * v378) & 0x51A00998) + 1497496668 - ((16 * v378) & 0xA2001030)) ^ *(_DWORD *)&v381[4
                                                                                                * (HIBYTE(v399) ^ 0xAE)];
  int v404 = (v403 + 255624796 - 2 * (v403 & 0xF3C865F ^ *(_DWORD *)&v381[4 * (HIBYTE(v399) ^ 0xAE)] & 3)) ^ *(_DWORD *)&v393[4 * (BYTE1(v400) ^ 0xBE)];
  LODWORD(v378) = *(_DWORD *)(v390 + 4 * (v394 ^ 0x5Eu)) ^ v614 ^ v378 ^ (v404
                                                                                           + 1271227496
                                                                                           - ((2 * v404) & 0x978AC8D0));
  int v405 = *(_DWORD *)&v385[4 * (BYTE2(v378) ^ 0xB7)];
  HIDWORD(v342) = v405 ^ 0x3456887C;
  LODWORD(v342) = v405 ^ 0x40000000;
  int v406 = *(_DWORD *)&v381[4 * ((v312 >> 24) ^ 0xBA)] ^ HIDWORD(v545) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v337) = (v337 - ((2 * v337) & 0x53F67BC4) - 1443152414) ^ v632;
  int v407 = (v406 + 255624796 - ((2 * v406) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v337) ^ 0x52)];
  int v408 = *(_DWORD *)&v385[4 * (BYTE2(v312) ^ 0x60)];
  unsigned int v409 = (v407 + 1271227496 - ((2 * v407) & 0x978AC8D0)) ^ *(_DWORD *)(v390 + 4 * (v341 ^ 0x26u));
  HIDWORD(v342) = v408 ^ 0x3456887C;
  LODWORD(v342) = v408 ^ 0x40000000;
  int v410 = (v342 >> 30) - 854818322 - ((2 * (v342 >> 30)) & 0x9A1903DC);
  int v411 = *(_DWORD *)&v381[4 * (BYTE3(v341) ^ 0x42)] ^ v545 ^ (((8 * v410) ^ 0x68640F70) & 0x1200998 ^ v410 & 0x13B199C | ((8 * v410) ^ 0x68640F70) & 0x50800000 ^ v410 & 0xFEC4E663);
  LODWORD(v344) = *(_DWORD *)(v390 + 4 * (v337 ^ 0xD6u)) ^ *(_DWORD *)&v393[4 * (BYTE1(v378) ^ 0x38)] ^ ((v411 ^ 0xCD0C81EE) + 255624796 - 2 * ((v411 ^ 0xCD0C81EE) & 0xF3C865D ^ v411 & 1));
  int v412 = *(_DWORD *)&v385[4 * (BYTE2(v341) ^ 0x1C)];
  HIDWORD(v342) = v412 ^ 0x3456887C;
  LODWORD(v342) = v412 ^ 0x40000000;
  int v413 = v342 >> 30;
  unsigned int v414 = (((8 * v413) & 0x51A00998) + 1497496668 - ((16 * v413) & 0xA2001030)) ^ *(_DWORD *)&v381[4
                                                                                                * (BYTE3(v337) ^ 0x20)];
  int v415 = v414 + 255624796 - 2 * (v414 & 0xF3C865D ^ *(_DWORD *)&v381[4 * (BYTE3(v337) ^ 0x20)] & 1);
  int v416 = *(_DWORD *)(v390 + 4 * (v378 ^ 0xD6u));
  LODWORD(v334) = ((v416 ^ 0x12D492DD) - 1494349493) ^ ((v416 ^ 0xB43A9B97) + 1);
  LODWORD(v337) = *(_DWORD *)&v385[4 * ~WORD1(v337)];
  LODWORD(v334) = *(_DWORD *)&v393[4 * (BYTE1(v312) ^ 0xC3)] ^ v611 ^ v413 ^ (((v334
                                                                              + 1271227496
                                                                              - ((2 * v334) & 0x978AC8D0)) ^ v416)
                                                                            - 1494349494);
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0x66)] ^ HIDWORD(v540) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  int v417 = *(_DWORD *)&v393[4 * (BYTE1(v341) ^ 4)];
  LODWORD(v337) = (v337 ^ 0xF355ACB1 ^ -(v337 ^ 0xF355ACB1) ^ ((v417 ^ 0xF3C865C)
                                                             + (v417 ^ 0xCAA534E ^ (v337
                                                                                  + 255624796
                                                                                  - ((2 * v337) & 0x1E790CB8)))
                                                             + 1))
                + (v417 ^ 0xF3C865C);
  LODWORD(v312) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4
                                                                              * ((v312 ^ BYTE4(v559)) ^ 0x3Bu));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v312) ^ 0x6B)];
  LODWORD(v334) = v334 ^ v415;
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = *(_DWORD *)&v381[4 * (HIBYTE(v409) ^ 0xB8)] ^ v540 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v337) = (v337 + 255624796 - ((2 * v337) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v334) ^ 0x8B)];
  LODWORD(v341) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v344 ^ 0xD9u));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v409) ^ 0x47)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = *(_DWORD *)&v381[4 * ((v344 >> 24) ^ 0x5D)] ^ (v353 + 1497496668) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v378) = *(_DWORD *)&v385[4 * (BYTE2(v344) ^ 0xA2)];
  HIDWORD(v342) = v378 ^ 0x3456887C;
  LODWORD(v342) = v378 ^ 0x40000000;
  LODWORD(v378) = *(_DWORD *)(v390 + 4 * (v334 ^ 0xAEu)) ^ (v337
                                                                             + 255624796
                                                                             - ((2 * v337) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v312) ^ 0xB5)];
  LODWORD(v337) = *(_DWORD *)&v381[4 * (BYTE3(v334) ^ 0x93)] ^ v536 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v337) = (v337 + 255624796 - ((2 * v337) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v409) ^ 0xE5)];
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v334) ^ 0xDF)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v334) = *(_DWORD *)&v381[4 * ((v312 >> 24) ^ 0xFA)] ^ HIDWORD(a40) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v334) = (v334 + 255624796 - ((2 * v334) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v344) ^ 0x1E)];
  LODWORD(v334) = (v334 + 1271227496 - ((2 * v334) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v409 ^ 0x2Cu));
  unsigned int v418 = (v334 - ((2 * v334) & 0xF75B22C) - 2017797866) ^ v626;
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v418) ^ 0x31)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v337) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v312 ^ 0x5Cu));
  LODWORD(v312) = *(_DWORD *)&v381[4 * (BYTE3(v341) ^ 0xBF)] ^ v533 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  int v419 = *(_DWORD *)&v385[4 * (BYTE2(v341) ^ 0xA)];
  HIDWORD(v342) = v419 ^ 0x3456887C;
  LODWORD(v342) = v419 ^ 0x40000000;
  int v420 = v342 >> 30;
  LODWORD(v312) = *(_DWORD *)(v390 + 4 * v378) ^ *(_DWORD *)&v393[4 * (BYTE1(v337) ^ 0x75)] ^ (v312 + 255624796 - ((2 * v312) & 0x1E790CB8));
  LODWORD(v334) = (((8 * v420) & 0x51A00998) + 1497496668 - ((16 * v420) & 0xA2001030)) ^ *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0x98)];
  LODWORD(v334) = (v334 + 255624796 - 2 * (v334 & 0xF3C865F ^ *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0x98)] & 3)) ^ *(_DWORD *)&v393[4 * (BYTE1(v418) ^ 0x7E)];
  int v421 = *(_DWORD *)&v385[4 * (BYTE2(v378) ^ 0xC3)];
  HIDWORD(v342) = v421 ^ 0x3456887C;
  LODWORD(v342) = v421 ^ 0x40000000;
  unsigned int v422 = *(_DWORD *)(v390 + 4 * (v337 ^ 0x42u)) ^ v636 ^ v420 ^ (v334
                                                                                  + 1271227496
                                                                                  - ((2 * v334) & 0x978AC8D0));
  LODWORD(v334) = *(_DWORD *)&v381[4 * (BYTE3(v337) ^ 0x53)] ^ (v356 + 1497496668) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v334) = (v334 + 255624796 - ((2 * v334) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v341) ^ 0x47)];
  LODWORD(v344) = (v334 + 1271227496 - ((2 * v334) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v418 ^ 0x15u));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v337) ^ 0xE9)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = v342 >> 30;
  LODWORD(v334) = (((8 * v337) & 0x51A00998) + 1497496668 - ((16 * v337) & 0xA2001030)) ^ *(_DWORD *)&v381[4 * (HIBYTE(v418) ^ 0x24)];
  LODWORD(v334) = (v334 + 255624796 - ((2 * v334) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v378) ^ 0xA6)];
  LODWORD(v337) = *(_DWORD *)(v390 + 4 * (v341 ^ 0x86u)) ^ HIDWORD(v611) ^ v337 ^ (v334 + 1271227496 - ((2 * v334) & 0x978AC8D0));
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v337) ^ 0xDA)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v334) = *(_DWORD *)&v381[4 * ((v312 ^ 0xC08232DA) >> 24)] ^ v532 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v334) = (v334 + 255624796 - ((2 * v334) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v344) ^ 0x39)];
  int v423 = *(_DWORD *)&v385[4 * ((v312 ^ 0xC08232DA) >> 16)];
  HIDWORD(v342) = v423 ^ 0x3456887C;
  LODWORD(v342) = v423 ^ 0x40000000;
  unsigned int v424 = (v334 + 1271227496 - ((2 * v334) & 0x978AC8D0)) ^ *(_DWORD *)(v390 + 4 * (v422 ^ 0x9Bu));
  LODWORD(v334) = *(_DWORD *)&v381[4 * (HIBYTE(v422) ^ 0x78)] ^ v588 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v341) = *(_DWORD *)(v390 + 4 * (v344 ^ 0x6Fu)) ^ *(_DWORD *)&v393[4 * (BYTE1(v337) ^ 6)] ^ (v334 + 255624796 - ((2 * v334) & 0x1E790CB8));
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v422) ^ 0x6A)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v334) = *(_DWORD *)&v381[4 * ((v344 >> 24) ^ 4)] ^ HIDWORD(v530) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v334) = (v334 + 255624796 - ((2 * v334) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v312) ^ 0xF6)];
  LODWORD(v378) = (v334 + 1271227496 - ((2 * v334) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v337 ^ 0xAu));
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v344) ^ 0x3E)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v334) = v342 >> 30;
  LODWORD(v337) = *(_DWORD *)&v381[4 * (BYTE3(v337) ^ 0x81)] ^ (v358 + 1497496668);
  LODWORD(v337) = (((8 * v334) & 0x51A00998 ^ v337)
                 + 255624796
                 - 2 * (((8 * v334) & 0x51A00998 ^ v337) & 0xF3C865F ^ v337 & 3)) ^ *(_DWORD *)&v393[4 * ((unsigned __int16)(v422 ^ 0x209B) >> 8)];
  LODWORD(v312) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v312 ^ 0xE7u));
  LODWORD(v344) = v334 ^ v624 ^ (v312 - ((2 * v312) & 0x2C73AAF4) - 1774594694);
  LODWORD(v312) = *(_DWORD *)&v385[4 * (BYTE2(v344) ^ 0xA9)];
  HIDWORD(v342) = v312 ^ 0x3456887C;
  LODWORD(v342) = v312 ^ 0x40000000;
  LODWORD(v312) = *(_DWORD *)&v381[4 * (HIBYTE(v424) ^ 0x18)] ^ HIDWORD(v528) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v312) = (v312 - ((2 * v312) & 0x5004D48) + 41952932) ^ v630;
  LODWORD(v334) = *(_DWORD *)&v393[4 * (BYTE1(v378) ^ 0x9A)];
  LODWORD(v337) = v334 ^ 0xD8799C57 ^ ((v312 ^ 0x816001D9)
                                     + 255624796
                                     - ((2 * (v312 ^ 0x816001D9)) & 0x1E790CB8));
  LODWORD(v312) = v312 ^ 0xA6E66271;
  LODWORD(v337) = (v312 + v337 + 1) ^ ((v334 ^ 0xF0C379A3) + 1);
  LODWORD(v312) = ((v337 + 255624796 - ((2 * v337) & 0x1E790CB8)) ^ v334) + v312;
  LODWORD(v312) = (v312 + 1271227496 - ((2 * v312) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                                              + 4
                                                                                              * (v341 ^ 0x67u));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v424) ^ 0xED)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = *(_DWORD *)&v381[4 * BYTE3(v341)] ^ v528 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v337) = (v337 + 255624796 - ((2 * v337) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v344) ^ 0x52)];
  LODWORD(v337) = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390
                                                                              + 4 * (v378 ^ 0xBEu));
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v341) ^ 0xD9)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v334) = v342 >> 30;
  int v425 = *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0xAF)] ^ HIDWORD(v526);
  int v426 = (((8 * v334) & 0x51A00998 ^ v425) + 255624796 - 2 * (((8 * v334) & 0x51A00998 ^ v425) & 0xF3C865D ^ v425 & 1)) ^ *(_DWORD *)&v393[4 * (BYTE1(v424) ^ 0xB9)];
  LODWORD(v378) = *(_DWORD *)&v385[4 * (BYTE2(v378) ^ 0x7A)];
  HIDWORD(v342) = v378 ^ 0x3456887C;
  LODWORD(v342) = v378 ^ 0x40000000;
  LODWORD(v378) = v342 >> 30;
  int v427 = (((8 * v378) & 0x51A00998) + 1497496668 - ((16 * v378) & 0xA2001030)) ^ *(_DWORD *)&v381[4
                                                                                                * ((v344 >> 24) ^ 0xAE)];
  int v428 = (v427 + 255624796 - 2 * (v427 & 0xF3C865D ^ *(_DWORD *)&v381[4 * ((v344 >> 24) ^ 0xAE)] & 1)) ^ *(_DWORD *)&v393[4 * (BYTE1(v341) ^ 0x81)];
  LODWORD(v341) = *(_DWORD *)(v390 + 4 * ((v424 ^ v559) ^ 0xF8u)) ^ v620 ^ v378 ^ (v428 + 1271227496 - ((2 * v428) & 0x978AC8D0));
  LODWORD(v378) = *(_DWORD *)&v385[4 * (BYTE2(v341) ^ 0xEF)];
  LODWORD(v334) = v334 ^ *(_DWORD *)(v390 + 4 * (v344 ^ 0x45u)) ^ (v426
                                                                                    + 1271227496
                                                                                    - ((2 * v426) & 0x978AC8D0));
  HIDWORD(v342) = v378 ^ 0x3456887C;
  LODWORD(v342) = v378 ^ 0x40000000;
  int v429 = v342 >> 30;
  LODWORD(v378) = (((8 * v429) & 0x51A00998) + 1497496668 - ((16 * v429) & 0xA2001030)) ^ *(_DWORD *)&v381[4 * ((v312 >> 24) ^ 0x11)];
  LODWORD(v378) = (v378
                 + 255624796
                 - 2 * (v378 & LODWORD(STACK[0x21C]) ^ *(_DWORD *)&v381[4 * ((v312 >> 24) ^ 0x11)] & 2)) ^ *(_DWORD *)&v393[4 * (BYTE1(v334) ^ 3)];
  LODWORD(v337) = (v337 + 1515513780 - ((2 * v337) & 0xB4A9CF68)) ^ HIDWORD(a60);
  int v430 = *(_DWORD *)(v390 + 4 * (v337 ^ 0x4Bu)) ^ v634 ^ v429 ^ (v378
                                                                                  + 1271227496
                                                                                  - ((2 * v378) & 0x978AC8D0));
  int v431 = *(_DWORD *)&v385[4 * (BYTE2(v312) ^ 0x61)];
  HIDWORD(v342) = v431 ^ 0x3456887C;
  LODWORD(v342) = v431 ^ 0x40000000;
  int v432 = v568 ^ *(_DWORD *)&v381[4 * (BYTE3(v337) ^ 0x1E)] ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  unsigned int v433 = ((v432 ^ 0x88104408) + 255624796 - 2 * ((v432 ^ 0x88104408) & 0xF3C865D ^ v432 & 1)) ^ *(_DWORD *)&v393[4 * (BYTE1(v341) ^ 0x76)];
  unsigned int v434 = HIDWORD(a48) ^ *(_DWORD *)(v390 + 4 * (v334 ^ 0x19u)) ^ (v433
                                                                                   + 1271227496
                                                                                   - ((2 * v433) & 0x978AC8D0));
  int v435 = *(_DWORD *)&v385[4 * (BYTE2(v337) ^ 5)];
  HIDWORD(v342) = v435 ^ 0x3456887C;
  LODWORD(v342) = v435 ^ 0x40000000;
  int v436 = v342 >> 30;
  LODWORD(v378) = (((8 * v436) & 0x51A00998) + 1497496668 - ((16 * v436) & 0xA2001030)) ^ *(_DWORD *)&v381[4 * (BYTE3(v334) ^ 0x8B)];
  LODWORD(v378) = (v378 + 255624796 - ((2 * v378) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v312) ^ 0xB3)];
  LODWORD(v378) = *(_DWORD *)(v390 + 4 * (v341 ^ 0x18u)) ^ v618 ^ v436 ^ (v378
                                                                                           + 1271227496
                                                                                           - ((2 * v378) & 0x978AC8D0));
  LODWORD(v334) = *(_DWORD *)&v385[4 * (BYTE2(v334) ^ 0xA2)];
  HIDWORD(v342) = v334 ^ 0x3456887C;
  LODWORD(v342) = v334 ^ 0x40000000;
  LODWORD(v334) = *(_DWORD *)&v381[4 * (BYTE3(v341) ^ 3)] ^ v585 ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v337) = (v334 + 255624796 - ((2 * v334) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v337) ^ 0xB)];
  LODWORD(v312) = v562 ^ *(_DWORD *)(v390 + 4 * (v312 ^ 0x7Cu)) ^ (v337
                                                                                    + 1271227496
                                                                                    - ((2 * v337) & 0x978AC8D0));
  LODWORD(v312) = v312 - ((2 * v312) & 0x8D06DE34);
  LOBYTE(v337) = (-27 - (_BYTE)v312) & 0x18;
  LODWORD(v334) = (v430 ^ 0xDC31D07B) >> (v337 ^ 8);
  unsigned int v437 = v312 + 1183018778;
  LOBYTE(v312) = v337 ^ 0x10;
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v437) ^ 0xEA)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = v342 >> 30;
  LODWORD(v312) = *(_DWORD *)&v381[4 * ((v334 >> (char)v312) ^ 0x59)] ^ (v360 + 1497496668);
  LODWORD(v312) = (((8 * v337) & 0x51A00998 ^ v312)
                 + 255624796
                 - 2 * (((8 * v337) & 0x51A00998 ^ v312) & 0xF3C865F ^ v312 & 3)) ^ *(_DWORD *)&v393[4 * (BYTE1(v378) ^ 9)];
  unsigned int v438 = v337 ^ *(_DWORD *)(v390 + 4 * (v434 ^ 0x97u)) ^ (v312
                                                                           + 1271227496
                                                                           - ((2 * v312) & 0x978AC8D0));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v430) ^ 0x95)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = v342 >> 30;
  LODWORD(v334) = (((8 * v337) & 0x51A00998) + 1497496668 - ((16 * v337) & 0xA2001030)) ^ *(_DWORD *)&v381[4 * (HIBYTE(v434) ^ 0xA7)];
  LODWORD(v334) = (v334
                 + 255624796
                 - 2 * (v334 & LODWORD(STACK[0x21C]) ^ *(_DWORD *)&v381[4 * (HIBYTE(v434) ^ 0xA7)] & 2)) ^ *(_DWORD *)&v393[4 * (BYTE1(v437) ^ 0xB5)];
  unsigned int v439 = *(_DWORD *)(v390 + 4 * (v378 ^ 0x76u)) ^ v606 ^ v337 ^ (v334
                                                                                  + 1271227496
                                                                                  - ((2 * v334) & 0x978AC8D0));
  LODWORD(v337) = *(_DWORD *)&v385[4 * (BYTE2(v434) ^ 0x24)];
  HIDWORD(v342) = v337 ^ 0x3456887C;
  LODWORD(v342) = v337 ^ 0x40000000;
  LODWORD(v337) = *(_DWORD *)&v381[4 * (BYTE3(v378) ^ 0x71)] ^ HIDWORD(a34) ^ (v342 >> 30) ^ (8 * (v342 >> 30)) & 0x51A00998;
  LODWORD(v337) = (v337 + 255624796 - ((2 * v337) & 0x1E790CB8)) ^ *(_DWORD *)&v393[4 * (BYTE1(v430) ^ 0x14)];
  LODWORD(v334) = *(_DWORD *)&v381[4 * (HIBYTE(v437) ^ 0x2D)];
  LODWORD(v385) = *(_DWORD *)&v385[4 * (BYTE2(v378) ^ 0xFE)];
  HIDWORD(v342) = v385 ^ 0x3456887C;
  LODWORD(v342) = v385 ^ 0x40000000;
  LODWORD(v381) = v342 >> 30;
  unsigned int v440 = (v337 + 1271227496 - ((2 * v337) & 0x978AC8D0)) ^ *(_DWORD *)(v390 + 4 * (v437 ^ 0xDAu));
  LODWORD(v337) = ((v334 ^ v521) + 255624796 - ((2 * (v334 ^ v521)) & 0x1E790CB8)) ^ (8 * v381) & 0x51A00998 ^ *(_DWORD *)&v393[4 * (BYTE1(v434) ^ 0xA7)];
  unsigned int v441 = v381 ^ *(_DWORD *)(v390 + 4 * (v430 ^ 0x46u)) ^ (v337
                                                                                         + 1271227496
                                                                                         - ((2 * v337) & 0x978AC8D0));
  uint64_t v442 = *(unsigned int *)(v73 - 140);
  v443 = (char *)*(&off_26DE9F480 + (int)v442 - 193) - 8;
  v444 = (char *)*(&off_26DE9F480 + SHIDWORD(v509)) - 4;
  v445 = (char *)*(&off_26DE9F480 + (int)v442 - 537) - 12;
  unsigned int v446 = *(_DWORD *)&v445[4 * (BYTE1(v440) ^ 0x66)] ^ 0x49FCFD33;
  LODWORD(v337) = HIDWORD(v582) ^ *(_DWORD *)&v444[4 * (BYTE2(v441) ^ 0x18)] ^ (*(_DWORD *)&v443[4
                                                                                               * (HIBYTE(v438) ^ 0x42)]
                                                                              - 1619152047) ^ v446 ^ ((BYTE2(v441) ^ 0x11) - 1975475956 - ((v441 >> 15) & 0x18)) ^ (v446 >> 4) & 0x6F8F0A4;
  uint64_t v447 = (uint64_t)*(&off_26DE9F480 + (int)v509);
  int v448 = (v337 - 1483592394 - ((2 * v337) & 0x4F245A6C)) ^ *(_DWORD *)(v447 + 4 * (v439 ^ 0x3Cu));
  if ((v438 & 0x200000) != 0) {
    int v449 = 32;
  }
  else {
    int v449 = -32;
  }
  int v450 = (BYTE2(v438) ^ 0x64) + v449;
  int v451 = v582 ^ (*(_DWORD *)&v443[4 * (HIBYTE(v439) ^ 0x1F)] - 1619152047);
  unsigned int v452 = *(_DWORD *)&v445[4 * (BYTE1(v441) ^ 0x19)] ^ 0x49FCFD33;
  int v453 = (v451 - 1975475956 - ((2 * v451) & 0x14814218)) ^ *(_DWORD *)&v444[4 * (v450 ^ 0x29)] ^ v452 ^ (v452 >> 4) & 0x6F8F0A4;
  int v454 = (v453 - 1483592394 - ((2 * v453) & 0x4F245A6C)) ^ *(_DWORD *)(v447 + 4 * (v440 ^ 0x25u));
  int v455 = HIDWORD(v578) ^ (*(_DWORD *)&v443[4 * (HIBYTE(v440) ^ 0x30)] - 1619152047);
  unsigned int v456 = *(_DWORD *)&v445[4 * (BYTE1(v438) ^ 0x1E)] ^ 0x49FCFD33;
  int v457 = *(_DWORD *)&v444[4 * (BYTE2(v439) ^ 0x31)] ^ BYTE2(v439) ^ 0x38 ^ v456 ^ (v456 >> 4) & 0x6F8F0A4 ^ (v455 - 1975475956 - ((2 * v455) & 0x14814218));
  int v458 = (v457 - 1483592394 - ((2 * v457) & 0x4F245A6C)) ^ *(_DWORD *)(v447
                                                                     + 4
                                                                     * ((v441 ^ 0xE3)
                                                                      + ((2 * v441) & 0xBE ^ 0xFFFFFF79)
                                                                      + 96));
  int v459 = *(_DWORD *)&v443[4 * (HIBYTE(v441) ^ 0xA9)];
  unsigned int v460 = *(_DWORD *)&v445[4 * (BYTE1(v439) ^ 0x94)];
  int v461 = BYTE2(v440) ^ ((v578 ^ (v459 - 1619152047)) - 1975475956 - ((2 * (v578 ^ (v459 - 1619152047))) & 0x14814218)) ^ 0xAB ^ *(_DWORD *)&v444[4 * (BYTE2(v440) ^ 0xA2)];
  int v462 = *(_DWORD *)(v447 + 4 * (v438 ^ 0xF8u));
  unsigned int v463 = *(_DWORD *)(v73 - 156) ^ v638 ^ (v458 - ((2 * v458) & 0xBBBA798C) + 1574780102);
  int v464 = (v461 - 1483592394 - ((2 * v461) & 0x4F245A6C)) ^ v462;
  unsigned int v465 = *(_DWORD *)(v73 - 144) ^ v640 ^ (v448 - ((2 * v448) & 0x9F1F8562) + 1334821553);
  unsigned int v466 = *(_DWORD *)(v73 - 148) ^ v639 ^ v450 ^ (v454 + 378200222 + (~(2 * v454) | 0xD2EA3EC5));
  int v467 = ((v460 >> 4) & 0x6F8F0A4 ^ 0x498C080 ^ v464)
       + 1384190930
       - 2 * (((v460 >> 4) & 0x6F8F0A4 ^ 0x498C080 ^ v464) & 0x528113DB ^ v464 & 9);
  int v468 = *(_DWORD *)(v73 - 152) ^ v637 ^ v460;
  v469 = (char *)*(&off_26DE9F480 + SHIDWORD(v506)) - 4;
  v362[*(void *)(v73 - 256)] = (103 - 115 * v469[BYTE1(v465) ^ 0xF4]) ^ ((80 * v469[BYTE1(v465) ^ 0xF4] + 112) | 0xA0) ^ 0x18;
  v470 = (char *)*(&off_26DE9F480 + (int)v442 - 274) - 12;
  v362[STACK[0x220]] = v470[HIBYTE(v463) ^ 3] ^ ((HIBYTE(v463) ^ 0x6A)
                                                 + (HIBYTE(v463) ^ 0xB1)
                                                 + 1
                                                 - ((2 * ((HIBYTE(v463) ^ 0x6A) + (HIBYTE(v463) ^ 0xB1) + 1)) & 0x9A)
                                                 - 51) ^ 0xD3;
  unsigned int v471 = v468 ^ v467;
  v362[*(void *)(v73 - 200)] = v470[HIBYTE(v466) ^ 0xCELL] ^ ((HIBYTE(v466) ^ 0xA7)
                                                              + (HIBYTE(v466) ^ 0x7C)
                                                              + 1
                                                              - ((2 * ((HIBYTE(v466) ^ 0xA7) + (HIBYTE(v466) ^ 0x7C) + 1)) & 0x9A)
                                                              - 51) ^ 0xAA;
  v362[STACK[0x230]] = (103 - 115 * v469[BYTE1(v471) ^ 0x8ELL]) ^ 0x6D ^ ((80 * v469[BYTE1(v471) ^ 0x8ELL] + 112) | 0xA0);
  v472 = (char *)*(&off_26DE9F480 + (int)v506) - 12;
  v362[STACK[0x238]] = v472[v466 ^ 0x7ALL] ^ 0x68;
  v473 = (char *)*(&off_26DE9F480 + (int)v442 - 296) - 4;
  v362[STACK[0x228]] = v473[BYTE2(v463) ^ 0x7ALL] ^ 0x87;
  v362[*(void *)(v73 - 224)] = v472[v465 ^ 0x7CLL] ^ 0xD7;
  v362[*(void *)(v73 - 192)] = (103 - 115 * v469[BYTE1(v466) ^ 0x86]) ^ 0xAD ^ ((80 * v469[BYTE1(v466) ^ 0x86]
                                                                                   + 112) | 0xA0);
  v362[*(void *)(v73 - 232)] = v473[BYTE2(v466) ^ 0x4DLL] ^ 0xBD;
  v362[*(void *)(v73 - 248)] = (103 - 115 * v469[BYTE1(v463) ^ 0x11]) ^ ((80 * v469[BYTE1(v463) ^ 0x11] + 112) | 0xA0) ^ 8;
  uint64_t v474 = HIBYTE(v471);
  v362[*(void *)(v73 - 184)] = v473[BYTE2(v465) ^ 0xC0] ^ 0xA6;
  int v475 = (v474 ^ 0x34) + (v474 ^ 0xEF) + 1;
  v362[*(void *)(v73 - 168)] = (v475 - ((2 * v475) & 0x9A) - 51) ^ 0xF4 ^ v470[v474 ^ 0x5D];
  v362[*(void *)(v73 - 216)] = v472[v471 ^ 0x9DLL] ^ 0xB8;
  LOBYTE(v474) = v473[BYTE2(v471) ^ 0x8BLL];
  uint64_t v476 = HIBYTE(v465);
  v362[*(void *)(v73 - 208)] = v474 ^ 0x56;
  uint64_t v477 = *(void *)(v73 - 176);
  v362[v477] = ((v476 ^ 0x28) + (v476 ^ 0xF3) + 1 - ((2 * ((v476 ^ 0x28) + (v476 ^ 0xF3) + 1)) & 0x9A) - 51) ^ 0x9D ^ v470[v476 ^ 0x41];
  v362[*(void *)(v73 - 240)] = v472[v463 ^ 0x81] ^ 0xC4;
  LODWORD(v530) = v358 + 1497496668;
  HIDWORD(v532) = v356 + 1497496668;
  HIDWORD(v536) = v353 + 1497496668;
  LODWORD(v526) = v360 + 1497496668;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, uint64_t, unint64_t, uint64_t, uint64_t))(a72 + 8 * ((3011 * (((v477 + 646765558 - ((2 * v477 + 32) & 0x4D19B7EC) + 16) ^ 0x268CDBF6u) < a71)) ^ ((int)v442 + 729))))((2 * v475) & 0x9A, 103, 173, v472, 80, 112, v442, 1327782508, a9, v479, v480, v482, v483, v485, v486, v488, v491, v492, v493,
           v495,
           v496,
           v497,
           v498,
           v500,
           a25,
           v503,
           a27,
           a28,
           v506,
           v509,
           v515,
           v518,
           v521,
           a34,
           v526,
           v528,
           v530,
           v532,
           v533,
           a40,
           v536,
           v540,
           v545,
           v550,
           v555,
           v559,
           v562,
           a48,
           v568,
           v571,
           v573,
           v578,
           v582,
           v585,
           v588,
           v593,
           v596,
           v599,
           v602,
           a60,
           v606,
           v611,
           v614);
}

uint64_t sub_22B36C784()
{
  int v8 = v2 ^ v6;
  int v9 = STACK[0x220];
  int v10 = (unsigned char *)(v5 + (LODWORD(STACK[0x220]) - 1836947054));
  unsigned int v11 = -1711036427
      * ((*(_DWORD *)(*(void *)STACK[0x250] + (*(int *)STACK[0x248] & 0xFFFFFFFFD0D0D6A8)) ^ v10) & ((v8 + 438666941) & 0xE5DA7DDB ^ (v3 + (v8 ^ 0x94) + 638)));
  unint64_t v12 = -1711036427 * (v11 ^ HIWORD(v11));
  LOBYTE(v12) = *((unsigned char *)*(&off_26DE9F480 + (v8 ^ 0x631)) + (v12 >> 24) - 8) ^ ((v1 ^ 0xC1B11631) >> (v0 + 95)) ^ *((unsigned char *)*(&off_26DE9F480 + v8 - 1703) + (v12 >> 24) - 4) ^ *((unsigned char *)*(&off_26DE9F480 + v8 - 1533) + (v12 >> 24) + 3) ^ v12 ^ (-73 * BYTE3(v12));
  *int v10 = v12;
  return (*(uint64_t (**)(void))(v7 + 8 * ((97 * (v9 - (v12 != 0) == v4)) ^ v8)))();
}

void sub_22B36C798()
{
}

void sub_22B36C870()
{
}

uint64_t sub_22B36C9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (int)((((((((v17 + 1513) | 0x14) + 268431275) & 0xF7CDDF9B) - 130928370) ^ 0x897) * (*a17 == 1801476215)) ^ ((v17 + 1513) | 0x14))))(a1, a2, 4164039495, 1801476207, 130930587, a17, a7, a8, a9, a10);
}

uint64_t sub_22B36CA54@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(a12 + 4 * (v12 + a2) - 0x54EEBA8C0E75CADCLL) = a1;
  int v18 = v12 + v14 + ((v13 + 304) | 0x242);
  BOOL v20 = v18 > v15 || v18 < v16;
  return (*(uint64_t (**)(void))(v17 + 8 * ((63 * v20) ^ v13)))();
}

void sub_22B36CAB0()
{
}

uint64_t sub_22B36CBB0(uint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, unsigned char *a13, unsigned char *a14, unsigned char *a15, unsigned char *a16, unsigned int *a17, unsigned char *a18, unsigned char *a19, unsigned char *a20,unsigned char *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned __int8 *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,char a48,__int16 a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int v77 = *a26 ^ 0x22;
  if (v77 == 1)
  {
    unsigned int v85 = *a35;
    char v83 = a2 + 70;
    *a21 = ((8 * *(unsigned char *)a35) ^ 0xC8) + (~(2 * ((8 * *(unsigned char *)a35) ^ 0xC8)) | 0xAF) + 43;
    *a20 = ((v85 >> 5) ^ (a2 + 27)) - 2 * (((v85 >> 5) ^ (a2 + 27)) & 0x2B ^ ((v85 & 0x20) != 0)) + 42;
    *a19 = ((v85 >> 13) ^ 0x29) - ((2 * ((v85 >> 13) ^ 0x29)) & 0x55) + 42;
    char v82 = 84;
    *a18 = ((v85 >> 21) ^ 0x11) - ((v85 >> 20) & 0x54) + 42;
    unsigned int v86 = *a17;
    HIDWORD(v87) = *a17 ^ 6;
    LODWORD(v87) = v85 ^ 0x20000000;
    *a16 = (v87 >> 29) - ((2 * (v87 >> 29)) & 0x55) + 42;
    *a15 = ((v86 >> 5) ^ 0x9D) + (~(2 * ((v86 >> 5) ^ 0x9D)) | 0xAB) + 43;
    *a14 = ((v86 >> 13) ^ 0xBD) - ((2 * ((v86 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v81 = v86 >> 21;
    char v84 = v81 ^ 0x40;
  }
  else
  {
    if (v77 != 2) {
      goto LABEL_6;
    }
    unsigned int v78 = *a17;
    *a21 = ((*a17 >> 21) ^ 0x40) - ((*a17 >> 21 << (a12 + 38)) & 0x54) + 42;
    *a20 = ((v78 >> 13) ^ 0xBD) - ((2 * ((v78 >> 13) ^ 0xBD)) & 0x55) + 42;
    *a19 = ((v78 >> 5) ^ 0x9D) - ((2 * ((v78 >> 5) ^ 0x9D)) & 0x55) + 42;
    unsigned int v79 = *a35;
    HIDWORD(v80) = v78 ^ 6;
    LODWORD(v80) = *a35 ^ 0x20000000;
    *a18 = (v80 >> 29) - ((2 * (v80 >> 29)) & 0x55) + 42;
    *a16 = ((v79 >> 21) ^ 0x11) - ((v79 >> 20) & 0x54) + 42;
    *a15 = ((v79 >> 13) ^ 0x29) + (~(2 * ((v79 >> 13) ^ 0x29)) | 0xAB) + 43;
    *a14 = ((v79 >> 5) ^ 0xB0) - ((2 * ((v79 >> 5) ^ 0xB0)) & 0x55) + 42;
    LOBYTE(v81) = (8 * v79) ^ 0xC8;
    char v82 = 80;
    char v83 = a12;
    char v84 = v81;
  }
  *a13 = v84 + (v83 ^ 0xF1) - (v82 & (2 * v81));
LABEL_6:
  uint64_t v68 = (char *)&a68 + a28 - 0x42CACC5D4F458876;
  unint64_t v88 = a27 + a28;
  uint64_t v69 = *(unsigned int *)(a61 - 0x2970AB8229FC3CE2);
  int v70 = *(unsigned __int8 *)(a61 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v70 == 2)
  {
    BOOL v75 = a4 < v88 && (unint64_t)v68 < a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v76
                                              + 8
                                              * ((7 * ((v75 ^ (a48 + a50 + 1)) & 1)) ^ (a2 + 3667))))(v69);
  }
  else
  {
    if (v70 != 1) {
      JUMPOUT(0x22B33116CLL);
    }
    BOOL v72 = a4 < v88 && (unint64_t)v68 < a4 + 64;
    return (*(uint64_t (**)(uint64_t))(v76
                                              + 8 * ((((v72 ^ a2) & 1) * (a63 - 1886)) ^ (a2 + 248))))(v69);
  }
}

void sub_22B36CE40()
{
}

uint64_t sub_22B36CE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (((a8 + v10 + 22 * (v9 ^ 0x9B1u) - 1874717918 > 7) * ((v9 ^ 0x9B1) - 59)) ^ v9)))(v8);
}

void sub_22B36CEC4()
{
}

void sub_22B36CED4()
{
}

uint64_t sub_22B36CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v5 - 698) ^ 0x421) - 3591) * (a5 >> 4 != 226196984)) ^ (v5 - 625))))();
}

uint64_t sub_22B36CF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_DWORD *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,unsigned int a54)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)((503 * (*a30 - 256539393 + ((*a35 << ((BYTE4(a34) & 0xF2) + 17 * (a54 ^ 0x86) + 76)) & 0x34 ^ 0x30) + (*a35 & 0x3F ^ 0xFBDBBE83) < 0xFFFFFFC0)) ^ (a54 + 604))))(a1, a54, 1962805758, a52, 2277392758, -783663996, 3511303207, 125, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_22B36D048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, int a15, unsigned int a16)
{
  a16 = v20 + 1734664879 * (&a12 ^ 0x2FDB281A) - 545;
  a12 = v17;
  a13 = &STACK[0x25B0145E0CD22398];
  a14 = v21 + v16;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 ^ 0x14CF)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((3852 * (a15 == ((v20 - 7) ^ (v18 + 7)))) ^ v20)))(v22);
}

uint64_t sub_22B36D0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,_DWORD *a22,uint64_t a23,_DWORD *a24,void *a25)
{
  *a22 = v26 + 1;
  unsigned int v30 = ((v25 ^ (v25 >> 11)) << 7) & 0x9D2C5680 ^ v25 ^ (v25 >> 11);
  uint64_t v31 = (unsigned char *)(v27 + (a21 - 1));
  unsigned int v32 = -1711036427
      * ((*(_DWORD *)(*a25 + (*a24 & 0x26B62C04)) ^ v31) & ((93 * (a15 & 0x6EF96DF ^ 0x4CA)) ^ 0x7FFFF85E));
  unint64_t v33 = -1711036427 * (v32 ^ HIWORD(v32));
  unint64_t v34 = v33 >> ((a15 & 0xDF ^ 0xCAu) + 3);
  LOBYTE(v33) = *(unsigned char *)(*(void *)(v29 + 8 * ((a15 & 0x6EF96DF) - 1032)) + v34 - 8) ^ v30 ^ (((v30 << (a15 & 0xDF ^ 0xD0)) & 0xEFC60000 ^ v30) >> 18) ^ *(unsigned char *)(*(void *)(v29 + 8 * ((a15 & 0x6EF96DF) - 908)) + v34 - 12) ^ *(unsigned char *)(*(void *)(v29 + 8 * ((a15 & 0x6EF96DF) - 1173)) + v34 - 3) ^ v33 ^ (87 * v34);
  *uint64_t v31 = v33;
  return (*(uint64_t (**)(void))(v28 + 8 * ((541 * (a21 == (v33 != 0))) ^ a15 & 0x6EF96DF)))();
}

uint64_t sub_22B36D228@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((86 * ((v1 ^ 0x36E ^ (((a1 - 1940) | 0x360u) - 1048)) < 8)) ^ a1)))();
}

void sub_22B36D268()
{
}

void sub_22B36D3E4()
{
}

uint64_t sub_22B36D404()
{
  unsigned int v8 = v3 + v2 + v4 + v5;
  v9.i64[0] = 0x5454545454545454;
  v9.i64[1] = 0x5454545454545454;
  v10.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v10.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  uint64_t v11 = v6 + v8;
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v0 + v8;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v9)), v10));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v9)), v10));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((2386 * ((v1 & 0xFFFFFFE0) == 32)) | (v5 - 1768))))();
}

uint64_t sub_22B36D4A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (int)((((((a4 + 2145) | 0x53) ^ 0xFFFFF38C) + (a4 ^ 0x7E2)) * (v6 == a5)) ^ a4)))();
}

uint64_t sub_22B36D4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v24 = v17 - 238;
  *(_DWORD *)(v23 - 112) = v17
                         - 1948972247
                         * (((((v23 - 144) | 0xDB44CBBC) ^ 0xFFFFFFFE) - (~(v23 - 144) | 0x24BB3443)) ^ 0x9125C1AD)
                         + 1134;
  *(void *)(v23 - 104) = v19;
  *(void *)(v23 - 128) = v18;
  *(void *)(v23 - 120) = v22;
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = v19;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v17 ^ 0x1352)))(v23 - 144);
  BOOL v26 = v21 + a17 + 2 < ((v24 + 1733) ^ 0x7FFFF6D1u);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((((((v24 + 88) ^ v26) & 1) << 6) & 0x7F | ((((v24 + 600) ^ v26) & 1) << 7)) ^ (v24 + 1524))))(v25);
}

uint64_t sub_22B36D5A8@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1710
                                * (((*(unsigned __int8 *)(a1 + 3) - 134) ^ (v5 + 13 * (a2 ^ 0x33C) - 2704))
                                 + v3
                                 + (v4 & (2 * (*(unsigned __int8 *)(a1 + 3) - 134))) == a3)) ^ a2)))();
}

uint64_t sub_22B36D5F8(uint64_t result)
{
  unsigned int v1 = 1328090399 * ((result & 0x601195F2 | ~(result | 0x601195F2)) ^ 0x603D0E37);
  int v2 = *(_DWORD *)(result + 12);
  uint64_t v3 = *(void *)result;
  *(unsigned char *)(v3 - 0x14C08C480D254D62) = (v2 ^ ~v1) >> 24;
  *(unsigned char *)(v3 - 0x14C08C480D254D61) = ((v2 ^ v1) >> 16) ^ 0xFD;
  *(unsigned char *)(v3 - 0x14C08C480D254D60) = ((unsigned __int16)(v2 ^ v1) >> 8) ^ 0x6C;
  *(unsigned char *)(v3 - 0x14C08C480D254D5FLL) = v2 ^ v1 ^ 0xFC;
  return result;
}

uint64_t sub_22B36D6A8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 + 67113458) | 0xA87A02B8) - 2360) ^ ((v2 + 142214266) | 0xA4001030))
                                     * (v1 == v0)) ^ v2)))();
}

uint64_t sub_22B36D80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((53 * ((unint64_t)(a11 + a12 - ((a18 + 1) << (((v19 + 4) | 9u) - 37))) > 0xF)) ^ v19)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_22B36D864@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((3762
                                * (((**v5 - 42) ^ (v4 + (a1 ^ 0x97C) - 2704)) + v2 + (v3 & (2 * (**v5 - 42))) == a2)) ^ a1)))();
}

void sub_22B36D8B8()
{
}

uint64_t sub_22B36D8C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_26DE9FFD0
                              + 8 * ((236 * (*(_DWORD *)(a2 - 0x48A9B556C05DE57DLL) == 1801476205)) ^ 0xB68u)
                              - 8))();
}

void sub_22B36D914()
{
}

uint64_t sub_22B36D924@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - 1684688557);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v5 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v4 + 3) ^ *(unsigned char *)(v3 + (v8 & 0xF)) ^ (-81 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((3702 * (a2 - 1 == a1)) ^ (v6 - 2122))))();
}

void sub_22B36D98C()
{
}

uint64_t sub_22B36DA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v8 = v5 == 5 * (((v6 + 242) | 8) ^ 0xD15) + 23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7
                                                                                                  + 8 * ((v8 | (4 * v8)) ^ v6)))(a1, 17, 26, a4, a5, STACK[0x268]);
}

uint64_t sub_22B36DA5C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((124 * (v1 > 0x82)) ^ (v0 + 1627))))();
}

uint64_t sub_22B36DA98(int a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((205 * (a1 + v5 - 1876019711 >= ((((a4 - 1757606062) & 0x42E77E) + 1820) ^ 0xC36))) ^ a4)))();
}

uint64_t sub_22B36DB10()
{
  unsigned int v5 = v2 + ((v3 + 1523) ^ 0x64800A80);
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 | (8 * (-v0 - 1686111765 - v1 + v5 > 0xE)))))(2523581912);
}

uint64_t sub_22B36DB8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v28 = *(unsigned __int8 *)(a27 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v28 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27
  }
                                                                + 8
                                                                * (((*(_DWORD *)(a27 - 0x2970AB8229FC3CD2) != 326024231)
                                                                  * (a4 - 3241)) ^ (a4 - 2839))))(3142968381, 971966070, 84);
  if (v28 != 1) {
    JUMPOUT(0x22B36DCE0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27
                                                              + 8
                                                              * ((41
                                                                * (*(_DWORD *)(a27 - 0x2970AB8229FC3CD2) == (a11 ^ 0x136EB90D))) ^ (a4 - 620))))(a1, 2198331955, 154427402);
}

void sub_22B36DD20(uint64_t a1)
{
  int v2 = (char *)off_26DE9FB78 - 8;
  int v3 = off_26DE9F610;
  uint64_t v4 = (uint64_t)*(&off_26DE9F480
                + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                   + (-121
                                                                                     * ((qword_2683EB0F0
                                                                                       + dword_2683EB0F8) ^ 0x4D))
                                                                   - 8) ^ 0xE1] ^ (-121
                                                                                 * ((qword_2683EB0F0 + dword_2683EB0F8) ^ 0x4D)))
                + 329);
  uint64_t v5 = *(void *)(v4 - 4);
  uint64_t v6 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9FDA0
                                                  + (*((unsigned __int8 *)off_26DEA02C0
                                                     + (-121 * ((qword_2683EB0F0 - v5) ^ 0x4D))
                                                     - 8) ^ 0xE6u)
                                                  - 8) ^ (-121 * ((qword_2683EB0F0 - v5) ^ 0x4D)))
                + 236);
  unint64_t v7 = (*(void *)(v6 - 4) + v5) ^ (unint64_t)&v11;
  uint64_t v8 = (2059148423 * v7) ^ 0xD2361EE8B96764DLL;
  uint64_t v9 = 2059148423 * (v7 ^ 0xD2361EE8B96764DLL);
  *(void *)(v4 - 4) = v8;
  *(void *)(v6 - 4) = v9;
  LODWORD(v6) = *(_DWORD *)(v4 - 4);
  int8x16_t v10 = (char *)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 + dword_2683EB0F8) ^ 0x4D)) ^ byte_22B48A580[byte_22B47E680[(-121 * ((qword_2683EB0F0 + dword_2683EB0F8) ^ 0x4D))] ^ 0x27])
                + 147)
      - 8;
  (*(void (**)(char *, uint64_t (*)()))&v10[8
                                                    * (*((unsigned char *)off_26DEA0388
                                                                        + (*((unsigned __int8 *)off_26DE9F930
                                                                           + (-121 * ((v9 + v6) ^ 0x4D))) ^ 0x64u)
                                                                        - 4) ^ (-121 * ((v9 + v6) ^ 0x4D)))
                                                    + 32328])((char *)*(&off_26DE9F480+ ((-121 * ((v9 - v6) ^ 0x4D)) ^ (*v3)[v2[(-121 * ((v9 - v6) ^ 0x4D))] ^ 0xE1])+ 46)- 4, sub_22B3AC7C8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B36DF08@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((230 * (((45 * (v3 ^ 0x164u)) ^ 0x32BLL) + v2 != v1)) ^ (v3 - 17))))();
}

void sub_22B36DF4C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1734664879 * (a1 ^ 0x2FDB281A);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_22B36E080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (a11 ^ (227 * (v11 < 2)))))();
}

uint64_t sub_22B36E11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((106
                                * ((((((v17 - 2994) | 0x482) - 2324) ^ ((v17 - 2992) | 0x480)) & (v19 - 1801476201))
                                 - a17 != -1801476204)) ^ v17)))();
}

uint64_t sub_22B36E178(uint64_t a1, int a2, int8x8_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  *(int8x8_t *)(a7 + v7) = veor_s8(*(int8x8_t *)(a1 + v7), a3);
  return (*(uint64_t (**)(void))(v8 + 8 * ((a2 == 0) | a6)))();
}

void sub_22B36E1A8()
{
}

uint64_t sub_22B36E1BC@<X0>(uint64_t a1@<X0>, int a2@<W2>, char a3@<W3>, char a4@<W4>, int a5@<W5>, int a6@<W8>, int8x16_t a7@<Q0>, int8x8_t a8@<D1>)
{
  int v19 = a5 - 8;
  int v20 = a6 + v19 + 8;
  uint64_t v21 = v20 + (a2 ^ (v11 + 2165));
  v23.val[0].i64[0] = ((_BYTE)v20 + (a2 ^ (v11 + 117))) & 0xF;
  v23.val[0].i64[1] = (v16 + (_BYTE)v19 + 8) & 0xF;
  v23.val[1].i64[0] = v20 & 0xF;
  v23.val[1].i64[1] = (v15 + (_BYTE)v19 + 8) & 0xF;
  v23.val[2].i64[0] = (v14 + (_BYTE)v19 + 8) & 0xF;
  v23.val[2].i64[1] = (v13 + (_BYTE)v19 + 8) & 0xF;
  v23.val[3].i64[0] = (a4 + (_BYTE)v19 + 8) & 0xF;
  v23.val[3].i64[1] = (a3 + (_BYTE)v19 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v18 - 216) + v21) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v10 + (v21 & 0xF) - 7), *(int8x8_t *)(a1 + v21)), veor_s8(*(int8x8_t *)(v8 + (v21 & 0xF) - 7), *(int8x8_t *)((v21 & 0xF) + v9 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v23, a7), a8)));
  return (*(uint64_t (**)(void))(*(void *)(v18 - 232) + 8 * ((3693 * (v12 == v19)) ^ v17)))();
}

uint64_t sub_22B36E1C4@<X0>(uint64_t a1@<X0>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (a2 + v5)) = *(unsigned char *)(v7 + (a2 + v5)) ^ *(unsigned char *)(a3
                                                                                                 + ((a2 + v5) & 0xFLL)) ^ *(unsigned char *)(v4 + ((a2 + v5) & 0xFLL)) ^ *(unsigned char *)(((a2 + v5) & 0xFLL) + v3 + 2) ^ (-51 * ((a2 + v5) & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v8 + 8 * ((22 * (a2 + 1 + v5 >= (((v6 - 3037) | 0x415) ^ 0x74Fu))) ^ v6)))();
}

uint64_t sub_22B36E240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 120) = a20;
  *(void *)(v26 - 112) = a22;
  *(_DWORD *)(v26 - 128) = v24
                         + 1501
                         + 1503746353
                         * ((-426940065 - ((v26 - 144) | 0xE68D695F) + ((v26 - 144) | 0x197296A0)) ^ 0x3F135416);
  *(void *)(v26 - 144) = a20;
  *(void *)(v26 - 136) = a21;
  (*(void (**)(uint64_t))(v22 + 8 * (v24 | 0x884)))(v26 - 144);
  *(_DWORD *)(v26 - 128) = v24 + 1501 + 1503746353 * ((v26 - 144) ^ 0x2661C2B6);
  *(void *)(v26 - 120) = a20;
  *(void *)(v26 - 112) = a22;
  *(void *)(v26 - 144) = a20;
  *(void *)(v26 - 136) = a21;
  (*(void (**)(uint64_t))(v22 + 8 * (v24 + 2180)))(v26 - 144);
  int v27 = 1866394843 * ((~((v26 - 144) | 0xF667090F) + ((v26 - 144) & 0xF667090F)) ^ 0xE38FC104);
  *(void *)(v26 - 136) = v25;
  *(_DWORD *)(v26 - 144) = v24 - v27 - 549;
  *(_DWORD *)(v26 - 140) = v23 - 484148410 + v27 + 1;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v24 ^ 0x1764)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((*(_DWORD *)(v26 - 128) == (v24 ^ 0x435) - 1685947024)
                                              * ((v24 - 1035) ^ 0x3B0)) ^ v24)))(v28);
}

uint64_t sub_22B36E3B4(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * ((217 * ((v1 ^ 0xE3812CCD) != ((a1 - 838) | 0x2A1) - 2995)) ^ a1)))(1538799125);
}

uint64_t sub_22B36E408@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) = 356027008;
  *(void *)(v3 - 0x717BE438C5D07C54) = v2;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) = ((v4 - 644) | 0x284) + *(_DWORD *)(a2 - 0x25B0145E0CD22388) - 428;
  *(void *)(v3 - 0x717BE438C5D07C44) = v2 + 256;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07C34) = v2 + 512;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07C24) = v2 + 768;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07C14) = v2 + 1024;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07C04) = v2 + 1280;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07BF4) = v2 + 1536;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07BE4) = v2 + 1792;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07BD4) = v2 + 2048;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07BC4) = v2 + 2304;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07BB4) = v2 + 2560;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07BA4) = v2 + 2816;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07B94) = v2 + 3072;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07B84) = v2 + 3328;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07B74) = v2 + 3584;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(void *)(v3 - 0x717BE438C5D07B64) = v2 + 3840;
  *(_DWORD *)(a2 - 0x25B0145E0CD22388) += 256;
  *(_DWORD *)(result + 24) = -604050357;
  return result;
}

uint64_t sub_22B36E684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(void))(a6 + 8 * ((((a36 ^ 0xBAB) - 3144) * (v36 == -604050357)) ^ (a36 - 625))))();
}

uint64_t sub_22B36E6BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (int)((((v15 - 1948518212) & 0xF5F54EFF ^ (a7 - 37))
                                     * (a14 + a3 - (unint64_t)(v14 + a2) < 0x10)) ^ v15)))();
}

uint64_t sub_22B36E70C()
{
  int v5 = ((v1 ^ (v0 - 485)) + 539919468) ^ (LODWORD(STACK[0x200]) - ((2 * LODWORD(STACK[0x200])) & 0x7C) - 66);
  char v6 = ((2 * *(unsigned char *)(STACK[0x208] + 12)) & 0xD2) + (*(unsigned char *)(STACK[0x208] + 12) ^ 0xE9);
  *(_DWORD *)(v4 - 160) = (v1 + 154045340) ^ (1948972247
                                            * ((-2 - ((~(v4 - 168) | 0x6723DBC9) + ((v4 - 168) | 0x98DC2436))) ^ 0xD2BD2E27));
  *(unsigned char *)(v4 - 156) = -41 * ((-2 - ((~(v4 + 88) | 0xC9) + ((v4 + 88) | 0x36))) ^ 0x27) + v6 + 0x80;
  *(unsigned char *)(v4 - 164) = -41 * ((-2 - ((~(v4 + 88) | 0xC9) + ((v4 + 88) | 0x36))) ^ 0x27) + 23 * v5 + 90;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0x1619)))(v4 - 168);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((87 * (*(_DWORD *)(v4 - 168) != v2)) ^ v1)))(v7);
}

uint64_t sub_22B36E814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a7 + 1 == ((v7 + 1424 + a5) & a6) - 1562) * (((v7 - 32) | 0x20) - 285)) ^ (v7 + 1424))))();
}

uint64_t sub_22B36E9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  uint64_t v36 = *(_DWORD *)(a19 - 0x2970AB8229FC3CEALL) & 0x3F ^ (((a35 - 2059890184) & 0x7AC76D6Eu) - 3091);
  *(unsigned char *)(a19 - 0x2970AB8229FC3D2ELL + v36) = -86;
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * (((v36 > 0x37) * ((a35 - 374886392) & 0x16584FF7 ^ 0xAD9)) ^ (a35 - 3183))))(a32);
}

uint64_t sub_22B36EA08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1295
                                * (*(_DWORD *)(a1 + 48 * v3 + 36) + 1765828779 < (((v1 ^ 0x5C) + 468144078) & 0xE418AFFD ^ 0x800001B6))) ^ v1 ^ 0x5C)))();
}

uint64_t sub_22B36EA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = (a8 - 187705840);
  *(unsigned char *)(v13 + v15) = *(unsigned char *)(v11 + (v15 & 0xF)) ^ *(unsigned char *)(v8 + v15) ^ *(unsigned char *)((v15 & 0xF) + v10 + 2) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ (45 * (v15 & 0xF));
  return (*(uint64_t (**)(void))(v14 + 8 * ((15 * (a8 - 1 != (a7 ^ 0x685 ^ v9))) ^ (a7 - 1620))))();
}

uint64_t sub_22B36EAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = *(void *)(v14 + 16);
  *(_DWORD *)(v12 - 0x1E8FA52FDE65BD14) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((v16 == 0x281D12643933BF23) * (a9 ^ 0xB49)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, v13, a12);
}

uint64_t sub_22B36EBC8@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = a1 == (((166 * (v1 ^ 0xA19) + 269748919) | 0x81B000) ^ 0x1095BF41);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v3) | (32 * v3)) ^ v1)))();
}

uint64_t sub_22B36EC1C@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v5) ^ a1)))();
}

void sub_22B36EC50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  unsigned int v53 = (a3 + 453) ^ 0xF6A6E00C ^ *a33;
  int v54 = 1948972247
      * ((~((v52 - 136) ^ 0x40F6A011 | 0x970D508E) + (((v52 - 136) ^ 0x40F6A011) & 0x970D508E)) ^ 0x9D9AFA8E);
  *(_DWORD *)(v52 - 136) = a13 ^ v54;
  *(void *)(v52 - 128) = a51;
  *(_DWORD *)(v52 - 116) = v53 - v54;
  (*(void (**)(uint64_t))(v51 + 8 * (a3 + 3968)))(v52 - 136);
  JUMPOUT(0x22B36ED30);
}

uint64_t sub_22B36EDD4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v2 - 240) | 0x110) ^ 0xA26) + ((v2 - 1525288733) & 0x5AEA0F3C)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B36EE24()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 + 310)))();
  *uint64_t v0 = v3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                                + 8
                                                                                * ((v3 == 0) | (16 * (v3 == 0)) | v1)))(v3, v4, v5, v6, v7);
}

void sub_22B36EEA8()
{
}

uint64_t sub_22B36EEB4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((800 * (v0 + v3 + 1 < 94 * (v4 ^ 0x904u) + v1)) ^ v4)))();
}

uint64_t sub_22B36EEF0@<X0>(int a1@<W8>)
{
  STACK[0x3B0] += ((a1 - 1990) | 0xC40u) ^ 0xFFFFFFFFFFFFF3A3;
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 + 1263) * (v1 == 1406280113)) ^ a1)))();
}

uint64_t sub_22B36EF4C@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3))
                                           - ((2 * *(unsigned char *)(v2 + (v5 + v3))) & 0x55)
                                           + 42;
  return (*(uint64_t (**)(void))(v6 + 8 * ((31 * ((v4 ^ (v5 - 1 == a1)) & 1)) ^ v4)))();
}

uint64_t sub_22B36EF94()
{
  LODWORD(STACK[0x260]) = 1049105737;
  return sub_22B36EFEC(3451);
}

uint64_t sub_22B36EFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v19 = (*(unsigned __int8 *)(v9 + v11 - 0x3010D1DCEB4FBDC9) ^ v13)
      - *(unsigned __int8 *)(v10 + v11 - 0x3010D1DCEB4FBDC9);
  uint64_t v20 = v11 + ((v8 - 2063089362) & 0x7AF83D5B) - 3154;
  BOOL v22 = (v19 ^ v16) + v15 + (v17 & (2 * v19)) != v14 || v20 == a8 + 20;
  return (*(uint64_t (**)(void))(v18 + 8 * ((v22 * v12) ^ v8)))();
}

void sub_22B36F064()
{
}

void sub_22B36F06C()
{
}

uint64_t sub_22B36F074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,unsigned int a21)
{
  if (a21 < 0xF8CD6016 != (a19 - 1653706121) < 0xF8CD6016) {
    BOOL v22 = (a19 - 1653706121) < 0xF8CD6016;
  }
  else {
    BOOL v22 = a19 - 1653706121 > a21;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21
                                                                                         + 8 * ((218 * v22) ^ 0x45A)))(a1, a2, 1401283951, 2762019361, a5, 2893683640);
}

uint64_t sub_22B36F080@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((16 * (v1 + 1 != v2 + 60)) | (32 * (v1 + 1 != v2 + 60))) ^ a1)))();
}

uint64_t sub_22B36F13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,unsigned int a22)
{
  if (a22 < a21 != a13 + 216578285 < (((v23 - 1564) | 0xA82) ^ 0x61CC50BDu)) {
    BOOL v24 = a13 + 216578285 < (((v23 - 1564) | 0xA82) ^ 0x61CC50BDu);
  }
  else {
    BOOL v24 = a13 + 216578285 > a22;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((15 * ((v23 ^ 0xF5 ^ v24) & 1)) ^ (v23 - 1155))))();
}

uint64_t sub_22B36F144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * ((90 * ((v23 ^ (v25 + 340) ^ 0xD0F8B5AC) + a23 < 0x10)) ^ (v23 + a8))))();
}

uint64_t sub_22B36F188()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(unsigned char *)(STACK[0x208] + 5) == 1) * ((v0 + 511) ^ 0x7A)) ^ v0)))();
}

uint64_t sub_22B36F1B8(uint64_t a1)
{
  uint64_t v7 = *(void **)(v1 + 16);
  unsigned int v12 = (v5 - 775) ^ (1292559617 * ((2 * (v11 & 0x5829E588) - v11 + 668342899) ^ 0x8085721A));
  v11[1] = &v10;
  __int16 v13 = -6911 * ((2 * ((unsigned __int16)v11 & 0xE588) - (unsigned __int16)v11 + 6771) ^ 0x721A) + 17209;
  uint64_t result = (*(uint64_t (**)(void *))(v4 + 8 * (v5 + 1358)))(v11);
  v3[130] = HIBYTE(v10) % 0xAu - 2 * ((HIBYTE(v10) % 0xAu) & 3) - 13;
  *(_DWORD *)a1 = 1498173510;
  *(unsigned char *)(a1 + 4) = v2 ^ 0x3F;
  *(_WORD *)(a1 + 5) = 257;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = 0x4000000;
  *(_WORD *)(a1 + 12) = 2;
  *(unsigned char *)(a1 + 14) = v3[130] & (v5 + 91) ^ 3;
  *(unsigned char *)(a1 + 15) = -69;
  v3[1] = 44;
  v3[131] = 0;
  *uint64_t v7 = a1;
  uint64_t v9 = *(unsigned char **)(v1 + 40);
  **(_DWORD **)(v1 + 24) = 16;
  *uint64_t v9 = 1;
  *(_DWORD *)(v1 + 32) = -604050357;
  return result;
}

uint64_t sub_22B36F2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,int a22,unsigned int a23,unint64_t *a24,uint64_t a25)
{
  unsigned int v28 = 1328090399 * ((&a20 & 0x3AF33063 | ~(&a20 | 0x3AF33063)) ^ 0x3ADFABA6);
  a23 = v28 ^ 0x881FFD3C;
  a20 = (v25 - 1653802913) ^ v28;
  a21 = -162371145 - v28;
  a24 = &STACK[0x25ABA05A3795B12A];
  a25 = a14;
  uint64_t v29 = (*(uint64_t (**)(int *))(v27 + 8 * (v25 ^ 0x1818u)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * (((a22 == v26) * (((v25 - 1483) | 0x500) ^ 0x221)) ^ v25)))(v29);
}

uint64_t sub_22B36F3B0(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v14 = a1 ^ (v10 + 3961);
  int v15 = v8 + v7;
  int v16 = v15 + v9;
  if ((v15 + v9) <= 0x40) {
    int v16 = a2;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v14 - v12 - 2291) ^ (a7 + 147)) + 101) * (v13 - v15 >= (a3 + v16))) ^ v14)))();
}

uint64_t sub_22B36F400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_OWORD *)(a4 + ((((v5 - 1493) | 0x103u) ^ 0xFFFFFEBCLL) & (v6 + a5))) = *v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((3582 * (((v7 + 1) & 0x1FFFFFFF0) == 16)) ^ v5)))();
}

uint64_t sub_22B36F464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30)
{
  LOBYTE(STACK[0xC88]) = v30 + 127;
  int v35 = 1503746353 * ((v34 - 152) ^ 0x2661C2B6);
  uint64_t v36 = v30;
  STACK[0xD80] = a30;
  *(_DWORD *)(v34 - 128) = v32 - v35 + 1417;
  *(_DWORD *)(v34 - 152) = v35 + 1331781508;
  STACK[0xD88] = v31;
  (*(void (**)(uint64_t))(v33 + 8 * (v32 ^ 0xED1)))(v34 - 152);
  STACK[0xD80] = a29 + ((v32 - 1281108617) & 0x4C5C2BCB) + 16 * (int)v36 + 994325933;
  STACK[0xD78] = v31;
  *(_DWORD *)(v34 - 136) = (v32 + 118) ^ (731811679
                                        * ((-93209456 - ((v34 - 152) | 0xFA71BC90) + ((v34 - 152) | 0x58E436F)) ^ 0x4C78E52B));
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v32 ^ 0xEDB)))(v34 - 152);
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * (v32 ^ (1863 * (v36 == 1280031881)))))(v37);
}

uint64_t sub_22B36F5A8(uint64_t result)
{
  int v1 = 669690590;
  switch(((result ^ 0x5F) & 0xBA | ~(result ^ 0x5F | 0xBA)) ^ *(unsigned char *)result ^ 0x73)
  {
    case 'F':
      int v2 = 0x4000000;
      goto LABEL_3;
    case 'G':
      int v2 = -2113929216;
      goto LABEL_3;
    case 'H':
      int v2 = -1744830464;
      goto LABEL_3;
    case 'I':
      int v2 = 335544320;
LABEL_3:
      if (*(_DWORD *)(*(void *)(result + 16) + 8) == v2) {
        int v1 = 669732671;
      }
      else {
        int v1 = 669690590;
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_22B36F63C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((14
                                * (a4 + v4 + (a1 ^ 0xB12u) + 570430979 + 1550 < (((a1 ^ 0x7A2) + 1031583167) & 0xC2834BFD ^ 0xB75))) | a1 ^ 0x7A2)))();
}

uint64_t sub_22B36F6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LOBYTE(STACK[0x250]) = *(unsigned char *)(a4 + v6);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 + 2599) * ((v4 + 38) < 4)) ^ v5)))();
}

uint64_t sub_22B36F6D8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((35 * (((v0 == v1) ^ (v2 - 115)) & 1)) ^ (v2 - 2059))))();
}

uint64_t sub_22B36F70C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (v4 ^ 0x51F | (((a4 << ((v4 ^ 0x1F) - 97)) & (v4 ^ 0xBBFFB783) ^ 0x234424A4)
                                             + (a4 ^ 0xEE5DCCAD)
                                             + 1072950698 == 502516777))))();
}

uint64_t sub_22B36F778(char a1, int8x16_t a2, int8x8_t a3, uint64_t a4, char a5, int a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v62 = (a6 + v60 - 8);
  v64.val[0].i64[0] = v62 & v61;
  v64.val[0].i64[1] = ((_BYTE)a6 + v59 - 8) & 0xF;
  v64.val[1].i64[0] = ((_BYTE)a6 + v58 - 8) & 0xF;
  v64.val[1].i64[1] = ((_BYTE)a6 + v54 - 8) & 0xF;
  v64.val[2].i64[0] = ((_BYTE)a6 + v57 - 8) & 0xF;
  v64.val[2].i64[1] = ((_BYTE)a6 + a5 - 8) & 0xF;
  v64.val[3].i64[0] = ((_BYTE)a6 + a1 - 8) & 0xF;
  v64.val[3].i64[1] = ((_BYTE)a6 + v55 - 8) & 0xF;
  *(int8x8_t *)(a10 + v62) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v51 + (v62 & v61) - 7), *(int8x8_t *)(a10 + v62)), veor_s8(*(int8x8_t *)(v52 + (v62 & v61) - 7), *(int8x8_t *)((v62 & v61) + v53 - 4))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v64, a2), a3)));
  return (*(uint64_t (**)(void))(a51 + 8 * ((28 * (a6 != v56 + 8)) ^ a9)))();
}

uint64_t sub_22B36F7A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ 0x12) + 1965) ^ (v0 + 2004)) * (STACK[0x208] == 0)) ^ v0)))();
}

uint64_t sub_22B36F7D4()
{
  BOOL v5 = v1 + v0 - 2046806894 < (((v3 + 699) | 0x50) ^ 0x65C);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((4 * v5) | (16 * v5) | v3)))(v2);
}

uint64_t sub_22B36F828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * ((((a5 + 1 + v7) > 0x4F) | (4
                                                                                               * ((a5 + 1 + v7) > 0x4F))) ^ v6)))(v5, a4);
}

void sub_22B36F8F8(uint64_t a1)
{
  int v1 = 1292559617 * (((a1 | 0x7DDFA66C) - a1 + (a1 & 0x82205993)) ^ 0xDA8CCE05);
  __asm { BRAA            X9, X17 }
}

void sub_22B36F9CC(_DWORD *a1@<X8>)
{
  *a1 = v1;
  JUMPOUT(0x22B36F9D8);
}

uint64_t sub_22B36FA14@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X8>)
{
  int v18 = (a1 ^ v12) & (v8 ^ v12) | (v8 ^ v9) & (a2 ^ v12);
  uint64_t v19 = ((a6 + 701) ^ (unint64_t)(v13 - 555)) + v7;
  int v20 = (v17 ^ v12)
      + v11
      + v18
      + *(_DWORD *)(a4 + 4 * v19)
      + (*(_DWORD *)(a7 + 4 * (*(unsigned char *)(a3 + v19) - 53)) ^ v10);
  unsigned int v21 = (v20 + v12 - (v14 & (2 * v20))) ^ v12;
  int v22 = ((v21 << (*(unsigned char *)(a5 + v19) - 113)) | (v21 >> (113 - *(unsigned char *)(a5 + v19)))) + (a1 ^ v12);
  return (*(uint64_t (**)(void, uint64_t))(v15 + 8 * ((1492 * (v7 + 1 == v16 + 32)) ^ a6)))(v22 + v12 - (v14 & (2 * v22)), a1);
}

uint64_t sub_22B36FAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v38 = (a5 ^ 0x593) - v36;
  int v39 = 1948972247 * ((-1960743199 - ((v37 - 120) | 0x8B216EE1) + ((v37 - 120) | 0x74DE911E)) ^ 0xC14064F0);
  *(_DWORD *)(v37 - 120) = v39 + a14 - 332430158;
  *(void *)(v37 - 112) = a11;
  *(_DWORD *)(v37 - 104) = a5 - v39 + 455;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a5 + 3963)))(v37 - 120);
  uint64_t v41 = a35 & 0x3F;
  *(&a26 + (v41 ^ 0x19)) = -86;
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * (int)((((v41 ^ 0x19) > 0x37) * (v38 ^ 0x81D14D6C)) ^ a5)))(v40);
}

uint64_t sub_22B36FC0C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 + 267) ^ 0x6B)))();
}

uint64_t sub_22B36FCEC@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((14
                                * (((*(unsigned __int8 *)(v5 + 4) - 247) ^ v4)
                                 + v2
                                 + (((*(unsigned __int8 *)(v5 + 4) - 247) << (((a1 + 34) & 0xDF) + 40)) & v3) != (((a1 + 58) | 0x40) ^ (a2 + 719)))) ^ a1)))();
}

uint64_t sub_22B36FD54@<X0>(int a1@<W8>)
{
  int v5 = v2 + v1;
  int v6 = v5 + 1686111765;
  if ((v5 + 1686111765) <= 0x40) {
    int v6 = 64;
  }
  BOOL v7 = !__CFADD__(v5 + ((a1 - 2515) ^ 0x648004D6), v3 + v6);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((v7 * ((a1 - 492) ^ 0xA9B)) ^ a1)))(2523581912);
}

uint64_t sub_22B36FDC0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v20 = (v12 ^ v18)
      + v11
      + ((a5 ^ v18) & (v9 ^ 0xEE6A98C6) | (v9 ^ (v18 + ((v13 - 978201189) & 0x3A4E29D7) - 2518)) & (a1 ^ v18))
      + *(_DWORD *)(a3 + 4 * (a8 + v17))
      + (*(_DWORD *)(v8 + 4 * (*(unsigned char *)(a2 + a8 + v17) - 53)) ^ v16);
  unsigned int v21 = (v20 + v18 - (v15 & (2 * v20))) ^ v18;
  int v22 = ((v21 << (*(unsigned char *)(v10 + a8 + v17) - 113)) | (v21 >> (113 - *(unsigned char *)(v10 + a8 + v17)))) + (a1 ^ v18);
  return (*(uint64_t (**)(void))(v14
                                           + 8 * (((8 * (a8 + 1 == v19 + 16)) | (16 * (a8 + 1 == v19 + 16))) ^ v13)))(v22 + v18 - (v15 & (2 * v22)));
}

void sub_22B36FEAC()
{
}

uint64_t sub_22B36FEC8(uint64_t a1, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  uint64_t v12 = v10 - 0x7CFCA23F2DDD06DFLL + (a4 + a3 + a5) + 1054;
  unint64_t v13 = v6 - (v10 - 0x7CFCA23F2DDD02C1) - 0x13B3B3FD54DF0991;
  uint64_t v14 = ((_BYTE)a4 + (_BYTE)a3 + (_BYTE)a5) & 0xF;
  unint64_t v15 = v14 + v9 - v12;
  uint64_t v16 = (v14 | v7) - v12;
  unint64_t v17 = v14 + v8 - v12;
  BOOL v21 = v15 < 0x10 || v13 < (unint64_t)((a6 - 3668) | 0x441) - 1105 || v16 + (a6 ^ 0xE71uLL) < 0x10 || v17 < 0x10;
  return (*(uint64_t (**)(void))(v11 + 8 * (int)((253 * v21) ^ a6)))();
}

uint64_t sub_22B36FF78(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((603 * (v2 ^ 0x780)) ^ 0xE1B) * ((a2 + a1 + 193245442) < 8)) ^ v2 ^ 0x25A)))();
}

uint64_t sub_22B3700F0(int a1, int a2, int a3, double a4, double a5, double a6, double a7, int8x16_t a8, int8x16_t a9)
{
  int v14 = v12 + a2;
  uint64_t v15 = (a1 + v14);
  int8x16_t v16 = vrev64q_s8(*(int8x16_t *)(v10 + v15 - 15));
  int8x16_t v17 = vextq_s8(v16, v16, 8uLL);
  int8x16_t v18 = vrev64q_s8(*(int8x16_t *)(v10 + v15 - 31));
  int8x16_t v19 = vextq_s8(v18, v18, 8uLL);
  uint64_t v20 = v9 + v15;
  int8x16_t v21 = vrev64q_s8(vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), a8)), a9));
  *(int8x16_t *)(v20 - 15) = vextq_s8(v21, v21, 8uLL);
  int8x16_t v22 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a8)), a9));
  *(int8x16_t *)(v20 - 31) = vextq_s8(v22, v22, 8uLL);
  return (*(uint64_t (**)(void))(v13 + 8 * ((44 * (a3 == v14)) ^ v11)))();
}

uint64_t sub_22B3700F8(int a1, __n128 a2, uint64_t a3, int a4, uint64_t a5, __n128 *a6, uint64_t a7)
{
  a6[-1] = a2;
  *a6 = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a7 == 0) * a4) ^ a1)))();
}

uint64_t sub_22B370120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v10 = v4 + v6;
  *(unsigned char *)(v10 + a4 - 1) = v7;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 < 0x40) * v8) ^ (46 * (v5 ^ 0x8AB)))))();
}

uint64_t sub_22B370168@<X0>(int a1@<W8>)
{
  *uint64_t v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 + 1942) ^ 0xFFFFF6EB) + v1 != 448789617) * ((7 * ((a1 + 317) ^ 0x2AC)) ^ 0xFB)) ^ (a1 + 317))))();
}

uint64_t sub_22B3701C8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unint64_t a4@<X8>)
{
  uint64_t v9 = a3 + (v4 ^ 0x5DEu) + a2 + a1 - 1887;
  unint64_t v10 = v9 + a4 + 1;
  uint64_t v11 = (a2 + a1) & 0xF;
  unint64_t v12 = v5 + v11 - v9;
  unint64_t v13 = v5 + v11 + 1;
  unint64_t v14 = v11 + ((v4 - 1294132899) & 0x4D22EDF3) - v9 + v6 - 2512;
  unint64_t v15 = v11 + v6 + 3;
  unint64_t v16 = v7 + v11 + 1 - v9;
  unint64_t v17 = v11 + v7 + 2;
  BOOL v19 = v13 > a4 && v12 < v10;
  if (v15 > a4 && v14 < v10) {
    BOOL v19 = 1;
  }
  int v22 = v17 > a4 && v16 < v10 || v19;
  return (*(uint64_t (**)(void))(v8 + 8 * ((59 * (v22 ^ 1)) ^ v4)))();
}

uint64_t sub_22B370308()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 == ((v0 - 346707406) & 0x14AA526D ^ 0x5E)) * (((v0 + 322) | 0x88) - 1412)) ^ v0)))();
}

uint64_t sub_22B370364@<X0>(int a1@<W8>)
{
  int v7 = a1 ^ 0xB14;
  int v8 = 1948972247 * ((((v6 - 128) | 0xEB933F9B) - ((v6 - 128) | 0x146CC064) + 342671460) ^ 0x5E0DCA75);
  *(void *)(v6 - 128) = *v1 + 56 * *(unsigned __int8 *)*v1 + 24;
  *(void *)(v6 - 104) = &STACK[0x1C88CB57747EAF31];
  *(_WORD *)(v6 - 116) = 27086 - -2857 * ((((v6 - 128) | 0x3F9B) - ((v6 - 128) | 0xC064) - 16284) ^ 0xCA75);
  *(_DWORD *)(v6 - 112) = -1493880289 - v8;
  *(_DWORD *)(v6 - 120) = v8 + (a1 ^ 0xB14) - 482;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 ^ 0x1E21)))(v6 - 128);
  int v9 = 1734664879 * ((((2 * (v6 - 128)) | 0x427E239A) - (v6 - 128) - 557781453) ^ 0xEE439D7);
  *(_DWORD *)(v6 - 128) = v7 + 306 + v9;
  *(void *)(v6 - 104) = v5;
  *(_DWORD *)(v6 - 112) = v9 + 1646535803;
  *(void *)(v6 - 120) = &STACK[0x1C88CB57747EAF31];
  (*(void (**)(uint64_t))(v2 + 8 * (v7 + 2751)))(v6 - 128);
  int v10 = 1734664879 * ((((2 * (v6 - 128)) | 0xA9235AF6) - (v6 - 128) + 728650373) ^ 0xFB4A8561);
  *(void *)(v6 - 104) = v3;
  *(_DWORD *)(v6 - 128) = v7 + 306 + v10;
  *(void *)(v6 - 120) = &STACK[0x1C88CB57747EAF31];
  *(_DWORD *)(v6 - 112) = v10 + 1564619019 + v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v7 + 2751)))(v6 - 128);
  *(void *)(v6 - 112) = v6 - 148;
  *(_DWORD *)(v6 - 120) = (v7 - 1205) ^ (1438293641
                                       * ((((v6 - 128) | 0x25A26965) - ((v6 - 128) & 0x25A26965)) ^ 0x9D653C1A));
  *(void *)(v6 - 128) = &STACK[0x1C88CB57747EAF31];
  (*(void (**)(uint64_t))(v2 + 8 * (v7 + 2821)))(v6 - 128);
  return (*(uint64_t (**)(void))(v2 + 8 * v7))(*(void *)(v2 + 8 * v7));
}

uint64_t sub_22B3705E8()
{
  unsigned int v7 = v2 - 2062384890;
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v5 + (((v3 ^ 0x580) + 1064696) | 0x81C10E69) - 1466) * (v6 - v0 - v1 + v7 < 0xF)) ^ v3 ^ 0x580)))();
}

uint64_t sub_22B370670()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_22B370694(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((853 * ((a2 + 1 + v2) < 0x28)) ^ a1)))();
}

uint64_t sub_22B3706B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(unsigned char *)(v3 + 6) == 1) * (((v1 | v0) ^ 0xFFFFFC9F) + ((v1 | v0) ^ 0x36A))) ^ (v1 | v0))))();
}

void sub_22B3706F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unint64_t v5 = STACK[0x288];
  int v6 = (char *)&STACK[0x560] + STACK[0x240] + ((v4 + 1340902378) & 0xB0137FDF ^ 0xC29C426D25E6915DLL);
  STACK[0x248] = (unint64_t)v6;
  STACK[0x228] = (unint64_t)(v6 + 2);
  unsigned int v7 = (a4 + 353629088) & 0xEAEC0B5F;
  LODWORD(STACK[0x230]) = v7;
  LODWORD(STACK[0x238]) = v7 + 633401410;
  STACK[0x258] = v5;
  JUMPOUT(0x22B3707E8);
}

void sub_22B370824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,unint64_t a27)
{
  *(_DWORD *)(v29 - 192) = (v27 + 1017761807) ^ (1948972247
                                               * ((2 * ((v29 - 192) & 0x498EA068) - (v29 - 192) + 913399703) ^ 0x83EFAA79));
  (*(void (**)(uint64_t))(v30 + 8 * (v27 + 3434)))(v29 - 192);
  LODWORD(STACK[0x258]) = LODWORD(STACK[0x258]) + v27 + 2415 - 3154;
  LOBYTE(STACK[0x195C]) = (-81 * ((v29 + 64) ^ 0x1A)) ^ 0x6A;
  STACK[0x1940] = a26;
  STACK[0x1950] = a27;
  *(_DWORD *)(v29 - 184) = (v27 + 2477) ^ (1734664879 * ((v29 - 192) ^ 0x2FDB281A));
  (*(void (**)(uint64_t))(STACK[0x270] + 8 * (v27 + 3338)))(v29 - 192);
  LODWORD(STACK[0x290]) = *(_DWORD *)(v29 - 168);
  unint64_t v31 = (char *)&a9 + v28 - 0x3D63BD92DA195D22;
  STACK[0x240] = (unint64_t)(v31 + 2048);
  STACK[0x248] = (unint64_t)(v31 + 2176);
  STACK[0x250] = (unint64_t)(v31 + 2304);
  JUMPOUT(0x22B35298CLL);
}

uint64_t sub_22B370914()
{
  uint64_t v7 = 4 * (v0 + 1 + v4);
  unsigned int v8 = *(_DWORD *)(v3 + 4 * (v0 + v4)) ^ 0xD3A0F633 ^ ((*(_DWORD *)(v3 + 4 * (v0 + v4)) >> 30)
                                                                     - 744425933
                                                                     - 2
                                                                     * (*(_DWORD *)(v3 + 4 * (v0 + v4)) >> 30));
  unsigned int v9 = (*(_DWORD *)(v3 + v7) ^ 0x92C354E6 ^ (1664525 * v8 - 1832692506 - ((3329050 * v8) & 0x2586A9CC)))
     + *(_DWORD *)(STACK[0x238] + 4 * (v1 - 237182554));
  *(_DWORD *)(v3 + v7) = v1 + (v9 ^ 0xCFF3F69F) + ((2 * v9) & 0x9FE7ED3E) + 568912647;
  uint64_t v10 = 1328090399
      * ((~((v6 - 152) | 0x253C474AE11D69EELL) + ((v6 - 152) & 0x253C474AE11D69EELL)) ^ 0x3DC3F89E131F22BLL);
  uint64_t v11 = v6 - 152;
  *(void *)(v11 + 24) = v10 + 3877776614;
  *(_DWORD *)(v6 - 120) = -1328090399 * ((~((v6 - 152) | 0xE11D69EE) + ((v6 - 152) & 0xE11D69EE)) ^ 0xE131F22B);
  *(_DWORD *)(v6 - 152) = v5 - v10 - 928717304;
  *(_DWORD *)(v6 - 148) = -1533762316 - v10 + v5;
  *(void *)(v11 + 40) = (v0 - 1659426160) ^ (unint64_t)v10;
  *(_DWORD *)(v6 - 136) = (v5 - 928717170) ^ v10;
  *(_DWORD *)(v6 - 144) = v5 - v10 - 928717273;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 + 1765)))(v6 - 152);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v6 - 140)))(v12);
}

uint64_t sub_22B370920()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v2 - 212) ^ (v0 > 0x7A928D12)) & 1) == 0) * ((v2 + 308) ^ 0xA55)) ^ (v2 + 247))))();
}

uint64_t sub_22B370978(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1734664879 * ((1796402612 - (a1 | 0x6B12EDB4) + (a1 | 0x94ED124B)) ^ 0xBB363A51);
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (v1 ^ 0xD2A))
          + ((((*(void *)(a1 + 8) == 0x19157D3ABD2659DELL) ^ (v1 + 17)) & 1 | (4
                                                                                                * (((*(void *)(a1 + 8) == 0x19157D3ABD2659DELL) ^ (v1 + 17)) & 1))) ^ v1)
          - 1))();
}

uint64_t sub_22B370A1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)(v5 + 8 + (a2 ^ (a1 + 285))) = a3;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 == 8) * v6) ^ v3)))();
}

uint64_t sub_22B370A28()
{
  char v7 = v11[4];
  char v8 = v11[5];
  char v9 = v11[6];
  int v10 = 1503746353 * ((((v6 - 168) | 0x82DEBCCC) - ((v6 - 168) | 0x7D214333) + 2099331891) ^ 0xA4BF7E7A);
  *(_DWORD *)(v6 - 168) = (v2 ^ 0x7732260E) - v10;
  *(_DWORD *)(v6 - 144) = v10 + v1 - 205;
  *(unsigned char *)(v6 - 164) = v9
                       - 49 * ((((v6 + 88) | 0xCC) - ((v6 + 88) | 0x33) + 51) ^ 0x7A)
                       + (~(2 * v9 + 2) | 0x1F)
                       + 114;
  *(void *)(v6 - 152) = v12;
  *(void *)(v6 - 160) = v13;
  *(unsigned char *)(v6 - 139) = v7 - 49 * ((((v6 + 88) | 0xCC) - ((v6 + 88) | 0x33) + 51) ^ 0x7A) - ((2 * v7) & 0xE7) - 13;
  *(unsigned char *)(v6 - 140) = (v8 ^ (v1 - 110))
                       - 49 * ((((v6 + 88) | 0xCC) - ((v6 + 88) | 0x33) + 51) ^ 0x7A)
                       + ((2 * v8) & 0xF3)
                       + 88;
  (*(void (**)(uint64_t))(v5 + 8 * (v1 + 1987)))(v6 - 168);
  *uint64_t v4 = -1;
  return v2 ^ v3;
}

uint64_t sub_22B370B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, int a17, uint64_t a18, int a19)
{
  unsigned int v23 = bswap32(*(_DWORD *)(v20 + 32));
  uint64_t v24 = (uint64_t)&v22[56 * *v22 + 0x43A7F87880AC35CFLL];
  unsigned int v25 = v23 & 0xFFFFFFF0 ^ 0x5FF5EBF7;
  unsigned int v26 = (2 * v23) & 0xBFEBD7E0;
  int v27 = 1988622253 * ((&a13 - 1278950078 - 2 * ((unint64_t)&a13 & 0xB3C4C542)) ^ 0x45DC85E2);
  a17 = (v21 ^ 0xD25) - v27 + v26 + v25 - 6294176;
  a19 = v27 + v21 - 1282;
  a13 = v20 + 56;
  a14 = v20 + 16;
  a16 = v20 + 56;
  a18 = v24;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v21 ^ 0x173C)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((2993 * (a15 == -604050357)) ^ v21)))(v28);
}

uint64_t sub_22B370C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v53 = ((a8 + 541) ^ v51 ^ (a51 - 595859816)) + (a13 & 0xB8F7FFE8);
  BOOL v55 = (((_BYTE)v53 + 12) & 0xF) != 0 || v53 == 22 * ((a8 + 541) ^ 0xA38) - 595857108;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * ((52 * ((((a8 + 541) ^ v55) & 1) == 0)) ^ ((int)a8 + 541))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_22B370CCC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, _OWORD *a8)
{
  *(_OWORD *)(v11 + (v8 + a4)) = *a8;
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((45
                                              * ((a2 ^ 0xFC ^ ((((a2 ^ 0x2Du) + 0x1FFFFF51ELL) & ((v9 ^ 0x743) + v10)) == 16)) & 1)) | a2 ^ 0x2D)))(16);
}

uint64_t sub_22B370D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((67
                                * (((*(_DWORD *)(*(void *)(a1 + 16) + v4) == v3) ^ (v2 + 109)) & 1)) ^ (v2 + 877))))();
}

uint64_t sub_22B370D80(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a4 ^ 0xCE1) + 2277) * (v4 == v5)) ^ (a4 - 2977))))();
}

uint64_t sub_22B370DAC(uint64_t a1, uint64_t a2, char a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((121
                                * (((v5 - a3 - 1) ^ (((v5 + 1363) ^ (a4 + 3323)) + v4 < v4 + a4)) & 1)) ^ v5)))();
}

uint64_t sub_22B370E04@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v1 - 1209861229)) = 1209861229
                                                          - v1
                                                          + ((1566083941
                                                            * (*(_DWORD *)(v3 + 4 * (v1 - 1209861230)) ^ (*(_DWORD *)(v3 + 4 * (v1 - 1209861230)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v1 - 1209861229)));
  unint64_t v5 = 1328090399 * ((((v4 - 144) | 0xCBD2F52790D46B6ALL) - ((v4 - 144) & 0xCBD2F52790D46B6ALL)) ^ 0x12CD721B6F070F50);
  *(void *)(v4 - 120) = v5 + 3729223391u;
  *(void *)(v4 - 104) = (v1 - 1775605133) ^ v5;
  *(_DWORD *)(v4 - 128) = (a1 + 727004130) ^ v5;
  *(_DWORD *)(v4 - 136) = a1 - v5 + 727004212;
  *(_DWORD *)(v4 - 112) = -1328090399 * ((((v4 - 144) | 0x90D46B6A) - ((v4 - 144) & 0x90D46B6A)) ^ 0x6F070F50);
  *(_DWORD *)(v4 - 144) = a1 - v5 + 727004322;
  *(_DWORD *)(v4 - 140) = 84358355 - v5 + a1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1618122436)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 132)))(v6);
}

uint64_t sub_22B370F2C(uint64_t result)
{
  int v1 = *(unsigned __int8 **)(result + 8);
  int v2 = (v1[3] << 24) | (v1[2] << 16) | (v1[1] << 8);
  *(_DWORD *)(result + 4) = (v2 | *v1) - 2 * ((v2 | *v1) & 0x494B868F ^ *v1 & 2) + 1229686413;
  return result;
}

void sub_22B370F78()
{
}

void sub_22B370F80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 2009815553 * ((-2 - ((~a1 | 0xA31E5195) + (a1 | 0x5CE1AE6A))) ^ 0x52157FD0);
  __asm { BRAA            X8, X17 }
}

void woqRTqq9PL5McfBs891()
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unsigned int v0 = (unint64_t *)*(&off_26DE9F480
                           + ((-121 * ((qword_2683EB0F0 - dword_268401440) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 - dword_268401440) ^ 0x4D))] ^ 0xAB])
                           + 278);
  unsigned __int8 v1 = -121 * (*v0 ^ qword_2683EB0F0 ^ 0x4D);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78 + v1 - 8) ^ 0x9B] ^ v1)
                + 122);
  unint64_t v3 = 2059148423 * (*v0 ^ (unint64_t)&v5 ^ 0xD2361EE8B96764DLL ^ *(void *)(v2 - 4));
  *unsigned int v0 = v3;
  *(void *)(v2 - 4) = v3;
  v6[0] = (1292559617 * (v6 ^ 0xA7536869)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v0) ^ 0x4D);
  uint64_t v4 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 - dword_268401440) ^ 0x4D)) ^ byte_22B48A680[byte_22B47E880[(-121 * ((qword_2683EB0F0 - dword_268401440) ^ 0x4D))] ^ 0x45])
               + 181)
     - 8;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_26DE9FFD8
                                                          + (*((unsigned __int8 *)off_26DE9FEC8 + v2
                                                                                                - 4) ^ 0x4Fu)
                                                          - 8) ^ v2)
                                      + 30136])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B371270()
{
  int v5 = 1948972247 * ((~((v3 - 192) | 0xDB3E2262) + ((v3 - 192) & 0xDB3E2262)) ^ 0x915F2873);
  STACK[0x1948] = v1;
  *(_DWORD *)(v3 - 176) = v2 - v5 - 2597;
  *(_DWORD *)(v3 - 192) = v5 + v0 + 904177343;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 ^ 0x3B1)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x2F0])(v6);
}

uint64_t sub_22B371310()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((((v0 - 3509) ^ 0xFBB) - 1716) ^ ((v0 - 3509) | 0x800)) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_22B371344@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v4 = STACK[0x534];
  *(void *)(a1 + 160) -= 1632;
  LODWORD(STACK[0x36C]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 == v2) * (((a2 - 1731453874) & 0x6733EEFB) - 2093)) ^ a2)))();
}

uint64_t sub_22B371394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == (v8 - 39)) * ((5 * (v8 ^ a7)) ^ a8)) ^ v8)))();
}

uint64_t sub_22B3713C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v19 = ((v16 - 2646) | 0x842)
      + (a16 ^ v17)
      + 1575673434
      + ((2 * (a16 ^ v17)) & 0xBBD5D166 ^ (((v16 - 1141447855) & 0xF6CF73E9) + 1295621206));
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((28
                                * (((2 * v19) & 0xDF7BCBFC ^ 0x9B51C164) + (v19 ^ 0x32570D4D) - 134578188 != 1740137970)) ^ v16)))();
}

uint64_t sub_22B37147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * (v5 | (16
                                                                                               * (v6 < (((v5 ^ 0xBF8) - 1211) ^ 0x5D4u))))))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_22B3714AC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v11 = a1 + v9 + v8 + a2;
  v12.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v12.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  uint64_t v13 = a7 + v11;
  uint64_t v14 = a5 + v11;
  int8x16_t v15 = veorq_s8(*(int8x16_t *)(v13 - 31), v12);
  *(int8x16_t *)(v14 - 15) = veorq_s8(*(int8x16_t *)(v13 - 15), v12);
  *(int8x16_t *)(v14 - 31) = v15;
  return (*(uint64_t (**)(void))(v10 + 8 * ((246 * ((v7 & 0xFFFFFFE0) == 32)) ^ v8)))();
}

uint64_t sub_22B371508@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((13 * (a1 + 1 == v4 + 4)) ^ v1)))(v2);
}

void sub_22B3715DC()
{
}

uint64_t sub_22B3716BC()
{
  unsigned int v4 = (v0 + 930752301) & 0xC885DB3F;
  if (v1 < 0) {
    int v1 = -v1;
  }
  if (v2 < 0) {
    int v2 = -v2;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((v4 - 621) ^ 0x747) * (v1 <= v2)) ^ v4)))();
}

uint64_t sub_22B37170C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v29 = 1948972247 * ((-1329612419 - ((v28 - 168) | 0xB0BFB97D) + ((v28 - 168) | 0x4F404682)) ^ 0xFADEB36C);
  *(void *)(v28 - 160) = a26;
  *(_DWORD *)(v28 - 168) = a12 + v29;
  *(_DWORD *)(v28 - 152) = v26 - v29 + 495;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v26 ^ 0xFDD)))(v28 - 168);
  unsigned int v31 = STACK[0x294] & 0x3F ^ (((v26 + 1310) | 0x802) - 3398);
  *((unsigned char *)&STACK[0x250] + v31) = -86;
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((2313 * (v31 > (((v26 - 57) | 0x21) ^ 0x10u))) ^ v26)))(v30);
}

uint64_t sub_22B371824()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((475 * (v0 >= 0xDE476EDF)) ^ 0x6D4)))();
}

uint64_t sub_22B371890(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((114 * (a2 + v4 + 268460545 >= ((a3 - 2849) ^ 0x22Fu))) ^ (a3 + 616))))();
}

uint64_t sub_22B3718E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,unint64_t a27)
{
  *(_DWORD *)(v28 - 192) = (v27 + 1017762298) ^ (1948972247
                                               * ((((v28 - 192) | 0x97421721) + (~(v28 - 192) | 0x68BDE8DE)) ^ 0x22DCE2CE));
  (*(void (**)(uint64_t))(v29 + 8 * (v27 ^ 0x10B7u)))(v28 - 192);
  *(_DWORD *)(v28 - 184) = (v27 + 2968) ^ (1734664879
                                         * ((((v28 - 192) | 0x1A94DCED) - ((v28 - 192) | 0xE56B2312) - 445963502) ^ 0x354FF4F7));
  STACK[0x1940] = a26;
  STACK[0x1950] = a27;
  LOBYTE(STACK[0x195C]) = (-81 * ((((v28 + 64) | 0xED) - ((v28 + 64) | 0x12) + 18) ^ 0xF7)) ^ 0x6A;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * (v27 + 3829)))(v28 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * (int)(((STACK[0x4B0] != 0)
                                                   * ((((v27 ^ 0xCAA) + 1421671340) & 0xAB42FADF) - 683)) ^ ((v27 ^ 0xCAA) - 522))))(v30);
}

void h5eRUOOOhxuaBmELCqQZZEcx()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  unsigned int v0 = *(&off_26DE9F480
       + ((-121 * (dword_2683EB198 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B497260[byte_22B48A380[(-121 * (dword_2683EB198 ^ 0x4D ^ qword_2683EB0F0))] ^ 0xAB])
       + 137);
  uint64_t v1 = (uint64_t)*(&off_26DE9F480
                + (*((unsigned char *)off_26DEA0388
                                                  + ~*((unsigned char *)off_26DE9F930
                                                                      + (-121
                                                                                        * ((qword_2683EB0F0 - *v0) ^ 0x4D)))
                                                  - 4) ^ (-121 * ((qword_2683EB0F0 - *v0) ^ 0x4D)))
                + 179);
  uint64_t v2 = (*(void *)(v1 - 4) ^ *v0) - (void)&v4;
  *unsigned int v0 = 2059148423 * v2 + 0x6612F2EFA3D4CE9BLL;
  *(void *)(v1 - 4) = 2059148423 * (v2 ^ 0xD2361EE8B96764DLL);
  v5[0] = (1292559617 * (((v5 | 0x57E95F8D) - (v5 & 0x57E95F8D)) ^ 0xF0BA37E4)) ^ 0x9B42BBAD;
  LOBYTE(v1) = -121 * ((*(_DWORD *)(v1 - 4) + *(_DWORD *)v0) ^ 0x4D);
  uint64_t v3 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_2683EB198) ^ 0x4D)) ^ byte_22B497460[~byte_22B48A480[(-121 * ((qword_2683EB0F0 + dword_2683EB198) ^ 0x4D))]])
               + 272)
     - 8;
  (*(void (**)(_DWORD *))&v3[8
                                      * (*((unsigned char *)off_26DE9FFD8
                                                          + (*((unsigned __int8 *)off_26DE9FEC8 + v1
                                                                                                - 4) ^ 3u)
                                                          - 8) ^ v1)
                                      + 30320])(v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B371C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  if (v54 == 2012680078)
  {
    uint64_t v73 = v53;
    (*(void (**)(char *))(v56 + 8 * (v55 ^ 0x79E)))((char *)*(&off_26DE9F480 + v55 - 1909) - 12);
    (*(void (**)(char *, unint64_t *, uint64_t))(v56 + 8 * (v55 ^ 0x79E)))((char *)*(&off_26DE9F480 + v55 - 1851) - 12, &STACK[0xCA8], 16);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (((v55 - 2153) * (a23 == -14)) ^ (v55 + 1779))))(a23, v65, v66, v67, v68, v69, v70, v71, a9, a10, a11, a12, a13, a14, a15, v73, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             &STACK[0xC18],
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41);
  }
  else
  {
    if (v54 == 2012680079)
    {
      int v58 = *(unsigned __int8 *)(a53 + 14);
      if (v58 == 2)
      {
        int v61 = 1734664879
            * ((1353607782 - ((v57 - 144) ^ 0xC9CCD1A0 | 0x50AE6A66) + ((v57 - 144) ^ 0xC9CCD1A0 | 0xAF519599)) ^ 0x49466C23);
        *(_DWORD *)(v57 - 144) = v61 + 433482616;
        *(void *)(v57 - 120) = a1 + 0x57B2EFF461B4416DLL;
        *(void *)(v57 - 112) = a1 + 0x615E76577373A59FLL;
        *(_DWORD *)(v57 - 128) = v55 - v61 + 1121;
        *(void *)(v57 - 136) = (char *)*(&off_26DE9F480 + (v55 ^ 0x807)) - 12;
        (*(void (**)(uint64_t))(v56 + 8 * (v55 ^ 0x1859)))(v57 - 144);
      }
      else if (v58 == 1)
      {
        int v62 = 1948972247 * ((((2 * (v57 - 144)) | 0x89355B84) - (v57 - 144) + 996495934) ^ 0x7104582C);
        *(void *)(v57 - 112) = a1 + 0x6A594E3C6075B486;
        unsigned int v63 = (char *)*(&off_26DE9F480 + v55 - 1686) - 8;
        *(void *)(v57 - 136) = a1 + 0x2E85F9F014BD954BLL;
        *(void *)(v57 - 120) = v63;
        *(_DWORD *)(v57 - 144) = v62 + 285781678;
        *(_DWORD *)(v57 - 140) = v55 - v62 + 1459;
        (*(void (**)(uint64_t))(v56 + 8 * (v55 ^ 0x1839)))(v57 - 144);
      }
      else if (*(unsigned char *)(a53 + 14))
      {
        int v64 = 1292559617 * ((((v57 - 144) | 0x2783B4B7) - ((v57 - 144) & 0x2783B4B7)) ^ 0x80D0DCDE);
        *(_DWORD *)(v57 - 128) = (v55 + 782) ^ v64;
        *(void *)(v57 - 120) = *(&off_26DE9F480 + v55 - 1823);
        *(void *)(v57 - 144) = a1 + 0x68E7B6E68C6821F5;
        *(void *)(v57 - 136) = a1 + 0x1CBC873A87398396;
        *(_DWORD *)(v57 - 112) = 846238602 - v64;
        (*(void (**)(uint64_t))(v56 + 8 * (v55 ^ 0x1858)))(v57 - 144);
      }
      else
      {
        int v59 = 1438293641 * ((v57 - 144) ^ 0xB8C7557F);
        *(void *)(v57 - 136) = a1 + 0x13B3B3FD54DF099FLL;
        *(_DWORD *)(v57 - 128) = v59 + 1625640575;
        *(_DWORD *)(v57 - 104) = v59 + v55 - 1038;
        int v60 = (char *)*(&off_26DE9F480 + (v55 ^ 0x87B)) - 8;
        *(void *)(v57 - 120) = a1 + 0x7CFCA23F2DDD02CFLL;
        *(void *)(v57 - 112) = v60;
        (*(void (**)(uint64_t))(v56 + 8 * (v55 + 1990)))(v57 - 144);
      }
    }
    return sub_22B3622CC();
  }
}

uint64_t sub_22B3720A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_26DE9FFD0
                                            - 8
                                            + 8
                                            * ((1216 * (*(_DWORD *)(a2 - 0x48A9B556C05DE57DLL) == 1801476217)) ^ 0xA77u)))(4294925278);
}

uint64_t sub_22B3720FC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 3277) | 0x8A4) ^ 0xABD) * (*(_DWORD *)(v2 - 0x19157D3ABD2659CELL) == 840667340)) ^ v0)))();
}

uint64_t sub_22B37214C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((492 * (v2 + v3 - 1 >= ((v1 + 1980) ^ v0))) ^ v1)))();
}

uint64_t sub_22B37218C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2195 * (v0 - 282068204 < (((v1 & (v2 + 195)) - 175) ^ 0x7FFFFE82u))) | v1 & (v2 + 195))))();
}

uint64_t sub_22B3721F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1112 * (((((a3 + 1202191259) & 0xBE7E517F) + v3) & v4) == 0)) ^ a3)))();
}

void sub_22B372238(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x281D12643933BF1FLL) != 920561905
    && *(_DWORD *)(*(void *)a1 - 0x281D12643933BF1FLL) != 920561905;
  int v1 = *(_DWORD *)(a1 + 8) ^ (1438293641 * (((a1 | 0xA30813C6) - (a1 & 0xA30813C6)) ^ 0x1BCF46B9));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B372364()
{
  unsigned int v3 = ((v1 + 1622867015) & 0x9F450B76) + v0 + 627867555;
  BOOL v4 = v3 > 0x46946A5E;
  if (v3 < ((v1 + 1503) | 0x410u) + 1184128523) {
    BOOL v4 = 1;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * !v4) | (8 * !v4)) ^ (v1 + 2334))))();
}

uint64_t sub_22B372398(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((a8 - 1023304287) ^ 0x3CFE5E7B) + ((a8 - 1023304287) & 0x3CFE5EF3))
                                * (*(_DWORD *)(v9 - 136) == a4)) ^ a8)))();
}

void sub_22B3723E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,uint64_t *a56,unint64_t a57,unint64_t *a58,uint64_t a59,uint64_t a60,uint64_t a61,unint64_t a62,unint64_t a63)
{
  LODWORD(STACK[0x220]) = 1836947069;
  a40 = *(void *)(v70 + 8 * (a4 - 3030));
  a53 = v68;
  *(void *)(a7 + 160) = v68 + 64;
  a56 = (uint64_t *)((char *)&a9
                  + v68
                  + (((a4 - 1605) | 0x120u) ^ 0xECC7953F0CF39C0DLL)
                  + 0x5C187C47B2648F2CLL
                  * !(((&a9 - 0x3D63BD92DA195D22) + (_BYTE)v68) & 1)
                  - 0x5C187C47B2648F1CLL
                  * (0xF3AA4F5EC98AFCBELL - (((unint64_t)&a9 + v68 - 0x3D63BD92DA195D22) & 1))
                  - 0x3D63BD92DA195D22)
      - 0x64F7F1DB3ABE6367;
  a57 = (unint64_t)&STACK[0x3FC] % 0x25 + 16;
  a68 = (v69 - 192) ^ 0x3FCE4CF92FE4A289;
  a55 = a4 ^ 0x3B7;
  a54 = a4 ^ 0x3A4;
  LODWORD(STACK[0x240]) = a4 + 173351820;
  uint64_t v71 = 1292559617
      * ((2 * ((v69 - 192) & 0x3BD2D59168CFE3C0) - (v69 - 192) - 0x3BD2D59168CFE3C7) ^ 0x1DB7171630637450);
  STACK[0x258] = v71;
  STACK[0x260] = 3918400742 - v71;
  LODWORD(STACK[0x238]) = a4 - 2039238742;
  LODWORD(STACK[0x230]) = 361 * (a4 ^ 0xC5B);
  LODWORD(STACK[0x228]) = 38 * (a4 ^ 0xC1F);
  a62 = 5119
      - 1292559617
      * ((((2 * (v69 - 192)) | 0x3140C972711AD5F0) - (v69 - 192) - 0x18A064B9388D6AF8) ^ 0xC13A59C19FDE0291);
  a63 = 1292559617
      * ((((2 * (v69 - 192)) | 0x3140C972711AD5F0) - (v69 - 192) - 0x18A064B9388D6AF8) ^ 0xC13A59C19FDE0291);
  STACK[0x268] = *(void *)(a7 + 392);
  a58 = &STACK[0x1838];
  a65 = vdupq_n_s32(0x1A0DB584u);
  a66 = vdupq_n_s32(0x7FFFFFFEu);
  a64 = vdupq_n_s32(0x8D06DAC2);
  JUMPOUT(0x22B352304);
}

void sub_22B372404(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v11 = (((&a3 | 0x609E777D) + (~&a3 | 0x9F618882)) ^ 0x2968D138) * v7;
  a6 = v9;
  a7 = v11 + v8 - 256;
  a4 = v11 + 1399495942;
  a5 = v11 + a1;
  a3 = 0xB8308F1D17695ALL;
  (*(void (**)(uint64_t *))(v10 + 8 * (v8 ^ 0x12D0u)))(&a3);
  sub_22B36578C();
}

uint64_t sub_22B372488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11, int a12)
{
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(v12 + 8 * (a9 + 1625)))(a12 - *(unsigned __int8 *)(v13 + 14), 2403785118);
  *uint64_t v14 = v15;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((((a9 ^ 9) + 1) ^ (v15 == 0)) & 1) * (a9 ^ 0x9A9)) ^ a9)))();
}

uint64_t sub_22B3724F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(v8
                                                                              + 8
                                                                              * ((((a7 ^ 0xA09) - 536)
                                                                                * ((v7 & 0x18) == 0)) ^ a7)))(a1, a2, a3, (a1 - a3), (a7 ^ 0xA09u) + 1973);
}

uint64_t sub_22B372524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = (v3 - 27);
  *(void *)(a1 + v2 - 0x2970AB8229FC3D2ELL + ((17 * (v7 ^ 0x972)) ^ 0xFFFFFFFFB912D4B8)) = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * (int)(((((v7 - 2403) & v1) != 8) * v4) ^ v7)))(-1189948232, 8);
}

uint64_t sub_22B372598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((49 * (v7 + 1 == v9 + 80)) ^ a7)))();
}

uint64_t sub_22B372660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((a4 - v7 + (unint64_t)(v5 + ((v4 + 684023160) & 0xD73A9DFF ^ 0x4244069)) > 0xF)
                                * ((v4 ^ 0x382) - 1514)) ^ v4)))();
}

uint64_t sub_22B3726C4()
{
  return ((uint64_t (*)(void))STACK[0x2F8])();
}

uint64_t sub_22B3726FC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((117 * (((a1 ^ 0x219 ^ (v2 == v1)) & 1) == 0)) ^ a1)))();
}

uint64_t sub_22B372734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                                                 + 8
                                                                                                 * (int)(((13 * (*(void *)(v7 - 152) ^ 0xB02) + 1069) * (*(_DWORD *)(v7 - 136) == *(_DWORD *)(v7 - 144))) ^ *(void *)(v7 - 152))))(a1, a2, a3, a4, a5, a6, *(void *)(v7 - 152) ^ 0x986);
}

uint64_t sub_22B37277C@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W8>)
{
  BOOL v12 = v9 > 0xD93E2598;
  uint64_t v13 = (a2 - 338197469);
  *(unsigned char *)(v11 + v13) = *(unsigned char *)(v4 + (v13 & 0xF)) ^ *(unsigned char *)(v3 + v13) ^ *(unsigned char *)((v13 & 0xF) + v5 + 4) ^ *(unsigned char *)(v6 + (v13 & 0xF)) ^ (-109 * (v13 & 0xF));
  unsigned int v14 = a2 + 312041099;
  uint64_t v15 = (a2 + 1);
  int v16 = v12 ^ (v14 < v8);
  BOOL v17 = v14 < a3;
  if (!v16) {
    BOOL v12 = v17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8 * ((v12 * (((v7 - 1375) | 0x32) ^ 0x83D)) | v7)))(a1, v15);
}

uint64_t sub_22B372820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((105 * (a5 + 1 == v8 + 44)) ^ v6)))(v5);
}

uint64_t sub_22B372904@<X0>(unsigned int a1@<W2>, int a2@<W8>)
{
  unsigned int v7 = ((a1 + 620215046) & 0xDB084571 ^ 0xFFFFFAA2) + *(unsigned __int8 *)(v5 + 5);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2895 * ((v7 ^ v4) + v2 + (v3 & (2 * v7)) == a2)) ^ a1)))();
}

uint64_t sub_22B37295C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v13 = (_DWORD *)STACK[0x260];
  *uint64_t v13 = v8 - 1;
  unsigned int v14 = &v13[6 * (v8 - 1543089488)];
  int v15 = v14[2];
  STACK[0x258] = *((void *)v14 + 2);
  LODWORD(STACK[0x31C]) = v14[6];
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v11 + (v15 + a6) * (uint64_t)v10 + 36) != a8)
                                * (((v9 ^ 0xDD9) - 2498) ^ 0x70F)) ^ v9 ^ 0xCA8)))();
}

void sub_22B372A1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) + 731811679 * ((-2 - ((a1 | 0xFBD815C4) + (~a1 | 0x427EA3B))) ^ 0x4DD14C7F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B372B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2 + 127 - v1;
  long long v6 = *(_OWORD *)(v5 - 31);
  uint64_t v7 = a1 + 127 - v1;
  *(_OWORD *)(v7 - 15) = *(_OWORD *)(v5 - 15);
  *(_OWORD *)(v7 - 31) = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * ((432 * (v1 + ((v4 + 980) | 0x43u) == 2255)) ^ v4)))();
}

uint64_t sub_22B372BC0(uint64_t a1, uint64_t a2, double a3, int8x16_t a4, double a5, double a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int32x4_t a10)
{
  unsigned int v14 = (const float *)(v13 + 908);
  int8x16_t v15 = (int8x16_t)vld1q_dup_f32(v14);
  uint64_t v16 = (v10 + 1109);
  a4.i32[0] = *(_DWORD *)(v13 + 4 * (v16 ^ 0x6B7));
  a4.i32[1] = *(_DWORD *)(v13 + 916);
  a4.i32[2] = *(_DWORD *)(v13 + 920);
  int8x16_t v17 = vextq_s8(v15, a4, 0xCuLL);
  int8x16_t v18 = a4;
  v18.i32[3] = *(_DWORD *)(v13 + 924);
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v18, a7), vandq_s8(v17, a8)), 1uLL), *(int8x16_t *)v13);
  v17.i32[0] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + 4 * (v16 ^ 0x6B7)) & 1));
  v17.i32[1] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + 916) & 1));
  v17.i32[2] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + 920) & 1));
  v17.i32[3] = *(_DWORD *)(v12 + 4 * (v18.i8[12] & 1));
  *(int8x16_t *)(v13 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), a9)), a10), v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 8 * v10))(a1, a2, 1719);
}

uint64_t sub_22B372C84@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + ((v5 + 1005) ^ 0xFFFFFFFFC9B31838) + v1) = *(unsigned char *)(v2
                                                                                      + ((v5 + 1005) ^ 0xFFFFFFFFC9B31838)
                                                                                      + v1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((362 * (v1 - 1 == v4)) ^ v5)))();
}

uint64_t sub_22B372CC4()
{
  *(unsigned char *)(v8 + ((v0 + v3) & v4 ^ v5) + v1 + 24) = *(unsigned char *)(v7 + ((v0 + v3) & v4 ^ v5) + v1 + 24);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v1 + 1 == v2 + 64) * v6) ^ v0)))();
}

uint64_t sub_22B372D08@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return sub_22B372D10(a1, (a2 + 64));
}

uint64_t sub_22B372D10@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X5>, int a4@<W8>)
{
  int8x16_t v10 = *(int8x16_t *)(a3 + (a4 + v6 + v5));
  *(int8x16_t *)(a2 + v5) = vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v9)), v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 48) * a1) ^ (v4 + 548))))();
}

void sub_22B372D54()
{
}

uint64_t sub_22B372D70()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((2765 * (v3 + v2 - 2 < v1 + 131 * (v0 ^ 0x7C9u))) ^ v0)))();
}

uint64_t sub_22B372DAC(uint64_t a1, int a2, uint64_t a3)
{
  *(void *)(a3 + v5 + ((v3 + 482) ^ (unint64_t)(v6 + 2500))) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v4 & 0xFFFFFFFFFFFFFFF8) == 8) * a2) ^ v3)))();
}

uint64_t sub_22B372DEC@<X0>(const char *a1@<X5>, int32x4_t *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int8x16_t a33,uint64_t a34,int a35,int a36)
{
  int8x16x4_t v67 = vld4q_s8(a1);
  uint8x16_t v42 = (uint8x16_t)veorq_s8(v67.val[0], v40);
  uint16x8_t v43 = vmovl_u8(*(uint8x8_t *)v42.i8);
  uint16x8_t v44 = vmovl_high_u8(v42);
  uint8x16_t v45 = (uint8x16_t)veorq_s8(v67.val[1], v40);
  _Q17 = vmovl_u8(*(uint8x8_t *)v45.i8);
  _Q16 = vmovl_high_u8(v45);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v54 = (uint8x16_t)veorq_s8(v67.val[2], v40);
  uint16x8_t v55 = vmovl_high_u8(v54);
  uint16x8_t v56 = vmovl_u8(*(uint8x8_t *)v54.i8);
  v67.val[0] = veorq_s8(v67.val[3], v40);
  v67.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v67.val[0]);
  v67.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v67.val[1]);
  v67.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.val[1].i8);
  v67.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v67.val[0].i8);
  v67.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v67.val[0]);
  v67.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.val[0].i8);
  int32x4_t v57 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v56.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v43.i8), 0x18uLL)), v67.val[0]);
  int32x4_t v58 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v56, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v43), 0x18uLL)), v67.val[3]);
  int32x4_t v59 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v55.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v44.i8), 0x18uLL)), v67.val[1]);
  int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v55, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v44), 0x18uLL)), v67.val[2]);
  v67.val[0] = veorq_s8(vandq_s8((int8x16_t)v57, a33), (int8x16_t)(*(_OWORD *)v67.val & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v67.val[3] = veorq_s8(vandq_s8((int8x16_t)v58, a33), (int8x16_t)(*(_OWORD *)&v67.val[3] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v67.val[1] = veorq_s8(vandq_s8((int8x16_t)v59, a33), (int8x16_t)(*(_OWORD *)&v67.val[1] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  v67.val[2] = veorq_s8(vandq_s8((int8x16_t)v60, a33), (int8x16_t)(*(_OWORD *)&v67.val[2] & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  a2[2] = vaddq_s32(vsubq_s32(v59, vaddq_s32((int32x4_t)v67.val[1], (int32x4_t)v67.val[1])), v41);
  a2[3] = vaddq_s32(vsubq_s32(v60, vaddq_s32((int32x4_t)v67.val[2], (int32x4_t)v67.val[2])), v41);
  *a2 = vaddq_s32(vsubq_s32(v57, vaddq_s32((int32x4_t)v67.val[0], (int32x4_t)v67.val[0])), v41);
  a2[1] = vaddq_s32(vsubq_s32(v58, vaddq_s32((int32x4_t)v67.val[3], (int32x4_t)v67.val[3])), v41);
  int v61 = &a2[4].i32[v39 + v37];
  int v62 = *(v61 - 8) ^ *(v61 - 3);
  unsigned int v63 = v62 + v36 - ((2 * v62) & 0xB7FDD896);
  int v64 = *(v61 - 16) ^ *(v61 - 14);
  HIDWORD(v65) = v64 ^ (((a36 + 395) | 0x85C) + 1543430607) ^ v63;
  LODWORD(v65) = v64 ^ ~v63;
  *int v61 = (v65 >> 31) + v36 - ((2 * (v65 >> 31)) & 0xB7FDD896);
  return (*(uint64_t (**)(void))(v38 + 8 * ((3211 * (v39 + 17 == v39 + 80)) ^ (a36 + 335))))();
}

uint64_t sub_22B372F18@<X0>(int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W7>, int a6@<W8>, int8x16_t a7@<Q0>, int8x8_t a8@<D1>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v76 = a4 - 8;
  uint64_t v77 = (a1 + v76);
  v79.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v76) & 0xF;
  v79.val[0].i64[1] = (v73 + (_BYTE)v76) & 0xF;
  v79.val[1].i64[0] = (v72 + (_BYTE)v76) & 0xF;
  v79.val[1].i64[1] = (v68 + (_BYTE)v76 + v74) & 0xF;
  v79.val[2].i64[0] = (v71 + (_BYTE)v76) & 0xF;
  v79.val[2].i64[1] = (v70 + (_BYTE)v76) & 0xF;
  v79.val[3].i64[0] = (a2 + (_BYTE)v76) & 0xF;
  v79.val[3].i64[1] = (v69 + (_BYTE)v76) & 0xF;
  *(int8x8_t *)(a3 + v77) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v66 + (v77 & 0xF) - 7), *(int8x8_t *)(a3 + v77)), veor_s8(*(int8x8_t *)((v77 & 0xF) + v67 - 5), *(int8x8_t *)(v65 + (v77 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v79, a7), a8)));
  return (*(uint64_t (**)(void))(a65 + 8 * (((a5 == v76) * v75) ^ a6)))();
}

uint64_t sub_22B372F20(char a1, char a2, char a3, char a4, char a5)
{
  uint64_t v11 = v5 + 2;
  uint64_t v12 = v9 - 2;
  *(unsigned char *)(v12 + v7) = ((a3 + v11) ^ a5) * (a4 + v11);
  *(unsigned char *)(v12 + 1331) = ((a2 + v11) ^ a5) * (a1 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((63 * (v8 == v11)) ^ v6)))();
}

uint64_t sub_22B372F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                                 + 8
                                                                                                 * ((((v8 - 866122160) & 0x339FEFF3 ^ 0x255) * ((v6 & 8) == 0)) ^ v8)))(a1, a2, a3, a4, a5, a6, (v7 - a6));
}

uint64_t sub_22B372F70()
{
  STACK[0x278] = v0;
  LOBYTE(STACK[0x195C]) = (-81 * ((-2 - ((~(v4 + 64) | 0x8F) + ((v4 + 64) | 0x70))) ^ 0x95)) ^ 0x69;
  *(_DWORD *)(v4 - 184) = (v2 + 2482) ^ (1734664879
                                       * ((-2 - ((~(v4 - 192) | 0x6AD0B08F) + ((v4 - 192) | 0x952F4F70))) ^ 0x450B9895));
  STACK[0x1940] = (unint64_t)&STACK[0x49C1C9F4CB1E8192];
  STACK[0x1950] = (unint64_t)&STACK[0x19CE8EC4E898EA8F];
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 3343));
  STACK[0x270] = v1;
  uint64_t v6 = v5(v4 - 192);
  unint64_t v7 = STACK[0x270];
  int v8 = *(_DWORD *)(v4 - 168);
  LODWORD(STACK[0x290]) = v8;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((v8 == v3) * (((v2 ^ 0xE8C) - 976) ^ 0xF6F)) ^ v2)))(v6);
}

void sub_22B37306C()
{
}

void sub_22B373308()
{
}

uint64_t sub_22B373324@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, unsigned int a4@<W8>)
{
  unsigned int v6 = v4[396] ^ ((*v4 & 0x7FFFFFFE | v4[623] & 0x80000000) >> 1);
  v4[623] = (a2 + v6 - (a3 & (2 * v6))) ^ *(_DWORD *)(v5 + 4 * (((631 * (a4 ^ 0xEF0)) ^ 0xC52) & *v4));
  return (*(uint64_t (**)(void))(a1 + 8 * ((372 * (LODWORD(STACK[0x3FC]) > 0x26F)) ^ a4)))();
}

uint64_t sub_22B373398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,uint64_t a22,int *a23,uint64_t a24,int a25,unsigned int a26)
{
  unsigned int v32 = 2009815553
      * (((&a22 | 0xD0AB55F2) - &a22 + (&a22 & 0x2F54AA08)) ^ 0x21A07BB7);
  a22 = v29;
  LODWORD(a23) = 673189867 - v32;
  HIDWORD(a23) = (v27 - 1430) ^ v32;
  (*(void (**)(uint64_t *))(v26 + 8 * (v27 ^ 0x29F)))(&a22);
  LODWORD(a22) = (v27 + 425454312) ^ (225134719
                                    * (((&a22 | 0x409754D9) + (~&a22 | 0xBF68AB26)) ^ 0x566711F2));
  a23 = (int *)(v30 + 0xEB5904C50728E80);
  a24 = v29;
  (*(void (**)(uint64_t *))(v26 + 8 * (v27 ^ 0x1D33)))(&a22);
  unsigned int v33 = 1734664879 * ((&a22 & 0xC46BD3EC | ~(&a22 | 0xC46BD3EC)) ^ 0x144F0409);
  a25 = v27 - v33 + 19;
  a26 = v33 - 635067263;
  a23 = &a18;
  a24 = v29;
  LODWORD(a22) = -38327932 - v33;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v26 + 8 * (v27 ^ 0x1D57)))(&a22);
  *(_DWORD *)(v30 - 0x21AEEC4F795AEEC7) += a18;
  *(_DWORD *)(v30 - 0x21AEEC4F795AEEC3) += a19;
  *(_DWORD *)(v30 - 0x21AEEC4F795AEEBFLL) += a20;
  *(_DWORD *)(v30 - 0x21AEEC4F795AEEBBLL) += a21;
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (int)((((v31 - v28 - 836278228) < 0xFFFFFFC0)
                                                   * (((129 * (v27 ^ 0xD78) + 1216173783) & 0xB782A7FF) - 954)) ^ (129 * (v27 ^ 0xD78)))))(v34);
}

uint64_t sub_22B3735E4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((((8 * (((a3 - 2788) | 0x300) ^ 0x248)) ^ 0x912) * (a1 == a6)) ^ (a3 - 2534))))();
}

void sub_22B373628()
{
}

uint64_t sub_22B373630@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, _DWORD *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v9 = a1[5];
  uint64_t v8 = a1[6];
  *a4 = v5 + 1959520872;
  *(_DWORD *)(v9 - 0x7FD2E20123E43E23) = v6;
  *(_DWORD *)(v7 - 0x36FC4A2A401487CFLL) = a2;
  *(void *)(v8 - 0x76E6394370123951) = v4 + (a3 - 1433370884);
  return sub_22B31D264((uint64_t)a1, a2, -604050357);
}

uint64_t sub_22B3736A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *int v31 = 0x80000000;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (v30 ^ 0xF0A)))(a30);
  return sub_22B373708(v33);
}

uint64_t sub_22B373708(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7)
{
  uint64_t v13 = (unsigned int *)(v11 + 4 * v7);
  uint64_t v14 = (4 * v7) | 4;
  int v15 = *(_DWORD *)(v11 + v14);
  unsigned int v16 = v8 & 0x80000000;
  int v17 = *(_DWORD *)(v11 + 4 * (v7 + (v9 ^ a4) * a5) + a6);
  unsigned int v18 = v13[398];
  int v19 = *(_DWORD *)(v10 + 4 * (v17 & 1));
  *uint64_t v13 = v13[397] ^ ((v15 & 0x7FFFFFFE | v16) >> 1) ^ *(_DWORD *)(v10 + 4 * (v15 & 1));
  *(_DWORD *)(v11 + v14) = v18 ^ ((v17 & 0x7FFFFFFE | v15 & 0x80000000) >> 1) ^ v19;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 == 224) * a7) ^ (v9 - 605))))();
}

uint64_t sub_22B37379C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((239 * (a8 + ((a5 + 854893991) & 0xCD0B5D67 ^ 0x8AA24E51) >= (a5 ^ 0xFFFFF6A6))) ^ a5)))();
}

void sub_22B3737F0(uint64_t a1@<X8>)
{
  *(_DWORD *)(v4 - 144) = v1;
  *(_DWORD *)(v4 - 136) = v3;
  *(void *)(v4 - 120) = v2 - 7;
  *(void *)(v4 - 128) = a1 - 7;
  *(_DWORD *)(v4 - 152) = v3 & 0xFFFFFFF8;
  JUMPOUT(0x22B373858);
}

uint64_t sub_22B373954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = *(unsigned __int8 *)(v6 - 132) ^ 0x22;
  if (v7 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
  }
                                                                                  + 8
                                                                                  * (((*(_DWORD *)(v6 - 136) != 326024231)
                                                                                    * ((5 * (v4 ^ 0x1B2)) ^ 0xCC1)) ^ (v4 + 2410))))(a1, a2, a3, a4, 1951924424);
  if (v7 != 1) {
    JUMPOUT(0x22B373AB0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * (((*(_DWORD *)(v6 - 136) != 326024231)
                                                                                  * (10 * (v4 ^ 0x277) - 2824)) ^ (v4 + 2410))))(a1, a2, a3, a4, 1951924424);
}

uint64_t sub_22B373AE0(uint64_t a1)
{
  int v6 = v2 + v1 + 1780486508;
  int v7 = v6 + 3750;
  if ((v6 + 3750) <= 0x40) {
    int v7 = 64;
  }
  BOOL v8 = __CFADD__(v6 + ((5 * (v3 ^ 0xDB4) + 1090) | 0xA4), v4 + v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((25 * v8) ^ v3)))(a1, 347313666);
}

uint64_t sub_22B373B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((30 * (v8 + v7 + ((21 * (a6 ^ 0xE07)) ^ 0x90421165) < (a6 ^ 0xE84))) ^ a6)))();
}

uint64_t sub_22B373BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v67 = (a6 - 1379239742);
  *(unsigned char *)(a62 + v67) ^= *(unsigned char *)(v65 + (v67 & 0xF)) ^ *(unsigned char *)((v67 & 0xF) + v64 + 2) ^ *(unsigned char *)(v63 + (v67 & 0xF)) ^ (53 * (v67 & 0xF));
  return (*(uint64_t (**)(void))(v66 + 8 * ((823 * (a6 - 1 == v62)) ^ (a7 + 532))))();
}

void sub_22B373C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v45 = (*(uint64_t (**)(uint64_t, void))(v44 + 8 * (v43 ^ 0x1561)))(a36, 0);
  uint64_t v46 = *(void *)(a43 + 16);
  *(_DWORD *)(a43 + 4) = *(_DWORD *)(a43 + 24);
  *(_DWORD *)(a43 + 8) = v46;
  uint64_t v47 = 8 * (v43 ^ 0xA8F);
  *(_DWORD *)(a43 + 12) = (*(uint64_t (**)(uint64_t))(v44 + v47))(v45);
  *(_DWORD *)a43 = (*(uint64_t (**)(void))(v44 + v47))();
  JUMPOUT(0x22B373D30);
}

void sub_22B373E58()
{
}

uint64_t sub_22B373E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * (((v9
                                                                                            - 0x21AEEC4F795AF799
                                                                                            - v8
                                                                                            + (unint64_t)(v6 + 1727) < 0x10)
                                                                                           * (v6 - 25)) ^ (v6 + 1727))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22B373F28@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(v3 + (a2 + v4))
                      - ((2 * *(unsigned char *)(v3 + (a2 + v4))) & 0x55)
                      + 42;
  return (*(uint64_t (**)(void))(v2 + 8 * ((15 * (v5 + (v6 - 1516) != 155)) ^ (v6 - 791))))();
}

uint64_t sub_22B373F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, void *a3@<X6>, int a4@<W7>, uint64_t a5@<X8>, uint64_t a6)
{
  int v7 = *(unsigned __int8 *)(a5 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v7 == 1)
  {
    unsigned int v13 = *(_DWORD *)(a5 - 0x2970AB8229FC3CEALL);
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF6) = ((8 * v13) ^ 0xC8) - ((a4 - 3) & (2 * ((8 * v13) ^ 0xC8))) + 42;
    int v9 = a4 - 2727;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF5) = ((v13 >> 5) ^ 0xB0) - 2 * (((v13 >> 5) ^ 0xB0) & 0x2F ^ (v13 >> 5) & 5) + 42;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF4) = ((v13 >> 13) ^ 0x29) - ((2 * ((v13 >> 13) ^ 0x29)) & 0x55) + 42;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF3) = ((v13 >> 21) ^ 0x11) - ((v13 >> 20) & 0x54) + 42;
    unsigned int v14 = *(_DWORD *)(a5 - 0x2970AB8229FC3CEELL);
    HIDWORD(v15) = v14 ^ 6;
    LODWORD(v15) = v13 ^ 0x20000000;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF2) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x55) + 42;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF1) = ((v14 >> 5) ^ 0x9D) + (~(2 * ((v14 >> 5) ^ 0x9D)) | 0xAB) + 43;
    unsigned int v12 = ((v14 >> 21) ^ 0x40) + (~(v14 >> 20) | 0xFFFFFFAB) + 43;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF0) = ((v14 >> 13) ^ 0xBD) - ((2 * ((v14 >> 13) ^ 0xBD)) & 0x55) + 42;
    goto LABEL_5;
  }
  unsigned int v8 = a4;
  if (v7 == 2)
  {
    unsigned int v12 = *(_DWORD *)(a5 - 0x2970AB8229FC3CEELL);
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF6) = ((v12 >> 21) ^ 0x40) - ((v12 >> 20) & 0x54) + 42;
    int v9 = a4 - 2727;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF5) = ((v12 >> 13) ^ 0xBD)
                                          - ((((v12 >> 13) ^ 0xFFFFFFBD) << (a4 - 82)) & 0x54)
                                          + 42;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF4) = ((v12 >> 5) ^ 0x9D) + (~(2 * ((v12 >> 5) ^ 0x9D)) | 0xAB) + 43;
    unsigned int v10 = *(_DWORD *)(a5 - 0x2970AB8229FC3CEALL);
    HIDWORD(v11) = v12 ^ 6;
    LODWORD(v11) = v10 ^ 0x20000000;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF3) = (v11 >> 29) - ((2 * (v11 >> 29)) & 0x55) + 42;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF2) = ((v10 >> 21) ^ 0x11) + (~(v10 >> 20) | 0xAB) + 43;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF1) = ((v10 >> 13) ^ 0x29) + (~(2 * ((v10 >> 13) ^ 0x29)) | 0xAB) + 43;
    LOBYTE(v12) = ((8 * v10) ^ 0xC8) - ((2 * ((8 * v10) ^ 0xC8)) & 0x50) + 42;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CF0) = ((v10 >> 5) ^ 0xB0)
                                          + ~(2 * (((v10 >> 5) ^ 0xFFFFFFB0) & 0x2F ^ (v10 >> 5) & 5))
                                          + 43;
LABEL_5:
    unsigned int v8 = (v9 + 1813535699) & 0x93E7AED3;
    *(unsigned char *)(a5 - 0x2970AB8229FC3CEFLL) = v12;
  }
  a3[37] = *(void *)(v6 + 8 * (int)(v8 - 3154));
  return sub_22B33E74C(a1, 17, a2, a3, a4, a5, a6);
}

uint64_t sub_22B374334@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1432
                                * (((*(unsigned __int8 *)(a1 + 7) - 1) ^ v5)
                                 + v3
                                 + (((*(unsigned __int8 *)(a1 + 7) - 1) << ((104 * (a2 ^ 0xF6)) ^ 0x91)) & v4) == a3)) ^ a2)))();
}

void sub_22B374388(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,int a21,int a22,int a23,int a24,unsigned __int8 a25,int a26,int a27,char a28)
{
  *(_DWORD *)(v29 - 224) = a21 ^ 0x55FC078E;
  *(_DWORD *)(v29 - 232) = ((unsigned __int16)((a28 ^ v28) << 8) | (((((a4 + 3685) ^ 0xDC6) - 108) ^ a27) << 24) | a25 ^ 0x5E | ((a20 ^ a1) << 16)) ^ 0xEE40BDE1;
  *(_DWORD *)(v29 - 240) = a26 ^ 0xA3E21049;
  *(_DWORD *)(v29 - 236) = a24 ^ 0x39761E86;
  JUMPOUT(0x22B347040);
}

uint64_t sub_22B37441C()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((((((v3 - 62745476) & 0x3BD6FBB) - 2590) ^ 0x4B5)
                                              * ((v1 + v0 - 1994210794) < 8)) | v3)))(v2);
}

uint64_t sub_22B374474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v22 = 35 * (v19 ^ 0xE63);
  int v23 = a14 + v22 + 1861892188;
  int v24 = v22 + 2359;
  int v25 = (v22 - 571) ^ 0x6FF6F489;
  int v26 = (*(_DWORD *)(*(void *)(a11 + 32) - 0x6E3B751A40ADDC1) - 718092972)
      * (*(_DWORD *)(a19 - 0x54EEBA8C0E75CADCLL) ^ 0x3B30BFAD);
  int v27 = 225134719 * ((((v21 - 128) | 0xE8AA4C4C) - ((v21 - 128) & 0xE8AA4C4C)) ^ 0xFE5A0966);
  *(_DWORD *)(v21 - 104) = v27 + v24 - 1368;
  *(void *)(v21 - 128) = a12;
  *(void *)(v21 - 120) = a15;
  *(_DWORD *)(v21 - 112) = (v25 ^ v26) - v27 + ((2 * v26) & 0xDFEDECBA) - 35651589;
  *(_DWORD *)(v21 - 108) = v27 ^ 0x36DEA8F1;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v24 ^ 0x1E26)))(v21 - 128);
  BOOL v29 = v23 > 1861893484;
  if (a14 > 0x1105C294) {
    BOOL v29 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((460 * v29) ^ v24)))(v28);
}

uint64_t sub_22B37461C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((173 * ((((v0 + 1208) ^ (v1 < ((723 * (v0 ^ 0x36C)) ^ 0xB5Cu))) & 1) == 0)) ^ v0)))();
}

void sub_22B374668()
{
}

void sub_22B3746E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *uint64_t v44 = 0x80000000;
  (*(void (**)(uint64_t))(v43 + 8 * (v42 + 3835)))(a42);
  JUMPOUT(0x22B374738);
}

uint64_t sub_22B374790@<X0>(uint64_t a1@<X8>, int8x16_t a2@<Q0>, int8x16_t a3@<Q1>, int8x16_t a4@<Q2>, int8x16_t a5@<Q3>, int32x4_t a6@<Q4>, int8x16_t a7@<Q5>)
{
  uint64_t v12 = 4 * a1;
  uint64_t v13 = v11 + 4 * a1;
  unint64_t v14 = v7 ^ 0x1Cu ^ v8 | a1;
  uint64_t v15 = a1 + 4;
  LODWORD(v14) = *(_DWORD *)(v11 + 4 * v14);
  a7.i32[0] = *(_DWORD *)(v11 + (v12 | 4));
  a7.i32[1] = *(_DWORD *)(v11 + (v12 | 8));
  a7.i32[2] = v14;
  int8x16_t v16 = vextq_s8(a2, a7, 0xCuLL);
  int8x16_t v17 = a7;
  v17.i32[3] = *(_DWORD *)(v11 + 4 * v15);
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a4), vandq_s8(v16, a3)), 1uLL), *(int8x16_t *)(v13 + 1588));
  v16.i32[0] = *(_DWORD *)(v9 + 4 * (*(_DWORD *)(v11 + (v12 | 4)) & 1));
  v16.i32[1] = *(_DWORD *)(v9 + 4 * (*(_DWORD *)(v11 + (v12 | 8)) & 1));
  v16.i32[2] = *(_DWORD *)(v9 + 4 * (v14 & 1));
  v16.i32[3] = *(_DWORD *)(v9 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)uint64_t v13 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a5)), a6), v16);
  return (*(uint64_t (**)(void))(v10 + 8 * ((28 * (v15 == 224)) ^ v7)))();
}

uint64_t sub_22B374858@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(unsigned char *)(v12 + v11 - 1332937484) ^= *(unsigned char *)(a9 + v11 - 1332937484) ^ (v10 - 123) ^ 0x71;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v11 + 1 < (((v10 - 4) | 4) ^ a1)) * v9) ^ (v10 - 31))))();
}

void sub_22B3748C0()
{
}

uint64_t sub_22B3748D8(unint64_t a1, int a2, unint64_t a3, int a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v42 = 4 * (v29 + 1 + a4);
  unint64_t v43 = (((v33 - 339) | v30) ^ (v28 - 324) ^ *(_DWORD *)(a28 + v42 + a8))
      + (v40 ^ HIDWORD(a6))
      + v35 * (unint64_t)(*(_DWORD *)(*a7 + v42 + a8) ^ v28);
  unint64_t v44 = (*(_DWORD *)(*v38 + v42 + a8) ^ v28) * a5
      + HIDWORD(a1)
      + ((v43 + a2 - ((2 * v43) & 0x6B0F4F74u)) ^ a3);
  *(_DWORD *)(a28 + 4 * (v29 + a4) + a8) = v44 + v28 - (v34 & (2 * v44));
  BOOL v45 = v29 + v31 < v39;
  if (v41 > 0x43627635 != v29 + v31 < v32) {
    BOOL v45 = v41 > 0x43627635;
  }
  return (*(uint64_t (**)(void))(v37 + 8 * ((!v45 * v36) ^ v33)))();
}

void sub_22B3749C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (1734664879 * ((-1649565949 - (a1 | 0x9DAD9F03) + (a1 | 0x625260FC)) ^ 0x4D8948E6));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B374AAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((*(unsigned char *)(v2 - 0x24B64731C5A68307)
                                                   - **(unsigned char **)(a1 + 8 * (v1 ^ 0xC4A))) != 185)
                                * ((43 * (v1 ^ 0xC1C)) ^ 0xD34)) ^ (v1 - 661))))();
}

uint64_t sub_22B374B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v10 = ((v8 - 1470980607) & 0x57AD5F7D) + v7 + 767433680;
  int v11 = (a7 < ((v8 - 978247094) & 0x3A4EDDB3 ^ 0xF4D2DACu)) ^ (v10 < 0x7A4A4BD8);
  BOOL v12 = v10 < a7 + 1794974649;
  if (v11) {
    BOOL v12 = a7 < ((v8 - 978247094) & 0x3A4EDDB3 ^ 0xF4D2DACu);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((3624 * v12) ^ v8)))(a1, 3717681543);
}

uint64_t sub_22B374BDC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((94 * ((a1 ^ 0x74C ^ (73 * (v1 ^ 0xD07u))) < v1 - 3349)) ^ v1)))();
}

uint64_t sub_22B374C1C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 < ((a1 + 1567) ^ 0xFFFFF368)) * (a1 - 1656)) ^ (a1 + 1567))))();
}

uint64_t sub_22B374C58(uint64_t a1, char a2, int a3)
{
  int v12 = v8 + v6;
  int v13 = *(_DWORD *)(v3 + 4 * (v8 + v6 - 14));
  int v14 = *(_DWORD *)(v3 + 4 * (v8 + v6 - 8)) ^ *(_DWORD *)(v3 + 4 * (v8 + v6 - 3));
  int v15 = v14 + v10 - ((v14 << (((v4 - 36) | a2) - 24)) & v9);
  int v16 = *(_DWORD *)(v3 + 4 * (v12 - 16)) ^ v13;
  HIDWORD(v17) = v16 ^ v7 ^ v15;
  LODWORD(v17) = v16 ^ ~v15;
  *(_DWORD *)(v3 + 4 * (v5 + v8)) = (v17 >> 31) + v10 - (v9 & (2 * (v17 >> 31)));
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v5 + 1 + v8) > 0x4F) * a3) ^ v4)))();
}

void sub_22B374CEC(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 16) + 1328090399 * (a1 ^ 0xFFD3643A);
  unsigned int v2 = 1948972247 * ((2 * (&v5 & 0x40E30320) - &v5 - 1088619298) ^ 0xA820930);
  int v6 = &STACK[0x2970AB8229FC3F8E];
  unsigned int v7 = -118723830 - v2;
  int v5 = v2 ^ (v1 + 514405662);
  uint64_t v3 = (char *)*(&off_26DE9F480 + v1 + 308) - 8;
  (*(void (**)(int *))&v3[8 * (v1 ^ 0xFD7)])(&v5);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B374F28@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v3 + a1 + 24) = *(_OWORD *)(v6 + a1 + 24);
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ v4) + a1 == 64) * v5) ^ v7)))();
}

uint64_t sub_22B374F5C@<X0>(int a1@<W3>, int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v10 = (a1 + v8);
  *(unsigned char *)(a3 + v10) = *(unsigned char *)(v4 + (v10 & 0xF)) ^ *(unsigned char *)(v3 + v10) ^ *(unsigned char *)(v6 + (v10 & 0xF)) ^ *(unsigned char *)(v5 + (v10 & 0xF)) ^ (15 * (v10 & 0xF));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - 1 == v7) * (a2 + 256)) ^ (a2 - 3103))))();
}

uint64_t sub_22B374FBC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = v9 + a7 + 908750484;
  BOOL v11 = v10 < ((((a2 + 1517684697) & 0xA589FEF8) - 1795) ^ 0x6AB506B7);
  BOOL v12 = v10 > v7 - 296417808;
  if ((v7 - 296417808) < 0x6AB50362 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((157 * v12) ^ a2)))();
}

uint64_t sub_22B375048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_22B3750D0(a11 - 0x281D12643933BF1BLL, (v11 - 451498873), 451501557, 0xAB114573F18A3524, 0xEA2F8073E6E5AF5FLL, 0x3DF6FFBF9D1BFF80, 0x13A37E76ALL, 0xD7D97FCC7BFE5CECLL);
}

uint64_t sub_22B3750D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v18 = 4 * (v14 + v13);
  int v19 = v6 + a5 + (*(_DWORD *)(*a1 + v18 + a4) ^ v7);
  *(_DWORD *)(*v5 + v18 + a4) = v19 + v16 - (v17 & (2 * v19));
  int v20 = v14 + 1 + v8;
  BOOL v22 = v20 <= v9 && v20 >= v11;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * v12) ^ v10)))();
}

uint64_t sub_22B375148(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v4 + 2774) ^ v4 ^ 0x2AB) * (v3 == a3)) ^ v4)))();
}

uint64_t sub_22B37517C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v12 = (v7 + v6 + v9 - v10);
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v4 - 7 + v12));
  *(int8x8_t *)(v3 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), (int8x8_t)0x5454545454545454)), (int8x8_t)0x2A2A2A2A2A2A2A2ALL));
  return (*(uint64_t (**)(void))(v11
                                           + 8
                                           * ((88
                                             * ((((((a3 - 601057636) & 0x23D3693B ^ 0xFFFFF6C3) & v5) - v10 == 8) ^ (((a3 - 100) & 0x3B) - 38)) & 1)) ^ (a3 - 601057636) & 0x23D3693Bu)))(v8 - (((a3 - 601057636) & 0x23D3693B ^ 0xFFFFF6C3) & v5));
}

uint64_t sub_22B37521C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t))(v27 + 8
                                                  * ((((a8 ^ 0xC85) + 68 * (a8 ^ 0x83F) - 2529) * (a1 != a4)) ^ a8)))(a27);
}

uint64_t sub_22B375260@<X0>(uint64_t a1@<X0>, unsigned int a2@<W4>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  return sub_22B375284(a1, (a1 + 2647), a3 - 3, 882, 1103, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a4))));
}

uint64_t sub_22B375284(float a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(float *)(a4 + v7 - v8 + (a3 ^ a5 ^ v6)) = a1;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 + 4 == v9) * a6) ^ a3)))();
}

uint64_t sub_22B37532C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v6 = a4 + a3 + 1224903721 < ((((v4 + 2030597907) & 0x86F78BAF) + 696) ^ (v4 + 1411));
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v6) | (8 * v6)) ^ v4)))();
}

uint64_t sub_22B3753BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *(_DWORD *)(v37 - 144) = v36
                         + 1864
                         - 1948972247 * ((((v37 - 144) | 0xEF287EAE) - ((v37 - 144) & 0xEF287EAE)) ^ 0x5AB68B40)
                         + 479;
  *(void *)(v37 - 136) = v34;
  *(void *)(v37 - 128) = v35;
  (*(void (**)(uint64_t))(v33 + 8 * (v36 + 3753)))(v37 - 144);
  *(_DWORD *)(v37 - 112) = v36 + 1618 - 1948972247 * ((v37 - 144) ^ 0xB59EF5EE);
  *(void *)(v37 - 104) = a33;
  *(void *)(v37 - 128) = v34;
  *(void *)(v37 - 120) = a21;
  *(void *)(v37 - 144) = v35;
  *(void *)(v37 - 136) = v35;
  (*(void (**)(uint64_t))(v33 + 8 * (v36 + 3730)))(v37 - 144);
  *(void *)(v37 - 128) = v34;
  *(void *)(v37 - 120) = a21;
  *(_DWORD *)(v37 - 112) = v36
                         + 1618
                         - 1948972247 * (((v37 - 144) & 0xD1B00757 | ~((v37 - 144) | 0xD1B00757)) ^ 0x9BD10D46);
  *(void *)(v37 - 144) = a16;
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 104) = v35;
  (*(void (**)(uint64_t))(v33 + 8 * ((v36 + 1864) ^ 0x18BE)))(v37 - 144);
  *(_DWORD *)(v37 - 128) = v36
                         + 1864
                         + 1503746353 * ((((2 * (v37 - 144)) | 0x7FC19792) - (v37 - 144) + 1075786807) ^ 0x9981097F)
                         - 268463711;
  *(void *)(v37 - 144) = a22;
  *(void *)(v37 - 136) = v35;
  (*(void (**)(uint64_t))(v33 + 8 * (v36 + 3837)))(v37 - 144);
  *(void *)(v37 - 136) = a23;
  *(void *)(v37 - 128) = v35;
  *(_DWORD *)(v37 - 144) = v36
                         + 1864
                         - 1948972247 * (((v37 - 144) & 0x705E6266 | ~((v37 - 144) | 0x705E6266)) ^ 0x3A3F6877)
                         + 479;
  (*(void (**)(uint64_t))(v33 + 8 * ((v36 + 1864) ^ 0x18A7)))(v37 - 144);
  *(_DWORD *)(v37 - 144) = v36
                         + 1864
                         - 1734664879 * ((((v37 - 144) | 0x906F34C) - ((v37 - 144) & 0x906F34C)) ^ 0x26DDDB56)
                         - 1651;
  *(void *)(v37 - 136) = v35;
  *(void *)(v37 - 128) = a23;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v33 + 8 * ((v36 + 1864) ^ 0x746)))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * ((((2 * ((v36 - 2078299020) & 0x7BE05FFA ^ 0xB13)) ^ 0xA05) * (a20 == 0)) ^ (v36 + 2671))))(v38);
}

uint64_t sub_22B37564C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((2 * (v3 + 8 != v1 + 32)) | (8 * (v3 + 8 != v1 + 32))) ^ v2)))();
}

uint64_t sub_22B3756A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((982
                                                                        * ((v6 & 8) == ((((v7 - 1187) | 0x80) + 1374) ^ 0xE22))) ^ v7)))(a1, a2, a3, (v5 - a5));
}

void sub_22B3756E0(uint64_t a1, uint64_t a2)
{
  *int v3 = 0x80000000;
  (*(void (**)(unint64_t))(a2 + 8 * (v2 + 3859)))(STACK[0x268]);
  JUMPOUT(0x22B375724);
}

uint64_t sub_22B375824@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 1740137971)) = *(unsigned char *)(v5 + (a2 - 1740137971));
  return (*(uint64_t (**)(void))(v7 + 8 * ((25 * ((((a3 - v4 - 2342) ^ (a2 - 1 == a4)) & 1) == 0)) ^ (v6 + a3 + 1477))))();
}

uint64_t sub_22B375878@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0xB712A26E;
  *(unsigned char *)(a1 + (v6 - 1242219750)) = *(unsigned char *)(v1 + (v6 - 1242219750));
  if (v8 == v6 - 18704212 < v3) {
    BOOL v8 = v6 - 18704212 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((v8 * ((v2 + 1468467698) & 0xA878FEF5 ^ 0xF7F)) ^ v2)))();
}

uint64_t sub_22B3758FC(double a1)
{
  *(double *)(v4 + (v2 & 0x433A5E77)) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v3 == 0) ^ v1)))();
}

uint64_t sub_22B37592C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v3 + 2038) ^ 0xCEA) * (v2 == a2)) ^ v3)))((v3 + 2038) ^ 0x45Cu);
}

uint64_t sub_22B37595C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  uint8x16_t v54 = (unsigned int *)(v53 + 4 * v48);
  unsigned int v55 = v50 & 0x80000000;
  uint64_t v56 = (v49 ^ 0x141u) + v48 - 2608;
  int v57 = *(_DWORD *)(v53 + 4 * v56);
  unsigned int v58 = v54[397] ^ ((v57 & 0x7FFFFFFE | v55) >> 1);
  *uint8x16_t v54 = (v58 + v51 - (a4 & (2 * v58))) ^ *((_DWORD *)&a48 + (v57 & 1));
  return (*(uint64_t (**)(void))(v52 + 8 * ((1339 * (v56 == 227)) ^ v49)))();
}

uint64_t sub_22B3759C8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((17 * ((v0 | 0x100) ^ 0x5DD) - 1989029347) & 0x768E2B65) - 2114)
                                * (*(_DWORD *)(v1 - 136) == *(_DWORD *)(v1 - 152))) ^ (v0 | 0x100))))();
}

uint64_t sub_22B375A24()
{
  if (STACK[0x218]) {
    BOOL v4 = *(void *)((v1 ^ 0x6FDCEC412A2DC68BLL) - 0x6FDCEC412A2DC673) == 0x3FB394992CBB4F6FLL;
  }
  else {
    BOOL v4 = 1;
  }
  char v7 = v4 || STACK[0x210] == 0 || v2 == 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((38 * (((((v0 - 31) ^ 0xB4) + 1) ^ v7) & 1)) ^ v0)))();
}

uint64_t sub_22B375AB4(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v8 + a7)) = *(void *)(v9 + (v8 + a7));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 != a7) * a6) ^ a1)))();
}

uint64_t sub_22B375AE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return (*(uint64_t (**)(uint64_t))(v45
                                            + 8
                                            * (int)(((((a6 - 2022603587) & 0x788E7D77)
                                                    + ((a6 + 1644294817) & 0x9DFE0672)
                                                    - 4492)
                                                   * (v44 == a4)) ^ (a6 - 2350))))(a44);
}

uint64_t sub_22B375B40@<X0>(int a1@<W8>)
{
  unsigned int v4 = 731811679 * (((&v6 | 0x64C8AD6) - (&v6 & 0x64C8AD6)) ^ 0x4FBA2C92);
  uint64_t v6 = 0xB8308F1D17695ALL;
  int v10 = v4 + a1 - 3444;
  unsigned int v7 = v4 + 1399495942;
  unsigned int v8 = v4 - 315487230;
  uint64_t v9 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v3 + 8 * (a1 + 220)))(&v6);
  *(_DWORD *)(v1 + 4) = *(_DWORD *)(v2 - 0x19157D3ABD2659C6);
  return result;
}

uint64_t sub_22B375BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((4011 * (((((v7 + 579) ^ (a6 + 2911)) + 1455040819) & v6) == 0)) ^ v7)))();
}

uint64_t sub_22B375C10(uint64_t a1)
{
  uint64_t v6 = a1 + 0x6FDCEC412A2DC68BLL;
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0x3FB394992CBB4F6FLL;
  *(void *)(a1 + 32) = 0;
  uint64_t v12 = v2;
  uint64_t v10 = a1 + 0x689CF6FF511E74BBLL;
  unsigned int v11 = v5
      - 1990461019 * ((((2 * &v10) | 0x5C2E8EC6) - &v10 - 773277539) ^ 0x1F3E5EA)
      - 1094;
  (*(void (**)(uint64_t *))(v4 + 8 * (v5 + 2127)))(&v10);
  int v7 = v13;
  uint64_t v8 = ((v5 ^ 0x3234C92Bu) + 0x6FDCEC40F7F8F7A6) ^ v6;
  if (v13 != v3) {
    uint64_t v8 = 0;
  }
  *uint64_t v1 = v8;
  return v7 ^ v3;
}

uint64_t sub_22B375D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((105 * (a11 == (v13 ^ (v11 + 484) ^ v14))) ^ v13)))();
}

uint64_t sub_22B375D54()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v1 - 579745715) & 0x228E37F0 ^ (7
                                                                * ((((((v1 - 579745715) & 0x228E37F0)
                                                                                  - 1247) | 0x892) ^ v2 ^ ((v1 - 579745715) & 0x228E37F0 ^ 0xDFEFF39E) & (2 * v0))
                                                                               + (v0 ^ 0x487165D0)
                                                                               + 2072847822 == 1803886861)))))();
}

uint64_t sub_22B375DD4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v2 + 1803453811) & 0x94817DBF) + (v2 ^ 0x85)) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_22B375E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  unsigned int v63 = ((v60 + STACK[0x218] - 37) ^ LODWORD(STACK[0x52C])) + (v61 ^ v60);
  *(_DWORD *)(a60 + 52) = ((v63 % 0x2710) ^ 0x7F3FFA55) - 103762513 + ((2 * (v63 % 0x2710)) & 0x74AA);
  return (*(uint64_t (**)(void))(v62 + 8 * ((a8 - 1011) ^ (359 * (a60 == -56)))))();
}

uint64_t sub_22B375F24()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 == v1) ^ (v2 - 112)) & 1 | (2
                                                                                  * (((v0 == v1) ^ (v2 - 112)) & 1))) ^ v2)))();
}

uint64_t sub_22B375F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned char *a24)
{
  uint64_t v27 = *a20;
  *(unsigned char *)(v27 - 0x24B64731C5A67E98) = a24[19];
  *(unsigned char *)(v27 - 0x24B64731C5A67E99) = a24[18];
  *(unsigned char *)(v27 - 0x24B64731C5A67E9ALL) = a24[17];
  *(unsigned char *)(v27 - 0x24B64731C5A67E9BLL) = a24[16];
  *(unsigned char *)(v27 - 0x24B64731C5A67E9CLL) = a24[15];
  *(unsigned char *)(v27 - 0x24B64731C5A67E9DLL) = a24[14];
  *(unsigned char *)(v27 - 0x24B64731C5A67E9ELL) = a24[13];
  *(unsigned char *)(v27 - 0x24B64731C5A67E9FLL) = a24[12];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA0) = a24[11];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA1) = a24[10];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA2) = a24[9];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA3) = a24[8];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA4) = a24[7];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA5) = a24[6];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA6) = a24[5];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA7) = a24[4];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA8) = a24[3];
  *(unsigned char *)(v27 - 0x24B64731C5A67EA9) = a24[2];
  *(unsigned char *)(v27 - 0x24B64731C5A67EAALL) = a24[1];
  *(unsigned char *)(v27 - 0x24B64731C5A67EABLL) = *a24;
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((3184
                                              * (*a6 == ((((v24 - 1577) | 0x43B) + 5033184) | 0x7810600)
                                                      + ((((v24 - 1577) | 0x43B) - 612) ^ 0x6392828C))) ^ ((v24 - 1577) | 0x43B))))(v26);
}

uint64_t sub_22B3761E8()
{
  BOOL v5 = v3 < v1;
  if (v5 == v2 + ((v0 + 1002) ^ 0x577u) > 0xF2208200) {
    BOOL v5 = v1 + v2 + 1 < v3;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * v5) ^ v0)))();
}

uint64_t sub_22B376268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned char *a50)
{
  a50[128] = v50[12];
  a50[129] = v50[4];
  a50[131] = v50[13];
  uint64_t v53 = *(uint64_t (**)(void))(v51
                            + 8
                            * ((((*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8 * (v52 + 3488)))(142, 2932825243) != 0)* (((v52 + 516) | 0x10) ^ 0x469)) ^ (v52 + 2839)));
  return v53();
}

void sub_22B3762E8(uint64_t a1)
{
  *(void *)a1 = 11008;
  strcpy((char *)(a1 + 8), "************************************");
  *(unsigned char *)(a1 + 45) = 0;
  *(_WORD *)(a1 + 46) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  strcpy((char *)(a1 + 64), "************************************");
  *(unsigned char *)(a1 + 101) = 0;
  *(_WORD *)(a1 + 102) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(_WORD *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 131) = 0;
  JUMPOUT(0x22B3763A0);
}

uint64_t sub_22B3763E4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(unint64_t *)((char *)&STACK[0x28C] + a2 + a1) = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3560 * (((v3 + 7) ^ 0x706) == (v2 & 0x38))) ^ (v3 - 1057))))();
}

uint64_t sub_22B376438(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, __int16 a19, char a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  int v38 = a5 ^ 0xEB9;
  *v32 += a20;
  if (v37 == v34 + 1) {
    int v39 = v32;
  }
  else {
    int v39 = v32 + 1;
  }
  *v39 += a7;
  v32[2 % v29] += a16;
  v32[(251 * v38 - 3762) % v29] += 92;
  v32[4 % v29] += a23;
  v32[5 % v29] += v28;
  v32[6 % v29] += v33;
  v32[v35 % v29] += v31;
  v32[8 % v29] += a28;
  v32[9 % v29] += a18;
  v32[0xA % v29] += a2;
  v32[0 % v29] = (v32[0 % v29] - ((2 * v32[0 % v29]) & 0x36) + 27) ^ *v30;
  BOOL v40 = 251 * v38 != 3784;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36
                                                                                         + 8
                                                                                         * ((v40 | (2 * v40)) ^ (251 * v38))))(677547889, 677547889, 38134836, 4256832460, -38134836, 54);
}

uint64_t sub_22B376604@<X0>(int a1@<W1>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a2 + v4);
  *(unsigned char *)(a3 + v9) ^= *(unsigned char *)(v7 + (v9 & 0xF)) ^ *(unsigned char *)(v6 + (v9 & 0xF)) ^ *(unsigned char *)((v9 & 0xF) + v5 + 1) ^ (-73 * (v9 & 0xF));
  return (*(uint64_t (**)(void))(v8 + 8 * ((963 * (a2 - 1 != v3)) ^ (a1 - 1785))))();
}

uint64_t sub_22B376664@<X0>(uint64_t a1@<X5>, _OWORD *a2@<X8>)
{
  *a2 = *(_OWORD *)((char *)a2 - 88);
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 == 0) * v4) ^ v3)))();
}

uint64_t sub_22B37668C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x240] = v8;
  *(void *)(a7 + 160) = v8 - 112;
  return v7();
}

uint64_t sub_22B3766A8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 & 0x1F) != 5) | v1)))();
}

uint64_t sub_22B3766F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v20 = a17 - (((v18 ^ 0x1952DB47) + 2 * a17) & 0x2F9123CC) + 74579392;
  unsigned int v21 = ((2 * v20) & 0xBFF7DFEA ^ 0x2F9103C8) + (v20 ^ 0xC8337E13);
  BOOL v23 = (((_BYTE)v21 + 11) & 0xF) != 0 || v21 == -537137163;
  return (*(uint64_t (**)(void))(v19 + 8 * (((((v17 - 760) | 0x400) ^ 0x5D6) * v23) ^ v17)))();
}

uint64_t sub_22B376788(double a1)
{
  *(double *)(v6 + (v3 ^ v2)) = a1;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v4) ^ v1)))();
}

void sub_22B3767B4()
{
}

uint64_t sub_22B3767DC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((2433 * ((v2 & 0x18) == ((a1 - 2013103697) & 0x77FD8E7D ^ 0xC74))) ^ a1)))();
}

uint64_t sub_22B37682C(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unint64_t a62)
{
  uint64_t v67 = (a3 + a2 + a4);
  unint64_t v68 = v67 + a62 + 1;
  uint64_t v69 = (a3 + a2) & 0xF;
  uint64_t v70 = v69 - v67;
  unint64_t v71 = v65 + v70;
  uint64_t v72 = v69 + 1;
  unint64_t v73 = v65 + v69 + 1;
  unint64_t v74 = v70 + v64 + 2;
  unint64_t v75 = v69 + v64 + 37 * (v62 ^ 0xE38u) - 1070;
  unint64_t v76 = v63 + v70;
  unint64_t v77 = v63 + v72;
  BOOL v79 = v73 > a62 && v71 < v68;
  int v81 = v74 < v68 && v75 > a62 || v79;
  if (v77 > a62 && v76 < v68) {
    int v81 = 1;
  }
  return (*(uint64_t (**)(void))(v66 + 8 * (((v81 ^ 1) * (v62 - 3601)) ^ v62)))();
}

uint64_t sub_22B3768C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v40 = v36 + (v33 + v35 + LODWORD(STACK[0x238]) + 309348493);
  *(_DWORD *)(v39 - 144) = (v35 + 884) ^ (225134719
                                        * ((((v39 - 168) | 0x5D76C0C3) + (~(v39 - 168) | 0xA2893F3C)) ^ 0x4B8685E8));
  *(void *)(v39 - 136) = v34;
  *(void *)(v39 - 160) = v40;
  *(void *)(v39 - 152) = &STACK[0x5E30592FF90A57D0];
  *(void *)(v39 - 168) = a13;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v35 + 3842)))(v39 - 168);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8 * ((2548 * (*(_DWORD *)(v39 - 128) == v37)) ^ v35)))(v41, a33);
}

uint64_t sub_22B3769A0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 160) = ((v2 - 2871) ^ (v2 - 1588162548) & 0x5EA96FF3u ^ 0xFFFFFFFFFFFFF2BFLL) + a2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 - 2922) ^ 0x1F5)))();
}

uint64_t sub_22B3769B0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 + 714023064) & 0x1570DEFA ^ 0x26E ^ (v0 + 714023064) & 0x1570DEFA ^ 0x8F9 ^ 0xAA1)
                                * (v1 == v2)) ^ (v0 + 714023064) & 0x1570DEFAu)))();
}

void sub_22B376A0C(int a1@<W8>)
{
  *(_DWORD *)(v1 + 52) = a1;
}

void sub_22B376A14(int8x16_t *a1@<X0>, int8x16_t *a2@<X1>, int8x16_t *a3@<X8>)
{
  v3.i64[0] = 0x5050505050505050;
  v3.i64[1] = 0x5050505050505050;
  v4.i64[0] = 0xA8A8A8A8A8A8A8A8;
  v4.i64[1] = 0xA8A8A8A8A8A8A8A8;
  *a3 = veorq_s8(vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), v3)), v4), *a2);
  JUMPOUT(0x22B3A8CECLL);
}

uint64_t sub_22B376D24(uint64_t a1)
{
  int v5 = 184 * (v2 ^ 0x536);
  BOOL v6 = *(_DWORD *)(*(void *)(a1 + 8) + v4) != ((v5 - 130) ^ v3) + v5 + 2469;
  return (*(uint64_t (**)(void))(v1 + 8 * ((4 * v6) | (32 * v6) | v5)))();
}

void sub_22B376D70()
{
  *uint64_t v1 = v0;
}

uint64_t sub_22B376DB4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1
                                                              + 8
                                                              * ((111
                                                                * (((a1 - 1801476204) ^ 0x97EDFF7BFEFE567BLL) != 0x97EDFF7BFEFE567BLL)) ^ 0x124u)))(1339, 1339, 0x386FBD8F7E3DD518);
}

uint64_t sub_22B376E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v51 = 1990461019 * ((v50 + 1125156024 - 2 * ((v50 - 152) & 0x43108550)) ^ 0x6CF427D9);
  v49[394] = a26;
  v49[396] = v48;
  *(_DWORD *)(v50 - 112) = 362873235 - v51;
  *(_DWORD *)(v50 - 152) = v47 - v51 - 179;
  v49[397] = v46 - v45;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(a6 + 8 * (v47 + 2837)))(v50 - 152);
  return (*(uint64_t (**)(uint64_t))(a45
                                            + 8
                                            * ((3735
                                              * (*(_DWORD *)(v50 - 136) == ((v47 - 306228700) & 0x1240AFB6) - 604052155)) ^ v47)))(v52);
}

uint64_t sub_22B376F50()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v1 ^ (2
                                     * (((v0 == 0x15D07F8C191A50A1) ^ (((v1 - 66) & 0xBF) + 68)) & 1)))))();
}

uint64_t sub_22B376FA8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((54 * (v3 + 1 != v5 + 48)) ^ a3)))();
}

uint64_t sub_22B37709C()
{
  if (*(void *)(v2 + 32)) {
    BOOL v4 = *(_DWORD *)(v2 + 4) - v0 == ((v1 - 1353) ^ 0x3D7) + 1665627012;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = !v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * v5) ^ v1)))();
}

void sub_22B3770E8()
{
}

uint64_t sub_22B37714C(uint64_t a1, int a2, uint64_t a3)
{
  BOOL v6 = v4 < v3;
  if (v6 == a3 - 0x603A74C941EFD443 < v3 + ((a2 - 1143) ^ 0x522u) + ((a2 - 1143) | 2u) - 1588) {
    BOOL v6 = a3 - 0x603A74C941EFD443 < v4;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((499 * v6) ^ a2)))();
}

uint64_t sub_22B3771BC()
{
  int v5 = 1948972247 * ((v4 + 591117320 - 2 * ((v4 - 136) & 0x233BBC90)) ^ 0x96A5497E);
  *(void *)(v4 - 128) = v3;
  *(_DWORD *)(v4 - 136) = (v2 + 2207) ^ v5;
  *(_DWORD *)(v4 - 132) = v2 + 2647 - v5 + v1 + 222050318;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 2971)))(v4 - 136);
  return sub_22B377234(v6);
}

uint64_t sub_22B377234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 128) = a12;
  *(_DWORD *)(v17 - 120) = v15 + ((~((v17 - 136) | 0xD71DBC0) + ((v17 - 136) & 0xD71DBC0)) ^ 0x189913CB) * v16 - 1049;
  *(void *)(v17 - 112) = v13;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 | 0x112)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((((v15 - 1) ^ (*(_DWORD *)(v17 - 136) > v12)) & 1)
                                              * (((v15 - 3648) | 0x30C) ^ 0x3BB)) ^ v15)))(v18);
}

uint64_t sub_22B3772F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * (((a8 - 110 + 9 * (a8 ^ 0xAC9) - 3809)
                                                                        * ((v9 & 0x18) == 0)) ^ a8)))(a1, a2, a3, (a2 - a5));
}

uint64_t sub_22B377328(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_26DE9FFD0
                                            - 8
                                            + 8
                                            * ((766
                                              * ((*(_DWORD *)(a2 - 0x48A9B556C05DE57DLL) - 1801476204) < 0x15)) ^ 0xDD9u)))(4294925278);
}

uint64_t sub_22B377384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((89 * (*(unsigned __int8 *)(*(void *)(v43 + 32) + 1) != (v42 - 46 + v42 + 39 - 8))) ^ v42)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_22B3773C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,unint64_t a45)
{
  int v49 = 1866394843 * ((~((v47 - 192) | 0x47B99265) + ((v47 - 192) & 0x47B99265)) ^ 0x52515A6E);
  STACK[0x1948] = 0x2517DB9E01464535;
  STACK[0x1958] = a44;
  STACK[0x1960] = a45;
  *(_DWORD *)(v47 - 176) = (v45 - 1778) ^ v49;
  *(_DWORD *)(v47 - 152) = v49 - 1335958178;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(v48 + 8 * ((v45 + 97) ^ 0x19F6)))(v47 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * (((*(_DWORD *)(v47 - 192) != v46 + v45 - 2265 - 164)
                                              * ((82 * ((v45 + 97) ^ 0x9DC)) ^ 0x361)) ^ (v45 + 97))))(v50);
}

uint64_t sub_22B3774BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((29
                                * (v8 + ((((a8 - 1507663350) & 0x59DD1FBD) + 553) ^ (a5 - 2114)) > 0xFFFFFFEF)) ^ a8)))();
}

uint64_t sub_22B377508@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 + 1 != v4 + 32) * v2) ^ a2)))();
}

uint64_t sub_22B3775CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((270
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v4) == v4 + v3 - 667)) ^ v3)))();
}

void sub_22B37760C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) ^ (1990461019
                             * ((2 * ((a1 ^ 0xA07F1D) & 0xD88EB308) - (a1 ^ 0xA07F1D) + 661736695) ^ 0x8359163));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B377704()
{
  *(void *)(v6 - 128) = v5;
  *(void *)(v6 - 112) = v1;
  *(_DWORD *)(v6 - 120) = v3
                        + ((((v6 - 136) | 0x3BAA55AB) - (v6 - 136) + ((v6 - 136) & 0xC455AA50)) ^ 0xD1BD625F) * v0
                        + 986;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 2309)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((303
                                              * (*(_DWORD *)(v6 - 136) + v4 < ((271 * (v3 ^ 0x6EF) + 292291808) & 0xEE93FF89 ^ 0xC311E4B5))) ^ v3)))(v7);
}

uint64_t sub_22B3777D4@<X0>(int a1@<W8>, __n128 a2@<Q0>, uint64_t a3)
{
  v5.n128_u64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v5.n128_u64[1] = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(__n128, __n128))(v4
                                                   + 8
                                                   * ((2688
                                                     * (a3
                                                      - v3
                                                      + ((a1 - 1393175081) & 0x530A27FE ^ 0xDE5113B086A51647) < ((169 * ((a1 - 1393175081) & 0x530A27FE ^ 0x71Eu)) ^ 0x558uLL))) ^ (a1 - 1393175081) & 0x530A27FE)))(a2, v5);
}

uint64_t sub_22B377914()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((701
                                * ((int)((v3 ^ 0xEFDFF7FF) + 1466940080 + (v0 & 0xDFBFEFFE) - 1196405424) > v1 - 730 + v1 - 909 - 1184)) ^ v1)))();
}

uint64_t sub_22B3779A8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1535
                                * (*(unsigned __int8 *)(a1 - 0x3FB394992CBB4F6ELL) == (((v1 ^ 8) - v2) ^ 0x81))) ^ v1)))();
}

uint64_t sub_22B3779FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (v2 - 2091420933) & 0x7CA88CFD;
  __int16 v5 = *(unsigned __int8 *)(v3 - 0x717BE438C5D08564);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = (void *)(v3 - 0x717BE438C5D08554);
  *uint64_t v7 = v6;
  v7[1] = v6 + ((unint64_t)((unsigned __int16)((613 * (v4 ^ 0x44D) - 3064) * v5) % 0x90u) << 8);
  return (*(uint64_t (**)(void))(a2 + 8 * (v4 | 7u)))();
}

uint64_t sub_22B377AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, unint64_t *, unint64_t *, unint64_t *))(v11 + 28320))(a1, a2, a3, a4, a5, a6, 4081666491, 4016718441, a9, &STACK[0x48A9B556C05DE779], a11, &STACK[0x76E63943701239A1], &STACK[0x36FC4A2A40148817], &STACK[0x7FD2E20123E43E7F]);
}

void sub_22B377C54()
{
}

uint64_t sub_22B377CD8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10 = (a2 + a1 + a3);
  uint64_t v11 = v10 + a5;
  uint64_t v12 = ((((v5 - 1705) | 0x8D2) - 2180) ^ 0x141) & v10;
  uint64_t v13 = v8 - v11;
  unint64_t v14 = (v12 | v7) - v11;
  uint64_t v15 = (v12 | v6) - v11;
  unint64_t v16 = v13 + v12;
  int v20 = (unint64_t)(a4 - a5 - 0x1273A3CF571752FALL) > 0xF
     && v16 > 0xF
     && v14 > 0xF
     && (unint64_t)(v15 + 2) > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * (((8 * v20) | (v20 << 6)) ^ v5)))();
}

void sub_22B377D68()
{
}

uint64_t sub_22B377DC4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((a7 - 765006584) & 0x2D991FFC) - 3211) ^ 0x2C1)
                                * ((a4 + a3 + 143769609) < 8)) ^ a7)))();
}

uint64_t sub_22B377E24()
{
  return 4294925278;
}

void sub_22B377E2C()
{
}

uint64_t sub_22B377EDC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((((41 * (a3 ^ 0xEAF) - 2038740117) & 0x7984B764) - 1414) * (v3 < 0x20)) ^ a3)))();
}

uint64_t sub_22B377F28()
{
  return v0();
}

uint64_t sub_22B377F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,unint64_t *a21,unint64_t *a22,int a23,unsigned int a24)
{
  int v29 = v24 - 912;
  a20 = &STACK[0xA039FA35F0E834F];
  a21 = &STACK[0xC6FBACBD8C975A6];
  a22 = a15;
  a24 = (v29 + 2567) ^ (((&a20 & 0x39B3F342 | ~(&a20 | 0x39B3F342)) ^ 0xE9A8AE34) * v25);
  (*(void (**)(unint64_t **))(v27 + 8 * (v29 + 2971)))(&a20);
  HIDWORD(a20) = (v29 + 951) ^ (1734664879
                              * (((&a20 ^ 0x83270ED)
                                - 1277660199
                                - 2 * ((&a20 ^ 0x83270ED) & 0xB3D873D9)) ^ 0x94312B2E));
  a21 = a15;
  a22 = &STACK[0x1E43BA5646C78F28];
  (*(void (**)(unint64_t **))(v27 + 8 * (v29 + 3014)))(&a20);
  LODWORD(a20) = v29
               - (((&a20 | 0xB7B212B1) - &a20 + (&a20 & 0x484DED48)) ^ 0x10E17AD8)
               * v28
               - 540;
  a21 = &STACK[0x1367E3C5726D8FEB];
  a22 = a15;
  (*(void (**)(unint64_t **))(v27 + 8 * (v29 ^ 0x1462)))(&a20);
  LODWORD(a22) = v29
               - 1734664879 * (((&a20 | 0x2F6342F5) + (~&a20 | 0xD09CBD0A)) ^ 0xB86AEE)
               + 1988;
  a21 = a15;
  uint64_t v30 = (*(uint64_t (**)(unint64_t **))(v27 + 8 * (v29 ^ 0xBE7)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8 * (((a20 == v26) * (((v29 - 1144) | 0x808) ^ 0x8F8)) ^ v29)))(v30);
}

uint64_t sub_22B37816C@<X0>(int a1@<W1>, unsigned int a2@<W2>, unsigned int a3@<W3>, int a4@<W4>, uint64_t a5@<X7>, int a6@<W8>)
{
  BOOL v12 = a2 < a3;
  *(unsigned char *)(a5 - 0x1C88CB57747EAF29 + (v9 - 1631270593)) = *(unsigned char *)(v7 + (a6 + v8))
                                                                          - ((((a4 ^ a1) - 85) & 0xDF ^ 0x1C) & (2 * *(unsigned char *)(v7 + (a6 + v8))))
                                                                          + 42;
  if (v12 == a6 + v11 < v10) {
    BOOL v12 = a6 + v11 < a2;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v12 * a1) ^ a4 ^ a1)))();
}

uint64_t sub_22B378200(uint64_t result)
{
  unint64_t v1 = 1292559617 * ((result - 2 * (result & 0xA680B104F4E3B206) - 0x597F4EFB0B1C4DFALL) ^ 0x7F1A8C7C53B0DA6FLL);
  int v2 = *(_DWORD *)(result + 32) - v1;
  int v3 = *(_DWORD *)(result + 36) + v1;
  int v4 = *(_DWORD *)(result + 28) ^ v1;
  uint64_t v5 = *(void *)(result + 8);
  uint64_t v6 = *(void *)(result + 16);
  unint64_t v7 = v5 + v1;
  unint64_t v8 = v6 + v1;
  int v9 = *(_DWORD *)(result + 24) ^ v1;
  BOOL v10 = v5 == v6;
  if (v4) {
    BOOL v11 = v7 > v8;
  }
  else {
    BOOL v11 = v10;
  }
  if (!v11) {
    int v2 = v3;
  }
  *(_DWORD *)uint64_t result = v9 ^ v2;
  return result;
}

void sub_22B37828C()
{
}

uint64_t sub_22B3783A8(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10 = (a2 + v8 + v7 - a3 + 3530);
  *(void *)(a1 - 7 + v10) = *(void *)(v5 - 7 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 - (v6 & 0xFFFFFFF8) == -8) * ((a5 + 812) ^ 0xECB)) | a5)))();
}

uint64_t sub_22B378404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13)
{
  a12 = (1292559617 * (((&a12 | 0x3A59FE58) - (&a12 & 0x3A59FE58)) ^ 0x9D0A9631)) ^ 0x9B42BBAD;
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v13 + 32176))(&a12);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((1400 * (a13 == -604050357)) ^ v14)))(v15);
}

void sub_22B37848C()
{
}

uint64_t sub_22B378494(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_26DE9FFD0
                                            - 8
                                            + 8
                                            * ((41 * (*(_DWORD *)(a2 - 0x48A9B556C05DE57DLL) != 1801476217)) ^ 0x649u)))(4294925278);
}

uint64_t sub_22B3784E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1478
                                * (((v5 + v3 - 667) & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_22B378528@<X0>(int a1@<W7>, int a2@<W8>)
{
  *(_DWORD *)(v6 + 4 * v3) = *(_DWORD *)(v4 + 4 * (*(_DWORD *)(v6 + 4 * (v3 + 1)) & 1)) ^ *(_DWORD *)(v6 + 4 * ((a2 + 574) + v3) + v5) ^ ((*(_DWORD *)(v6 + 4 * (v3 + 1)) & 0x7FFFFFFE | v2 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 226) * a1) ^ a2)))();
}

void sub_22B378584()
{
  if (v0 == 519415315) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 20) = v1;
}

uint64_t sub_22B3785E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((2 * v0) ^ 0x1DE8) - 637) ^ (4 * v0) ^ 0x28C8) * (LODWORD(STACK[0x268]) == v1)) ^ v0)))();
}

uint64_t sub_22B378634()
{
  BOOL v5 = v2 + 87258233 > ((v0 - 1665705806) & 0x6348A7FFu) + 1419038783 && 1419039789 - v1 > (v2 + 87258233);
  return (*(uint64_t (**)(void))(v3 + 8 * ((500 * v5) ^ v0)))();
}

void sub_22B3786A8()
{
}

uint64_t sub_22B3786B4(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v2 = 1328090399 * ((a1 & 0xA566FC58 | ~(a1 | 0xA566FC58)) ^ 0xA54A679D);
  int v3 = *(_DWORD *)a1 ^ v2;
  int v4 = *(_DWORD *)(a1 + 4) + v2;
  uint64_t v5 = *(void *)(a1 + 16);
  unsigned int v6 = 1990461019 * ((&v9 + 377671751 - 2 * (&v9 & 0x1682D047)) ^ 0x396672CE);
  int v7 = 661070433 * (*(_DWORD *)(a1 + 12) ^ v2) + 622531653;
  uint64_t v9 = *(void *)(a1 + 24);
  int v10 = ((v7 ^ 0x3BF7BEB4) - 4300852 + ((2 * v7) & 0x77EF7D68)) ^ v6;
  uint64_t v12 = v5;
  int v13 = v4 - ((2 * v4 + 243382314) & 0x627CAECA) + v6 - 125881478;
  int v14 = v6 ^ (v3 + 1653804008);
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_26DE9F480 + (int)(v3 ^ 0x9D6D0101)) + (int)(v3 ^ 0x9D6D1036)
                                                                                             - 1))(&v9);
  *(_DWORD *)(a1 + 8) = v11;
  return result;
}

void sub_22B378850(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 731811679 * ((((2 * a1) | 0x7D5D7952) - a1 - 1051638953) ^ 0x77581AED);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B37894C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((491
                                                                * (v3 == ((((v2 + 463277564) & 0xE462EFFE) - 609) ^ 0xAA))) ^ v2)))(a1, a2, 625);
}

void sub_22B37899C()
{
}

uint64_t sub_22B378A00(int a1, int a2, int a3, int a4, int a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v66 = v62 + 256;
  *(unsigned char *)(a59 - 0x2970AB8229FC3D2ELL + (v61 + a5)) = *(unsigned char *)(v65 + v63 + (v66 ^ a3 ^ a7));
  unsigned int v67 = v63 + 1 + a1;
  int v68 = (v59 < v60) ^ (v67 < a2 + 1403);
  BOOL v69 = v67 < v59;
  if (v68) {
    BOOL v69 = v59 < v60;
  }
  return (*(uint64_t (**)(void))(v64 + 8 * ((v69 * a4) ^ v66)))();
}

void sub_22B378A78()
{
}

void sub_22B378A88()
{
}

void sub_22B378AC0()
{
}

uint64_t sub_22B378B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((126
                                * ((((v18 ^ 0x93C) + 160643100) ^ (a10 - (a18 & 0xE9DA7144) - 1024392244))
                                 + 1676131836
                                 + ((2 * (a10 - (a18 & 0xE9DA7144) - 1024392244)) & 0xFAFCFF7E ^ 0xE8D87144) == 1634090427)) ^ v18)))();
}

uint64_t sub_22B378C1C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 3145 + 17 * (v2 ^ 0xE69) - 1292) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_22B378C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((3551 * (a7 + 1 == v9 + 24)) ^ v7)))();
}

uint64_t sub_22B378D10()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((22 * (v0 > v2 + 623)) ^ 0x886)))();
}

uint64_t sub_22B378D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v8 + 8 * ((909 * (v7 == (((a7 + 593) | 0x154) ^ 0xDBFED6A5) + ((a7 + 1551509147) & 0xA385DFFF))) ^ a7)))(a1, a2, a3, a4, a5, a6, &STACK[0x310]);
}

void sub_22B378DAC()
{
}

void sub_22B378DB4()
{
}

void sub_22B378DBC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1
     - 1990461019 * ((2 * ((a1 ^ 0x51ADEDA1) & 0x37398890) - (a1 ^ 0x51ADEDA1) - 926517393) ^ 0xB68F3847);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (char *)*(&off_26DE9F480 + (v1 | 0x2A)) - 8;
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * (v1 ^ 0xEBB)])((char *)*(&off_26DE9F480 + v1 - 150) - 4, sub_22B3AC7C8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B378ECC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  int v13 = 26 * (a5 ^ 0x386);
  uint64_t v14 = ((v13 - 41981021) & 0x2809FED ^ a4) + v12 + v9;
  uint64_t v15 = v14 + v5;
  uint64_t v16 = v14 + *(void *)(v11 - 248);
  unint64_t v17 = v15 - v16;
  uint64_t v18 = (v12 + v9) & 0xF;
  unint64_t v19 = v18 + v8 - v16;
  unint64_t v20 = (v18 | v7) + 13 * (v13 ^ 0x38Du) - v16 - 1048;
  uint64_t v21 = (v18 | v6) - v16;
  BOOL v23 = v17 >= 0x10 && v19 >= 0x10 && v20 >= 0x10;
  unint64_t v24 = v21 + 2;
  int v26 = !v23 || v24 < 0x10;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2015 * v26) ^ v13)))();
}

uint64_t sub_22B378F78@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((a1 + 2102) ^ (v4 - 447)) + v5;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 + 1403) | (32 * (v5 - 1 != v3)))))();
}

uint64_t sub_22B378FB0@<X0>(uint64_t a1@<X0>, char a2@<W4>, int a3@<W8>)
{
  unsigned int v8 = *(_DWORD *)(v7 - 220 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a3)) = (((v4 ^ (a2 + 77)) - 111) ^ HIBYTE(v8)) - ((v8 >> 23) & 0x54) + 42;
  *(unsigned char *)(a1 + (v5 + a3 + 1)) = (BYTE2(v8) ^ 0x95) - ((v8 >> 15) & 0x54) + 42;
  *(unsigned char *)(a1 + (v5 + a3 + 2)) = (BYTE1(v8) ^ 0x67) + (~(2 * (BYTE1(v8) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v5 + a3 + 3)) = v8 ^ 0x13;
  unsigned int v9 = *(_DWORD *)(v7 - 128) - 1986262999;
  BOOL v10 = v9 < v3;
  BOOL v11 = v5 + 2048822053 < v9;
  if (v5 + 2048822053 < v3 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((4050 * v11) ^ v4)))();
}

void sub_22B379090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  LODWORD(STACK[0x378]) = 1287984556;
  LODWORD(STACK[0x4AC]) = 2094922313;
  LODWORD(STACK[0x4FC]) = (LODWORD(STACK[0x420]) ^ 0x6BE9FC6F) - 9020419 + ((2 * LODWORD(STACK[0x420])) & 0xD7D3F8DE);
  STACK[0x300] = v9;
  a7[24] = v8;
  BOOL v10 = (char *)&STACK[0x560] + v7 - 0x3D63BD92DA195902;
  a7[15] = v10;
  a7[57] = (char *)&STACK[0x560] + v7 - 0x18AD76611472D55BLL;
  *(void *)BOOL v10 = 0x6370646600;
  v10[8] = 1;
  JUMPOUT(0x22B3B70E8);
}

uint64_t sub_22B3790A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, unsigned int a17, unint64_t *a18, uint64_t a19)
{
  unsigned int v22 = 1328090399
      * (((&a14 | 0x904803B5) - &a14 + (&a14 & 0x6FB7FC48)) ^ 0x6F9B678F);
  a14 = (v21 - 1653802322) ^ v22;
  a15 = 1858565610 - v22;
  a17 = v22 ^ 0x881FFD3C;
  a18 = &STACK[0x25ABA05A3795B102];
  a19 = a12;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 ^ 0x15A9)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((102 * (a16 == v19 + ((v21 - 780) | 0xD06) - 4023)) ^ v21)))(v23);
}

void sub_22B379188()
{
}

uint64_t sub_22B3791B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(v12 + (a6 + v8)) ^= *(unsigned char *)(v9 + ((a6 + v8) & 0xFLL)) ^ *(unsigned char *)(v10
                                                                                               + (((_BYTE)a6 + (_BYTE)v8) & 0xF)) ^ *(unsigned char *)((((_BYTE)a6 + (_BYTE)v8) & 0xF) + v11 + 1) ^ (-115 * ((a6 + v8) & 0xF));
  return (*(uint64_t (**)(void))(v13 + 8 * ((114 * (a6 - 1 == v7)) ^ (a7 + 848))))();
}

uint64_t sub_22B379214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int v16 = v13 - 157453509 + ((v12 - 2938) | 0x210);
  unsigned int v17 = *(_DWORD *)(v15 - 228 + (v16 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a12 + v16) = v17 ^ 0x13;
  *(unsigned char *)(a12 + (v13 - 157452687)) = (BYTE2(v17) ^ 0x95) + (~(v17 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a12 + (v13 - 157452688)) = (BYTE1(v17) ^ 0x67) - ((2 * (BYTE1(v17) ^ 0x67)) & 0x55) + 42;
  *(unsigned char *)(a12 + (v13 - 157452686)) = (HIBYTE(v17) ^ 0x11) - ((v17 >> 23) & 0x54) + 42;
  unsigned int v18 = *(_DWORD *)(v15 - 136) + 1643172229;
  BOOL v19 = v18 < 0x755F8DAC;
  BOOL v20 = v13 + 1811743775 < v18;
  if ((v13 + 1811743775) < 0x755F8DAC != v19) {
    BOOL v20 = v19;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((406 * v20) ^ v12)))();
}

uint64_t sub_22B379314(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x9CA) + 2410 + 3 * (a1 ^ 0x9CA) - 1169) * (v1 == v2)) ^ a1)))();
}

void sub_22B379350(uint64_t a1)
{
  int v1 = 1734664879 * (a1 ^ 0x2FDB281A);
  int v2 = *(_DWORD *)(a1 + 48) - v1;
  if (*(void *)a1 | *(void *)(a1 + 32)) {
    BOOL v3 = *(_DWORD *)(a1 + 52) + v1 == 1635332212;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  __asm { BRAA            X8, X17 }
}

void sub_22B3794C4()
{
}

uint64_t sub_22B379540@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v3 + ((v3 + 174189677) & 0xF59E0B2D ^ 0xFFFFFB47) - 980) * (v2 == v1)) ^ v3)))();
}

void sub_22B379584()
{
}

uint64_t sub_22B37958C()
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 + dword_2683EB100) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 + dword_2683EB100) ^ 0x4D))] ^ 0x2A])
                - 7);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (v1 ^ qword_2683EB0F0 ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * (v1 ^ qword_2683EB0F0 ^ 0x4D))] ^ 0x85])
                + 213);
  unint64_t v3 = 2059148423 * ((*(void *)(v2 - 4) + v1) ^ (unint64_t)&v10 ^ 0xD2361EE8B96764DLL);
  *(void *)(v0 - 4) = v3;
  *(void *)(v2 - 4) = v3;
  LOBYTE(v3) = -121 * ((v3 + *(_DWORD *)(v0 - 4)) ^ 0x4D);
  int v13 = (char *)*(&off_26DE9F480
                + (*((unsigned char *)off_26DEA0388
                                                  + (*((unsigned __int8 *)off_26DE9F930 + v3) ^ 0x64u)
                                                  - 4) ^ v3)
                + 370)
      - 4;
  unsigned int v11 = 1855 - 1990461019 * (((&v11 | 0x9D9722C4) - (&v11 & 0x9D9722C4)) ^ 0xB273804D);
  int v4 = (char *)off_26DE9F7D0 - 4;
  int v5 = (char *)off_26DE9FD38 - 12;
  uint64_t v6 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_2683EB100) ^ 0x4D)) ^ byte_22B48A680[byte_22B47E880[(-121 * ((qword_2683EB0F0 + dword_2683EB100) ^ 0x4D))] ^ 0x45])
               + 181)
     - 8;
  (*(void (**)(unsigned int *))&v6[8
                                            * (*((unsigned char *)off_26DE9FD38
                                                                + (*((unsigned __int8 *)off_26DE9F7D0
                                                                   + (-121
                                                                                     * (*(_DWORD *)(v0 - 4) ^ 0x4D ^ *(_DWORD *)(v2 - 4)))
                                                                   - 4) ^ 0x4Fu)
                                                                - 12) ^ (-121
                                                                       * (*(_DWORD *)(v0 - 4) ^ 0x4D ^ *(_DWORD *)(v2 - 4))))
                                            + 31224])(&v11);
  unsigned __int8 v7 = -121 * (*(_DWORD *)(v0 - 4) ^ 0x4D ^ *(_DWORD *)(v2 - 4));
  int v13 = (char *)*(&off_26DE9F480
                + (*((unsigned char *)off_26DE9FFD8
                                                  + (*((unsigned __int8 *)off_26DE9FEC8 + v7 - 4) ^ 3u)
                                                  - 8) ^ v7)
                + 251);
  unsigned int v11 = 1855
      - 1990461019
      * ((((&v11 | 0x222D00F6) ^ 0xFFFFFFFE) - (~&v11 | 0xDDD2FF09)) ^ 0xF2365D80);
  (*(void (**)(unsigned int *))&v6[8
                                            * ((-121
                                                               * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x4D)) ^ v5[v4[(-121 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x4D))] ^ 0xE7])
                                            + 31544])(&v11);
  char v12 = 49 * (((&v11 | 0x22) - (&v11 | 0xDD) - 35) ^ 0x94) + 85;
  unsigned int v11 = 1711
      - 1503746353 * (((&v11 | 0xCF143B22) - (&v11 | 0x30EBC4DD) + 820757725) ^ 0xE975F994);
  unsigned __int8 v8 = -121 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x4D);
  return (*(uint64_t (**)(unsigned int *))&v6[8
                                                      * (*((unsigned char *)off_26DE9FDA0
                                                                          + (*((unsigned __int8 *)off_26DEA02C0 + v8 - 8) ^ 0xE6u)
                                                                          - 8) ^ v8)
                                                      + 31576])(&v11);
}

uint64_t sub_22B379960()
{
  return sub_22B32088C();
}

uint64_t sub_22B379994(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (a4 + a3 + a5);
  uint64_t v15 = a10 - 0x55CFAF5ABE15C255 + v14;
  uint64_t v16 = (((a8 - 3211) ^ 0xC25) - 3717) & v14;
  uint64_t v17 = v10 - v15;
  uint64_t v18 = (v16 | v11) - v15;
  unint64_t v19 = (v16 | v12) - v15;
  BOOL v23 = (unint64_t)(a6 - (a10 - 0x55CFAF5ABE15C255) - 0x6BC6E02DD4682402) > 0xF
     && (unint64_t)(v17 + v16) > 0xF
     && (unint64_t)(v18 + 4) > 0xF
     && v19 > 0xF;
  return (*(uint64_t (**)(void))(v13 + 8 * ((2 * v23) | (16 * v23) | (a8 - 1327))))();
}

uint64_t sub_22B379A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(_UNKNOWN **))(a4 + 8 * (a36 + 1217)))(&off_26DE9F480);
}

uint64_t sub_22B379AA4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v5 = (v4 - 322) | 0x83;
  if (v3 + 1226920840 + v5 < 0) {
    int v6 = v3;
  }
  else {
    int v6 = 1841123810 - v3;
  }
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (((v6 - 920561906 >= 0) * (((v5 + 1856) ^ 0x1A4) - 169)) ^ v5)))(a1, (a2 + 1));
}

uint64_t sub_22B379B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  unint64_t v23 = 2009815553
      * ((((unint64_t)&a14 | 0x15AFC2B942150843)
        - ((unint64_t)&a14 | 0xEA503D46BDEAF7BCLL)
        - 0x15AFC2B942150844) ^ 0x6D2CA62B31E2606);
  HIDWORD(a14) = v23 + v21 + 477;
  a15 = a13;
  a16 = v23 + 0x7B7CD87A8C1ABF73 * v19 + 0x6A98DE2DE1CC0B24;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 ^ 0x1117)))(&a14);
  unsigned int v24 = 1990461019
      * ((-1991743657 - (&a14 | 0x89486757) + (&a14 | 0x76B798A8)) ^ 0x59533A21);
  a14 = v22;
  a15 = a13;
  a17 = (v21 + 3027) ^ v24;
  LODWORD(a16) = ((v18 ^ 0x477F37FD) - 33629956 + ((v18 << ((v21 ^ 0xC5) + 14)) & 0x8EFE6FFA)) ^ v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 + 3812)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3837 * (HIDWORD(a16) == v17)) ^ v21)))(v25);
}

void sub_22B379CB8()
{
}

void sub_22B379CC4(uint64_t a1)
{
  int v1 = 1328090399 * ((-2 - ((a1 | 0xD6D05625) + (~a1 | 0x292FA9DA))) ^ 0xD6FCCDE0);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_22B379DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1485 * (a6 + 1 == v6 + 64)) ^ a5)))();
}

uint64_t sub_22B379E80@<X0>(int a1@<W8>)
{
  unsigned int v5 = v3 - ((v4 - 1678465005 + ((a1 - 238453801) & 0xE368FFF)) & 0x892A94CA) - 1836079794;
  unsigned int v6 = 1328090399 * (((v8 | 0xAFA0ACE7) + (~v8 | 0x505F5318)) ^ 0x5073C8DC);
  uint64_t v9 = v2;
  v8[0] = v5 ^ v6;
  v8[1] = v6 + a1 - 107;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (a1 + 3607)))(v8);
}

uint64_t sub_22B379F28@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t),uint64_t a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v55 = 1948972247 * ((~((v54 - 136) | 0x9814ADBD) + ((v54 - 136) & 0x9814ADBD)) ^ 0xD275A7AC);
  *(_DWORD *)(v54 - 120) = a1 - v55 + 409;
  *(void *)(v54 - 128) = a53;
  *(_DWORD *)(v54 - 136) = v55 + a42 + 1134414641;
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (a1 ^ 0xF77)))(v54 - 136);
  return a39(v56);
}

uint64_t sub_22B379FB4@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v7 = v5 ^ 0xF2;
  int v8 = v4 - 1;
  uint64_t v9 = (((v7 - 2303) | 0x15) ^ v3) + v4;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9) ^ 0x2A;
  return (*(uint64_t (**)(void))(v6 + 8 * ((242 * (v8 != a3)) ^ v7)))();
}

uint64_t sub_22B37A000@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned int *a46)
{
  int v47 = a2 + 176;
  uint64_t v48 = (*(uint64_t (**)(void, uint64_t, void))(v46 + 8 * (a2 ^ 0xD4C)))(*a46, a1, LODWORD(STACK[0x420]));
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * ((3000 * (LODWORD(STACK[0x36C]) == ((v47 + 1666) | 0x88) - 604053101)) ^ v47)))(v48);
}

uint64_t sub_22B37A078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 1968439266) + 4) = (**(unsigned char **)(a2 - 0x48A9B556C05DE579) ^ 0x7F)
                                                       + 2 * **(unsigned char **)(a2 - 0x48A9B556C05DE579)
                                                       - 97;
  unsigned int v5 = *a3 + 1174076582;
  BOOL v6 = v5 < 0xB15B5512;
  BOOL v7 = v5 > 0xB15B5513;
  if (v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((2703 * v7) ^ 0x712u)))();
}

uint64_t sub_22B37A140()
{
  LODWORD(STACK[0x320]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((631 * (v0 ^ 0x794) - 2899) | 0x46A) - 1314) * ((v1 & 0xFFFFFFFC) == 1801476204)) ^ v0)))();
}

uint64_t sub_22B37A194@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  int v7 = 338 * (a2 ^ 0x3E4);
  BOOL v8 = ((*(unsigned __int8 *)(a1 + 8) - 5) ^ v5) + (v4 & (2 * (*(unsigned __int8 *)(a1 + 8) - 5))) + (v7 ^ (v3 - 2704)) == a3 + ((v7 + 689980523) & 0xD6DFB9FF) - 2299;
  BOOL v9 = (v8 ^ ((v7 | 0x49) + 38)) + 2 * v8 != -1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 | (4 * v9)) ^ v7)))();
}

uint64_t sub_22B37A224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = v9 + v8 - 159347709;
  if ((v12 + 1) > 0x40) {
    int v13 = v12 + 1;
  }
  else {
    int v13 = 64;
  }
  BOOL v14 = __CFADD__(v12, v10 + v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((((v7 ^ 0xF02) - 1247) * v14) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, 581582860);
}

uint64_t sub_22B37A27C()
{
  BOOL v4 = v1[1] != 0x6D43FF9324FE1359 && (v1[7] | v1[4]) != 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)((v4 * (((v0 + 101044596) & 0xF9FA2BFF ^ 0xFFFFFBB9) + (v0 ^ 0x677))) ^ v0)))();
}

uint64_t sub_22B37A2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unint64_t *a21,int a22)
{
  a21 = &STACK[0x2B48C588999CF081];
  a20 = 377 - 225134719 * ((&a20 & 0x4A723BB7 | ~(&a20 | 0x4A723BB7)) ^ 0xA37D8162);
  uint64_t v24 = (*(uint64_t (**)(unsigned int *))(v23 + 32752))(&a20);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((106 * (a22 != v22)) ^ 0x72Bu)))(v24);
}

uint64_t sub_22B37A384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((v6 + 1813599212) & 0x93E6ADE7) + ((v6 - 1918799450) & 0x725E87DE) - 4474)
                                     * (v5 == a5)) ^ v6)))();
}

uint64_t sub_22B37A3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v14 = v12 + v11 + v10 + 736;
  uint64_t v15 = a8 + v14;
  long long v16 = *(_OWORD *)(v15 - 31);
  uint64_t v17 = v8 + v14;
  *(_OWORD *)(v17 - 15) = *(_OWORD *)(v15 - 15);
  *(_OWORD *)(v17 - 31) = v16;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v9 & 0xFFFFFFE0) == 32) * ((a5 - 2151) ^ 0xB2B)) ^ (a5 - 1550))))();
}

void sub_22B37A440()
{
}

uint64_t sub_22B37A4C0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((121
                                * (((*(void *)(*(void *)(v2 + 8 * (a1 - 253)) - 4) == 0) ^ a1) & 1)) ^ a1)))();
}

uint64_t sub_22B37A4F4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ 0x141) + 620) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_22B37A524(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1567 * (v1 + 1 == v3 + 44)) ^ a1)))();
}

void sub_22B37A5FC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1988622253 * (((a1 | 0xAAB9410D) - (a1 & 0xAAB9410D)) ^ 0x5CA101AD);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_22B37A6B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 757) | 0x1C0u) - v0 - 2449 < 8) * ((v1 - 15) ^ 0x552)) ^ v1)))();
}

uint64_t sub_22B37A6F4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((200 * (v2 + 1 == v4 + 24)) ^ a2)))();
}

void sub_22B37A7B8()
{
}

uint64_t sub_22B37A904()
{
  return (*(uint64_t (**)(char *))(v3 + 8 * (((v2 == v1 + (v0 ^ 0xC4B) - 628) * ((v0 - 3280) ^ 0x12F)) ^ v0)))((char *)*(&off_26DE9F480 + (v0 ^ 0xFE2)) - 12);
}

void sub_22B37A954(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 8) ^ (1438293641 * ((a1 & 0xB4D84B78 | ~(a1 | 0xB4D84B78)) ^ 0xF3E0E1F8));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B37ACAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = v6 - 152;
  *(_DWORD *)(v6 - 144) = (v4 + 1935319770) ^ (1328090399
                                             * ((v6 - 1251893630 - 2 * ((v6 - 152) & 0xB5619F1A)) ^ 0x4AB2FB20));
  v5[393] = v12;
  (*(void (**)(uint64_t))(a4 + 8 * (v4 ^ 0xDBEu)))(v6 - 152);
  unsigned int v9 = 1503746353 * (((v7 | 0x827EF3E5) - v7 + (v7 & 0x7D810C18)) ^ 0xA41F3153);
  v5[395] = v12;
  v5[394] = v6 - 256;
  *(_DWORD *)(v6 - 152) = v9 + 1331781508;
  *(_DWORD *)(v6 - 128) = v4 + 1043 - v9;
  (*(void (**)(uint64_t))(a4 + 8 * (v4 + 3419)))(v6 - 152);
  unsigned int v10 = 1503746353 * ((((v7 | 0x415676F0) ^ 0xFFFFFFFE) - (~v7 | 0xBEA9890F)) ^ 0x98C84BB9);
  *(_DWORD *)(v6 - 128) = v4 + 1043 - v10;
  *(_DWORD *)(v6 - 152) = v10 + 1331781508;
  v5[394] = v13;
  v5[395] = v12;
  (*(void (**)(uint64_t))(a4 + 8 * (v4 ^ 0xDA7u)))(v6 - 152);
  v5[394] = v13 + 4;
  v5[393] = v12;
  *(_DWORD *)(v6 - 136) = (v4 - 256) ^ (731811679 * ((v6 - 152) ^ 0x49F6A644));
  return (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 + 3429)))(v6 - 152);
}

uint64_t sub_22B37AE78(uint64_t a1)
{
  return sub_22B37AE80(a1, *v1);
}

uint64_t sub_22B37AE80(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 ^ 0x8D5)))(*v6, a2, ((v2 + 1177) | 0x7Cu) - 1463686563 + *(_DWORD *)(v4 - 0x19157D3ABD2659D6));
  *unsigned int v9 = v8;
  *(_DWORD *)(v4 - 0x19157D3ABD2659D6) = v7;
  *int v5 = v7;
  return result;
}

uint64_t sub_22B37AF00()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((*(void *)(v1 + 16) == 0) * ((v0 - 1721561220) & 0x669CEBFF ^ 0x818)) ^ v0)))();
}

uint64_t sub_22B37AF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((((v8 + 2134534349) ^ 0xD67FA19E)
                                      + 1455037166
                                      + ((v8 + 2134534349) & 0x80C58BB4)
                                      + 3044)
                                     * ((unint64_t)(v9 - a8 - 56) < 0x20)) ^ (v8 - 3145))))();
}

uint64_t sub_22B37AFDC@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v4 - 0x19157D3ABD2659DELL) + (v5 - 1966923245 + v2)) = *(unsigned char *)(*(void *)(v4 - 0x19157D3ABD2659DELL) + (v2 - 840667341));
  return (*(uint64_t (**)(void))(v3 + 8 * ((1752 * (v2 - 1 == (a1 ^ 0x8E4) + v1)) ^ a1)))();
}

uint64_t sub_22B37B048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = (a8 + v10);
  *(unsigned char *)(v13 + v15) ^= *(unsigned char *)(v8 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + v12 + 2) ^ *(unsigned char *)((v15 & 0xF) + v11 + 1) ^ (-127 * (v15 & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v14 + 8 * ((15 * (a8 - 1 != v9)) ^ (a7 - 1139))))();
}

uint64_t sub_22B37B0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v29 - 120) = v24;
  *(void *)(v29 - 112) = v25;
  *(_DWORD *)(v29 - 128) = v28
                         + 1503746353 * ((~((v29 - 144) | 0x3E46C32E) + ((v29 - 144) & 0x3E46C32E)) ^ 0xE7D8FE67)
                         + 1041;
  *(void *)(v29 - 144) = v24;
  *(void *)(v29 - 136) = v23;
  (*(void (**)(uint64_t))(v26 + 8 * (v28 ^ 0x6C8)))(v29 - 144);
  int v30 = 1866394843 * ((-452440277 - ((v29 - 144) | 0xE5084F2B) + ((v29 - 144) | 0x1AF7B0D4)) ^ 0xF0E08720);
  *(void *)(v29 - 136) = a23;
  *(_DWORD *)(v29 - 144) = v28 - v30 - 1009;
  *(_DWORD *)(v29 - 140) = v27 - 484148410 + v30 + 2;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v28 + 1752)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((*(_DWORD *)(v29 - 128) != -1685946169)
                                              * (((v28 ^ 0x7DC) - 3209) ^ 0x205)) ^ v28)))(v31);
}

uint64_t sub_22B37B1DC@<X0>(int8x16_t *a1@<X2>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  *a1 = vaddq_s8(vsubq_s8(*a2, vandq_s8(vaddq_s8(*a2, *a2), a3)), a4);
  return sub_22B37B1FC();
}

void sub_22B37B1FC()
{
}

uint64_t sub_22B37B208()
{
  int v5 = 1948972247 * ((~((v4 - 128) | 0x3E2240CB) + ((v4 - 128) & 0x3E2240CB)) ^ 0x74434ADA);
  *(void *)(v4 - 120) = v3;
  *(_DWORD *)(v4 - 128) = (v0 + 1161) ^ v5;
  *(_DWORD *)(v4 - 124) = v2 - v5 + 61 * (v0 ^ 0x8B0) + 397458133;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1925)))(v4 - 128);
  return sub_22B37B290(v6);
}

uint64_t sub_22B37B290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v29 - 104) = a22;
  *(void *)(v29 - 120) = a24;
  *(_DWORD *)(v29 - 112) = v28 + ((v29 - 128 + v27 - 2 * ((v29 - 128) & v27)) ^ 0xA00EF69A) * v25 - 108;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v28 ^ 0x4C1)))(v29 - 128);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8 * ((11 * (*(_DWORD *)(v29 - 128) > ((v28 + 93) | 0x2Bu) + v24)) ^ v28)))(v30);
}

uint64_t sub_22B37B320@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W6>, int a6@<W8>)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a4 ^ a1) - 2220) ^ (a6 + 2839)) + a5 < a2) * a3) ^ a4)))();
}

uint64_t sub_22B37B358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v32 = (v24 - 655232982) & 0x270E0BFF;
  int v33 = ((2 * ((v31 - 144) & 0x71C1ABA8) - (v31 - 144) - 1908517804) ^ 0x782614F4) * v25;
  *(void *)(v31 - 144) = v29;
  *(void *)(v31 - 136) = v23;
  *(_DWORD *)(v31 - 124) = v26 + v33 + (v32 ^ 0xEC748658);
  *(_DWORD *)(v31 - 120) = v33 + v24 + 1066;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 + 2667)))(v31 - 144);
  *(_DWORD *)(v31 - 136) = (v32 + 1364) ^ (1438293641
                                         * ((((v31 - 144) | 0xFD60077) - ((v31 - 144) & 0xFD60077)) ^ 0xB7115508));
  *(void *)(v31 - 144) = a22;
  *(void *)(v31 - 128) = a21;
  (*(void (**)(uint64_t))(v27 + 8 * (v32 ^ 0xE80)))(v31 - 144);
  *(_DWORD *)(v31 - 128) = (v32 + 1094) ^ (1734664879
                                         * ((65622035 - ((v31 - 144) | 0x3E95013) + ((v31 - 144) | 0xFC16AFEC)) ^ 0xD3CD87F6));
  *(void *)(v31 - 144) = a22;
  *(void *)(v31 - 136) = v29;
  *(void *)(v31 - 120) = a23;
  *(void *)(v31 - 112) = a21;
  uint64_t v36 = 8 * (v32 ^ 0xE93);
  (*(void (**)(uint64_t))(v27 + v36))(v31 - 144);
  *(void *)(v31 - 104) = v28;
  *(void *)(v31 - 128) = a22;
  *(void *)(v31 - 120) = a21;
  *(_DWORD *)(v31 - 112) = v32
                         + 1618
                         - 1948972247 * (((v31 - 144) & 0xDABC3D08 | ~((v31 - 144) | 0xDABC3D08)) ^ 0x90DD3719);
  *(void *)(v31 - 144) = a23;
  *(void *)(v31 - 136) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * (v32 + 3730)))(v31 - 144);
  *(_DWORD *)(v31 - 144) = v32
                         + 246
                         - 1988622253 * ((((v31 - 144) | 0xA9940594) - ((v31 - 144) & 0xA9940594)) ^ 0x5F8C4534);
  *(void *)(v31 - 136) = a21;
  *(void *)(v31 - 128) = a22;
  *(void *)(v31 - 112) = a14;
  *(void *)(v31 - 104) = a23;
  *(void *)(v31 - 120) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * (v32 + 3775)))(v31 - 144);
  *(_DWORD *)(v31 - 136) = (v32 + 1364) ^ (1438293641
                                         * ((917575902 - ((v31 - 144) | 0x36B118DE) + ((v31 - 144) | 0xC94EE721)) ^ 0x7189B25E));
  *(void *)(v31 - 128) = a21;
  *(void *)(v31 - 144) = a17;
  (*(void (**)(uint64_t))(v27 + 8 * (v32 | 0xE80)))(v31 - 144);
  *(void *)(v31 - 120) = v30;
  *(void *)(v31 - 112) = a21;
  *(_DWORD *)(v31 - 128) = (v32 + 1094) ^ (1734664879
                                         * ((((v31 - 144) | 0xC54E32D3) + (~(v31 - 144) | 0x3AB1CD2C)) ^ 0xEA951AC8));
  *(void *)(v31 - 144) = a17;
  *(void *)(v31 - 136) = v29;
  (*(void (**)(uint64_t))(v27 + v36))(v31 - 144);
  *(void *)(v31 - 104) = v28;
  *(void *)(v31 - 144) = v30;
  *(void *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 112) = v32
                         + 1618
                         - 1948972247 * ((2 * ((v31 - 144) & 0x37DFC0F8) - (v31 - 144) - 937410810) ^ 0x7DBECAE8);
  *(void *)(v31 - 128) = a17;
  *(void *)(v31 - 120) = a21;
  (*(void (**)(uint64_t))(v27 + 8 * (v32 + 3730)))(v31 - 144);
  *(void *)(v31 - 136) = a21;
  *(void *)(v31 - 128) = a17;
  *(void *)(v31 - 112) = a15;
  *(void *)(v31 - 104) = v30;
  *(void *)(v31 - 120) = v30;
  *(_DWORD *)(v31 - 144) = v32
                         + 246
                         - 1988622253
                         * ((((v31 - 144) | 0xB3BC2705) - (v31 - 144) + ((v31 - 144) & 0x4C43D8F8)) ^ 0x45A467A5);
  (*(void (**)(uint64_t))(v27 + 8 * (v32 ^ 0x1141)))(v31 - 144);
  *(void *)(v31 - 144) = a23;
  *(void *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 128) = v32
                         + 1866394843 * ((((v31 - 144) | 0xBAF5A313) - ((v31 - 144) & 0xBAF5A313)) ^ 0x50E294E7)
                         + 971;
  (*(void (**)(uint64_t))(v27 + 8 * (v32 ^ 0x1178)))(v31 - 144);
  *(_DWORD *)(v31 - 144) = v32 + 1734664879 * ((v31 - 509109125 - 2 * ((v31 - 144) & 0xE1A79D0B)) ^ 0xCE7CB511) + 426;
  *(void *)(v31 - 136) = v30;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v32 ^ 0xE89)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((*(_DWORD *)(v31 - 140) > 0x537CDF1Du)
                                                   * ((v32 + 136259464) & 0xF7E0DFBF ^ 0x8BF)) ^ v32)))(v34);
}

uint64_t sub_22B37B830(int a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v4 + v6;
  *(unsigned char *)(v8 + a3 - 1) = v5;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 < 0x38) * a1) ^ v3)))();
}

uint64_t sub_22B37B864@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 24) + (a5 + a6)) = ((a4 ^ v8) >> (a3 + 29))
                                                             - (((a4 ^ v8) >> (a3 + 29) << ((a2 + 81) ^ 0x91)) & 0x54)
                                                             + 42;
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 ^ (108 * (a5 - 1 == v7)))))();
}

uint64_t sub_22B37B8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  if ((a14 + 1013339570) < 0xA7435858 != v14 + 2072824085 < (v15 - 1488759210)) {
    BOOL v17 = (a14 + 1013339570) < 0xA7435858;
  }
  else {
    BOOL v17 = v14 + 2072824085 < (a14 + 1013339570);
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((79 * v17) ^ v15)))();
}

uint64_t sub_22B37B93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  *(unsigned char *)(a47 + (v48 - 1951924425)) = *(unsigned char *)(a6 + (v48 - 1951924425));
  return (*(uint64_t (**)(void))(v51 + 8 * (((v48 + v49 + 3134 - 3156 != v50) * v47) ^ (v49 + 1395))))();
}

uint64_t sub_22B37B98C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v24 = (a3 - 1736446101) & 0x67801CD4;
  int v20 = 1948972247 * ((v19 - 1846951065 - 2 * ((v19 - 160) & 0x91E9C407)) ^ 0x247731E9);
  *(void *)(v19 - 152) = a15;
  *(_DWORD *)(v19 - 144) = a3 - v20 + 410;
  *(_DWORD *)(v19 - 160) = a18 + ((a6 + a3 - 148) ^ 0x47D63553) + v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (a3 + 3918)))(v19 - 160);
  uint64_t v22 = STACK[0x2D0] & 0x3F;
  *((unsigned char *)&STACK[0x28C] + (v22 ^ 0x19)) = -86;
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((2879 * ((v22 ^ 0x19) > v24 - 3229)) ^ a3)))(v21);
}

uint64_t sub_22B37BAB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v6 & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                      + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v5) == v5)
                                     * (((v4 + 2195829) | 0x9A020040) ^ (v3 + 1814))) ^ v4)))();
}

uint64_t sub_22B37BB04@<X0>(_OWORD *a1@<X8>)
{
  *a1 = 0u;
  a1[1] = 0u;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 & 0xFFFFFFE0) == 32) * (v2 ^ 0xA34)) ^ (v2 + 35))))();
}

uint64_t sub_22B37BB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v316 = v64;
  int v66 = 3 * (v63 ^ 0x726);
  uint64_t v67 = *(void *)(v65 + 8 * (v63 - 1267)) - 8;
  uint64_t v68 = *(void *)(v65 + 8 * (v63 ^ 0x5C3)) - 12;
  uint64_t v69 = *(void *)(v65 + 8 * (v63 ^ 0x426));
  char v70 = *(unsigned char *)(v68 + (v62[11] ^ 0x1BLL));
  uint64_t v71 = *(void *)(v65 + 8 * (v63 - 1190));
  unsigned __int8 v72 = ((2 * v70 + 90) & 0xBC) + ((v70 - 83) ^ 0xDE);
  uint64_t v73 = v62[10];
  if ((*(unsigned char *)(v69 + (v73 ^ 0x8F)) & 0x10) != 0) {
    char v74 = 16;
  }
  else {
    char v74 = -16;
  }
  uint64_t v320 = v71;
  uint64_t v321 = v69;
  HIDWORD(a19) = -121;
  uint64_t v322 = v68;
  uint64_t v323 = v67;
  LODWORD(a62) = ((((v62[14] - ((2 * v62[14]) & 0xA2) - 47) ^ 0x94 ^ *(unsigned __int8 *)(v69 + (v62[14] ^ 0xFCLL))) << 8) & 0xFF00FF00 | ((*(unsigned __int8 *)(v67 + (v62[12] ^ 0x39)) ^ (v62[12] - ((2 * v62[12]) & 0xAC) - 42) ^ 0x22222222) << 24) | ((-37 * *(unsigned char *)(v71 + (v62[13] ^ 0xCALL)) + 7) << 16) | (*(unsigned char *)(v68 + (v62[15] ^ 0x9ELL)) - 117)) ^ 0xBAA18388;
  LODWORD(a57) = ((*(unsigned char *)(v68 + (v62[7] ^ 0x1CLL)) - 117) | ((*(unsigned __int8 *)(v67 + (v62[4] ^ 0x5ELL)) ^ (v62[4] + ((v66 - 6) ^ (2 * v62[4]) & 0x1AC) - 41) ^ 0xFFFFFF87) << 24) | (((-37 * *(unsigned char *)(v71 + (v62[5] ^ 0xC2)) - 121) ^ 1) << 16) | ((*(unsigned __int8 *)(v69 + (v62[6] ^ 0xBALL)) ^ (v62[6] - ((2 * v62[6]) & 0xA2) - 47) ^ 0xE0) << 8)) ^ 0x3A405BBA;
  LODWORD(a61) = (((*(unsigned __int8 *)(v69 + (v62[2] ^ 0x64)) ^ (v62[2] - ((2 * v62[2]) & 0xA2) - 47) ^ 0x9C) << 8) & 0xFF00FF00 | (((-37 * *(unsigned char *)(v71 + (v62[1] ^ 0xE6)) - 121) ^ 0xE0) << 16) | (*(unsigned char *)(v68 + (v62[3] ^ 0x41)) - 117) | ((*(unsigned __int8 *)(v67 + (*v62 ^ 0x8DLL)) ^ (*v62 + (~(2 * *v62) | 0x53) - 41) ^ 0xF) << 24)) ^ 0xAD436988;
  int v319 = (unsigned __int8 *)(*(void *)(a7 + 528) - 0x2593ABCA6C1F48F5);
  uint64_t v318 = *(void *)(a7 + 520) - 0x490DC007B7B747A3;
  LODWORD(a56) = (v72 | ((v73 ^ 0x8A ^ (v74 + (*(unsigned char *)(v69 + (v73 ^ 0x8F)) ^ 0xD1))) << 8) | (((-37 * *(unsigned char *)(v71 + (v62[9] ^ 0x7FLL)) - 121) ^ 0x88) << 16) | ((*(unsigned __int8 *)(v67 + (v62[8] ^ 0xE4)) ^ (v62[8] + (~(2 * v62[8]) | 0x53) - 41) ^ 0x43) << 24)) ^ 0x4370B968;
  STACK[0x238] = 6;
  STACK[0x258] = 0;
  unint64_t v75 = v319;
  LODWORD(a55) = (v66 - 453) | 0x31;
  HIDWORD(a16) = (v66 - 1416212710) & 0x5469AFFF;
  unsigned __int8 v76 = *(unsigned char *)(v68 + (((v66 + 59) | 0x31) ^ v319[11] ^ 0x80u)) + ((v66 + 26) ^ 0x94);
  LODWORD(STACK[0x248]) = -121 - 37 * *(unsigned __int8 *)(v71 + (v319[5] ^ 0xF5));
  int v77 = *(unsigned __int8 *)(v67 + (v75[4] ^ 9)) ^ (v75[4] - ((2 * v75[4]) & 0xAC) - 42);
  LODWORD(STACK[0x218]) = v77;
  int v78 = v77 ^ 0xF7;
  int v79 = *(unsigned __int8 *)(v69 + (v75[6] ^ 0xE8)) ^ (v75[6] - ((2 * v75[6]) & 0xA2) - 47);
  int v80 = (*(unsigned __int8 *)(v67 + (v75[12] ^ 0xC1)) ^ (v75[12] - ((2 * v75[12]) & 0xAC) - 42) ^ 0xC6) << 24;
  unsigned int v81 = v76 | ((*(unsigned __int8 *)(v67 + (v75[8] ^ 0xA2)) ^ ((v75[8] ^ 0xFFFFFFAE)
                                                               + (~(2 * (v75[8] ^ 0xFFFFFFAE)) | 0x53)
                                                               - 41) ^ 4) << 24);
  STACK[0x228] = 3;
  char v82 = *(unsigned char *)(v68 + (v319[15] ^ 0xCFLL)) - 117;
  unsigned int v83 = ((-121 - 37 * *(unsigned char *)(v71 + (v319[1] ^ 0x42))) ^ 0x38) << (v82 & 0x10) << (v82 & 0x10 ^ 0x10);
  int v84 = v83 ^ (*(unsigned char *)(v68 + (v319[3] ^ 1)) - 117);
  unsigned __int8 v85 = *(unsigned char *)(v68 + (v319[7] ^ 0x5FLL)) - 117;
  unsigned __int8 v86 = -121 - 37 * *(unsigned char *)(v320 + (v319[13] ^ 0x9DLL));
  int v87 = (*v75 - ((2 * *v75) & 0x1AC) - 42) ^ *(unsigned __int8 *)(v67 + (*v75 ^ 0x85));
  int v88 = v87 ^ 0x9F;
  uint64_t v89 = v319[14];
  LOBYTE(v89) = ((v89 ^ 0xFD)
               - ((2 * (v89 ^ 0xFD)) & 0xEC)
               + 118
               - ((2 * ((v89 ^ 0xFD) - ((2 * (v89 ^ 0xFD)) & 0xEC) + 118)) & 0xA2)
               - 47) ^ *(unsigned char *)(v69 + (v89 ^ 0xD));
  int v90 = ((v87 ^ 0x9F) << 24) | ((*(unsigned __int8 *)(v69 + (v75[2] ^ 0x2ELL)) ^ (v75[2]
                                                                                                 - ((2 * v75[2]) & 0xA2)
                                                                                                 - 47) ^ 0x2A) << 8) | v84;
  LODWORD(v75) = (((-121 - 37 * *(unsigned char *)(v320 + (v75[9] ^ 0x8BLL))) ^ 0xFD) << 16) | ((*(unsigned __int8 *)(v69 + (v75[10] ^ 0x29)) ^ (v75[10] - ((2 * v75[10]) & 0xA2) - 47) ^ 0x89) << 8) | v81;
  unsigned int v91 = v75 - 2 * (v75 & 0x604FEFBD ^ v76 & 0x10) - 531632211;
  LODWORD(a53) = v79;
  LODWORD(v325) = v80 & 0xFF000000 | ((v86 ^ 0x42) << 16) | ((v89 ^ 0x61) << 8) | (*(unsigned char *)(v322 + (v319[15] ^ 0xCFLL)) - 117);
  unsigned int v92 = (v325 ^ 0xFA6E7A7B) >> 24;
  uint64_t v93 = (char *)*(&off_26DE9F480 + (v66 ^ 0x7C1)) - 8;
  LODWORD(v75) = *(_DWORD *)&v93[4 * (v87 ^ 0xBE)];
  int v94 = (char *)*(&off_26DE9F480 + (v66 ^ 0x628)) - 12;
  int v95 = *(_DWORD *)&v94[4 * (v86 ^ 0x8A)];
  unsigned int v96 = ((v95 ^ 0xCD1914E7) + 867829752) ^ ((v95 ^ 0xFEA31310) + 1);
  int v97 = ((v96 - ((2 * v96) & 0x2B9D9DE) + 22867183) ^ v95) + 867829751;
  LODWORD(v75) = (32 * v97 + 1560182975 - ((v97 << 6) & 0xB9FD0140)) ^ v75;
  LODWORD(STACK[0x220]) = v66;
  unsigned int v98 = (char *)*(&off_26DE9F480 + v66 - 1381) - 4;
  uint64_t v99 = (char *)*(&off_26DE9F480 + v66 - 1680) - 4;
  LODWORD(a29) = v85;
  HIDWORD(v100) = ((a29 ^ 0x27) + 1611763363 - ((2 * (a29 ^ 0x27)) & 0x146)) ^ 0xCDC4B8F6 ^ *(_DWORD *)&v99[4 * (v85 ^ 0xA9)];
  LODWORD(v100) = HIDWORD(v100);
  LODWORD(v100) = (v100 >> 6) ^ __ROR4__(v88 ^ v97 ^ *(_DWORD *)&v98[4 * (BYTE1(v91) ^ 0xEE)] ^ 0xCEFA3AF8 ^ (v75 - 1765831496 - ((2 * v75) & 0x2D7F1970)), 6) ^ 0x1549A94F;
  HIDWORD(v100) = v100;
  int v101 = *(_DWORD *)&v93[4 * (LODWORD(STACK[0x218]) ^ 0xB)];
  int v102 = *(_DWORD *)&v94[4 * (HIWORD(v83) ^ 0x9D)] ^ 0x32E6EB18;
  HIDWORD(v325) = v78;
  unsigned int v103 = ((v78 ^ 0xBA539F8B ^ -(v78 ^ 0xBA539F8B) ^ ((v78 ^ 0x1952E0CB ^ v101) + (v101 ^ 0x5CFE80BF) + 1))
        + (v101 ^ 0x5CFE80BF)) ^ (32 * v102);
  unsigned int v104 = v102 ^ *(_DWORD *)&v98[4 * (v89 ^ 0xE8)] ^ ((v91 ^ 0x54)
                                                                    + 1611763363
                                                                    - ((2 * v91) & 0x146)) ^ (v103
                                                                                            - 1765831496
                                                                                            - ((2 * v103) & 0x2D7F1970)) ^ *(_DWORD *)&v99[4 * (v91 ^ 0xDA)];
  int v105 = *(_DWORD *)&v94[4 * (LODWORD(STACK[0x248]) ^ 0xEA)] ^ 0x32E6EB18;
  LODWORD(v89) = (32 * v105 + 1560182975 - ((v105 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v91) ^ 0xB5)];
  unint64_t v324 = __PAIR64__(v90, v91);
  int v106 = *(_DWORD *)&v93[4 * (v92 ^ 0x21)];
  LODWORD(v75) = (v100 >> 26) - ((2 * (v100 >> 26)) & 0x6A528A7A) + 891897149;
  LODWORD(v89) = v105 ^ ((v325 ^ 0x7B) + 1611763363 - ((2 * (v325 ^ 0xFA6E7A7B)) & 0x146)) ^ *(_DWORD *)&v99[4 * (v325 ^ 0xF5)] ^ *(_DWORD *)&v98[4 * (BYTE1(v90) ^ 0x14)] ^ (v89 - 1765831496 - ((2 * v89) & 0x2D7F1970));
  unsigned int v107 = v92 + 1560182975 - (((v325 ^ 0xFA6E7A7B) >> 23) & 0x17E);
  int v108 = *(_DWORD *)&v94[4 * (BYTE2(v91) ^ 0x87)] ^ 0x32E6EB18;
  unsigned int v109 = (v108 ^ (32 * v108)) + (v107 ^ 0xBA539F56 ^ v106) - 2 * ((v108 ^ (32 * v108)) & (v107 ^ 0xBA539F56 ^ v106));
  unsigned int v110 = *(_DWORD *)&v98[4 * (v79 ^ 0x76)] ^ (v84 + 1611763363 - ((2 * v84) & 0x146)) ^ *(_DWORD *)&v99[4 * (v84 ^ 0xC2)] ^ (v109 - 1765831496 - ((2 * v109) & 0x2D7F1970));
  int v111 = *(_DWORD *)&v98[4 * (BYTE1(v89) ^ 0xDE)];
  int v112 = *(_DWORD *)&v94[4 * (BYTE2(v110) ^ 0xAA)] ^ 0x32E6EB18;
  unsigned int v113 = v112 ^ (32 * v112 + 1560182975 - ((v112 << 6) & 0xB9FD0140)) ^ (v75 >> 24) ^ *(_DWORD *)&v93[4 * ((v75 >> 24) ^ 0xB0)];
  LODWORD(STACK[0x218]) = 1611763364;
  int v114 = *(_DWORD *)&v93[4 * (HIBYTE(v104) ^ 0xDA)];
  unsigned int v115 = ((v104 ^ 4) + 1611763364 + (~(2 * v104) | 0xFFFFFEB9)) ^ *(_DWORD *)&v99[4
                                                                                                 * (v104 ^ 0x8A)] ^ ((v111 ^ 0xE2162916 ^ -(v111 ^ 0xE2162916) ^ ((v111 ^ 0xA7BA492E ^ v113) + (v113 ^ 0xBA539FC7) + 1)) + (v113 ^ 0xBA539FC7));
  int v116 = *(_DWORD *)&v94[4
                       * (((v75 ^ 0x91D12EA3) >> (v110 & 0x10 ^ 0x10) >> (v110 & 0x10)) ^ 0xA6)] ^ 0x32E6EB18;
  unsigned int v117 = ((v114 ^ 0x5CFE80BF) + (HIBYTE(v104) ^ 0xBA539FAD) - 2 * ((v114 ^ 0x185280BF) & (HIBYTE(v104) ^ 0xBA539FAD))) ^ (32 * v116);
  unsigned int v118 = v116 ^ *(_DWORD *)&v98[4 * (BYTE1(v110) ^ 0xFC)] ^ *(_DWORD *)&v99[4
                                                                          * ((v89 ^ HIBYTE(v91)) ^ 0xDC)] ^ (((v89 ^ HIBYTE(v91)) ^ 0x52) + 1611763363 - 2 * (((v89 ^ HIBYTE(v91)) ^ 0x52) & 0xA7 ^ (v89 ^ HIBYTE(v91)) & 4)) ^ (v117 - 1765831496 - ((2 * v117) & 0x2D7F1970));
  int v119 = *(_DWORD *)&v94[4 * (BYTE2(v104) ^ 0x37)];
  unsigned int v120 = (32 * (v119 ^ 0x32E6EB18) + 1560182975 - (((v119 ^ 0x32E6EB18) << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (BYTE3(v89) ^ 0xE2)];
  int v121 = v110;
  int v122 = (v110 ^ 0x36) + 1611763363 - 2 * ((v110 ^ 0x36) & 0xAB ^ v110 & 8);
  unsigned int v123 = HIBYTE(v110);
  unsigned int v124 = v119 ^ BYTE3(v89) ^ *(_DWORD *)&v99[4 * (v121 ^ 0xB8)] ^ v122 ^ (v120 - 1765831496 - ((2 * v120) & 0x2D7F1970)) ^ *(_DWORD *)&v98[4 * (BYTE1(v75) ^ 0xDD)];
  int v125 = *(_DWORD *)&v94[4 * (BYTE2(v89) ^ 0x74)] ^ 0x32E6EB18;
  unsigned int v126 = (32 * v125 + 1560182975 - ((v125 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v123 ^ 0x4E)];
  LODWORD(v89) = ((v100 >> 26) - ((2 * (v100 >> 26)) & 0x7A) + 61);
  unsigned int v327 = HIBYTE(v115);
  unsigned int v127 = *(_DWORD *)&v98[4 * (BYTE1(v104) ^ 0xDB)] ^ v125 ^ ((v89 ^ 0xA3)
                                                           + 1611763363
                                                           - 2 * ((v89 ^ 0xA3) & 0xAB ^ v75 & 8)) ^ *(_DWORD *)&v99[4 * (v89 ^ 0x2D)] ^ (v126 - 1765831496 - ((2 * v126) & 0x2D7F1970));
  int v128 = *(_DWORD *)&v94[4 * (BYTE2(v127) ^ 0xC5)] ^ 0x32E6EB18;
  LODWORD(v75) = (32 * v128 + 1560182975 - ((v128 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v115) ^ 0x83)];
  unsigned int v129 = v128 ^ *(_DWORD *)&v98[4 * (BYTE1(v124) ^ 0xEB)] ^ ((v118 ^ 0x71)
                                                           + 1611763363
                                                           - 2 * ((v118 ^ 0x71) & 0xAF ^ v118 & 0xC)) ^ *(_DWORD *)&v99[4 * (v118 ^ 0xFF)] ^ (v75 - 1765831496 - ((2 * v75) & 0x2D7F1970));
  int v130 = *(_DWORD *)&v94[4 * (BYTE2(v115) ^ 0x44)];
  unsigned int v131 = v130 & 0x4000000 | ((((v130 & 0x4000000u) >> 26) & 1) << 27);
  int v132 = v130 ^ 0x32E6EB18;
  v131 ^= 0xF67BEF4C;
  BOOL v133 = ((v131 + 159649972) & (32 * v132)) == 0;
  unsigned int v134 = v131 + 264035832;
  unsigned int v135 = -55264112 - v131;
  if (v133) {
    unsigned int v135 = v134;
  }
  unsigned int v136 = *(_DWORD *)&v93[4 * (HIBYTE(v118) ^ 0xA0)] ^ ((HIBYTE(v118) ^ 0x81)
                                                     + 1560182975
                                                     - ((2 * (HIBYTE(v118) ^ 0x81)) & 0xFFFFFF7F)) ^ *(_DWORD *)&v99[4 * (v124 ^ 0xE1)] ^ v132 & 0xFBFFFFFF ^ ((v124 ^ 0x6F) + 1611763363 - 2 * ((v124 ^ 0x6F) & 0xB3 ^ v124 & 0x10)) ^ (32 * v132 - 104385860 + v135);
  int v137 = *(_DWORD *)&v94[4 * (BYTE2(v118) ^ 0x75)];
  unsigned int v138 = *(_DWORD *)&v93[4 * (HIBYTE(v124) ^ 0x1E)] ^ ((HIBYTE(v124) ^ 0x8000003F)
                                                     + 1560182975
                                                     - ((2 * (HIBYTE(v124) ^ 0x8000003F)) & 0xFFFFFF7F));
  int v139 = *(_DWORD *)&v98[4 * (BYTE1(v127) ^ 0x27)];
  unsigned int v140 = HIBYTE(v127);
  int v141 = *(_DWORD *)&v94[4 * (BYTE2(v124) ^ 0xBE)];
  unsigned int v142 = *(_DWORD *)&v98[4 * (BYTE1(v115) ^ 0xC9)] ^ *(_DWORD *)&v99[4 * (v127 ^ v123 ^ 0x2B)] ^ ((v127 ^ v123 ^ 0xA5) + 1611763363 - ((2 * (v127 ^ v123 ^ 0xA5)) & 0x146)) ^ v137 ^ (((32 * v137) ^ 0x5CDD6300 ^ v138) - 1765831496 - 2 * (((32 * v137) ^ 0x5CDD6300 ^ v138) & 0x16BF8CBC ^ v138 & 4));
  unsigned int v143 = (32 * (v141 ^ 0x32E6EB18) + 1560182975 - (((v141 ^ 0x32E6EB18) << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v127) ^ 0xB8)];
  int v144 = (v143 - 1765831496 - ((2 * v143) & 0x2D7F1970)) ^ *(_DWORD *)&v98[4 * (BYTE1(v118) ^ 8)];
  LODWORD(v146) = __ROR4__(v139 ^ 0x33E820E ^ (v136 - 1765831496 - ((2 * v136) & 0x2D7F1970)), 11) ^ 0x631FEA4;
  HIDWORD(v146) = v146;
  unsigned int v145 = v146 >> 21;
  unsigned int v147 = HIBYTE(v129);
  unsigned int v148 = v140 ^ v115 ^ v141 ^ *(_DWORD *)&v99[4 * (v115 ^ 0x22)] ^ (v144 + 1611763363 - ((2 * v144) & 0xC0231D46));
  int v149 = *(_DWORD *)&v94[4 * (BYTE2(v148) ^ 0x33)] ^ 0x32E6EB18;
  int v150 = (v146 >> 21);
  unsigned int v151 = (32 * v149 + 1560182975 - ((v149 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v129) ^ 0xEB)];
  int v152 = v151 - 1765831496 - ((2 * v151) & 0x2D7F1970);
  int v153 = *(_DWORD *)&v94[4 * (BYTE2(v129) ^ 0xC3)] ^ 0x32E6EB18;
  unsigned int v154 = HIBYTE(v145);
  unsigned int v155 = (32 * v153 + 1560182975 - ((v153 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v145) ^ 0x75)];
  int v156 = (v155 - 1765831496 - ((2 * v155) & 0x2D7F1970)) ^ *(_DWORD *)&v98[4 * (BYTE1(v148) ^ 0x56)];
  unsigned int v157 = v153 ^ v142 ^ *(_DWORD *)&v99[4 * (v142 ^ 0x25)] ^ (v156
                                                                                             + 1611763363
                                                                                             - ((2 * v156) & 0xC0231D46));
  unsigned int v158 = ((HIBYTE(v142) ^ 0xB) + 1560182975 - ((2 * (HIBYTE(v142) ^ 0xB)) & 0xFFFFFF7F)) ^ 0xBA539F56 ^ *(_DWORD *)&v93[4 * (HIBYTE(v142) ^ 0x2A)];
  int v159 = *(_DWORD *)&v94[4 * (BYTE2(v145) ^ 0x1B)] ^ 0x32E6EB18;
  int v160 = (v159 ^ (32 * v159)) + v158 - 2 * ((v159 ^ (32 * v159)) & v158);
  unsigned __int8 v161 = v129 ^ v327;
  unsigned int v162 = *(_DWORD *)&v99[4 * (v148 ^ 0xFD)] ^ *(_DWORD *)&v98[4 * (BYTE1(v129) ^ 0xC0)] ^ ((v148 ^ 0x73) + 1611763363 - 2 * ((v148 ^ 0x73) & 0xAF ^ v148 & 0xC)) ^ (v160 - 1765831496 - ((2 * v160) & 0x2D7F1970));
  int v163 = *(_DWORD *)&v94[4 * (BYTE2(v142) ^ 0xD0)];
  v148 >>= 24;
  unsigned int v164 = (32 * (v163 ^ 0x32E6EB18) + 1560182975 - (((v163 ^ 0x32E6EB18) << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v148 ^ 8)];
  int v165 = v147 ^ v149 ^ *(_DWORD *)&v98[4 * (BYTE1(v142) ^ 0xE6)] ^ v152 ^ *(_DWORD *)&v99[4 * (v150 ^ 0xE2)];
  int v166 = *(_DWORD *)&v98[4 * (BYTE1(v145) ^ 0x5C)];
  LODWORD(v146) = __ROR4__(v165 ^ ((v150 ^ 0x6C) + 1611763363 - ((2 * (v150 ^ 0x6C)) & 0x146)) ^ 0xF50C97F0, 9) ^ 0xCB8526DC;
  HIDWORD(v146) = v146;
  unsigned int v167 = (v146 >> 23) - ((2 * (v146 >> 23)) & 0x7D4B33E2) + 1051040241;
  unsigned int v168 = v163 ^ ((v161 ^ 0x2F) + 1611763363 - 2 * ((v161 ^ 0x2F) & 0xB3 ^ v161 & 0x10)) ^ *(_DWORD *)&v99[4 * (v161 ^ 0xA1)] ^ v166 ^ (v164 - 1765831496 - ((2 * v164) & 0x2D7F1970));
  int v169 = HIBYTE(v167) ^ 0x122FF6B0;
  unsigned int v170 = ((HIBYTE(v167) ^ 0xFFFFFFE0) + 34) ^ ((HIBYTE(v167) ^ 0xFFFFFFC1) + 1);
  int v171 = *(_DWORD *)&v94[4 * (BYTE2(v168) ^ 0x4D)] ^ 0x32E6EB18;
  unsigned int v172 = (32 * v171 + 1560182975 - ((v171 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4
                                                                               * ((v170
                                                                                 + 305133198
                                                                                 - ((2 * v170) & 0x245FED1C)) ^ v169)
                                                                               + 132];
  int v173 = *(_DWORD *)&v98[4 * (((BYTE1(v162) | 0xCF) + (BYTE1(v162) & 0xCF ^ 0x35) + 1) ^ 0xF3)] ^ v171 ^ *(_DWORD *)&v99[4 * (v157 ^ v154 ^ 0x8F)] ^ ((v157 ^ v154 ^ 1) + 1611763363 - ((2 * (v157 ^ v154 ^ 1)) & 0x146)) ^ (v172 - 1765831496 - ((2 * v172) & 0x2D7F1970));
  unsigned int v174 = (v173 + 305133198 - ((2 * v173) & 0x245FED1C)) ^ v169;
  int v175 = *(_DWORD *)&v94[4 * (BYTE2(v167) ^ 3)] ^ 0x32E6EB18;
  unsigned int v176 = (32 * v175 + 1560182975 - ((v175 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v157) ^ 0xBC)];
  unsigned int v177 = v175 ^ *(_DWORD *)&v98[4 * (BYTE1(v168) ^ 0xC1)] ^ *(_DWORD *)&v99[4 * (v162 ^ 0x18)] ^ ((v162 ^ 0x96) + 1611763363 - 2 * ((v162 ^ 0x96) & 0xAB ^ v162 & 8)) ^ (v176 - 1765831496 - ((2 * v176) & 0x2D7F1970));
  int v178 = *(_DWORD *)&v94[4 * (BYTE2(v157) ^ 0x5B)] ^ 0x32E6EB18;
  unsigned int v179 = HIBYTE(v162);
  unsigned int v180 = (32 * v178 + 1560182975 - ((v178 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v162) ^ 0x75)];
  int v181 = *(_DWORD *)&v99[4 * (v168 ^ v148 ^ 0x72)] ^ ((v168 ^ v148 ^ 0xFC)
                                                                     + 1611763363
                                                                     - ((2 * (v168 ^ v148 ^ 0xFC)) & 0x146));
  v168 >>= 24;
  unsigned int v182 = v178 ^ *(_DWORD *)&v98[4 * (BYTE1(v167) ^ 0x6A)] ^ v181 ^ (v180 - 1765831496 - ((2 * v180) & 0x2D7F1970));
  int v183 = *(_DWORD *)&v94[4 * (BYTE2(v162) ^ 0xFD)] ^ 0x32E6EB18;
  unsigned int v184 = (32 * v183 + 1560182975 - ((v183 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v168 ^ 0x3E)];
  int v185 = v184 - 1765831496 - ((2 * v184) & 0x2D7F1970);
  int v186 = ((v146 >> 23) - ((2 * (v146 >> 23)) & 0xE2) - 15);
  int v187 = (v186 ^ 0xF1)
       + 1611763363
       - 2
       * ((v186 ^ 0xF1) & 0xAB ^ ((v146 >> 23) - ((2 * (v146 >> 23)) & 0xE2) - 15) & 8);
  int v188 = *(_DWORD *)&v99[4 * (v186 ^ 0x7F)];
  unsigned __int8 v189 = v182 ^ v179;
  int v190 = v187 ^ v168 ^ *(_DWORD *)&v98[4 * (BYTE1(v157) ^ 0xA4)] ^ v183 ^ v188 ^ v185;
  unsigned int v191 = HIBYTE(v177);
  int v192 = *(_DWORD *)&v94[4 * (BYTE2(v190) ^ 0x4D)];
  int v193 = (32 * v192) ^ 0x5CDD6300;
  int v194 = v177 ^ HIBYTE(v157);
  HIDWORD(v146) = v192 ^ 0x118;
  LODWORD(v146) = v192 ^ 0x32E6EA00;
  LODWORD(v146) = (v146 >> 9) ^ __ROR4__(*(_DWORD *)&v93[4 * (HIBYTE(v174) ^ 0x89)] ^ ((HIBYTE(v174) ^ 0xA8)+ 1560182975- ((2 * (HIBYTE(v174) ^ 0xA8)) & 0xFFFFFF7F)) ^ 0xBA539F56, 9) ^ 0x90EC8BA;
  HIDWORD(v146) = v146;
  int v195 = v146 >> 23;
  int v196 = (v193 & 0x80000 ^ 0x33D85BFD) + 2 * (v193 & 0x80000);
  BOOL v133 = (v195 & (v196 - 869817341)) == 0;
  int v197 = v196 - 290472344;
  int v198 = 1449162338 - v196;
  if (v133) {
    int v198 = v197;
  }
  unsigned int v199 = ((((v195 ^ 0x1D917412) - 579344997 + v198) ^ v193 & 0xFFF7FFE0)
        - 1765831496
        - 2
        * ((((v195 ^ 0x1D917412) - 579344997 + v198) ^ v193 & 0xFFF7FFE0) & 0x16BF8CBC ^ ((v195 ^ 0x1D917412)
                                                                                        - 579344997
                                                                                        + v198) & 4)) ^ *(_DWORD *)&v98[4 * (BYTE1(v182) ^ 0x57)];
  unsigned int v200 = (v199 + 1611763363 - ((2 * v199) & 0xC0231D46)) ^ *(_DWORD *)&v99[4 * (v194 ^ 0x60)];
  int v201 = *(_DWORD *)&v94[4 * (BYTE2(v174) ^ 0x49)] ^ 0x32E6EB18;
  unsigned int v202 = (32 * v201 + 1560182975 - ((v201 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v191 ^ 0xCC)];
  unsigned int v203 = v201 ^ v191 ^ *(_DWORD *)&v98[4 * (BYTE1(v190) ^ 0xD9)] ^ *(_DWORD *)&v99[4 * (v189 ^ 0xC4)] ^ ((v189 ^ 0x4A) + 1611763363 - 2 * ((v189 ^ 0x4A) & 0xA7 ^ v189 & 4)) ^ (v202 - 1765831496 - ((2 * v202) & 0x2D7F1970));
  int v204 = *(_DWORD *)&v94[4 * (BYTE2(v177) ^ 0xF4)] ^ 0x32E6EB18;
  unsigned int v205 = (32 * v204 + 1560182975 - ((v204 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v182) ^ 0xDD)];
  unsigned int v206 = v190 ^ 0x4CEB2A32;
  int v207 = (v190 ^ 0x32) + 1611763363 - ((2 * (v190 ^ 0x4CEB2A32)) & 0x146);
  int v208 = v204 ^ *(_DWORD *)&v99[4 * (v190 ^ 0xBC)];
  unsigned int v209 = HIBYTE(v206);
  unsigned int v210 = *(_DWORD *)&v98[4 * (BYTE1(v174) ^ 0x79)] ^ v208 ^ v207 ^ (v205 - 1765831496 - ((2 * v205) & 0x2D7F1970));
  int v211 = *(_DWORD *)&v94[4 * (BYTE2(v182) ^ 0xBD)] ^ 0x32E6EB18;
  unsigned int v212 = (32 * v211 + 1560182975 - ((v211 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v206) ^ 0x21)];
  int v213 = (v212 - 1765831496 - ((2 * v212) & 0x2D7F1970)) ^ *(_DWORD *)&v98[4 * (BYTE1(v177) ^ 0xE3)];
  unsigned int v214 = v211 ^ v174 ^ *(_DWORD *)&v99[4 * (v174 ^ 0x3A)] ^ (v213
                                                                                             + 1611763363
                                                                                             - ((2 * v213) & 0xC0231D46));
  unsigned int v328 = HIBYTE(v200);
  int v215 = *(_DWORD *)&v94[4 * (BYTE2(v214) ^ 0xB8)] ^ 0x32E6EB18;
  unsigned int v216 = (32 * v215 + 1560182975 - ((v215 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v200) ^ 0x5D)];
  int v217 = *(_DWORD *)&v98[4 * (BYTE1(v210) ^ 0x2E)] ^ v203 ^ 0xA ^ (v216
                                                                                  - 1765831496
                                                                                  - ((2 * v216) & 0x2D7F1970));
  unsigned int v218 = *(_DWORD *)&v99[4 * (v203 ^ 0x84)] ^ v215 ^ (v217 + 1611763363 - ((2 * v217) & 0xC0231D46));
  int v219 = *(_DWORD *)&v93[4 * (HIBYTE(v203) ^ 0xEB)] ^ (HIBYTE(v203) + 1560182975 - ((v203 >> 23) & 0x17E));
  int v220 = *(_DWORD *)&v94[4 * (BYTE2(v200) ^ 0x8D)] ^ 0x32E6EB18;
  int v221 = *(_DWORD *)&v94[4 * ((v203 ^ 0xCAF5F30A) >> 16)] ^ 0x32E6EB18;
  unsigned int v222 = HIBYTE(v210);
  unsigned int v223 = (32 * v221 + 1560182975 - ((v221 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v210) ^ 0xBF)];
  unsigned __int8 v224 = v200 ^ v194;
  unsigned int v225 = v220 ^ *(_DWORD *)&v99[4 * (v210 ^ HIBYTE(v182) ^ 0x3F)] ^ *(_DWORD *)&v98[4 * (BYTE1(v214) ^ 0x14)] ^ ((v210 ^ HIBYTE(v182) ^ 0xB1) + 1611763363 - ((2 * (v210 ^ HIBYTE(v182) ^ 0xB1)) & 0x146)) ^ ((v219 ^ (32 * v220)) - 1765831496 - 2 * ((v219 ^ (32 * v220)) & 0x16BF8CBA ^ v219 & 2));
  int v226 = (v223 - 1765831496 - ((2 * v223) & 0x2D7F1970)) ^ *(_DWORD *)&v98[4
                                                                         * (((BYTE1(v200) ^ 0x3D)
                                                                           + (BYTE1(v200) ^ 0xFFFFFF31)
                                                                           + 1) ^ 0xFFFFFFFE)
                                                                         + 4 * (BYTE1(v200) ^ 0x3D)];
  int v227 = *(_DWORD *)&v94[4 * (BYTE2(v210) ^ 1)];
  unsigned int v228 = *(_DWORD *)&v99[4 * (v214 ^ v209 ^ 0x29)] ^ v214 ^ v209 ^ v221 ^ (v226 + 1611763363 - ((2 * v226) & 0xC0231D46));
  int v229 = v227 ^ 0x32E6EB18;
  unsigned int v230 = (32 * (v227 ^ 0x32E6EB18) + 1560182975 - (((v227 ^ 0x32E6EB18) << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v214) ^ 0x1E)];
  unsigned int v231 = ((v224 ^ 0xE0) + 1611763363 - 2 * ((v224 ^ 0xE0) & 0xBBBBBBBB ^ v224 & 0x18)) ^ *(_DWORD *)&v98[4 * BYTE1(v203)] ^ v229 ^ *(_DWORD *)&v99[4 * (v224 ^ 0x6E)] ^ (v230 - 1765831496 - ((2 * v230) & 0x2D7F1970));
  unsigned int v232 = 29 * ((v218 ^ 0x16000000) / 0x1D000000)
       + ((HIBYTE(v218) ^ 0x16)
                         - 29
                         * ((((27 * (HIBYTE(v218) ^ 0x16)) >> 8)
                           + ((((HIBYTE(v218) ^ 0x16)
                                               - ((unsigned __int16)(27 * (HIBYTE(v218) ^ 0x16)) >> 8)) & 0xFE) >> 1)) >> 4));
  int v233 = *(_DWORD *)&v94[4 * (BYTE2(v231) ^ 0xF1)] ^ 0x32E6EB18;
  unsigned int v234 = *(_DWORD *)&v93[4 * (v232 ^ 0x21)] ^ *(_DWORD *)&v94[4 * (BYTE2(v231) ^ 0xF1)] ^ 0x88B5744E ^ (32 * v233 + 1560182975 - ((v233 << 6) & 0xB9FD0140)) ^ v232;
  unsigned int v235 = *(_DWORD *)&v98[4 * (BYTE1(v228) ^ 0xB4)] ^ 0xE2162916;
  unsigned int v236 = ((v225 ^ 0x55) + 1611763363 - ((2 * (v225 ^ 0x55)) & 0x146)) ^ *(_DWORD *)&v99[4 * (v225 ^ 0xDB)] ^ (v234 + v235 - 2 * (v234 & v235));
  int v237 = *(_DWORD *)&v94[4 * (BYTE2(v218) ^ 0xF6)] ^ 0x32E6EB18;
  unsigned int v238 = (32 * v237 + 1560182975 - ((v237 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v225) ^ 0xA2)];
  LOBYTE(v226) = v231 ^ HIBYTE(v214);
  unsigned int v239 = *(_DWORD *)&v98[4 * (BYTE1(v231) ^ 0xA0)] ^ HIBYTE(v225) ^ v237 ^ *(_DWORD *)&v99[4
                                                                                         * (v228 ^ v222 ^ 0x3D)] ^ ((v228 ^ v222 ^ 0xB3) + LODWORD(STACK[0x218]) + ((2 * (v228 ^ v222)) | 0xFFFFFEB9)) ^ (v238 - 1765831496 - ((2 * v238) & 0x2D7F1970));
  int v240 = *(_DWORD *)&v94[4 * (BYTE2(v225) ^ 0x63)] ^ 0x32E6EB18;
  unsigned int v241 = (32 * v240 + 1560182975 - ((v240 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (HIBYTE(v228) ^ 0xFA)];
  unsigned int v242 = HIBYTE(v231);
  int v243 = *(_DWORD *)&v98[4 * (BYTE1(v218) ^ 0xED)] ^ HIBYTE(v228) ^ v240 ^ *(_DWORD *)&v99[4
                                                                                         * (v226 ^ 0xCF)] ^ ((v226 ^ 0x41) + 1611763363 - 2 * ((v226 ^ 0x41) & 0xB3 ^ v226 & 0x10)) ^ (v241 - 1765831496 - ((2 * v241) & 0x2D7F1970));
  int v244 = *(_DWORD *)&v98[4 * (BYTE1(v225) ^ 0xCB)];
  int v245 = *(_DWORD *)&v94[4 * (BYTE2(v228) ^ 0xBC)] ^ 0x32E6EB18;
  int v246 = ((v244 ^ 0x6E2C377A) + 124535870) ^ ((v244 ^ 0x69407347) + 1);
  int v247 = ((v246 - 1765831496 - ((2 * v246) & 0x2D7F1970)) ^ v244) + 124535869;
  int v248 = v218 ^ v328;
  unsigned int v249 = (32 * v245 + 1560182975 - ((v245 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v242 ^ 0xF)] ^ v247;
  unsigned int v250 = *(_DWORD *)&v99[4 * (v248 ^ 0x9C)] ^ v245 ^ (v249 + 1611763363 - ((2 * v249) & 0xC0231D46));
  unsigned int v251 = ((v239 >> 23) & 0x1DE ^ 0x14) + (HIBYTE(v239) ^ 0xD3FFF7F5);
  int v252 = *(_DWORD *)&v94[4 * (BYTE2(v250) ^ 0x69)];
  int v253 = *(_DWORD *)&v98[4 * (BYTE1(v243) ^ 0xE5)];
  unsigned int v254 = v252 ^ (32 * v252) ^ v253 & 0xFFFFFF7F ^ ((v253 | 0xFFFFFF7F) + 1957275055) ^ 0xF8840420;
  unsigned int v255 = v254 + 1560182975 - ((2 * v254) & 0xB9FD017E);
  unsigned int v256 = (v251 - 41) % 0x3Au + (~(2 * ((v251 - 41) % 0x3Au)) | 0x87);
  LOBYTE(v220) = v251 - ((2 * v251 + 34) & 0x78);
  unsigned int v257 = 58 * ((v251 + 738199569) / 0x3A) - ((116 * ((v251 + 738199569) / 0x3A)) & 0x78);
  unsigned __int8 v258 = v220 + 77;
  unsigned __int8 v259 = v256 + 61;
  if ((v239 ^ 0x1A000000) >> 25 <= 0x1C) {
    unsigned __int8 v259 = v258;
  }
  LODWORD(STACK[0x218]) = HIBYTE(v236);
  unsigned __int8 v260 = v257 + 60;
  if (v259 != 60) {
    unsigned __int8 v260 = v258;
  }
  int v261 = v260 ^ 0x3C;
  unsigned int v262 = *(_DWORD *)&v99[4 * (v239 ^ 0xDC)] ^ ((v239 ^ 0x52)
                                                              + 1611763363
                                                              - ((2 * (v239 ^ 0x52)) & 0x146)) ^ v255 ^ *(_DWORD *)&v93[4 * (HIBYTE(v236) ^ 0x4B)];
  int v263 = *(_DWORD *)&v94[4 * (BYTE2(v236) ^ 0xD0)] ^ 0x32E6EB18;
  unsigned int v264 = (32 * v263 + 1560182975 - ((v263 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v261 ^ 0x21)];
  unsigned int v265 = v263 ^ *(_DWORD *)&v98[4 * (BYTE1(v250) ^ 0xCA)] ^ *(_DWORD *)&v99[4 * (v243 ^ 0x60)] ^ ((v243 ^ 0xEE) + 1611763363 - 2 * ((v243 ^ 0xD73116EE) & 0xB3 ^ v243 & 0x10)) ^ (v264 - 1765831496 - ((2 * v264) & 0x2D7F1970));
  int v266 = *(_DWORD *)&v94[4 * (BYTE2(v239) ^ 0xDD)] ^ 0x32E6EB18;
  unsigned int v267 = (v243 ^ 0xD73116EE) >> 24;
  unsigned int v268 = (32 * v266 + 1560182975 - ((v266 << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v267 ^ 0x21)];
  int v269 = v242 ^ v248 ^ v250;
  int v270 = *(_DWORD *)&v94[4 * (BYTE2(v243) ^ 0x97)];
  unsigned int v271 = HIBYTE(v250);
  unsigned int v272 = *(_DWORD *)&v98[4 * (BYTE1(v236) ^ 0xD2)] ^ v266 ^ *(_DWORD *)&v99[4 * (v269 ^ 0x5B)] ^ (v268
                                                                                                - 1765831496
                                                                                                - ((2 * v268) & 0x2D7F1970)) ^ ((v269 ^ 0xD5) + 1611763363 - ((2 * (v269 ^ 0xD5)) & 0x146));
  unsigned int v273 = (32 * (v270 ^ 0x32E6EB18) + 1560182975 - (((v270 ^ 0x32E6EB18) << 6) & 0xB9FD0140)) ^ *(_DWORD *)&v93[4 * (v271 ^ 0x5C)];
  int v274 = *(_DWORD *)&v99[4 * (v236 ^ 0xD0)];
  HIDWORD(v275) = v274 ^ 0xEA3;
  LODWORD(v275) = v274 ^ 0x60118000;
  unsigned int v276 = (v275 >> 14) ^ __ROR4__(v270 ^ v271 ^ *(_DWORD *)&v98[4 * (BYTE1(v239) ^ 0xBC)] ^ 0xFC1CD19D ^ (v273- 1765831496- ((2 * v273) & 0x2D7F1970)), 14) ^ 0xE918FA98;
  int v277 = STACK[0x220];
  uint64_t v278 = (uint64_t)*(&off_26DE9F480 + LODWORD(STACK[0x220]) - 1398);
  int v279 = (v276 >> 2);
  int v280 = ((HIBYTE(v262) ^ 0xEB) + 520989262 - 2 * ((HIBYTE(v262) ^ 0xEB) & 0x5E ^ HIBYTE(v262) & 0x10)) ^ *(_DWORD *)(v278 + 4 * (HIBYTE(v262) ^ 0xFC));
  unsigned int v281 = (char *)*(&off_26DE9F480 + (LODWORD(STACK[0x220]) ^ 0x729)) - 8;
  int v329 = (v279 ^ 0xB1) - 735266374 + ((2 * (v279 ^ 0xB1) + 1776) & 0xC82 ^ 0x56DBFFFF);
  unsigned int v326 = v265 ^ v261 ^ 0x74;
  int v282 = *(_DWORD *)&v281[4 * (BYTE2(v262) ^ 0xB4)];
  HIDWORD(v275) = v282 ^ 1;
  LODWORD(v275) = v282 ^ 0x5D92A640;
  LODWORD(v275) = (v275 >> 4) ^ __ROR4__((BYTE2(v262) ^ 0x4E) + 1989809016, 4) ^ 0x61AB1F25;
  HIDWORD(v275) = v275;
  int v283 = (v275 >> 28) + 520989262 - ((2 * (v275 >> 28)) & 0x3E1B549C);
  HIDWORD(v275) = v276;
  LODWORD(v275) = v276;
  int v284 = *(_DWORD *)&v281[4 * (BYTE2(v265) ^ 0x72)] ^ ((BYTE2(v265) ^ 0x88)
                                                     - 735266374
                                                     + ((2 * (BYTE2(v265) ^ 0x88) + 1776) & 0xC82 ^ 0x56DBFFFF));
  unsigned int v285 = (char *)*(&off_26DE9F480 + (LODWORD(STACK[0x220]) ^ 0x777)) - 12;
  unsigned __int8 v286 = v236 ^ (v276 >> 18);
  int v287 = (char *)*(&off_26DE9F480 + LODWORD(STACK[0x220]) - 1523) - 8;
  int v288 = *(_DWORD *)(v278 + 4 * (HIBYTE(v272) ^ 0x20)) ^ ((BYTE1(v262) ^ 0xEB)
                                                          + 1773582481
                                                          - 2 * (((v262 >> 8) ^ 0xEB4EEB) & 0x95 ^ (v262 >> 8) & 4)) ^ *(_DWORD *)&v285[4 * (BYTE1(v262) ^ 0x99)] ^ (*(_DWORD *)&v287[4 * (v286 ^ 2)] - 513005680) ^ (v284 + 520989262 - ((2 * v284) & 0x3E1B549C));
  int v289 = *(_DWORD *)&v281[4 * (v279 ^ 0x4B)];
  unsigned int v290 = HIBYTE(v265);
  int v291 = *(_DWORD *)(v278 + 4 * (HIBYTE(v265) ^ 0x53));
  int v292 = (v276 >> 10);
  int v293 = *(_DWORD *)(v278 + 4 * (v292 ^ 0xB0u));
  LODWORD(v278) = (v265 >> 8) ^ 0x448895;
  int v294 = *(_DWORD *)&v285[4 * (BYTE1(v272) ^ 0xEA)];
  int v295 = *(_DWORD *)&v285[4 * (((unsigned __int16)(v275 >> 18) >> 8) ^ 0xD8)];
  int v296 = *(_DWORD *)&v285[4 * (v278 ^ 0x72)];
  LODWORD(v285) = v278 + 1773582481 - ((2 * v278) & 0x122);
  LODWORD(v278) = *(_DWORD *)&v287[4 * v326];
  int v297 = *(_DWORD *)&v287[4 * (v267 ^ 0xE7 ^ v272)];
  unint64_t v298 = STACK[0x238];
  unsigned int v299 = v291 ^ a57 ^ v295 ^ (v297 - 513005680) ^ v283 ^ ((((unsigned __int16)(v275 >> 18) >> 8) ^ 0xAA)
                                                        + 1773582481
                                                        - ((2 * (((v275 >> 18) >> 8) ^ 0xA7B1AA)) & 0x122));
  int v300 = a56 ^ HIBYTE(v272) ^ 0x37 ^ (v288 + 1131460968 - ((2 * v288) & 0x86E1733C) + 54);
  int v301 = v289 ^ a61 ^ v294 ^ (v280 & 0x38EA0183 ^ 0x30A20082 | v280 ^ 0xB7A60A96) ^ ((BYTE1(v272) ^ 0x98)
                                                                                   + 1773582481
                                                                                   - ((2 * ((v272 >> 8) ^ 0x373598)) & 0x122)) ^ v329;
  uint64_t v302 = v285 ^ a62 ^ ((BYTE2(v272) ^ 0x35) + 1989809016) ^ *(_DWORD *)&v281[4 * (BYTE2(v272) ^ 0xCF)] ^ v293 ^ (*(_DWORD *)&v287[4 * (LODWORD(STACK[0x218]) ^ 0x7B ^ v262)] - 513005680) ^ v296;
  unsigned int v303 = v300 - ((2 * v300) & 0xCA42704) + 106042242;
  int v304 = (char *)*(&off_26DE9F480 + (LODWORD(STACK[0x220]) ^ 0x70F)) - 12;
  LOBYTE(v294) = v304[BYTE2(v299) ^ 0x47] - ((2 * v304[BYTE2(v299) ^ 0x47] - 122) & 0x90);
  LOBYTE(v300) = v294 - 117;
  int v305 = ((v294 - 117) >> 4) ^ (((116 - v294) & 0x80) >> 7);
  unsigned int v306 = ((STACK[0x238] + 90) & 0x10) + (STACK[0x258] ^ 9);
  LOBYTE(v300) = v300 ^ 0x6F ^ ((v305 ^ 0xC) - 2 * ((v305 ^ 0xC) & 0xFB ^ v305 & 3) - 56);
  unsigned int v307 = (unsigned char *)(v318 + STACK[0x258]);
  v307[5] = v300;
  LOBYTE(v300) = v304[BYTE2(v303) ^ 0xDCLL] - ((2 * v304[BYTE2(v303) ^ 0xDCLL] - 122) & 0xC4) + 37;
  unsigned int v308 = v278 - 513005680;
  *(unsigned char *)(v318 + v306) = v300 ^ (((((v300 & 0x80) != 0) | 6) ^ (v300 >> 4))
                                  - 2
                                  * (((((v300 & 0x80) != 0) | 6) ^ (v300 >> 4)) & 0xAA ^ (v300 >> 4) & 8)
                                  + 98) ^ 0xE1;
  LODWORD(v278) = v290 ^ 0x98 ^ v299;
  uint64_t v309 = (char *)*(&off_26DE9F480 + v277 - 1567) - 4;
  v307[7] = v309[v278] ^ 0x9A ^ (((4 * v309[v278]) ^ 0xBC)
                                             - ((2 * ((4 * v309[v278]) ^ 0xBC)) & 0xD8)
                                             + 111);
  uint64_t v310 = (uint64_t)*(&off_26DE9F480 + v277 - 1717);
  v307[14] = *(unsigned char *)(v310 + (BYTE1(v302) ^ 0x81)) ^ 0xA ^ (8 * *(unsigned char *)(v310 + (BYTE1(v302) ^ 0x81))) & 0xE0;
  LOBYTE(v292) = v309[v292 ^ 0x46 ^ v302];
  LOBYTE(v300) = ((v292 ^ 0x40) - 47) ^ ((v292 ^ 0x90) + 1);
  LOBYTE(v292) = ((v300 - ((2 * v300) & 0xDF) + 111) ^ v292) - 48;
  v307[15] = v292 ^ (4 * v292) ^ 0xD8;
  int v311 = (char *)*(&off_26DE9F480 + v277 - 1700) - 12;
  v307[8] = v311[HIBYTE(v303) ^ 0x71] ^ 0xBE;
  LOBYTE(v300) = *(unsigned char *)(v310 + (((unsigned __int16)(v301 ^ v308) >> 8) ^ 0x48));
  v307[2] = v300 ^ (8 * v300) & 0xE0 ^ 0xE0;
  v307[10] = *(unsigned char *)(v310 + (BYTE1(v303) ^ 0x18)) ^ (8 * *(unsigned char *)(v310 + (BYTE1(v303) ^ 0x18))) & 0xE0 ^ 0xE;
  int v312 = v304[((v301 ^ v308) >> 16) ^ 0x5FLL];
  v307[1] = (v312 + 67) ^ 0x97 ^ ((((v312 - 61) & 0x80) != 0) ^ ((v312 - 61) >> 4) | 0x80);
  *unsigned int v307 = v311[((v301 ^ v308) >> 24) ^ 0xB5] ^ 0xDA;
  LOBYTE(v304) = v304[BYTE2(v302) ^ 0xC5] - ((2 * v304[BYTE2(v302) ^ 0xC5] + 6) & 0x6E) - 6;
  int v313 = (v304 >> 4) ^ (v304 >> 7) ^ 3;
  v307[13] = v304 ^ 0x24 ^ (v313 + (~(2 * v313) | 0xF1) + 56);
  LOBYTE(v304) = v309[(v301 ^ v308) ^ 0x45];
  *(unsigned char *)(v318 + STACK[0x228]) = v304 ^ 0x2B ^ (((4 * (_BYTE)v304) ^ 0xBC)
                                                                  - ((2 * ((4 * (_BYTE)v304) ^ 0xBC)) & 0xD8)
                                                                  + 111);
  v307[6] = *(unsigned char *)(v310 + (BYTE1(v299) ^ 0xC5)) ^ 0x6E ^ (8 * *(unsigned char *)(v310 + (BYTE1(v299) ^ 0xC5))) & 0xE0;
  v307[12] = v311[BYTE3(v302) ^ 0x97] ^ 0x4F;
  v307[4] = v311[HIBYTE(v299) ^ 0x43] ^ 0xB0;
  LOBYTE(v310) = v309[v303 ^ 0xD3];
  unint64_t v314 = STACK[0x258];
  v307[11] = v310 ^ 0x9B ^ (((4 * v310) ^ 0xBC) - ((2 * ((4 * v310) ^ 0xBC)) & 0xD8) + 111);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x270] + 8 * (v277 | (8 * ((v314 + 16) > 0x14F)))))(v314, 197, v302, 110, 4294967228, v318, v298, 216, a9, a10, a11, a12, a13, v316, a1, a16, v318, v319, a19,
           v320,
           v321,
           v322,
           v323,
           v324,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           v325,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_22B37E468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v29 = v25 - 389;
  uint64_t v30 = (char *)*(&off_26DE9F480 + v25 - 1082) - 12;
  int v31 = v30[*(unsigned char *)(v28 - 108) ^ 0x57 ^ (v25 + 123)];
  HIDWORD(v32) = v31 ^ 2;
  LODWORD(v32) = (v31 ^ 0xFFFFFFC7) << 24;
  uint64_t v33 = (uint64_t)*(&off_26DE9F480 + v25 - 1176);
  unsigned __int8 v34 = *(unsigned char *)(v33 + (*(unsigned __int8 *)(v28 - 99) ^ 0xD6));
  unsigned __int8 v35 = *(unsigned char *)(v33 + (*(unsigned __int8 *)(v28 - 107) ^ 0xE0));
  char v36 = *(unsigned char *)(v33 + (*(unsigned __int8 *)(v28 - 103) ^ 0x52));
  unsigned int v37 = (((v32 >> 26) ^ 0x4D) << 24) | ((v35 ^ 0xA2 ^ (((8 * v35) ^ (v35 << 7))
                                                                                    - ((16 * v35) & 0x20)
                                                                                    - 107)) << 16);
  unsigned int v38 = v37 - ((2 * v37) & 0xB5D80000) - 622041120;
  uint64_t v39 = (char *)*(&off_26DE9F480 + (v25 ^ 0x57Fu)) - 4;
  unsigned __int8 v40 = v36 ^ (((8 * v36) ^ (v36 << 7)) - ((16 * v36) & 0xBF) - 38) ^ 0x10;
  unsigned int v41 = (((*(unsigned __int8 *)(v28 - 106) ^ ((*(unsigned __int8 *)(v28 - 106) ^ 0xFFFFFF92)
                                            - ((2 * (*(unsigned char *)(v28 - 106) ^ 0x92) + 10) & 0x1E)
                                            - 92) ^ 0x6B ^ v39[*(unsigned __int8 *)(v28 - 106) ^ 0xD4]) << 9) & 0x1F800)
      + 134546247
      + ((((*(unsigned char *)(v28 - 106) ^ ((*(unsigned char *)(v28 - 106) ^ 0x92)
                                                    - ((2 * (*(unsigned char *)(v28 - 106) ^ 0x92) + 10) & 0x1E)
                                                    - 92)) ^ 0x6B ^ v39[*(unsigned __int8 *)(v28 - 106) ^ 0xD4]) << 8) ^ 0xF7FAFCB9);
  int v42 = (char *)*(&off_26DE9F480 + (v25 ^ 0x437u)) - 8;
  char v43 = v42[*(unsigned __int8 *)(v28 - 109) ^ 0x99];
  unsigned int v44 = (v41 - (v41 | v38 ^ 0xDAEC67E0)) ^ ((v38 ^ 0x2513981F) + 1);
  unsigned int v45 = ((v44 - ((2 * v44) & 0xB5D8CFC0) - 622041120) ^ v38) + v41;
  int v46 = v30[*(unsigned __int8 *)(v28 - 112) ^ 6];
  HIDWORD(v32) = v46 ^ 2;
  LODWORD(v32) = (v46 ^ 0xFFFFFFC7) << 24;
  LOBYTE(v41) = v42[(((*(unsigned __int8 *)(v28 - 101) - (*(unsigned __int8 *)(v28 - 101) ^ 0x50)) ^ 0xFFFFFFE0)
                   + *(unsigned __int8 *)(v28 - 101)) ^ 0x28];
  unsigned int v47 = v43 ^ 0x33 ^ (~v43 << 7) ^ (8 * (v43 ^ 0x33)) | (((v32 >> 26) ^ 0xF0) << 24);
  LOBYTE(v46) = (16 * v41) ^ 0x30;
  char v48 = (v41 ^ 0x33) + (v41 ^ (v46 - 109) ^ 0x3F) + 1;
  LOBYTE(v46) = ((v48 ^ (v46 - 96)) - 2 * ((v48 ^ (v46 - 96)) & 0x77 ^ v48 & 4) + 51) ^ (v46 - 109);
  int v49 = v30[*(unsigned __int8 *)(v28 - 100) ^ 0x7CLL];
  int v50 = (v41 ^ (((16 * (v46 + (v41 ^ 0x13))) & 0x80) + 8 * (v46 + (v41 ^ 0x13)) - 62)) ^ 0xF1 | (v40 << 16);
  HIDWORD(v32) = v49 ^ 2;
  LODWORD(v32) = (v49 ^ 0xFFFFFFC7) << 24;
  char v51 = v42[~*(unsigned char *)(v28 - 97)];
  unsigned int v52 = ((v34 ^ 0x53 ^ (((8 * v34) ^ (v34 << 7)) - ((16 * v34) & 0x9F) - 55)) << 16) | (((v32 >> 26) ^ 0x5D) << 24) | v51 ^ 0x33 ^ (~v51 << 7) ^ (8 * (v51 ^ 0x33));
  unsigned int v264 = v42;
  unsigned int v267 = v30;
  int v53 = v30[*(unsigned __int8 *)(v28 - 104) ^ 0xFCLL];
  HIDWORD(v32) = v53 ^ 2;
  LODWORD(v32) = (v53 ^ 0xFFFFFFC7) << 24;
  uint64_t v54 = *(unsigned __int8 *)(v28 - 111) ^ 0xFELL;
  uint64_t v266 = v33;
  int v55 = *(unsigned __int8 *)(v28 - 98);
  unsigned int v265 = v39;
  unsigned int v56 = (v47 & 0xFF0000FF | ((*(unsigned char *)(v33 + v54) ^ 0xBA ^ (((8 * *(unsigned char *)(v33 + v54)) ^ (*(unsigned char *)(v33 + v54) << 7))
                                                                             - ((16 * *(unsigned char *)(v33 + v54)) & 0xBF)
                                                                             + 90)) << 16) | ((v39[*(unsigned __int8 *)(v28 - 110) ^ 0xB6] ^ *(unsigned char *)(v28 - 110) ^ 0xF0 ^ ((*(unsigned char *)(v28 - 110) ^ 0xF0) - ((2 * *(unsigned char *)(v28 - 110) + 10) & 0x1E) - 92) ^ 0x8C) << 8)) ^ 0x363FFAF9;
  unsigned int v57 = (v50 & 0xFFFF00FF | (((*(unsigned char *)(v28 - 102) ^ ((*(unsigned char *)(v28 - 102) ^ 0xBB)
                                                                       + (~(2 * (*(unsigned char *)(v28 - 102) ^ 0xBB) + 10) | 0xE1)
                                                                       - 91)) ^ 0x68 ^ v39[*(unsigned __int8 *)(v28 - 102) ^ 0xFDLL]) << 8) | (((v32 >> 26) ^ 0x25) << 24)) ^ 0xBB27FCE6;
  int v58 = v42[*(unsigned __int8 *)(v28 - 105) ^ 0xD8] ^ 0x33 ^ (~v42[*(unsigned __int8 *)(v28 - 105) ^ 0xD8] << 7) ^ (8 * (v42[*(unsigned __int8 *)(v28 - 105) ^ 0xD8] ^ 0x33)) ^ 0x6F24A898 ^ v45;
  HIDWORD(v263) = v26 + 316801421;
  LODWORD(v39) = (v52 & 0xFFFF00FF | ((v39[(v55 ^ 0xCA7F7B37 ^ -(v55 ^ 0xCA7F7B37) ^ (-897615029 - (v55 ^ 0x7C)))
                                                          - 897615029] ^ v55 ^ 0x3A ^ ((v55 ^ 0x3A)
                                                                                     - ((2 * (v55 ^ 0x3A) + 10) & 0x1E)
                                                                                     - 92) ^ 0x2F) << 8)) ^ 0xD56D0ECA;
  LODWORD(v263) = v29 - 483045030;
  HIDWORD(v262) = v29 ^ 0x40E;
  LODWORD(v262) = v29 ^ 0x41B;
  HIDWORD(v261) = v29 ^ 0x56F;
  LODWORD(v261) = v29 ^ 0x5D3;
  HIDWORD(v260) = v29 ^ 0x44C;
  LODWORD(v260) = v29 ^ 0x4F3;
  *(_DWORD *)(v28 - 120) = v29;
  HIDWORD(a14) = v29 ^ 0x42F;
  unsigned __int8 v259 = v27;
  LODWORD(v268) = 0;
  *(void *)(v28 - 136) = 9;
  uint64_t v59 = v27[9] ^ 0x26;
  HIDWORD(v268) = (v29 - 483045030) & 0x1CCAAF67;
  uint64_t v271 = HIDWORD(v268) ^ 0x522u;
  LOBYTE(v42) = *(unsigned char *)(v266 + v59) ^ (((8 * *(unsigned char *)(v266 + v59)) ^ (*(unsigned char *)(v266 + v59) << 7))
                                        + ((16 * *(unsigned char *)(v266 + v59)) & 0x80)
                                        + 66) ^ 0x44;
  char v60 = *(unsigned char *)(v33 + (v27[v271] ^ 0x74));
  *(void *)(v28 - 128) = 7;
  uint64_t v61 = v27[7];
  *(void *)(v28 - 168) = 11;
  unsigned __int8 v62 = v60 ^ (((8 * v60) ^ (v60 << 7)) + (~(16 * v60) | 0x9F) + 50) ^ 0xF8;
  unsigned __int8 v63 = v264[v61 ^ 0x8B] ^ 0x33 ^ (~v264[v61 ^ 0x8B] << 7) ^ (8 * (v264[v61 ^ 0x8B] ^ 0x33));
  LOBYTE(v50) = v264[v27[11] ^ 0x35];
  *(void *)(v28 - 192) = 15;
  LOBYTE(v33) = v264[v27[15] ^ 3];
  LOBYTE(v50) = v50 ^ 0x33 ^ (~(_BYTE)v50 << 7) ^ (8 * (v50 ^ 0x33));
  LOBYTE(v61) = v33 ^ 0x33 ^ (~(_BYTE)v33 << 7) ^ (8 * (v33 ^ 0x33));
  LODWORD(v33) = v50 | (v42 << 16);
  LODWORD(v42) = v30[v27[4] ^ 0x5CLL];
  HIDWORD(v32) = v42 ^ 2;
  LODWORD(v32) = (v42 ^ 0xFFFFFFC7) << 24;
  *(void *)(v28 - 152) = 12;
  uint64_t v64 = v27[14];
  char v270 = v265[v64 ^ 0xEF];
  LODWORD(v42) = v63 | (((v32 >> 26) ^ 0xA2) << 24);
  int v65 = v30[v27[12] ^ 0x69];
  HIDWORD(v32) = v65 ^ 2;
  LODWORD(v32) = (v65 ^ 0xFFFFFFC7) << 24;
  unsigned int v66 = v61 | (((v270 ^ ((((v64 ^ 0xA9) + 21) ^ v64 ^ 0xA9)
                                                         - 2 * ((((v64 ^ 0xA9) + 21) ^ v64 ^ 0xA9) & 0xF)
                                                         - 113)) ^ 0xC6) << 8) | (((v32 >> 26) ^ 0x33333333) << 24);
  *(void *)(v28 - 176) = 3;
  uint64_t v67 = v27[3] ^ 0x39;
  *(void *)(v28 - 144) = 5;
  LODWORD(v67) = v264[v67];
  int v68 = (v67 ^ 0xDD) & 0xFF00FFFF | (v62 << 16);
  char v69 = *(unsigned char *)(v266 + (v27[5] ^ 0x6ALL));
  char v70 = v69 ^ (8 * v69) ^ (v69 << 7);
  LODWORD(v67) = (((8 * v67) ^ (~(_BYTE)v67 << 7)) ^ 0x9F) & 0xF8 ^ v68;
  LOBYTE(v68) = ((v70 ^ 0xE1) + 111) ^ ((v70 ^ 0x8F) + 1);
  LODWORD(v42) = (unsigned __int16)((v265[v27[6] ^ 0x6ALL] ^ v27[6] ^ 0x2C ^ ((v27[6] ^ 0x2C)
                                                                                             - ((2 * (v27[6] ^ 0x2C) + 10) & 0x1E)
                                                                                             - 92) ^ 0x51) << 8) | (((v70 ^ (v68 - 2 * (v68 & 7) + 7) ^ 0x77) + 110) << 16) | v42;
  uint64_t v71 = v27[2];
  *(void *)(v28 - 184) = 0;
  int v72 = v30[*v27 ^ 0x2ALL];
  HIDWORD(v32) = v72 ^ 2;
  LODWORD(v32) = (v72 ^ 0xFFFFFFC7) << 24;
  LODWORD(v67) = v67 & 0xFFFF00FF | (((v71 ^ ((v71 ^ 0x30) - ((2 * v71 + 10) & 0x1E) - 92) ^ v265[v71 ^ 0x76]) ^ 3) << 8);
  *(void *)(v28 - 160) = 10;
  LODWORD(v54) = v30[v27[8] ^ 0x80];
  unsigned int v73 = ((((v54 ^ 0xC6) << (v54 & 6 ^ 6) << (v54 & 6)) ^ (v54 >> 2) ^ 0xF0) << 24) | (((v265[v27[10] ^ 0x96] ^ v27[10] ^ 0xD0 ^ ((v27[10] ^ 0xD0) - ((2 * v27[10] + 10) & 0x1E) - 92)) ^ 0x88) << 8);
  LODWORD(v71) = (v67 | (((v32 >> 26) ^ 0xCE) << 24)) ^ 0xEE;
  LOBYTE(v67) = *(unsigned char *)(v266 + (v27[13] ^ 0x61));
  unsigned int v74 = (v71 + 910162648 - ((2 * v71) & 0x6C7FF5B0)) ^ v56;
  unsigned int v75 = ((v73 | v33) - 1155007450 - 2 * ((v73 | v33) & 0x3B27FC3E ^ v50 & 0x18)) ^ v57;
  unsigned int v76 = v66 & 0xFF00FFFF | (((v67 ^ (8 * v67) ^ ((_BYTE)v67 << 7)) ^ 0x46) << 16);
  unsigned int v77 = (v42 + 1864673432 - 2 * (v42 & 0x6F24A8BF ^ v63 & 0x14) + 19) ^ v58;
  unsigned int v78 = (v76 - 714273078 - ((2 * v76) & 0xAADA1DB4) + 16) ^ v39;
  int v79 = (((unsigned __int16)(((_WORD)v42
                                             - 22376
                                             - 2 * ((unsigned __int16)v42 & 0xA8BF ^ v63 & 0x14)
                                             + 19) ^ v58) >> 8) ^ 0x25 | 0xA6) & ((v77 >> 8) ^ 0x676225 | 0x59);
  LODWORD(v33) = v79 + 1819433194 - ((2 * v79) & 0x1D4);
  LODWORD(v71) = 32 * ((3 * ((v74 ^ 0x20000000) / 0x60000000)) & 7)
               + ((HIBYTE(v74) ^ 0x25) - 96 * ((171 * (HIBYTE(v74) ^ 0x25)) >> 14));
  int v80 = *(_DWORD *)(v28 - 120);
  unsigned int v81 = (char *)*(&off_26DE9F480 + v80 - 1014) - 12;
  int v82 = *(_DWORD *)&v81[4 * (BYTE2(v77) ^ 0x1A)];
  unsigned int v83 = (BYTE1(v75) ^ 0xB0FEF725) + (BYTE1(v75) ^ 0x11);
  LODWORD(v42) = v83 + 195202824 + ((2 * v83) & 0x1E0E ^ 0xFEBAFFFF);
  int v84 = (char *)*(&off_26DE9F480 + (int)v262) - 4;
  unsigned __int8 v85 = (char *)*(&off_26DE9F480 + v80 - 1033) - 12;
  unsigned __int8 v86 = (char *)*(&off_26DE9F480 + SHIDWORD(v262)) - 4;
  unsigned int v87 = *(_DWORD *)&v84[4 * (BYTE1(v75) ^ 7)] ^ *(_DWORD *)&v85[4 * (v78 ^ 0xEE)] ^ ((BYTE2(v77) ^ 0xD5AE2EB7 ^ (v82 - 158554873)) - 2 * (BYTE2(v77) ^ 0xD5AE2EB7) + 2 * ((BYTE2(v77) ^ 0xD5AE2EB7) & (v82 + 1988928775))) ^ ((v78 ^ 0xD9) - 524725518 + ((2 * (v78 ^ 0xD9) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v86[4 * (v71 ^ 0x9F)] ^ (v71 + 1688092338 + ((2 * v71 + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ v42;
  LODWORD(v42) = (-2
                - ((~(((v78 >> 8) ^ 0xFF8BC7F2) & 0x3D4D8444) | 0xD9137C28)
                 + (((v78 >> 8) ^ 0xFF8BC7F2) & 0x19010400 | 0x26EC83D7))) ^ ((v78 >> 8) ^ 0xFF8BC7F2) & 0x3D4D84BB;
  LODWORD(v42) = (v42 & 0xCA001792 ^ 0xA000792)
               + (v42 ^ 0xE4527828)
               - ((v42 ^ 0xE4527828) & 0xCA001792);
  LODWORD(v71) = ((HIBYTE(v77) ^ 0x67) + 1688092338 + ((2 * (HIBYTE(v77) ^ 0x67) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v77) ^ 0xF8)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v75) ^ 0x7F)] + (BYTE2(v75) ^ 0xFFFFFFF8) + ((v75 >> 15) & 0x1AA ^ 0xA) + 551450163);
  unsigned int v88 = *(_DWORD *)&v85[4 * (v74 ^ 0x43)] ^ *(_DWORD *)&v84[4 * (BYTE1(v78) ^ 0x46)] ^ ((v74 ^ 0x74) - 524725518 + ((2 * (v74 ^ 0x74) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v42 ^ 0x47BFE404) + (v42 ^ 0xF7411330)) ^ (v71 + 195202823 - ((2 * v71) & 0x17451E0E));
  LODWORD(v71) = (*(_DWORD *)&v81[4 * (BYTE2(v78) ^ 0xD0)] + (BYTE2(v78) ^ 0x2A51D182) - 158554872) ^ *(_DWORD *)&v86[4 * (HIBYTE(v75) ^ 0xDA)] ^ ((HIBYTE(v75) ^ 0x45) + 1688092338 + ((2 * (HIBYTE(v75) ^ 0x45) + 378) & 0x3E8 ^ 0xDFFF7FFF));
  unsigned int v89 = HIBYTE(v78);
  unsigned int v90 = (HIBYTE(v78) ^ 0x7A) + 1688092338 + ((2 * (HIBYTE(v78) ^ 0x7A) + 378) & 0x3E8 ^ 0xDFFF7FFF);
  unsigned int v91 = v85;
  unsigned int v92 = *(_DWORD *)&v84[4 * (BYTE1(v74) ^ 0x3F)] ^ ((BYTE1(v74) ^ 0xB0FEF71D) + (BYTE1(v74) ^ 0x29)) ^ ((v77 ^ 0x88) - 524725518 + ((2 * (v77 ^ 0x88) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v85[4 * (v77 ^ 0xBF)] ^ (v71 + 195202823 - ((2 * v71) & 0x17451E0E));
  unsigned int v93 = v90 ^ *(_DWORD *)&v86[4 * (v89 ^ 0xE5)] ^ ((BYTE2(v74) ^ 0x2A51D190)
                                                 - 158554872
                                                 + *(_DWORD *)&v81[4 * (BYTE2(v74) ^ 0xC2)]) ^ *(_DWORD *)&v85[4 * (v75 ^ 0xC1)] ^ ((v75 ^ 0xF6) - 524725518 + ((2 * (v75 ^ 0xF6) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v33 ^ 0x6C7258EA) + (v33 ^ 0xDC8CAFDE) + 195202823 - ((2 * ((v33 ^ 0x6C7258EA) + (v33 ^ 0xDC8CAFDE))) & 0x17451E0E)) ^ *(_DWORD *)&v84[4 * (v33 ^ 0x6C7258FC)];
  LODWORD(v33) = (BYTE1(v92) ^ 0xC08C6003) - ((2 * (BYTE1(v92) ^ 0xC08C6003)) & 0x1180150) + 298586536;
  LODWORD(v33) = *(_DWORD *)&v84[4 * BYTE1(v92)] ^ *(_DWORD *)&v85[4 * (v93 ^ 0xB4)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v88) ^ 0x37)] + (BYTE2(v88) ^ 0x2A51D165) - 158554872) ^ *(_DWORD *)&v86[4 * (HIBYTE(v87) ^ 0xA0)] ^ ((HIBYTE(v87) ^ 0x3F) + 1688092338 + ((2 * (HIBYTE(v87) ^ 0x3F) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v93 ^ 0x83) - 524725518 + ((2 * (v93 ^ 0x83) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v33 ^ 0xD14071BD) + (v33 ^ 0x61BE8689) + 195202823 - ((2 * ((v33 ^ 0xD14071BD) + (v33 ^ 0x61BE8689))) & 0x17451E0E));
  unsigned int v94 = *(_DWORD *)&v84[4 * (BYTE1(v93) ^ 0x4F)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v88) ^ 0x90)] ^ *(_DWORD *)&v85[4 * (v87 ^ 0xFD)] ^ ((v87 ^ 0xCA) - 524725518 + ((2 * (v87 ^ 0xCA) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ (*(_DWORD *)&v81[4 * (BYTE2(v92) ^ 0xD7)] + (BYTE2(v92) ^ 0x2A51D185) - 158554872) ^ ((HIBYTE(v88) ^ 0xF) + 1688092338 + ((2 * (HIBYTE(v88) ^ 0xF) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ (((v93 >> 7) & 0x196 ^ 0x92) - 1130265028 + ((2 * ((v93 >> 7) & 0x196 ^ 0x92) + 3688) & 0xFFFFFE0F ^ 0xFEBAFFFF));
  LODWORD(v67) = (BYTE1(v87) ^ 0xEBBEE3B3) + 339811361 + ((v87 >> 7) & 0x1BE ^ 0x98);
  LODWORD(v67) = ((v87 >> 8) & 0x34 ^ 0x24 ^ (v67 | 0xB0FEF734)) + v67;
  int v95 = *(_DWORD *)&v85[4 * (v88 ^ 0xE2)];
  unsigned int v96 = *(_DWORD *)&v84[4 * (BYTE1(v87) ^ 0x7A)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v92) ^ 0x5A)] ^ ((BYTE2(v93) ^ 0x2A51D1FD)
                                                                                              - 158554872
                                                                                              + *(_DWORD *)&v81[4 * (BYTE2(v93) ^ 0xAF)]) ^ ((HIBYTE(v92) ^ 0xC5) + 1688092338 + ((2 * (HIBYTE(v92) ^ 0xC5) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v88 ^ 0xD5) - 656292687 + (v95 ^ 0x7D78E40) - 2 * ((v95 ^ 0xC18440) & ((v88 ^ 0xD5) + 1491190961))) ^ (v67 + 195202823 - ((2 * v67) & 0x17451E0E));
  LODWORD(v71) = *(_DWORD *)&v86[4 * (HIBYTE(v93) ^ 0x34)];
  LODWORD(v54) = (((HIBYTE(v93) ^ 0xAB) + 1419343037) ^ 0x7BFEEDFF)
               + 67179009
               + ((2 * ((HIBYTE(v93) ^ 0xAB) + 1419343037)) & 0xA130CBFE);
  LODWORD(v42) = v88 >> 8;
  int v97 = BYTE1(v88);
  unsigned int v98 = ((2 * v42) & 0x68 ^ 0xFFFFFFDF) + 2 * (((2 * v42) & 0x13A ^ 0x130) + (v97 ^ 0x3265FD05));
  unsigned int v99 = ((v92 ^ 0x4B) - 524725518 + ((2 * (v92 ^ 0x4B) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ v54 & 0x490042D ^ *(_DWORD *)&v84[4 * (v97 ^ 0x8E)] ^ *(_DWORD *)&v85[4 * (v92 ^ 0x7C)] ^ (v71 & 0x796DF9D2 ^ v54 & 0x500971D2 | v71 & 0x8692062D) ^ ((BYTE2(v87) ^ 0x2A51D11D) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v87) ^ 0x4F)]) ^ (v98 - ((2 * v98 + 409335798) & 0x17451E0C) + 1473612546);
  int v100 = (v96 ^ 0x36) - 755729830 - 2 * ((v96 ^ 0x36) & 0x5B ^ v96 & 1);
  int v101 = ((v96 >> 8) & 0x94 ^ 0x64001291) + ((v96 >> 8) & 0x6B) - 1;
  unsigned int v102 = (v101 ^ 0xD4FEE555)
       + (v101 ^ 0x64001261)
       + 195202823
       - ((2 * ((v101 ^ 0xD4FEE555) + (v101 ^ 0x64001261))) & 0x17451E0E);
  unsigned int v103 = *(_DWORD *)&v84[4 * (BYTE1(v96) ^ 0xE7)] ^ *(_DWORD *)&v86[4 * (BYTE3(v33) ^ 0xE6)] ^ *(_DWORD *)&v85[4 * (v99 ^ 0x2F)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v94) ^ 0x45)] + (BYTE2(v94) ^ 0xD5AE2EE8) - 158554872 + ((2 * BYTE2(v94)) ^ 0x54A3A22F)) ^ ((BYTE3(v33) ^ 0x79) + 1688092338 + ((2 * (BYTE3(v33) ^ 0x79) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v99 ^ 0x18) - 524725518 + ((2 * (v99 ^ 0x18) + 98) & 0x80 ^ 0xFE7CF7FF));
  LODWORD(v42) = ((v94 >> 23) & 0x17A) + HIBYTE(v94) + ((HIBYTE(v94) + (HIBYTE(v94) ^ 0xAB668B42) + 1) ^ 0xFFFFFFFE);
  LODWORD(v54) = ((2 * (BYTE1(v99) ^ 0xC2)) | 0x4CD652D0) - (BYTE1(v99) ^ 0xC2) - 644557160;
  unsigned int v104 = *(_DWORD *)&v84[4 * (BYTE1(v99) ^ 0x7C)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v94) ^ 0x9F)] ^ *(_DWORD *)&v85[4 * (v33 ^ 0x9F)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v96) ^ 0xA7)] + (BYTE2(v96) ^ 0x2A51D1F5) - 158554872) ^ ((v33 ^ 0xA8) - 524725518 + ((2 * (v33 ^ 0xA8) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ (v42 + 268749300 - ((2 * v42) & 0x200093E8)) ^ ((v54 ^ 0x266B29C0) + (v54 ^ 0x9695DEF4) + 195202823 - ((2 * ((v54 ^ 0x266B29C0) + (v54 ^ 0x9695DEF4))) & 0x17451E0E));
  LODWORD(v42) = ((v33 >> 8) & 0xA5) + (BYTE1(v33) ^ 0xFFFFFFEF) + (BYTE1(v33) | 0x698BD25A) + 1;
  unsigned int v105 = ((HIBYTE(v96) ^ 0xB3) + 1688092338 + ((2 * (HIBYTE(v96) ^ 0xB3) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v96) ^ 0x2C)] ^ *(_DWORD *)&v84[4 * (BYTE1(v33) ^ 0x69)] ^ ((v42 ^ 0x698BD235) + (v42 ^ 0xD9752501) + 195202823 - ((2 * ((v42 ^ 0x698BD235) + (v42 ^ 0xD9752501))) & 0x17451E0E)) ^ ((BYTE2(v99) ^ 0x2A51D16B) - 158554872 + *(_DWORD *)&v81[4 * (((BYTE2(v99) ^ 0xFFFFFFC6) + (BYTE2(v99) ^ 0x41) + 1) ^ 0xFFFFFFF0) + 4 * (BYTE2(v99) ^ 0x41)]);
  unsigned int v106 = *(_DWORD *)&v85[4 * (v94 ^ 0x13)] ^ ((v94 ^ 0x24) - 656292687) ^ (v105 + 131567168 - ((2 * v105) & 0xFAF1C80));
  int v107 = BYTE1(v94);
  int v108 = (BYTE1(v94) ^ 0xEC) & ((v94 >> 8) ^ 0xD8);
  unsigned int v109 = ((HIBYTE(v99) ^ 0x7E) + 1688092338 + ((2 * (HIBYTE(v99) ^ 0x7E) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v99) ^ 0xE1)] ^ (~((4 * v108 + 33418856) & 0x1451E0C) + 2 * v108 - 1130265028) ^ *(_DWORD *)&v84[4 * (v107 ^ 0xFA)] ^ ((BYTE2(v33) ^ 0x2A51D115) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v33) ^ 0x47)]);
  unsigned int v110 = v103 ^ v102;
  LODWORD(v71) = ((v110 >> 23) & 0xFA ^ 0xC8) + (HIBYTE(v110) ^ 0xDE7E639B);
  HIDWORD(v32) = ((v103 ^ ~v102) >> 31) ^ 0x92CFFB;
  LODWORD(v32) = ((v71 << 25) + 100663296) ^ 0xDDDDDDDD;
  unsigned int v111 = *(_DWORD *)&v85[4 * (v100 ^ 0xD2F47A6D)] ^ ((v100 ^ 0xD2F47A5A) - 656292687) ^ (v109
                                                                                       + 131567168
                                                                                       - ((2 * v109) & 0xFAF1C80));
  int v112 = ((v106 >> 23) & 0xF8 ^ 0xA8) + (HIBYTE(v106) ^ 0x7BD77F29);
  int v113 = ((2 * (BYTE1(v106) ^ 0x11194069)) & 0x20328150) - (BYTE1(v106) ^ 0x11194069) + 587644503;
  LODWORD(v67) = ((v104 >> 23) & 0x17A ^ 0x120) + (HIBYTE(v104) ^ 0x5499742D);
  unsigned int v114 = *(_DWORD *)&v84[4 * (BYTE1(v106) ^ 0x7B)] ^ *(_DWORD *)&v91[4
                                                                   * ((v91[4 * (v100 ^ 0xD2F47A6D)] ^ ((v100 ^ 0x5A) - 79) ^ (v109 + 64 - ((2 * v109) & 0x80))) ^ 0xBF)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v104) ^ 3)] + (BYTE2(v104) ^ 0x2A51D151) - 158554872) ^ (v71 - 2044732619 + ((2 * ((v71 + 320) & 0x9FF ^ (v71 | 0x7FFFFFF4))) ^ 0x20008017)) ^ *(_DWORD *)&v86[4 * ((v32 >> 25) ^ 0x4967FD71)] ^ ((v111 ^ 0x88) - 524725518 + ((2 * (v111 ^ 0x88) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v113 ^ 0x321FFE53) + (v113 ^ 0x82E10967) + 195202823 - ((2 * ((v113 ^ 0x321FFE53) + (v113 ^ 0x82E10967))) & 0x7451E0E));
  LODWORD(v71) = ((2 * (v111 >> 8)) & 0x68 ^ 0xFFFFFFF7)
               + 2 * (((2 * (v111 >> 8)) & 0x1EE ^ 0x18A) + (BYTE1(v111) ^ 0x4B8EFC32));
  unsigned int v115 = ((2 * (v110 ^ 0x13310001)) | 0xABE8C3B0) - (v110 ^ 0x13310001) - 1442079192;
  HIDWORD(v269) = v115 ^ 0x46C561C1;
  unsigned int v116 = *(_DWORD *)&v84[4
                       * (((unsigned __int16)(*(_WORD *)&v91[4 * (v100 ^ 0xD2F47A6D)] ^ ((v100 ^ 0x7A5A) - 15183) ^ (v109 - 29120 - ((2 * v109) & 0x1C80))) >> 8) ^ 0xD3)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v104) ^ 0xF)] ^ *(_DWORD *)&v91[4 * (v115 ^ 0x46C561C1)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v106) ^ 0x91)] + (BYTE2(v106) ^ 0x2A51D1C3) - 158554872) ^ (~((2 * (v115 ^ 0x46C561F6) + 29591906) & 0xFAF1C80) + (v115 ^ 0x46C561F6) - 524725518) ^ (v67 + 268749300 + ((2 * v67) & 0x3E8 ^ 0xDFFF7FFF) + 1) ^ (v71 - ((2 * v71 + 331479694) & 0x17451E0C) + 629378126);
  LODWORD(v54) = (((2 * (BYTE1(v110) ^ 0x95)) & 0x112) - (BYTE1(v110) ^ 0x95) + 662908534) ^ 0x37E22756;
  LODWORD(v269) = 710005195;
  unsigned int v117 = ((BYTE2(v111) ^ 0x2A51D1CB) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v111) ^ 0x99)]) ^ (v112
                                                                                               - 389628106
                                                                                               + ((2 * v112 + 125570) & 0x193E8 ^ 0xDFFFFFFF)) ^ *(_DWORD *)&v86[4 * (v112 - ((2 * v112 + 264) & 0x13Eu)) - 0x1EF5DFB74];
  LODWORD(v71) = (((v54 - ((2 * v54) & 0x6E) + 1258848311) ^ 0x5B6989F2)
                + ((v54 - ((2 * v54) & 0x6E) + 1258848311) ^ 0xEB977EC6)) ^ *(_DWORD *)&v84[4 * (BYTE1(v110) ^ 0x66)];
  unsigned int v118 = v117 & 0x80000000 | 0x77F9A577;
  int v119 = v71 ^ 0x6949A01C ^ (536904003 - v118);
  LODWORD(v71) = v71 ^ 0xBA28F07;
  BOOL v120 = (((536904003 - v118) ^ 0xA806DBCC) & v71) == 0;
  int v121 = v71 - v118 - ((2 * (v71 - v118) - 269268242) & 0x95DBE9AE) + 1122474574;
  if (v120) {
    int v121 = v119;
  }
  unsigned int v122 = *(_DWORD *)&v85[4 * (v104 ^ 0x65)] ^ ((v104 ^ 0x52)
                                                              - 524725518
                                                              + ((2 * (v104 ^ 0x52) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v117 & 0x7FFFFFFF) - ((2 * v117) & 0x95DBE9AE) - 890374953) ^ v121;
  HIDWORD(a25) = 1688092337;
  int v123 = (((v104 >> 8) & 0xB) + 1599212543 + ((v104 >> 8) & 0xF4 ^ 0x21)) ^ 0x5F52201B;
  unsigned int v124 = ((2 * v106) & 0x1F8 ^ 0x78) + (v106 ^ 0xDDEB7DC1);
  unsigned int v125 = (((v123 - ((2 * v123) & 0x410C) + 1014968454) ^ 0x8C81EB1E)
        + ((v123 - ((2 * v123) & 0x410C) + 1014968454) ^ 0x3C7F1C2A)) ^ ((HIBYTE(v111) ^ 0x4D)
                                                                       + 1688092337
                                                                       - ((2 * (HIBYTE(v111) ^ 0x4D) + 691202426) & 0x200083E8)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v111) ^ 0xD2)] ^ ((BYTE2(v110) ^ 0x2A51D121) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v110) ^ 0x73)]);
  HIDWORD(v126) = v106 ^ 0xFFFFFFFD;
  LODWORD(v126) = v124 + 571769348;
  int v127 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0x5729ECFA) - 1416300931;
  HIDWORD(v126) = v127 & 0x2C05AF3 ^ 0x3BFF77E;
  LODWORD(v126) = v127 ^ 0xE8000000;
  unsigned int v128 = *(_DWORD *)&v84[4 * (BYTE1(v104) ^ 0x81)] ^ (v124 + 47043830 + ((2 * v124 + 3434) & 0xC80 ^ 0xFE7CFFFF)) ^ (v125 + 195202823 - ((2 * v125) & 0x17451E0E)) ^ *(_DWORD *)&v85[4 * ((v126 >> 26) ^ 0x4FE943E7)];
  unsigned int v129 = ((2 * (BYTE1(v122) ^ 0x84008813)) & 0x1112C) - (BYTE1(v122) ^ 0x84008813) + 1164726377;
  unsigned int v130 = *(_DWORD *)&v84[4 * (BYTE1(v122) ^ 1)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v114) ^ 0xA4)] ^ *(_DWORD *)&v85[4 * (v128 ^ 1)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v116) ^ 0x66)] + (BYTE2(v116) ^ 0x2A51D134) - 158554872) ^ ((HIBYTE(v114) ^ 0x3B) + 1688092338 + ((2 * (HIBYTE(v114) ^ 0x3B) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v128 ^ 0x36) - 524725518 + ((2 * (v128 ^ 0x36) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v129 ^ 0xC16CD86D) + (v129 ^ 0x71922F59) + 195202823 - ((2 * ((v129 ^ 0xC16CD86D) + (v129 ^ 0x71922F59))) & 0x3451E0E));
  int v131 = ((v128 >> 8) ^ 0x75AB18A1) & 0x1080D5D ^ 0x3ABBA3E4 ^ (((2 * (((v128 >> 8) ^ 0x75AB18A1) & 0x41080DA2)) | 0x77675F88)
                                                              - (((v128 >> 8) ^ 0x75AB18A1) & 0x41080DA2)
                                                              - 1001631684);
  unsigned int v132 = (v131 | 0x441F927F) - (v131 | 0xBBE06D80) - 1142919808;
  unsigned int v133 = v132 ^ 0x5179E31;
  unsigned int v134 = ((HIBYTE(v116) ^ 0xDD) + 1688092338 + ((2 * (HIBYTE(v116) ^ 0xDD) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v116) ^ 0x42)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v122) ^ 0xC2)] + (BYTE2(v122) ^ 0x2A51D190) - 158554872) ^ ((v132 ^ 0x5179E27) + (v132 ^ 0xB5E96913));
  unsigned int v135 = (-2
        - ((~(((v114 >> 8) ^ 0xE6016370) & 0x425B4765) | 0x13664907)
         + (((v114 >> 8) ^ 0xE6016370) & 0x2424105 | 0xEC99B6F8))) ^ ((v114 >> 8) ^ 0xE6016370) & 0x425B479A;
  unsigned int v136 = ((v114 ^ 0x88) - 524725518 + ((2 * (v114 ^ 0x88) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v85[4 * (v114 ^ 0xBF)] ^ *(_DWORD *)&v84[4 * v133] ^ (v134 + 195202823 - ((2 * v134) & 0x17451E0E));
  unsigned int v137 = *(_DWORD *)&v84[4 * (v135 ^ 0x1366498C)] ^ ((BYTE2(v128) ^ 0x2A51D13C)
                                                   - 158554872
                                                   + *(_DWORD *)&v81[4 * (BYTE2(v128) ^ 0x6E)]) ^ ((v135 ^ 0x1366499A)
                                                                                                 + (v135 ^ 0xA398BEAE)
                                                                                                 + 195202823
                                                                                                 - ((2 * ((v135 ^ 0x1366499A) + (v135 ^ 0xA398BEAE))) & 0x17451E0E)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v122) ^ 0x61)] ^ ((HIBYTE(v122) ^ 0xFE) + 1688092338 + ((2 * (HIBYTE(v122) ^ 0xFE) + 378) & 0x3E8 ^ 0xDFFF7FFF));
  unsigned int v138 = *(_DWORD *)&v85[4 * (v116 ^ 0xB4)] ^ ((v116 ^ 0x83) - 656292687) ^ (v137 + 131567168 - ((2 * v137) & 0xFAF1C80));
  unsigned int v139 = *(_DWORD *)&v86[4 * (HIBYTE(v128) ^ 0x5A)] ^ ((BYTE1(v116) ^ 0x71)
                                                     + (BYTE1(v116) ^ 0xB0FEF745)
                                                     + 195202823
                                                     - ((2 * ((BYTE1(v116) ^ 0x71) + (BYTE1(v116) ^ 0xB0FEF745))) & 0x1451E0E)) ^ ((HIBYTE(v128) ^ 0xC5) + 1688092338 + ((2 * (HIBYTE(v128) ^ 0xC5) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((BYTE2(v114) ^ 0x2A51D102) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v114) ^ 0x50)]) ^ ((v122 ^ 0xE7) - 524725518 + ((2 * (v122 ^ 0xE7) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v84[4 * (BYTE1(v116) ^ 0x67)] ^ *(_DWORD *)&v85[4 * (v122 ^ 0xD0)];
  unsigned int v140 = (v130 ^ 0xC507EA6B) >> (v114 & 0x10) >> (v114 & 0x10 ^ 0x10);
  char v141 = v140 - ((2 * v140) & 0xBC);
  unsigned int v142 = (-945851791 - (BYTE1(v138) ^ 0xF7 | 0xC79F7271) + (BYTE1(v138) ^ 0xF7 | 0x38608D8E)) ^ 0x38608DD4;
  int v143 = v142 + 315199690 - ((2 * v142) & 0x259321D6) + 33;
  unsigned int v144 = *(_DWORD *)&v84[4 * (BYTE1(v138) ^ 0x9A)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v130) ^ 0x5A)] ^ *(_DWORD *)&v85[4 * (v139 ^ 0x57)] ^ ((v139 ^ 0x60) - 524725518 + ((2 * (v139 ^ 0x60) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((HIBYTE(v130) ^ 0xC5) + 1688092338 + ((2 * (HIBYTE(v130) ^ 0xC5) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ (*(_DWORD *)&v81[4 * (BYTE2(v136) ^ 0x2C)] + (BYTE2(v136) ^ 0x2A51D17E) - 158554872) ^ ((v143 ^ 0xA23767FE) + (v143 ^ 0x12C990CA) + 195202823 - ((2 * ((v143 ^ 0xA23767FE) + (v143 ^ 0x12C990CA))) & 0x17451E0E));
  int v145 = ((BYTE2(v138) ^ 0x5C) + ((2 * BYTE2(v138)) ^ 0x46) + 1);
  int v146 = ((2 * (BYTE1(v139) ^ 0xAB)) | 0x6A5088DA) - (BYTE1(v139) ^ 0xAB) + 1255652243;
  unsigned int v147 = (v146 & 0x10282EBC ^ 0x82172A95) + (v146 & 0x25005143) - 1;
  unsigned int v148 = *(_DWORD *)&v84[4 * (BYTE1(v139) ^ 0x48)] ^ *(_DWORD *)&v85[4 * (v130 ^ 0x5C)] ^ ((v130 ^ 0x6B) - 524725518 + ((2 * (v130 ^ 0x6B) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v86[4 * (HIBYTE(v136) ^ 0xF1)] ^ ((HIBYTE(v136) ^ 0x6E) + 1688092338 + ((2 * (HIBYTE(v136) ^ 0x6E) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v147 ^ 0x7C19938) + (v147 ^ 0xB73F6E0C) + 195202823 - ((2 * ((v147 ^ 0x7C19938) + (v147 ^ 0xB73F6E0C))) & 0x17451E0E)) ^ (*(_DWORD *)&v81[4 * (v145 ^ 0x78)] + (v145 ^ 0x2A51D12A) - 158554872);
  int v149 = (BYTE1(v130) ^ 0x4021A8) - ((2 * (BYTE1(v130) ^ 0x4021A8)) & 0x40EA) - 1046464907;
  unsigned int v150 = ((HIBYTE(v138) ^ 0xE6) + 1688092337 - ((2 * (HIBYTE(v138) ^ 0xE6) + 691202426) & 0x200083E8)) ^ *(_DWORD *)&v84[4 * (BYTE1(v130) ^ 0xFC)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v138) ^ 0x79)] ^ ((BYTE2(v139) ^ 0x2A51D1D2) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v139) ^ 0x80)]) ^ *(_DWORD *)&v91[4 * (v136 ^ 0x86)] ^ ((v136 ^ 0xB1) - 524725518 + ((2 * (v136 ^ 0xB1) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v149 ^ 0xC1E01737) + (v149 ^ 0x711EE003) + 195202823 - ((2 * ((v149 ^ 0xC1E01737) + (v149 ^ 0x711EE003))) & 0x17451E0E));
  unsigned int v151 = (((v136 >> 8) & 0xD6 ^ 0xA0361997) + ((v136 >> 8) & 0x29) - 1) ^ 0x68360926;
  unsigned int v152 = ((((2 * v151) & 0x10002122) - v151 + 1651329646) ^ 0x1A93AD7A)
       + ((((2 * v151) & 0x10002122) - v151 + 1651329646) ^ 0xAA6D5A4E);
  unsigned int v153 = *(_DWORD *)&v86[4 * (HIBYTE(v139) ^ 0xCA)] ^ ((HIBYTE(v139) ^ 0x55)
                                                     + 1688092338
                                                     + ((2 * (HIBYTE(v139) ^ 0x55) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v84[4 * (BYTE1(v136) ^ 0x86)] ^ (((v141 - 34) ^ 0x2A51D1F4) - 158554872 + *(_DWORD *)&v81[4 * ((v141 - 34) ^ 0xA6)]) ^ (v152 + 195202823 - ((2 * v152) & 0x17451E0E));
  unsigned int v154 = *(_DWORD *)&v91[4 * (v138 ^ 0x38)] ^ ((v138 ^ 0xF) - 656292687) ^ (v153 + 131567168 - ((2 * v153) & 0xFAF1C80));
  unsigned int v155 = (v144 ^ 0x10CCCA4D) >> (v270 & 0x18 ^ 8) >> (v270 & 0x18 ^ 0x10);
  int v156 = (v155 - ((2 * v155) & 0x7A) - 67);
  int v157 = ((2 * (BYTE1(v150) ^ 0x87)) | 0x27FAE4A4) - (BYTE1(v150) ^ 0x87) + 1812106670;
  unsigned int v158 = (v157 & 0x13F54BA1 ^ 0x1DD4C9A0) + (v157 ^ 0x6223224F) - ((v157 ^ 0x6223224F) & 0xFFF7CBA1);
  unsigned int v159 = (v158 ^ 0xE299BED) + (v158 ^ 0xBED76CD9);
  int v160 = (*(_DWORD *)&v81[4 * (BYTE2(v148) ^ 0xAD)] + (BYTE2(v148) ^ 0x2A51D1FF) - 158554872) ^ ((v156 ^ 0xBD)
                                                                                               + 1688092337
                                                                                               - ((2 * (v156 ^ 0xBD)
                                                                                                 + 691202426) & 0x200083E8)) ^ *(_DWORD *)&v86[4 * (v156 ^ 0x22)];
  int v161 = *(_DWORD *)&v84[4 * (BYTE1(v150) ^ 0xC0)];
  if (v148 == 148197797) {
    int v162 = v160;
  }
  else {
    int v162 = ~(v161 ^ v160);
  }
  BOOL v120 = (v162 & v161 & 0x10000) == 0;
  int v163 = v160 + (v161 & 0x10000);
  int v164 = -2 * (v161 & 0x10000);
  if (v120) {
    int v164 = 0;
  }
  unsigned int v165 = v161 & 0xFFFEFFFF ^ v159 ^ *(_DWORD *)&v91[4 * (v154 ^ 0xFD)] ^ ((v154 ^ 0xCA)
                                                                                         - 524725518
                                                                                         + ((2
                                                                                           * (v154 ^ 0xCA)
                                                                                           + 98) & 0x80 ^ 0xFE7CF7FF)) ^ (v163 + v164);
  unsigned int v166 = (BYTE1(v154) ^ 0xD9 | 0xD37754C4) - (BYTE1(v154) ^ 0xD9 | 0x2C88AB3B) + 747154235;
  unsigned int v167 = *(_DWORD *)&v84[4 * (BYTE1(v154) ^ 0x95)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v148) ^ 0x97)] ^ *(_DWORD *)&v91[4 * (v144 ^ 0x7A)] ^ ((BYTE2(v150) ^ 0x2A51D111) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v150) ^ 0x43)]) ^ ((v144 ^ 0x4D) - 524725518 + ((2 * (v144 ^ 0x4D) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((HIBYTE(v148) ^ 8) + 1688092338 + ((2 * (HIBYTE(v148) ^ 8) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v166 ^ 0xD377549E) + (v166 ^ 0x6389A3AA) + 195202823 - ((2 * ((v166 ^ 0xD377549E) + (v166 ^ 0x6389A3AA))) & 0x17451E0E));
  int v168 = *(_DWORD *)&v81[4 * (BYTE2(v154) ^ 0xF6)] + (BYTE2(v154) ^ 0x2A51D1A4) - 158554872;
  unsigned int v170 = HIBYTE(v154) ^ 0x8CB6B573;
  unsigned int v171 = HIBYTE(v154) ^ 0xBB;
  if (v171 >= 0xE1) {
    v171 -= 225;
  }
  BOOL v172 = (v154 ^ 0xBBBBBBBB) >> 24 > 0xE0;
  int v173 = -1934183127;
  if (!v172) {
    int v173 = -1934182968;
  }
  if (v171) {
    int v173 = v170;
  }
  unsigned int v169 = HIBYTE(v150);
  unsigned int v174 = *(_DWORD *)&v86[4 * (v169 ^ 7)] ^ ((v169 ^ 0x98) + 1688092338 + ((2 * (v169 ^ 0x98) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v91[4 * (v148 ^ 0x92)] ^ ((v148 ^ 0xA5) - 524725518 + ((2 * (v148 ^ 0xA5) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v84[4 * (BYTE1(v144) ^ 0xDC)] ^ (((v144 >> 7) & 0x196 ^ 0x194) - 1130265028 + ((2 * ((v144 >> 7) & 0x196 ^ 0x194) + 3688) & 0xFFFFFE0F ^ 0xFEBAFFFF)) ^ v168;
  unsigned int v175 = (((v148 >> 8) & 0x13) + 1276031487 + ((v148 >> 8) & 0xEC ^ 0xA1)) ^ 0xE70ED251;
  unsigned int v176 = ((BYTE2(v144) ^ 0x2A51D1E6) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v144) ^ 0xB4)]) ^ *(_DWORD *)&v86[4 * (v173 ^ 0x8CB6B557)] ^ ((v173 ^ 0x8CB6B5C8) + 1688092338 + ~((2 * (v173 ^ 0x8CB6B5C8) + 691202426) & 0x200083E8));
  unsigned int v177 = (((((2 * v175) & 0x5200C702) - v175 + 1179065470) ^ 0x5DB98BEA)
        + ((((2 * v175) & 0x5200C702) - v175 + 1179065470) ^ 0xED477CDE)) ^ *(_DWORD *)&v84[4 * (BYTE1(v148) ^ 0x47)];
  unsigned int v178 = (v165 ^ 0x343C96E) >> (v177 & 0x10) >> (v177 & 0x10 ^ 0x10);
  unsigned int v179 = *(_DWORD *)&v91[4 * (v150 ^ 0xC4)] ^ ((v150 ^ 0xF3)
                                                              - 524725518
                                                              + ((2 * (v150 ^ 0xF3) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ v177 ^ (v176 - ((2 * v176) & 0xCD1FFC84) + 1720712770);
  unsigned int v180 = (((v178 - ((2 * v178) & 0x1FC4CAD4) + 266495338) & 0xB9 ^ 0xD7)
        - ((-107 - ((_BYTE)v178 - ((2 * (_BYTE)v178) & 0xD4))) & 0x10)) & 0xFFFFFFF9 ^ (v178
                                                                                      - ((2 * v178) & 0x1FC4CAD4)
                                                                                      + 266495338) & 0x56;
  unsigned int v181 = ((2 * ((HIBYTE(v167) ^ 0x76) + 1419343037)) & 0x932AAEE) + (((HIBYTE(v167) ^ 0x76) + 1419343037) ^ 0xADBBDF77);
  int v182 = *(_DWORD *)&v86[4 * (HIBYTE(v167) ^ 0xE9)];
  unsigned int v183 = ((BYTE2(v174) ^ 0x2A51D125) - 158554872 + *(_DWORD *)&v81[4 * (BYTE2(v174) ^ 0x77)]) ^ 0xC358ABFE ^ ((v181 + 306454665) & 0x10904425 ^ v182 & 0x33F04625 | (v181 + 1380196489) & 0x440931DA ^ v182 & 0xCC0FB9DA);
  if (v183 == -748920310) {
    int v184 = 1814973839;
  }
  else {
    int v184 = (((v167 >> 8) & 0x10) - ((v167 >> 8) & 6) + 464331558) ^ 0x77836EAB;
  }
  int v185 = *(_DWORD *)&v81[4 * (v180 ^ 0xD3)] + (v180 ^ 0x2A51D181);
  unsigned int v186 = ((v185 + 445424904) & 0x2000000 ^ 0xE75937F3) + 2 * ((v185 + 445424904) & 0x2000000);
  int v187 = *(_DWORD *)&v86[4 * (HIBYTE(v179) ^ 0xA7)];
  BOOL v120 = ((v186 + 413583373) & (v187 ^ 0x10000000)) == 0;
  unsigned int v188 = ((2 * (BYTE1(v174) ^ 0x56EF6D0B)) & 0x89160882) - (BYTE1(v174) ^ 0x56EF6D0B) + 845478334;
  unsigned int v189 = *(_DWORD *)&v84[4 * (BYTE1(v174) ^ 0xD7)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v165) ^ 0x9C)] ^ (*(_DWORD *)&v81[4 * (BYTE2(v167) ^ 1)]
                                                                                                 + (BYTE2(v167) ^ 0x2A51D153)
                                                                                                 - 158554872) ^ ((v188 ^ 0xD4756340) + (v188 ^ 0x648B9474) + 195202823 - ((2 * ((v188 ^ 0xD4756340) + (v188 ^ 0x648B9474))) & 0x17451E0E)) ^ ((HIBYTE(v165) ^ 3) + 1688092338 + ((2 * (HIBYTE(v165) ^ 3) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v91[4 * (v179 ^ 0xDE)] ^ ((v179 ^ 0xE9) - 524725518 + ((2 * (v179 ^ 0xE9) + 98) & 0x80 ^ 0xFE7CF7FF));
  unsigned int v190 = (-1256351757 - (BYTE1(v179) ^ 0xDE) + ((2 * (BYTE1(v179) ^ 0xDE)) & 0x18)) ^ 0xB52DB7F3;
  unsigned int v191 = ((((2 * v190) & 0x204432) - v190 - 169042458) ^ 0x45224A34)
       + ((((2 * v190) & 0x204432) - v190 - 169042458) ^ 0xF5DCBD00);
  int v192 = (v191 + 195202823 - ((2 * v191) & 0x17451E0E)) ^ *(_DWORD *)&v84[4 * (BYTE1(v179) ^ 0x2E)];
  int v193 = ((2 * ((HIBYTE(v174) ^ 0x98) + 1419343037)) & 0x2832E80E) + (((HIBYTE(v174) ^ 0x98) + 1419343037) ^ 0x377DF607);
  unsigned int v194 = ((v165 ^ 0x6E) - 524725518 + ((2 * (v165 ^ 0x6E) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ *(_DWORD *)&v91[4 * (v165 ^ 0x59)] ^ v183 ^ (v192 - 748920310 - ((2 * v192) & 0xA6B8C414));
  int v195 = *(_DWORD *)&v86[4 * (HIBYTE(v174) ^ 7)];
  unsigned int v196 = (v193 + 1216481785) & 0x409900E9 ^ v195 & 0x6BFB88E9 | (v193 + 142739961) & 0x14007516 ^ v195 & 0x94047716;
  unsigned int v197 = ((2 * v196) & 0x9F5B2FBE ^ 0x903A8) + (v196 ^ 0x5FA95E2B);
  int v198 = *(_DWORD *)&v81[4 * (BYTE2(v179) ^ 0x99)] + (BYTE2(v179) ^ 0x2A51D1CB);
  int v199 = v198 + v197 - 2 * ((v197 + 810706977) & (v198 + 1988928776)) - 1495331543;
  int v200 = ((BYTE1(v167) ^ 0x1E) - ((2 * (BYTE1(v167) ^ 0x1E)) & 0x2C) + 576172822) & 0x20051FFF;
  unsigned int v201 = ((BYTE1(v165) ^ 0xC9) + (BYTE1(v165) ^ 0xB0FEF7FD)) ^ *(_DWORD *)&v84[4 * (BYTE1(v165) ^ 0xDF)] ^ (v199 + 195202823 - ((2 * v199) & 0x17451E0E));
  unsigned int v202 = ((v167 ^ 0x95) - 656292687) ^ *(_DWORD *)&v91[4 * (v167 ^ 0xA2)] ^ (v201 + 131567168 - ((2 * v201) & 0xFAF1C80));
  int v203 = (v200 ^ 0x20051314)
       + 2
       * ((v184 ^ ((BYTE1(v167) ^ 0x1C) + 1814973849 - ((2 * (BYTE1(v167) ^ 0x1C)) & 0x33333333)))
        - (v184 ^ 0x6C2E4D99 | BYTE1(v167) ^ 0x1C));
  unsigned int v204 = (v200 ^ 0x90FBE420) + (v200 ^ 0x20051314);
  unsigned int v205 = v186 + 1006033902;
  unsigned int v206 = 178867156 - v186;
  if (v120) {
    unsigned int v206 = v205;
  }
  unsigned int v207 = (((HIBYTE(v179) ^ 0x38) + 1688092338 + ((2 * (HIBYTE(v179) ^ 0x38) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ v187)
       - 592450529
       + v206;
  int v208 = v204 + 195202823 - ((2 * v204) & 0x3451E0E);
  int v209 = *(_DWORD *)&v91[4 * (v174 ^ 8)];
  unsigned int v210 = (v174 ^ 0xFEA9FD3F) - 633878607;
  unsigned int v211 = (v210 + (v209 ^ 0xF82871BF ^ v210) + 1) ^ ((v209 ^ 0xF82871BF) + 1);
  unsigned int v212 = v208 ^ *(_DWORD *)&v84[4 * (v203 + 22)] ^ (v185 - 158554872) & 0xFDFFFFFF ^ (((v211
                                                                                      + 131567168
                                                                                      - ((2 * v211) & 0xFAF1C80)) ^ v209)
                                                                                    + v210) ^ v207;
  unsigned int v213 = (((2 * (BYTE2(v194) ^ 0x4E)) | 0x3FA4820E) - (BYTE2(v194) ^ 0x4E) - 533872903) ^ 0xBBD2C583;
  int v214 = ((BYTE1(v202) ^ 0x42E946C5) + ((v202 >> 8) & 0x29 ^ 0x1108028) - ((BYTE1(v202) ^ 0x42E946C5) & 0x400629)) & 0x1287FFF;
  unsigned int v215 = *(_DWORD *)&v84[4 * (BYTE1(v202) ^ 5)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v189) ^ 0x69)] ^ ((HIBYTE(v189) ^ 0xF6)
                                                                                              + 1688092338
                                                                                              + ((2
                                                                                                * (HIBYTE(v189) ^ 0xF6)
                                                                                                + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ *(_DWORD *)&v91[4 * (v212 ^ 0x27)] ^ ((v212 ^ 0x10) - 524725518 + ((2 * (v212 ^ 0x10) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v214 ^ 0xB1D6B7CB) + (v214 ^ 0x12840FF) + 195202824 + ((2 * ((v214 ^ 0xB1D6B7CB) + (v214 ^ 0x12840FF))) & 0x7411E0E ^ 0xFFFBFFFF)) ^ (*(_DWORD *)&v81[4 * (BYTE2(v194) ^ 0xA3)] - 158554872 + ((v213 - ((2 * v213) & 0x7ACB8ADE) - 1117403793) ^ 0xE69ABE81) + ((((v213 - ((2 * v213) & 0x7ACB8ADE) - 1117403793) ^ 0x33349054) + ((v213 - ((2 * v213) & 0x7ACB8ADE) - 1117403793) ^ 0x1965417E) + 1) ^ 1) + 1);
  int v216 = ((2 * (BYTE1(v212) ^ 0x51C5162)) & 0x820A29C) - (BYTE1(v212) ^ 0x51C5162) - 777255247;
  uint64_t v217 = *(_DWORD *)&v84[4 * (BYTE1(v212) ^ 0x47)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v194) ^ 0x69)] ^ *(_DWORD *)&v91[4 * (v189 ^ 0x78)] ^ ((v189 ^ 0x4F) - 524725518 + ((2 * (v189 ^ 0x4F) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ (*(_DWORD *)&v81[4 * (BYTE2(v202) ^ 0xE1)] + (BYTE2(v202) ^ 0x2A51D1B3) - 158554872) ^ ((HIBYTE(v194) ^ 0xF6) + 1688092338 + ((2 * (HIBYTE(v194) ^ 0xF6) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v216 ^ 0xD4B05782) + (v216 ^ 0x644EA0B6) + 195202823 - ((2 * ((v216 ^ 0xD4B05782) + (v216 ^ 0x644EA0B6))) & 0x13451E0E));
  int v218 = *(_DWORD *)&v81[4 * (BYTE2(v212) ^ 0x60)] + (BYTE2(v212) ^ 0x2A51D132) - 158554872;
  unsigned int v219 = ((2 * (BYTE1(v189) ^ 0xA5)) | 0xF95C8A2A) - (BYTE1(v189) ^ 0xA5) - 2091795733;
  int v220 = (v219 & 0x5C8E0027 ^ 0x44043021) + (v219 & 0x202047D8 ^ 0x20214511) - 1;
  v212 >>= 24;
  unsigned int v221 = ((2 * ((v212 ^ 0x3B) + 1419343037)) & 0xA932EADE) + (((v212 ^ 0x3B) + 1419343037) ^ 0x5FFFFF6F);
  unsigned int v222 = *(_DWORD *)&v84[4 * (BYTE1(v189) ^ 0xD8)] ^ *(_DWORD *)&v91[4 * (v194 ^ 0xB4)] ^ *(_DWORD *)&v86[4 * (HIBYTE(v202) ^ 0x87)] ^ ((HIBYTE(v202) ^ 0x18) + 1688092338 + ((2 * (HIBYTE(v202) ^ 0x18) + 378) & 0x3E8 ^ 0xDFFF7FFF)) ^ ((v220 ^ 0xA875C77B) + (v220 ^ 0x188B304F) + 195202823 - ((2 * ((v220 ^ 0xA875C77B) + (v220 ^ 0x188B304F))) & 0x17451E0E)) ^ ((v194 ^ 0x83) - 524725518 + ((2 * (v194 ^ 0x83) + 98) & 0x80 ^ 0xFE7CF7FF));
  int v223 = BYTE2(v189);
  int v224 = *(_DWORD *)&v81[4 * (v223 ^ 0x97)];
  unsigned int v225 = v222 ^ v218;
  int v226 = *(_DWORD *)&v86[4 * (v212 ^ 0xA4)] ^ 0x1004C9F4;
  int v227 = ((2 * (BYTE1(v194) ^ 0x1244CAD9)) & 0x2480119A) - (BYTE1(v194) ^ 0x1244CAD9) + 1637860146;
  unsigned int v228 = *(_DWORD *)&v91[4 * (v202 ^ 0xD2)] ^ *(_DWORD *)&v84[4 * (BYTE1(v194) ^ 0xCF)] ^ ((v223 ^ 0x2A51D1C5) - 158554872 + v224) ^ ((v202 ^ 0xE5) - 524725518 + ((2 * (v202 ^ 0xE5) + 98) & 0x80 ^ 0xFE7CF7FF)) ^ ((v227 ^ 0xC325FE06) + (v227 ^ 0x73DB0932) + 195202823 - ((2 * ((v227 ^ 0xC325FE06) + (v227 ^ 0x73DB0932))) & 0x17451E0E)) ^ (v226 + v221 - 2 * ((v221 + 536871057) & v226) - 1610612591);
  int v229 = *(_DWORD *)(v28 - 120);
  unsigned int v230 = (char *)*(&off_26DE9F480 + v229 - 804) - 12;
  unsigned int v231 = *(_DWORD *)&v230[4 * (HIBYTE(v215) ^ 0xB0)];
  uint64_t v232 = (uint64_t)*(&off_26DE9F480 + (int)v261);
  int v233 = *(_DWORD *)(v232 + 4 * (BYTE1(v225) ^ 0xEBu));
  HIDWORD(v234) = v233 ^ 0x4D;
  LODWORD(v234) = v233 ^ 0x341E7B00;
  unsigned int v235 = (char *)*(&off_26DE9F480 + SHIDWORD(v261)) - 4;
  unsigned int v236 = (char *)*(&off_26DE9F480 + v229 - 845) - 4;
  int v237 = *(_DWORD *)&v230[4 * (BYTE3(v217) ^ 0x30)];
  unsigned int v238 = *(_DWORD *)&v235[4 * (BYTE2(v217) ^ 0xC3)] ^ (v234 >> 8) ^ v231 ^ (*(_DWORD *)&v236[4
                                                                                           * (v228 ^ 0xEB)]
                                                                          + 995471311) ^ (((v217 >> 15) & 0x1FE ^ 0x24)
                                                                                        + 1334935727
                                                                                        + ((2
                                                                                          * ((v217 >> 15) & 0x1FE ^ 0x24)
                                                                                          + 140) & 0xD0 ^ 0x3FFCDFFF)) ^ (((v231 >> 3) & 0x35901C6 ^ 0x3480046) - ((2 * ((v231 >> 3) & 0x35901C6 ^ 0x3480046)) & 0x4820104) + 1053271690);
  int v239 = *(_DWORD *)(v232 + 4 * (BYTE1(v228) ^ 0xB1u));
  HIDWORD(v234) = v239 ^ 0x4D;
  LODWORD(v234) = v239 ^ 0x341E7B00;
  unsigned int v240 = *(_DWORD *)&v235[4 * (BYTE2(v225) ^ 0x17)] ^ v237 ^ ((v237 & 0x1AC80E33 ^ 0x1A400232u) >> (BYTE4(v269) & 3) >> (BYTE4(v269) & 3 ^ 3)) ^ (v234 >> 8) ^ (*(_DWORD *)&v236[4 * (v215 ^ 0xC4)] + 995471311) ^ (((v225 >> 15) & 0x1FE ^ 0x18C) + 1334935727 + ((2 * ((v225 >> 15) & 0x1FE ^ 0x18C) + 140) & 0xD0 ^ 0x3FFCDFFF));
  int v241 = *(_DWORD *)(v232 + 4 * (BYTE1(v215) ^ 0x21u));
  HIDWORD(v234) = v241 ^ 0x4D;
  LODWORD(v234) = v241 ^ 0x341E7B00;
  unsigned int v242 = *(_DWORD *)&v230[4 * (HIBYTE(v225) ^ 0x5E)];
  unsigned int v243 = (v242 >> 3) & 0x35901C6 ^ v242 ^ *(_DWORD *)&v235[4 * (BYTE2(v228) ^ 0x42)] ^ (*(_DWORD *)&v236[4 * (v217 ^ 0x1E)]
                                                                                      + 995471311) ^ (((v228 >> 15) & 0x1FE ^ 0x126) + 1334935727 + ((2 * ((v228 >> 15) & 0x1FE ^ 0x126) + 140) & 0xD0 ^ 0x3FFCDFFF)) ^ (v234 >> 8);
  unsigned int v244 = *(_DWORD *)&v230[4 * (HIBYTE(v228) ^ 0x13)];
  int v245 = *(_DWORD *)(v232 + 4 * (BYTE1(v217) ^ 0xF3u));
  HIDWORD(v234) = v245 ^ 0x4D;
  LODWORD(v234) = v245 ^ 0x341E7B00;
  unsigned int v246 = *(_DWORD *)&v235[4 * (BYTE2(v215) ^ 0x55)] ^ v244 ^ (v234 >> 8) ^ (*(_DWORD *)&v236[4
                                                                                           * (v225 ^ 0xA2)]
                                                                          + 995471311) ^ (((v215 >> 15) & 0x1FE ^ 0x108)
                                                                                        + 1334935727
                                                                                        + ((2
                                                                                          * ((v215 >> 15) & 0x1FE ^ 0x108)
                                                                                          + 140) & 0xD0 ^ 0x3FFCDFFF)) ^ (((v244 >> 3) & 0x35901C6 ^ 0x3480046) - ((2 * ((v244 >> 3) & 0x35901C6 ^ 0x3480046)) & 0x920180) + 1557076208);
  uint64_t v247 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(v260));
  v259[v271] = (*(unsigned char *)(v247 + (BYTE2(v238) ^ 0x89)) + (BYTE2(v238) ^ 0x9D) - 46) ^ 0x1E;
  uint64_t v248 = (uint64_t)*(&off_26DE9F480 + (int)v260);
  v259[6] = (*(unsigned char *)(v248 + (BYTE1(v240) ^ 0x39)) + (BYTE1(v240) ^ 0x69) - 110) ^ 0x79;
  uint64_t v249 = (uint64_t)*(&off_26DE9F480 + SHIDWORD(a14));
  v259[8] = (*(unsigned char *)(v249 + (HIBYTE(v243) ^ 0xFDLL)) + (HIBYTE(v243) ^ 0x19) + (HIBYTE(v243) ^ 0x4E) - 43) ^ 0x49;
  v259[13] = (*(unsigned char *)(v247 + (BYTE2(v246) ^ 0xC3)) + (BYTE2(v246) ^ 0x57) + 82) ^ 0x50;
  v259[4] = ((HIBYTE(v240) ^ 0xF6) + (HIBYTE(v240) ^ 0xA1) + *(unsigned char *)(v249 + (HIBYTE(v240) ^ 0x12)) - 43) ^ 0xF6;
  unsigned int v250 = (char *)*(&off_26DE9F480 + v229 - 1012) - 4;
  LODWORD(v236) = v250[v246 ^ 0x8BLL];
  LODWORD(v236) = v236 - ((2 * v236 - 70) & 0xFFFFFFA4);
  LOBYTE(v242) = (_BYTE)v236 - 81;
  int v251 = ((_BYTE)v236 - 81) >> 3;
  LODWORD(v236) = (((80 - v236) >> 7) & 1 | 0x1A) ^ v251;
  v259[*(void *)(v28 - 192)] = v242 ^ 0x4F ^ ((_BYTE)v236 + ~(2 * (v236 & 0x16 ^ v251 & 4)) - 45);
  v259[14] = ((BYTE1(v246) ^ 8) + *(unsigned char *)(v248 + (BYTE1(v246) ^ 0x58)) - 110) ^ 0x42;
  LOBYTE(v236) = v250[v243 ^ 0xBLL] - ((2 * v250[v243 ^ 0xBLL] + 58) & 0x40) - 3;
  v259[*(void *)(v28 - 168)] = v236 ^ (v236 >> 3) ^ (v236 >> 7) ^ 0xF;
  v259[2] = ((BYTE1(v238) ^ 0xE4) + *(unsigned char *)(v248 + (BYTE1(v238) ^ 0xB4)) - 110) ^ 0x16;
  LOBYTE(v236) = v250[v238 ^ 0xAFLL] - ((2 * v250[v238 ^ 0xAFLL] + 58) & 0x5A);
  LOBYTE(v242) = (_BYTE)v236 - 118;
  LOBYTE(v236) = (((_BYTE)v236 - 118) >> 3) ^ (((117 - (_BYTE)v236) & 0x80) >> 7) ^ 0x15;
  v259[*(void *)(v28 - 176)] = v242 ^ 0x93 ^ ((_BYTE)v236
                                              - 2 * (v236 & 0xF ^ (v242 >> 3) & 2)
                                              - 83);
  uint64_t v252 = HIBYTE(v246);
  v259[*(void *)(v28 - 136)] = ((BYTE2(v243) ^ 0x68) + *(unsigned char *)(v247 + (BYTE2(v243) ^ 0x7CLL)) - 46) ^ 0x4A;
  uint64_t v253 = v252 ^ 0x29;
  v259[*(void *)(v28 - 152)] = ((HIBYTE(v246) ^ 0x7E) + (HIBYTE(v246) ^ 0x29) + *(unsigned char *)(v249 + (v252 ^ 0xCD)) - 43) ^ 0x8D;
  uint64_t v254 = HIBYTE(v238);
  LOBYTE(v252) = *(unsigned char *)(v249 + (v254 ^ 0xBF));
  uint64_t v255 = v254 ^ 0xC;
  uint64_t v256 = *(void *)(v28 - 184);
  v259[v256] = ((HIBYTE(v238) ^ 0xC) + (HIBYTE(v238) ^ 0x5B) + v252 - 43) ^ 0xF7;
  LODWORD(v254) = v250[v240 ^ 0x54];
  LODWORD(v254) = v254 - ((2 * v254 - 70) & 0xFFFFFFF0);
  v259[*(void *)(v28 - 128)] = (v254 - 43) ^ (((((42 - v254) & 0x80) != 0) ^ ((42 - v254) >> 3))
                                              + (~((42 - v254) >> 2) | 0xCF)
                                              - 7) ^ 0xDD;
  v259[*(void *)(v28 - 144)] = ((BYTE2(v240) ^ 0x66) + *(unsigned char *)(v247 + (BYTE2(v240) ^ 0x72)) - 46) ^ 0x42;
  v259[*(void *)(v28 - 160)] = ((BYTE1(v243) ^ 0x17) + *(unsigned char *)(v248 + (BYTE1(v243) ^ 0x47)) - 110) ^ 0xED;
  uint64_t v257 = v256 + 820484069 - ((2 * v256 + 32) & 0x61CF2FCAu) + 16;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a24 + 8 * ((2602 * ((v257 ^ 0x30E797E5) < HIDWORD(v263))) ^ (v229 - 815))))(0xFFFFFFFFLL, ~((42 - v254) >> 2) | 0xFFFFFFCF, v255, v253, v257, v259, 66, v217, a9, a10, a11, a12, v259, a14, v260, v261, v262, v263, v264,
           v265,
           v266,
           v267,
           v268,
           a24,
           a25,
           v269);
}

uint64_t sub_22B382534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(void))
{
  *(void *)(a7 + 328) = v40;
  *(void *)(a7 + 392) = STACK[0x268];
  return a40();
}

uint64_t sub_22B38254C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  BOOL v29 = v26 != ((v23 + v27) ^ 0x1C230905) || a23 != v24 + ((v23 + 194) | 0x101) + 1825;
  return (*(uint64_t (**)(void))(v25 + 8 * ((3198 * v29) ^ v23)))();
}

uint64_t sub_22B3825A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v27 - 112) = v24
                         + ((-1782506233 - ((v27 - 128) | 0x95C11D07) + ((v27 - 128) | 0x6A3EE2F8)) ^ 0x8029D50C) * v22
                         - 1641;
  *(void *)(v27 - 128) = v25;
  *(void *)(v27 - 120) = a22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 1124)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((28 * (((v26 == 895087153) ^ (v24 - 12)) & 1)) ^ v24)))(v28);
}

uint64_t sub_22B382664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 - 1299) ^ 0x9B3 ^ ((v7 - 1755) | 0x252)) * (v6 == a6)) ^ v7)))();
}

void sub_22B38269C()
{
}

uint64_t sub_22B3826A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((470
                                * (((*(void *)(a7 + 384) == 0x24B64731C5A68327) ^ (v7 - 62)) & 1)) ^ (v7 - 2393))))();
}

uint64_t sub_22B3826FC()
{
  BOOL v4 = v1 - 723573186 < (int)(v3 + 789857353);
  if (v3 > 0x50EBBBB6 != v1 - 723573186 < (int)((v0 + 504) ^ 0xAF144750)) {
    BOOL v4 = v3 > 0x50EBBBB6;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (29 * (v0 ^ 0x131) - 368)) ^ v0)))();
}

void sub_22B382780()
{
}

uint64_t sub_22B382798@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v4 + 8 != v2 + 32) * a1) ^ v3)))();
}

void sub_22B382800()
{
}

uint64_t sub_22B38280C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v0 - 539890619) & 0xFFFF8F52 ^ (v2 - 554)) * (*(unsigned char *)(v1 + 5) == 1)) ^ v0)))();
}

void sub_22B382850()
{
}

uint64_t sub_22B382860(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (a2 + v8 + a1);
  unint64_t v12 = *(void *)(v10 - 136);
  unint64_t v13 = v11 + v12 + 1;
  uint64_t v14 = (a2 + v8) & 0xF;
  uint64_t v15 = v14 - v11;
  unint64_t v16 = v6 + v15;
  uint64_t v17 = v14 + 1;
  unint64_t v18 = v6 + v14 + 1;
  unint64_t v19 = v15 + v7 + 2;
  unint64_t v20 = v14 + v7 + 3;
  unint64_t v21 = v5 + v15;
  unint64_t v22 = v5 + v17;
  BOOL v24 = v18 > v12 && v16 < v13;
  int v26 = v20 > v12 && v19 < v13 || v24;
  if (v22 > v12 && v21 < v13) {
    int v26 = 1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a5 ^ 0x2F7) - 1971) * v26) ^ a5)))();
}

uint64_t sub_22B3828EC()
{
  uint64_t v4 = v0;
  unint64_t v5 = ((v1 + 570637012) & 0xDDFCCBF6 ^ (unint64_t)(v2 + 2419)) + v0;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  BOOL v6 = v5 - v4 + 1189947903 < ((v1 - 178) ^ 0x1F1uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v6) | (16 * v6)) ^ v1)))();
}

uint64_t sub_22B38297C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)(((STACK[0x278] - 2652) * (v1 <= v2 + 623)) ^ (STACK[0x278] - 362))))();
}

void sub_22B3829B0()
{
  *(_DWORD *)(v0 + 16) = 604092306;
}

uint64_t sub_22B3829BC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v11 = (a4 + a3 + a6);
  unint64_t v12 = v11 + v9 + 1;
  uint64_t v13 = ((_BYTE)a4 + (_BYTE)a3 + (_BYTE)a6) & 0xF;
  uint64_t v14 = v13 - v11;
  unint64_t v15 = v6 + v14;
  unint64_t v16 = v13 + v6 + 1;
  unint64_t v17 = v14 + ((a5 - 2687) | 0xC0Au) + v8 - 3656;
  unint64_t v18 = v13 + v8 + 3;
  unint64_t v19 = v14 + ((a5 - 957) | 0x290u) + v7 - 2961;
  unint64_t v20 = v13 + v7 + 2;
  BOOL v22 = v16 > v9 && v15 < v12;
  if (v18 > v9 && v17 < v12) {
    BOOL v22 = 1;
  }
  int v25 = v20 > v9 && v19 < v12 || v22;
  return (*(uint64_t (**)(void))(v10 + 8 * ((108 * (v25 ^ 1)) ^ a5)))();
}

uint64_t sub_22B382A64@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (v6 + a2 + 1666)) = *(unsigned char *)(v5 + (v6 + a2 + 1666));
  return (*(uint64_t (**)(void))(v7 + 8 * ((11 * (a2 - 1 == v4)) ^ (a4 + a3 + 2162))))();
}

uint64_t sub_22B382AA8(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a4 ^ (32 * (a2 + v4 + ((a4 - 1079373840) & 0x4055EBFF ^ 0x84810376) > 7)))))();
}

uint64_t sub_22B382B28@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((16 * (a2 + 1 != a1)) | (32 * (a2 + 1 != a1))) ^ v3)))();
}

void sub_22B382B34(int a1@<W2>, uint64_t a2@<X8>)
{
  int v7 = ((2 * ((v6 - 144) & 0x195923E0) - (v6 - 144) + 1722211359) ^ 0x8CB1EBEB) * a1;
  *(_DWORD *)(v6 - 120) = v7 + v2 + 2188;
  *(void *)(v6 - 136) = v5;
  *(void *)(v6 - 128) = a2;
  *(_DWORD *)(v6 - 144) = (v3 - 985387839 + ((v2 - 1095) | 0x71)) ^ v7;
  (*(void (**)(uint64_t))(v4 + 8 * (v2 ^ 0x1573)))(v6 - 144);
  JUMPOUT(0x22B37B3DCLL);
}

uint64_t sub_22B382BB8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1132 * (a1 + 1 == v2 + 80)) ^ a2)))();
}

uint64_t sub_22B382C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  *(_DWORD *)(v53 - 144) = (v51 + 1935319227) ^ (1328090399
                                               * ((-1194132434 - ((v53 - 152) | 0xB8D2FC2E) + ((v53 - 152) | 0x472D03D1)) ^ 0xB8FE67EB));
  v52[393] = a29;
  (*(void (**)(uint64_t))(a6 + 8 * (v51 ^ 0xB5D)))(v53 - 152);
  int v54 = 1503746353 * ((v53 + 1043697612 - 2 * ((v53 - 152) & 0x3E359064)) ^ 0x185452D2);
  v52[394] = &STACK[0xD20];
  v52[395] = a29;
  *(_DWORD *)(v53 - 152) = v54 + 1331781508;
  *(_DWORD *)(v53 - 128) = v51 + 500 - v54;
  (*(void (**)(uint64_t))(a45 + 8 * (v51 ^ 0xB44)))(v53 - 152);
  int v55 = 1503746353 * ((v53 - 152) ^ 0x2661C2B6);
  v52[394] = v53 - 256;
  v52[395] = a29;
  *(_DWORD *)(v53 - 152) = v55 + 1331781508;
  *(_DWORD *)(v53 - 128) = v51 + 500 - v55;
  (*(void (**)(uint64_t))(a45 + 8 * (v51 + 2876)))(v53 - 152);
  *(_DWORD *)(v53 - 136) = (v51 - 799) ^ (731811679 * ((v53 - 763982437 - 2 * ((v53 - 152) & 0xD2768E33)) ^ 0x9B802877));
  v52[394] = v53 - 256;
  v52[393] = a29;
  (*(void (**)(uint64_t))(a45 + 8 * (v51 + 2886)))(v53 - 152);
  (*(void (**)(uint64_t))(a45 + 8 * (v51 ^ 0xB64)))(a28);
  uint64_t v56 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(a45 + 8 * (v51 ^ 0xB64)))(a27, &a51 + a47 - 200, 16);
  if (a31) {
    BOOL v57 = a30 == 0;
  }
  else {
    BOOL v57 = 1;
  }
  char v58 = v57;
  return (*(uint64_t (**)(uint64_t))(a45
                                            + 8
                                            * ((55
                                              * (((v58 ^ (v51 + 1)) ^ (29 * (v51 ^ 0xAB) + 1)) & 1)) ^ v51)))(v56);
}

void nXJ7Amk1zyK93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B382F4C(uint64_t result)
{
  *(_DWORD *)(result + 16) = 604091431;
  return result;
}

uint64_t sub_22B382F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v23 = (v9 - 761) | 0x101;
  uint64_t v24 = 4 * (v16 + v15);
  int v25 = v10 + v21 + (*(_DWORD *)(*(void *)(a9 - 0x281D12643933BF1BLL) + v24 - 0x54EEBA8C0E75CADCLL) ^ v18);
  *(_DWORD *)(*(void *)(v22 - 0x281D12643933BF1BLL) + v24 - 0x54EEBA8C0E75CADCLL) = v25
                                                                                    + v18
                                                                                    - (((16 * v23) ^ 0x13C0 ^ (v19 - 208)) & (2 * v25));
  int v26 = v16 + 1 + v11;
  int v27 = (v20 > v14) ^ (v26 < v12);
  BOOL v28 = v26 < v13;
  if (v27) {
    BOOL v28 = v20 > v14;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((3235 * v28) ^ v23)))();
}

void sub_22B383058()
{
}

uint64_t sub_22B3830D4(char a1, char a2, int a3, int a4, int8x16_t a5, int8x8_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v37 = a4 - 8;
  uint64_t v38 = (a3 + v37 + 8);
  v40.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v37 + 8) & 0xF;
  v40.val[0].i64[1] = (v35 + (_BYTE)v37 + 8) & 0xF;
  v40.val[1].i64[0] = (v34 + (_BYTE)v37 + 8) & 0xF;
  v40.val[1].i64[1] = (v31 + (_BYTE)v37 + 8) & 0xF;
  v40.val[2].i64[0] = (a2 + (_BYTE)v37 + 8) & 0xF;
  v40.val[2].i64[1] = (v31 + (_BYTE)v37 + 8 + ((a9 + 42) ^ 0xFD)) & 0xF;
  v40.val[3].i64[0] = (a1 + (_BYTE)v37 + 8) & 0xF;
  v40.val[3].i64[1] = (v27 + (_BYTE)v37 + 8) & 0xF;
  *(int8x8_t *)(v32 + v38) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v30 + (v38 & 0xF) - 7), *(int8x8_t *)(v32 + v38)), veor_s8(*(int8x8_t *)((v38 & 0xF) + v29 - 4), *(int8x8_t *)(v28 + (v38 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v40, a5), a6)));
  return (*(uint64_t (**)(void))(a27 + 8 * (((v33 == v37) * v36) ^ a9)))();
}

uint64_t sub_22B3830DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 - 1;
  *(unsigned char *)(v3 + v5) = ((v1 + 23) ^ 0xBA) * (v1 + 40);
  return (*(uint64_t (**)(void))(v4 + 8 * ((14 * (v5 == 0)) ^ v2)))();
}

uint64_t sub_22B383120()
{
  return sub_22B38314C((__n128)0);
}

uint64_t sub_22B38314C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v8 = (__n128 *)(a1 + v6);
  *uint64_t v8 = a2;
  v8[1] = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + v3 - 3506 == v2) * v5) ^ (v4 + 2342))))();
}

uint64_t sub_22B38317C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,void *a39,void *a40,void *a41,void *a42,void *a43,void *a44,void *a45,void *a46,void *a47,void *a48,void *a49,void *a50,void *a51,void *a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t (*a61)(void))
{
  char v66 = *(unsigned char *)(*a53 + (*(unsigned __int8 *)(a2 - 16) ^ a6));
  *(unsigned char *)(a2 - 16) = v66 - ((2 * v66) & 0x55) + 42;
  *(unsigned char *)(a2 - 12) = *(unsigned char *)(*a52 + v62) - ((2 * *(unsigned char *)(*a52 + v62)) & 0x55) + 42;
  *(unsigned char *)(a2 - 8) = *(unsigned char *)(*a51 + v64) + (~(2 * *(unsigned char *)(*a51 + v64)) | 0xAB) + 43;
  *(unsigned char *)(a2 - 4) = *(unsigned char *)(*a50 + v61) - ((2 * *(unsigned char *)(*a50 + v61)) & 0x55) + 42;
  char v67 = *(unsigned char *)(*a49 + (a5 ^ a6));
  *(unsigned char *)(a2 - 3) = v67 - ((2 * v67) & 0x55) + 42;
  char v68 = *(unsigned char *)(*a48 + (*(unsigned __int8 *)(a2 - 11) ^ a6));
  *(unsigned char *)(a2 - 7) = v68 - ((2 * v68) & 0x55) + 42;
  char v69 = *(unsigned char *)(*a47 + (*(unsigned __int8 *)(a2 - 15) ^ a6));
  *(unsigned char *)(a2 - 11) = v69 - ((2 * v69) & 0x55) + 42;
  char v70 = *(unsigned char *)(*a46 + (v65 ^ a6));
  *(unsigned char *)(a2 - 15) = v70 + (~(2 * v70) | 0xAB) + 43;
  uint64_t v71 = *(unsigned __int8 *)(a2 - 14);
  char v72 = *(unsigned char *)(*a45 + (v63 ^ a6));
  *(unsigned char *)(a2 - 14) = v72 - ((2 * v72) & 0x55) + 42;
  *(unsigned char *)(a2 - 6) = *(unsigned char *)(*a44 + (v71 ^ a6)) - ((2 * *(unsigned char *)(*a44 + (v71 ^ a6))) & 0x55) + 42;
  uint64_t v73 = *(unsigned __int8 *)(a2 - 10);
  char v74 = *(unsigned char *)(*a43 + (*(unsigned __int8 *)(a2 - 2) ^ a6));
  *(unsigned char *)(a2 - 10) = v74 - ((2 * v74) & 0x55) + 42;
  *(unsigned char *)(a2 - 2) = *(unsigned char *)(*a42 + (v73 ^ a6)) - ((2 * *(unsigned char *)(*a42 + (v73 ^ a6))) & 0x55) + 42;
  LOBYTE(v73) = *(unsigned char *)(*a41 + (*(unsigned __int8 *)(a2 - 9) ^ a6));
  uint64_t v75 = *(unsigned __int8 *)(a2 - 13);
  *(unsigned char *)(a2 - 13) = v73 - ((2 * v73) & 0x55) + 42;
  LOBYTE(v73) = *(unsigned char *)(*a40 + (*(unsigned __int8 *)(a2 - 5) ^ a6));
  *(unsigned char *)(a2 - 9) = v73 - ((2 * v73) & 0x55) + 42;
  LOBYTE(v73) = *(unsigned char *)(*a39 + (*(unsigned __int8 *)(a2 - 1) ^ a6));
  *(unsigned char *)(a2 - 5) = v73 - ((2 * v73) & 0x55) + 42;
  *(unsigned char *)(a2 - 1) = *(unsigned char *)(*a38 + (v75 ^ a6)) - ((2 * *(unsigned char *)(*a38 + (v75 ^ a6))) & 0x55) + 42;
  return a61();
}

uint64_t sub_22B3833F8()
{
  *(void *)(v5 - 120) = v4;
  *(_DWORD *)(v5 - 112) = v0
                        + ((604366068 - ((v5 - 128) | 0x2405E4F4) + ((v5 - 128) | 0xDBFA1B0B)) ^ 0x31ED2CFF) * v1
                        + 810;
  *(void *)(v5 - 104) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x86F)))(v5 - 128);
  BOOL v7 = *(_DWORD *)(v5 - 128) > ((v0 - 650819884) & 0x26CAB7FFu) + 1678217889;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v7 | (2 * v7)) ^ v0)))(v6);
}

uint64_t sub_22B3834B8@<X0>(unsigned int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((53 * (a2 + 1 != v3 + 64)) ^ a1)))();
}

uint64_t sub_22B383574@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v1 + 814) ^ (v1 - 249)) * ((a1 + v2 + 3503) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_22B3835B0(double a1)
{
  *int v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

void sub_22B3835D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8 * (v2 ^ 0xB79)))();
  JUMPOUT(0x22B329FE4);
}

uint64_t sub_22B3835F8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((3 * (((v2 - 1403) | 0x407) ^ 0x4AE) + 2773) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B383634()
{
  uint64_t v3 = *(_DWORD *)(STACK[0x260] + 196) & 0x3F;
  *(unsigned char *)(v1 + (v3 ^ 0x19)) = -86;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1394 * ((v3 ^ 0x19) > v0 + 3115 + v0 + 3067 - 6207)) ^ v0)))();
}

uint64_t sub_22B383694(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1158 * (v4 + 1 == v6 + 4)) ^ a3)))(v3);
}

uint64_t sub_22B383764@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(v72 - 140) = v70;
  uint64_t v74 = *(void *)(v72 - 136) - 7;
  *(_DWORD *)(v72 - 144) = v70 & 0xFFFFFFF8;
  int v75 = -8 - a3;
  int v76 = a1 + v73;
  char v77 = v71 + a1 + v73;
  uint64_t v78 = (v76 + a2 + v75 + 8);
  v80.val[0].i64[0] = ((_BYTE)v76 + (_BYTE)a2 + (_BYTE)v75 + 8) & 0xF;
  v80.val[0].i64[1] = (v77 + 1 + (_BYTE)v75 + 8) & 0xF;
  v80.val[1].i64[0] = (v69 + (_BYTE)v75 + 8) & 0xF;
  v80.val[1].i64[1] = (v77 + 15 + (_BYTE)v75 + 8) & 0xF;
  v80.val[2].i64[0] = (v77 + 14 + (_BYTE)v75 + 8) & 0xF;
  v80.val[2].i64[1] = (v77 + 13 + (_BYTE)v75 + 8) & 0xF;
  v80.val[3].i64[0] = (v69 + (_BYTE)v75 + 8 + ((13 * (a4 ^ 0x9A)) ^ 3)) & 0xF;
  v80.val[3].i64[1] = (v77 + 11 + (_BYTE)v75 + 8) & 0xF;
  *(int8x8_t *)(v74 + v78) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v68 + (v78 & 0xF) - 7), *(int8x8_t *)(v65 - 7 + v78)), veor_s8(*(int8x8_t *)((v78 & 0xF) + v66 - 6), *(int8x8_t *)(v67 + (v78 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v80, (int8x16_t)xmmword_22B497560), (int8x8_t)0x7B7B7B7B7B7B7B7BLL)));
  return (*(uint64_t (**)(__n128))(a65 + 8 * ((400 * (-(v70 & 0xFFFFFFF8) == v75)) ^ a4)))((__n128)xmmword_22B497560);
}

uint64_t sub_22B3838BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = a8 + v8 + 2665;
  BOOL v14 = v12 + 309119037 < ((7 * (v8 ^ (v11 + 592))) ^ 0x7DCD11BF) + ((v8 - 1072299970) & 0x2F544BF4u);
  BOOL v15 = v10 + 1211194577 < (v12 + 309119037);
  if ((v10 + 1211194577) < 0x7DCD20A9 != v14) {
    BOOL v15 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((62 * v15) ^ v13)))();
}

void sub_22B383958()
{
}

uint64_t sub_22B383974@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((3798
                                * (v2
                                 + a1
                                 + 120
                                 + ((*(unsigned __int8 *)(v5 + 1) - 134) ^ v4)
                                 + (v3 & (2 * (*(unsigned __int8 *)(v5 + 1) - 134)))
                                 - 1361 == a2)) ^ a1)))();
}

void sub_22B3839B8()
{
  int v3 = (char *)*(&off_26DE9F480 + (v0 & 0x7A0F5FF9) - 3314) - 12;
  int v4 = (char *)*(&off_26DE9F480 + (v0 & 0x280E1070)) - 8;
  uint64_t v5 = (char *)*(&off_26DE9F480 + (v0 & 0x7A0F5FF9) - 3015) - 4;
  uint64_t v6 = (uint64_t)*(&off_26DE9F480 + (v0 & 0x7A0F5FF9) - 3248);
  int v7 = *(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B54CLL) ^ 0xAELL));
  unsigned int v8 = v7 - ((2 * (_BYTE)v7 + 8) & 0xE) + 51;
  int v9 = (v8 >> 7) & 1 ^ (v8 >> 3);
  int v10 = *(unsigned __int8 *)(v6 + (*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B544) ^ 0x11));
  unsigned int v11 = v10 - ((2 * v10 + 24) & 0x14) + 54;
  LOBYTE(v10) = (v9 + (~(2 * v9) | 0xF1) + 8) ^ v8;
  int v12 = (((((~v11 & 0x80) != 0) ^ ((v11 & 0xF8) >> 3)) - ((v11 >> 2) & 0x14) + 10) ^ v11) | ((v4[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B546) ^ 0x93] ^ 0x29) << 16) | ((v3[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B545) ^ 0xA5] ^ 0x29) << 8);
  unsigned int v13 = v5[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B547) ^ 0x4BLL];
  *(_DWORD *)(v2 - 256) = (v10 | ((v5[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B54FLL) ^ 0x69] ^ (v5[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B54FLL) ^ 0x69] >> 1) & 0x75 ^ 0xE0) << 24) | ((v4[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B54ELL) ^ 0xE8] ^ 0x16) << 16) | ((v3[*(unsigned __int8 *)(v1 - 0x5071AF3ED2D7B54DLL) ^ 0x32] ^ 0x9E) << 8)) ^ 0xEE5D0583;
  *(_DWORD *)(v2 - 248) = (v12 | ((v13 ^ 0x29 ^ (v13 >> 1) & 0x75) << 24)) ^ 0xCB213CF5;
  JUMPOUT(0x22B383E2CLL);
}

void sub_22B386EC4()
{
}

uint64_t sub_22B386ECC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 + v0 - 1994210794) < 8) ^ (5 * (v2 ^ 0x3C))) & 1)
                                * (v2 ^ 0x757)) ^ v2)))();
}

uint64_t sub_22B386F1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((-3 * (v0 ^ 0xF4)) ^ (*(unsigned __int8 *)(*(void *)(v1 + 40) + 1) == ((v0 ^ 0xF4) + 43))) & 1 ^ v0 ^ 1)))();
}

uint64_t sub_22B386FF4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((a1 ^ 0x8A7) + 1291) | 4) + (((a1 ^ 0x8A7) + 1883) ^ 0xFFFFF89D)) * (v1 == 0)) | a1 ^ 0x8A7)))();
}

uint64_t sub_22B387038(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v1
                                                                      + 8
                                                                      * (((((*(unsigned char *)(v2 - 0x5E30592FF90A53FDLL) ^ (v3 - 120)) ^ 0xB4) != 0)
                                                                        * ((21 * ((v3 - 2424) ^ 0x518)) ^ 0xC99)) ^ (v3 - 2424) ^ 0xD88)))(a1, 68, 1700600624, 94 * ((v3 - 2424) ^ 0x58Du));
}

void sub_22B38710C(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_22B387150(uint64_t a1)
{
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B38728C()
{
  (*(void (**)(void))(v5 + 8 * (v1 + v0 + 2680)))();
  *int v3 = 0;
  *uint64_t v2 = 0;
  return v6 ^ v4;
}

uint64_t sub_22B3872E8()
{
  *(_DWORD *)(v7 - 120) = v4
                        + ((-151904737 - ((v7 - 136) | 0xF6F21E1F) + ((v7 - 136) | 0x90DE1E0)) ^ 0xE31AD614) * v3
                        - 78;
  *(void *)(v7 - 136) = v6;
  *(void *)(v7 - 128) = v0;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 ^ 0x1587)))(v7 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v2 == ((v4 - 1927900831) & 0x72E96D9B ^ 0x3FCE75C2)) * (v5 ^ 0x648)) ^ v4)))(v8);
}

uint64_t sub_22B3873A8@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  return sub_22B37B864(a1, (a2 - 1569520462) & 0x5D8CFCFF, 227, *(_DWORD *)(*v4 + 4 * (v5 - 1864440703 + ((a2 - 1569520462) & 0x5D8CFCFF)) - 0x54EEBA8C0E75CADCLL), v3, a3);
}

uint64_t sub_22B387400()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 0x5071AF3ED2D7B54FLL) ^ (v0 + 7)) & 1) * ((v0 + 264) ^ 0x4D2)) ^ (v0 + 1656))))();
}

uint64_t sub_22B387454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  unsigned int v14 = v11 & 0xB4328F7D;
  uint64_t v15 = ((v11 & 0xB4328F7D) - 2356) | 0x841;
  uint64_t v16 = (v10 + a6);
  uint64_t v17 = v16 + v12;
  uint64_t v18 = v16 & 0xF;
  unint64_t v19 = v18 + v8 - v17;
  unint64_t v20 = v18 + v9 - v17;
  uint64_t v21 = (v18 | v7) - v17;
  BOOL v25 = (unint64_t)(a7 - v12 - 0x61FE4C862F36DA60) > 0xF
     && v19 > 0xF
     && v20 > 0xF
     && v21 + (unint64_t)((v14 - 3406) | 0xD10) + v15 - 6523 > 0xF;
  return (*(uint64_t (**)(void))(v13 + 8 * (int)((202 * v25) ^ v14)))();
}

void sub_22B3874F8()
{
}

uint64_t sub_22B38751C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 32) == 0) * (((a1 ^ 0xDAF) + 819) ^ 0x6C5)) ^ a1)))();
}

void sub_22B387554()
{
}

uint64_t sub_22B387580(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  uint64_t v13 = *(void *)(v12 - 200);
  uint64_t v14 = (a5 + a4 + a7) + v13;
  unint64_t v15 = a6 - v13 - 0x2F096E18E10B44B4;
  uint64_t v16 = (a5 + a4) & 0xF;
  unint64_t v17 = v16 + v10 - v14;
  unint64_t v18 = (v16 | v8) - v14;
  uint64_t v19 = (v16 | v9) - v14;
  BOOL v23 = v17 > 0xF
     && v15 >= (((((v7 ^ 0xB6B) - 1640984855) & 0x61CF6FFB) - 384) ^ (unint64_t)(((v7 ^ 0xB6B) - 1963) | 0x500u))
     && v18 > 0xF
     && (unint64_t)(v19 + 1) > 0xF;
  return (*(uint64_t (**)(void))(v11 + 8 * ((220 * v23) ^ v7 ^ 0xB6B)))();
}

uint64_t sub_22B387634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x528]) = v10;
  uint64_t v8 = *(uint64_t (**)(void))(v11 + 8 * (a8 - 3062));
  STACK[0x258] = (unint64_t)*(&off_26DE9F480 + (a8 ^ 0xD21)) - 8;
  return v8();
}

uint64_t sub_22B387654@<X0>(int a1@<W2>, int a2@<W8>)
{
  unsigned int v7 = (a1 + 157127324) & 0xF6A26DDB;
  int v8 = v7 + *(unsigned __int8 *)(v5 + 8) - 1372;
  int v9 = (v8 ^ v4) + v2 + (v3 & (2 * v8));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((v9 == a2) | (2 * (v9 == a2))) != ((121
                                                                                            * ((a1 - 100) & 0xDB ^ 0x42)) ^ 0xFB))
                                     * (v7 - 1309)) ^ v7)))();
}

uint64_t sub_22B3876C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  *(void *)(v14 - 128) = v10;
  *(void *)(v14 - 120) = v11;
  *(_DWORD *)(v14 - 136) = v13
                         - 1734664879
                         * ((130231280 - ((v14 - 136) | 0x7C32BF0) + ((v14 - 136) | 0xF83CD40F)) ^ 0xD7E7FC15)
                         - 1182;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x91B)))(v14 - 136);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (v13 | (8
                                                    * (((v13 - 31) ^ ((int)((((v13 + 652345625) & 0xD91DFEEE)
                                                                                            - 1074960083) ^ a10) < 1)) & 1)))))(v15);
}

uint64_t sub_22B387798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                               + 8
                                                                               * ((60
                                                                                 * (v9 < ((a8 + 627) ^ a8 ^ 0x588 ^ 0xB15u))) ^ a8)))(a1, a2, a3, a4, 0);
}

uint64_t sub_22B3877D4(__n128 a1)
{
  *int v3 = a1;
  v3[1] = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

void sub_22B3877F8()
{
}

uint64_t sub_22B387804@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, unsigned int a6@<W5>, int a7@<W8>)
{
  v9[*v9 * (unint64_t)a1 + 8 + v8] = *(unsigned char *)(a5 + v8);
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((7 * (v7 ^ a4)) ^ a6) + a7 + a2 < ((7 * (v7 ^ a4) + v10) & v11 ^ a3))
                                * (7 * (v7 ^ a4) - 3168)) ^ (7 * (v7 ^ a4) - 271))))();
}

uint64_t sub_22B387868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a6 ^ (v8 + 2610)) - v8 - 77) * (v7 == v6)) ^ a6)))();
}

uint64_t sub_22B3878A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (v6 | (4
                                     * ((((v6 + 1271755007) ^ ((a6 + a4 + a5 + v6 - 118 - 3189) < 0xFFFFFFF0)) & 1) == 0)))))();
}

void sub_22B3878E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unint64_t a63)
{
  int v64 = STACK[0x278] - 3122;
  STACK[0x418] = a63;
  STACK[0x2F0] = *(void *)(v63 + 8 * v64);
  JUMPOUT(0x22B3A2CA8);
}

uint64_t sub_22B387910(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 33472))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  (*(void (**)(uint64_t))(v1 + 32368))(a1);
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_22B38795C@<X0>(int a1@<W2>, int a2@<W5>, char a3@<W7>, uint64_t a4@<X8>)
{
  *((unsigned char *)&STACK[0x260] + a4) = *(unsigned char *)(v5 + (v4 + a1))
                                 + ((a2 - 90) ^ a3)
                                 - ((2 * *(unsigned char *)(v5 + (v4 + a1))) & 0x55);
  return (*(uint64_t (**)(void))(v6 + 8 * (((a4 == 63) * v7) ^ a2)))();
}

uint64_t sub_22B3879AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  return (*(uint64_t (**)(void))(v27 + 8 * ((716 * (v26 - 971525980 < (a26 - 3005))) ^ (a2 + 987))))();
}

uint64_t sub_22B3879F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v38 = 1509 * (v35 ^ 0xD3F);
  *(unsigned char *)(a5 + (v38 ^ a4 ^ (v36 + 102)) + a9) = *(unsigned char *)(a34 + a35 - 1203751672)
                                                               - ((2 * *(unsigned char *)(a34 + a35 - 1203751672)) & 0x55)
                                                               + 42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((1783 * ((v36 + a9 + 1) < 0x40)) ^ v38)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_22B387A6C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((11 * (*(unsigned __int8 *)(v2 + a1) != ((v1 - 29) ^ 0xEC))) ^ v1)))();
}

uint64_t sub_22B387AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(*(void *)(v11 - 0x281D12643933BF1BLL) + 4 * (v9 + v7) - 0x54EEBA8C0E75CADCLL) = a7;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 + v7 > 0) * (((v8 + 635) | 8) ^ 0x473)) ^ v8)))();
}

void sub_22B387B18()
{
}

uint64_t sub_22B387B24@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((511 * ((((v2 - 711) ^ (a1 == v1)) & 1) == 0)) ^ v2)))();
}

void sub_22B387B5C()
{
}

void sub_22B387BB8()
{
}

uint64_t sub_22B387BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,unsigned int a23,int a24)
{
  unsigned int v30 = ((518342348 - (&a20 | 0x1EE546CC) + (&a20 | 0xE11AB933)) ^ 0x4649D15A) * v29;
  a23 = 1559 - v30;
  LODWORD(a20) = v30 + 1097015307 * v26 + 2128238812;
  a21 = a14;
  (*(void (**)(uint64_t *))(v28 + 32832))(&a20);
  unsigned int v31 = 1990461019
      * (((&a20 | 0x300DC8E9) - &a20 + (&a20 & 0xCFF23710)) ^ 0x1FE96A60);
  a20 = v24;
  a21 = a14;
  a22 = ((v25 ^ 0x45FF9BFB) - 8489730 + ((2 * v25) & 0x8BFF37F6)) ^ v31;
  a24 = v31 ^ 0xD09;
  uint64_t v32 = (*(uint64_t (**)(uint64_t *))(v28 + 32976))(&a20);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * (((a23 != v27) | (4 * (a23 != v27))) ^ 0x809u)))(v32);
}

void sub_22B387D18()
{
}

uint64_t sub_22B387D4C(uint64_t a1)
{
  int v4 = 23 * (((v1 + 1061) | 0x40) ^ 0xBAF);
  if (*(void *)(v3 - 248)) {
    BOOL v5 = v3 == 240;
  }
  else {
    BOOL v5 = 1;
  }
  int v7 = !v5 && *(void *)(a1 + 40) != 0x4AAEAB593A0D77;
  LODWORD(STACK[0x20C]) = v4;
  int v8 = *(uint64_t (**)(void))(v2 + 8 * ((v7 * (v4 ^ 0x7AE)) ^ v1));
  LODWORD(STACK[0x208]) = -42900;
  return v8();
}

uint64_t sub_22B387DBC@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v3 - 2090 + ((v3 - 2690) | 0xC0) - 767)
                                * (*(_DWORD *)(v5 + (v2 + a1) * (uint64_t)v4 + 36) == a2)) ^ (v3 - 823))))();
}

uint64_t sub_22B387E14(int a1, int a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v19 = a1 + 1;
  BOOL v20 = v10 < v9;
  uint64_t v21 = *v12 + 4 * (v19 + a2);
  unint64_t v22 = (a6 ^ HIDWORD(v18)) + (a7 & (v18 >> 31)) + a8 + a4 + (*(_DWORD *)(v21 + a3) ^ v11);
  *(_DWORD *)(v21 + a3) = v22 + v15 - ((v22 << a5) & v16);
  if (v20 == v19 + v13 < v9) {
    BOOL v20 = v19 + v13 < v10;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((v20 * v17) ^ v8)))();
}

void sub_22B387E2C()
{
}

void sub_22B387EC8(uint64_t a1, int a2)
{
  *int v2 = a2;
  JUMPOUT(0x22B33EAD0);
}

void sub_22B387ED0()
{
}

uint64_t sub_22B387F5C@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v8 = (unsigned __int8 *)(v4 + v3 + v7);
  int v9 = *v8 ^ a1;
  LODWORD(v8) = ((v8[1] ^ a1) << (((a2 - 66) & 0x7D) - 44)) | v9 | ((v8[2] ^ a1) << 16) | ((v8[3] ^ a1) << 24);
  *(_DWORD *)(v2 + v3 + v7) = v8 + v6 - 2 * (v8 & 0x5BFEEC5B ^ v9 & 0x10);
  return (*(uint64_t (**)(void))(v5 + 8 * ((483 * ((unint64_t)(v3 + 4 + v7) > 0x3F)) ^ a2)))();
}

uint64_t sub_22B388008@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v2 == 811328393) ^ (v1 + 34)) & 1)
                                * ((v1 - 1475671512) & 0x57F4EFBF ^ 0x7B3)) | (v1 - 1940))))();
}

uint64_t sub_22B388084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((*(void *)(a7 + 480) == 0) ^ (v7 + 108)) & 1) * (v7 - 2684)) ^ (v7 - 2389))))();
}

uint64_t sub_22B3880E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * ((((v6 & 0x18) == ((a6 + 1305) ^ 0xA5C))
                                                      * (((a6 + 238) | 0x188) ^ 0x7B5)) ^ a6)))(a1, (v7 - a1));
}

uint64_t sub_22B388128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v24 = v17 - 238;
  *(void *)(v23 - 144) = a14;
  *(void *)(v23 - 136) = v19;
  *(void *)(v23 - 104) = v19;
  *(void *)(v23 - 128) = v18;
  *(void *)(v23 - 120) = v22;
  *(_DWORD *)(v23 - 112) = v17
                         - 1948972247
                         * (((((v23 - 144) | 0xACBE2820) ^ 0xFFFFFFFE) - (~(v23 - 144) | 0x5341D7DF)) ^ 0xE6DF2231)
                         + 1134;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v17 ^ 0x1352)))(v23 - 144);
  BOOL v26 = v21 + a17 + 2 < ((v24 + 1733) ^ 0x7FFFF6D1u);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((((((v24 + 88) ^ v26) & 1) << 6) & 0x7F | ((((v24 + 600) ^ v26) & 1) << 7)) ^ (v24 + 1524))))(v25);
}

void sub_22B3881F4()
{
}

uint64_t sub_22B38820C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33)
{
  v35[623] = *(_DWORD *)(v34 + 4 * (*v35 & 1)) ^ v35[396] ^ ((*v35 & 0x7FFFFFFE | v35[623] & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v36 + 8 * (((a33 > v33 - 1749) | (32 * (a33 > v33 - 1749))) ^ v33)))();
}

uint64_t sub_22B388260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((((a8 - 3723) | 0x200) ^ v9) * ((a5 + v8 - 16) < 0xFFFFFFF0)) ^ a8)))();
}

uint64_t sub_22B388294()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 24) == 0x2C6BEF2188A8BB7CLL)
                                * ((v0 - 1357131554) & 0x50E42DFF ^ 0x8EB)) | v0)))();
}

uint64_t sub_22B3882E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((1542 * ((a8 & 0xFFFFFFF0) == (((a5 - 1944) | 0x522) ^ 0xFD7E7212) + (a5 ^ 8))) | a5)))();
}

uint64_t sub_22B38832C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 | 0x180) - 2356) | 0xB05) ^ 0x4F5 ^ (17 * ((v0 | 0x180) ^ 0x901)))
                                * (*(_DWORD *)(v1 - 120) == *(_DWORD *)(v1 - 128))) ^ (v0 | 0x180))))();
}

uint64_t sub_22B3883C8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * ((124 * ((((35 * (a3 ^ 0x894)) ^ 0x583) & v3) == 257 * (a3 ^ 0x8B7) - 2570)) ^ a3)))((v4 - v5));
}

uint64_t sub_22B388418()
{
  return sub_22B3450A4();
}

uint64_t sub_22B388420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  BOOL v21 = v18 - 421496099 < (a18 - 690024369);
  if ((a18 - 690024369) < 0x423F68BC != (v18 - 421496099) < 0x423F68BC) {
    BOOL v21 = (a18 - 690024369) < 0x423F68BC;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((38 * (((v19 - 1) ^ v21) & 1)) ^ v19)))();
}

uint64_t sub_22B388490(uint64_t a1)
{
  BOOL v4 = *(_DWORD *)(v3 - 0x19157D3ABD2659D2) - 1463683367 == (((v1 + 477) | 0x70) ^ 0x5F8);
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (((2 * (((v1 - 98) ^ v4) & 1)) & 0xBF | ((((v1 - 610) ^ v4) & 1) << 6)) ^ v1)))(a1, *(void *)(v3 - 0x19157D3ABD2659DELL));
}

uint64_t sub_22B388510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unint64_t a58,unint64_t a59,_DWORD *a60,_DWORD *a61,uint64_t a62,_DWORD *a63)
{
  *uint64_t v74 = *v73;
  *a71 = *a72;
  *a69 = *a70;
  *a67 = *a68;
  *a63 = *a66;
  *a60 = *a61;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75
                                                                       + 8
                                                                       * ((((v72 ^ 0xD02) + 901) * (a59 < a58)) ^ v72)))(1323, 151, 691, 117);
}

void sub_22B388540(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (225134719 * ((a1 & 0x7B48C4E9 | ~(a1 | 0x7B48C4E9)) ^ 0x92477E3C));
  __asm { BRAA            X10, X17 }
}

void sub_22B3885E8()
{
}

void sub_22B3887A4()
{
  uint64_t v1 = (v8 ^ 0xDFA64424) - 1971;
  uint64_t v2 = *v9;
  if (((unint64_t)*v9 & 3) == (v1 ^ 0x51C))
  {
    uint64_t v3 = (uint64_t)*(&off_26DE9F480 + (int)(v8 ^ 0xDFA64953));
    uint64_t v5 = *(void *)(v3 - 4);
    BOOL v4 = (void *)(v3 - 4);
    if (!v5)
    {
      int v6 = 343 * (v1 ^ 0x51B);
      *BOOL v4 = v2;
      *(_DWORD *)*(&off_26DE9F480 + (int)((v8 ^ 0xDFA64424) - 3071)) = 255;
      *v2 |= ~v2[*v2 & 0x3ELL] << 16;
      v2[4] |= ~v2[v2[4] & 0x3ELL] << (87 * (((v8 ^ 0x24) + 77) ^ 0x1B) - 81);
      v2[8] |= ~v2[v2[8] & 0x3ELL] << 16;
      v2[12] |= ~v2[v2[12] & 0x3ELL] << 16;
      v2[16] |= ~v2[v2[16] & 0x3ELL] << 16;
      v2[20] |= ~v2[v2[20] & 0x3ELL] << 16;
      v2[24] |= ~v2[v2[24] & 0x3ELL] << 16;
      v2[28] |= ~v2[v2[28] & 0x3ELL] << 16;
      v2[32] |= ~v2[v2[32] & 0x3ELL] << 16;
      v2[36] |= ~v2[v2[36] & 0x3ELL] << 16;
      v2[40] |= ~v2[v2[40] & 0x3ELL] << 16;
      v2[44] |= ~v2[v2[44] & 0x3ELL] << 16;
      v2[48] |= ~v2[v2[48] & 0x3ELL] << 16;
      v2[52] |= ~v2[v2[52] & 0x3ELL] << 16;
      v2[56] |= ~v2[v2[56] & 0x3ELL] << 16;
      v2[60] |= ~v2[v2[60] & 0x3ELL] << 16;
      (*(void (**)(uint64_t *, void, uint64_t))(v0 + 8 * (int)(v1 ^ 0x1518)))(&v10, 0, 1024);
      __asm { BRAA            X11, X17 }
    }
  }
  *int v7 = 604092404;
}

uint64_t sub_22B388B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(v6 - 168);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                                        + 8
                                                                                        * (int)(((((*(_DWORD *)(v6 - 152) == *(_DWORD *)(v6 - 160)) ^ (v7 + 80)) & 1)
                                                                                               * ((v7 + 622181460) & 0xDAEA4577 ^ 0x403)) ^ v7)))(a1, a2, a3, a4, a5, (v7 + 2383));
}

uint64_t sub_22B388B7C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v7 = (unsigned __int8 *)(a1 + v2 + v3);
  int v8 = *v7 ^ 0x2A;
  LODWORD(v7) = ((v7[2] ^ 0x2A) << 16) | ((v7[3] ^ 0x2A) << 24) | v8 & 0xFFFF00FF | (((a2 - 80) ^ 9 ^ v7[1]) << 8);
  *(_DWORD *)(v6 + ((v2 + v3) & 0xFFFFFFFFFFFFFFFCLL)) = v7
                                                       + v5
                                                       - 2 * (v7 & 0x5BFEEC5B ^ v8 & 0x10);
  return (*(uint64_t (**)(void))(v4 + 8 * ((3253 * ((unint64_t)(v2 + 4 + v3) < 0x40)) ^ a2)))();
}

uint64_t sub_22B388C1C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((57 * ((v4 + v3 + 135528457) > 7)) ^ a3)))();
}

uint64_t sub_22B388C68(char a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + 2099 + (v1 ^ 0x84D) - 3299) * ((a1 & 8) == 0)) ^ v1)))();
}

void sub_22B388CA0()
{
}

void sub_22B388CAC()
{
}

uint64_t sub_22B388CDC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = v2 + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  BOOL v6 = v5 - v2 + 733245990 < ((v3 + 1661) ^ 0x906uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v6 | (2 * v6)) ^ v3)))();
}

uint64_t sub_22B388D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int8x16_t v22 = vrev64q_s8(*(int8x16_t *)*(void *)(v18 + 24));
  int8x16_t v23 = vextq_s8(v22, v22, 8uLL);
  v24.i64[0] = 0xAAAAAAAAAAAAAAAALL;
  v24.i64[1] = 0xAAAAAAAAAAAAAAAALL;
  int8x16_t v25 = vandq_s8(vaddq_s8(v23, v23), v24);
  v24.i64[0] = 0x5555555555555555;
  v24.i64[1] = 0x5555555555555555;
  int8x16_t v26 = veorq_s8(v23, v24);
  v24.i64[0] = 0x9494949494949494;
  v24.i64[1] = 0x9494949494949494;
  int8x16_t v27 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v26, v24), v25), (int8x16_t)xmmword_22B497580));
  *(int8x16_t *)(v21 - 112) = vextq_s8(v27, v27, 8uLL);
  BOOL v29 = v19 == 0x2E85F9F014BD953DLL || a9 == 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (int)(a7 ^ (56 * v29))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_22B388DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)((((a10 ^ v10) > 0x14) * ((((v12 + 784682949) & 0xD13AAFF5) + 748) ^ 0xF0A)) ^ v12)))();
}

uint64_t sub_22B388E28@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (((8 * (a1 + 1 == v3 + 60)) | (16 * (a1 + 1 == v3 + 60))) ^ v2)))(v1);
}

uint64_t sub_22B388F08()
{
  return sub_22B388F4C(876582054, 3267);
}

uint64_t sub_22B388F4C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(a13 + 4 * (v13 + a3) + v17) = *(_DWORD *)(*v15 + 4 * (v13 + a3) + v17);
  BOOL v21 = v13 + v18 > a1 || v13 + v18 < v16;
  return (*(uint64_t (**)(void))(v19 + 8 * ((v21 * a2) ^ (v14 + 13))))();
}

uint64_t sub_22B388FA0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x2CE) + v2 - 484 - 195) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B388FDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((4 * (a2 + 1 != v4 + 64)) | (8 * (a2 + 1 != v4 + 64)) | v2)))();
}

uint64_t sub_22B3890AC()
{
  *(unsigned char *)(v7 + (v3 ^ (2 * v0) ^ v4) + v1 + 24) = *(unsigned char *)(v6
                                                                           + (v3 ^ (2 * v0) ^ v4)
                                                                           + v1
                                                                           + 24);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v1 + 1 == v2 + 64) * v5) ^ v0)))();
}

uint64_t sub_22B3890EC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)(result + 20) - 2857 * ((21990 - (result | 0x55E6) + (result | 0xAA19)) ^ 0x5FF7);
  *(_DWORD *)(v1 - 0x2970AB8229FC3CCELL) = ((v2 & 0x1FF ^ 0x196 | 0x672527A7)
                                          - (v2 & 0x1FF ^ 0x196 | 0x18DAD858)
                                          + 416995416) ^ 0x696FAE1B;
  *(void *)(v1 - 0x2970AB8229FC3CEELL) = 0x22253619C817B3A6;
  *(_DWORD *)(v1 - 0x2970AB8229FC3CD2) = 326024231;
  int v3 = v2 ^ 8;
  if (v3 == 1)
  {
    int v4 = 326024247;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x2970AB8229FC3CD6) = -767064375;
    int v4 = 326024251;
LABEL_5:
    *(void *)(v1 - 0x2970AB8229FC3CE6) = 0xFE58CCB076D04438;
    *(void *)(v1 - 0x2970AB8229FC3CDELL) = 0x1A7334F892FBBC7;
    *(_DWORD *)(v1 - 0x2970AB8229FC3CD2) = v4;
  }
  *(_DWORD *)(result + 16) = 958945760;
  return result;
}

uint64_t sub_22B389260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((a37 - a57 - a34 < (unint64_t)(14 * (v57 ^ 0x1E3u)) - 446)
                                              * ((v57 ^ 0x222) - 980)) ^ v57)))(1517324231);
}

void sub_22B3892C0(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 24) + 2009815553 * ((-935388273 - (a1 | 0xC83F1B8F) + (a1 | 0x37C0E470)) ^ 0xC6CBCA35);
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x281D12643933BF1FLL) - 920561905 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x281D12643933BF1FLL) - 920561905;
  }
  else {
    unsigned int v4 = 920561905 - *(_DWORD *)(v2 - 0x281D12643933BF1FLL);
  }
  uint64_t v3 = *(void *)a1;
  if (*(_DWORD *)(*(void *)a1 - 0x281D12643933BF1FLL) - 920561905 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x281D12643933BF1FLL) - 920561905;
  }
  else {
    unsigned int v5 = 920561905 - *(_DWORD *)(v3 - 0x281D12643933BF1FLL);
  }
  unsigned int v8 = v1 + 1734664879 * ((&v8 & 0xB3B8775A | ~(&v8 | 0xB3B8775A)) ^ 0x639CA0BF) - 1922;
  uint64_t v9 = v2;
  uint64_t v6 = (char *)*(&off_26DE9F480 + (v1 ^ 0xBF5)) - 8;
  (*(void (**)(unsigned int *))&v6[8 * (v1 ^ 0x565)])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_22B38947C@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v17 = (v8 ^ v12)
      + v11
      + *(_DWORD *)(a4 + 4 * (a2 + v13))
      + (((a1 ^ a6) + v12 - (v14 & (2 * (a1 ^ a6)))) ^ v9)
      + ((v7 - 1029) ^ (v10 - 1488) ^ *(_DWORD *)(a7 + 4 * (*(unsigned char *)(a3 + a2 + v13) - 53)));
  unsigned int v18 = (v17 + v12 - (v14 & (2 * v17))) ^ v12;
  int v19 = ((v18 << (*(unsigned char *)(a5 + a2 + v13) - 113)) | (v18 >> (113 - *(unsigned char *)(a5 + a2 + v13)))) + (a1 ^ v12);
  return (*(uint64_t (**)(void))(v15 + 8 * (((a2 + 1 == v16 + 48) | (8 * (a2 + 1 == v16 + 48))) ^ v7)))(v19 + v12 - (v14 & (2 * v19)));
}

uint64_t sub_22B389544@<X0>(int a1@<W2>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((((v5 ^ a1) - 168) | a2) + 703) ^ a3) * (v4 == 0)) ^ v5 ^ a1)))();
}

void sub_22B389578()
{
}

uint64_t sub_22B389580@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>, uint64_t a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(void))
{
  *(unsigned char *)(a2 - 16) = *(unsigned char *)(*a20 + *(unsigned __int8 *)(a2 - 16));
  *(unsigned char *)(a2 - 12) = *(unsigned char *)(*a19 + v27);
  *(unsigned char *)(a2 - 8) = *(unsigned char *)(*a18 + a1);
  *(unsigned char *)(a2 - 4) = *(unsigned char *)(*a17 + v28);
  *(unsigned char *)(a2 - 3) = *(unsigned char *)(*a16 + BYTE1(a1));
  *(unsigned char *)(a2 - 7) = *(unsigned char *)(*a15 + BYTE1(v27));
  *(unsigned char *)(a2 - 11) = *(unsigned char *)(*a14 + *(unsigned __int8 *)(a2 - 15));
  *(unsigned char *)(a2 - 15) = *(unsigned char *)(*a13 + BYTE1(v28));
  uint64_t v31 = *(unsigned __int8 *)(a2 - 14);
  *(unsigned char *)(a2 - 14) = *(unsigned char *)(*a12 + BYTE2(a1));
  *(unsigned char *)(a2 - 6) = *(unsigned char *)(*a11 + v31);
  *(unsigned char *)(a2 - 10) = *(unsigned char *)(*a10 + BYTE2(v28));
  *(unsigned char *)(a2 - 2) = *(unsigned char *)(*a9 + BYTE2(v27));
  uint64_t v32 = *(unsigned __int8 *)(a2 - 13);
  *(unsigned char *)(a2 - 13) = *(unsigned char *)(*a8 + a3);
  *(unsigned char *)(a2 - 9) = *(unsigned char *)(*a7 + v29);
  *(unsigned char *)(a2 - 5) = *(unsigned char *)(*a6 + v30);
  *(unsigned char *)(a2 - 1) = *(unsigned char *)(*a5 + v32);
  return a27();
}

void sub_22B3896C0(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x1367E3C5726D8FAFLL) = v1 - 1;
  JUMPOUT(0x22B33957CLL);
}

void sub_22B3896DC()
{
}

uint64_t sub_22B389784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17, int a18, unsigned int a19, unint64_t *a20,uint64_t a21)
{
  unsigned int v24 = 1328090399 * ((2 * (&a16 & 0x12CC25B8) - &a16 + 1832114754) ^ 0x92E0BE78);
  a16 = (v22 - 1653801918) ^ v24;
  a17 = 1568219331 - v24;
  a20 = &STACK[0x25ABA05A3795B12A];
  a21 = a13;
  a19 = v24 ^ 0x881FFD3C;
  uint64_t v25 = (*(uint64_t (**)(int *))(v21 + 8 * (v22 ^ 0x143D)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((22
                                              * (((v22 - 42) ^ (a18 == ((v22 - 1735914914) & 0x6777F77D ^ v23))) & 1)) ^ v22)))(v25);
}

uint64_t sub_22B38987C(uint64_t a1, uint64_t a2)
{
  qword_2683F6240 = 2059148423 * ((qword_2683F6240 - (void)&v5 + qword_2683EB0F0) ^ 0xD2361EE8B96764DLL);
  qword_2683EB0F0 = qword_2683F6240;
  int v2 = *(_DWORD *)(a2 - 0x48A9B556C05DE57DLL);
  uint64_t v3 = qword_26DE9FFD0 - 8;
  if (v2 == 1801476207) {
    __asm { BRAA            X1, X17 }
  }
  if (v2 == 1801476214) {
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_22B389A44@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, void))(v3
                                                    + 8
                                                    * (((v4 - 920561906 >= 0) * (((a2 + 1856) ^ 0x1A4) - 169)) ^ a2)))(a1, (a3 + 1));
}

void sub_22B389A84()
{
}

uint64_t sub_22B389A94(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((((a3 ^ 0xFFFFFB91) + a3 + 3294) * (v4 == v3)) ^ a3)))(a3 ^ 0xC5Du);
}

uint64_t sub_22B389AC8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  int8x16x4_t v41 = vld4q_s8(a4);
  uint8x16_t v33 = (uint8x16_t)veorq_s8(v41.val[2], v32);
  _Q21 = vmovl_high_u8(v33);
  _Q20 = vmovl_u8(*(uint8x8_t *)v33.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * ((75 * (v30 != 1328635773)) ^ (((a29 - 16) | 0x10) + 1155))))(v29);
}

void sub_22B389D00()
{
  *(_DWORD *)(v1 + v2) = v0;
}

uint64_t sub_22B389D08()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((*(unsigned char *)(v2 - 0x19157D3ABD2659CALL) & 1) == 0)
                                     * ((v0 + 1542880318) & 0xA40983BB ^ 0x3D9)) ^ v0)))();
}

uint64_t sub_22B389D58@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W8>)
{
  *(unsigned char *)(v4 + v5) = *(unsigned char *)(v6 + (v3 + a1))
                      - ((2 * *(unsigned char *)(v6 + (v3 + a1))) & 0x55)
                      + 42;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 63) | (8 * (v5 == 63))) ^ (a2 + a3 + 2068))))();
}

uint64_t sub_22B389DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, unsigned int a11, unsigned int a12, uint64_t a13, int a14)
{
  unsigned int v18 = 731811679 * ((((2 * &a10) | 0xF46BF462) - &a10 + 97125839) ^ 0xB3C35C75);
  a10 = &STACK[0xB8308F1D17695A];
  a13 = v14;
  a11 = v18
      + (v16 ^ 0xDBFA9FD7)
      + (v17 ^ 0x3E)
      + 2003827383
      + ((((v17 + 112127361) & 0xF9511F7B) + 938815595) & (2 * v16));
  a12 = v18 - 315487230;
  a14 = v18 + v17 - 119;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v15 + 8 * (v17 ^ 0x1259)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((8 * (*(_DWORD *)(v14 - 0x19157D3ABD2659C6) == -604050357)) | (16 * (*(_DWORD *)(v14 - 0x19157D3ABD2659C6) == -604050357)) | v17)))(v19);
}

uint64_t sub_22B389EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((770 * (v8 == ((v9 - 435) ^ (a8 - 1441) ^ (6 * (v9 ^ 0xE09))))) ^ v9)))();
}

uint64_t sub_22B389F08()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((13 * (STACK[0x4C0] != 0)) ^ (v0 - 738))))();
}

uint64_t sub_22B389F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *(_DWORD *)(v39 - 156) = v34
                         + 1328090399 * ((((v39 - 168) | 0x10CBAE71) + (~(v39 - 168) | 0xEF34518E)) ^ 0xEF18CA4A)
                         + 2574;
  *(void *)(v39 - 168) = a14;
  *(void *)(v39 - 152) = v33;
  *(void *)(v39 - 144) = v35 + 12;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v34 + 3863)))(v39 - 168);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38
                                                     + 8
                                                     * (((*(_DWORD *)(v39 - 160) == v37)
                                                       * (v36 + ((v34 - 1803452690) | 0x4B500412) + 1199)) ^ v34)))(v40, a33);
}

void sub_22B389FE8(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4)
{
  a3 = v4
     + 1438293641
     * (((&a3 ^ 0xEF0EA57 | 0x851FB8DA) - ((&a3 ^ 0xEF0EA57) & 0x851FB8DA)) ^ 0x332807F2)
     + 42;
  a4 = a1;
  (*(void (**)(unsigned int *))(v5 + 8 * (v4 + 1718)))(&a3);
  JUMPOUT(0x22B38A054);
}

void sub_22B38A084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  (*(void (**)(uint64_t, uint64_t))(v38 + 8 * (v37 + 1618122415)))(a37, 2965982036);
  *uint64_t v39 = (*(uint64_t (**)(void))(v38 + 8 * (v37 + 1618122434)))();
  JUMPOUT(0x22B38A0F8);
}

uint64_t sub_22B38A12C@<X0>(int a1@<W0>, uint64_t a2@<X4>, int a3@<W5>, unint64_t a4@<X8>, uint64_t a5)
{
  unsigned int v11 = (v9 + 2029036728) & 0x870F5F2C;
  uint64_t v12 = (a3 + a1 + v8);
  unint64_t v13 = v12 + a5 - 0x57B2EFF461B44D8FLL + 3121;
  unint64_t v14 = v7 + a2 - v12;
  unint64_t v15 = v7 + a2 + 1;
  unint64_t v16 = v6 + a2 - v12;
  unint64_t v17 = v6 + a2 + 1;
  unint64_t v18 = v5 + a2 + 1 - v12;
  unint64_t v19 = a2 + v5 + 2;
  BOOL v21 = a4 < v17 && v16 < v13;
  if (a4 < v15 && v14 < v13) {
    BOOL v21 = 1;
  }
  int v24 = a4 < v19 && v18 < v13 || v21;
  return (*(uint64_t (**)(void))(v10 + 8 * (int)(((((v11 - 17101095) & 0x104EEF2) - 3268) * v24) ^ v11)))();
}

void sub_22B38A1EC()
{
  *(_DWORD *)(v1 - 120) = v0 + 9;
  *(_DWORD *)(v1 - 128) = v0 + 8;
  JUMPOUT(0x22B38A2F0);
}

uint64_t sub_22B38A368()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((49 * (v0 + v2 + 749 + ((v2 + 1623772221) & 0x9F3736AF ^ 0x4B60AB45) == -1698556983)) ^ v2)))();
}

void sub_22B38A3C0(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>)
{
  int v6 = 1948972247 * ((1941731804 - ((v5 - 128) | 0x73BC79DC) + ((v5 - 128) | 0x8C438623)) ^ 0x39DD73CD);
  *(_DWORD *)(v5 - 128) = (a3 + (a4 ^ 0x175C) + 19) ^ v6;
  *(_DWORD *)(v5 - 108) = (a1 ^ v4 ^ ((a4 ^ 0x175C) + 2073163642) & 0x846E0FFB) - v6;
  *(void *)(v5 - 120) = a2;
  JUMPOUT(0x22B33C5A4);
}

uint64_t sub_22B38A468@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (a1 - 2091745985)) = *(unsigned char *)(v5 + ((a1 - 2091745985) & 0xFLL)) ^ *(unsigned char *)(v2 + (a1 - 2091745985)) ^ *(unsigned char *)(v4 + (((_BYTE)a1 + 63) & 0xF)) ^ *(unsigned char *)((((_BYTE)a1 + 63) & 0xF) + v3 + 2) ^ (75 * ((a1 + 63) & 0xF));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 - 1 == v6) * (((v7 - 1454) | 0x952) + 616)) ^ (v7 - 467))))();
}

uint64_t sub_22B38A4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v26 = v19[4];
  uint64_t v27 = *v19;
  uint64_t v23 = v19[3];
  a16 = v21
      + 2820
      + 1292559617 * ((408606871 - (&a16 | 0x185AD897) + (&a16 | 0xE7A52768)) ^ 0x40F64F01);
  a17 = v23;
  a18 = a13;
  (*(void (**)(unsigned int *))(v20 + 8 * (v21 + 2971)))(&a16);
  a16 = v21
      + 2820
      + 1292559617
      * (((&a16 ^ 0x74E7BB74) & 0xC889FFC1 | ~(&a16 ^ 0x74E7BB74 | 0xC889FFC1)) ^ 0xE4C2D323);
  a18 = a13;
  a17 = v26;
  (*(void (**)(unsigned int *))(v20 + 8 * (v21 ^ 0xBE5)))(&a16);
  a16 = v21
      - (((&a16 | 0xE5BF04B1) - &a16 + (&a16 & 0x1A40FB48)) ^ 0x14B42AF4)
      * v22
      + 627;
  a17 = a13;
  a18 = v27;
  uint64_t v24 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v21 ^ 0xBCA)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a19 == -604050357)
                                              * (71 * ((v21 - 923362536) & 0x370966AD ^ 0x60A) - 522)) ^ v21)))(v24);
}

void sub_22B38A674()
{
  *(_DWORD *)STACK[0x218] = v0 + 1;
  JUMPOUT(0x22B38A6F4);
}

uint64_t sub_22B38A80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x268] = v67 - 0x24B64731C5A67D8FLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * (v66 ^ (2041 * (a66 ^ 1)))))(641527265, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_22B38A814()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((612 * (v1 ^ 0x759) - 3027) * (v0 != 1543089487)) ^ v1)))();
}

uint64_t sub_22B38A850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8
                                   * (int)(((((v6 - 1077022698) & 0xDFBF7FBD) + 1618118891) * (v5 + 8 == a5)) ^ v6)))();
}

void sub_22B38A89C()
{
}

void sub_22B38A8D0(uint64_t a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 4) - 1734664879 * ((2 * (a1 & 0xC3DAF51C) - a1 + 1009060579) ^ 0x13FE22F9);
  v3[0] = (1292559617 * ((v3 & 0x8DB70028 | ~(v3 | 0x8DB70028)) ^ 0xD51B97BE)) ^ (v1 - 1690125885);
  uint64_t v2 = (char *)*(&off_26DE9F480 + (int)(v1 & 0xB57B2F6F)) - 8;
  (*(void (**)(_DWORD *))&v2[8 * v1 + 28256])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B38AA08()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v3 << (v4 + 31)) & v2) == v5) * v6) ^ v1)))();
}

uint64_t sub_22B38AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                                           + 8
                                           * ((521
                                             * ((v5 & 0x18) == ((11 * (a5 ^ 0x907) + 351718673) & 0xEB092E59) - 576)) ^ a5)))((v6 - v7));
}

uint64_t sub_22B38AA88(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((((a4 ^ (a7 + 147) ^ 0xFFFFFAF0) + a7 + a4 - 365) * (v7 == v8)) ^ a4)))();
}

uint64_t sub_22B38AAC8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v6 = *((_DWORD *)&STACK[0x250] + ((v4 + a2) >> ((v3 + 117) ^ 0x25)) + 18);
  *(unsigned char *)(a1 + (v4 + a2 + 1)) = (BYTE2(v6) ^ 0x95) - ((v6 >> 15) & 0x54) + 42;
  *(unsigned char *)(a1 + (v4 + a2)) = (HIBYTE(v6) ^ 0x11) - ((v6 >> 23) & 0x54) + 42;
  *(unsigned char *)(a1 + (v4 + a2 + 2)) = (BYTE1(v6) ^ 0x67) + (~(2 * (BYTE1(v6) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v4 + a2 + 3)) = v6 ^ 0x13;
  unsigned int v7 = LODWORD(STACK[0x2AC]) + 2013365384;
  BOOL v8 = v7 < v2;
  BOOL v9 = v4 - 1980517033 < v7;
  if (v4 - 1980517033 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (v3 ^ (4 * !v9))))();
}

uint64_t sub_22B38ABA8@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(void *)(a3 - 7 + (v7 + v6 + v8 - a1)) = *(void *)(v4 - 7 + (v7 + v6 + v8 - a1));
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((506 * (((a2 - 24) | 2) - ((((a2 - 24) | 2) - 762) & v5) - 746 != -a1)) ^ ((a2 - 24) | 2))))();
}

void sub_22B38AC14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24)
     - 225134719 * (((a1 ^ 0x3D2525FB | 0x2CC1C13C) - (a1 ^ 0x3D2525FB | 0xD33E3EC3) - 750895421) ^ 0x714A1ED);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_22B38AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, uint64_t a18, uint64_t a19)
{
  uint64_t v24 = *(void *)(v19 + 40);
  uint64_t v25 = *(void *)(v19 + 16);
  unsigned int v26 = 1734664879 * (((&a12 | 0x4DD4A1A7) + (~&a12 | 0xB22B5E58)) ^ 0x620F89BC);
  a15 = v26 + a11 + v23 - 530 - ((((v23 - 1290) | 0x2F8) - 1509892795) & (2 * a11)) - 754946778;
  a17 = v23 - v26 - 1652555683;
  a12 = -1973806123 * v21 - v26 - 1490321994;
  a18 = a9;
  a19 = a9;
  a13 = v24;
  a14 = v25;
  uint64_t v27 = (*(uint64_t (**)(int *))(v22 + 8 * (v23 ^ 0x153A)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a16 != v20) | (16 * (a16 != v20))) ^ v23)))(v27);
}

uint64_t sub_22B38AE24@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((996 * (v1 - a1 < (((v2 ^ 0x8A0u) - 259) ^ 0xC73uLL))) ^ v2)))();
}

uint64_t sub_22B38AE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  unsigned int v12 = *(unsigned __int8 *)(v8 + (v11 + v10 + 3287));
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * (a8 ^ (989 * (a7 != -17903367)))))(a1, ((2 * v12) & 0x1FC) + 1869404526 + ((411 * (a8 ^ 0x5DD) + 7 * (a8 ^ 0x4AE) - 67934263) ^ v12));
}

uint64_t sub_22B38AEF0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v3 + 893376503) & 0x4AC02D7F) + ((v3 - 1337003515) & 0x4FB10EBF) - 1557)
                                * (v1 == v2)) ^ v3)))();
}

void sub_22B38AF44()
{
}

void sub_22B38AF50(_DWORD *a1)
{
  int v1 = *a1 - 1292559617 * ((((2 * a1) | 0x7938BFFA) - a1 + 1130602499) ^ 0x1BCF3794);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B38B010()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_22B38B034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_22B332DEC(a6, -604050357);
}

void sub_22B38B060(uint64_t a1@<X6>, int a2@<W8>)
{
  *(void *)(v5 - 0x24B64731C5A67D3BLL) = v2;
  *(void *)(v5 - 0x24B64731C5A67D33) = v2;
  *(_DWORD *)(v5 - 0x24B64731C5A67D2BLL) = v3;
  *(void *)(v4 + 96) = v5;
  *(void *)(a1 + 48) = v4 + 96;
  *(_DWORD *)(v5 - 0x24B64731C5A6814BLL) = 262083388;
  STACK[0x258] = STACK[0x2D8];
  STACK[0x260] = (unint64_t)&STACK[0x560] + *(void *)(a1 + 160) + (a2 ^ 0x3D2u) - 0x3D63BD92DA1965F9;
  JUMPOUT(0x22B38B13CLL);
}

uint64_t sub_22B38B250@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((720 * (a2 + 1 == a1 + 64)) ^ v3)))();
}

uint64_t sub_22B38B308(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(unsigned char *)(a4 + v4 + v6) = v7;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((v5 ^ 0x71Cu) - 1147) ^ (unint64_t)(v6 - 116)) + v4 < 0x40) * a3) ^ v5 ^ 0x71C)))();
}

uint64_t sub_22B38B348()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 163)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((103 * (((v0 + 114) ^ v2) & 1)) ^ (v0 - 657))))();
}

uint64_t sub_22B38B3A0@<X0>(void *a1@<X8>)
{
  *a1 = *v4;
  return (*(uint64_t (**)(void *, void, unint64_t))(v3
                                                                       + 8
                                                                       * ((((v1 & 0xFFFFFFFFFFFFFFF8) != 8)
                                                                         * (((v2 - 806) | 0x684) - 1774)) ^ (v2 - 8))))(a1 + 1, ((v2 - 806) | 0x684u) - 1774, (v1 & 0xFFFFFFFFFFFFFFF8) - 16);
}

uint64_t sub_22B38B3F4()
{
  *uint64_t v3 = v3[623];
  int v6 = STACK[0x234];
  unint64_t v7 = STACK[0x218];
  *(void *)(v1 + 16) = (v0 + 1819242166) - STACK[0x218];
  *(_DWORD *)(v5 - 148) = (v4 - 1604165215) ^ v7;
  *(void *)(v5 - 144) = STACK[0x228];
  *(_DWORD *)(v5 - 120) = v6 + v7;
  *(_DWORD *)(v5 - 116) = (v6 ^ 0xF) - v7;
  *(_DWORD *)(v5 - 128) = LODWORD(STACK[0x230]) ^ v7;
  *(_DWORD *)(v5 - 124) = v7 ^ 1;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * SLODWORD(STACK[0x224])))(v5 - 152);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 152)))(v8);
}

void sub_22B38B488()
{
}

void sub_22B38B490()
{
  *(_DWORD *)(v1 - 120) = 17 * (v0 ^ 0x152);
  JUMPOUT(0x22B38B9F0);
}

uint64_t sub_22B38DDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33
                                                     + 8
                                                     * ((110
                                                       * (((a32 - 2054175045 < (v32 - 59)) ^ a11) & 1)) ^ (v32 + 3576))))(a1, a2);
}

void sub_22B38DDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,unsigned char *a22)
{
  int v30 = v22 ^ 0x7AC;
  *(_DWORD *)a1 = 1498173510;
  *(unsigned char *)(a1 + 4) = a20 ^ 0x77;
  *(_WORD *)(a1 + 5) = 1025;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = 335544320;
  *(unsigned char *)(v28 - 136) = (75 * (a20 ^ 0x77) + 113) ^ (95 * ((~(v28 + 104) & 0x2F | (v28 + 104) & 0xD0) ^ 0x6B));
  *(void *)(v26 + 2976) = a1 + 12;
  *(void *)(v26 + 2992) = a21;
  *(_DWORD *)(v28 - 120) = v30 - 731811679 * ((~(v28 - 152) & 0x36B9DA2F | (v28 - 152) & 0xC94625D0) ^ 0x7F4F7C6B) + 777;
  *(unsigned char *)(v28 - 152) = 95 * ((~(v28 + 104) & 0x2F | (v28 + 104) & 0xD0) ^ 0x6B) + 32;
  (*(void (**)(uint64_t))(v23 + 8 * (v30 ^ 0x13F0)))(v28 - 152);
  *(unsigned char *)(a21 + 1) = 47;
  *uint64_t v27 = a1;
  *uint64_t v25 = v24;
  *a22 = 0;
  JUMPOUT(0x22B38DF5CLL);
}

void sub_22B38E04C()
{
}

void sub_22B38E130()
{
}

uint64_t sub_22B38E6E8()
{
  int v2 = v0 ^ 0xD90;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 + 2847)))(1576, 3012117910);
  unint64_t v4 = STACK[0x270];
  STACK[0x288] = v3 + 0x24B64731C5A68327;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((v3 == 0) * ((((v2 + 899) | 0x135) ^ 0xFFFFFA95) + ((v2 + 1869) | 0x41))) ^ v2)))();
}

uint64_t sub_22B38E774()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((104 * (*(_DWORD *)(*v1 + 4 * v2 - 0x54EEBA8C0E75CADCLL) == ((v0 + 24) ^ 0x3B30BC6F))) ^ v0)))();
}

uint64_t sub_22B38E7C8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((v2 + 3) | 2) ^ 0x1F ^ (*(unsigned __int8 *)(a2 - 0x24B64731C5A6823BLL + a1 - 0x31DA078F262445C8) == *(unsigned __int8 *)(v3 - 0x24B64731C5A68307 + a1 - 0x31DA078F262445C8))) & 1)
                                     * ((((v2 - 253) | 0xA02) + 19972139) & 0xFECF3CEE ^ 0xC27)) ^ ((v2 - 253) | 0xA02))))();
}

uint64_t sub_22B38E868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t),int a29,int a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v36 = 1948972247 * ((2 * ((v35 - 144) & 0x5AAE7D70) - (v35 - 144) + 626098830) ^ 0x90CF7760);
  *(_DWORD *)(v35 - 128) = v33 - v36 - 2711;
  *(void *)(v35 - 136) = a33;
  *(_DWORD *)(v35 - 144) = v36 + a30 + 372442450;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v33 ^ 0x327)))(v35 - 144);
  return a28(v37);
}

void sub_22B38E8F8()
{
  *uint64_t v1 = v0;
}

uint64_t sub_22B38E91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(a14 + v15) = v18;
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (int)(((((((v16 - 206) | 0x92u) - 230) & v14) != 8)
                                     * ((((v16 - 206) | 0x92) + 1890886369) & 0x8F4B5EEF ^ 0x36B)) ^ ((v16 - 206) | 0x92))))();
}

uint64_t sub_22B38E988(uint64_t a1, uint64_t a2, int a3)
{
  int v6 = v5 + 2140510573 + ((a3 - 1654804717) & 0x62A255EC);
  BOOL v8 = v6 > 1223742367 || v6 < v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((3086 * v8) ^ a3)))();
}

uint64_t sub_22B38E9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unint64_t a32)
{
  if (v35 == 1187837915 || v35 == 1187837918)
  {
    int v37 = (STACK[0x278] - 1157775489) & 0x45023E7F;
    LOBYTE(STACK[0x1867]) = LOBYTE(STACK[0x1857]) - ((2 * LOBYTE(STACK[0x1857])) & 0x55) + 42;
    LOBYTE(STACK[0x1866]) = LOBYTE(STACK[0x1856]) - ((2 * LOBYTE(STACK[0x1856])) & 0x55) + 42;
    LOBYTE(STACK[0x1865]) = LOBYTE(STACK[0x1855]) - ((v37 ^ 6) & (2 * LOBYTE(STACK[0x1855]))) + 42;
    LOBYTE(STACK[0x1864]) = LOBYTE(STACK[0x1854]) - ((2 * LOBYTE(STACK[0x1854])) & 0x55) + 42;
    LOBYTE(STACK[0x1863]) = LOBYTE(STACK[0x1853]) - ((2 * LOBYTE(STACK[0x1853])) & 0x55) + 42;
    LOBYTE(STACK[0x1862]) = LOBYTE(STACK[0x1852]) - ((2 * LOBYTE(STACK[0x1852])) & 0x55) + 42;
    LOBYTE(STACK[0x1861]) = LOBYTE(STACK[0x1851]) - ((2 * LOBYTE(STACK[0x1851])) & 0x55) + 42;
    LOBYTE(STACK[0x1860]) = LOBYTE(STACK[0x1850]) - ((2 * LOBYTE(STACK[0x1850])) & 0x55) + 42;
    LOBYTE(STACK[0x185F]) = LOBYTE(STACK[0x184F]) - ((2 * LOBYTE(STACK[0x184F])) & 0x55) + 42;
    LOBYTE(STACK[0x185E]) = LOBYTE(STACK[0x184E]) - ((2 * LOBYTE(STACK[0x184E])) & 0x55) + 42;
    LOBYTE(STACK[0x185D]) = LOBYTE(STACK[0x184D]) - ((2 * LOBYTE(STACK[0x184D])) & 0x55) + 42;
    LOBYTE(STACK[0x185C]) = LOBYTE(STACK[0x184C]) - ((2 * LOBYTE(STACK[0x184C])) & 0x55) + 42;
    LOBYTE(STACK[0x185B]) = LOBYTE(STACK[0x184B]) - ((2 * LOBYTE(STACK[0x184B])) & 0x55) + 42;
    LOBYTE(STACK[0x185A]) = LOBYTE(STACK[0x184A]) - ((2 * LOBYTE(STACK[0x184A])) & 0x55) + 42;
    LOBYTE(STACK[0x1859]) = LOBYTE(STACK[0x1849]) - ((2 * LOBYTE(STACK[0x1849])) & 0x55) + 42;
    int v35 = STACK[0x464];
    char v38 = LOBYTE(STACK[0x1848]) - ((2 * LOBYTE(STACK[0x1848])) & 0x54) + 42;
  }
  else
  {
    int v37 = 2 * (STACK[0x278] ^ 0x97A);
    LOBYTE(STACK[0x1867]) = STACK[0x1847];
    LODWORD(STACK[0x1863]) = STACK[0x1843];
    STACK[0x185B] = STACK[0x183B];
    LOWORD(STACK[0x1859]) = STACK[0x1839];
    char v38 = STACK[0x1838];
  }
  LOBYTE(STACK[0x1858]) = v38;
  unint64_t v39 = STACK[0x500];
  int v40 = STACK[0x350];
  unsigned int v41 = (2 * LODWORD(STACK[0x350])) & 0x8070B06E;
  int v42 = ((~(v36 - 192) & 0x12E25139 | (v36 - 192) & 0xED1DAEC6) ^ 0xE3E97F7C) * v33;
  STACK[0x1980] = a28;
  STACK[0x1960] = (unint64_t)&STACK[0x1858];
  STACK[0x1968] = a32;
  STACK[0x1970] = v34;
  LOBYTE(STACK[0x1940]) = (((~(v36 + 64) & 0x39 | (v36 + 64) & 0xC6) ^ 0x7C) * v33) ^ 0xF9;
  *(_DWORD *)(v36 - 172) = ((v37 + 1822927253) & 0x93584EDF ^ 0x40385AF0) + v40 + v42 - v41;
  *(_DWORD *)(v36 - 168) = v37 - v42 - 736;
  *(_DWORD *)(v36 - 136) = v42 + v35 - 890639024;
  STACK[0x1948] = v39;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (v37 + 1591)))(v36 - 192);
  unint64_t v44 = STACK[0x270];
  int v45 = *(_DWORD *)(v36 - 176);
  LODWORD(STACK[0x290]) = v45;
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * (((v45 == -604050357) * (v37 - 2637)) ^ v37)))(v43);
}

uint64_t sub_22B38ED08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v71 = *(void *)(a7 + 168);
  STACK[0x248] = v71;
  int v72 = *(unsigned __int8 *)(v71 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v72 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70
  }
                                                                                  + 8
                                                                                  * (((*(_DWORD *)(STACK[0x248]
                                                                                                 - 0x2970AB8229FC3CD2) == 326024231)
                                                                                    * ((a8 - 1355) ^ 0x737)) ^ (a8 - 1490))))(a1, 4062695256, 3864689450, 2327002140, 1951924424);
  if (v72 != 1) {
    JUMPOUT(0x22B38EE80);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70
                                                                                + 8
                                                                                * ((14
                                                                                  * (*(_DWORD *)(STACK[0x248]
                                                                                               - 0x2970AB8229FC3CD2) != a70 + 326023051)) ^ (a8 + 111))))(a1, 2445589077, 197194453, 2327002140, 1951924424);
}

uint64_t sub_22B38EEC0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((114 * (v1 + 1600651303 == ((v0 - 1897) | 0x401) - 1802552220)) ^ (v0 - 1365))))();
}

uint64_t sub_22B38EF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unint64_t *a15, int a16)
{
  a15 = &STACK[0x2B48C588999CF071];
  a14 = 377 - 225134719 * ((&a14 + 395514520 - 2 * ((unint64_t)&a14 & 0x17931298)) ^ 0x16357B2);
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 32752))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((4001 * (a16 == -604050357)) ^ 0x365u)))(v17);
}

uint64_t sub_22B38EFDC@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  *(_DWORD *)(v10 - 208) = a5 + 1;
  *(_DWORD *)(v10 - 216) = a5 + 10;
  v18.val[1].i64[0] = a5 & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a5 - 1) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a5 + 14) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)a5 + 13) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)a5 + 12) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)a5 + 11) & 0xF;
  v19.val[0].i64[0] = *(_DWORD *)(v10 - 216) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)a5 + 9) & 0xF;
  v19.val[1].i64[0] = ((_BYTE)a5 + 8) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)a5 + 7) & 0xF;
  unsigned int v11 = a2 + a1 + a3;
  v19.val[2].i64[0] = ((_BYTE)a5 + 6) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)a5 + 4) & 0xF;
  uint64_t v12 = *(void *)(v10 - 232);
  v19.val[3].i64[1] = ((_BYTE)a5 + 3) & 0xF;
  v13.i64[0] = 0x6767676767676767;
  v13.i64[1] = 0x6767676767676767;
  uint64_t v14 = v11 & ((a4 + 477) - 3698);
  v18.val[0].i64[0] = v14;
  v18.val[0].i64[1] = *(_DWORD *)(v10 - 208) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v18, (int8x16_t)xmmword_22B4975D0).u64[0];
  v19.val[2].i64[1] = (a5 + 5) & 0xF;
  v15.i64[1] = vqtbl4q_s8(v19, (int8x16_t)xmmword_22B4975D0).u64[0];
  int8x16_t v16 = vrev64q_s8(vmulq_s8(v15, v13));
  *(int8x16_t *)(*(void *)(v10 - 200) - 15 + v11) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v8 + v14 - 15), *(int8x16_t *)(v5 - 15 + v11)), veorq_s8(*(int8x16_t *)(v6 + v14 - 15), *(int8x16_t *)(v14 + v7 - 14))), vextq_s8(v16, v16, 8uLL));
  return (*(uint64_t (**)(void))(v12 + 8 * ((666 * ((v9 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

uint64_t sub_22B38F14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = v4 + v6;
  *(unsigned char *)(a4 + v10) = v8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((unint64_t)(v10 + 1) < 0x38) * v7) ^ v5 ^ v7)))();
}

void sub_22B38F184()
{
}

uint64_t sub_22B38F18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((a8 + a8 + 432 - 2501) * (v8 != a5)) ^ a8)))();
}

uint64_t sub_22B38F1B4@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((109 * ((LODWORD(STACK[0x324]) ^ v33) != a33 - 1001794259 + (a2 ^ 0x1A19))) ^ a2 ^ 0x1974)))();
}

uint64_t sub_22B38F204(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v13 = v6 - 8 + ((v9 + a4) & v10 ^ (a6 + 1036));
  *(void *)(a2 + v13) = *(void *)(v8 + v13);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 == -8) * v11) ^ v9)))();
}

uint64_t sub_22B38F210()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 1040) ^ 0x579) + v0 - 1040) * (*(_DWORD *)(v2 - 144) == *(_DWORD *)(v2 - 148))) ^ v0)))();
}

void sub_22B38F244(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1328090399 * ((-2 - ((a1 | 0x92F5A538) + (~a1 | 0x6D0A5AC7))) ^ 0x92D93EFD);
  uint64_t v2 = (char *)*(&off_26DE9F480 + v1 - 2206) - 8;
  uint64_t v3 = *(void *)(a1 + 8);
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 | 0x5F3)])((char *)*(&off_26DE9F480 + (v1 ^ 0xAA2)) - 4, sub_22B3AC7C8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B38F30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, int a17, uint64_t a18, int *a19, uint64_t a20,int a21,unsigned int a22)
{
  uint64_t v28 = *(void *)(v22 + 16);
  unsigned int v29 = 2009815553 * ((((2 * &a18) | 0x5532C93E) - &a18 - 714695839) ^ 0xDB924ADA);
  LODWORD(a19) = 673189865 - v29;
  HIDWORD(a19) = (v27 - 470) ^ v29;
  a18 = v26;
  uint64_t v38 = 8 * (v27 + 1595);
  (*(void (**)(uint64_t *))(v24 + v38))(&a18);
  unsigned int v30 = *v25 - ((2 * *v25 + 126290330) & 0xFFFAD9F8) - 2084507191;
  unsigned int v31 = 1328090399
      * ((((&a18 | 0xA794F5C2) ^ 0xFFFFFFFE) - (~&a18 | 0x586B0A3D)) ^ 0xA7B86E07);
  a18 = v23 - 0xCEE60076C35A115;
  LODWORD(a19) = v27 + 230933623 - v31;
  HIDWORD(a19) = v30 ^ v31;
  (*(void (**)(uint64_t *))(v24 + 8 * (v27 ^ 0x658)))(&a18);
  unsigned int v32 = 1328090399
      * (((&a18 | 0x79AD9D89) - &a18 + (&a18 & 0x86526270)) ^ 0x867EF9B3);
  unsigned int v33 = (*(_DWORD *)(v23 - 0x21AEEC4F795AEEB3)
       - ((2 * *(_DWORD *)(v23 - 0x21AEEC4F795AEEB3) + 126290330) & 0xFFFAD9F8)
       - 2084507191) ^ v32;
  LODWORD(a19) = v27 + 230933623 - v32;
  HIDWORD(a19) = v33;
  a18 = v23 - 0xCEE60076C35A111;
  (*(void (**)(uint64_t *))(v24 + 8 * (v27 + 1592)))(&a18);
  LODWORD(a18) = (v27 + 425455272) ^ (225134719
                                    * ((&a18 & 0x8C623CBC | ~(&a18 | 0x8C623CBC)) ^ 0x656D8669));
  a19 = (int *)(v23 + 0xEB5904C50728E80);
  a20 = v26;
  (*(void (**)(uint64_t *))(v24 + 8 * (v27 ^ 0x19F3)))(&a18);
  unsigned int v34 = 1734664879 * ((((2 * &a18) | 0x7D3242DA) - &a18 + 1097260691) ^ 0x91420977);
  LODWORD(a18) = -38327932 - v34;
  a21 = v27 - v34 + 979;
  a22 = v34 - 635067263;
  a19 = &a14;
  a20 = v26;
  (*(void (**)(uint64_t *))(v24 + 8 * (v27 ^ 0x1997)))(&a18);
  *(_DWORD *)(v23 - 0x21AEEC4F795AEEC7) += a14;
  *(_DWORD *)(v23 - 0x21AEEC4F795AEEC3) += a15;
  *(_DWORD *)(v23 - 0x21AEEC4F795AEEBFLL) += a16;
  *(_DWORD *)(v23 - 0x21AEEC4F795AEEBBLL) += a17;
  unsigned int v35 = 2009815553 * (((&a18 | 0xC9A84498) - (&a18 & 0xC9A84498)) ^ 0x38A36ADD);
  LODWORD(a19) = 673189855 - v35;
  HIDWORD(a19) = (v27 - 470) ^ v35;
  a18 = v23 - 0x21AEEC4F795AEEC7;
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v24 + v38))(&a18);
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD5ALL) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC7)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC7)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD59) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC6)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC6)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD58) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC5)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC5)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD57) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC4)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC4)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD56) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC3)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC3)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD55) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC2)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC2)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD54) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC1)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC1)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD53) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEC0)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEC0)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD52) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEBFLL)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEBFLL)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD51) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEBELL)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEBELL)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD50) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEBDLL)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEBDLL)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD4FLL) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEBCLL)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEBCLL)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD4ELL) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEBBLL)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEBBLL)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD4DLL) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEBALL)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEBALL)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD4CLL) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEB9)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEB9)) & 0x55)
                                         + 42;
  *(unsigned char *)(v28 - 0x2DB0D864EA38AD4BLL) = *(unsigned char *)(v23 - 0x21AEEC4F795AEEB8)
                                         - ((2 * *(unsigned char *)(v23 - 0x21AEEC4F795AEEB8)) & 0x55)
                                         + 42;
  *(_OWORD *)(v23 - 0x21AEEC4F795AEEC7) = 0u;
  *uint64_t v25 = 2084338483;
  *(_DWORD *)(v23 - 0x21AEEC4F795AEEB3) = 2084338483;
  *(_OWORD *)(v23 - 0x21AEEC4F795AEEAFLL) = 0u;
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * v27))(v36);
}

uint64_t sub_22B38FA6C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  BOOL v71 = v68 > 0x85FD9414;
  *(unsigned char *)(a62 + (a1 - 1538799125)) = *(unsigned char *)(v63 + (a1 - 1538799125)) ^ *(unsigned char *)(v65 + ((a1 - 1538799125) & 0xFLL)) ^ *(unsigned char *)((((_BYTE)a1 - 21) & 0xF) + v66 + 1) ^ *(unsigned char *)((((_BYTE)a1 - 21) & 0xF) + v64 + 2) ^ (-93 * ((a1 - 21) & 0xF)) ^ 0x2A;
  unsigned int v72 = (v67 ^ 0x1E4A3E64) + a1;
  uint64_t v73 = (a1 + 1);
  int v74 = v71 ^ (v72 < v62);
  BOOL v75 = v72 < v69;
  if (!v74) {
    BOOL v71 = v75;
  }
  return (*(uint64_t (**)(uint64_t))(v70 + 8 * ((1278 * v71) ^ v67)))(v73);
}

void IPaI1oem5iL()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 - dword_2683F6238) ^ 0x4D)) ^ byte_22B48A680[byte_22B47E880[(-121 * ((qword_2683EB0F0 - dword_2683F6238) ^ 0x4D))] ^ 0x45])
                + 221);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((*off_26DE9F610)[*((unsigned __int8 *)off_26DE9FB78
                                                                   + (-121
                                                                                     * ((qword_2683EB0F0 + v1) ^ 0x4D))
                                                                   - 8) ^ 0xE1] ^ (-121 * ((qword_2683EB0F0 + v1) ^ 0x4D)))
                + 145);
  unint64_t v3 = 2059148423 * (v1 ^ (unint64_t)&v5 ^ 0xD2361EE8B96764DLL ^ *(void *)(v2 - 4));
  *(void *)(v0 - 4) = v3;
  *(void *)(v2 - 4) = v3;
  unsigned int v6 = (1292559617 * ((((2 * &v6) | 0xE0CEECB0) - &v6 + 261654952) ^ 0x57341E31)) ^ 0x9B42BBAD;
  LOBYTE(v2) = -121 * (*(_DWORD *)(v0 - 4) ^ 0x4D ^ *(_DWORD *)(v2 - 4));
  uint64_t v4 = (char *)*(&off_26DE9F480
               + ((-121 * ((qword_2683EB0F0 + dword_2683F6238) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 + dword_2683F6238) ^ 0x4D))] ^ 0x2A])
               + 198)
     - 8;
  (*(void (**)(unsigned int *))&v4[8
                                            * (*((unsigned char *)off_26DE9FFD8
                                                                + (*((unsigned __int8 *)off_26DE9FEC8
                                                                   + v2
                                                                   - 4) ^ 0x4Fu)
                                                                - 8) ^ v2)
                                            + 30136])(&v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B38FD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = (a14 ^ v15) - ((2 * (a14 ^ v15)) & 0xBBD5D166) + 1575676083;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((44
                                * (((2 * v17) & 0xDF7BCBFC ^ 0x9B51C164)
                                 + ((v14 - 1552) ^ 0xD43 ^ v17 ^ 0x32570931)
                                 - 134578188 == 1740137970)) ^ v14)))();
}

void sub_22B38FDBC()
{
}

uint64_t sub_22B38FDC8(uint64_t a1, uint64_t a2)
{
  *(void *)(v6 - 228 + v4 + a2) = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v2 & 0xFFFFFFFFFFFFFFF8) == 8) * (v3 + 296)) ^ (v3 + 1938))))();
}

void sub_22B38FE10()
{
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x228]) ^ 0xCCC8CC87;
  *(_DWORD *)(v0 - 256) = LODWORD(STACK[0x21C]) ^ 0x99DCD3C6;
  LODWORD(STACK[0x2BC]) = LODWORD(STACK[0x224]) ^ 0xCC6AEEA8;
  LODWORD(STACK[0x2B4]) = LODWORD(STACK[0x220]) ^ 0x45C5E8A0;
  JUMPOUT(0x22B35CC10);
}

uint64_t sub_22B38FE64@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v4 == ((v5 - 2026) | v2) + v1) * (((v5 + 1045) | v3) - 720)) ^ v5)))();
}

void sub_22B38FE98(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    BOOL v2 = *(void *)a1 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  int v1 = *(_DWORD *)(a1 + 24) - 1734664879 * ((((2 * a1) | 0x2F6E0E76) - a1 - 397870907) ^ 0x386C2F21);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B38FF74(uint64_t result)
{
  *(_DWORD *)(result + 12) = 484148407;
  return result;
}

uint64_t sub_22B38FF84()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 55) ^ ((v0 & 8) == ((v1 - 645519101) & 0x2679D6FF) - 1201)) & 1 | v1)))();
}

uint64_t sub_22B38FFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (a8 | (4
                                                                             * (((v8 < 0x10) ^ (a8 + (a8 ^ 0xE1))) & 1)))))(a1, a2, a3, 0);
}

uint64_t sub_22B38FFFC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v7 = *(unsigned __int8 *)(a1 + v2 + v5) ^ 0x2A;
  int v8 = ((*(unsigned __int8 *)(v2 + v5 + a1 + (a2 - 859) - 52) ^ 0x2A) << 16) | ((*(unsigned __int8 *)(a1 + v2 + v5 + 3) ^ 0x2A) << 24) | v7 | ((*(unsigned __int8 *)(a1 + v2 + v5 + 1) ^ 0x2A) << 8);
  *(_DWORD *)(v6 + v2 + v5) = v8 + v4 - 2 * (v8 & 0x5BFEEC5B ^ v7 & 0x10);
  return (*(uint64_t (**)(void))(v3 + 8 * ((3650 * ((unint64_t)(v2 + 4 + v5) < 0x40)) ^ a2)))();
}

void sub_22B390098()
{
}

void sub_22B3902B8()
{
}

uint64_t sub_22B3902C0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 ^ 0x322) + (a3 ^ 0xC2A) - 3995) * (v3 < 8)) ^ a3)))();
}

uint64_t sub_22B3902F8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((173 * (a1 + ((v2 - 3860) | 0x459u) + 50400138 < v1 + v2)) ^ v2)))();
}

uint64_t sub_22B39034C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60
                                                              + 8
                                                              * ((((a35 & 0xD84D32DC ^ 0x72D57E97) > 0x72D57EBF)
                                                                * ((a35 ^ 0x27B2CB6A) - 1449)) ^ 0x62C)))(a58, a60, 1205946665);
}

void sub_22B3903C8()
{
}

#error "22B390654: call analysis failed (funcsize=87)"

uint64_t sub_22B390658@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 == 0) * (v1 - 3900)) ^ v1)))();
}

uint64_t sub_22B390688(int a1)
{
  uint64_t v8 = v5 + v4 + a1 + ((v3 - 357136232) & 0x6C03AEDBu);
  long long v9 = *(_OWORD *)(v6 + v8 - 15);
  long long v10 = *(_OWORD *)(v6 + v8 - 31);
  uint64_t v11 = v1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((2054 * ((v2 & 0xFFFFFFE0) == 32)) ^ (v3 + 1455041196))))();
}

uint64_t sub_22B3906FC@<X0>(uint64_t a1@<X8>, int8x16_t a2@<Q1>)
{
  *(int8x16_t *)(v5 + a1 + 24) = veorq_s8(*(int8x16_t *)(v2 + a1), a2);
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * (a1 + (v4 - 524) == 1338)) ^ v4)))();
}

void sub_22B390738()
{
  STACK[0x2F0] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3150));
  JUMPOUT(0x22B3A2CA0);
}

uint64_t sub_22B39075C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((51 * (((*(unsigned __int8 *)(v2 + 12) > 1u) ^ (v0 - 15)) & 1)) ^ v0)))();
}

uint64_t sub_22B390794()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3282 * (((v1 == 0x87BE88A0) ^ (v0 - 126)) & 1)) ^ v0)))();
}

uint64_t sub_22B3907E8@<X0>(int a1@<W8>, uint8x8_t a2@<D2>, long long a3, uint64_t a4, long long a5)
{
  uint64_t v6 = (a1 + 1371) | 0x448u;
  a2.i32[0] = *(_DWORD *)((char *)&a3 + v6 - 3139);
  int16x8_t v7 = (int16x8_t)vmovl_u8(a2);
  *(int16x4_t *)v7.i8 = vrev64_s16(*(int16x4_t *)v7.i8);
  *(int16x4_t *)v7.i8 = vrev64_s16(vadd_s16(vsub_s16(*(int16x4_t *)v7.i8, (int16x4_t)vand_s8((int8x8_t)vadd_s16(*(int16x4_t *)v7.i8, *(int16x4_t *)v7.i8), (int8x8_t)0x54005400540054)), (int16x4_t)0x2A002A002A002ALL));
  *(_DWORD *)((char *)&a5 + v6 - 3143) = vmovn_s16(v7).u32[0];
  return (*(uint64_t (**)(void))(v5 + 8 * (a1 ^ 0xEBA)))();
}

uint64_t sub_22B390864(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((26 * (a1 + a3 + 1091583556 < ((1312 * (v3 ^ 0xB2F)) ^ (v3 - 229)))) ^ v3)))();
}

uint64_t sub_22B3908EC@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((2940
                                * ((((a3 == v14) ^ 0x2F) + 2 * (a3 == v14)) == ((a14 & 0xCD) + 103))) ^ (a1 + a2 - 943))))();
}

uint64_t sub_22B39094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  *(_DWORD *)(v50 - 132) = v48 + ((((v50 - 144) | 0x1F30DB63) - ((v50 - 144) & 0x1F30DB63)) ^ 0xE0E3BF59) * v49 + 2727;
  *(void *)(v50 - 128) = a46;
  *(void *)(v50 - 120) = a45 + 12;
  *(void *)(v50 - 144) = &STACK[0x1AD13B37B101957E];
  (*(void (**)(uint64_t))(v47 + 8 * (v48 + 4016)))(v50 - 144);
  return (*(uint64_t (**)(uint64_t))(v47
                                            + 8
                                            * ((3978
                                              * (*(_DWORD *)(v50 - 136) == (v48 ^ 0x1B ^ (v46 - 1989) ^ (v48 + 1974)))) ^ v48)))(a23);
}

void sub_22B390A14()
{
}

uint64_t sub_22B390B18(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 + a1 + ((v2 + 1486294782) & 0xA768EE9F ^ 0x98010700) < 8)
                                * (((v2 + 863) | 0x190) - 2500)) ^ v2)))();
}

uint64_t sub_22B390BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((((v23 - 2023) ^ 0x1C27BED2) != 472366794) | (2
                                                                                            * (((v23 - 2023) ^ 0x1C27BED2) != 472366794))) ^ (v23 + 1829))))(a23);
}

uint64_t sub_22B390BF0(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v14 = (4 * a4) ^ 0x199C;
  int v15 = -a1;
  uint64_t v16 = v11 + v10 + v12 - a1 + ((8 * v14) ^ 0x3920u);
  *(void *)(v8 - 7 + v16) = *(void *)(a8 - 7 + v16);
  return (*(uint64_t (**)(void))(v13 + 8 * ((193 * (((v14 - 1920) & v9) + v15 != 8)) ^ v14)))();
}

uint64_t sub_22B390C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 + 1072834745 < (a14 - 180798364);
  if ((a14 - 180798364) < 0x60163F0A != (v14 + 1072834745) < 0x60163F0A) {
    BOOL v17 = (a14 - 180798364) < 0x60163F0A;
  }
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((122 * (((v15 + 73) ^ v17) & 1)) ^ v15)))(4287791429);
}

uint64_t sub_22B390CCC()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((450 * (v2 - 1 < ((47 * (v1 ^ 0xED5)) ^ 0x935u) + 2147480033)) ^ v1)))();
}

uint64_t sub_22B390D18()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((56 * ((v1 & 8) == (((v0 + 354) | 0x122) ^ v0 ^ 0x6BC))) ^ v0)))();
}

uint64_t sub_22B390D5C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  unsigned int v6 = *(_DWORD *)((char *)&STACK[0x260] + ((v4 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + v2)) = (HIBYTE(v6) ^ 0x11) - ((v6 >> 23) & 0x54) + 42;
  *(unsigned char *)(a1 + (v4 + v2 + 1)) = ((v6 >> ((v3 + 90) ^ 0x26)) ^ 0x95)
                                               - ((2 * (v6 >> ((v3 + 90) ^ 0x26))) & 0x55)
                                               + 42;
  *(unsigned char *)(a1 + (v4 + v2 + 2)) = (BYTE1(v6) ^ 0x67) + (~(2 * (BYTE1(v6) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v4 + v2 + 3)) = v6 ^ 0x13;
  unsigned int v7 = LODWORD(STACK[0x2BC]) - 1151559081;
  BOOL v8 = v7 < a2;
  BOOL v9 = v4 - 2116349952 < v7;
  if (v4 - 2116349952 < a2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((3118 * v9) ^ v3)))();
}

void sub_22B390E48()
{
}

uint64_t sub_22B390EC8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v2 + 9172160) & 0xFF740776 ^ 0xF61 ^ (39 * (v2 ^ 0x95B))) * (v1 == v0)) ^ v2)))();
}

void sub_22B390F18()
{
}

uint64_t sub_22B390F24(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((13 * ((a1 + 1522) ^ 0x811) + 1993) ^ ((a1 - 320) | 0x898)) * (v1 == v2)) | (a1 + 1522))))();
}

uint64_t sub_22B390F68@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  unint64_t v51 = ((unint64_t)&a50 ^ 0x7FFC775FFE7EFEFFLL)
      - 0x5604620E10088BFFLL
      + ((2 * (void)&a50) & 0xFFF8EEBFFCFDFDF0);
  *(unsigned char *)(a1 + 141) = (v51 ^ 0xBA) * (v51 + 17);
  *(unsigned char *)(a1 + 140) = ((v51 | 1) ^ ((a2 ^ 0x77) + 118)) * (v51 + 18);
  return (*(uint64_t (**)(void))(v50 + 8 * a2))();
}

uint64_t sub_22B391018(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((211 * (v3 + 1 == v5 + 16)) ^ a3)))();
}

uint64_t sub_22B3910F4()
{
  *(_DWORD *)(*(void *)(v2 - 0x281D12643933BF1BLL) + 4 * (v5 + v3) - 0x54EEBA8C0E75CADCLL) = v0
                                                                                               - (((v1 + 1877537782) & 0x90170FDE ^ (v4 - 2453)) & (2 * v0 + 668516782))
                                                                                               + 1327308932;
  return sub_22B391168();
}

void sub_22B391168()
{
  *(_DWORD *)(v0 - 0x281D12643933BF1FLL) = (((v2 + v1) * (v3 - 1400692510)) ^ 0x3EDFE8F1)
                                         - 134299648
                                         + ((2 * (v2 + v1) * (v3 - 1400692510)) & 0x7DBFD1E2);
}

uint64_t sub_22B3911F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((((v10 == 0) ^ a9 ^ 0xF1) & 1) * ((a9 ^ 0xAF1) - 31)) ^ ((a9 ^ 0xAF1) + 1759))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22B39123C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((124 * (v1 > 0x82)) ^ (v0 + 1627))))();
}

uint64_t sub_22B391260(uint64_t result)
{
  int v6 = ((v5 + 2116) ^ 0x6DBD5C37) - v4;
  if ((v1 + v2 - 1) < 0x7FFFFFFF) {
    int v6 = v4;
  }
  *int v3 = v6;
  *(_DWORD *)(result + 4) = 1556957014;
  return result;
}

uint64_t sub_22B3912F8()
{
  unsigned int v3 = v1 - ((2 * v1 + 1963187726) & 0xB48BE1B4) - 1798840351;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 ^ (468
                                     * (((v3 << (((v2 ^ 0xBA) - 93) ^ 8)) & 0xF77E55DE ^ 0xB40A4194)
                                      + (v3 ^ 0x21FADA35)
                                      + 1970790335 != 1899432622)))))();
}

uint64_t sub_22B391398(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2605 * (((((a1 - 394) | 0x880) - 2408) & v1) == (a1 ^ 0x167) - 1005)) ^ a1)))();
}

uint64_t sub_22B3913DC@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  unsigned int v6 = (v5 ^ 0x77C20DFE) + a1;
  int v7 = (a4 + 1786872146 < (v5 ^ 0xFF5u) - 861560991) ^ (v6 < 0xCCA5A5A9);
  BOOL v8 = v6 < a4 + 1786872146;
  if (v7) {
    BOOL v8 = a4 + 1786872146 < (v5 ^ 0xFF5u) - 861560991;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((116 * v8) ^ v5)))();
}

uint64_t sub_22B391474(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(*v12 + (a7 + v10 + 364)) = *(unsigned char *)(*v12 + (v9 + a1));
  return (*(uint64_t (**)(void))(v11 + 8 * ((v7 != 1345165157) ^ v8)))();
}

uint64_t sub_22B3914E0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 200) = a2 + 104;
  unint64_t v2 = *(void *)(a1 + 160);
  unsigned int v3 = (uint64_t (*)(void))STACK[0x2C0];
  STACK[0x240] = v2;
  *(void *)(a1 + 160) = v2 - 112;
  return v3();
}

uint64_t sub_22B391504(uint64_t a1, int a2, uint64_t a3)
{
  BOOL v6 = v4 < v3;
  unint64_t v7 = a3 - 0x386FBD8EB65DEF54;
  int v8 = v6 ^ (v7 < v3);
  BOOL v9 = v7 < v4;
  if (!v8) {
    BOOL v6 = v9;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((a2 - 1047) ^ (111 * v6))))();
}

void sub_22B391574(char a1@<W8>)
{
  if ((a1 & 2) != 0) {
    int v1 = 1187837911;
  }
  else {
    int v1 = 1187837912;
  }
  LODWORD(STACK[0x464]) = v1;
  LODWORD(STACK[0x258]) = 91771734;
  LODWORD(STACK[0x260]) = 260459994;
  STACK[0x240] = (unint64_t)&STACK[0xD90];
  STACK[0x248] = (unint64_t)&STACK[0xE10];
  STACK[0x250] = (unint64_t)&STACK[0xE90];
  JUMPOUT(0x22B35298CLL);
}

uint64_t sub_22B3915BC@<X0>(unsigned int a1@<W8>)
{
  int v4 = v2 + 3;
  if ((a1 & 0x20) == 0) {
    int v4 = v2;
  }
  LODWORD(STACK[0x46C]) = v4;
  unint64_t v5 = STACK[0x278];
  if (v1 > 595452063)
  {
    if (v1 == 595452064 || v1 == 1745071249) {
      goto LABEL_11;
    }
    int v6 = 1204431388;
  }
  else
  {
    if (v1 == -570041165 || v1 == 120981146) {
      goto LABEL_11;
    }
    int v6 = 404001702;
  }
  if (v1 != v6) {
    JUMPOUT(0x22B391590);
  }
LABEL_11:
  *(_OWORD *)&STACK[0x1880] = xmmword_22B497620;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((25 * (v5 ^ 0xC56) - 64) * ((a1 >> 5) & 1)) ^ (v5 - 702))))();
}

uint64_t sub_22B3916B8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((49
                                * ((((v0 + 540) ^ 0xEEDC7798) & (2 * v1) ^ 0xEC0C2484) + (v1 ^ 0x1F9ADB5) + 1604056384 != (((v0 - 1576) | 0x204) ^ 0x570A3700))) ^ v0)))();
}

uint64_t sub_22B391730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((a12 - 639083262 < (a6 ^ 2u) + 2147483300) * (a6 + 3511)) ^ a6)))();
}

uint64_t sub_22B39177C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((3497 * ((((v3 + 1823) | 0x441u) - 3150) * v2 + 4 == v1 + v0)) ^ v3)))();
}

uint64_t sub_22B3917B8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10 = ((v7 + 1209248077) & (a2 + 3568) ^ 0xF33) + v6;
  BOOL v12 = v8 == 30 || v10 == (((v7 + 1209248077 + a2) | 0xC88u) ^ a6);
  return (*(uint64_t (**)(void))(v9 + 8 * ((2816 * v12) ^ v7)))();
}

void sub_22B39180C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unint64_t a62)
{
  int v63 = STACK[0x278] - 3155;
  STACK[0x4B8] = a62;
  STACK[0x2F0] = *(void *)(v62 + 8 * v63);
  JUMPOUT(0x22B3A2CA8);
}

uint64_t sub_22B391828@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((a1 == -1) ^ v1 ^ 0x95) & 1) * ((v1 ^ 0x825) - 958)) ^ v1)))();
}

void sub_22B391860()
{
}

uint64_t sub_22B39188C@<X0>(void *a1@<X6>, int a2@<W8>)
{
  LODWORD(STACK[0x424]) = STACK[0x258];
  LODWORD(STACK[0x4A8]) = STACK[0x260];
  a1[14] = STACK[0x240];
  a1[17] = STACK[0x248];
  a1[45] = STACK[0x250];
  a1[20] = STACK[0x268];
  LODWORD(STACK[0x2E4]) = 2;
  a1[60] = 0;
  LODWORD(STACK[0x420]) = 0;
  LODWORD(STACK[0x2E0]) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((107 * (((((a2 + 530) | 0x802) - 3153) & v2) != a2 - 575)) ^ a2)))();
}

uint64_t sub_22B391908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((37 * (v7 - a1 - ((973 * (a6 ^ 0xE8Fu)) ^ 0xDB49B8CE3A5977BALL) < 0x20)) ^ a6 ^ 0x3CBu)))();
}

void sub_22B391960()
{
}

uint64_t sub_22B3919D0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + v8) = v10;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((1607 * ((v7 & 0x38) - (unint64_t)(a1 + 564) == -1410)) ^ a1)))();
}

uint64_t sub_22B391A18()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 29488354) & 0xFE3E07BB ^ 0xFFFFFAA5) + v2 - 2019) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_22B391AC8@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 3310));
  return v3(v1);
}

uint64_t sub_22B391AF8@<X0>(uint64_t a1@<X0>, __int16 a2@<W8>)
{
  BOOL v4 = (unsigned __int16)(*(_WORD *)(a1 + 12) + a2) == 27066;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v4) | (8 * v4)) ^ v2)))();
}

uint64_t sub_22B391B2C@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + (a2 + v19)) = *(unsigned char *)(v20 + v24 - 539235921)
                                     - ((2 * *(unsigned char *)(v20 + v24 - 539235921)) & 0x55)
                                     + 42;
  return (*(uint64_t (**)(void))(v22 + 8 * ((1523 * ((a1 + a2 + 1) < 0x40)) ^ (v23 + v21 - 913))))();
}

uint64_t sub_22B391B98()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((19 * (((v0 == 63) ^ (v1 + 84)) & 1)) ^ v1)))(1327923958);
}

uint64_t sub_22B391BE8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2863 * ((((v2 ^ (2 * a1)) + v4 - (((v2 ^ (2 * a1)) << (v5 + 19)) & v2)) ^ v4) > v1)) ^ v5)))();
}

uint64_t sub_22B391C60()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1142) | 0x409) ^ 0xE67) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B391C94@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v2 - 0x281D12643933BF1BLL) + 4 * (v1 + v5 - 1695004752) - 0x54EEBA8C0E75CADCLL) = *(_DWORD *)(*(void *)(v3 - 0x281D12643933BF1BLL) + 4 * (v1 + v5 - 1695004752) - 0x54EEBA8C0E75CADCLL);
  return (*(uint64_t (**)(void))(a1 + 8 * ((2523 * (v5 - 1 == v4 + 441)) ^ v1)))();
}

uint64_t sub_22B391D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  *(_DWORD *)(a28 - 0x54EEBA8C0E75CADCLL) = 993050541;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v30
                                                                                         + 8
                                                                                         * ((235
                                                                                           * (v29 - 1195882448 >= -1195882447)) ^ (v28 - 3030))))(a1, 2202262078, 0xAB114573F18A3524, 1006379631, 951601199);
}

void sub_22B391DFC()
{
  if (v0 == 1108782072) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 24) = v1;
}

uint64_t sub_22B391E60@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, int a5@<W8>)
{
  unsigned int v14 = a5 + 16;
  uint64_t v15 = v14 - 16;
  unsigned int v16 = (v15 >> 4) - ((v15 >> 4 << v7) & v8) + v9;
  v12[12] = (HIBYTE(v16) ^ v10) - 2 * ((HIBYTE(v16) ^ v10) & v11 ^ HIBYTE(v16) & 1) + 42;
  v12[13] = (a1 ^ BYTE2(v16)) - ((2 * (a1 ^ BYTE2(v16))) & 0x55) + 42;
  v12[14] = (BYTE1(v16) ^ 0x11) + (a2 | ~(v16 >> 7)) + 43;
  v12[15] = v16 ^ a3;
  *(unsigned char *)(v5 + v15) ^= *v12 ^ a4;
  *(unsigned char *)(v5 + v14 - 15) ^= v12[1] ^ a4;
  *(unsigned char *)(v5 + v14 - 14) ^= v12[2] ^ a4;
  *(unsigned char *)(v5 + v14 - 13) ^= v12[3] ^ a4;
  *(unsigned char *)(v5 + v14 - 12) ^= v12[4] ^ a4;
  *(unsigned char *)(v5 + v14 - 11) ^= v12[5] ^ a4;
  *(unsigned char *)(v5 + v14 - 10) ^= v12[6] ^ a4;
  *(unsigned char *)(v5 + v14 - 9) ^= v12[7] ^ a4;
  *(unsigned char *)(v5 + v14 - 8) ^= v12[8] ^ a4;
  *(unsigned char *)(v5 + v14 - 7) ^= v12[9] ^ a4;
  *(unsigned char *)(v5 + v14 - 6) ^= v12[10] ^ a4;
  *(unsigned char *)(v5 + v14 - 5) ^= v12[11] ^ a4;
  *(unsigned char *)(v5 + v14 - 4) ^= v12[12] ^ a4;
  *(unsigned char *)(v5 + v14 - 3) ^= v12[13] ^ a4;
  *(unsigned char *)(v5 + v14 - 2) ^= v12[14] ^ a4;
  *(unsigned char *)(v5 + v14 - 1) ^= v12[15] ^ a4;
  return (*(uint64_t (**)(void))(v13 + 8 * (((4 * (v14 > 0x14F)) | (16 * (v14 > 0x14F))) ^ v6)))();
}

uint64_t sub_22B391E68()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1565 * (v1 != 1331781492)))))();
}

uint64_t sub_22B391F44@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18)
{
  *(&a18 + a1 - 1913594376) = 42;
  return (*(uint64_t (**)(void))(v19 + 8 * ((2914 * ((unint64_t)(a1 - 1913594375) < 0x40)) ^ (v18 + v20))))();
}

void sub_22B391F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x258] = *(void *)(a7 + 128);
  LODWORD(STACK[0x31C]) = 899400664;
  JUMPOUT(0x22B391FC0);
}

uint64_t sub_22B39200C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x290]) = v6 - 381;
  uint64_t v8 = LODWORD(STACK[0x290]);
  unint64_t v9 = 1990461019 * ((~v4 & 0x741679021EE4A47BLL | v4 & 0x8BE986FDE11B5B84) ^ 0x4BD835FB310006F2);
  *(_DWORD *)(v7 - 156) = ((v5 - 1560516777) ^ 0x3C) + v9;
  STACK[0x1950] = v8 - v9;
  STACK[0x1940] = 604092305 - v9;
  *(_DWORD *)(v7 - 184) = v9;
  *(_DWORD *)(v7 - 168) = (v5 - 1084416579) ^ v9;
  *(_DWORD *)(v7 - 164) = v5 - 1560516777 + v9;
  *(_DWORD *)(v7 - 160) = ((v5 - 1560516777) ^ 0xC5) + v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 ^ 0x1C78)))(v7 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * *(int *)(v7 - 180)))(v10);
}

void sub_22B392018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  int v62 = STACK[0x278] - 3120;
  STACK[0x400] = a61;
  STACK[0x2F0] = *(void *)(v61 + 8 * v62);
  JUMPOUT(0x22B3A2CA8);
}

void sub_22B392040()
{
}

uint64_t sub_22B392048(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = a8 + 199;
  uint64_t v14 = (a8 + 530);
  uint64_t v15 = (a8 + 52) | 0x1Du;
  uint64_t v16 = (a2 + a1 + a3);
  unint64_t v17 = *(void *)(v12 - 248);
  unint64_t v18 = v16 + v17 + 1;
  uint64_t v19 = (a2 + a1) & 0xF;
  uint64_t v20 = v19 - v16;
  unint64_t v21 = v8 + v20;
  unint64_t v22 = v19 + v8 + 1;
  unint64_t v23 = v10 + v20 + (v14 ^ 0x5DA);
  unint64_t v24 = v19 + v10 + 5;
  unint64_t v25 = v20 + v9 + 3;
  unint64_t v26 = v9 + v19 + (v15 ^ 0x419);
  BOOL v28 = v22 > v17 && v21 < v18;
  if (v24 > v17 && v23 < v18) {
    BOOL v28 = 1;
  }
  int v31 = v25 < v18 && v26 > v17 || v28;
  return (*(uint64_t (**)(void))(v11 + 8 * ((35 * v31) ^ v13)))();
}

void sub_22B3920F4()
{
  *uint64_t v2 = 0x80000000;
  (*(void (**)(unint64_t))(v1 + 8 * (v0 + 3885)))(STACK[0x200]);
  JUMPOUT(0x22B39213CLL);
}

uint64_t sub_22B3921BC@<X0>(uint64_t a1@<X8>, int8x16_t a2@<Q0>, int8x16_t a3@<Q1>, int8x16_t a4@<Q5>, int8x16_t a5@<Q6>, int8x16_t a6@<Q7>)
{
  uint64_t v20 = 4 * a1;
  uint64_t v21 = v9 + 4 * a1;
  uint64_t v22 = a1 + 4;
  a3.i32[0] = *(_DWORD *)(v9 + (v20 | 4));
  a3.i32[1] = *(_DWORD *)(v9 + (v20 | 8));
  a3.i32[2] = *(_DWORD *)(v9 + (v20 | 0xC));
  int8x16_t v23 = vextq_s8(a2, a3, 0xCuLL);
  int8x16_t v24 = a3;
  v24.i32[3] = *(_DWORD *)(v9 + 4 * v22);
  int8x16_t v25 = vandq_s8(v23, v13);
  int8x16_t v26 = veorq_s8(v24, a4);
  int8x16_t v27 = vandq_s8(v26, a5);
  int8x16_t v28 = veorq_s8(veorq_s8(vandq_s8(v26, v11), v12), (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v27, a6), (int32x4_t)vorrq_s8(v27, (int8x16_t)v10)), v10));
  int32x4_t v29 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v28, v14), (int32x4_t)vorrq_s8(v28, (int8x16_t)v15)), v15), v25), v16);
  v27.i32[0] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + (v20 | 4)) & 1));
  v27.i32[1] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + (v20 | 8)) & 1));
  v27.i32[2] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + (v20 | 0xC)) & 1));
  v27.i32[3] = *(_DWORD *)(v7 + 4 * (v24.i8[12] & 1));
  *(int8x16_t *)uint64_t v21 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v21 + 1588), v27), v19), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v29, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v29, v29), v17)), v18), 1uLL));
  return (*(uint64_t (**)(void))(v8 + 8 * ((23 * (v22 != 224)) ^ v6)))();
}

uint64_t sub_22B3922BC@<X0>(uint64_t a1@<X8>)
{
  int v5 = (char *)(v2 + 4 * v3);
  int8x8x4_t v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return (*(uint64_t (**)(void))(a1 + 8 * ((2427 * (v3 + (v4 - 34) - (v1 & 0x1FFFFFFF8) == 849)) ^ v4)))();
}

uint64_t sub_22B392320@<X0>(int a1@<W8>)
{
  int v6 = a1 + 1560127488;
  unsigned int v7 = (v2 + 1718511202) & 0x999191BC;
  if (*v3 + 1226921743 < 0) {
    int v6 = 995991084 - a1;
  }
  *uint64_t v3 = *v3 - 1278059286 + v6;
  int v8 = v1 - 1850910554;
  BOOL v9 = v8 < 578641296;
  *(_DWORD *)(*(void *)(v4 - 0x281D12643933BF1BLL)
            + 4 * (int)(((127 * (v7 ^ 0x18B)) ^ 0xAAB5096E) + 1430976493)
            - 0x54EEBA8C0E75CADCLL) = *(_DWORD *)(*(void *)(v4 - 0x281D12643933BF1BLL)
                                                + 4 * (int)((v7 ^ 0xBB850D75) + a1 + 1430976493)
                                                - 0x54EEBA8C0E75CADCLL);
  if (v8 < 578641296) {
    BOOL v9 = v8 > -1568842351;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((2273 * v9) ^ v7)))();
}

uint64_t sub_22B39244C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 228 + a2 + a1) = 42;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1958 * ((unint64_t)(a2 + 1 + a1) < 0x40)) ^ (v2 - 519))))();
}

void sub_22B392488(uint64_t a1)
{
  int v1 = 1438293641 * (a1 ^ 0xB8C7557F);
  int v2 = *(_DWORD *)a1 - v1;
  if (*(void *)(a1 + 48)) {
    BOOL v3 = *(void *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  char v6 = v3 || *(void *)(a1 + 8) == 0 || *(_DWORD *)(a1 + 40) + v1 == 1626821684;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B392544()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((506 * ((STACK[0x200] & 0xFFFFFFFE) != ((2 * (v0 ^ 0x4A9) - 6) ^ (v0 + 1986)))) ^ v0)))();
}

uint64_t sub_22B392584()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((22 * (v0 < v2)) ^ 0x886)))();
}

uint64_t sub_22B3925BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v11
                                                    + 8
                                                    * ((((((a6 - v7 - 978) ^ (v6 + 3816)) & v8) == 0)
                                                      * ((a6 - 499) ^ 0x1DF)) ^ a6)))(a1, (v9 - v10));
}

void sub_22B3925F8()
{
}

uint64_t sub_22B39260C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((LODWORD(STACK[0x320]) == 1801476204) ^ v0 ^ 0xB0) & 1) * (v0 - 958)) ^ v0 ^ 0x825)))();
}

uint64_t sub_22B39267C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X5>, int a6@<W8>)
{
  *(unsigned char *)(a5 + a3 + v7) ^= *(unsigned char *)(v8 + a3 + v7);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a6 ^ a4) + v7 >= v6) * (((a6 ^ a2) - 1726) ^ a1)) ^ ((a6 ^ a2) + 1558))))();
}

uint64_t sub_22B3926C8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, uint64_t a6, int a7)
{
  int v12 = v8 ^ 0xE61;
  int v13 = v8 ^ 0xA92;
  unsigned int v14 = (((&a3 | 0x81252914) - (&a3 & 0x81252914)) ^ 0xC8D38F50) * a1;
  a3 = v7;
  a7 = v14 + (v8 ^ 0xE61) - 781;
  a4 = v14 + 1399495954;
  a5 = v14 - 840614962;
  a6 = v9;
  uint64_t v15 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v8 ^ 0x1AA2)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (((*(_DWORD *)(v9 - 0x19157D3ABD2659C6) == v11 + 71 * v13)
                                              * ((v13 + 734) ^ 0xE13)) ^ v12)))(v15);
}

void sub_22B392798()
{
}

void sub_22B3927B4(uint64_t a1)
{
  int v1 = 1328090399 * (((a1 | 0xDE3D9B8C) - a1 + (a1 & 0x21C26473)) ^ 0x21EEFFB6);
  if (*(void *)a1) {
    BOOL v2 = *(_DWORD *)(a1 + 16) - v1 == 1463683367;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

void sub_22B392890()
{
  *(_DWORD *)(v0 - 0x19157D3ABD2659C6) = 604092306;
  JUMPOUT(0x22B3928ACLL);
}

uint64_t sub_22B3928FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v14 + 8 * (((a14 == v17) * (v16 ^ 0xF76 ^ v15 ^ 0xF37)) ^ v16)))();
}

void sub_22B392930()
{
}

void sub_22B39293C()
{
}

void sub_22B39294C()
{
  int v2 = 1948972247 * ((((v1 - 192) | 0x95D5992C) - ((v1 - 192) & 0x95D5992C)) ^ 0x204B6CC2);
  STACK[0x1948] = STACK[0x268];
  *(_DWORD *)(v1 - 192) = (v0 + 514405688) ^ v2;
  *(_DWORD *)(v1 - 172) = -118723830 - v2;
  JUMPOUT(0x22B3929CCLL);
}

void sub_22B392A04()
{
}

uint64_t sub_22B392A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v9 = v7 >= ((a7 - 1586052607) & 0x5E89377Fu) - 306;
  return (*(uint64_t (**)(void))(v8 + 8 * ((4 * v9) | (32 * v9) | a7)))();
}

void sub_22B392AA0(_DWORD *a1@<X8>)
{
  unsigned int v4 = ((v3 - 1146) | 0x403)
     + 658140067 * (*v1 - v2)
     - ((1316280134 * (*v1 - v2) - 1543835688) & 0xD0BE2342)
     - 1168342154;
  *uint64_t v5 = (HIBYTE(v4) ^ 0x68) - 2 * ((HIBYTE(v4) ^ 0x68) & 0x2B ^ HIBYTE(v4) & 1) + 42;
  v5[1] = (BYTE2(v4) ^ 0x5F) - ((2 * (BYTE2(v4) ^ 0x5F)) & 0x55) + 42;
  v5[2] = (BYTE1(v4) ^ 0x11) + (~(v4 >> 7) | 0xAB) + 43;
  v5[3] = v4 ^ 0x8B;
  v1[4] = *a1;
}

uint64_t sub_22B392B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  *(unsigned char *)(*v17 + ((55 * (v15 ^ 0x8C9)) ^ a7) + v14) = -86;
  if (a14 > 0xB6799AE4 != (v14 + 730890332) < 0x4986651B) {
    BOOL v18 = a14 > 0xB6799AE4;
  }
  else {
    BOOL v18 = v14 + 730890332 < a14 + 1233544475;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * (v15 ^ (41 * v18))))();
}

uint64_t sub_22B392C20(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v11 = (a5 + v9 + v8 + a2 - a3);
  *(int8x8_t *)(v6 - 7 + v11) = veor_s8(*(int8x8_t *)(v5 - 7 + v11), (int8x8_t)0x2A2A2A2A2A2A2A2ALL);
  return (*(uint64_t (**)(void))(v10 + 8 * ((a3 - (v7 & 0xFFFFFFF8) == -8) | a5)))();
}

uint64_t sub_22B392C78(uint64_t a1)
{
  int v1 = 1948972247 * ((-2 - ((a1 | 0x5E084211) + (~a1 | 0xA1F7BDEE))) ^ 0x14694800);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = *(_DWORD *)a1 - v1 - 1460438872;
  int v5 = v4
     + (*(_DWORD *)(v3 - 0x2970AB8229FC3CEALL) ^ 0x22253619)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x2970AB8229FC3CEALL) ^ 0x22253619))) & 0x444A6C32)
     + 572864025;
  *(_DWORD *)(v3 - 0x2970AB8229FC3CEALL) = v5;
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + v2 - 196) + ((91 * ((v5 ^ 0x22253619u) < v4)) ^ v2) - 1))();
}

uint64_t sub_22B392D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  unsigned int v48 = a45 - ((2 * a45 - 356928188) & 0xB42E7456) - 814476083;
  unsigned int v49 = ((v48 << (v45 ^ 0x94)) & 0xCEFE0DFC ^ 0x842E0454) + (v48 ^ 0xBD683CD5);
  unsigned int v50 = (v46 + 349987821) & 0xEB2397BB;
  BOOL v52 = (((_BYTE)v49 + 2) & 0xF) != 0 || v49 == 1736378110;
  LODWORD(STACK[0x20C]) = v50;
  uint64_t v53 = *(uint64_t (**)(void))(v47 + 8 * (int)((((v52 ^ (v46 - 1)) & 1) * (v50 ^ 0x7A4)) ^ v46));
  LODWORD(STACK[0x208]) = -42899;
  return v53();
}

void sub_22B392E0C()
{
}

uint64_t sub_22B392E18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_DWORD *a26)
{
  *a26 = 1;
  uint64_t v29 = *v26;
  unint64_t v30 = 1328090399 * ((v28 - 144) ^ 0xD91F873CFFD3643ALL);
  *(_DWORD *)(v28 - 128) = (a1 - 2095177955) ^ v30;
  *(_DWORD *)(v28 - 136) = a1 - 2095177899 - v30;
  *(void *)(v28 - 104) = v30 ^ 0x13FF;
  *(void *)(v28 - 120) = v29 + v30;
  *(_DWORD *)(v28 - 112) = -1328090399 * ((v28 - 144) ^ 0xFFD3643A);
  *(_DWORD *)(v28 - 144) = ((a1 - 2095177899) ^ 0x14) - v30;
  *(_DWORD *)(v28 - 140) = 84358355 - v30 + a1;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (int)(a1 ^ 0x9F8D76CC)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * *(int *)(v28 - 132)))(v31);
}

uint64_t sub_22B392E20()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 1379) | 0xC40) ^ 0xCBC) * (4 * v0 - LODWORD(STACK[0x268]) == -1614647579)) ^ v1)))();
}

void sub_22B392E6C()
{
}

uint64_t sub_22B392F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + 432) = v9;
  *int v8 = 0xD5D5D5D5D5D5D5D5;
  v8[1] = 0x2A2A2A2A2C2A2A38;
  int v12 = 1990461019
      * ((-1207334609 - ((v10 - 192) ^ 0xABBAFE13 | 0xB809892F) + ((v10 - 192) ^ 0xABBAFE13 | 0x47F676D0)) ^ 0xC3A82A4A);
  *(_DWORD *)(v10 - 184) = v12 + v7 + 84387834;
  *(_DWORD *)(v10 - 192) = 1089735501 - v12;
  (*(void (**)(uint64_t))(v11 + 8 * (v7 + 3255)))(v10 - 192);
  LODWORD(STACK[0x320]) = 1801476540;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x270] + 8 * (v7 ^ 0xC68)))(336, 1925803308);
  unint64_t v14 = STACK[0x270];
  STACK[0x3E0] = v13;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (int)(((((v7 + 93) ^ (v13 == 0)) & 1)
                                     * (((v7 + 1603836403) & 0xA0676ED3) - 3085)) ^ v7)))();
}

void sub_22B393090(uint64_t a1)
{
  int v1 = 1292559617 * (((a1 | 0xAE6EDF8C) - (a1 & 0xAE6EDF8C)) ^ 0x93DB7E5);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  int v3 = (unsigned __int16)(*(_WORD *)(a1 + 20) - v1);
  if (*(void *)(a1 + 8)) {
    BOOL v4 = v3 == 17205;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B393174(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((11
                                * (*(_DWORD *)(a1 + 48 * (int)(((v3 - 1401277735) & 0xFFFFDFFA ^ 0x453A7313) + v1)) != -8123525)) | v3)))();
}

void sub_22B3931D8()
{
}

uint64_t sub_22B393264@<X0>(int a1@<W8>, int8x16_t a2@<Q5>)
{
  uint64_t v6 = (const float *)(v5 + 908);
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32(v6);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  uint64_t v9 = (a1 + 130);
  a2.i64[0] = *(void *)(v4 + 4);
  a2.i32[2] = *(_DWORD *)(v5 + 4 * (v9 ^ 0xA55));
  int8x16_t v10 = vextq_s8(v7, a2, 0xCuLL);
  int8x16_t v11 = a2;
  v11.i32[3] = *(_DWORD *)(v4 + 16);
  int32x4_t v12 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v10, v8)), 1uLL), *(int8x16_t *)(v4 - 908));
  v10.i32[0] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v4 + 4) & 1));
  v10.i32[1] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v4 + 8) & 1));
  v10.i32[2] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v5 + 4 * (v9 ^ 0xA55)) & 1));
  v10.i32[3] = *(_DWORD *)(v2 + 4 * (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x4F5578C8u))), vdupq_n_s32(0x27AABC64u)), v10);
  return (*(uint64_t (**)(void))(v3 + 8 * a1))();
}

uint64_t sub_22B393350(uint64_t result)
{
  *(_DWORD *)(result + 16) = -1685946169;
  return result;
}

uint64_t sub_22B393360()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3000 * (LODWORD(STACK[0x36C]) == ((v0 + 1666) | 0x88) - 604053101)) ^ v0)))();
}

uint64_t sub_22B3933A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((3581 * (a6 + 1 == v8 + 32)) ^ v6)))();
}

uint64_t sub_22B39347C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13 = *(unsigned __int8 *)(*v19 + (v15 - 828060099)) ^ v16;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (v18 - 1152)))(a1, (((*(unsigned __int8 *)(*v19 + (v15 - 828060101)) ^ v16) << 24) | ((*(unsigned __int8 *)(*v19 + (v15 - 828060100)) ^ v16) << 16) | (v13 << 8) | *(unsigned __int8 *)(*v19 + (v15 - 828060098)) ^ v16) & 0x5BFEEC4F, v13, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

void sub_22B39348C()
{
}

uint64_t sub_22B3934A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a2 + v6 + a3) = *(unsigned char *)(a5 + v6 + a3) - (((v5 ^ (v7 + 74)) + 2) & (2 * *(unsigned char *)(a5 + v6 + a3))) + 42;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + 1 == a1 + 16) * a4) ^ v5)))();
}

uint64_t sub_22B3934F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,int a22,int a23,int a24)
{
  LODWORD(STACK[0x228]) = a3;
  LODWORD(STACK[0x22C]) = a24;
  STACK[0x230] = a20;
  LODWORD(STACK[0x238]) = a23 - a2 + 1792869030;
  STACK[0x240] = v29 + (a2 - 899400664);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v28 + 8))(a11, a18);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((3896
                                              * (v25
                                               + v27
                                               + v30
                                               - (((v27 + 569822570) & 0xDE093BF7 ^ v24) & (2 * v30))
                                               - 437 == v25)) ^ v27)))(a19);
}

uint64_t sub_22B3935B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  int v29 = a15 - (((1206 * (a28 ^ 0x785)) ^ 0x2BA9A1E8) & (2 * a12)) - 2066994761;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((14
                                * (((2 * v29) & 0xE8F69DFC ^ 0x28A08DC8) + (v29 ^ 0x61AF991B) + 1877933998 == 1684688556)) ^ a28)))();
}

uint64_t sub_22B393680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                         + 8
                                                                                         * (((((((v12 ^ 0xA9A) + 847) ^ (v11 > a10)) & 1) == 0)
                                                                                           * (107 * (v12 ^ 0xA9A) - 2434)) ^ v12)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22B3936E0(int a1, int a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = (a1 + a3 + a2);
  unint64_t v16 = v15 + a10 - 0x55CFAF5ABE15C255 + 1;
  uint64_t v17 = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)a2) & 0xF;
  unint64_t v18 = v10 + v17 - v15;
  uint64_t v19 = v17 + ((a4 - 802) ^ 0x319) - 423;
  unint64_t v20 = v10 + v19;
  unint64_t v21 = v11 + v17 - v15;
  unint64_t v22 = v11 + v19;
  uint64_t v23 = v17 + v12;
  unint64_t v24 = v23 - v15 + 3;
  unint64_t v25 = v23 + 4;
  BOOL v27 = v18 < v16 && v14 < v20;
  int v29 = v21 < v16 && v14 < v22 || v27;
  if (v14 >= v25 || v24 >= v16) {
    int v31 = v29;
  }
  else {
    int v31 = 1;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((58 * v31) ^ a4)))();
}

uint64_t sub_22B393784@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1 + a2;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((unint64_t)(v6 - v4 + 1302056440) < 8) ^ (v2 - 1)) & 1)
                                * ((v2 + 32) ^ 0x301)) ^ v2)))();
}

uint64_t sub_22B3937E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (((((v4 - 198962853) & 0xBDBEAFC) - 2735)
                                                                * (v2 == 783366229)) ^ v4)))(a1, a2, 979839539);
}

uint64_t sub_22B39382C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v10 = v7 + a3 > 41012855 || v7 + a3 < a6;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * (v8 + 1065)) ^ v8)))();
}

uint64_t sub_22B39386C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v4 + v3 - 1740137971) = *(unsigned char *)(a1 + v3 - 1740137971);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((246 * (v3 - 1 == ((v2 - 743) ^ (unint64_t)(v1 + 2059)))) ^ v2)))();
}

uint64_t sub_22B3938B0@<X0>(uint64_t a1@<X8>)
{
  v5.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v5.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  *(int8x16_t *)(v4 + a1 + 24) = veorq_s8(*(int8x16_t *)(v2 + a1), v5);
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 == 48) * (118 * (v1 ^ 0x920) - 123)) ^ v1)))();
}

uint64_t sub_22B3938F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((492 * (((a4 == a5) ^ ((v5 - 22) ^ (v5 - 1))) & 1)) ^ v5)))();
}

uint64_t sub_22B393930@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v6 + v5)) = *(unsigned char *)(v4 + (v6 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1992 * (v3 + a2 + 1456 + v6 - 1481 != a3)) ^ (v3 + a2 + 3006))))();
}

uint64_t sub_22B393974()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(unsigned __int8 *)(STACK[0x208] + 7) == ((v0 - 4) ^ 0xB6))
                                * ((v0 + 747) ^ 0x450)) ^ (v0 - 201))))();
}

uint64_t sub_22B3939C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  uint64_t v55 = (v53 + 1825792278) & 0x932C9AFD;
  v56.i64[0] = 0x5454545454545454;
  v56.i64[1] = 0x5454545454545454;
  v57.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v57.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  uint64_t v58 = a20 + v55 - 653;
  int8x16_t v59 = vrev64q_s8(*(int8x16_t *)(v58 + 148));
  int8x16_t v60 = vextq_s8(v59, v59, 8uLL);
  int8x16_t v61 = vrev64q_s8(*(int8x16_t *)(v58 + 132));
  int8x16_t v62 = vextq_s8(v61, v61, 8uLL);
  int8x16_t v63 = vrev64q_s8(vaddq_s8(vsubq_s8(v60, vandq_s8(vaddq_s8(v60, v60), v56)), v57));
  uint64_t v64 = (int8x16_t *)(&a53 + v55 - 653);
  int8x16_t v65 = vrev64q_s8(vaddq_s8(vsubq_s8(v62, vandq_s8(vaddq_s8(v62, v62), v56)), v57));
  *uint64_t v64 = vextq_s8(v65, v65, 8uLL);
  v64[1] = vextq_s8(v63, v63, 8uLL);
  return (*(uint64_t (**)(void))(v54 + 8 * ((v53 + 1045) ^ 0x1C)))();
}

uint64_t sub_22B393A68(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((330
                                              * (a1 == (((v1 + 36) & 0xEF) + ((v1 - 24) | 0xC6) - 15))) ^ (v1 + 938))))(4294925278);
}

void sub_22B393AC4()
{
}

void sub_22B393B74()
{
}

uint64_t sub_22B393B7C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((167 * ((a3 + 1 + v4) < 0x3C)) ^ v3)))();
}

uint64_t sub_22B393C64(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, uint64_t a20,int *a21,uint64_t a22,int a23,unsigned int a24)
{
  uint64_t v30 = *(void *)(v24 + 16);
  unsigned int v31 = (&a20 ^ 0xEA1737F4) * a2;
  a20 = v27;
  LODWORD(v43) = v31;
  HIDWORD(v43) = v29 + 571 + v31;
  a21 = (int *)(__PAIR64__(HIDWORD(v43), v31) ^ (a3 + 10));
  uint64_t v42 = 8 * (v29 + 3184);
  (*(void (**)(uint64_t *))(v25 + v42))(&a20);
  int v32 = *v28;
  int v33 = (2 * *v28 + 126290330) & 0x195FACE0;
  unsigned int v34 = 1990461019 * ((1195167977 - (&a20 | 0x473CD0E9) + (&a20 | 0xB8C32F16)) ^ 0x97278D9F);
  LODWORD(a20) = v29 + 419026897 - v34;
  a21 = (int *)(v26 + 0x3C6BCDA4B791A925);
  LODWORD(a22) = -1871488195 - v34 + v32 - v33;
  (*(void (**)(uint64_t *))(v25 + 8 * (v29 ^ 0x1356)))(&a20);
  int v35 = *(_DWORD *)(v26 - 0x21AEEC4F795AEEB3);
  unsigned int v36 = 1990461019 * ((&a20 & 0x7CFBD336 | ~(&a20 | 0x7CFBD336)) ^ 0xACE08E40);
  LODWORD(a20) = v29 + 419026897 - v36;
  a21 = (int *)(v26 + 0x3C6BCDA4B791A929);
  LODWORD(a22) = v35 - v36 - 1871488195 - (((v35 << (((v29 - 126) | 0x52) ^ 0x52)) + 126290330) & 0x195FACE0);
  (*(void (**)(uint64_t *))(v25 + 8 * (v29 ^ 0x1356)))(&a20);
  unsigned int v37 = 1734664879 * ((&a20 - 270705894 - 2 * (&a20 & 0xEFDD5B1A)) ^ 0xC0067300);
  LODWORD(a20) = -38327932 - v37;
  a23 = v29 - v37 + 2566;
  a24 = v37 - 635067263;
  a21 = &a16;
  a22 = v27;
  (*(void (**)(uint64_t *))(v25 + 8 * (v29 + 3238)))(&a20);
  *(_DWORD *)(v26 - 0x21AEEC4F795AEEC7) += a16;
  *(_DWORD *)(v26 - 0x21AEEC4F795AEEC3) += a17;
  *(_DWORD *)(v26 - 0x21AEEC4F795AEEBFLL) += a18;
  *(_DWORD *)(v26 - 0x21AEEC4F795AEEBBLL) += a19;
  a22 = v26 + 0x373D3BF342347CACLL;
  a20 = v27;
  LODWORD(a21) = v29
               + 1062498722
               + 1734664879 * ((&a20 & 0x6EEEC58C | ~(&a20 | 0x6EEEC58C)) ^ 0xBECA1269);
  (*(void (**)(uint64_t *))(v25 + 8 * (v29 ^ 0xC94)))(&a20);
  unsigned int v38 = 1866394843
      * ((((&a20 | 0x61EB0458) ^ 0xFFFFFFFE) - (~&a20 | 0x9E14FBA7)) ^ 0x7403CC53);
  a20 = v26 - 0x21AEEC4F795AEEC7;
  LODWORD(a21) = v38 ^ 0x65998515;
  HIDWORD(a21) = v29 + 571 + v38;
  (*(void (**)(uint64_t *))(v25 + v42))(&a20);
  *(unsigned char *)(v30 - 0xD0347404B675195) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC7)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC7)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675194) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC6)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC6)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675193) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC5)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC5)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675192) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC4)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC4)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675191) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC3)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC3)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675190) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC2)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC2)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518FLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC1)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC1)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518ELL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC0)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC0)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518DLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBFLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBFLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518CLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBELL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBELL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518BLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBDLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBDLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518ALL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBCLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBCLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675189) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBBLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBBLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675188) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBALL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBALL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675187) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEB9)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEB9)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675186) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEB8)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEB8)) & 0x55)
                                        + 42;
  a21 = (int *)(v43 ^ 0x65998515);
  a20 = v26 - 0x21AEEC4F795AEEC7;
  (*(void (**)(uint64_t *))(v25 + v42))(&a20);
  LODWORD(a21) = v29
               + 1062498722
               + 1734664879
               * ((804230334
                 - (&a20 ^ 0x123B3484 | 0x2FEF94BE)
                 + (&a20 ^ 0x123B3484 | 0xD0106B41)) ^ 0xEDF077DF);
  a22 = v26 + 0x373D3BF342347CACLL;
  a20 = v27;
  (*(void (**)(uint64_t *))(v25 + 8 * (v29 ^ 0xC94)))(&a20);
  unsigned int v39 = 1866394843 * ((&a20 + 1994524272 - 2 * (&a20 & 0x76E20670)) ^ 0x9CF53184);
  LODWORD(a21) = v39 ^ 0x65998515;
  HIDWORD(a21) = v29 + 571 + v39;
  a20 = v26 - 0x21AEEC4F795AEEC7;
  uint64_t v40 = (*(uint64_t (**)(uint64_t *))(v25 + 8 * (v29 ^ 0xC90)))(&a20);
  *(unsigned char *)(v30 - 0xD0347404B675191) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC7)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC7)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675190) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC6)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC6)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518FLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC5)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC5)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518ELL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC4)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC4)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518DLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC3)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC3)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518CLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC2)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC2)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518BLL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC1)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC1)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B67518ALL) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEC0)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEC0)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675189) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBFLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBFLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675188) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBELL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBELL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675187) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBDLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBDLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675186) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBCLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBCLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675185) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBBLL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBBLL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675184) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEBALL)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEBALL)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675183) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEB9)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEB9)) & 0x55)
                                        + 42;
  *(unsigned char *)(v30 - 0xD0347404B675182) = *(unsigned char *)(v26 - 0x21AEEC4F795AEEB8)
                                        - ((2 * *(unsigned char *)(v26 - 0x21AEEC4F795AEEB8)) & 0x55)
                                        + 42;
  *(_OWORD *)(v26 - 0x21AEEC4F795AEEC7) = 0u;
  *uint64_t v28 = 2084338483;
  *(_DWORD *)(v26 - 0x21AEEC4F795AEEB3) = 2084338483;
  *(_OWORD *)(v26 - 0x21AEEC4F795AEEAFLL) = 0u;
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((44 * (((((v29 - 126) | 0x52u) + 433) ^ 0x514) != 64)) | (v29 - 126) | 0x52)))(v40);
}

void sub_22B394874()
{
}

uint64_t sub_22B39489C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (((*(_DWORD *)(a6 - 0x19157D3ABD2659C6) == (v7 ^ 0xDBFEEEDF)) * (v7 - 616)) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, 3690916939);
}

uint64_t sub_22B3948F0()
{
  *(void *)&long long v4 = 0xE1E1E1E1E1E1E1E1;
  *((void *)&v4 + 1) = 0xE1E1E1E1E1E1E1E1;
  *int v1 = v4;
  v1[1] = v4;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 & 0xFFFFFFE0) == 32) * ((((v2 & 0x658C7DD7) - 1780) | 0x868) ^ 0x257)) ^ ((v2 & 0x658C7DD7) - 1791))))();
}

uint64_t sub_22B394948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x3FC]) = 0;
  int v66 = LODWORD(STACK[0x3FC])++;
  *a65 = v66 + 1;
  uint64_t v67 = *(unsigned int *)STACK[0x218];
  *(_DWORD *)(v65 - 188) = (a3 - 1604166720) ^ a57;
  *(_DWORD *)(v65 - 168) = (a3 - 151744712) ^ a57;
  *(_DWORD *)(v65 - 164) = a57 ^ 1;
  *(_DWORD *)(v65 - 160) = a3 - 151744625 + a57;
  *(_DWORD *)(v65 - 156) = a3 - 151744625 - a57 + 54;
  *(void *)(a2 + 272) = v67 - a57;
  *(void *)(a2 + 280) = a56;
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a3 + 227)))(v65 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * *(int *)(v65 - 192)))(v68);
}

uint64_t sub_22B39495C@<X0>(int a1@<W8>)
{
  uint64_t v7 = v2 - 1;
  *(unsigned char *)(v4 + v7) = ((v1 - 61) ^ v3) * (v1 - 44);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 == 0) * v5) ^ a1)))();
}

uint64_t sub_22B394964@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((3940 * ((a1 ^ 0xB38B1914) == ((v4 - 1839) ^ v2 ^ 0x5301EF3D) + v1)) ^ (v4 - 1839))))();
}

uint64_t sub_22B3949B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a2 + v5 + a3) = *(unsigned char *)(a4 + v5 + a3) - ((2 * *(unsigned char *)(a4 + v5 + a3)) & 0x55) + 42;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 + 1 != a1 + 16) * (v6 + v7 + v4 - 2663 - 1628)) ^ v4)))();
}

uint64_t sub_22B394A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8 * ((((v39 - 454) ^ 0x497) + ((v39 - 454) | 0x704) + 600) ^ (v39 + 174))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_22B394A44()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((30 * (LODWORD(STACK[0x220]) + ((v0 + 900) | 0x66) != 1191197869)) ^ v0)))();
}

uint64_t sub_22B394AA8@<X0>(int a1@<W8>)
{
  unsigned int v3 = (a1 + 720246716) & 0xD511EF7F;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xD34)))(v1 - 0x24B64731C5A68327);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * (int)(((STACK[0x288] == 0x24B64731C5A68327)
                                                   * ((v3 - 1150) ^ 0x470 ^ (221 * (v3 ^ 0xA34)))) ^ v3)))(v4);
}

uint64_t sub_22B394B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  BOOL v52 = v49 - 603552955 < (a49 - 145913236);
  if (a49 - 145913236 < ((v50 - 2013) ^ 0xABC4606u) != v49 - 603552955 < ((v50 + 1247684489) & 0xB5A1D78F ^ 0xABC4118)) {
    BOOL v52 = a49 - 145913236 < ((v50 - 2013) ^ 0xABC4606u);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((249 * !v52) ^ v50)))(3691414341, 180109592, 2078, 789, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_22B394BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((((a7 - 1623132617) & 0x60BF0BFD) - 912) | 0x81) ^ 0xF0F)
                                * (v7 == *(void *)(v9 - 200))) ^ (a7 - 1623132617) & 0x60BF0BFD)))();
}

void sub_22B394C28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) - 1438293641 * (((a1 | 0x372B295D) - (a1 & 0x372B295D)) ^ 0x8FEC7C22);
  __asm { BRAA            X0, X17 }
}

uint64_t sub_22B394D80@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  BOOL v26 = a23 - a2 != -902075540 || a3 == (v23 ^ (a1 - 389) ^ (((v23 - 411456553) & 0x188653FD) - 135035478));
  return (*(uint64_t (**)(void))(v24 + 8 * ((62 * v26) ^ v23)))();
}

uint64_t sub_22B394DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  unint64_t v9 = v3 - 1;
  STACK[0x240] = v9;
  *(unsigned char *)(a1 + v9) = ((v4 + 3) ^ v7) * (v4 + 20);
  return (*(uint64_t (**)(void))(a2 + 8 * (((STACK[0x240] == 0) * (v5 & v6 ^ v8)) ^ a3)))();
}

uint64_t sub_22B394DF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((223 * (v1 ^ 0x748)) ^ 0x2A6) * ((unint64_t)(v2 - a1) < 0x20)) ^ v1 ^ 0xB5A)))();
}

uint64_t sub_22B394E40()
{
  *(void *)(v2 + v4 - 220 - 1079 + ((v0 - 1127898811) & 0x433A5E77)) = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 & 0xFFFFFFFFFFFFFFF8) == 8) ^ v0)))();
}

uint64_t sub_22B394E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, unsigned int a17, unint64_t *a18, uint64_t a19)
{
  unsigned int v22 = 1328090399
      * (((&a14 | 0xDA2C3262) - &a14 + (&a14 & 0x25D3CD98)) ^ 0x25FF5658);
  a18 = &STACK[0x25ABA05A3795B10A];
  a19 = a13;
  a17 = v22 ^ 0x881FFD3C;
  a14 = (v21 - 1653801163) ^ v22;
  a15 = 1702236675 - v22;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 + 3806)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((2070 * (a16 == v19 + 337 * (v21 ^ 0x135) - 1011)) ^ v21)))(v23);
}

void sub_22B394F74()
{
}

void sub_22B394F7C()
{
  *(unsigned char *)(v1 - 192) = *v0;
  *(unsigned char *)(v1 - 191) = v0[1];
  *(unsigned char *)(v1 - 190) = v0[2];
  *(unsigned char *)(v1 - 189) = v0[3];
  *(unsigned char *)(v1 - 188) = v0[4];
  *(unsigned char *)(v1 - 187) = v0[5];
  *(unsigned char *)(v1 - 186) = v0[6];
  *(unsigned char *)(v1 - 185) = v0[7];
  *(unsigned char *)(v1 - 184) = v0[8];
  *(unsigned char *)(v1 - 183) = v0[9];
  *(unsigned char *)(v1 - 182) = v0[10];
  *(unsigned char *)(v1 - 181) = v0[11];
  *(unsigned char *)(v1 - 180) = v0[12];
  *(unsigned char *)(v1 - 179) = v0[13];
  *(unsigned char *)(v1 - 178) = v0[14];
  *(unsigned char *)(v1 - 177) = v0[15];
  *(void *)(v1 - 176) = *(void *)v0;
  *(void *)(v1 - 168) = *((void *)v0 + 1);
  JUMPOUT(0x22B364CBCLL);
}

uint64_t sub_22B395018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((41 * (a8 ^ 0x54D) - 1827731910) & 0x6CF0FB7D ^ 0xB8A) * (v8 >> 4 == 232783336)) ^ a8)))();
}

uint64_t sub_22B395070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 - 1;
  *(unsigned char *)(v4 + v5) = (((v2 - 57) & 0xFE ^ 0x27) + v1) * ((v1 + 66) ^ 0xBA);
  return (*(uint64_t (**)(void))(v3 + 8 * ((125 * (v5 == 0)) ^ v2)))();
}

uint64_t sub_22B3950C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = 2009815553 * (((((v75 - 192) | 0xFE880E16) ^ 0xFFFFFFFE) - (~(v75 - 192) | 0x177F1E9)) ^ 0xF07CDFAC);
  *(_DWORD *)(v75 - 168) = v73 - v77 + 3093;
  *(_DWORD *)(v75 - 136) = v72 - v77 + 285189382;
  v74[35] = STACK[0x210];
  v74[37] = STACK[0x258];
  v74[38] = STACK[0x208];
  v74[39] = a72;
  v74[33] = STACK[0x200];
  uint64_t v78 = (*(uint64_t (**)(uint64_t))(v76 + 8 * (v73 + 3830)))(v75 - 192);
  BOOL v79 = *(_DWORD *)(v75 - 184) == 47 * (v73 ^ 0x80) - 604053506;
  return (*(uint64_t (**)(uint64_t, __n128))(STACK[0x270] + 8 * (((2 * v79) | (32 * v79)) ^ v73)))(v78, (__n128)0);
}

uint64_t sub_22B3951C8@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  BOOL v11 = v4 < a2;
  *(unsigned char *)(v10 - 220 + (a4 - 591515401)) = ((v7 - 71) & 0x7D ^ 0x13)
                                                         + *(unsigned char *)(v8 + (v6 + a1))
                                                         - ((2 * *(unsigned char *)(v8 + (v6 + a1))) & 0x55);
  unsigned int v12 = v6 + 1 + a3;
  int v13 = v11 ^ (v12 < a2);
  BOOL v14 = v12 < v4;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v5) ^ v7)))();
}

void sub_22B395258()
{
}

uint64_t sub_22B395274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 ^ 0x9D1) + 91 * (v6 ^ 0xB94) + 702) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_22B3952B0@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  unsigned int v43 = v42[396] ^ ((*v42 & 0x7FFFFFFE | v42[623] & 0x80000000) >> 1);
  v42[623] = (v43 + a1 - (((a2 - 1618119966) ^ 0xFE638D57) & (2 * v43))) ^ *(_DWORD *)(v41 + 4 * (*v42 & 1));
  return (*(uint64_t (**)(void))(v40 + 8 * ((45 * (a39 <= ((a2 - 1618119966) ^ (v39 + 549)))) ^ a2)))();
}

void sub_22B395340()
{
}

void sub_22B395348()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 891)))(v0);
  STACK[0x3B0] = STACK[0x240] - 1824;
  LODWORD(STACK[0x36C]) = 604092319;
  JUMPOUT(0x22B395380);
}

void sub_22B39538C(uint64_t a1)
{
  int v1 = 1328090399 * (((a1 | 0xC26AD773) - a1 + (a1 & 0x3D95288C)) ^ 0x3DB9B349);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B395460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v26 - 120) = a24;
  *(void *)(v26 - 112) = a6;
  *(_DWORD *)(v26 - 128) = v25 - 1734664879 * ((v26 - 128) ^ 0x2FDB281A) - 2283;
  (*(void (**)(uint64_t))(v24 + 8 * (v25 ^ 0x4CE)))(v26 - 128);
  *(_DWORD *)(v26 - 112) = v25
                         + 1866394843
                         * ((((v26 - 128) | 0xA4740A24) - (v26 - 128) + ((v26 - 128) & 0x5B8BF5D8)) ^ 0x4E633DD0)
                         - 108;
  *(void *)(v26 - 104) = a22;
  *(void *)(v26 - 120) = a24;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 + 1215)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((11 * (*(_DWORD *)(v26 - 128) > 0x64079912u)) ^ v25)))(v27);
}

uint64_t sub_22B395688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((v6 + v8 + 488 + ((v8 + 1874586356) & 0xF3EEDDF9) + 1385) * (v7 == a6)) ^ v8)))();
}

uint64_t sub_22B3956CC(int8x8_t *a1, int a2, uint64_t a3, int8x8_t a4)
{
  *a1 = veor_s8(*v5, a4);
  return (*(uint64_t (**)(int8x8_t *))(v6 + 8 * (((a3 == 0) * a2) ^ v4)))(a1 + 1);
}

uint64_t sub_22B3956F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v10 = v3 - 1;
  *(void *)(a2 + 368) = v10;
  *(unsigned char *)(a1 + v10) = ((v4 + 1 + (v5 & v6) - 30) ^ v7) * (v4 + 71);
  return (*(uint64_t (**)(void))(v9 + 8 * (((*(void *)(a2 + 368) == 0) * v8) | a3)))();
}

uint64_t sub_22B395700@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55)
{
  uint64_t v60 = v58 + v55 + a55 - 1798 - 149;
  int v61 = *(unsigned __int8 *)(a1 + v60) ^ v57;
  int v62 = ((*(unsigned __int8 *)(v58 + v55 + a1 + 2) ^ v57) << 16) | ((*(unsigned __int8 *)(v58 + v55 + a1 + 3) ^ v57) << 24) | v61 | ((*(unsigned __int8 *)(v58 + v55 + a1 + 1) ^ v57) << 8);
  *(_DWORD *)(a2 + (v60 & 0xFFFFFFFFFFFFFFFCLL)) = v62 + v56 - 2 * (v62 & 0x5BFEEC5B ^ v61 & 0x10);
  return (*(uint64_t (**)(void))(v59 + 8 * ((2817 * ((unint64_t)(v55 + 4 + v58) < 0x40)) ^ a55)))();
}

uint64_t sub_22B3957A0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a7 ^ a3) - a3 - 2823) * (v8 == a2)) ^ a7)))(0);
}

uint64_t sub_22B3957CC(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 - 3258) | 0xA00) - 2457) * ((a3 + a2 + 675815553) > 7)) ^ v3)))();
}

uint64_t sub_22B39583C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 - 1899432623) = *(unsigned char *)(v4 + v2 - 1899432623)
                                   - ((2 * *(unsigned char *)(v4 + v2 - 1899432623)) & 0x55)
                                   + 42;
  int v6 = v2 + (v1 - 1748) - 715 == v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * v6) | (v6 << 6)) ^ v1)))();
}

void sub_22B39588C()
{
}

uint64_t sub_22B395904()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((447 * (v0 - 1187837912 < (v1 - 3157))) ^ (v1 - 898))))();
}

void sub_22B395938()
{
}

uint64_t sub_22B395984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 112) = v16;
  *(_DWORD *)(v17 - 120) = v15
                         + ((~((v17 - 136) ^ 0xB021FEC6 | 0x52D2A189) + (((v17 - 136) ^ 0xB021FEC6) & 0x52D2A189)) ^ 0xF71B9744)
                         * v14
                         + 2217;
  *(void *)(v17 - 128) = a12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v15 + 3540)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((51
                                              * ((((v15 ^ 0x33) - 18) ^ (*(_DWORD *)(v17 - 136) > (v12 + 1))) & 1)) ^ v15)))(v18);
}

uint64_t sub_22B395A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W6>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * ((((v8 - a6 - 2489) ^ (v6 + v8 + 1674))
                                                                                 * (v7 == a5)) ^ v8)))(a1, a2, a3, a4, (v8 - a6 - 2238));
}

uint64_t sub_22B395A5C@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v7 + 4 * a1) = a1 + ((v1 + v4 + v2) ^ ((v1 + v4 + v2) >> 30)) * v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((30 * (((a1 < 0x26F) ^ (v5 + 82)) & 1)) ^ v5)))();
}

uint64_t sub_22B395A6C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v32 = v26 - a1;
  int v33 = 1990461019 * ((2 * ((v31 - 168) & 0x38CD4FB8) - (v31 - 168) - 952979385) ^ 0xE8D612CE);
  *(_DWORD *)(v31 - 128) = 362873235 - v33;
  *(_DWORD *)(v31 - 168) = v28 - v33 + 819;
  *(void *)(v31 - 144) = v27;
  *(void *)(v31 - 136) = v32;
  *(void *)(v31 - 160) = a17;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v28 ^ 0x1105)))(v31 - 168);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30
                                                     + 8
                                                     * (int)(((*(_DWORD *)(v31 - 152) != v29)
                                                            * ((v28 - 539493067) & 0xFFF985D7 ^ 0xDFD18445)) ^ v28)))(v34, a26);
}

uint64_t sub_22B395B48@<X0>(void *a1@<X1>, int a2@<W2>, unint64_t a3@<X3>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v43 = 4 * (a5 + 1 + a4);
  unint64_t v44 = (*(_DWORD *)(a28 + v43 + a7) ^ v28)
      + (a6 ^ HIDWORD(a3))
      + v35 * (unint64_t)(*(_DWORD *)(*a1 + v43 + a7) ^ v28);
  unint64_t v45 = (*(_DWORD *)(*v41 + v43 + a7) ^ v28) * a8
      + HIDWORD(v34)
      + ((v44 + ((v38 + 708602332) & v32 ^ (a2 + 444)) - ((2 * v44) & 0xDA4E54A0)) ^ v36);
  LODWORD(v43) = a5 + a4;
  int v46 = a5 + v30;
  *(_DWORD *)(a28 + 4 * (int)v43 + a7) = v45 + v28 - (v33 & (2 * v45));
  BOOL v47 = v31 > v40;
  int v48 = v47 ^ (v46 < v39);
  BOOL v49 = v46 < v42;
  if (!v48) {
    BOOL v47 = v49;
  }
  return (*(uint64_t (**)(void))(v37 + 8 * ((!v47 * v29) ^ v38)))();
}

uint64_t sub_22B395C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  return (*(uint64_t (**)(void))(v29 + 8 * ((2880 * (a28 == a23 - 1282729912)) ^ v28)))();
}

uint64_t sub_22B395C7C()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8 * ((((v2 - 536) ^ 0x1C9 ^ ((v2 + 1867) | 0x1A)) * (v0 == v1)) ^ v2)))(4268302625);
}

uint64_t sub_22B395CC8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v0 < (((v1 ^ 0x229) - 1758352109) & 0x68CE5BDF ^ 0xBE9u))
                                     * (((v1 ^ 0x229) + 260043880) & 0xF6A658FB ^ 0x62651F3)) ^ v1 ^ 0x229)))();
}

uint64_t sub_22B395D38@<X0>(int a1@<W8>, uint64_t a2)
{
  *(void *)(a2 + v3) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((((v2 & 0x38) == 8) * ((a1 + 1746821014) & 0x97E19B5B ^ 0x39)) ^ a1)))();
}

uint64_t sub_22B395D88()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((LODWORD(STACK[0x240]) + 428) ^ (1668 * (v0 > v2 + 623)))))();
}

uint64_t sub_22B395DB4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2406
                                * (*(_DWORD *)(*(void *)(v5 - 0x281D12643933BF1BLL)
                                             - 0x54EEBA8C0E75CADCLL
                                             + 4 * (v1 + v2 - 1)) == ((17
                                                                                     * (((v0 - 1433) | 0x358) ^ 0x75B)) ^ (v4 - 2191)))) ^ ((v0 - 1433) | 0x358))))();
}

uint64_t sub_22B395E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,unsigned int a56)
{
  if (a56 < 0x4F11E78D != (a49 + 542909567) < 0x4F11E78D) {
    BOOL v57 = (a49 + 542909567) < 0x4F11E78D;
  }
  else {
    BOOL v57 = (int)a49 + 542909567 > a56;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * ((!v57 * (((a55 & 0x5B64B276) + 2112) ^ 0x8AF)) ^ ((int)a2 + 3545))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_22B395E38(uint64_t a1)
{
  uint64_t v110 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 8);
  int v2 = *(_DWORD **)(a1 + 16);
  unsigned int v94 = (*v2 ^ 0x95F5D98F) + 2132782843 + ((2 * *v2) & 0x2BEBB31E);
  unsigned int v95 = (v2[1] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[1]) & 0x2BEBB31E);
  unsigned int v96 = (v2[2] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[2]) & 0x2BEBB31E);
  unsigned int v97 = (v2[3] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[3]) & 0x2BEBB31E);
  unsigned int v98 = (v2[4] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[4]) & 0x2BEBB31E);
  unsigned int v99 = (v2[5] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[5]) & 0x2BEBB31E);
  unsigned int v100 = (v2[6] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[6]) & 0x2BEBB31E);
  unsigned int v101 = (v2[7] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[7]) & 0x2BEBB31E);
  unsigned int v102 = (v2[8] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[8]) & 0x2BEBB31E);
  unsigned int v103 = (v2[9] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[9]) & 0x2BEBB31E);
  unsigned int v104 = (v2[10] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[10]) & 0x2BEBB31E);
  unsigned int v105 = (v2[11] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[11]) & 0x2BEBB31E);
  unsigned int v106 = (v2[12] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[12]) & 0x2BEBB31E);
  unsigned int v107 = (v2[13] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[13]) & 0x2BEBB31E);
  unsigned int v108 = (v2[14] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[14]) & 0x2BEBB31E);
  unsigned int v109 = (v2[15] ^ 0x95F5D98F) + 2132782843 + ((2 * v2[15]) & 0x2BEBB31E);
  uint64_t v93 = v1;
  int v3 = *(_DWORD *)(v1 - 0x77DD04A0CDF15AALL);
  int v4 = *(_DWORD *)(v1 - 0x77DD04A0CDF15A6);
  int v5 = *(_DWORD *)(v1 - 0x77DD04A0CDF15A2);
  unsigned int v6 = v94;
  HIDWORD(v7) = *(_DWORD *)(v1 - 0x77DD04A0CDF15AELL) + v94 - 1034609682 + (v4 & v3 | v5 & ~v3);
  LODWORD(v7) = HIDWORD(v7);
  int v8 = (v7 >> 25) + v3 - ((2 * ((v7 >> 25) + v3)) & 0x3D328EB4) + 513361754;
  HIDWORD(v7) = v5 + v95 - 743297332 + (v3 & (v8 ^ 0x1E99475A) | v4 & ~(v8 ^ 0x1E99475A));
  LODWORD(v7) = HIDWORD(v7);
  int v9 = (v7 >> 20) + (v8 ^ 0x1E99475A) - ((2 * ((v7 >> 20) + (v8 ^ 0x1E99475A))) & 0xEDD3B30E) + 1995037063;
  HIDWORD(v7) = v4 + v96 + 252373073 + ((v9 ^ 0x76E9D987) & (v8 ^ (v3 - ((2 * v3) & 0x3D328EB4) + 513361754)) ^ v3);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 15) + (v9 ^ 0x76E9D987) - ((2 * ((v7 >> 15) + (v9 ^ 0x76E9D987))) & 0xCA76F472) + 1698396729;
  int v10 = v1 ^ 0x653B7A39;
  HIDWORD(v7) = v3
              + v97
              - 1398258076
              + ((((v1 ^ 0x653B7A39) & (v8 ^ 0x68709EDD ^ v9))
                - ((2 * ((v1 ^ 0x653B7A39) & (v8 ^ 0x68709EDD ^ v9))) & 0x3D328EB4)
                + 513361754) ^ v8);
  LODWORD(v7) = HIDWORD(v7);
  int v11 = (v7 >> 10) + (v1 ^ 0x653B7A39) - ((2 * ((v7 >> 10) + (v1 ^ 0x653B7A39))) & 0xE4A618C2) + 1918045281;
  HIDWORD(v7) = v98
              + (v8 ^ 0x1E99475A)
              - 530151643
              + ((((v11 ^ 0x72530C61) & (v9 ^ 0x13D2A3BE ^ v1))
                - ((2 * ((v11 ^ 0x72530C61) & (v9 ^ 0x13D2A3BE ^ v1))) & 0xEDD3B30E)
                + 1995037063) ^ v9);
  LODWORD(v7) = HIDWORD(v7);
  int v12 = (v7 >> 25) + (v11 ^ 0x72530C61) - ((2 * ((v7 >> 25) + (v11 ^ 0x72530C61))) & 0xF21B5980) + 2030939328;
  LODWORD(v2) = v12 ^ 0x790DACC0;
  HIDWORD(v7) = v99
              + (v9 ^ 0x76E9D987)
              + 846347680
              + ((((v12 ^ 0x790DACC0) & (v1 ^ 0x17687658 ^ v11))
                - ((2 * ((v12 ^ 0x790DACC0) & (v1 ^ 0x17687658 ^ v11))) & 0xCA76F472)
                + 1698396729) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 20) + (v12 ^ 0x790DACC0) - ((2 * ((v7 >> 20) + (v12 ^ 0x790DACC0))) & 0x95E5464) - 2068895182;
  int v13 = v1 ^ 0x84AF2A32;
  HIDWORD(v7) = v100
              + v10
              - 1826964087
              + ((((v1 ^ 0x84AF2A32) & (v11 ^ 0xB5EA0A1 ^ v12))
                - ((2 * ((v1 ^ 0x84AF2A32) & (v11 ^ 0xB5EA0A1 ^ v12))) & 0xE4A618C2)
                + 1918045281) ^ v11);
  LODWORD(v7) = HIDWORD(v7);
  int v14 = (v7 >> 15) + (v1 ^ 0x84AF2A32) - ((2 * ((v7 >> 15) + (v1 ^ 0x84AF2A32))) & 0xE03FD2FC) + 1881139582;
  HIDWORD(v7) = v101
              + (v11 ^ 0x72530C61)
              - 399438729
              + ((((v14 ^ 0x701FE97E) & (v12 ^ 0xFDA286F2 ^ v1))
                - ((2 * ((v14 ^ 0x701FE97E) & (v12 ^ 0xFDA286F2 ^ v1))) & 0xF21B5980)
                + 2030939328) ^ v12);
  LODWORD(v7) = HIDWORD(v7);
  int v15 = (v7 >> 10) + (v14 ^ 0x701FE97E) - ((2 * ((v7 >> 10) + (v14 ^ 0x701FE97E))) & 0xC70AB942) - 477799263;
  unsigned int v16 = v15 ^ 0xE3855CA1;
  HIDWORD(v7) = v102
              + v2
              + 1416302670
              + ((((v15 ^ 0xE3855CA1) & (v1 ^ 0xF4B0C34C ^ v14))
                - ((2 * ((v15 ^ 0xE3855CA1) & (v1 ^ 0xF4B0C34C ^ v14))) & 0x95E5464)
                - 2068895182) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 25) + (v15 ^ 0xE3855CA1) - ((2 * ((v7 >> 25) + (v15 ^ 0xE3855CA1))) & 0x8E7D831A) + 1195295117;
  int v17 = v1 ^ 0x473EC18D;
  HIDWORD(v7) = v103
              + v13
              + 1982820133
              + ((((v1 ^ 0x473EC18D) & (v14 ^ 0x939AB5DF ^ v15))
                - ((2 * ((v1 ^ 0x473EC18D) & (v14 ^ 0x939AB5DF ^ v15))) & 0xE03FD2FC)
                + 1881139582) ^ v14);
  LODWORD(v7) = HIDWORD(v7);
  int v18 = (v7 >> 20) + (v1 ^ 0x473EC18D) - ((2 * ((v7 >> 20) + (v1 ^ 0x473EC18D))) & 0xC579780) + 103533504;
  int v19 = v18 ^ 0x62BCBC0;
  HIDWORD(v7) = v104
              + (v14 ^ 0x701FE97E)
              - 353774809
              + ((((v18 ^ 0x62BCBC0) & (v15 ^ 0xA4BB9D2C ^ v1))
                - ((2 * ((v18 ^ 0x62BCBC0) & (v15 ^ 0xA4BB9D2C ^ v1))) & 0xC70AB942)
                - 477799263) ^ v15);
  LODWORD(v7) = HIDWORD(v7);
  int v20 = (v7 >> 15) + (v18 ^ 0x62BCBC0) - ((2 * ((v7 >> 15) + (v18 ^ 0x62BCBC0))) & 0x52B57CE8) + 693812852;
  int v21 = v20 ^ 0x295ABE74;
  HIDWORD(v7) = v105
              + v16
              + 1950830388
              + ((((v20 ^ 0x295ABE74) & (v1 ^ 0x41150A4D ^ v18))
                - ((2 * ((v20 ^ 0x295ABE74) & (v1 ^ 0x41150A4D ^ v18))) & 0x8E7D831A)
                + 1195295117) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 10) + (v20 ^ 0x295ABE74) - ((2 * ((v7 >> 10) + (v20 ^ 0x295ABE74))) & 0xA2A4083E) + 1364329503;
  int v22 = v1 ^ 0x5152041F;
  HIDWORD(v7) = v106
              + v17
              + 1450870936
              + ((((v1 ^ 0x5152041F) & (v18 ^ 0x2F7175B4 ^ v20))
                - ((2 * ((v1 ^ 0x5152041F) & (v18 ^ 0x2F7175B4 ^ v20))) & 0xC579780)
                + 103533504) ^ v18);
  LODWORD(v7) = HIDWORD(v7);
  int v23 = (v7 >> 25) + (v1 ^ 0x5152041F) - ((2 * ((v7 >> 25) + (v1 ^ 0x5152041F))) & 0x6A70E304) - 1254592126;
  HIDWORD(v7) = v107
              + v19
              - 394073847
              + ((((v23 ^ 0xB5387182) & (v20 ^ 0x7808BA6B ^ v1))
                - ((2 * ((v23 ^ 0xB5387182) & (v20 ^ 0x7808BA6B ^ v1))) & 0x52B57CE8)
                + 693812852) ^ v20);
  LODWORD(v7) = HIDWORD(v7);
  int v24 = (v7 >> 20) + (v23 ^ 0xB5387182) - ((2 * ((v7 >> 20) + (v23 ^ 0xB5387182))) & 0x65C32074) - 1293840326;
  unsigned int v25 = v24 ^ 0xB2E1903A;
  HIDWORD(v7) = v108
              + v21
              - 1855735036
              + ((((v24 ^ 0xB2E1903A) & (v1 ^ 0xE46A759D ^ v23))
                - ((2 * ((v24 ^ 0xB2E1903A) & (v1 ^ 0xE46A759D ^ v23))) & 0xA2A4083E)
                + 1364329503) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 15) + (v24 ^ 0xB2E1903A) - ((2 * ((v7 >> 15) + (v24 ^ 0xB2E1903A))) & 0xE90A0584) + 1954874050;
  int v26 = v1 ^ 0x748502C2;
  HIDWORD(v7) = v109
              + v22
              + 882802583
              + ((((v1 ^ 0x748502C2) & (v23 ^ 0x7D9E1B8 ^ v24))
                - ((2 * ((v1 ^ 0x748502C2) & (v23 ^ 0x7D9E1B8 ^ v24))) & 0x6A70E304)
                - 1254592126) ^ v23);
  LODWORD(v7) = HIDWORD(v7);
  int v27 = (v7 >> 10) + (v1 ^ 0x748502C2) - ((2 * ((v7 >> 10) + (v1 ^ 0x748502C2))) & 0xF6293DB8) - 82534692;
  HIDWORD(v7) = v95
              + (v23 ^ 0xB5387182)
              - 519529256
              + ((((v1 ^ 0x8F919C1E ^ v27) & v25) - ((2 * ((v1 ^ 0x8F919C1E ^ v27) & v25)) & 0xE90A0584) + 1954874050) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v2) = v27 ^ 0xFB149EDC;
  LODWORD(v1) = (v7 >> 27) + (v27 ^ 0xFB149EDC) - ((2 * ((v7 >> 27) + (v27 ^ 0xFB149EDC))) & 0xB7AC79AE) - 606716713;
  HIDWORD(v7) = v100
              + v25
              - 1423234378
              + ((((v27 ^ 0x20C2A20B ^ v1) & v26) - ((2 * ((v27 ^ 0x20C2A20B ^ v1) & v26)) & 0xF6293DB8) - 82534692) ^ v27);
  LODWORD(v7) = HIDWORD(v7);
  int v28 = v1 ^ 0xDBD63CD7;
  int v29 = (v7 >> 23) + (v1 ^ 0xDBD63CD7) - ((2 * ((v7 >> 23) + (v1 ^ 0xDBD63CD7))) & 0xD7ABD9B4) - 338301734;
  HIDWORD(v7) = v105
              + v26
              + 289984967
              + ((((v1 ^ 0x3003D00D ^ v29) & v2)
                - ((2 * ((v1 ^ 0x3003D00D ^ v29) & v2)) & 0xB7AC79AE)
                - 606716713) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  unsigned int v30 = v29 ^ 0xEBD5ECDA;
  LODWORD(v1) = (v7 >> 18) + (v29 ^ 0xEBD5ECDA) - ((2 * ((v7 >> 18) + (v29 ^ 0xEBD5ECDA))) & 0xDE60C3D8) + 1865441772;
  HIDWORD(v7) = v94
              + v2
              - 727630048
              + ((((v29 ^ 0x84E58D36 ^ v1) & v28) - ((2 * ((v29 ^ 0x84E58D36 ^ v1) & v28)) & 0xD7ABD9B4) - 338301734) ^ v29);
  LODWORD(v7) = HIDWORD(v7);
  int v31 = v1 ^ 0x6F3061EC;
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0x6F3061EC) - ((2 * ((v7 >> 12) + (v1 ^ 0x6F3061EC))) & 0xC66F7182) + 1664596161;
  HIDWORD(v7) = v99
              + v28
              - 1055291437
              + ((((v1 ^ 0xC07D92D ^ v2) & v30)
                - ((2 * ((v1 ^ 0xC07D92D ^ v2) & v30)) & 0xDE60C3D8)
                + 1865441772) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  unsigned int v32 = v2 ^ 0x6337B8C1;
  LODWORD(v1) = (v7 >> 27)
              + (v2 ^ 0x6337B8C1)
              - ((2 * ((v7 >> 27) + (v2 ^ 0x6337B8C1))) & 0x9C166E0A)
              - 838125819;
  HIDWORD(v7) = v104
              + v30
              - 315716663
              + ((((v2 ^ 0xAD3C8FC4 ^ v1) & v31)
                - ((2 * ((v2 ^ 0xAD3C8FC4 ^ v1) & v31)) & 0xC66F7182)
                + 1664596161) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  int v33 = v1 ^ 0xCE0B3705;
  LODWORD(v2) = (v7 >> 23) + (v1 ^ 0xCE0B3705) - ((2 * ((v7 >> 23) + (v1 ^ 0xCE0B3705))) & 0xB9959794) + 1556794314;
  HIDWORD(v7) = v109
              + v31
              - 1014211081
              + ((((v1 ^ 0x92C1FCCF ^ v2) & v32)
                - ((2 * ((v1 ^ 0x92C1FCCF ^ v2) & v32)) & 0x9C166E0A)
                - 838125819) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  unsigned int v34 = v2 ^ 0x5CCACBCA;
  LODWORD(v1) = (v7 >> 18)
              + (v2 ^ 0x5CCACBCA)
              - ((2 * ((v7 >> 18) + (v2 ^ 0x5CCACBCA))) & 0xE63DA0)
              - 2139939120;
  HIDWORD(v7) = v98
              + v32
              - 759270594
              + ((((v2 ^ 0xDCB9D51A ^ v1) & v33)
                - ((2 * ((v2 ^ 0xDCB9D51A ^ v1) & v33)) & 0xB9959794)
                + 1556794314) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  int v35 = v1 ^ 0x80731ED0;
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0x80731ED0) - ((2 * ((v7 >> 12) + (v1 ^ 0x80731ED0))) & 0x4AF07FF2) - 1518845959;
  HIDWORD(v7) = v103
              + v33
              + 214713692
              + ((((v1 ^ 0x250B2129 ^ v2) & v34)
                - ((2 * ((v1 ^ 0x250B2129 ^ v2) & v34)) & 0xE63DA0)
                - 2139939120) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  unsigned int v36 = v2 ^ 0xA5783FF9;
  LODWORD(v1) = (v7 >> 27)
              + (v2 ^ 0xA5783FF9)
              - ((2 * ((v7 >> 27) + (v2 ^ 0xA5783FF9))) & 0x4A75AF4)
              + 39038330;
  HIDWORD(v7) = v108
              + v34
              - 1373536436
              + ((((v2 ^ 0xA72B9283 ^ v1) & v35)
                - 1518845959
                + (~(2 * ((v2 ^ 0xA72B9283 ^ v1) & v35)) | 0xB50F800D)
                + 1) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  int v37 = v1 ^ 0x253AD7A;
  LODWORD(v2) = (v7 >> 23) + (v1 ^ 0x253AD7A) - ((2 * ((v7 >> 23) + (v1 ^ 0x253AD7A))) & 0x8B1559A6) + 1166716115;
  HIDWORD(v7) = v97
              + v35
              - 541096707
              + ((((v1 ^ 0x47D901A9 ^ v2) & v36)
                - ((2 * ((v1 ^ 0x47D901A9 ^ v2) & v36)) & 0x4A75AF4)
                + 39038330) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  unsigned int v38 = v2 ^ 0x458AACD3;
  LODWORD(v1) = (v7 >> 18)
              + (v2 ^ 0x458AACD3)
              - ((2 * ((v7 >> 18) + (v2 ^ 0x458AACD3))) & 0x99BDD91C)
              - 857805682;
  HIDWORD(v7) = v102
              + v36
              + 809798755
              + ((((v2 ^ 0x8954405D ^ v1) & v37)
                - ((2 * ((v2 ^ 0x8954405D ^ v1) & v37)) & 0x8B1559A6)
                + 1166716115) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0xCCDEEC8E) - ((2 * ((v7 >> 12) + (v1 ^ 0xCCDEEC8E))) & 0x91CB2236) + 1223004443;
  HIDWORD(v7) = v107
              + v37
              - 1798414213
              + ((((v1 ^ 0x843B7D95 ^ v2) & v38)
                - ((2 * ((v1 ^ 0x843B7D95 ^ v2) & v38)) & 0x99BDD91C)
                - 857805682) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  int v39 = (v7 >> 27)
      + (v2 ^ 0x48E5911B)
      - 1910045036
      + (~(2 * ((v7 >> 27) + (v2 ^ 0x48E5911B))) | 0xE3B1F2D7)
      + 1;
  HIDWORD(v7) = v96
              + v38
              - 405136530
              + ((((v2 ^ 0xC6C2978F ^ v39) & (v1 ^ 0xCCDEEC8E))
                - ((2 * ((v2 ^ 0xC6C2978F ^ v39) & (v1 ^ 0xCCDEEC8E))) & 0x91CB2236)
                + 1223004443) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  int v40 = (v7 >> 23) + (v39 ^ 0x8E270694) - ((2 * ((v7 >> 23) + (v39 ^ 0x8E270694))) & 0x578CCC8) - 2101582236;
  HIDWORD(v7) = v101
              + (v1 ^ 0xCCDEEC8E)
              + 1381595727
              + ((((v39 ^ 0xC9B60F0 ^ v40) & (v2 ^ 0x48E5911B))
                - ((2 * ((v39 ^ 0xC9B60F0 ^ v40) & (v2 ^ 0x48E5911B))) & 0x1C4E0D28)
                - 1910045036) ^ v39);
  LODWORD(v7) = HIDWORD(v7);
  int v41 = (v7 >> 18) + (v40 ^ 0x82BC6664) - ((2 * ((v7 >> 18) + (v40 ^ 0x82BC6664))) & 0x638918D2) - 1312519063;
  HIDWORD(v7) = v106
              + (v2 ^ 0x48E5911B)
              + 2014626816
              + ((((v40 ^ 0x3378EA0D ^ v41) & (v39 ^ 0x8E270694))
                - ((2 * ((v40 ^ 0x3378EA0D ^ v41) & (v39 ^ 0x8E270694))) & 0x578CCC8)
                - 2101582236) ^ v40);
  LODWORD(v7) = HIDWORD(v7);
  int v42 = (v7 >> 12) + (v41 ^ 0xB1C48C69) - ((2 * ((v7 >> 12) + (v41 ^ 0xB1C48C69))) & 0xDE5A0AC4) + 1865221474;
  uint64_t v43 = 4 * (v39 & 0xF ^ 4u);
  unsigned int v94 = *(unsigned int *)((char *)&v94 + v43);
  *(unsigned int *)((char *)&v94 + v43) = v6;
  LODWORD(v43) = v95;
  uint64_t v44 = 4 * (v42 & 0xF ^ 2u);
  unsigned int v95 = *(unsigned int *)((char *)&v94 + v44);
  *(unsigned int *)((char *)&v94 + v44) = v43;
  LODWORD(v43) = v96;
  uint64_t v45 = 4 * (v41 & 0xF ^ 9u);
  unsigned int v96 = *(unsigned int *)((char *)&v94 + v45);
  *(unsigned int *)((char *)&v94 + v45) = v43;
  LODWORD(v43) = v97;
  uint64_t v46 = 4 * (v40 & 0xF ^ 4u);
  unsigned int v97 = *(unsigned int *)((char *)&v94 + v46);
  *(unsigned int *)((char *)&v94 + v46) = v43;
  LODWORD(v43) = v98;
  uint64_t v47 = 4 * ((v39 >> 4) ^ 9u);
  unsigned int v98 = *(unsigned int *)((char *)&v94 + v47);
  *(unsigned int *)((char *)&v94 + v47) = v43;
  LODWORD(v43) = v99;
  uint64_t v48 = 4 * ((v42 >> 4) ^ 6u);
  unsigned int v99 = *(unsigned int *)((char *)&v94 + v48);
  *(unsigned int *)((char *)&v94 + v48) = v43;
  LODWORD(v43) = v100;
  uint64_t v49 = 4 * ((v41 >> 4) ^ 6u);
  unsigned int v100 = *(unsigned int *)((char *)&v94 + v49);
  *(unsigned int *)((char *)&v94 + v49) = v43;
  LODWORD(v43) = v101;
  uint64_t v50 = 4 * ((v40 >> 4) ^ 6u);
  unsigned int v101 = *(unsigned int *)((char *)&v94 + v50);
  *(unsigned int *)((char *)&v94 + v50) = v43;
  HIDWORD(v7) = v99
              + (v39 ^ 0x8E270694)
              - 354111304
              + (((v41 ^ 0xDEE9890B ^ v42) - ((2 * (v41 ^ 0xDEE9890B ^ v42)) & 0x578CCC8) - 2101582236) ^ v40);
  LODWORD(v7) = HIDWORD(v7);
  int v51 = (v7 >> 28) + (v42 ^ 0x6F2D0562) - ((2 * ((v7 >> 28) + (v42 ^ 0x6F2D0562))) & 0x43DC76AC) - 1578222762;
  unsigned int v52 = v103;
  HIDWORD(v7) = v102
              + (v40 ^ 0x82BC6664)
              + 1918660087
              + (((v51 ^ v42 ^ 0xCEC33E34) - 2 * ((v51 ^ v42 ^ 0xCEC33E34) & 0x31C48C6B ^ (v51 ^ v42) & 2) - 1312519063) ^ v41);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 21) + (v51 ^ 0xA1EE3B56) - ((2 * ((v7 >> 21) + (v51 ^ 0xA1EE3B56))) & 0xA06D7E18) - 801718516;
  HIDWORD(v7) = v105
              + (v41 ^ 0xB1C48C69)
              + 1485297816
              + (((v51 ^ 0x71D8845A ^ v43) - ((2 * (v51 ^ 0x71D8845A ^ v43)) & 0xDE5A0AC4) + 1865221474) ^ v42);
  LODWORD(v7) = HIDWORD(v7);
  int v53 = v43 ^ 0xD036BF0C;
  int v54 = (v7 >> 16) + (v43 ^ 0xD036BF0C) - ((2 * ((v7 >> 16) + (v43 ^ 0xD036BF0C))) & 0x3DA4082C) - 1630403562;
  HIDWORD(v7) = v108
              + (v42 ^ 0x6F2D0562)
              - 389042302
              + (((v43 ^ 0x4EE4BB1A ^ v54) - ((2 * (v43 ^ 0x4EE4BB1A ^ v54)) & 0x43DC76AC) - 1578222762) ^ v51);
  LODWORD(v7) = HIDWORD(v7);
  unsigned int v55 = v54 ^ 0x9ED20416;
  int v56 = (v7 >> 9) + (v54 ^ 0x9ED20416) - ((2 * ((v7 >> 9) + (v54 ^ 0x9ED20416))) & 0xCDA57616) - 422397173;
  HIDWORD(v7) = v95
              + (v51 ^ 0xA1EE3B56)
              - 1884724806
              + (((v56 ^ v54 ^ 0x7800BF1D) - 2 * ((v56 ^ v54 ^ 0x7800BF1D) & 0x5036BF2C ^ (v56 ^ v54) & 0x20) - 801718516) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = v56 ^ 0xE6D2BB0B;
  LODWORD(v43) = (v7 >> 28) + (v56 ^ 0xE6D2BB0B) - ((2 * ((v7 >> 28) + (v56 ^ 0xE6D2BB0B))) & 0x84F34AAA) - 1032215211;
  HIDWORD(v7) = v98
              + v53
              + 919160607
              + (((v56 ^ 0x24AB1E5E ^ v43) - ((2 * (v56 ^ 0x24AB1E5E ^ v43)) & 0x3DA4082C) - 1630403562) ^ v54);
  LODWORD(v7) = HIDWORD(v7);
  int v57 = v43 ^ 0xC279A555;
  int v58 = (v7 >> 21) + (v43 ^ 0xC279A555) + 1173473187 + (~(2 * ((v7 >> 21) + (v43 ^ 0xC279A555))) | 0x741C70B9) + 1;
  HIDWORD(v7) = v101
              + v55
              - 509230378
              + (((v43 ^ 0x878862F6 ^ v58) - ((2 * (v43 ^ 0x878862F6 ^ v58)) & 0xCDA57616) - 422397173) ^ v56);
  LODWORD(v7) = HIDWORD(v7);
  int v59 = v58 ^ 0x45F1C7A3;
  int v60 = (v7 >> 16) + (v58 ^ 0x45F1C7A3) + 153772500 + (~(2 * ((v7 >> 16) + (v58 ^ 0x45F1C7A3))) | 0xEDAB3C57) + 1;
  HIDWORD(v7) = v104
              + v50
              - 1448463386
              + (((v58 ^ 0x4CDBA677 ^ v60) - ((2 * (v58 ^ 0x4CDBA677 ^ v60)) & 0x84F34AAA) - 1032215211) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = v60 ^ 0x92A61D4;
  LODWORD(v43) = (v7 >> 9) + (v60 ^ 0x92A61D4) - ((2 * ((v7 >> 9) + (v60 ^ 0x92A61D4))) & 0xB42F4C64) - 635984334;
  HIDWORD(v7) = v107
              + v57
              + 327546428
              + (((v43 ^ v60 ^ 0xD33DC7E6) - 2 * ((v43 ^ v60 ^ 0xD33DC7E6) & 0x45F1C7AB ^ (v43 ^ v60) & 8) + 1173473187) ^ v58);
  LODWORD(v7) = HIDWORD(v7);
  int v61 = v43 ^ 0xDA17A632;
  int v62 = (v7 >> 28) + (v43 ^ 0xDA17A632) - ((2 * ((v7 >> 28) + (v43 ^ 0xDA17A632))) & 0xC41B92D6) + 1645070699;
  HIDWORD(v7) = v94
              + v59
              - 712269968
              + (((v43 ^ 0xB81A6F59 ^ v62) - ((2 * (v43 ^ 0xB81A6F59 ^ v62)) & 0x1254C3A8) + 153772500) ^ v60);
  LODWORD(v7) = HIDWORD(v7);
  int v63 = v62 ^ 0x620DC96B;
  int v64 = (v7 >> 21) + (v62 ^ 0x620DC96B) - ((2 * ((v7 >> 21) + (v62 ^ 0x620DC96B))) & 0xD2E67460) - 378324432;
  uint64_t result = v96;
  HIDWORD(v7) = v97
              + v50
              - 1076254725
              + (((v62 ^ 0x8B7EF35B ^ v64) - ((2 * (v62 ^ 0x8B7EF35B ^ v64)) & 0xB42F4C64) - 635984334) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 16) + (v64 ^ 0xE9733A30) - 157960310 + (~(2 * ((v7 >> 16) + (v64 ^ 0xE9733A30))) | 0x12D490ED);
  HIDWORD(v7) = v100
              + v61
              - 277703557
              + (((v64 ^ 0x1FE68DB9 ^ v43) - ((2 * (v64 ^ 0x1FE68DB9 ^ v43)) & 0xC41B92D6) + 1645070699) ^ v62);
  LODWORD(v7) = HIDWORD(v7);
  int v66 = v43 ^ 0xF695B789;
  int v67 = (v7 >> 9) + (v43 ^ 0xF695B789) - ((2 * ((v7 >> 9) + (v43 ^ 0xF695B789))) & 0xCD783F98) + 1723604940;
  HIDWORD(v7) = v103
              + v63
              - 994097233
              + (((v43 ^ 0x9029A845 ^ v67) - ((2 * (v43 ^ 0x9029A845 ^ v67)) & 0xD2E67460) - 378324432) ^ v64);
  LODWORD(v7) = HIDWORD(v7);
  int v68 = v67 ^ 0x66BC1FCC;
  int v69 = (v7 >> 28) + (v67 ^ 0x66BC1FCC) - ((2 * ((v7 >> 28) + (v67 ^ 0x66BC1FCC))) & 0xA8C7C840) - 731651040;
  HIDWORD(v7) = v106
              + (v64 ^ 0xE9733A30)
              - 775548581
              + (((v67 ^ 0xB2DFFBEC ^ v69) - 157960310 + (~(2 * (v67 ^ 0xB2DFFBEC ^ v69)) | 0x12D490ED)) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 21) + (v69 ^ 0xD463E420) - ((2 * ((v7 >> 21) + (v69 ^ 0xD463E420))) & 0x3639964) + 28429490;
  HIDWORD(v7) = v109
              + v66
              + 177009774
              + (((v69 ^ 0xD5D22892 ^ v43) - ((2 * (v69 ^ 0xD5D22892 ^ v43)) & 0xCD783F98) + 1723604940) ^ v67);
  LODWORD(v7) = HIDWORD(v7);
  int v70 = v43 ^ 0x1B1CCB2;
  int v71 = (v7 >> 16) + (v43 ^ 0x1B1CCB2) - ((2 * ((v7 >> 16) + (v43 ^ 0x1B1CCB2))) & 0xFA5ADB7E) + 2100129215;
  HIDWORD(v7) = v96
              + v68
              - 1349071397
              + (((v43 ^ 0x7C9CA10D ^ v71) - 731651040 + (~(2 * (v43 ^ 0x7C9CA10D ^ v71)) | 0x573837BF) + 1) ^ v69);
  LODWORD(v7) = HIDWORD(v7);
  int v72 = (v7 >> 9) + (v71 ^ 0x7D2D6DBF) - ((2 * ((v7 >> 9) + (v71 ^ 0x7D2D6DBF))) & 0x10F48612) - 2005253367;
  unsigned int v73 = v72 ^ 0x887A4309;
  HIDWORD(v7) = v94
              + (v69 ^ 0xD463E420)
              - 552363590
              + (((v73 | v43 ^ 0xFE4E334D) - ((2 * (v73 | v43 ^ 0xFE4E334D)) & 0xFA5ADB7E) + 2100129215) ^ v71);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 26) + v73 - ((2 * ((v7 >> 26) + v73)) & 0xA7047CE6) - 746439053;
  int v74 = v43 ^ 0xD3823E73;
  HIDWORD(v7) = v101
              + v70
              + 773158669
              + (((v43 ^ 0xD3823E73 | v71 ^ 0x82D29240)
                - ((2 * (v43 ^ 0xD3823E73 | v71 ^ 0x82D29240)) & 0x10F48612)
                - 2005253367) ^ v72);
  LODWORD(v7) = HIDWORD(v7);
  int v75 = (v7 >> 22) + (v43 ^ 0xD3823E73) - ((2 * ((v7 >> 22) + (v43 ^ 0xD3823E73))) & 0xA2EBB030) - 780806120;
  int v76 = v72 ^ 0x7785BCF6;
  unsigned int v77 = v75 ^ 0xD175D818;
  HIDWORD(v7) = v108
              + (v71 ^ 0x7D2D6DBF)
              - 1770087651
              + (((v77 | v76) - ((2 * (v77 | v76)) & 0xA7047CE6) - 746439053) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = (v7 >> 17) + v77 - ((2 * ((v7 >> 17) + v77)) & 0xFD066740) - 24956000;
  int v78 = v50 ^ 0xFE8333A0;
  HIDWORD(v7) = v99
              + v73
              - 411166801
              + (((v78 | v43 ^ 0x2C7DC18C) - ((2 * (v78 | v43 ^ 0x2C7DC18C)) & 0xA2EBB030) - 780806120) ^ v75);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 11) + v78 - ((2 * ((v7 >> 11) + v78)) & 0x920E311A) - 922281843;
  int v79 = v43 ^ 0xC907188D;
  HIDWORD(v7) = v106
              + v74
              + 1346752825
              + (((v79 | v75 ^ 0x2E8A27E7) - ((2 * (v79 | v75 ^ 0x2E8A27E7)) & 0xFD066740) - 24956000) ^ v50);
  LODWORD(v7) = HIDWORD(v7);
  int v80 = (v7 >> 26) + v79 - ((2 * ((v7 >> 26) + v79)) & 0x140E04FA) + 168231549;
  int v81 = v80 ^ 0xA07027D;
  HIDWORD(v7) = v97
              + v77
              + 2046247944
              + (((v80 ^ 0xA07027D | v50 ^ 0x17CCC5F)
                - ((2 * (v80 ^ 0xA07027D | v50 ^ 0x17CCC5F)) & 0x920E311A)
                - 922281843) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = (v7 >> 22) + (v80 ^ 0xA07027D) - ((2 * ((v7 >> 22) + (v80 ^ 0xA07027D))) & 0xED1C9498) - 158447028;
  int v82 = v50 ^ 0xF68E4A4C;
  HIDWORD(v7) = v104
              + v78
              - 354784269
              + (((v82 | v43 ^ 0x36F8E772) - ((2 * (v82 | v43 ^ 0x36F8E772)) & 0x140E04FA) + 168231549) ^ v80);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 17) + v82 - ((2 * ((v7 >> 17) + v82)) & 0x25052E1E) - 1836935409;
  int v83 = v43 ^ 0x9282970F;
  HIDWORD(v7) = v95
              + v79
              + 1886311751
              + (((v83 | v80 ^ 0xF5F8FD82) - ((2 * (v83 | v80 ^ 0xF5F8FD82)) & 0xED1C9498) - 158447028) ^ v50);
  LODWORD(v7) = HIDWORD(v7);
  int v84 = (v7 >> 11) + v83 - ((2 * ((v7 >> 11) + v83)) & 0x5603A2BA) - 1425944227;
  unsigned int v85 = v84 ^ 0xAB01D15D;
  HIDWORD(v7) = v102
              + v81
              + 1519580613
              + (((v84 ^ 0xAB01D15D | v50 ^ 0x971B5B3)
                - ((2 * (v84 ^ 0xAB01D15D | v50 ^ 0x971B5B3)) & 0x25052E1E)
                - 1836935409) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = (v7 >> 26) + (v84 ^ 0xAB01D15D) - ((2 * ((v7 >> 26) + (v84 ^ 0xAB01D15D))) & 0xCF14F46) - 2038913117;
  int v86 = v50 ^ 0x8678A7A3;
  HIDWORD(v7) = v109
              + v82
              - 384344490
              + (((v86 | v43 ^ 0x6D7D68F0) - ((2 * (v86 | v43 ^ 0x6D7D68F0)) & 0x5603A2BA) - 1425944227) ^ v84);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 22) + v86 - ((2 * ((v7 >> 22) + v86)) & 0xE53892B0) - 224638632;
  int v87 = v43 ^ 0xF29C4958;
  HIDWORD(v7) = v100
              + v83
              - 1913931126
              + (((v43 ^ 0xF29C4958 | v84 ^ 0x54FE2EA2)
                - ((2 * (v43 ^ 0xF29C4958 | v84 ^ 0x54FE2EA2)) & 0xCF14F46)
                - 2038913117) ^ v50);
  LODWORD(v7) = HIDWORD(v7);
  int v88 = (v7 >> 17) + (v43 ^ 0xF29C4958) - ((2 * ((v7 >> 17) + (v43 ^ 0xF29C4958))) & 0xF46BBB7A) + 2050350525;
  int v89 = v88 ^ 0x7A35DDBD;
  HIDWORD(v7) = v107
              + v85
              + 955418903
              + (((v88 ^ 0x7A35DDBD | v50 ^ 0x7987585C)
                - ((2 * (v88 ^ 0x7A35DDBD | v50 ^ 0x7987585C)) & 0xE53892B0)
                - 224638632) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  int v90 = (v7 >> 11) + (v88 ^ 0x7A35DDBD) - ((2 * ((v7 >> 11) + (v88 ^ 0x7A35DDBD))) & 0xF2D66984) - 110414654;
  unsigned int v91 = v90 ^ 0xF96B34C2;
  HIDWORD(v7) = v98
              + (v50 ^ 0x8678A7A3)
              - 499255816
              + (((v91 | v43 ^ 0xD63B6A7) - ((2 * (v91 | v43 ^ 0xD63B6A7)) & 0xF46BBB7A) + 2050350525) ^ v88);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v43) = (v7 >> 26) + v91 - ((2 * ((v7 >> 26) + v91)) & 0x71EE9924) - 1191752558;
  HIDWORD(v7) = v105
              + v87
              - 1473943125
              + (((v43 ^ 0xB8F74C92 | v88 ^ 0x85CA2242)
                - ((2 * (v43 ^ 0xB8F74C92 | v88 ^ 0x85CA2242)) & 0xF2D66984)
                - 110414654) ^ v90);
  LODWORD(v7) = HIDWORD(v7);
  *(_DWORD *)(v93 - 0x77DD04A0CDF15AELL) += v43 ^ 0xB8F74C92;
  int v92 = ((2 * ((v7 >> 22) + (v43 ^ 0xB8F74C92))) & 0xEAF5FBFE)
      + (((v7 >> 22) + (v43 ^ 0xB8F74C92)) ^ 0x757AFDFF)
      - 1970994687;
  HIDWORD(v7) = result
              + v89
              + 365054513
              + (((v92 | v90 ^ 0x694CB3D) - ((2 * (v92 | v90 ^ 0x694CB3D)) & 0x71EE9924) - 1191752558) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v50) = v92 + (v7 >> 17);
  HIDWORD(v7) = v52 + (v90 ^ 0xF96B34C2) - 697218297 + ((v50 | v43 ^ 0x4708B36D) ^ v92);
  LODWORD(v7) = HIDWORD(v7);
  *(_DWORD *)(v93 - 0x77DD04A0CDF15AALL) += v50 + (v7 >> 11);
  *(_DWORD *)(v93 - 0x77DD04A0CDF15A6) += v50;
  *(_DWORD *)(v93 - 0x77DD04A0CDF15A2) += v92;
  return result;
}

void sub_22B39798C(uint64_t a1)
{
  if (*(void *)(a1 + 8)) {
    BOOL v2 = *(void *)(a1 + 16) == 0x5E30592FF90A5404;
  }
  else {
    BOOL v2 = 1;
  }
  int v5 = v2 || *(void *)a1 == 0x1901A95D18EF69DDLL || *(void *)(a1 + 32) == 0x717BE438C5D0856CLL;
  int v1 = *(_DWORD *)(a1 + 24) ^ (225134719 * ((a1 - 53603660 - 2 * (a1 & 0xFCCE12B4)) ^ 0xEA3E579E));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B397AA4()
{
  return sub_22B397AC0();
}

uint64_t sub_22B397AC0@<X0>(int a1@<W2>, int a2@<W6>, uint64_t a3@<X8>)
{
  int8x16_t v9 = *(int8x16_t *)(v5 + (v3 + a1 + a3));
  *(int8x16_t *)((char *)&STACK[0x260] + a3) = vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v8)), v7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((a3 + 16 != ((v4 - 264) ^ 0x38)) * a2) | v4)))();
}

uint64_t sub_22B397B0C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v7 = 29 * (v6 ^ 0x8A);
  *(unsigned char *)(a3 + a2 - 1991934121 + v7) ^= *(unsigned char *)(*(void *)(a1 + 8 * (v6 ^ 0xF3)) + a2 - 1991934121 + v7);
  return (*(uint64_t (**)(void))(a4 + 8 * (((a2 + 1 >= v4) * v5) ^ (v7 + 1217))))();
}

uint64_t sub_22B397B84()
{
  *(void *)(v5 - 128) = v4;
  *(void *)(v5 - 112) = v1;
  *(_DWORD *)(v5 - 120) = v0
                        + ((((v5 - 136) | 0x2FCD0487) - (v5 - 136) + ((v5 - 136) & 0xD032FB78)) ^ 0xC5DA3373) * v3
                        - 329;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x3E2)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*(_DWORD *)(v5 - 136) > 0x64079912u) * (5 * (v0 ^ 0xC6D) - 552)) ^ v0)))(v6);
}

void sub_22B397CA0()
{
}

uint64_t sub_22B397CA8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((720 * (*(unsigned __int8 *)(v2 + 5) == ((-15 * (v0 ^ 3)) ^ 0x12))) ^ v0)))();
}

void sub_22B397D90(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1866394843 * ((1270393433 - (a1 | 0x4BB8AA59) + (a1 | 0xB44755A6)) ^ 0x5E506252));
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = ((unint64_t)(*(_DWORD *)(v2 - 0x21AEEC4F795AEEB7) + 205) >> 3) & 0x3F;
  *(unsigned char *)(v2 - 0x21AEEC4F795AEEAFLL + v3) = 0x80;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B397EB8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((21 * (v7 + v6 + 1217396757 < ((a2 - 1444558502) & 0xFF5FFFE7) - a6 - 3750)) ^ a2)))();
}

void sub_22B397F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v10 = 59 * (a8 ^ 0xE2E);
  *(_DWORD *)(v9 - 144) = (v10 - 3607) & v8;
  *(void *)(v9 - 152) = (v10 + 1416511784) & 0xAB91BBFF;
  JUMPOUT(0x22B397FA0);
}

void sub_22B39806C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  STACK[0x440] = a57;
  JUMPOUT(0x22B398084);
}

uint64_t sub_22B3980A0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((((v1 + 1101137760) & 0xBE5DF6ED) + 1879951602) & 0x8FF238BF) + 1604) ^ (v1 + 1101137760) & 0xBE5DF6ED)))();
}

void sub_22B39813C()
{
}

uint64_t sub_22B398144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v13 = *(unsigned char *)STACK[0x260] == 42
     && LODWORD(STACK[0x528]) == (STACK[0x220] ^ 0xBD9A9C24)
     && v9 == v8 - 1;
  return (*(uint64_t (**)(void))(v10 + 8 * ((507 * v13) ^ (a8 - 1884))))();
}

uint64_t sub_22B398194()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (((((v0 == 63) ^ v1) & 1) * ((v1 ^ 0xD78) + 216)) ^ v1)))(1652, 804447487);
}

uint64_t sub_22B3981EC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (a2 ^ (120 * (v2 == 0x891206D0)))))(a1, 247447155);
}

uint64_t sub_22B398244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1010 * (v7 + 1 == v9 + 32)) ^ a7)))();
}

uint64_t sub_22B398314()
{
  int v8 = v1 + v0 - 855;
  *int v6 = v6[623];
  int v9 = v1 + v0 - 748101775;
  *(_DWORD *)(v7 - 140) = (v8 + 13955456) ^ v4;
  *(void *)(v7 - 136) = v5;
  *(void *)(v7 - 128) = (v3 + 450270684) - v4;
  *(_DWORD *)(v7 - 120) = (v8 - 748101125) ^ v4;
  *(_DWORD *)(v7 - 116) = v4 ^ 1;
  *(_DWORD *)(v7 - 112) = v9 + v4;
  *(_DWORD *)(v7 - 108) = (v9 ^ 0xF) - v4;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v8 ^ (v1 + 590))))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v7 - 144)))(v10);
}

uint64_t sub_22B3983B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v20 = 2009815553 * ((v19 + 631667356 - 2 * ((v19 - 160) & 0x25A67B3C)) ^ 0xD4AD5579);
  *(_DWORD *)(v19 - 136) = v15 - v20 + 2126;
  *(_DWORD *)(v19 - 104) = v18 - v20 + 285189382;
  *(void *)(v19 - 128) = v16;
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 112) = a12;
  *(void *)(v19 - 160) = a13;
  *(void *)(v19 - 144) = a15;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v15 + 2863)))(v19 - 160);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((107
                                              * (*(_DWORD *)(v19 - 152) == ((v15 + 1893579499) & 0x9FB7FFCB ^ ((v15 - 1154) | 0xD3) ^ 0xCB6B53D1))) ^ v15)))(v21);
}

uint64_t sub_22B3984C4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 == ((v2 + 2052673412) & 0x85A6AFDC ^ 0x536A9BDE)) * (((v2 - 1911) | 0x207) ^ 0x236)) ^ (v2 + 734))))();
}

uint64_t sub_22B398520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  int v31 = 1292559617 * ((2 * ((v30 - 144) & 0x6D4AB020) - (v30 - 144) + 313872350) ^ 0xB5E627B7);
  *int v28 = &a25 + v25;
  *(_DWORD *)(v30 - 136) = (v27 + 1105) ^ v31;
  *(_DWORD *)(v30 - 132) = v31 ^ 0x52ED3B2E;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 + 3610)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((((v29 == 0) ^ v27) & 1) * (v27 - 31)) ^ (v27 + 1759))))(v32);
}

uint64_t sub_22B3985DC(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16)
{
  unsigned int v27 = v21 - 16;
  uint64_t v28 = v27 & 0xF;
  uint64_t v29 = v20;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v25).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v25).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, v26));
  *(int8x16_t *)(v16 + v27) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v19 + v28 - 15), *(int8x16_t *)(a16 + v27)), veorq_s8(*(int8x16_t *)(v18 + v28 - 15), *(int8x16_t *)(v28 + v17 - 13))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v24 + 8 * (((v22 == 16) * v23) ^ a15)))();
}

uint64_t sub_22B3985E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v17 = (a8 + v13);
  *(unsigned char *)(v15 + v17) = *(unsigned char *)(v10 + (v17 & 0xF)) ^ *(unsigned char *)(v8 + v17) ^ *(unsigned char *)(v11 + (v17 & 0xF)) ^ *(unsigned char *)((v17 & 0xF) + v9 + 4) ^ (-11 * (v17 & 0xF));
  return (*(uint64_t (**)(void))(v16 + 8 * ((29 * (a8 - 1 != v12 + 1229)) ^ (v14 - 1021))))();
}

uint64_t sub_22B398658()
{
  *(_DWORD *)(v3 - 128) = v1
                        - 1734664879
                        * ((((v3 - 128) | 0x16DF9A24) - (v3 - 128) + ((v3 - 128) & 0xE92065D8)) ^ 0x3904B23E)
                        - 180;
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xD01)))(v3 - 128);
}

uint64_t sub_22B3986F8()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((v2 ^ 0x96C) + v2 - 1220 - 6) * (v1 == v0)) ^ v2)))(1652);
}

uint64_t sub_22B398738()
{
  BOOL v5 = (v2 - 426346993) > 0x1BBDBE6C && ((v0 - 773) | 0x201u) - v1 + 465416232 > v2 - 426346993;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v5) | (16 * v5)) ^ v0)))();
}

void sub_22B3987A4()
{
}

uint64_t sub_22B3987B0(_DWORD *a1)
{
  *((unsigned char *)a1 + v1 + ((v2 - 1609858277) | 0xA044404u) - 526634058) = 30;
  *a1 = v1;
  return 0;
}

void sub_22B3987F8(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  int v1 = 2009815553 * ((~a1 & 0x903E0269 | a1 & 0x6FC1FD96) ^ 0x61352C2C);
  int v2 = *(_DWORD *)(a1 + 24) + v1;
  int v3 = *(_DWORD *)(a1 + 56) - v1;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(_DWORD *)(a1 + 20) - v1;
  unsigned int v7 = 1988622253 * (((&v9 | 0x4D930F29) + (~&v9 | 0xB26CF0D6)) ^ 0xBB8B4F88);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = v4;
  uint64_t v10 = v5;
  unsigned int v11 = (v3 - ((2 * v3 - 594397772) & 0x8953BD56) - 1292699259) ^ v7;
  uint64_t v12 = v5;
  unsigned int v16 = (v6 ^ 0x33C3BFC0) - v7 - 845743636 + ((2 * v6) & 0xE7F7CFEE ^ 0x8070806E);
  int v9 = v2 - v7 - 1814973026;
  uint64_t v8 = (char *)*(&off_26DE9F480 + v2 - 1544) - 8;
  (*(void (**)(int *))&v8[8 * (v2 ^ 0x174C)])(&v9);
  __asm { BRAA            X8, X17 }
}

void sub_22B3989B4()
{
}

uint64_t sub_22B398A64(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61)
{
  return (*(uint64_t (**)(void))(v61 + 8 * (((((a1 - 2746) | 0x800) - 2123) * (a61 == a59)) ^ a1)))();
}

uint64_t sub_22B398A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, int a11, int a12, uint64_t a13, int a14)
{
  int v17 = 731811679 * ((&a10 + 2090079422 - 2 * ((unint64_t)&a10 & 0x7C9414BE)) ^ 0x3562B2FA);
  a13 = v15;
  a10 = &STACK[0xB8308F1D17695A];
  a11 = v17 + 1399495946;
  a12 = v17 - 314449378;
  a14 = v17 + v14 - 1215;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v14 + 2449)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x19157D3ABD2659C6) == -604050357)
                                              * (((v14 - 1301430135) & 0x4D923EFF) + 1372)) ^ v14)))(v18);
}

uint64_t sub_22B398B88()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((3254 * (((v1 - 1489658039) & 0x58CA57FE ^ 0x3B6AE055) == 996861369)) ^ (v1 - 3512))))();
}

void sub_22B398C1C()
{
}

uint64_t sub_22B398C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v7
                                                                                                + 8
                                                                                                * ((2268
                                                                                                  * ((v5 & 8) == ((v6 - 1176) | 0x600) - 1862)) ^ v6)))(a1, a2, a3, a4, a5, (a4 - a5), ((v6 - 1176) | 0x600u) - 809);
}

uint64_t sub_22B398C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(void), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned char *a33,unsigned char *a34,unsigned char *a35,unsigned char *a36,unsigned char *a37,unsigned char *a38,unsigned char *a39,unsigned char *a40,unsigned char *a41,unsigned char *a42,unsigned char *a43,uint64_t a44,unsigned char *a45,unsigned char *a46,unsigned char *a47,unsigned char *a48)
{
  *a33 = *(unsigned char *)(STACK[0xB18] + v52);
  *a34 = *(unsigned char *)(STACK[0xB58] + v51);
  *a35 = *(unsigned char *)(STACK[0xB98] + v50);
  *a36 = *(unsigned char *)(STACK[0xBD8] + v56);
  *a37 = *(unsigned char *)(STACK[0xB68] + a5);
  *a38 = *(unsigned char *)(STACK[0xBA8] + v49);
  *a45 = *(unsigned char *)(STACK[0xBE8] + v53);
  *a46 = *(unsigned char *)(STACK[0xB28] + v48);
  *a39 = *(unsigned char *)(STACK[0xBB8] + v57);
  *a40 = *(unsigned char *)(STACK[0xB38] + a6);
  *a41 = *(unsigned char *)(STACK[0xBF8] + a8);
  *a47 = *(unsigned char *)(STACK[0xB78] + v54);
  *a48 = *(unsigned char *)(STACK[0xBC8] + a7);
  *a42 = *(unsigned char *)(STACK[0xB88] + a2);
  *a43 = *(unsigned char *)(STACK[0xB48] + a1);
  *a22 = *(unsigned char *)(STACK[0xC08] + v55);
  return a15();
}

uint64_t sub_22B398D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((840 * (v5 + 1 == v7 + 80)) ^ a5)))();
}

uint64_t sub_22B398E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((1477 * (a5 + 1 == v7 + 16)) ^ (v5 + 1469))))(a3);
}

uint64_t sub_22B398F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  return (*(uint64_t (**)(void))(v54 + 8 * ((a54 + 2816) ^ (13 * (a11 != 0)))))();
}

uint64_t sub_22B398F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,uint64_t a33,int a34,int a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(void))(v38 + 8 * ((3488 * (a32 + a38 + a35 == ((32 * v39) ^ 0x78DD847D))) ^ v39)))();
}

uint64_t sub_22B398FCC@<X0>(uint64_t a1@<X8>, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, unint64_t *a8, uint64_t a9)
{
  a8 = &STACK[0x1367E3C5726D8FC3];
  a9 = a1;
  a7 = v11 - ((&a7 - 342514658 - 2 * (&a7 & 0xEB95A41E)) ^ 0x4CC6CC77) * v10 - 861;
  (*(void (**)(unsigned int *))(v9 + 8 * (v11 + 2657)))(&a7);
  a8 = a3;
  LODWORD(a9) = v11
              - 1734664879 * ((&a7 & 0x48E28B6C | ~(&a7 | 0x48E28B6C)) ^ 0x98C65C89)
              + 1667;
  uint64_t v12 = (*(uint64_t (**)(unsigned int *))(v9 + 8 * (v11 + 2526)))(&a7);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((a3 == 0) * (((v11 + 129251834) & 0x4FFF) - 3900)) ^ (v11 + 129251834) & 0x4FFF)))(v12);
}

uint64_t sub_22B3990DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W8>)
{
  unint64_t v5 = ((unint64_t)&STACK[0x4E0] ^ 0xD2FEEF3FFEFDFE4)
     - 0xC00AA12CC0445E4
     + ((2 * (void)&STACK[0x4E0]) & 0x1A5FDDE7FFDFBFC0);
  uint64_t v6 = ((a4 + 1337072149) & 0xB04DED3F ^ 0xFFFFFFFFFFFFF6E4) + v4;
  *(void *)(a1 + 464) = v6;
  *(unsigned char *)(a2 + v6) = (v5 ^ 0xBA) * (v5 + 17);
  return (*(uint64_t (**)(void))(a3 + 8 * ((25 * (*(void *)(a1 + 464) == 0)) ^ a4)))();
}

uint64_t sub_22B399180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = (v73 + 17337848) | 0x6C206622;
  *(_DWORD *)(v76 - 240) = (*(_DWORD *)(v76 - 240) + v77 - ((2 * *(_DWORD *)(v76 - 240)) & 0xD67F851E) - 32062419) ^ a73;
  return (*(uint64_t (**)(void))(v75
                              + 8
                              * ((3721
                                * (((((v74 - 1 - v77) | (v77 - (v74 - 1))) >> ((v77 + 125) & 0x34 ^ 0xB)) & 1) == 0)) ^ (v77 - 1831405025 + 7 * (v77 ^ 0x6D28FF2E)))))();
}

uint64_t sub_22B3991DC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x70D52A7E711E5036) = *(_DWORD *)(a2 - 0x48A9B556C05DE57DLL);
  *(void *)(a1 - 0x70D52A7E711E502ELL) = *(void *)(a2 - 0x48A9B556C05DE579);
  return 0;
}

void sub_22B3993BC(uint64_t a1)
{
  int v1 = 2009815553 * (a1 ^ 0xF10B2E45);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 16) - 0x3F4E6157ECB6AC12) - 85928811;
  unsigned int v3 = *(_DWORD *)(a1 + 56) + v1 - 1273193734;
  BOOL v4 = v2 < 0x307C986C;
  BOOL v5 = v2 > v3;
  if (v3 < 0x307C986C != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X10, X17 }
}

void sub_22B3994A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v5 - 248) = a5 + 6;
  *(_DWORD *)(v5 - 256) = a5 + 5;
  JUMPOUT(0x22B3995ACLL);
}

void sub_22B399620()
{
  STACK[0x2F0] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3135));
  JUMPOUT(0x22B3A2CA0);
}

void sub_22B399630()
{
}

uint64_t sub_22B39963C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v18 = (v8 ^ v11)
      + v6
      + ((a2 ^ (v11 + v9 + 90 - 1871)) & (a1 ^ v11) | (a2 ^ v17) & (v7 ^ v11))
      + *(_DWORD *)(a4 + 4 * (a6 + v12))
      + (*(_DWORD *)(v14 + 4 * (*(unsigned char *)(a3 + a6 + v12) - 53)) ^ v13);
  unsigned int v19 = (v18 + v11 - (v16 & (2 * v18))) ^ v11;
  int v20 = ((v19 << (*(unsigned char *)(a5 + a6 + v12) - 113)) | (v19 >> (113 - *(unsigned char *)(a5 + a6 + v12)))) + (a1 ^ v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((442 * (a6 + 1 == v15 + 16)) ^ v9)))(v20 + v11 - (v16 & (2 * v20)));
}

void sub_22B399708()
{
  int v3 = v0 ^ 0xC04;
  uint64_t v4 = (((v0 ^ 4) + 95) ^ *(unsigned char *)(v2 - 112));
  uint64_t v5 = (char *)*(&off_26DE9F480 + (v0 ^ 0xB9D)) - 12;
  uint64_t v6 = v5[v4];
  int v7 = (char *)*(&off_26DE9F480 + v3 - 1467) - 4;
  int v8 = *(_DWORD *)&v7[4 * (v6 ^ 0x35)];
  uint64_t v9 = *(unsigned __int8 *)(v2 - 111);
  *(_DWORD *)(v2 - 136) = v1;
  uint64_t v10 = (char *)*(&off_26DE9F480 + v3 - 1628) - 4;
  uint64_t v11 = v10[v9 ^ 0x4D];
  uint64_t v12 = (char *)*(&off_26DE9F480 + (v3 ^ 0x769)) - 8;
  uint64_t v13 = v12[*(unsigned __int8 *)(v2 - 110) ^ 0x51];
  uint64_t v14 = (char *)*(&off_26DE9F480 + (v3 ^ 0x77B)) - 8;
  char v15 = v14[*(unsigned __int8 *)(v2 - 109) ^ 0x4ALL];
  uint64_t v16 = v5[*(unsigned __int8 *)(v2 - 108) ^ 0xFALL];
  *(void *)(v2 - 152) = v10[*(unsigned __int8 *)(v2 - 107) ^ 0x27];
  uint64_t v17 = *(unsigned __int8 *)(v2 - 105);
  uint64_t v18 = *(unsigned __int8 *)(v2 - 106);
  *(void *)(v2 - 144) = v12[v18 ^ 0xCE];
  *(_DWORD *)(v2 - 208) = v14[v17 ^ 0x84];
  uint64_t v19 = v5[*(unsigned __int8 *)(v2 - 104) ^ 0x9ELL];
  *(void *)(v2 - 200) = v10[*(unsigned __int8 *)(v2 - 103) ^ 0x83];
  *(void *)(v2 - 176) = v12[*(unsigned __int8 *)(v2 - 102) ^ 0x3ELL];
  uint64_t v20 = v5[*(unsigned __int8 *)(v2 - 100) ^ 7];
  uint64_t v21 = v12[*(unsigned __int8 *)(v2 - 98) ^ 0x31];
  uint64_t v22 = v10[*(unsigned __int8 *)(v2 - 99) ^ 0x65] ^ 0xALL;
  uint64_t v23 = *(unsigned __int8 *)(v2 - 97) ^ 0x2FLL;
  *(_DWORD *)(v2 - 192) = v14[*(unsigned __int8 *)(v2 - 101) ^ 8];
  LOBYTE(v14) = v14[v23];
  int v24 = *(_DWORD *)&v7[4 * (v16 ^ 0x82)];
  *(_DWORD *)(v2 - 184) = *(_DWORD *)&v7[4 * (v19 ^ 0x2D)];
  int v25 = *(_DWORD *)&v7[4 * (v20 ^ 0x5E)];
  uint64_t v26 = (uint64_t)*(&off_26DE9F480 + (v3 ^ 0x6E6));
  unsigned int v27 = (char *)*(&off_26DE9F480 + (v3 ^ 0x692)) - 8;
  LODWORD(v21) = *(_DWORD *)&v27[4 * (v21 ^ 0xDD)];
  uint64_t v28 = (char *)*(&off_26DE9F480 + v3 - 1561) - 12;
  LODWORD(v14) = v28[((v14 ^ 0x67) + 64)];
  LOBYTE(v7) = (v14 >> 5) ^ (v14 >> 2) ^ 0x2B;
  unsigned __int8 v29 = v14 ^ 0xF6 ^ ((_BYTE)v7 - 2 * (v7 & 0xF) + 79);
  unsigned int v30 = v20 ^ (*(_DWORD *)(v26 + 4 * v22) + 1480423570) ^ v25 ^ v21 ^ ((((*(_DWORD *)(v26 + 4 * v22)
                                                                                      + 1480423570) >> 3) & 0x11E7B256)
                                                                     - (((*(_DWORD *)(v26 + 4 * v22)
                                                                                      + 1480423570) >> 2) & 0x21426008)
                                                                     - 1667140339) ^ (((v21 >> 5) ^ (v21 >> 2) ^ 0x2FF51CE9)
                                                                                    - ((2
                                                                                      * ((v21 >> 5) ^ (v21 >> 2) ^ 0x2FF51CE9)) & 0x482B1CDC)
                                                                                    - 468349330);
  unsigned __int8 v31 = v20 ^ (*(unsigned char *)(v26 + 4 * v22) - 110) ^ v25 ^ v21 ^ ((((*(_DWORD *)(v26 + 4 * v22) + 1480423570) >> 3) & 0x56)
                                                             - (((*(_DWORD *)(v26 + 4 * v22) + 1480423570) >> 2) & 8)
                                                             + 13) ^ (((v21 >> 5) ^ (v21 >> 2) ^ 0xE9)
                                                                    - ((2
                                                                      * ((v21 >> 5) ^ (v21 >> 2) ^ 0xE9)) & 0xDC)
                                                                    + 110) ^ 0x6D ^ v29;
  uint64_t v32 = (char *)*(&off_26DE9F480 + (v3 ^ 0x6CF)) - 12;
  LODWORD(v20) = -435650045 * *(_DWORD *)&v32[4 * (BYTE2(v30) ^ 0x24)];
  unsigned int v33 = v20 - 2 * ((v20 + 1211604656) & 0x484CDEDF ^ v20 & 4) + 277118347;
  int v35 = *(_DWORD *)&v27[4 * (v13 ^ 0x5E)];
  unsigned int v36 = (v35 ^ 0xAA84EE68) >> (v18 & 3 ^ 1) >> (v18 & 3 ^ 2);
  int v37 = (2 * (v35 & 0x800)) ^ 0x1000 | v35 & 0x800;
  unsigned int v38 = (((v36 - ((2 * v36) & 0xA6D5C77A) - 747969603) ^ v35) >> 2) ^ 0x1E7B8375;
  int v39 = 856830893 - v37;
  if ((v38 & (v37 - 2048)) == 0) {
    int v39 = v37 | 0x331223AD;
  }
  unsigned int v40 = v28[((v15 ^ 0x5D) + 64)];
  unsigned int v34 = *(_DWORD *)(v26 + 4 * (v11 ^ 0x15)) + 1480423570;
  int v41 = v6 ^ v34 ^ v8 ^ v35 & 0xFFFFF7FF ^ (((v34 >> 3) & 0x11E7B256) - ((v34 >> 2) & 0x21426008) - 1667140339) ^ v40 ^ 0x96 ^ (((v40 >> 5) ^ (v40 >> 2) ^ 0x2B) - ((2 * ((v40 >> 5) ^ (v40 >> 2) ^ 0x2B)) & 0xDF) + 47) ^ (v38 - 856828845 + v39);
  *(_DWORD *)(v2 - 168) = v41;
  int v42 = v30 ^ 0x6D ^ v29;
  uint64_t v43 = (char *)*(&off_26DE9F480 + v3 - 1597) - 12;
  int v44 = *(_DWORD *)&v43[4 * (v30 ^ 0x6D ^ v29 ^ 0x8C)];
  *(_DWORD *)(v2 - 160) = v3;
  uint64_t v45 = (char *)*(&off_26DE9F480 + (v3 ^ 0x731)) - 8;
  uint64_t v46 = (char *)*(&off_26DE9F480 + (v3 ^ 0x63E)) - 4;
  int v47 = v45[HIBYTE(v30) ^ 0x57] ^ v44 ^ BYTE1(v30) ^ 0xB3 ^ ((v31 ^ 0xAA)
                                                                              + 730123293
                                                                              + ((2 * (v31 ^ 0xAA) + 94) & 0xDA ^ 0x78F65FFF)) ^ ((BYTE1(v30) ^ 0xB3) + 1118848685 + ((2 * (BYTE1(v30) ^ 0xB3) + 1584) & 0x728 ^ 0x77DF6FFF)) ^ *(_DWORD *)&v46[4 * (BYTE1(v30) ^ 0x87)] ^ (v33 >> 4) ^ (v33 >> 7);
  int v48 = *(_DWORD *)(v26 + 4 * (*(void *)(v2 - 152) ^ 0xC0));
  int v49 = v41 ^ v33 ^ ((v47 ^ 0xD1454D0) - 2 * ((v47 ^ 0xD1454D0) & 0x484CDEDF ^ v47 & 4) - 934486309);
  *(_DWORD *)(v2 - 152) = v49;
  int v50 = v48 + 1480423570;
  unsigned int v51 = (((v48 + 1480423570) >> 3) & 0x11E7B256) - (((v48 + 1480423570) >> 2) & 0x21426008);
  unsigned int v52 = *(_DWORD *)&v27[4 * (*(void *)(v2 - 144) ^ 0xF2)];
  unsigned int v53 = v28[((*(_DWORD *)(v2 - 208) ^ 0x5F) + 64) ^ 0x9BLL];
  int v54 = v16 ^ v52 ^ v50 ^ v24 ^ (v51 - 1667140339) ^ (((v52 >> 5) ^ (v52 >> 2) ^ 0x2FF51CE9)
                                                    - ((2 * ((v52 >> 5) ^ (v52 >> 2) ^ 0x2FF51CE9)) & 0x337D7F8A)
                                                    - 641810491) ^ v53 ^ 0x9B ^ (((v53 >> 5) ^ (v53 >> 2) ^ 0x2B) - ((2 * ((v53 >> 5) ^ (v53 >> 2) ^ 0x2B)) & 0x44) + 34);
  *(_DWORD *)(v2 - 144) = v54;
  int v55 = *(_DWORD *)(v26 + 4 * (*(void *)(v2 - 200) ^ 0x89));
  unsigned int v56 = v55 - ((2 * v55 + 276492580) & 0x145CCACE) - 496247303;
  int v57 = (v56 >> 3) & 0x11E7B256;
  int v58 = v56 ^ 0x64941A9C;
  v56 ^= 0x8A2E6567;
  unsigned int v59 = (v56 + (v58 ^ v57) + 1) ^ ((v57 ^ 0xEEBA7FFB) + 1);
  unsigned int v60 = (v57 ^ 0xCF6C61D1 ^ (v59 - ((2 * v59) & 0xBC53C3AA) - 567680555)) + v56;
  unsigned int v61 = *(_DWORD *)&v27[4 * (*(void *)(v2 - 176) ^ 0x5FLL)];
  unsigned int v62 = v28[((*(_DWORD *)(v2 - 192) ^ 0x5F) + 64) ^ 0xE0];
  int v63 = v19 ^ v61 ^ *(_DWORD *)(v2 - 184) ^ (((v61 >> 5) ^ (v61 >> 2) ^ 0x2FF51CE9)
                                           - ((2 * ((v61 >> 5) ^ (v61 >> 2) ^ 0x2FF51CE9)) & 0x320751A6)
                                           - 1727813421) ^ v62 ^ 0xAE ^ (((v62 >> 5) ^ (v62 >> 2) ^ 0x2B) - ((2 * ((v62 >> 5) ^ (v62 >> 2) ^ 0x2B)) & 0x2E) + 23) ^ 0xDE ^ (v60 - ((2 * v60) & 0x3942EA1A) - 1667140339);
  int v64 = ((v54 ^ 0x733A51B5) - ((2 * (v54 ^ 0x733A51B5)) & 0x73C65BA6) - 1176293933) ^ v49 ^ 0x4082651D;
  *(_DWORD *)(v2 - 192) = v64;
  unsigned int v145 = v63 ^ v64 ^ 0xB9085165;
  unsigned int v65 = v145 ^ 0x8A4233B7 ^ v42;
  int v66 = *(_DWORD *)&v32[4 * (BYTE2(v65) ^ 0xEE)];
  unsigned int v67 = -435650045 * v66 - ((202441734 * v66 + 275725664) & 0x10930FC4) - 796842350;
  int v68 = (((v67 >> 7) ^ (v67 >> 4) ^ 0x9940B71)
       - 2 * (((v67 >> 7) ^ (v67 >> 4) ^ 0x9940B71) & 0x84987E6 ^ ((v67 >> 7) ^ (v67 >> 4)) & 4)
       - 2008447006) ^ v67;
  int v69 = v68 - ((2 * v68) & 0x73C65BA6) - 1176293933;
  int v70 = v145 ^ 0xB7 ^ v42;
  int v71 = (v70 ^ 0xC9) - 1011493969;
  int v72 = *(_DWORD *)&v43[4 * (v70 ^ 0xEF)];
  int v73 = v65 ^ 0x66E8409A;
  unsigned int v144 = v45[HIBYTE(v65) ^ 0x25] ^ *(_DWORD *)&v46[4 * (BYTE1(v65) ^ 0x2D)] ^ v49 ^ 0x4082651D ^ BYTE1(v65) ^ (v71 + (v72 ^ 0x67CEF86D) - 2 * (v71 & (v72 ^ 0x4384D06D))) ^ ((BYTE1(v65) ^ 0x19) + 1118848685 + ~((2 * (BYTE1(v65) ^ 0x19) - 1673939408) & 0x88209728)) ^ v69 ^ 0x80;
  unsigned int v74 = v45[HIBYTE(v65) ^ 0x25] ^ *(_DWORD *)&v46[4 * (BYTE1(v65) ^ 0x2D)] ^ v49 ^ 0x4082651D ^ BYTE1(v65) ^ (v71 + (v72 ^ 0x67CEF86D) - 2 * (v71 & (v72 ^ 0x4384D06D))) ^ ((BYTE1(v65) ^ 0x19) + 1118848685 + ~((2 * (BYTE1(v65) ^ 0x19) - 1673939408) & 0x88209728)) ^ v69 ^ 0xE52FBA28 ^ ((v64 ^ 0xB9085165) - ((2 * (v64 ^ 0xB9085165)) & 0xCA5F7562) - 449856847);
  unsigned int v75 = v74 ^ v145 ^ 0x8A4233B7 ^ 0x1ED6E7FF;
  unsigned int v76 = v75 ^ (v73 - ((2 * v73) & 0xA2722788) - 784788540);
  int v77 = -435650045 * *(_DWORD *)&v32[4 * (BYTE2(v76) ^ 0xCC)];
  unsigned int v78 = v77 - 2 * ((v77 + 1211604656) & 0x6DCA19CD ^ v77 & 4) + 906082425;
  unsigned int v79 = v45[HIBYTE(v76) ^ 0x31] ^ *(_DWORD *)&v43[4 * (v76 ^ 0x16)] ^ *(_DWORD *)&v46[4 * (BYTE1(v76) ^ 0xC7)] ^ (v78 >> 4) ^ (v78 >> 7) ^ BYTE1(v76) ^ 0xF3 ^ ((v76 ^ 0x30) + 730123292 - ((2 * (v76 ^ 0x30) - 2022987938) & 0x8709A0DA)) ^ ((BYTE1(v76) ^ 0xF3) + 1118848685 + ((2 * (((BYTE1(v76) ^ 0xF3) + 792) & 0x395 ^ ((v76 >> 8) ^ 0x70CF95 | 0x7FFFFFFE))) ^ 0x88209003));
  int v80 = ((v79 ^ 0xF07352F) - 2 * ((v79 ^ 0xF07352F) & 0x6DCA19D9 ^ v79 & 0x10) - 305522231) ^ v78;
  unsigned int v81 = (v80 - ((2 * v80) & 0xCA5F7562) - 449856847) ^ v144 ^ 0xE52FBAA8;
  *(_DWORD *)(v2 - 232) = v81;
  unsigned int v82 = v81 ^ 0xC3D46688;
  *(_DWORD *)(v2 - 224) = v74;
  unsigned int v83 = ((v81 ^ 0xC3D46688) - 2 * ((v81 ^ 0xC3D46688) & 0x61D0D637 ^ v81 & 0x16) + 1641076257) ^ v74;
  int v84 = ((v83 ^ 0x743F2270) - 2 * ((v83 ^ 0x743F2270) & 0x513913CD ^ v83 & 9) - 784788540) ^ v75;
  unsigned int v85 = v74 ^ v42 ^ 0xDBCD1EC2;
  int v86 = *(_DWORD *)&v32[4 * (((v84 ^ v85) >> 16) ^ 0xD2)];
  unsigned int v87 = -435650045 * v86 - ((-871300090 * v86 - 1871757984) & 0xA2B18D1C) - 1718590146;
  int v88 = ((unsigned __int16)(((v83 ^ 0x2270) - 2 * ((v83 ^ 0x2270) & 0x13CD ^ v83 & 9) + 5060) ^ v75 ^ v85) >> 8);
  int v89 = (v84 ^ v85);
  unsigned int v90 = *(_DWORD *)&v46[4 * (v88 ^ 0xB)] ^ *(_DWORD *)&v43[4 * (v89 ^ 0x99)] ^ (v87 >> 4) ^ (v87 >> 7) ^ v45[((v84 ^ v85) >> 24) ^ 0xE7] ^ v88 ^ 0x3F ^ ((v89 ^ 0xBF) + 730123292 - ((2 * (v89 ^ 0xBF) - 2022987938) & 0x8709A0DA)) ^ ((v88 ^ 0x3F) + 1118848685 + ((2 * (v88 ^ 0x3F) + 1584) & 0x728 ^ 0x77DF6FFF)) ^ 0x5B73D0F;
  unsigned int v91 = v82 ^ v87 ^ (v90 - ((2 * v90) & 0xA2B18D1C) + 1364772494);
  *(_DWORD *)(v2 - 216) = v91;
  v91 ^= 0x5294ECCFu;
  int v92 = v91 ^ v83;
  int v93 = v91 ^ v83 ^ 0x14105A7;
  unsigned int v94 = v93 ^ v85;
  int v95 = *(_DWORD *)&v32[4 * (((v93 ^ v85) >> 16) ^ 6)];
  int v96 = ((unsigned __int16)(v93 ^ v85) >> 8);
  unsigned int v97 = -435650045 * v95 - ((1276183558 * v95 + 275725664) & 0x709ADA9C) + 8719358;
  int v98 = v45[HIBYTE(v94) ^ 0xD6] ^ v96 ^ 0x59 ^ ((v94 ^ 0x53)
                                                                 + 730123293
                                                                 + ((2 * (v94 ^ 0x53) + 94) & 0xDA ^ 0x78F65FFF)) ^ ((v96 ^ 0x59) + 1118848685 + ((2 * (v96 ^ 0x59) + 1584) & 0x728 ^ 0x77DF6FFF)) ^ *(_DWORD *)&v43[4 * (v94 ^ 0x75)] ^ *(_DWORD *)&v46[4 * (v96 ^ 0x6D)] ^ (v97 >> 4) ^ (v97 >> 7);
  int v99 = v91 ^ v97 ^ ((v98 ^ 0xAF44C8E) - 2 * ((v98 ^ 0xAF44C8E) & 0x384D6D5E ^ v98 & 0x10) - 1202885298);
  int v100 = v99 ^ (v93 + 938368344 + ~(2 * (v93 & 0x37EE5D5F ^ v92 & 8)));
  *(_DWORD *)(v2 - 184) = v99;
  int v101 = v93 ^ v84;
  unsigned int v102 = v101 ^ 0x7D0ABB29 ^ ((v100 ^ 0x948EB665)
                            - 2101341877
                            + ((2 * ((v100 ^ 0x948EB665) & 0x2C0114E ^ v100 & 4)) ^ 0xFFFFFFF7)) ^ v94;
  int v103 = -435650045 * *(_DWORD *)&v32[4 * (BYTE2(v102) ^ 0xF2)];
  unsigned int v104 = v103 - 2 * ((v103 + 1211604656) & 0x4A82971F ^ v103 & 9) + 314193350;
  unsigned int v105 = *(_DWORD *)&v46[4 * (BYTE1(v102) ^ 0x6A)] ^ *(_DWORD *)&v43[4 * (v102 ^ 0x88)] ^ v45[HIBYTE(v102) ^ 0x8DLL] ^ (v104 >> 4) ^ (v104 >> 7) ^ BYTE1(v102) ^ 0x5E ^ ((v102 ^ 0xAE) + 730123292 - ((2 * (v102 ^ 0xAE) - 2022987938) & 0x8709A0DA)) ^ ((BYTE1(v102) ^ 0x5E) + 1118848685 + ((2 * (((BYTE1(v102) ^ 0x5E) + 792) & 0x395 ^ ((v102 >> 8) | 0x7FFFFFFE))) ^ 0x88209003)) ^ 0xD3D2CB5;
  unsigned int v106 = v99 ^ v104 ^ (v105 - ((2 * v105) & 0x95052E2C) - 897411306);
  int v107 = v106 ^ 0x14B2B6B6;
  int v108 = v106 ^ v101;
  unsigned int v109 = v106 ^ v101 ^ v102;
  int v110 = *(_DWORD *)&v32[4 * (BYTE2(v109) ^ 0x46)];
  unsigned int v111 = -435650045 * v110 - ((-1871757984 - 871300090 * v110) & 0xD906554E) + 884656471;
  int v112 = ((unsigned __int16)(v109 ^ 0x612A) >> 8);
  int v113 = *(_DWORD *)&v46[4 * (v112 ^ 0x86)] ^ (v111 >> 4) ^ (v111 >> 7) ^ v112 ^ 0xB2 ^ ((v112 ^ 0xB2)
                                                                                       + 1118848685
                                                                                       + ((2 * (v112 ^ 0xB2) + 1584) & 0x728 ^ 0x77DF6FFF)) ^ 0xF1134FF;
  unsigned int v114 = (v113 - ((2 * v113) & 0xD906554E) - 326948185) ^ v111;
  int v115 = *(_DWORD *)&v43[4 * (v109 ^ 0x56)];
  int v116 = v45[HIBYTE(v109) ^ 0xD7];
  *(_DWORD *)(v2 - 176) = v107;
  unsigned int v117 = v116 ^ v115 ^ v107 ^ ((v109 ^ 0x70)
                             + 730123292
                             - ((2 * (v109 ^ 0x70) - 2022987938) & 0x8709A0DA)) ^ (v114
                                                                                                  - ((2 * v114) & 0x6FA4BB08)
                                                                                                  - 1210950268);
  int v118 = v108 ^ 0x5F5270DC;
  unsigned int v119 = v117 ^ 0x981ECC65 ^ v107 ^ ((v100 ^ 0x948EB665) - 2 * ((v100 ^ 0x948EB665) & 0x37D25D86 ^ v100 & 2) - 1210950268);
  unsigned int v120 = ((v108 ^ 0x3FAA4151 ^ v119) - ((2 * (v108 ^ 0x3FAA4151 ^ v119)) & 0x6E656C86) - 1221413309) ^ v109 ^ 0x2300612A;
  int v121 = *(_DWORD *)&v32[4 * (((v120 ^ 0x66C91C5) >> 16) ^ 0x18)];
  unsigned int v122 = -435650045 * v121 - ((-1871757984 - 871300090 * v121) & 0x9ADC3494) - 1784301318;
  int v123 = BYTE1(v120) ^ 4;
  unsigned int v124 = v120 ^ 0xD5725D4A;
  unsigned int v125 = v45[HIBYTE(v120) ^ 0x96] ^ *(_DWORD *)&v43[4 * (v120 ^ 0x3F)] ^ *(_DWORD *)&v46[4 * (BYTE1(v120) ^ 0x30)] ^ v122 ^ v117 ^ 0x981ECC65 ^ v123 ^ ((v120 ^ 0x19) + 730123293 + ((2 * (v120 ^ 0x19) + 94) & 0xDA ^ 0x78F65FFF)) ^ (v123 + 1118848685 + ((2 * ((v123 + 792) & 0x395 ^ ((v120 >> 8) | 0x7FFFFFFE))) ^ 0x88209003)) ^ (((v122 >> 7) ^ (v122 >> 4) ^ 0x44C3D90) - 2 * (((v122 >> 7) ^ (v122 >> 4) ^ 0x44C3D90) & 0xD6E1A4E ^ ((v122 >> 7) ^ (v122 >> 4)) & 4) + 1299061322);
  unsigned int v126 = v125 ^ 0xEEED6AF9 ^ v118;
  int v127 = *(_DWORD *)&v32[4 * (((v126 ^ v124) >> 16) ^ 0x13)];
  unsigned int v128 = -435650045 * v127 - ((202441734 * v127 + 275725664) & 0x3B9F4E3A) - 435730995;
  int v129 = *(_DWORD *)&v46[4 * (((unsigned __int16)(v126 ^ v124) >> 8) ^ 0x36)] ^ (v128 >> 4) ^ (v128 >> 7) ^ ((unsigned __int16)(v126 ^ v124) >> 8) ^ 2 ^ ((((unsigned __int16)(v126 ^ v124) >> 8) ^ 2) + 1118848685 + ((2 * ((unsigned __int16)(v126 ^ v124) >> 8) + 1584) & 0x728 ^ 0x77DF6FFF)) ^ 0x8E7653F;
  int v130 = (v129 - ((2 * v129) & 0x3B9F4E3A) - 1647335651) ^ v128;
  unsigned int v131 = *(_DWORD *)&v43[4 * ((v126 ^ v124) ^ 0xEB)] ^ 0x356D5DC9 ^ v125 ^ 0xEEED6AF9 ^ v45[((v126 ^ v124) >> 24) ^ 0xCBLL] ^ (((v126 ^ v124) ^ 0xCD) + 730123293 + ((2 * ((v126 ^ v124) ^ 0xCD) + 94) & 0xDA ^ 0x78F65FFF)) ^ (v130 - ((2 * v130) & 0x8A32DB08) - 988189308);
  int v132 = v125 ^ 0x80 ^ v119;
  *(_DWORD *)(v2 - 200) = v132 ^ 0xD300006A;
  *(_DWORD *)(v2 - 208) = v131 ^ ((v132 ^ 0xD300006A) - 2 * ((v132 ^ 0xD300006A) & 0x356D5D5D ^ v132 & 0x14) + 896359753) ^ 0x2B1ECC8F;
  int v133 = *(_DWORD *)(v2 - 192) ^ 0x24A4F6A4;
  unsigned int v134 = -1641778019 - v133 - ((1397845688 - 2 * v133) & 0xE8F77A82);
  *(_DWORD *)(v2 - 192) = v133 - ((2 * v133) & 0xE8F77A82);
  int v135 = *(_DWORD *)(v2 - 232) ^ 0xF869528;
  *(_DWORD *)(v2 - 232) = v117 ^ 0x421A6F0;
  unsigned int v143 = v135 + (v134 ^ 0xF47BBD41) - ((2 * (v135 + (v134 ^ 0xF47BBD41))) & 0xD5D62F6E) - 353691721;
  unsigned int v136 = (v143 ^ 0xEAEB17B7)
       - (v117 ^ 0x421A6F0)
       + 1511158001
       - ((2 * ((v143 ^ 0xEAEB17B7) - (v117 ^ 0x421A6F0) + 1511158001)) & 0x2A2A3CA6)
       - 1793778093;
  unsigned int v137 = (((v136 ^ 0x95151E53) - (*(_DWORD *)(v2 - 168) ^ 0xD999BF90) + 1257698665) ^ 0x7B1B3547)
       - 699401819
       + ((2 * ((v136 ^ 0x95151E53) - (*(_DWORD *)(v2 - 168) ^ 0xD999BF90) + 1257698665)) & 0xF6366A8E);
  int v138 = *(_DWORD *)(v2 - 224) ^ 0x48A51CB2;
  unsigned int v139 = (v109 ^ 0x5544940A) - v138 + (v137 ^ 0x807F521E) + ((2 * v137) & 0xFEA43C) + 2050441761;
  *(_DWORD *)(v2 - 168) = v138 - ((2 * v138) & 0x50FF3EE2);
  unsigned int v140 = (*(_DWORD *)(v2 - 144) ^ 0x1314A785)
       + (v92 ^ 0xD35C92B1)
       + ((((v139 - ((2 * v139) & 0x50FF3EE2) + 679452529) ^ 0x287F9F71)
         - 1632641476
         + (v126 ^ 0x37BDEC0B)
         + 1900983309
         + (~(2 * (((v139 - ((2 * v139) & 0x50FF3EE2) + 679452529) ^ 0x287F9F71) - 1632641476 + (v126 ^ 0x37BDEC0B))) | 0x1D6297E5)
         + 1) ^ 0x714EB40D)
       + 1;
  *(_DWORD *)(v2 - 224) = (v92 ^ 0xD35C92B1) - ((2 * (v92 ^ 0xD35C92B1)) & 0x97082AA);
  int v141 = (v125 ^ 0x1D22EC10)
       - (v100 ^ 0x5240254D)
       + ((v140 - ((2 * v140) & 0x97082AA) + 79184213) ^ 0x4B84155)
       - 1380431319;
  unsigned int v142 = (v141
        - (*(_DWORD *)(v2 - 216) ^ 0x72061BE4)
        - ((2 * (v141 - (*(_DWORD *)(v2 - 216) ^ 0x72061BE4)) + 1083265296) & 0xE55D1412)
        - 1829293423) ^ 0xF2AE8A09;
  *(_DWORD *)(v2 - 216) = v142 - ((2 * (v142 + 1600942734)) & 0x6FA4BB08) + 389992466;
  *(_DWORD *)(v2 - 136) = (*(_DWORD *)(v2 - 160) - 1503) | 0x200;
  JUMPOUT(0x22B39B5D4);
}

void sub_22B39E174(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  int v1 = 1734664879 * (((a1 | 0x31D048F7) - (a1 & 0x31D048F7)) ^ 0x1E0B60ED);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = (*(unsigned char *)(a1 + 28) ^ v1);
  uint64_t v4 = (char *)*(&off_26DE9F480 + (v2 ^ 0xDFB)) - 8;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * (v2 ^ 0x36A)])(*(&off_26DE9F480 + v2 - 2817), sub_22B37958C);
  uint64_t v6 = *(void *)((char *)*(&off_26DE9F480 + (v2 ^ 0xD35)) - 4);
  unsigned int v5 = v2 + 1990461019 * (&v5 ^ 0x2FE4A289) - 2897;
  (*(void (**)(unsigned int *))&v4[8 * (v2 ^ 0x1C81)])(&v5);
  __asm { BRAA            X11, X17 }
}

void sub_22B39E2C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 1948972247 * ((a1 - 63361569 - 2 * (a1 & 0xFC392DDF)) ^ 0x49A7D831);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_22B39E454@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v3) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 + v6 - 2695 == v1) * v4) ^ v2)))();
}

uint64_t sub_22B39E47C@<X0>(int a1@<W8>)
{
  *int v4 = v4[623];
  BOOL v5 = (((a1 + 192956929) | 0x940D2825) ^ (((a1 - 669) ^ 0x4A1) + 1618118135)) + v1 == v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((4 * v5) | (8 * v5) | (a1 - 669))))();
}

uint64_t sub_22B39E4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 - 365) ^ (v7 + 649) ^ 0x752) * (v6 == a6)) ^ v7)))();
}

void sub_22B39E51C()
{
}

uint64_t sub_22B39E528(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned __int8 *a32)
{
  int v33 = *a32 ^ 0x22;
  if (v33 == 2) {
    return (*(uint64_t (**)(void))(v32 + 8 * (((*a28 == 326024231) * a9) ^ (a3 + 1939))))();
  }
  if (v33 == 1) {
    return (*(uint64_t (**)(void))(v32
  }
                                + 8
                                * ((((*a28 == 326024231) ^ (a3 + 64)) & 1 | (4
                                                                                            * (((*a28 == 326024231) ^ (a3 + 64)) & 1))) ^ (a3 + 1673))))();
  *(unsigned char *)(a4 + 91) = ((a10 + 56) ^ 0xBA) * (a10 + 73);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8 * ((a3 + 3072) ^ 0xC72 ^ (a3 + 1934))))(a10, 3561126022);
}

uint64_t sub_22B39E668(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((a2 == a7) ^ (a8 - 1)) & 1) * ((43 * (a8 ^ 0x7C5)) ^ 0x511)) | a8)))();
}

uint64_t sub_22B39E78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v10
                                                                                                + 8
                                                                                                * ((490
                                                                                                  * (((a8 - 2802) & v9) == (a8 ^ 0xAFA))) ^ a8)))(a1, a2, a3, a4, a5, (v8 - a4), a8 ^ 0xE33);
}

uint64_t sub_22B39E7C8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 + 2429) ^ (v1 == v0)) & 1) == 0) * ((v2 + 2513) ^ 0xD76)) | v2)))();
}

void sub_22B39E800()
{
}

uint64_t sub_22B39E85C@<X0>(int a1@<W8>)
{
  BOOL v7 = ((*(unsigned __int8 *)(v4 + 8) - 4) ^ v3)
     + v1
     + (((*(unsigned __int8 *)(v4 + 8) - 4) << ((v5 ^ 0xB1) - 100)) & v2) == a1;
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((((v7 | (2 * v7)) != 0) * (((v5 ^ 0xB2F) - 1295) ^ 0x33E)) ^ v5 ^ 0x4B1)))(85);
}

uint64_t sub_22B39E8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v72 = a37 - 0x35211A7059D73243 - a38 < (unint64_t)(v69 ^ 0x22Fu) - 1230
     || a37 - 0x35211A7059D73243 - a69 < (((v69 - 725) | 0xC2u) ^ 0x4CEuLL);
  return (*(uint64_t (**)(void))(v70 + 8 * ((504 * v72) ^ v69)))();
}

unint64_t sub_22B39E950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v15 = *(void *)(v13 - 0x281D12643933BF1BLL);
  unint64_t result = 0xAB114573F18A3524;
  unsigned int v17 = (*(_DWORD *)(v15 + 4 * (v14 - 1) - 0x54EEBA8C0E75CADCLL) ^ v8) >> v7;
  uint64_t v18 = 4 * (v9 + v5 + 1);
  *(_DWORD *)(v15 + v18 - 0x54EEBA8C0E75CADCLL) = v17 + v8 - ((v17 << ((a5 + 5) & 0xDD ^ 0x89)) & (v10 + 677));
  int v19 = v6 - (*(_DWORD *)(*(void *)(v13 - 0x281D12643933BF1BLL) + v18 - 0x54EEBA8C0E75CADCLL) == v8);
  if ((*v11 + v12) >= 0x7FFFFFFF) {
    int v19 = 1841123810 - v19;
  }
  *uint64_t v11 = v19;
  return result;
}

uint64_t sub_22B39EA48()
{
  char v2 = *(unsigned char *)v0;
  uint64_t v3 = *(uint64_t *)((char *)v0 + 1);
  int v4 = *(_DWORD *)((char *)v0 + 9);
  __int16 v5 = *(_WORD *)((char *)v0 + 13);
  char v6 = *((unsigned char *)v0 + 15);
  uint64_t v7 = *v0;
  uint64_t v8 = v0[1];
  int v9 = (char *)&STACK[0x1890] + v1;
  *int v9 = v2;
  *(void *)(v9 + 1) = v3;
  *(_DWORD *)(v9 + 9) = v4;
  *(_WORD *)(v9 + 13) = v5;
  v9[15] = v6;
  *((void *)v9 + 2) = v7;
  *((void *)v9 + 3) = v8;
  return sub_22B39EAA0();
}

uint64_t sub_22B39EAA0(uint64_t a1)
{
  if (a1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v5 * ((7 * ((v1 + 911508532) & 0xC9AB7BFE ^ 0xB39)) ^ 0x575)) ^ v1)))();
}

uint64_t sub_22B39EAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  *(void *)(v9 + v11) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * (((a7 & ~(v8 ^ (v10 == v11))) * a8) ^ v8)))();
}

uint64_t sub_22B39EB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v10 + 1158) ^ 0x337 ^ (657 * (v10 ^ 0x1BD))) * (v9 == a8)) ^ v10)))();
}

uint64_t sub_22B39EB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 ^ (a5 - 969) ^ (a5 + v7 + 1721 - 2690)) * (v5 == v6)) ^ v7)))();
}

uint64_t sub_22B39EB94()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((233 * (((v1 ^ 0xFFFFFFCA) & v0) == 2054175104)) ^ (v1 + 1320))))();
}

uint64_t sub_22B39EBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned char *a36)
{
  *a36 = v37 + 101;
  int v42 = 1503746353 * ((v41 - 168) ^ 0x2661C2B6);
  *(void *)(v41 - 160) = a36;
  *(void *)(v41 - 152) = v36;
  *(_DWORD *)(v41 - 144) = v39 - v42 + 918;
  *(_DWORD *)(v41 - 168) = v42 + 1331781508;
  (*(void (**)(uint64_t))(v40 + 8 * (v39 + 3294)))(v41 - 168);
  *(_DWORD *)(v41 - 152) = (v39 - 381) ^ (731811679 * ((v41 - 168) ^ 0x49F6A644));
  *(void *)(v41 - 168) = v36;
  *(void *)(v41 - 160) = v38 + (v37 << (((v39 ^ 0xF0) + 14) ^ 0x3B ^ (-70 * (v39 ^ 0xF0)))) - 424565168;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 + 3304)))(v41 - 168);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * (v39 ^ (478 * (v37 != 563406243)))))(v43);
}

void sub_22B39ECEC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1866394843 * ((a1 & 0x7DC4DC73 | ~(a1 | 0x7DC4DC73)) ^ 0x682C1478);
  __asm { BRAA            X15, X17 }
}

void sub_22B39EE24()
{
  if (v0 == 588776061) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *uint64_t v2 = v1;
}

void sub_22B39EE8C()
{
}

uint64_t sub_22B39EE98(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v4
                                                             + 8
                                                             * ((11
                                                               * (((a3 + 1336271955) & 0xB05A19FB) - 1484352164 != v3)) ^ a3)))(a1, ((a3 - 2530) | 0x485u) + 594846792, 1825994309);
}

uint64_t sub_22B39EF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  return (*(uint64_t (**)(void))(v52
                              + 8
                              * ((41
                                * (((a12 - (a14 & 0x6A1FE04C) - 618724299) ^ 0x8BE0332B ^ (13 * (a52 ^ 0xEFD)))
                                 + ((2 * (a12 - (a14 & 0x6A1FE04C) - 618724299)) & 0x7DDF8378 ^ 0x681F8048)
                                 + 2136604512 != 1045020956)) ^ a52)))();
}

uint64_t sub_22B39EFDC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*v1 == (((v0 ^ 0xB17) - 1391678573) & 0x52F353DB) - 923)
                                * (((v0 ^ 0xB17) + 643) ^ 0x6B7)) ^ v0 ^ 0xB17)))();
}

void sub_22B39F02C()
{
}

uint64_t sub_22B39F038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  uint64_t v43 = (v40 + v37);
  unsigned int v44 = *(_DWORD *)(&a25 + v43 + 72);
  unsigned int v45 = v44 >> (v42 + (v39 ^ (a7 + 83)) + 36);
  *(unsigned char *)(a2 + (v43 + 1)) = (BYTE2(v44) ^ 0x95) - ((v44 >> 15) & 0x54) + 42;
  *(unsigned char *)(a2 + v43) = (v45 ^ 0x11) - ((2 * v45) & 0x55) + 42;
  *(unsigned char *)(a2 + (v43 + 2)) = (BYTE1(v44) ^ 0x67) + (~(2 * (BYTE1(v44) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a2 + (v43 + 3)) = v44 ^ 0x13;
  BOOL v46 = v40 - 318693966 < (a37 + 1104231203);
  if (v40 - 318693966 < v38 != a37 + 1104231203 < v38) {
    BOOL v46 = a37 + 1104231203 < v38;
  }
  return (*(uint64_t (**)(void))(v41 + 8 * ((97 * !v46) ^ v39)))();
}

uint64_t sub_22B39F124(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((3515 * ((a5 + 1 + v5) < 0x10)) ^ a2)))();
}

uint64_t sub_22B39F224()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((10 * ((v2 + 247) ^ 0x412)) ^ 0x2B2) - 8) * (v0 != v1)) ^ (v2 + 247))))();
}

void sub_22B39F260()
{
}

uint64_t sub_22B39F26C(int a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  *(void *)(a7 + a3) = *(void *)(a2 + a3);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a5 == 0) * a1) ^ a6)))();
}

uint64_t sub_22B39F29C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((60 * (((((a4 + 428) | 0x28) - 1475) ^ 0x9AD18EC9) + a3 < 0x30)) ^ a4)))();
}

uint64_t sub_22B39F2E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((234 * (v8 + (a7 ^ 0xA12 ^ (a4 - 3713)) > 0xFFFFFFEF)) ^ a8)))();
}

uint64_t sub_22B39F31C()
{
  unsigned int v2 = v1 - ((2 * v1 + 692014886) & 0xCEF4A1B6) + 2082076782;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((44
                                * (((2 * v2) & 0xDFA393FE ^ 0xCEA081B6) + (v2 ^ 0x88AB9924) - 714145878 != 1161873833)) ^ 0x645u)))();
}

uint64_t sub_22B39F3E0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((5 * (v1 ^ 0xEE4u)) ^ v3) + v0 == v2 + 20)
                                     * ((v1 + 1176851547) & 0xB9DA9FB5 ^ 0x1D6)) ^ v1)))();
}

uint64_t sub_22B39F434()
{
  *(void *)(v2 + v1 + v5 - 0x21AEEC4F795AEEAELL) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 - (v0 & 0xFFFFFFF8) == -8) * ((v3 - 606) ^ 0xBA6)) ^ v3)))();
}

uint64_t sub_22B39F48C(int a1)
{
  *(unsigned char *)(v2 + v3) = -31;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + 1 == v1) * ((a1 + 305) ^ 0xEC3)) ^ (a1 - 2665))))();
}

void sub_22B39F4C4()
{
}

uint64_t sub_22B39F4D0@<X0>(int a1@<W8>)
{
  int v7 = v5 + 913 + *(unsigned __int8 *)(v4 + 1) - 2027;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3346 * ((v7 ^ v3) + v1 + (v2 & (2 * v7)) == a1)) ^ v5)))();
}

uint64_t sub_22B39F510()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3309
                                * (3 * (v1 ^ 0x1A3) + ((*v0 - 42) ^ 0x1FF57BCB) + ((2 * (*v0 - 42)) & 0x3FEAF796) == 536183600)) ^ v1)))();
}

uint64_t sub_22B39F57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (v69 == 2134617460)
  {
    (*(void (**)(uint64_t))(v70 + 8 * (v71 ^ 0x928)))(*(void *)(v72 + 8 * (v71 - 1503)) - 12);
    uint64_t v80 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(v70 + 8 * (v71 + 2328)))(*(void *)(v72 + 8 * (v71 ^ 0x7ED)) - 12, &STACK[0xC88], 16);
    return (*(uint64_t (**)(uint64_t))(v70 + 8 * ((((v71 - 1700) ^ 0x2C) * (&a69 == 0)) ^ (v71 - 716))))(v80);
  }
  else
  {
    if (v69 == 2134617461)
    {
      int v75 = *(unsigned __int8 *)(a5 + 12);
      if (v75 == 2)
      {
        int v77 = 731811679
            * ((((v74 - 152) ^ 0x3BAF4DA8 | 0x6E6C118E)
              - ((v74 - 152) ^ 0x3BAF4DA8)
              + (((v74 - 152) ^ 0x3BAF4DA8) & 0x9193EE70)) ^ 0x1C35FA62);
        *(_DWORD *)(v74 - 128) = v71 - v77 - 311;
        *(_DWORD *)(v74 - 112) = v77 ^ 0x31FC3556;
        v73[373] = a5 + 0x2F096E18E10B44C4;
        v73[371] = &a37;
        v73[375] = *(void *)(v72 + 8 * (v71 ^ 0x6B1)) - 12;
        (*(void (**)(uint64_t))(v70 + 8 * (v71 ^ 0x930)))(v74 - 152);
      }
      else if (v75 == 1)
      {
        int v78 = 1503746353 * (((v74 - 152) & 0xA72D3203 | ~((v74 - 152) | 0xA72D3203)) ^ 0x7EB30F4A);
        v73[374] = &a37;
        v73[373] = a5 + 0x61FE4C862F36DA70;
        v73[372] = *(void *)(v72 + 8 * (v71 ^ 0x700)) - 8;
        *(_DWORD *)(v74 - 152) = v78 + v71 + 1420;
        *(_DWORD *)(v74 - 120) = v78 + 1148746671;
        (*(void (**)(uint64_t))(v70 + 8 * (v71 + 2355)))(v74 - 152);
      }
      else if (*(unsigned char *)(a5 + 12))
      {
        int v79 = 1866394843 * ((((v74 - 152) | 0x6A61A0C3) - (v74 - 152) + ((v74 - 152) & 0x959E5F38)) ^ 0x80769737);
        v73[372] = &a37;
        v73[374] = *(void *)(v72 + 8 * (v71 ^ 0x789));
        *(_DWORD *)(v74 - 152) = v71 - v79 + 761;
        *(_DWORD *)(v74 - 136) = v79 + 1314556708;
        v73[375] = a5 + 0x1273A3CF5717530ALL;
        (*(void (**)(uint64_t))(v70 + 8 * (v71 + 2437)))(v74 - 152);
      }
      else
      {
        int v76 = 225134719 * ((((v74 - 152) | 0x94C01E3B) + (~(v74 - 152) | 0x6B3FE1C4)) ^ 0x82305B10);
        v73[371] = &a37;
        *(_DWORD *)(v74 - 144) = 324441254 - v76;
        *(_DWORD *)(v74 - 112) = v71 - v76 + 1905;
        v73[375] = *(void *)(v72 + 8 * (v71 ^ 0x6CD)) - 8;
        v73[373] = a5 + 0x66D0A0B6AF3E50EBLL;
        (*(void (**)(uint64_t))(v70 + 8 * (v71 + 2418)))(v74 - 152);
      }
    }
    return sub_22B333550();
  }
}

uint64_t sub_22B39FA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v11 = a8 < 0x10 && ((v8 + 7) & 0xFu) >= (a8 & 0xF);
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * ((51 * v11) ^ (a5 - 150))))(a1, (a5 + 283));
}

uint64_t sub_22B39FA74@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8 * (((v5 + 8 == (((a5 - 2200) | a4) ^ (a1 + 2364))) * ((a5 + a2) & a3 ^ v8)) ^ a5));
  STACK[0x210] = *(void *)(v6 + 8 * (a5 - 2048)) - 4;
  STACK[0x208] = *(void *)(v6 + 8 * (a5 - 2280));
  return v9();
}

uint64_t sub_22B39FA7C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((15 * ((((v0 + 501) ^ (v1 < ((v0 - 1554891302) & 0x5CADCCF6) - 3234)) & 1) == 0)) ^ v0)))();
}

void sub_22B39FACC()
{
}

uint64_t sub_22B39FB7C()
{
  unsigned int v4 = v2 + 759069366 + ((v0 + 114) | 0x40);
  BOOL v6 = v4 <= 0x5F171D9D || ((v0 - 2270) | 0x222u) - v1 + 1595349496 <= v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((422 * v6) ^ v0)))();
}

uint64_t sub_22B39FBF0@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + a1 - 972345994 + ((a2 + 1377039659) | 0x80286C05)) = *(unsigned char *)(v5
                                                                                + a1
                                                                                - 972345994
                                                                                + ((a2 + 1377039659) | 0x80286C05));
  return (*(uint64_t (**)(void))(v3 + 8 * ((1494 * (a1 - 1 == v4)) ^ a2)))(0);
}

uint64_t sub_22B39FC48(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 < v2 - 3338) * (v2 ^ 0xD1F)) | v2)))();
}

uint64_t sub_22B39FC7C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1955 * ((((((v2 - 963) | 0x190) - 1178) ^ (v1 == v0)) & 1) == 0)) ^ v2)))();
}

uint64_t sub_22B39FCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * ((134
                                * ((((v28 + a28 + 96) < 0xFFFFFFFB) ^ ((v30 ^ 0xB0) - 82)) & 1)) ^ (v30 + 68))))();
}

void sub_22B39FD04(uint64_t a1)
{
  int v1 = 2009815553 * (((a1 | 0x4FFE6075) - a1 + (a1 & 0xB0019F8A)) ^ 0xBEF54E30);
  BOOL v3 = *(void *)(a1 + 8) == 0x23BCFE0A21D47076 || (unsigned __int16)(*(_WORD *)(a1 + 20) - v1) == 5602;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B39FDF4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (a2 | (2 * ((a6 + 1 + v6) < 0x40)))))();
}

uint64_t sub_22B39FEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((3 * (((818 * (v20 ^ 0x650) + 552) | 0x503) ^ 0xFFD) - 1678) * (a20 == v21)) ^ (818 * (v20 ^ 0x650)))))();
}

uint64_t sub_22B39FF14()
{
  return sub_22B39FF24();
}

uint64_t sub_22B39FF24(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (v4 + v7 - v5);
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(a3 + v11));
  *(int8x8_t *)(a4 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), v9)), v10));
  return (*(uint64_t (**)(void))(v8 + 8 * ((3046 * ((v6 ^ 0x709) + v5 - 1244 == a1)) ^ v6)))();
}

void sub_22B39FF7C()
{
}

void sub_22B39FF84()
{
}

uint64_t sub_22B39FF8C(int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((196
                                * ((unint64_t)(&a25 + a14 + (v26 + v25 - 1)) >= (unint64_t)(a1 ^ a4) - 2177978095u)) ^ a1)))();
}

uint64_t sub_22B39FFD4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((100 * ((v3 + 1 + v2) > 0x1F)) ^ a2)))();
}

void sub_22B3A00B8()
{
}

uint64_t sub_22B3A00C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_OWORD *)(a5 + v8) = *v6;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == 0) * v7) ^ v5)))();
}

uint64_t sub_22B3A00EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, int a16)
{
  a15 = &STACK[0x2B48C588999CF079];
  a14 = 377
      - 225134719 * ((-1186484156 - (&a14 | 0xB947B044) + (&a14 | 0x46B84FBB)) ^ 0x50480A91);
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 32752))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((40 * (a16 != -604050357)) ^ 0x3DB)))(v17);
}

void sub_22B3A01CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned __int8 a19, int a20,int a21,unsigned __int8 a22,int a23,int a24,int a25)
{
  *(_DWORD *)(v25 - 208) = a23 ^ 0xBF077030;
  *(_DWORD *)(v25 - 192) = a21 ^ (163 * (a24 ^ 0x36C)) ^ 0xCE61EC58;
  *(_DWORD *)(v25 - 200) = (((a22 ^ 0x18) << 8) | ((a19 ^ 0x42) << 16) | a18 | ((a25 ^ 0xAD) << 24)) ^ 0x19D361D2;
  *(_DWORD *)(v25 - 204) = a20 ^ 0x190761A8;
  JUMPOUT(0x22B336B94);
}

void sub_22B3A026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int v9 = 1948972247 * ((((v7 - 192) | 0xB631EA9B) - ((v7 - 192) & 0xB631EA9B)) ^ 0x3AF1F75);
  *(_DWORD *)(v7 - 192) = (v6 + 514405704) ^ v9;
  *(_DWORD *)(v7 - 172) = -118723830 - v9;
  STACK[0x1948] = a6;
  uint64_t v10 = v6;
  (*(void (**)(uint64_t))(v8 + 8 * (int)(v6 ^ 0xFED)))(v7 - 192);
  STACK[0x2F0] = *(void *)(STACK[0x270] + 8 * v10);
  JUMPOUT(0x22B33FC28);
}

uint64_t sub_22B3A0334(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a4 ^ 0xCDA) + 2040) * (v4 == v5)) ^ (a4 - 2991))))();
}

void sub_22B3A036C()
{
}

uint64_t sub_22B3A0384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v18 = v14 - 1758592209 > 616343762 || v14 - 1758592209 < a14 - 1531139885;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v18 * (v15 - 2709)) ^ v15)))();
}

uint64_t sub_22B3A03F0@<X0>(uint64_t a1@<X8>)
{
  int v4 = (_DWORD *)(a1 - 0x7E9805B87EA7C92ELL);
  *int v4 = 1323516137;
  int v5 = *v2;
  *int v4 = 1323516138;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((3714 * (v5 == ((((v1 + 2098283906) & 0x82EEB73D) - 1274223166) & 0x7D ^ 0x3C))) ^ (v1 + 2098283906) & 0x82EEB73D)))();
}

void sub_22B3A0478()
{
}

uint64_t sub_22B3A0484@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,char a34)
{
  int v39 = &a28 + v35;
  int v57 = &a22 + v35;
  unsigned int v56 = &a20 + v35;
  int v55 = &a18 + v35;
  int v54 = &a26 + v35;
  unsigned int v53 = &a32 + v35;
  uint64_t v52 = &a34 + v35;
  unsigned int v51 = &a24 + v35;
  int v40 = v34 + 1524;
  uint64_t v62 = a1[4];
  uint64_t v42 = a1[1];
  uint64_t v41 = a1[2];
  uint64_t v43 = *(void *)(v42 - 0x6E3B751A40ADDC9);
  int v44 = v40 - 152;
  int v58 = v40 - 152;
  *(_DWORD *)(v38 - 112) = v40
                         - 152
                         - 1948972247 * ((((2 * (v38 - 144)) | 0x9F2A0DD0) - (v38 - 144) - 1335166696) ^ 0xFA0BF306);
  *(void *)(v38 - 144) = a2;
  *(void *)(v38 - 136) = &a28 + v35;
  int v45 = v40 ^ 0xC9C;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  unsigned int v60 = &a28 + v35;
  *(void *)(v38 - 104) = v43;
  uint64_t v61 = 8 * (v40 + 1960);
  int v46 = v40;
  (*(void (**)(uint64_t))(v37 + v61))(v38 - 144);
  *(_DWORD *)(v38 - 128) = v46 + 1503746353 * ((v38 - 144) ^ 0x2661C2B6) + 1250;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v42;
  *(void *)(v38 - 120) = v39;
  *(void *)(v38 - 112) = v41;
  (*(void (**)(uint64_t))(v37 + 8 * (v46 ^ 0x7BB)))(v38 - 144);
  *(_DWORD *)(v38 - 112) = v44 - 1948972247 * ((v38 + 1105834094 - 2 * ((v38 - 144) & 0x41E9B0FE)) ^ 0xF4774510);
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v57;
  *(void *)(v38 - 104) = v60;
  uint64_t v59 = 8 * (v46 ^ 0x1858);
  (*(void (**)(uint64_t))(v37 + v59))(v38 - 144);
  *(_DWORD *)(v38 - 112) = v58 - 1948972247 * (((v38 - 144) & 0x35931DE2 | ~((v38 - 144) | 0x35931DE2)) ^ 0x7FF217F3);
  *(void *)(v38 - 104) = v57;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v56;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  (*(void (**)(uint64_t))(v37 + v59))(v38 - 144);
  *(void *)(v38 - 104) = v56;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v55;
  *(_DWORD *)(v38 - 112) = v58 - 1948972247 * ((((v38 - 144) | 0xED0EFBB0) - ((v38 - 144) & 0xED0EFBB0)) ^ 0x58900E5E);
  (*(void (**)(uint64_t))(v37 + v61))(v38 - 144);
  *(_DWORD *)(v38 - 112) = v58
                         - 1948972247
                         * ((-476959252 - ((v38 - 144) | 0xE3922DEC) + ((v38 - 144) | 0x1C6DD213)) ^ 0xA9F327FD);
  *(void *)(v38 - 104) = v55;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v54;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  (*(void (**)(uint64_t))(v37 + v61))(v38 - 144);
  *(_DWORD *)(v38 - 112) = v58
                         - 1948972247
                         * ((((v38 - 144) ^ 0x3CF0DBA6 | 0xA108DB79) - (((v38 - 144) ^ 0x3CF0DBA6) & 0xA108DB79)) ^ 0x2866F531);
  *(void *)(v38 - 104) = v54;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v53;
  (*(void (**)(uint64_t))(v37 + v59))(v38 - 144);
  *(void *)(v38 - 104) = v53;
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v52;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  *(_DWORD *)(v38 - 112) = v58 - 1948972247 * (((v38 - 144) & 0x691349D0 | ~((v38 - 144) | 0x691349D0)) ^ 0x237243C1);
  (*(void (**)(uint64_t))(v37 + v61))(v38 - 144);
  *(void *)(v38 - 104) = v52;
  *(_DWORD *)(v38 - 112) = v58
                         - 1948972247
                         * (((((v38 - 144) | 0xAFC77F40) ^ 0xFFFFFFFE) - (~(v38 - 144) | 0x503880BF)) ^ 0xE5A67551);
  *(void *)(v38 - 144) = v51;
  *(void *)(v38 - 136) = v51;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 120) = v42;
  (*(void (**)(uint64_t))(v37 + v61))(v38 - 144);
  uint64_t v47 = *(void *)(v42 - 0x6E3B751A40ADDD1);
  *(_DWORD *)(v38 - 144) = v46 - 1734664879 * ((v38 - 274154949 - 2 * ((v38 - 144) & 0xEFA8BACB)) ^ 0xC07392D1) - 1557;
  *(void *)(v38 - 136) = v47;
  *(void *)(v38 - 128) = v36;
  (*(void (**)(uint64_t))(v37 + 8 * (v46 + 1952)))(v38 - 144);
  *(_DWORD *)(v38 - 136) = v46
                         + 1948972247 * (((v38 - 144) & 0x7FF8E4C9 | ~((v38 - 144) | 0x7FF8E4C9)) ^ 0x3599EED8)
                         - 1374;
  *(void *)(v38 - 144) = v62;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v46 ^ 0x186D)))(v38 - 144);
  BOOL v49 = (v45 + *(_DWORD *)(v38 - 132) - 484148410 - 1215) < 0x7FFFFFFF;
  return (*(uint64_t (**)(uint64_t))(v37
                                            + 8
                                            * ((((((v46 - 46) ^ v49) & 1) << 6) & 0x7F | ((((v46 - 46) ^ v49) & 1) << 7)) ^ v46)))(v48);
}

uint64_t sub_22B3A09C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v27 + ((v25 + 2233) ^ 0xFFFFFFFF8DF0D77ALL)) = 0x2A2A2A2A2A2A2A2ALL;
  return (*(uint64_t (**)(void))(v28 + 8 * ((1094 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v25)))();
}

void sub_22B3A0A1C()
{
}

uint64_t sub_22B3A0B04@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X4>, unsigned int a4@<W6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v34 = (*(_DWORD *)(a25 + 4 * (a5 + 1 + v29) + a3) ^ v25)
      + HIDWORD(v28)
      + a4 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (a5 + 1 + v29) + a3) ^ v25);
  *(_DWORD *)(a25 + 4 * (a5 + v29) + a3) = v34 + v25 - ((v34 << (v26 + 47)) & v27);
  BOOL v36 = a5 + v31 < v32 && a5 + v31 >= a2;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v36 * v33) ^ v26)))();
}

uint64_t sub_22B3A0B7C@<X0>(int a1@<W2>, int a2@<W8>)
{
  *(void *)(v5 + (v2 ^ v3)) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * a1) ^ a2)))();
}

uint64_t sub_22B3A0BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30)
{
  if (a30 < 0xB8E369B8 != v32 + 1898159872 < (a6 ^ 0xB8E36E6A)) {
    BOOL v33 = v32 + 1898159872 < (a6 ^ 0xB8E36E6A);
  }
  else {
    BOOL v33 = v32 + 1898159872 > a30;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((v33 * (v30 - 23)) ^ (v30 + 2738))))();
}

void sub_22B3A0C20(int a1@<W8>, uint64_t a2, int a3, int a4, uint64_t a5)
{
  int v9 = 725797700 - v7 - ((17 * (a1 ^ 0x127) - 226869605) & (1678461486 - v8));
  unsigned int v10 = 1988622253 * (((&a3 | 0xB11B8B1D) + (~&a3 | 0x4EE474E2)) ^ 0x4703CBBC);
  a5 = v6;
  a3 = v9 ^ v10;
  a4 = v10 + a1 + 2518;
  (*(void (**)(int *))(v5 + 8 * (a1 + 3604)))(&a3);
  JUMPOUT(0x22B3A0CB8);
}

uint64_t sub_22B3A0CE0@<X0>(const char *a1@<X0>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v33 = (_DWORD *)(a2 - 0x1C88CB57747EAED1);
  HIDWORD(a14) = v16;
  LODWORD(v34) = 1640782355;
  HIDWORD(a7) = v15 + a3;
  v17.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v17.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  uint64_t v35 = (_DWORD *)(a2 - 0x1C88CB57747EAED5);
  unsigned int v18 = *(_DWORD *)(a2 - 0x1C88CB57747EAEDDLL);
  int v19 = *(unsigned __int8 *)(a2 - 0x1C88CB57747EAEC9) ^ 0x22;
  if (v19 != 2)
  {
    if (v19 == 1)
    {
      int8x16x4_t v37 = vld4q_s8(a1);
      uint8x16_t v20 = (uint8x16_t)veorq_s8(v37.val[2], v17);
      _Q26 = vmovl_high_u8(v20);
      _Q25 = vmovl_u8(*(uint8x8_t *)v20.i8);
      __asm
      {
        SHLL2           V25.4S, V25.8H, #0x10
        SHLL2           V26.4S, V26.8H, #0x10
      }
      JUMPOUT(0x22B3A0F94);
    }
    JUMPOUT(0x22B3A12A8);
  }
  LODWORD(v36) = *v35;
  int8x16x4_t v38 = vld4q_s8(a1);
  LODWORD(a9) = *v33;
  uint8x16_t v27 = (uint8x16_t)veorq_s8(v38.val[1], v17);
  _Q22 = vmovl_u8(*(uint8x8_t *)v27.i8);
  _Q21 = vmovl_high_u8(v27);
  __asm
  {
    SHLL2           V23.4S, V21.8H, #0x10
    SHLL2           V24.4S, V22.8H, #0x10
  }
  HIDWORD(v34) = HIDWORD(a5) - 5753412;
  HIDWORD(v36) = *(_DWORD *)(a2 - 0x1C88CB57747EAEE1);
  return sub_22B3A11B8(a1, -2142080594, 2142080610, 3999963334, 3690916939, *v35, 2323222647, v18, a4, a5, ((v14 - 16) | 0x640u) ^ 0xE37734A88B81569FLL, a7, a8, a9, v33, a2 - 0x1C88CB57747EAED9, a2 - 0x1C88CB57747EAEDDLL, a2 - 0x1C88CB57747EAEE1, a14,
           v34,
           a2 - 0x1C88CB57747EAEC9,
           v35,
           __PAIR64__(*(_DWORD *)(a2 - 0x1C88CB57747EAED9), v18),
           v36);
}

uint64_t sub_22B3A11B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v7 = (_DWORD *)(v6 + 4 * (a4 + a1));
  int v8 = *(v7 - 8) ^ *(v7 - 3);
  int v9 = v8 + a3 - ((((v5 - 375) | 0x104) - 1208103033) & (2 * v8));
  int v10 = *(v7 - 16) ^ *(v7 - 14);
  HIDWORD(v11) = v10 ^ 0x5BFEEC4B ^ v9;
  LODWORD(v11) = v10 ^ ~v9;
  *int v7 = (v11 >> 31) + a3 - ((2 * (v11 >> 31)) & 0xB7FDD896);
  return (*(uint64_t (**)(void))(v4 + 8 * ((125 * (a4 + 1 == a2 + 64)) ^ v5)))();
}

void sub_22B3A1254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, _DWORD *a15)
{
  *a15 = (v15 ^ v18) + (a14 ^ v18) - (v17 & (2 * ((v15 ^ v18) + (a14 ^ v18)))) + (((v16 - 2662) | 0x408) ^ (v18 - 1480));
  JUMPOUT(0x22B3A12A4);
}

uint64_t sub_22B3A1328@<X0>(int a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a2 + v5 + v6) = v7;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a3 ^ v4) + v5 < 0x40) * a1) ^ v3)))();
}

uint64_t sub_22B3A135C()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((457
                                              * (v1 + v0 + (((v3 - 1789) | 0x240) ^ 0x8922C056) >= (v3 ^ 0x840u) - 3765)) ^ v3)))(v2);
}

void sub_22B3A13C4()
{
}

uint64_t sub_22B3A13D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34
                                                                                         + 8
                                                                                         * (((2 * (a34 != 1022098367)) | (4 * (a34 != 1022098367))) ^ 0xC01)))(a1, a2, a3, a4, a5, a32);
}

uint64_t sub_22B3A1434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((*(unsigned char *)(a5 + 5) == 1) * ((v5 + 2671) ^ 0x527)) ^ v5)))();
}

uint64_t sub_22B3A1470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v11 + v5 + v6 + 24) = *(unsigned char *)(v10 + v5 + v6 + 24);
  return (*(uint64_t (**)(void))(a4 + 8 * (((((v4 + 23) ^ v7) + v5 != v9 + 64) * v8) ^ v4)))();
}

void sub_22B3A14B0(uint64_t a1)
{
  int v1 = 1866394843 * ((((2 * a1) | 0xA95321D2) - a1 + 727084823) ^ 0x3EBEA71D);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  int v3 = *(_DWORD *)(a1 + 40) - v1;
  BOOL v5 = (v3 & 0x30000000) == 0x10000000 || (v3 & 0x3F000000) == 805306368;
  __asm { BRAA            X11, X17 }
}

void sub_22B3A1588()
{
}

void sub_22B3A15BC()
{
}

void sub_22B3A15C8()
{
  *int v0 = 604092286;
}

uint64_t sub_22B3A15E0()
{
  return (*(uint64_t (**)(void))(v0 + 25248))();
}

uint64_t sub_22B3A166C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unint64_t v34 = (a1 >> ((v32 + 114) & 0xBF ^ 0x96u)) + (a3 ^ HIDWORD(a6)) + (*(_DWORD *)(a30 + a14 + a8) ^ v30);
  *(_DWORD *)(a30 + 4 * a16 + a8) = v30 + ((v32 - 371) | 0x282) + v34 - (v31 & (2 * v34)) - 659;
  *(_DWORD *)(a30 + a14 + a8) = HIDWORD(v34) + v30 - (v31 & (2 * HIDWORD(v34)));
  BOOL v36 = a24 + 1730369837 > 503985797 || a24 + 1730369837 < a20;
  return (*(uint64_t (**)(void))(v33 + 8 * (v32 ^ (3794 * v36))))();
}

void sub_22B3A1740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + 160) -= 1632;
  LODWORD(STACK[0x36C]) = 604092284;
  JUMPOUT(0x22B3A1770);
}

void sub_22B3A17C8()
{
}

uint64_t sub_22B3A17D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((440
                                * ((((v6 + 694804280) & 0xD6962C57 ^ 0xC5B) & *(_DWORD *)(v9
                                                                                        + (((v6 - 114843973) & 0x6D86EDF ^ (a6 + 3654))
                                                                                         + v8)
                                                                                        * (uint64_t)v7
                                                                                        + 40)) == 0)) ^ v6)))();
}

uint64_t sub_22B3A1848(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  int v26 = a13 + v19;
  uint64_t v27 = (v18 + v26);
  uint64_t v28 = ((_BYTE)v18 + (_BYTE)v26) & 0xF;
  uint64_t v29 = v17;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v22, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(a14 + v27) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + (v27 & 0xF) - 15), *(int8x16_t *)(a14 + v27)), veorq_s8(*(int8x16_t *)((v27 & 0xF) + v16 - 13), *(int8x16_t *)(v14 + (v27 & 0xF) - 15))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v21 + 8 * (((a10 == v26) * v20) ^ a12)))();
}

void sub_22B3A1850(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 32) - 0x71ED341046982216) = v3;
  *int v1 = v2;
  JUMPOUT(0x22B3A15D4);
}

void sub_22B3A1870()
{
}

void sub_22B3A187C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,unint64_t a56,char *a57)
{
  STACK[0x2C0] = *(void *)(v57 + 8 * (a4 - 3126));
  a56 = ((unint64_t)&STACK[0x3D8] ^ 0x5D1FEFDE7FFDF66ELL)
      + ((2 * (void)&STACK[0x3D8]) & 0xBA3FDFBCFFFBECD0)
      + (a4 - 690)
      - 0x1801061B000D16;
  a57 = (char *)&a9 - 0x3D63BD92DA195CBBLL;
  a55 = a4 ^ 0x5A0;
  JUMPOUT(0x22B3A1970);
}

uint64_t sub_22B3A19B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((3080 * (((a4 ^ 0xFFFFFB00 ^ (a4 + 34050416) & 0xFDF86A7F) & a7) == 2071920384)) ^ a4)))();
}

uint64_t sub_22B3A1A10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3772
                                * (((v3 ^ (v5 - 665)) & (2 * (*(unsigned __int8 *)(a2 + 6) - 44)))
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ v4) == v4)) ^ v3)))();
}

void sub_22B3A1A50()
{
}

uint64_t sub_22B3A1A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return a24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_22B3A1A74@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v3 + v7)) = *(unsigned char *)(a2 + (v3 + v7)) ^ v6;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 - 1 != a3) * v4) ^ v5)))();
}

uint64_t sub_22B3A1AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((((unint64_t)&STACK[0x28C]
                                 + ((((v20 - 2268) | 0x880u) - 2449) ^ a18)
                                 + (v19 + v18 - 1) > 0xF)
                                * (v20 - 1548)) ^ v20)))();
}

uint64_t sub_22B3A1AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,_DWORD *a23,uint64_t a24,uint64_t a25,int a26)
{
  return (*(uint64_t (**)(void))(v26 + 8 * ((45 * (a26 + ((a22 + 1329) ^ 0xC87) - *a23 != -902075340)) ^ a22)))();
}

void sub_22B3A1B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v25 - 160) = (v22 + 1935319587) ^ (1328090399
                                               * ((-384762778 - ((v25 - 168) | 0xE910FC66) + ((v25 - 168) | 0x16EF0399)) ^ 0xE93C67A3));
  *(void *)(v25 - 168) = a21;
  (*(void (**)(uint64_t))(v24 + 8 * (v22 ^ 0xCE5)))(v25 - 168);
  int v26 = v22 + 860;
  int v27 = 1503746353 * ((((v25 - 168) | 0x8B5346AF) - (v25 - 168) + ((v25 - 168) & 0x74ACB950)) ^ 0xAD328419);
  uint64_t v28 = *(void *)(v23 + 8 * (v22 - 377));
  *(_DWORD *)(v25 - 144) = v22 + 860 - v27;
  *(_DWORD *)(v25 - 168) = v27 + 1331781556;
  *(void *)(v25 - 160) = v28 - 12;
  *(void *)(v25 - 152) = a21;
  uint64_t v29 = 8 * (v22 ^ 0xCFC);
  (*(void (**)(uint64_t))(v24 + v29))(v25 - 168);
  int v30 = 1503746353 * ((v25 - 361181392 - 2 * ((v25 - 168) & 0xEA78CFD8)) ^ 0xCC190D6E);
  *(_DWORD *)(v25 - 168) = v30 + 1331781541;
  *(_DWORD *)(v25 - 144) = v26 - v30;
  *(void *)(v25 - 160) = a22;
  *(void *)(v25 - 152) = a21;
  (*(void (**)(uint64_t))(v24 + v29))(v25 - 168);
  JUMPOUT(0x22B3A1DA8);
}

void sub_22B3A1E30()
{
}

uint64_t sub_22B3A1EA8(uint64_t a1)
{
  unsigned int v1 = 1866394843 * ((a1 & 0x6DD456B5 | ~(a1 | 0x6DD456B5)) ^ 0x783C9EBE);
  unsigned int v2 = *(_DWORD *)(a1 + 12) - v1;
  return (*((uint64_t (**)(void))*(&off_26DE9F480 + (int)(v2 - 1104))
          + (int)((((((v2 - 186) ^ ((*(_DWORD *)(a1 + 8) ^ v1) - 1704559890 < 7)) & 1) == 0)
                 * (((v2 - 920) | 0x5C) ^ 0x20B)) ^ v2)
          - 1))();
}

uint64_t sub_22B3A1F54@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v3 + (v6 + v4)) = *(unsigned char *)(a1 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

uint64_t sub_22B3A1F84@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, char a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  uint64_t v10 = (unsigned int *)(v8 + 4 * v7);
  uint64_t v11 = v7 + 1;
  int v12 = *(_DWORD *)(v8 + 4 * v11);
  unsigned int v13 = v10[397] ^ ((v12 & 0x7FFFFFFE | v6 & 0x80000000) >> 1);
  *uint64_t v10 = (v13 + a2 - ((v13 << (a6 ^ a4)) & a3)) ^ *(_DWORD *)(v9 + 4 * (v12 & 1));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v11 == 227) * a5) ^ a6)))();
}

uint64_t sub_22B3A1FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v19 = 1948972247 * ((((v18 - 136) | 0x70CBB291) - (v18 - 136) + ((v18 - 136) & 0x8F344D68)) ^ 0xC555477F);
  *(void *)(v18 - 128) = v13;
  *(_DWORD *)(v18 - 136) = (v16 + 2830) ^ v19;
  *(_DWORD *)(v18 - 132) = 1292548153 - v19;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 + 3594)))(v18 - 136);
  *(void *)(v18 - 128) = a12;
  *(void *)(v18 - 120) = v17;
  *(_DWORD *)(v18 - 136) = v16
                         - 1734664879
                         * ((((v18 - 136) | 0xDE83A9CF) - (v18 - 136) + ((v18 - 136) & 0x217C5630)) ^ 0xF15881D5)
                         + 46;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 ^ 0xDE7)))(v18 - 136);
  *(void *)(v18 - 112) = v13;
  *(_DWORD *)(v18 - 120) = v16 + ((2 * ((v18 - 136) & 0x3A26CB38) - (v18 - 136) + 1171862724) ^ 0xAFCE0330) * v12 + 2221;
  *(void *)(v18 - 128) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 3544)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((43
                                              * (((-59 * (((v16 - 114) | 4) ^ 0xA5)) ^ ((*(_DWORD *)(v18 - 136) + v15) < 0xEC408563)) & 1)) ^ v16)))(v20);
}

uint64_t sub_22B3A2164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14, unint64_t *a15)
{
  unsigned int v18 = 1948972247 * ((2 * (&a11 & 0x51CD2588) - &a11 + 775084656) ^ 0x9BAC2F9E);
  a15 = &STACK[0x71ED34104698221A];
  a11 = (v16 - 1304) ^ v18;
  a14 = 1414587811 - v18;
  a12 = &STACK[0x516B96A03337B1E4];
  a13 = v17;
  uint64_t v19 = (*(uint64_t (**)(int *))(v15 + 8 * (v16 ^ 0x31D)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((651
                                              * (*(_DWORD *)(v17 - 0x19157D3ABD2659C6) == ((((v16 - 2157) ^ 0x265)
                                                                                            - 604054557) ^ ((v16 - 2157) | 0xA03)))) ^ v16)))(v19);
}

uint64_t sub_22B3A2268()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((41 * (v1 != 1801476204)) ^ 0x712u)))();
}

uint64_t sub_22B3A2298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * ((458
                                                                                 * (v8 < a8
                                                                                       - 5987
                                                                                       + 1063 * (a8 ^ 0xAFDu))) ^ a8)))(a1, a2, a3, a4, 0);
}

uint64_t sub_22B3A22DC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, int a8, char a9)
{
  unsigned int v14 = (((&a4 | 0xFA2BCE12) - &a4 + (&a4 & 0x5D431E8)) ^ 0x5F8AA28) * a1;
  a5 = (((v9 << (v12 + 10)) & (v12 + 55) ^ 4) + (v9 ^ 0x95)) ^ v14;
  a6 = v11 + 0x44D4288373D8B519;
  a9 = v14 ^ 0x38;
  a7 = (v12 + 84) ^ v14;
  a4 = v13;
  uint64_t v15 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v12 ^ 0x1BCA)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((1365 * (a8 == -604050357)) ^ v12)))(v15);
}

uint64_t sub_22B3A23AC@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W5>, int a4@<W7>, uint64_t a5@<X8>)
{
  int v12 = 101 * (a4 ^ 0x580);
  int v13 = a3 + a1 - a2;
  uint64_t v14 = (v13 + v9);
  v16.val[0].i64[0] = ((_BYTE)v13 + (_BYTE)v9) & 0xF;
  v16.val[0].i64[1] = ((_BYTE)v13 + v6 + 6) & 0xF;
  v16.val[1].i64[0] = ((_BYTE)v13 + v6 + 73 * (v12 ^ 0x8B) + 80) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)v13 + v6 + 4) & 0xF;
  v16.val[2].i64[0] = ((_BYTE)v13 + v6 + 3) & 0xF;
  v16.val[2].i64[1] = ((_BYTE)v13 + v6 + 2) & 0xF;
  v16.val[3].i64[0] = ((_BYTE)v13 + v6 + 1) & 0xF;
  v16.val[3].i64[1] = ((_BYTE)v13 + v6) & 0xF;
  *(int8x8_t *)(a5 - 7 + v14) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v8 + (v14 & 0xF) - 7), *(int8x8_t *)(a5 - 7 + v14)), veor_s8(*(int8x8_t *)(v7 + (v14 & 0xF) - 7), *(int8x8_t *)((v14 & 0xF) + v5 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v16, (int8x16_t)xmmword_22B497560), (int8x8_t)0xB7B7B7B7B7B7B7B7)));
  return (*(uint64_t (**)(__n128))(v11 + 8 * (v12 ^ (8 * (((v12 ^ 0x581) & v10) - 138743808 != v13)))))((__n128)xmmword_22B497560);
}

uint64_t sub_22B3A24C8(int a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(void *)(v8 - 7 + (a1 + v10 + a3 - a5)) = *(void *)(v7 - 7 + (a1 + v10 + a3 - a5));
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 - (v9 & 0xFFFFFFF8) == -8) * (((a6 - 2132) | 0x26) ^ 0x68A)) ^ a6)))();
}

uint64_t sub_22B3A2528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8
                                                             * ((504
                                                               * (v5 < ((a3 - v4 - 2486) ^ (v4 + 2586) ^ (a3 - v4 - a4 - 3912)))) ^ (a3 - v4))))(a1, a2, 0);
}

void sub_22B3A2568(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  int v2 = *(_DWORD *)(a1 + 24) - 731811679 * (((a1 | 0x92BE802D) - (a1 & 0x92BE802D)) ^ 0xDB482669);
  if (*(_DWORD *)(*(void *)(a1 + 16) - 0x281D12643933BF1FLL) - 920561905 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x281D12643933BF1FLL) - 920561905;
  }
  else {
    unsigned int v3 = 920561905 - *(_DWORD *)(*(void *)(a1 + 16) - 0x281D12643933BF1FLL);
  }
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v1 - 0x281D12643933BF1FLL) - 920561905 >= 0) {
    unsigned int v4 = *(_DWORD *)(v1 - 0x281D12643933BF1FLL) - 920561905;
  }
  else {
    unsigned int v4 = 920561905 - *(_DWORD *)(v1 - 0x281D12643933BF1FLL);
  }
  uint64_t v8 = *(void *)(a1 + 16);
  unsigned int v7 = v2 + 1734664879 * (((&v7 | 0x6D763A1D) - (&v7 & 0x6D763A1D)) ^ 0x42AD1207) - 1430;
  unsigned int v5 = (char *)*(&off_26DE9F480 + v2 - 1865) - 8;
  (*(void (**)(unsigned int *))&v5[8 * (v2 ^ 0x749)])(&v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_22B3A2718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v39 = (v33 - 1238) | 0x40;
  *(_DWORD *)(*(void *)(v37 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A67D93) = v35 + 16;
  int v40 = 1948972247 * ((v38 - 887411778 - 2 * ((v38 - 120) & 0xCB1B2C36)) ^ 0x7E85D9D8);
  *(void *)(v38 - 112) = &STACK[0x2970AB8229FC3DAA];
  *(_DWORD *)(v38 - 120) = (v39 + 514404591) ^ v40;
  *(_DWORD *)(v38 - 100) = v34 + 2 - v40 - 2112739580;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v39 + 2940)))(v38 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v36
                                                     + 8
                                                     * ((952
                                                       * (*(_DWORD *)(v37 - 0x70D52A7E711E505ELL)
                                                        + 439713311
                                                        + ((a33 << ((31 * (v39 ^ 0x47)) ^ 0x1F)) & 0x76 ^ 0x32)
                                                        + (a33 & 0x3F ^ 0x7AED7EE2u) < 0xFFFFFFC0)) ^ v39)))(v41, 3755731375);
}

uint64_t sub_22B3A2754(int a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 != 0) ^ (v2 + 898))))();
}

uint64_t sub_22B3A2780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(*(void *)(a16 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A6812FLL) = v18 + 1;
  *(_DWORD *)(*(void *)(a16 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68137) = a18 - 1;
  int v21 = 1948972247 * ((((v20 - 160) | 0x49109310) - ((v20 - 160) & 0x49109310)) ^ 0xFC8E66FE);
  *(_DWORD *)(v20 - 160) = v21 ^ 0x1EA93554;
  *(void *)(v20 - 152) = &STACK[0x2970AB8229FC3FBA];
  *(_DWORD *)(v20 - 140) = -118723830 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 32520))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((2667
                                              * (a18
                                               + 899667796
                                               + ((2 * (STACK[0x2D0] & 0x3F)) ^ 0x32)
                                               + (STACK[0x2D0] & 0x3F ^ 0x5EFFCFE6u) < 0xFFFFFFC0)) ^ 0x480u)))(v22);
}

uint64_t sub_22B3A29B0@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v8 + 16);
  uint64_t v3 = *(void *)(v8 + 24);
  memset((void *)(v2 - 204), 42, 16);
  int v5 = 1990461019 * ((1504932435 - ((v2 - 168) | 0x59B37253) + ((v2 - 168) | 0xA64C8DAC)) ^ 0x89A82F25);
  *(_DWORD *)(v2 - 152) = a1 - v5 + 2525;
  *(_DWORD *)(v2 - 148) = v5 ^ 0x41467178;
  unsigned int v6 = (void *)(v2 - 168);
  *unsigned int v6 = v2 - 204;
  v6[1] = v2 - 188;
  v6[3] = v3;
  v6[4] = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x1007)))(v2 - 168);
  *(_DWORD *)(v8 + 36) = *(_DWORD *)(v2 - 128);
  return result;
}

uint64_t sub_22B3A2A9C@<X0>(int a1@<W2>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1311 * (v2 + 1 == v6 + 80)) ^ v3)))((__PAIR64__(a1 ^ 1u, a1 ^ a2) >> 2)+ v7- (v4 & (2 * (__PAIR64__(a1 ^ 1u, a1 ^ a2) >> 2))));
}

uint64_t sub_22B3A2B54()
{
  return sub_22B3A2B60();
}

uint64_t sub_22B3A2B60(int a1, double a2, int8x16_t a3, double a4, int8x16_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10)
{
  int8x16_t v16 = *(int8x16_t *)(v14 + (v10 + a1 + v12));
  *(int8x16_t *)(v11 + v12) = vaddq_s8(vsubq_s8(v16, vandq_s8(vaddq_s8(v16, v16), a5)), a3);
  return (*(uint64_t (**)(void))(v15 + 8 * (((v12 != 48) * a7) ^ (a10 + v13 + 76))))();
}

void sub_22B3A2BA8()
{
}

void sub_22B3A2C7C()
{
  STACK[0x2F0] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3111));
  JUMPOUT(0x22B3A2C98);
}

uint64_t sub_22B3A2CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  BOOL v24 = v22 == ((a6 + (a22 ^ 0xB3B47FC7) + 2316) ^ 0xC76);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * (((8 * v24) | (32 * v24)) ^ a22)))(a1, a2, a3, -2118371424);
}

uint64_t sub_22B3A2D18(uint64_t a1, uint64_t a2)
{
  int v6 = (v2 - 194223601) & 0xB9393EC;
  uint64_t v7 = 4 * (v3 - 301515042);
  uint64_t v8 = (int *)(STACK[0x268] + v7);
  int v9 = *v8;
  LODWORD(v8) = -1711036427
              * ((*(_DWORD *)(*(void *)STACK[0x250] + (*(int *)STACK[0x248] & 0xFFFFFFFF8F57FD24)) ^ v8) & (v6 ^ 0x7FFFFEBB));
  LODWORD(v8) = v8 ^ (v8 >> 16);
  unsigned int v10 = -1711036427 * v8;
  *(_DWORD *)(v4 + v7) ^= v9 ^ *((_DWORD *)*(&off_26DE9F480 + (v2 ^ 0xA33)) + HIBYTE(v10) - 2) ^ *((_DWORD *)*(&off_26DE9F480 + (v2 ^ 0xB94))
                                                                                                 + HIBYTE(v10)
                                                                                                 - 1) ^ *((_DWORD *)*(&off_26DE9F480 + (v2 ^ 0xB56)) + HIBYTE(v10)) ^ (-1477115904 * v8) ^ v10 ^ (264168991 * HIBYTE(v10));
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((8
                                * (((119 * (v6 ^ 0x41)) ^ (v5 - 1 == 631 * (v6 ^ 0x141) + 1524032875)) & 1)) & 0xEF | (16 * (((631 * (v6 ^ 0x141)) ^ (v5 - 1 == 631 * (v6 ^ 0x141) + 1524032875)) & 1)) | v6)))();
}

uint64_t sub_22B3A2E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, int a12, char a13)
{
  a13 = ((v17 ^ (2 * *(unsigned char *)(v14 - 0x3707DB8770DACECDLL)))
       + ((v16 - 3) & 0xDF)
       + ((((v16 - 115) & 0xDA) - 15) ^ *(unsigned char *)(v14 - 0x3707DB8770DACECDLL))
       + 3) ^ (-41 * (&a11 ^ 0xEE));
  a11 = (v16 - 1714082649) ^ (1948972247 * (&a11 ^ 0xB59EF5EE));
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v13 + 8 * (v16 + 2519)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((2626 * (a12 == v15)) ^ v16)))(v18);
}

void sub_22B3A2EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 128) = v13 - 1734664879 * ((v15 + 1407918492 - 2 * ((v15 - 128) & 0x53EB221C)) ^ 0x7C300A06) - 2807;
  *(void *)(v15 - 120) = v14;
  *(void *)(v15 - 112) = a12;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0x2C2)))(v15 - 128);
  JUMPOUT(0x22B3A2F4CLL);
}

void sub_22B3A2F88()
{
}

uint64_t sub_22B3A2FE8()
{
  *(unsigned char *)(v4 + v0 - 1754903279 + 24) = (v3 - 12) ^ *(unsigned char *)(v1 + v0 - 1754903279) ^ 0x38;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1186 * (v0 + 1 == v5 + 64)) ^ v3)))();
}

uint64_t sub_22B3A3034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                               + 8
                                                                               * ((3104
                                                                                 * (((a6 ^ 0x1ED) & v7) == ((a6 + 31538706) & 0xFE1ECE1B ^ 0xE13))) ^ a6)))(a1, a2, a3, a4, (v6 - a4));
}

void sub_22B3A308C()
{
  if (v0 == 1942923115) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 4) = v1;
}

_DWORD *sub_22B3A30F0(_DWORD *result, uint64_t a2, int a3)
{
  *uint64_t result = a3;
  return result;
}

uint64_t sub_22B3A30F8@<X0>(unsigned int a1@<W8>)
{
  int v11 = v4 + 1;
  BOOL v12 = v1 < v2;
  *(unsigned char *)(v3 + (v11 + v6) + 24) = *(unsigned char *)(v9 + (v11 + v6)) ^ v7;
  if (v12 == v11 + v8 < a1) {
    BOOL v12 = v11 + v8 < v1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((60 * v12) ^ v5)))();
}

uint64_t sub_22B3A3100@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8 * (int)((((a1 + 564905508) & 0xDE5435F6 ^ 0x1B) * (a24 != v24)) ^ a1)))(1327923958);
}

void sub_22B3A317C(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 8) + 1328090399 * ((2 * (a1 & 0x3C1EE1BE) - a1 - 1008656831) ^ 0x3C327A7B);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = *(unint64_t **)a1;
  uint64_t v12 = *(void *)(v3 - 0x6E3B751A40ADDC9);
  uint64_t v7 = v2;
  int v8 = &STACK[0x281D12643933BF43];
  uint64_t v9 = v5;
  uint64_t v10 = v3;
  unsigned int v11 = v1 - 1948972247 * ((2 * (&v7 & 0x1A6E6DF0) - &v7 + 1704038925) ^ 0xD00F67E3) - 359;
  int v6 = (char *)*(&off_26DE9F480 + v1 - 1986) - 8;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0x1929)])(&v7);
  int v8 = *(unint64_t **)(v3 - 0x6E3B751A40ADDD1);
  uint64_t v9 = &STACK[0x281D12643933BF53];
  LODWORD(v7) = v1
              - 1734664879 * ((2 * (&v7 & 0x3E58A2D0) - &v7 - 1045996244) ^ 0xEE7C7536)
              - 1764;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0x6D1)])(&v7);
  LODWORD(v8) = v1
              + 1948972247 * ((&v7 + 290413972 - 2 * (&v7 & 0x114F5D94)) ^ 0xA4D1A87A)
              - 1581;
  uint64_t v7 = v4;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 14368])(&v7);
  __asm { BRAA            X8, X17 }
}

void sub_22B3A33E0()
{
}

uint64_t sub_22B3A33E8(int a1, uint64_t a2, uint64_t a3)
{
  int v11 = v8 + v7 - 19;
  *(unsigned char *)(a3 + v3 - 697987577 + v11) ^= *(unsigned char *)(a2 + v3 - 697987577 + v11) ^ 0xA8;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v3 + 1 < ((v11 + v4) & v5) + a1) * v6) ^ (v9 + v11 - 1481))))();
}

uint64_t sub_22B3A3458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (int)(((((a8 + 1076875046) & 0xBFD02E7D) - 3046)
                                                                             * (v8 < 0x10)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_22B3A3498@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 220 + a3 + a1) = 42;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((2387
                                     * (a3
                                      + 1
                                      + a2
                                      + (unint64_t)((((v3 + 1600611469) & 0xA09894DB) - 1074334814) & 0xF3BD7D84) < 0x38)) ^ (v3 + 1600611469) & 0xA09894DB)))();
}

void sub_22B3A3504(uint64_t a1)
{
  int v1 = 1988622253 * (a1 ^ 0xF61840A0);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B3A3580@<X0>(int a1@<W8>)
{
  *(_OWORD *)(v4 + v2 + 2968) = *(_OWORD *)(v4 + v2 + 2880);
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 != 48) * v1) ^ a1)))();
}

uint64_t sub_22B3A35B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v9 = v8 + v6 + 1779042305 >= ((a6 - 697321140) & 0x29903BFD ^ 0x3A8u);
  return (*(uint64_t (**)(void))(v7 + 8 * (((4 * v9) | (8 * v9)) ^ a6)))();
}

uint64_t sub_22B3A3618@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 | (2 * ((v2 + a1) < 0x7FFFFFFF)))))();
}

uint64_t sub_22B3A3684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9)
{
  LODWORD(STACK[0x454]) = v9;
  a7[37] = *(void *)(v11 + 8 * v10);
  return sub_22B33E74C(a1, 17, a5, a7, a8, a6, a9);
}

uint64_t sub_22B3A36A4()
{
  uint64_t v4 = *(uint64_t (**)(void))(v3
                           + 8
                           * ((117
                             * ((*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 + 1471)))((v2 + 515 * ((v1 + 1355040202) & 0xAF3BBF5F ^ 0xF4B) - 2060) ^ v0, 2866087519) != 0)) ^ v1));
  return v4();
}

uint64_t sub_22B3A3718@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v13 = ((((2 * &a3) | 0x23B04378) - &a3 - 299377084) ^ 0x582E87F8) * v7;
  a3 = v8;
  a6 = v9;
  a7 = v13 + v11 - 256;
  a4 = v13
     + ((2 * (v12 - 1030434871)) & 0xB7DFFE7E)
     + ((((v11 + 1133679910) & 0xBC6D6EBF) - 605030262) ^ (v12 - 1030434871))
     + 2004524487;
  a5 = v13 + a1;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v11 ^ 0x12D0)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1828 * (*(_DWORD *)(v9 - 0x19157D3ABD2659C6) == -604050357)) ^ v11)))(v14);
}

uint64_t sub_22B3A3810()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 + 398) ^ (781 * (v3 ^ 0xDB6)) ^ 4) * (v1 != v0)) | v3)))();
}

uint64_t sub_22B3A3860(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)a1 ^ (1292559617 * ((((2 * a1) | 0x8367595C) - a1 - 1102294190) ^ 0xE6E0C4C7));
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (1328090399 * (((&v3 | 0x9D5488AA) - (&v3 & 0x9D5488AA)) ^ 0x6287EC90)) ^ (v1 + 1890529686);
  return (*((uint64_t (**)(uint64_t *))*(&off_26DE9F480 + v1 - 44790352) + v1 - 44786675))(&v3);
}

uint64_t sub_22B3A3968@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + a1 + a2 + (v5 ^ a3) - 87) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a5 + a1) > 0x3F) * a4) ^ v5)))();
}

uint64_t sub_22B3A399C(uint64_t a1)
{
  v5.i64[0] = 0xE9E9E9E9E9E9E9E9;
  v5.i64[1] = 0xE9E9E9E9E9E9E9E9;
  *(int8x16_t *)(v4 - 208) = veorq_s8(vaddq_s8(*(int8x16_t *)*(void *)(v2 + 8), v5), (int8x16_t)xmmword_22B497640);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (((((v1 - 1259) | 0xB1) ^ 0x9D) * (v4 == 208)) ^ v1)))(a1, 4294924396);
}

uint64_t sub_22B3A39F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, uint64_t a13, int a14)
{
  int v19 = v15 + 4;
  int v27 = (v15 - 16) ^ 0x30;
  uint64_t v20 = (_DWORD *)(v14 - 0x1AD13B37B10193F2);
  *(_DWORD *)(v14 - 0x1AD13B37B10193F2) = 230568399;
  int v21 = v15 - 1119053710;
  a13 = v17;
  a11 = v15
      - 1119053710
      + 1866394843 * ((&a11 & 0x7F2AB59B | ~(&a11 | 0x7F2AB59B)) ^ 0x6AC27D90);
  uint64_t v22 = 8 * (v15 + 1267);
  (*(void (**)(unsigned int *))(v18 + v22))(&a11);
  *(_DWORD *)(v16 - 0x717BE438C5D08568) = a12;
  *v20 += 4;
  a11 = v21 + 1866394843 * ((&a11 & 0xAB498ACE | ~(&a11 | 0xAB498ACE)) ^ 0xBEA142C5);
  a13 = v17 + 4;
  (*(void (**)(unsigned int *))(v18 + v22))(&a11);
  int v23 = a12;
  *uint64_t v20 = v27 + *v20 - 2908;
  unsigned int v24 = 1438293641 * (((&a11 | 0xBA55A497) + (~&a11 | 0x45AA5B68)) ^ 0x292F1E9);
  a11 = (v23 ^ 0xB023C924) - v24;
  a12 = (v19 - 1272) ^ v24;
  a13 = v16 - 0x3A7408B154F5B68ELL;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v19 + 1261)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1216 * (a14 == -604050357)) ^ v19)))(v25);
}

uint64_t sub_22B3A3BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v22 = (a18 & 0xC7BFFDCE) + (v20 ^ v19 ^ 0xE3DFF5D6);
  BOOL v24 = ((((v18 + 203) | 0x90C) - 2830) & (v22 + 9)) == 0 && v22 != -471859481;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v21 + 8 * ((8 * v24) | (16 * v24) | v18)))(a1, a2, (v18 + 2539));
}

uint64_t sub_22B3A3C58(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 823) | 0x10) ^ 0x66A ^ (20 * (a1 ^ 0x376))) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_22B3A3C9C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((((a3 - 3337) ^ (v3 + 3921) ^ ((a3 + 1075984784) | 0x23888450))
                                              * (v4 < 0x20)) | (a3 - 944))))(a1);
}

void sub_22B3A3CF0()
{
}

void sub_22B3A3CFC()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  if (*(void *)v0) {
    BOOL v2 = *(void *)(v0 + 16) == 0x25ABA05A3795B0FALL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 28) ^ (1990461019 * ((v0 - 2 * (v0 & 0xFFF30092) - 851822) ^ 0xD017A21B));
  __asm { BRAA            X8, X17 }
}

void sub_22B3A3E30()
{
  if (v0 == 1541861321) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 16) = v1;
}

uint64_t sub_22B3A3E94@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 12) = (a2 << (v2 ^ 0x1C)) + v3 + 135232792;
  return result;
}

void sub_22B3A3EBC()
{
  uint64_t v4 = *v0;
  *(_DWORD *)(v0[2] - 0x19CE8EC4E898E7DBLL) = *v1;
  *(_DWORD *)(v4 - 0x49C1C9F4CB1E7D7ELL) = *v2 - ((*v2 << (v3 - 37)) & 0x5446179C) + 706939854;
  JUMPOUT(0x22B3A3F20);
}

uint64_t sub_22B3A3F5C@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(_DWORD *)(result + 4) = *(_DWORD *)(*(void *)(v3 + 8 * (v2 ^ 0x235)) + 4 * a2 - 8);
  return result;
}

uint64_t sub_22B3A3F88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((58 * ((((v0 - 100) < 0x9C) ^ v1 ^ 0x33) & 1)) ^ v1 ^ 0xE33)))();
}

void sub_22B3A3FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  (*(void (**)(uint64_t, uint64_t))(v18 + 8 * (v17 + 12)))(a17, 2965982036);
  *int v19 = (*(uint64_t (**)(void))(v18 + 8 * (v17 + 31)))();
  JUMPOUT(0x22B3A402CLL);
}

uint64_t sub_22B3A4070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21,uint64_t a22,_DWORD *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,unsigned int a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  uint64_t v35 = *a21;
  unsigned int v36 = 2009815553 * ((&a27 & 0x9D9C182C | ~(&a27 | 0x9D9C182C)) ^ 0x9368C996);
  a34 = 285189382 - v36 + *a23;
  a31 = v35;
  a32 = a14;
  a33 = a12;
  a30 = 3288 - v36;
  a27 = a13;
  a29 = a15;
  (*(void (**)(uint64_t *))(v34 + 32200))(&a27);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v34 + 8 * ((2311 * (a28 == -604050357)) ^ 0x733u)))(0x603A74C941EFD0E0, a2, 4164039495, 1801476207, 130930587, a17, 0x9FC58B3648BED4E3);
}

uint64_t sub_22B3A41B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 + 1245955050) & 0xB5BC3DDF ^ 0xFFFFFFFFFAC8DC66)
                                      + (87502536 - v0) < 8)
                                     * ((v1 + 1328111658) & 0xB0D69FFD ^ 0xBA1)) ^ v1)))();
}

void sub_22B3A423C()
{
}

uint64_t sub_22B3A42E0@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v2 + a1)) = *(unsigned char *)(v4 + (v2 + a1));
  return (*(uint64_t (**)(void))(v6 + 8 * ((7 * (v2 - 1 != v7)) | (v5 + v3 + 1666))))();
}

uint64_t sub_22B3A4324(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 ^ 0x517) - 1393) * ((v3 & 0x18) == 0)) ^ a3)))();
}

void sub_22B3A4354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  *((_DWORD *)&a49 + v49) ^= a36;
  JUMPOUT(0x22B3A437CLL);
}

uint64_t sub_22B3A43E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v5 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v4) == v4)
                                * (v3 ^ 0xBDA)) ^ v3)))();
}

void sub_22B3A441C()
{
}

uint64_t sub_22B3A4428()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((59 * (v2 + v3 - 1 < ((v0 + 358) ^ (v1 - 358)))) ^ (v0 - 219))))();
}

uint64_t sub_22B3A4438@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((5 * ((v2 | 0xE2) ^ 0x51E) + 201) ^ (v2 | 0xE2) ^ 0x58) * (v1 < 0x1F)) ^ (v2 | 0xE2))))();
}

void sub_22B3A4480(int a1)
{
  *(_DWORD *)(v1 - 224) = a1 + 3;
  *(_DWORD *)(v1 - 232) = a1 + 12;
  JUMPOUT(0x22B3A4570);
}

uint64_t sub_22B3A45EC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((((v0 - 1269) | 0x390) ^ 0xF2A) - 1092) * (v1 == v2)) ^ ((v0 - 1269) | 0x390))))();
}

uint64_t sub_22B3A4620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  unint64_t v55 = v54 - 228;
  v39.n128_u64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v39.n128_u64[1] = 0x2A2A2A2A2A2A2A2ALL;
  __n128 v40 = (__n128)vdupq_n_s32(0x5BFEEC4Fu);
  __n128 v41 = (__n128)vdupq_n_s32(0xDBFEEC4B);
  __n128 v42 = (__n128)vdupq_n_s32(0x5BFEEC5Bu);
  uint64_t v43 = *(unsigned int *)(a11 - 0x2970AB8229FC3CE6);
  uint64_t v44 = *(unsigned int *)(a11 - 0x2970AB8229FC3CE2);
  uint64_t v45 = *(unsigned int *)(a11 - 0x2970AB8229FC3CDELL);
  int v46 = *(unsigned __int8 *)(a11 - 0x2970AB8229FC3CCELL) ^ 0x22;
  if (v46 == 2)
  {
    BOOL v51 = v55 >= (unint64_t)&a39 || (unint64_t)&a31 >= v54 - 164;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v53 + 8 * ((63 * v51) ^ (v52 + 3050))))(v45, a20, v44, 42, a5, a6, v43, v39, v40, v41, v42);
  }
  else
  {
    if (v46 != 1) {
      JUMPOUT(0x22B360AE0);
    }
    BOOL v48 = v55 >= (unint64_t)&a39 || (unint64_t)&a31 >= v54 - 164;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v53 + 8 * ((((v52 + 419) ^ (v52 + 452)) * v48) ^ (v52 + 406))))(v45, a20, v44, 42, a5, a6, v43, v39, v40, v41, v42);
  }
}

uint64_t sub_22B3A463C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(void))(v34
                              + 8
                              * ((134
                                * ((((v33 + a33 + 96) < 0xFFFFFFFB) ^ ((v35 ^ 0xB0) - 82)) & 1)) ^ (v35 + 68))))();
}

uint64_t sub_22B3A4688(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned __int8 *a27,uint64_t a28,uint64_t a29,int a30,char a31,_DWORD *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  int v48 = *a27 ^ 0x22;
  if (v48 == 2) {
    return (*(uint64_t (**)(void))(v47 + 8 * (((*a32 != 326024231) * (a13 - 2340)) ^ (a2 + 2546))))();
  }
  if (v48 == 1) {
    return (*(uint64_t (**)(uint64_t))(v47
  }
                                              + 8
                                              * ((63 * (((*a32 == 326024231) ^ (a31 + 1)) & 1)) ^ (a2 + 2634))))(2972771196);
  *(unsigned char *)(a4 + 91) = ((a47 - 32) ^ 0xBA) * (a47 - 15);
  return (*(uint64_t (**)(uint64_t))(v47 + 8 * (a2 + 1202)))(2972771196);
}

void sub_22B3A47C4(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x2A8EF3598CCBFA3ALL) = v2;
  *uint64_t v1 = -604050357;
}

uint64_t sub_22B3A481C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = v27 + v26 - 964421840;
  int v31 = v30 + 210;
  if ((v30 + 210) <= 0x40) {
    int v31 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((468 * (v28 + v31 <= (((v25 ^ 0xDEF) - 5041) ^ (v30 + 209) ^ (13 * (v25 ^ 0xADu))))) ^ v25)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_22B3A4898()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((v0 - 2195) ^ (104
                                              * (((v1 << (v0 + 47)) & 0xF9DF65D2 ^ (((v0 + 227989034) & 0xF2692F7F)
                                                                                  + 1100894660))
                                               + (v1 ^ 0xDF308B49)
                                               - 4337705 == 2091745984)))))();
}

uint64_t sub_22B3A4920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((3899 * ((a5 & 0xFFFFFFF0) == ((v5 + 1873) ^ 0x67FEF352))) ^ v5)))();
}

uint64_t sub_22B3A4958@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v2 + a1 + 24) = *(_OWORD *)(v3 + a1);
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((483 * (a1 + 16 == (v4 ^ 0x8AALL))) ^ v4)))();
}

uint64_t sub_22B3A4998()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((429 * ((v0 ^ (v1 - 225437607) & 0xD6FE6BC ^ ((v1 - 693) | 0x828) ^ 0xA43u) < 8)) ^ v1)))();
}

uint64_t sub_22B3A49F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((121
                                * (((v16 - 1) ^ (a14 + v15 - (unint64_t)(v14 + a1) < (unint64_t)((v16 - 1601936316) | 0x13300180u) - 3014948208u)) & 1)) ^ v16)))();
}

uint64_t sub_22B3A4A6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2730 * ((v0 & 8) == ((v1 + 1655528345) & 0x9D52AE5F ^ 0xE4A))) ^ v1)))();
}

uint64_t sub_22B3A4AB4(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, int a14)
{
  unsigned int v25 = a14 - 16;
  uint64_t v26 = v25 & 0xF;
  v28.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v28.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v21, a5).u64[0];
  int8x16_t v29 = vrev64q_s8(vmulq_s8(v28, a6));
  *(int8x16_t *)(v14 + v25) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v17 + v26 - 15), *(int8x16_t *)(v14 + v25)), veorq_s8(*(int8x16_t *)(v26 + v16 - 13), *(int8x16_t *)(v15 + v26 - 15))), vextq_s8(v29, v29, 8uLL));
  return (*(uint64_t (**)(void))(v20 + 8 * (((v18 == 16) * v19) ^ a12)))();
}

uint64_t sub_22B3A4AC0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  return (*(uint64_t (**)(void))(v38
                              + 8
                              * (int)(((((a2 + 1424639486) ^ 0x54EA46A9) + ((a2 + 1424639486) & 0xAB15BDF2) - 4955)
                                     * (*(_DWORD *)(v39 - 224) == a38)) ^ a2)))();
}

uint64_t sub_22B3A4B18@<X0>(int a1@<W8>)
{
  unsigned int v5 = (&v7 ^ 0x49F6A644) * a1;
  uint64_t v10 = v3;
  int v11 = v5 + v1 - 2874;
  uint64_t v7 = 0xB8308F1D17695ALL;
  unsigned int v8 = v5 + 1399495942;
  unsigned int v9 = v5 - 303744050;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v4 + 8 * (v1 + 790)))(&v7);
  *(_DWORD *)(v2 + 20) = *(_DWORD *)(v3 - 0x19157D3ABD2659C6);
  return result;
}

uint64_t sub_22B3A4B84@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v7 = v2 + v3;
  *(unsigned char *)(a1 + v7) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v4) ^ a2)))();
}

uint64_t sub_22B3A4BB8@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x112B));
  return v3(v1);
}

void sub_22B3A4BEC(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 + 731811679 * ((((2 * &a3) | 0xA8DA9CF2) - &a3 + 731033991) ^ 0x9D9BE83D) + 1280;
  a4 = a1;
  a5 = v7;
  a3 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 + 3209)))(&a3);
  JUMPOUT(0x22B3A4C48);
}

uint64_t sub_22B3A4C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * ((((v8 ^ 0xA24) + 1070) * (v7 == a7)) ^ v8)))(a1, a2, a3, a4, (v8 ^ 0xA24u) + 1710);
}

uint64_t sub_22B3A4CA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v49 = v47 + 4;
  BOOL v50 = v45 < v46;
  unsigned int v51 = ((v44 - 1474) ^ (a3 + 106)) + v49;
  unsigned int v52 = *(_DWORD *)(a43 + (v51 & 0xFFFFFFFC));
  *(unsigned char *)(a44 + v51) = (HIBYTE(v52) ^ 0x11) - (a7 & (v52 >> 23)) + 42;
  unsigned int v53 = v49 + a3;
  *(unsigned char *)(a44 + v53) = (BYTE2(v52) ^ 0x95) - (a7 & (v52 >> 15)) + 42;
  *(unsigned char *)(a44 + v53 + 1) = (BYTE1(v52) ^ 0x67) + (~(2 * (BYTE1(v52) ^ 0x67)) | 0xAB) + 43;
  *(unsigned char *)(a44 + v53 + 2) = v52 ^ 0x13;
  if (v50 == v49 + 898431660 < (a5 + 1623)) {
    BOOL v50 = v49 + 898431660 < v45;
  }
  return (*(uint64_t (**)(void))(v48 + 8 * ((v50 * a6) ^ v44)))();
}

uint64_t sub_22B3A4CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v18 - 120) = v14;
  *(void *)(v18 - 112) = v16;
  *(void *)(v18 - 144) = v14;
  *(void *)(v18 - 136) = v15;
  *(_DWORD *)(v18 - 128) = v12
                         + 1503746353 * ((((v18 - 144) | 0xDE24CC37) + (~(v18 - 144) | 0x21DB33C8)) ^ 0xF8450E80)
                         + 237;
  (*(void (**)(uint64_t))(v17 + 8 * (v12 ^ 0x3B4)))(v18 - 144);
  int v19 = 1866394843 * ((v18 - 144) ^ 0xEA1737F4);
  *(_DWORD *)(v18 - 144) = v12 - v19 - 1813;
  *(_DWORD *)(v18 - 140) = v19 + v13 - 484148408;
  *(void *)(v18 - 136) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v12 ^ 0x1C54)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((215
                                              * ((((((v12 - 146552929) & 0x8BC2DBF) + 1915) ^ (*(_DWORD *)(v18 - 128) == -1685946169)) & 1) == 0)) ^ v12)))(v20);
}

uint64_t sub_22B3A4DBC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((v4 & 0x59653F0F) - 1761) ^ v3) < 8)
                                     * (a3 + (((v4 & 0x59653F0F) - 58846025) & 0xAFFBFFF9) - 286)) ^ v4 & 0x59653F0F)))();
}

uint64_t sub_22B3A4E0C(uint64_t a1, unsigned int a2)
{
  BOOL v7 = v6 - v4 - 0x21AEEC4F795AEEAFLL + v2 < (((v3 - 2744) | a2) ^ 0xC29uLL);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((4 * (((v3 + 30) ^ v7) & 1)) & 0xBF | ((((v3 + 30) ^ v7) & 1) << 6) | v3)))();
}

uint64_t sub_22B3A4E74@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((a1 - 3783) | 0x100) + 224) * (v3 != v2)) ^ a1)))();
}

void sub_22B3A4F24()
{
}

uint64_t sub_22B3A4FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void, uint64_t))(v16
                                                    + 8
                                                    * ((416
                                                      * ((((unint64_t)(a6 - a14 + 0x1C88CB57747EAEC5) < 0x20) ^ (v15 + 65)) & 1)) ^ v15)))((v15 - 191) | 0x444u, v14);
}

uint64_t sub_22B3A501C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = (a5 - 32 + a3);
  long long v11 = *(_OWORD *)(v6 + v10 - 15);
  long long v12 = *(_OWORD *)(v6 + v10 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 32) * a4) ^ (v5 + v7 + 783))))();
}

uint64_t sub_22B3A5028@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v7 = (a2 - 2294) | 4u;
  *(void *)(*(void *)(a1 + 8) - 0x516B96A03337B1DCLL) = v6 + v5 + v7 - 260;
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((940 * (*v3 == v4 + ((v7 + 505) | 0x4D0) - 2005)) ^ v7)))();
}

void sub_22B3A5098()
{
}

uint64_t sub_22B3A50A0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + v4 + (((a1 - 523) | 0x800) ^ v3)) = *(_DWORD *)(v2 - 3 + v4 + (((a1 - 523) | 0x800) ^ v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((4 * (v5 == 4)) | (8 * (v5 == 4)) | (a1 + 2872))))();
}

void sub_22B3A50F0()
{
  *(_DWORD *)(v0 - 156) = LODWORD(STACK[0x208]) ^ 0x43B09C47;
  *(_DWORD *)(v0 - 144) = LODWORD(STACK[0x210]) ^ 0xC197658E;
  *(_DWORD *)(v0 - 148) = LODWORD(STACK[0x204]) ^ 0xCD5FD178;
  *(_DWORD *)(v0 - 152) = LODWORD(STACK[0x20C]) ^ 0x9E2159D8;
  JUMPOUT(0x22B36A704);
}

uint64_t sub_22B3A5144@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v3 < v4;
  *(unsigned char *)(a1 + (v6 - 1938793632)) = *(unsigned char *)(v7 + (v6 - 1938793632)) ^ 0x2A;
  if (v9 == v6 + 553624550 < ((v1 + 143549489) & 0xF7719DBB ^ (v2 + 2112))) {
    BOOL v9 = v6 + 553624550 < v3;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v9 * v5) ^ v1)))();
}

void sub_22B3A51CC()
{
}

uint64_t sub_22B3A524C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v11 = (*(unsigned __int8 *)(v4 + v6 + v7 + (((v10 ^ 0x62) - 63290468) & 0x3C5BEFCu)) | (a2 << 8)) - 1616407552;
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * ((98 * (v8 + v9 + a4 != 0)) ^ v10 ^ 0x62)))(a1, (v11 ^ 0xFF6C7A6C) + 1811144192 + ((2 * v11) & 0xFED8F4D8));
}

uint64_t sub_22B3A52D4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((2744 * (v3 + 1 == v4 + 80)) ^ a3)))();
}

void sub_22B3A5394()
{
}

uint64_t sub_22B3A53AC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + v0 + ((v1 + 364880758) & 0xEA405FBD) + 1621206108 > 7)
                                * ((1871 * (v1 ^ 0xA76)) ^ 0xE78)) ^ v1)))();
}

uint64_t sub_22B3A5424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a3 + (v8 + v4 + 1)) = *(unsigned char *)(a4
                                                          + ((((v5 - 629) | 5u) + 4294967256) & (v7 + 3947653632)));
  return (*(uint64_t (**)(void))(v10 + 8 * (v5 ^ (2429 * ((v9 + v6 + 40) < 4)))))();
}

uint64_t sub_22B3A5488()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((25 * (((v1 - 1) ^ (v0 < ((v1 - 2479) | 0x604u) - 1533)) & 1)) ^ v1)))();
}

uint64_t sub_22B3A54C8()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xEDE)))(200, 1616997413) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (v1 - 234)) ^ v1)))();
}

void sub_22B3A5510()
{
}

uint64_t sub_22B3A5518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((((17 * ((a8 - 3533) ^ 0x10B)) ^ 0xB46)
                                                                        * (v8 < 0x10)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_22B3A5580(uint64_t a1, int a2)
{
  BOOL v13 = v8 > v10;
  *(unsigned char *)(*(void *)(v12 - 136) + (a2 - 1592551887)) = *(unsigned char *)(v5 + ((a2 - 1592551887) & 0xFLL)) ^ *(unsigned char *)(v2 + (a2 - 1592551887)) ^ *(unsigned char *)(((a2 - 1592551887) & 0xFLL) + v3 + 1) ^ *(unsigned char *)(v4 + ((a2 - 1592551887) & 0xFLL)) ^ (123 * ((a2 + 49) & 0xF));
  unsigned int v14 = a2 + 319849101;
  uint64_t v15 = (a2 + 1);
  int v16 = v13 ^ (v14 < v6 + 1360);
  BOOL v17 = v14 < v9;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((v13 * ((v7 - 731) ^ 0x6AA)) ^ v7)))(a1, v15);
}

uint64_t sub_22B3A561C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((2 * (v14 - 2023) - 2594) * (a9 != 0)) ^ v14)))(a1, a2, a3, a4, a5, a6, a7, a8, a1, a11, a12, a13, a14, v16 - 0x1040B6DFA03FCBCDLL, v16 - 0x1040B6DFA03FCCDDLL);
}

uint64_t sub_22B3A5720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(void))(a4
                              + 8 * (int)(((((a36 - 1670) | 0x10) ^ 0xFFFFFDBA) + ((a36 - 1028) | 5)) ^ (a36 + 1670))))();
}

uint64_t sub_22B3A5788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((26 * (((v8 == v9) ^ (a8 + 54)) & 1)) ^ a8)))();
}

uint64_t sub_22B3A57B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a7 + 1 == (((v7 ^ 0x7F0) + a5) & a6) - 1562) * ((((v7 ^ 0x7F0) - 1456) | 0x20) - 285)) ^ v7 ^ 0x7F0)))();
}

uint64_t sub_22B3A57F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * (a27 ^ (56
                                      * (((2 * (a11 - (a14 & 0x4E655150) + 224148912)) & 0xEF75DFF0 ^ 0x4E655150)
                                       + ((a11 - (a14 & 0x4E655150) + 224148912) ^ 0xD0884750)
                                       + 803206912 == 664463096)))))();
}

void sub_22B3A58BC()
{
}

uint64_t sub_22B3A58C8(uint64_t a1, int a2)
{
  BOOL v13 = v8 > v10;
  *(unsigned char *)(*(void *)(v12 - 248) + (a2 - 247447155)) = *(unsigned char *)(v5 + ((a2 - 247447155) & 0xFLL)) ^ *(unsigned char *)(v2 + (a2 - 247447155)) ^ *(unsigned char *)((((_BYTE)a2 - 115) & 0xF) + v4 + 5) ^ *(unsigned char *)((((_BYTE)a2 - 115) & 0xF) + v3 + 2) ^ (((a2 - 115) & 0xF) * (v7 + 34));
  unsigned int v14 = a2 + 999072664;
  uint64_t v15 = (a2 + 1);
  int v16 = v13 ^ (v14 < v6);
  BOOL v17 = v14 < v9;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((2451 * v13) ^ v7)))(a1, v15);
}

uint64_t sub_22B3A5960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17)
{
  unsigned int v23 = 1503746353
      * (((&a15 | 0x14260DD0) - &a15 + (&a15 & 0xEBD9F228)) ^ 0x3247CF66);
  LODWORD(a17) = v23 + 1299996386;
  a16 = v20;
  a15 = v23 + v19 + 991;
  (*(void (**)(int *))(v17 + 8 * (v19 + 2857)))(&a15);
  a15 = v19
      + 225134719 * ((&a15 & 0x5BC73178 | ~(&a15 | 0x5BC73178)) ^ 0xB2C88BAD)
      - 157116716;
  a16 = v22 - 0x1A311C056C7BD919;
  a17 = v20;
  uint64_t v24 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 + 2999)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((v21 - v18 - 1331781556 < (v19 ^ 0xFFFFFB7C)) * ((v19 ^ 0x814) - 3223)) ^ v19 ^ 0x814)))(v24);
}

uint64_t sub_22B3A5A9C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * ((1019 * (((a3 - 1505) & v4) != (((a3 - 1396) | 0x148) ^ 0x1CD))) ^ a3)))((v3 - v5));
}

uint64_t sub_22B3A5AE0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((101 * (v1 + 1 != v2 + 20)) ^ v0)))();
}

void sub_22B3A5BA4()
{
}

uint64_t sub_22B3A5C24@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(v7 + (a4 + v8)) = *(unsigned char *)(v6 + (a4 + v8));
  BOOL v10 = (a1 & a2 ^ a3) + a4 != a5;
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * v10) | (32 * v10)) ^ v9)))();
}

uint64_t sub_22B3A5C2C(void *a1, int a2, uint64_t a3)
{
  *a1 = *v4;
  return (*(uint64_t (**)(void *))(v5 + 8 * (((a3 != 0) * a2) ^ v3)))(a1 + 1);
}

void sub_22B3A5C54()
{
}

uint64_t sub_22B3A5C5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30)
{
  int v31 = *a30 - ((2 * *a30 + 1495435186) & 0x739F635C) - 1503595129;
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * ((25
                                * (((2 * v31) & 0xF7F65F7E ^ 0x7396435C)
                                 + (v31 ^ (253 * (a2 ^ 0x9C) - 1036741332))
                                 - 1342907313 != 737152014)) ^ (a2 + 2420))))();
}

uint64_t sub_22B3A5D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_22B3A5D74(a11 - 0x281D12643933BF1BLL, v11 - 0x281D12643933BF1BLL, 0xAB114573F18A3524, (v12 - 2051), 0x196BFFF6ECDBBF29, 0x1D9B77E52, 0xFFFFFAAFFF37E000);
}

uint64_t sub_22B3A5D74(void *a1, void *a2, uint64_t a3, int a4)
{
  BOOL v17 = v15 > v9;
  uint64_t v18 = 4 * (v13 + v10);
  int v19 = v4 + v12 + ((v8 + 402) ^ a4 ^ *(_DWORD *)(*a1 + v18 + a3));
  *(_DWORD *)(*a2 + v18 + a3) = v19 + v14 - (v11 & (2 * v19));
  int v20 = v13 + 1 + v6;
  LODWORD(v18) = v17 ^ (v20 < v5);
  BOOL v21 = v20 < v7;
  if (!v18) {
    BOOL v17 = v21;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((224 * !v17) ^ v8)))();
}

uint64_t sub_22B3A5E0C@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int8x8x4_t v6 = vld4_s8(a1);
  v7.val[0] = v6.val[3];
  v7.val[1] = v6.val[2];
  v7.val[2] = v6.val[1];
  v7.val[3] = v6.val[0];
  vst4_s8(a1, v7);
  return (*(uint64_t (**)(void))(a3 + 8 * (((a2 == 0) * v3) ^ v4)))();
}

void sub_22B3A5E44()
{
}

uint64_t sub_22B3A5E50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68167) = *(unsigned char *)(*(void *)(a1 - 0x48A9B556C05DE579)
                                                                                       + 12);
  return (*(uint64_t (**)(void))(v2 + 14264))(0);
}

uint64_t sub_22B3A5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v10 = v5 + v6;
  *(unsigned char *)(v10 + a4 - 1) = v7;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 < 0x40) * v8) ^ v4)))();
}

uint64_t sub_22B3A5F10()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((52 * (*(void *)(qword_26DE9F660 - 4) == 0)) ^ v0)))();
}

uint64_t sub_22B3A5F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = v5 + ((v6 + 2110227106) & 0x82387D7F) - 964425019;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((41 * (964421630 - v4 - v3 + v8 > 0xE)) ^ v6)))(194, a2, a3, 2924);
}

uint64_t sub_22B3A5FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                      + 8
                                                                                      * ((209
                                                                                        * (v7 < (((v5 ^ 0x89C) - 2172) ^ 0x146u))) ^ v5));
  *(_DWORD *)(v9 - 212) = v6;
  return v10(a1, a2, a3, a4, a5, 0);
}

void sub_22B3A6010(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8, unsigned int a9)
{
  *(_DWORD *)(*(void *)(a1 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68007) = 406907236;
  *(_DWORD *)(*(void *)(a1 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A68003) = 920561905;
  *(void *)(*(void *)(a1 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A67FFFLL) = *(void *)(a1 - 0x70D52A7E711E4FFELL)
                                                                             + 0x3038735A48CF4AE5;
  uint64_t v10 = *(void *)(a1 - 0x70D52A7E711E4FFELL) + 0x366CB32738D3F1CLL;
  uint64_t v11 = *(void *)(a2 - 0x48A9B556C05DE579) + (*v9 - 1801476204);
  a8 = 1988622253 * (((~&a5 & 0xB6903D06) - (~&a5 | 0xB6903D07)) ^ 0x40887DA7) + 1468808320;
  a9 = 1988622253 * (((~&a5 & 0xB6903D06) - (~&a5 | 0xB6903D07)) ^ 0x40887DA7) + 2419;
  a5 = v10;
  a6 = v11;
  (*(void (**)(uint64_t *))(a3 + 32160))(&a5);
  JUMPOUT(0x22B3B57CCLL);
}

uint64_t sub_22B3A6024(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, uint64_t a20,int *a21,uint64_t a22,int a23,int a24)
{
  unsigned int v30 = (((&a20 | 0x1059994F) - &a20 + (&a20 & 0xEFA666B0)) ^ 0xFA4EAEBB) * a2;
  a20 = v29;
  LODWORD(a21) = v30 ^ (a3 + 12);
  HIDWORD(a21) = v30 + v26 - 1230;
  (*(void (**)(uint64_t *))(v24 + 8 * (v26 | 0x567)))(&a20);
  unsigned int v31 = (&a20 ^ 0x2FDB281A) * v28;
  LODWORD(a20) = -38327932 - v31;
  a21 = &a16;
  a22 = v29;
  a23 = v26 - v31 + 765;
  a24 = v31 + v27;
  (*(void (**)(uint64_t *))(v24 + 8 * (v26 + 1437)))(&a20);
  *(_DWORD *)(v25 - 0x21AEEC4F795AEEC7) += a16;
  *(_DWORD *)(v25 - 0x21AEEC4F795AEEC3) += a17;
  *(_DWORD *)(v25 - 0x21AEEC4F795AEEBFLL) += a18;
  *(_DWORD *)(v25 - 0x21AEEC4F795AEEBBLL) += a19;
  a22 = v25 + 0x373D3BF342347CACLL;
  LODWORD(a21) = ((((2 * &a20) | 0xA6CF55BA) - &a20 + 748180771) ^ 0xFCBC82C7) * v28
               + 1062498722
               + v26
               - 1801;
  a20 = v29;
  uint64_t v32 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v26 + 1379)))(&a20);
  *(void *)(v25 - 0x21AEEC4F795AEEAFLL) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24
                                                              + 8
                                                              * ((214 * (((v26 - 2668) | 0xA42) != 2702)) ^ ((v26 - 2668) | 0xA42))))(v32, 1866394843, 1704559893);
}

uint64_t sub_22B3A6220@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((2903
                                * (((**v5 - 42) ^ v4) + v2 + (v3 & (2 * (**v5 - 42))) == a2
                                                                                       + ((a1 - 1982879072) & 0x763055D7)
                                                                                       - 1361)) ^ a1)))();
}

uint64_t sub_22B3A627C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W6>, int a7@<W8>)
{
  int v12 = v7 ^ (v10 - 72);
  *(unsigned char *)(a2 + a7 + a6 + v12) ^= *(unsigned char *)(a1 + a7 + a6 + v12);
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a7 + 1 < ((v12 + a3) & a5 ^ v8)) * (((v12 + a3) ^ a4) - 1449)) ^ (v9 + v12 - 60))))();
}

uint64_t sub_22B3A62DC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1378 * ((v0 & 0x18) == ((((v1 + 1483825892) & 0xA78E9BDD) + 748) ^ 0xC79))) ^ v1)))();
}

void sub_22B3A6328()
{
}

uint64_t sub_22B3A6370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((630 * (v4 + 1 == a3 + 16)) ^ v5)))();
}

uint64_t sub_22B3A6450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v25
                                                                                                 + 8
                                                                                                 * ((((v23 + 417) ^ (v23 + 1163) ^ 0x520) * (v24 == 63)) ^ v23)))(a1, -1302056440, a3, a4, a5, a6, a23);
}

uint64_t sub_22B3A648C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((213
                                * ((a8 & (2 * (v8 + a6 + v9 + ((v10 - 2674) | 0xC4) - 47)) ^ v11)
                                 + ((v8 + a6 + v9 + ((v10 - 2674) | 0xC4) - 47) ^ 0x43B9C55)
                                 + ((v10 - 2878) ^ (a7 - 244)) != a5)) ^ v10)))();
}

uint64_t sub_22B3A64F8(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  *(_DWORD *)(*(void *)(v8 - 0x70D52A7E711E4FFELL) - 0x24B64731C5A67D93) = v6;
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8 * (((*v5 == a2 + 2366) * (a5 ^ 0x4E8 ^ ((a4 - 1210) | 0x24))) ^ a4)))(86);
}

uint64_t sub_22B3A6568@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v6 = (v4 + a2);
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x260] + v6 + 72);
  *(unsigned char *)(a1 + v6) = v7 ^ 0x13;
  *(unsigned char *)(a1 + (v6 + 1)) = (BYTE1(v7) ^ 0x67)
                                          - ((((v7 >> 8) ^ 0x67) << ((v3 + 90) ^ 0x37)) & 0x54)
                                          + 42;
  *(unsigned char *)(a1 + (v6 + 2)) = (BYTE2(v7) ^ 0x95) + (~(v7 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v6 + 3)) = (HIBYTE(v7) ^ 0x11) - ((v7 >> 23) & 0x54) + 42;
  unsigned int v8 = LODWORD(STACK[0x2BC]) + 1488911221;
  BOOL v9 = v4 + 193644064 < v8;
  if (v4 + 193644064 < v2 != v8 < v2) {
    BOOL v9 = v8 < v2;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((63 * v9) ^ v3)))();
}

void sub_22B3A664C()
{
  *(_DWORD *)(v1 - 192) = v0 + 8;
  *(_DWORD *)(v1 - 200) = v0 + 7;
  JUMPOUT(0x22B3A6744);
}

void sub_22B3A67B8()
{
}

uint64_t sub_22B3A6B70()
{
  unsigned int v7 = (_DWORD *)(v0 + 4 * (v1 + v4));
  int v8 = *(v7 - 8) ^ *(v7 - 3);
  unsigned int v9 = v8 + v5 - ((2 * v8) & 0xB7FDD896);
  int v10 = *(v7 - 16) ^ *(_DWORD *)(v0 + 4 * (((v2 + 1306) ^ (unint64_t)(v4 + 1832)) + v1));
  HIDWORD(v11) = v10 ^ v9 ^ 0x5BFEEC4B;
  LODWORD(v11) = v10 ^ ~v9;
  *unsigned int v7 = (v11 >> 31) + v5 - ((2 * (v11 >> 31)) & 0xB7FDD896);
  return (*(uint64_t (**)(void))(v3 + 8 * ((3354 * (v1 + 1 == v6 + 64)) ^ v2)))();
}

void sub_22B3A6C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v20 = (((v16 ^ 0xB3B47456) + 1575023033) ^ a8) + (a16 ^ v18);
  *(_DWORD *)(v19 - 132) = v20 + v18 - (v17 & (2 * v20));
  JUMPOUT(0x22B3A6C74);
}

uint64_t sub_22B3A6CF8@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  HIDWORD(v9) = v4 ^ 1;
  LODWORD(v9) = v4 ^ a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 + 1 == v7 + 60) * v3) ^ v2)))((v9 >> 2) + v8 - (v5 & (2 * (v9 >> 2))));
}

uint64_t sub_22B3A6DD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(*v7 + 4 * a5 + a3) == v5 + 2380) * (((a4 + 1712) | 0x60) - 2485)) ^ a4)))();
}

uint64_t sub_22B3A6E08(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = (a2 + a3 + 42041408);
  unint64_t v12 = *(void *)(v10 - 200);
  unint64_t v13 = v12 + v11 + (((a6 - 1806) | 0x4A0u) ^ 0x5A3);
  uint64_t v14 = (a2 + a3) & 0xF;
  uint64_t v15 = v14 - v11;
  unint64_t v16 = v8 + v14 - v11;
  uint64_t v17 = v14 + 1;
  unint64_t v18 = v8 + v14 + 1;
  unint64_t v19 = v6 + v14 + 1 - v11;
  unint64_t v20 = v14 + (a6 ^ 0x5E6u) + v6 - 3572;
  unint64_t v21 = v7 + v15;
  unint64_t v22 = v7 + v17;
  BOOL v24 = v18 > v12 && v16 < v13;
  int v26 = v20 > v12 && v19 < v13 || v24;
  if (v22 > v12 && v21 < v13) {
    int v26 = 1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * (a6 | (8 * v26))))();
}

void sub_22B3A6EA8(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 - 2009815553 * (((&a3 | 0x508070B7) + (~&a3 | 0xAF7F8F48)) ^ 0xA18B5EF3) + 1363;
  a4 = v7;
  a5 = v7;
  a3 = v6;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 + 2853)))(&a3);
  JUMPOUT(0x22B3A6F04);
}

uint64_t sub_22B3A6F2C()
{
  *int v2 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v0) ^ v1)))();
}

uint64_t sub_22B3A6F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * (((((v34 + 712) | 0x885) - 4418 + 10 * (v34 ^ 0x1F3)) * (v32 == v33)) ^ v34)))(a32);
}

uint64_t sub_22B3A6F9C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 + v1) = *(unsigned char *)(v6 + v2 + v1);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 + 1 == v3) * ((v4 - 461) ^ 0xE4E)) ^ (v4 - 137))))();
}

void sub_22B3A6FD8()
{
}

uint64_t sub_22B3A7074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  STACK[0xD88] = (unint64_t)&STACK[0x5E30592FF90A55F0];
  STACK[0xD78] = (unint64_t)&STACK[0x1901A95D18EF6AA1];
  *(_DWORD *)(v36 - 128) = (v34 + 1150) ^ (225134719
                                         * ((2 * ((v36 - 152) & 0xAEB6E80) - (v36 - 152) + 1964282235) ^ 0x63E4D451));
  STACK[0xD98] = v32;
  STACK[0xD80] = v35 + (a32 - 230568399);
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v34 ^ 0x101C)))(v36 - 152);
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * (((*(_DWORD *)(v36 - 112) == -604050357) * (((v34 - 23) | 0xA) ^ 0xFF4)) ^ v34)))(v37);
}

void sub_22B3A7180()
{
}

uint64_t sub_22B3A71FC@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  int v7 = ((a2 - 1245178167) & 0x4A37EFDA) + *(unsigned __int8 *)(a1 + 4) - 2951;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1587 * ((v7 ^ v5) + v3 + (v4 & (2 * v7)) == a3)) ^ a2)))();
}

void sub_22B3A7250()
{
}

void sub_22B3A725C()
{
}

void sub_22B3A7300()
{
}

uint64_t sub_22B3A7308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t))(v9 + 8 * ((488 * (((*a6 == a4) ^ (a3 + ((5 * (v8 ^ 0x1B) - 13) & 0xDF) - 39)) & 1)) ^ (5 * (v8 ^ 0x71B)))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22B3A7378(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + a1) = *(void *)(a7 + v8);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * (((v9 == 0) * a4) ^ v10)))(a1 + 8);
}

void sub_22B3A73A8()
{
}

uint64_t sub_22B3A73B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v12 = v8 - 1593823230;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  BOOL v13 = a8 - v9 - v10 + (a5 ^ 0x21E) - 1562 + v12 > 0xE;
  return (*(uint64_t (**)(void))(v11 + 8 * (((4 * v13) | (8 * v13)) ^ a5)))();
}

void sub_22B3A7424()
{
}

uint64_t sub_22B3A7430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17)
{
  unint64_t v21 = 2009815553
      * (((v20 | 0x98AD7A75A1F44C97) - (v20 | 0x6752858A5E0BB368) + 0x6752858A5E0BB368) ^ 0x8BD072AE50FF62D2);
  a15 = v21 + 787;
  a16 = a11;
  a17 = v21 + 0x7B7CD87A8C1ABF73 * v17 + 0x6A98DE2DE1CC0B24;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 33032))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((314 * (a14 == ((v18 + 568) ^ 0x2C8))) ^ 0x627u)))(v22);
}

void sub_22B3A7508()
{
}

uint64_t sub_22B3A75C4()
{
  return sub_22B3A75CC();
}

uint64_t sub_22B3A75CC@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>)
{
  int v7 = (a3 + a2 + 1872) | 0x256;
  *int v5 = a1;
  *int v4 = v3;
  int v8 = (v7 - 1078) | 0x89;
  uint64_t v13 = v10;
  int v12 = (v7 + 629) ^ (225134719
                    * ((&v12 - 422577544 - 2 * ((unint64_t)&v12 & 0xE6CFFA78)) ^ 0xF03FBF52));
  (*(void (**)(int *))(v6 + 8 * (v7 ^ 0x88F)))(&v12);
  int v12 = (v8 + 1570) ^ (225134719
                     * ((((&v12 | 0x7A774E98) ^ 0xFFFFFFFE) - (~&v12 | 0x8588B167)) ^ 0x9378F44D));
  uint64_t v13 = v11;
  (*(void (**)(int *))(v6 + 8 * (v8 + 3120)))(&v12);
  return 0;
}

uint64_t sub_22B3A7708(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((a1 - 1525) ^ 0xFFFFF92A) + (a1 ^ 0x241)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_22B3A773C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (a3 ^ (127 * ((unint64_t)(a2 - (a6 + v8)) > 0x1F)))))(v6);
}

uint64_t sub_22B3A776C()
{
  return sub_22B3A7774();
}

uint64_t sub_22B3A7774@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v10 + (v6 + a2 + v7));
  *(int8x16_t *)(a3 + v7) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 48) * a1) ^ (v9 + a4 + 293))))();
}

uint64_t sub_22B3A77BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * (((23 * (v20 ^ 0x6DF) != 438) * ((23 * (v20 ^ 0x6DF) + 3210) ^ 0x951)) ^ (23 * (v20 ^ 0x6DF)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_22B3A785C()
{
  BOOL v3 = ((v1 << ((v0 + 81) & 0x7F ^ 0x16)) & (403 * (v0 ^ 0x941) - 688970643) ^ 0xC6020912)
     + (v1 ^ 0x8F6BB74)
     + 532676480 == 188192569;
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (v3 | (8 * v3)))))();
}

uint64_t sub_22B3A78F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((((((v17 - 1981877633) & 0x76210F7F) - 552) ^ 0xA4F) * (*(unsigned char *)(v18 - 0x3FB394992CBB4F6ELL) == 44)) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_22B3A7950()
{
}

uint64_t sub_22B3A795C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int8x16_t v21 = vrev64q_s8(*(int8x16_t *)*(void *)(v17 + 24));
  int8x16_t v22 = vextq_s8(v21, v21, 8uLL);
  v23.i64[0] = 0x4343434343434343;
  v23.i64[1] = 0x4343434343434343;
  int8x16_t v24 = vorrq_s8(v22, v23);
  int8x16_t v25 = vaddq_s8(v22, vornq_s8(v23, v22));
  v23.i64[0] = 0xA2A2A2A2A2A2A2A2;
  v23.i64[1] = 0xA2A2A2A2A2A2A2A2;
  int8x16_t v26 = vrev64q_s8(veorq_s8(vaddq_s8(v25, vaddq_s8(v24, v23)), (int8x16_t)xmmword_22B497570));
  *(int8x16_t *)(v19 - 112) = vextq_s8(v26, v26, 8uLL);
  BOOL v28 = v18 == 0x1CBC873A87398388 || a9 == 0;
  HIDWORD(a14) = 2 * v16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (int)(a3 | (35 * v28))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_22B3A7A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  BOOL v15 = v12 + 1604232212 > 970179102 || v12 + 1604232212 < a11 - 1177304545;
  return (*(uint64_t (**)(void))(v13
                              + 8 * (int)((v15 * ((625 * (v11 ^ 0x1D5) + 1956910023) & 0x8B5BE1BB ^ 0xD51)) ^ v11)))();
}

uint64_t sub_22B3A7A74()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((85 * (((v0 == 0) ^ ((v1 - 1) ^ (v1 + 44))) & 1)) ^ v1)))();
}

uint64_t sub_22B3A7ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((436
                                * (*(_DWORD *)(a16
                                             - 0x54EEBA8C0E75CADCLL
                                             + 4 * (v18 + (v17 ^ 0x30B) + ((v17 - 1591) ^ 0xB5ABE8A7))) == v16)) ^ (v17 + 249))))();
}

uint64_t sub_22B3A7B20(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v16 = v13 ^ (a3 - 427);
  int v17 = 2009815553 * ((((2 * (v15 - 160)) | 0x71C42556) - (v15 - 160) + 1193143637) ^ 0x49E93CEE);
  *(_DWORD *)(v15 - 136) = v13 - v17 + 2851;
  *(_DWORD *)(v15 - 104) = a4 - v17 + 285189382;
  *(void *)(v15 - 160) = a10;
  *(void *)(v15 - 144) = a12;
  *(void *)(v15 - 128) = v14;
  *(void *)(v15 - 120) = a11;
  *(void *)(v15 - 112) = a9;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 3588)))(v15 - 160);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((*(_DWORD *)(v15 - 152) == v16 + 797233299)
                                              * (((v13 + 1675) | 0xA4) ^ 0x3ED)) ^ v13)))(a1);
}

uint64_t sub_22B3A7DC4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((23 * (a3 ^ 0xA82) + 108 * (a3 ^ 0xA02) - 6031) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_22B3A7E0C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v1 ^ (2
                                     * ((160327861 - v0)
                                      - 160330902
                                      + (unint64_t)((v1 - 3716) | 0xC20u) < (unint64_t)(v1 - 972)
                                                                                 - 2737)))))();
}

uint64_t sub_22B3A7E68@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  int v12 = (v11 + a3) & v9;
  *(_DWORD *)(*v6 + 4 * (v4 + v5 + v12 - 519) + v10) = v8;
  return (*(uint64_t (**)(void))(a4 + 8 * ((((((v12 - 168) | a1) + 703) ^ a2) * (v7 == 0)) ^ v12)))();
}

uint64_t sub_22B3A7ECC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((946
                                * (((2 * v1) & 0x2BEBEFFE ^ 0x2200DA0)
                                 + (v1 ^ 0x1CE7F12F)
                                 + ((v0 + 1125) ^ 0x6ACEEC07 ^ (v0 + 1384436616) & 0xAD7B2FF7) == 12904223)) ^ v0)))();
}

uint64_t sub_22B3A7F4C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 == 0x3FBE4A0FA6559282) ^ v2) & 1) * ((113 * (v0 ^ 0x2D3)) ^ 0x223)) ^ v0)))();
}

uint64_t sub_22B3A7F9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (a4 ^ (495
                                     * (((2 * (a20 - ((2 * a11) & 0x51796F22) + 1682193506)) & 0xEABB7B76 ^ 0x40396B22)
                                      + ((a20 - ((2 * a11) & 0x51796F22) + 1682193506) ^ 0xDDE10A2A)
                                      - 1094753737 != 874323954)))))();
}

uint64_t sub_22B3A8058(uint64_t a1, unsigned int a2)
{
  BOOL v3 = (*(uint64_t (**)(void, uint64_t))(v2 + 32544))(a2, 1252601147) == 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((4 * ((v3 ^ 0xF3) & 1)) ^ 0x9F2u)))(4294925268);
}

uint64_t sub_22B3A80A8@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(v4 + (v5 + a1 + 2705)) = *(unsigned char *)(a2 + (v5 + a1 + 2705));
  return (*(uint64_t (**)(void))(v6 + 8 * ((2237 * (a3 - 121 + a1 - 456 == a4)) ^ (a3 + 1208))))();
}

uint64_t sub_22B3A80E8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a3 - 1697543583) > 0x2F) | (4
                                                                            * ((a3 - 1697543583) > 0x2F))) ^ v3)))();
}

uint64_t sub_22B3A81D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * (((((v6 < 0x10) ^ (v5 - 44)) & 1)
                                                                                          * (((v5 + 441) | 0x840) - 3438)) ^ v5)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_22B3A820C@<X0>(uint64_t a1@<X8>)
{
  char v4 = *v2;
  *uint64_t v2 = v2[3];
  v2[3] = v4;
  char v5 = v2[1];
  v2[1] = v2[2];
  v2[2] = v5;
  return (*(uint64_t (**)(void))(a1 + 8 * (((v1 == 673189852) * (v3 - 3176)) ^ v3)))();
}

uint64_t sub_22B3A825C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 ^ 0xE36) - 657) ^ 0x33B) * (v0 != 55)) ^ v1)))();
}

uint64_t sub_22B3A828C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((((v26 ^ 0x385) - 113) * (v24 != v25)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_22B3A82C4@<X0>(unsigned int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X4>, int a4@<W8>)
{
  v6[*v6 * (unint64_t)a1 + 8 + v5] = *(unsigned char *)(a3 + v5);
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a4 + ((v4 + v8) & a2) - 3268 + v7 < 0x10) * (((v4 + v8) & a2) - 3267)) | (((v4 + v8) & a2) - 2649))))();
}

uint64_t sub_22B3A831C(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v11 = (a2 + v10 + a3);
  uint64_t v12 = v11 + v4;
  uint64_t v13 = v11 + *(void *)(v9 - 136);
  uint64_t v14 = (a2 + v10) & 0xF;
  unint64_t v15 = v14 + v7 - v13;
  uint64_t v16 = (v14 | v5) - v13;
  unint64_t v17 = (v14 | v6) - v13;
  BOOL v21 = (unint64_t)(v12 - v13) < 0x10
     || v15 < 0x10
     || (unint64_t)(v16 + 1) < 0x10
     || v17 < (unint64_t)(((a4 - 3046) | 0xF50u) - 3289) - 615;
  return (*(uint64_t (**)(void))(v8 + 8 * ((29 * v21) ^ a4)))();
}

void sub_22B3A8398()
{
}

void sub_22B3A83A0()
{
}

uint64_t sub_22B3A8418()
{
  *uint64_t v2 = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v0 ^ (198
                                     * ((((631 * ((v0 - 1628659530) & 0x61135BFB ^ 0x8F5)) ^ 0x6FD7F124) & (2 * (v1 - ((2 * v1) & 0x2D7B0B60) + 381519280)) ^ 0x2D530B60)
                                      + ((v1 - ((2 * v1) & 0x2D7B0B60) + 381519280) ^ 0xE1567A47)
                                      + 2080374463 != 1944846006)))))();
}

void sub_22B3A84C0()
{
}

uint64_t sub_22B3A84CC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((272 * (v0 ^ 0x1D1) - 2173)
                                * (((2 * v1) & 0xF7F571FE ^ 0x55B021D8) + (v1 ^ 0x5526E813) - 1476534306 != 603494621)) ^ v0)))();
}

uint64_t sub_22B3A8540(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v18 = (a6 ^ v12)
      + v8
      + (((v9 ^ a1) + v12 - (((v9 ^ a1) << ((v10 + 120) ^ 0xC6)) & v17)) ^ a2)
      + *(_DWORD *)(a4 + 4 * (a8 + v13))
      + (*(_DWORD *)(v15 + 4 * (*(unsigned char *)(a3 + a8 + v13) - 53)) ^ v14);
  unsigned int v19 = (v18 + v12 - (v17 & (2 * v18))) ^ v12;
  int v20 = ((v19 << (*(unsigned char *)(a5 + a8 + v13) - 113)) | (v19 >> (113 - *(unsigned char *)(a5 + a8 + v13)))) + (a1 ^ v12);
  return (*(uint64_t (**)(void))(v11 + 8 * ((2593 * (a8 + 1 == v16 + 32)) ^ v10)))(v20 + v12 - (v17 & (2 * v20)));
}

void sub_22B3A860C()
{
  *(_DWORD *)(v2 - 144) = v0;
  *(_DWORD *)(v2 - 140) = v1;
  *(_DWORD *)(v2 - 148) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x22B3A867CLL);
}

void sub_22B3A8748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if (v8 + v7 >= ((a7 + 1143) ^ 0x7FFFF68Cu)) {
    int v11 = 1841123810 - v10;
  }
  else {
    int v11 = v10;
  }
  *int v9 = v11;
  JUMPOUT(0x22B3A877CLL);
}

uint64_t sub_22B3A8798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v8 + (v6 & a2)) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == 0) * a5) ^ v5)))();
}

uint64_t sub_22B3A87C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3181
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v4) == (((v3 - 1711276619) | 0x238400) ^ 0x63FC5B2F))) ^ v3)))();
}

void sub_22B3A8820()
{
}

void sub_22B3A882C()
{
}

void sub_22B3A88B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v8 = *(unsigned char *)(a6 + 16);
  uint64_t v7 = (unsigned char *)(a6 + 16);
  *(unsigned char *)(v6 - 0x35211A7059D73233) = *(unsigned char *)(v6 - 0x35211A7059D73243) ^ v8;
  *(unsigned char *)(v6 - 0x35211A7059D73232) = *(unsigned char *)(v6 - 0x35211A7059D73242) ^ v7[1];
  *(unsigned char *)(v6 - 0x35211A7059D73231) = *(unsigned char *)(v6 - 0x35211A7059D73241) ^ v7[2];
  *(unsigned char *)(v6 - 0x35211A7059D73230) = *(unsigned char *)(v6 - 0x35211A7059D73240) ^ v7[3];
  *(unsigned char *)(v6 - 0x35211A7059D7322FLL) = *(unsigned char *)(v6 - 0x35211A7059D7323FLL) ^ v7[4];
  *(unsigned char *)(v6 - 0x35211A7059D7322ELL) = *(unsigned char *)(v6 - 0x35211A7059D7323ELL) ^ v7[5];
  *(unsigned char *)(v6 - 0x35211A7059D7322DLL) = *(unsigned char *)(v6 - 0x35211A7059D7323DLL) ^ v7[6];
  *(unsigned char *)(v6 - 0x35211A7059D7322CLL) = *(unsigned char *)(v6 - 0x35211A7059D7323CLL) ^ v7[7];
  *(unsigned char *)(v6 - 0x35211A7059D7322BLL) = *(unsigned char *)(v6 - 0x35211A7059D7323BLL) ^ v7[8];
  *(unsigned char *)(v6 - 0x35211A7059D7322ALL) = *(unsigned char *)(v6 - 0x35211A7059D7323ALL) ^ v7[9];
  *(unsigned char *)(v6 - 0x35211A7059D73229) = *(unsigned char *)(v6 - 0x35211A7059D73239) ^ v7[10];
  *(unsigned char *)(v6 - 0x35211A7059D73228) = *(unsigned char *)(v6 - 0x35211A7059D73238) ^ v7[11];
  *(unsigned char *)(v6 - 0x35211A7059D73227) = *(unsigned char *)(v6 - 0x35211A7059D73237) ^ v7[12];
  *(unsigned char *)(v6 - 0x35211A7059D73226) = *(unsigned char *)(v6 - 0x35211A7059D73236) ^ v7[13];
  *(unsigned char *)(v6 - 0x35211A7059D73225) = *(unsigned char *)(v6 - 0x35211A7059D73235) ^ v7[14];
  *(unsigned char *)(v6 - 0x35211A7059D73224) = *(unsigned char *)(v6 - 0x35211A7059D73234) ^ v7[15];
  JUMPOUT(0x22B3A8BD4);
}

void sub_22B3A919C()
{
}

uint64_t sub_22B3A91A8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((28 * (v3 - v4 - 4 < ((7 * ((a3 + 137969905) & 0xF7C6BEE4 ^ 0xEF3)) ^ 0x265uLL))) ^ (a3 + 137969905) & 0xF7C6BEE4)))();
}

void sub_22B3A9204(_DWORD *a1@<X8>)
{
  uint64_t v4 = *v3;
  *(void *)(v3[1] - 0xC6FBACBD8C9755ELL) = v1;
  *(_DWORD *)(v4 - 0xA039FA35F0E832BLL) = v2;
  *((_DWORD *)v3 + 6) = *a1;
}

uint64_t sub_22B3A9270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, int a16)
{
  a15 = &STACK[0x2B48C588999CF069];
  a14 = 377 - 225134719 * ((&a14 + 1717609390 - 2 * (&a14 & 0x6660A3AE)) ^ 0x7090E684);
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v17 + 32752))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((21 * (a16 == v16)) | v18)))(v19);
}

void sub_22B3A9300()
{
}

uint64_t sub_22B3A9350@<X0>(unsigned int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((692
                                * (((*(unsigned __int8 *)(v5 + 6) - 1) ^ v4)
                                 + v2
                                 + (v3 & (2 * (*(unsigned __int8 *)(v5 + 6) - 1))) == a2 + (a1 ^ 0x188) - 1361)) ^ a1)))();
}

void sub_22B3A9398()
{
  *(_DWORD *)(v1 - 120) = v0 + 14;
  *(_DWORD *)(v1 - 128) = v0 + 13;
  JUMPOUT(0x22B3A948CLL);
}

void sub_22B3A9504()
{
}

uint64_t sub_22B3A95A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v48
                                                                                                 + 8
                                                                                                 * (int)(((((v47 + 1128544591) & 0xBCBBCCEF) + 642) * (a47 == a46)) ^ v47)))(a1, a2, a3, a4, a5, a6, (v47 + 3002));
}

uint64_t sub_22B3A95F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v13 = (a7 - 1634090428);
  *(unsigned char *)(*(void *)(v12 - 200) + v13) ^= *(unsigned char *)(v10 + (v13 & 0xF)) ^ *(unsigned char *)((v13 & 0xF) + v8 + 1) ^ *(unsigned char *)(v9 + (v13 & 0xF)) ^ (-25 * (v13 & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v11 + 8 * ((56 * (a7 - 1 == v7)) ^ (a4 - 468))))();
}

uint64_t sub_22B3A9664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v14 = (a6 + v8);
  *(unsigned char *)(*(void *)(v13 - 248) + v14) ^= *(unsigned char *)(v9 + (v14 & 0xF)) ^ *(unsigned char *)((v14 & 0xF) + v11 + 4) ^ *(unsigned char *)((v14 & 0xF) + v10 + 3) ^ (-7 * (v14 & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v12 + 8 * ((3196 * (a6 - 1 == v7)) ^ (a7 - 685))))();
}

void sub_22B3A96D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v13 = *(void *)(v11 + 8);
  *(void *)(*(void *)(v11 + 24) - 0x2511380BA0D71B71) = v12;
  *(_DWORD *)(v13 - 0x4FCBBA3B9D6B5E1BLL) = a11;
  JUMPOUT(0x22B3A9708);
}

_DWORD *sub_22B3A9744(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

uint64_t sub_22B3A974C()
{
  unint64_t v3 = (~((v2 - 144) ^ 0xA6369EC803D6F07DLL | 0xAC9F7A342C9D4FD4)
      + (((v2 - 144) ^ 0xA6369EC803D6F07DLL) & 0xAC9F7A342C9D4FD4)) ^ 0xCA9857FAFF50E2DFLL;
  *(void *)(v2 - 128) = *off_26DE9FC28 - 1990461019 * v3;
  *(_DWORD *)(v2 - 120) = (1990461019 * v3) ^ 0xBF5D2A10;
  *(_DWORD *)(v2 - 116) = 1990461019 * v3 - 2088074025;
  *(_DWORD *)(v2 - 112) = 1990461019 * v3 - 2088074147;
  *(_DWORD *)(v2 - 108) = (v0 ^ 0x838A84D7) + 1990461019 * v3;
  *(void *)(v2 - 144) = -1990461019 * v3;
  *(_DWORD *)(v2 - 136) = 1990461019 * v3;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 33112))(v2 - 144);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v2 - 132)))(v4);
}

uint64_t sub_22B3A9A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v23 = ((a19 - 1632001607) & 0xF) != 8
     || a19 - 1632001607 - (((a19 << (v19 ^ 0xD1)) + 1997474210) & 0xC66439D0) == v20 - 483257680;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v21 + 8 * ((v23 * (v20 - 2614)) ^ v20)))(a1, 4294924397, a3, (v20 - 2365));
}

void sub_22B3A9B0C()
{
}

void sub_22B3A9B14()
{
}

uint64_t sub_22B3A9B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v13 = (a7 - 874326332);
  *(unsigned char *)(v11 + v13) ^= *(unsigned char *)(v10 + (v13 & 0xF)) ^ *(unsigned char *)(v9 + (v13 & 0xF)) ^ *(unsigned char *)((v13 & 0xF) + v7 + 1) ^ (127 * (v13 & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v12 + 8 * ((a6 - 2923) ^ (4 * (a7 - 1 != v8)))))();
}

void sub_22B3A9B88()
{
}

uint64_t sub_22B3A9B90@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((2741
                                * (*(_DWORD *)(v2 - 0x19157D3ABD2659C6) == ((((v1 + 1220) | 0x205) - 1593) ^ 0xDBFEEDD7))) ^ v1)))();
}

uint64_t sub_22B3A9BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)((((721 * ((v24 + 954709076) & 0xC7184EF9 ^ 0x6DC)) ^ 0xE38) * (v26 != a6)) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_22B3A9C38(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((467 * (a2 ^ 0x25E)) ^ 0xFFFFF45E) + 67 * (a2 ^ 0x244)) * (v2 != v3)) ^ a2)))();
}

uint64_t sub_22B3A9C80()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 736689653) ^ 0x2BE8F98D) + ((v2 + 736689653) & 0xD4170B3F) - 3983)
                                     * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B3A9CC4(uint64_t a1, char a2, char a3, char a4, char a5, int a6)
{
  uint64_t v11 = v6 + 2;
  uint64_t v12 = (unsigned char *)(a1 - 2);
  *uint64_t v12 = ((a4 + v11) ^ a5) * (v9 + v11);
  *(v12 - 1) = ((a3 + v11) ^ a5) * (a2 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == v11) * a6) ^ v7)))();
}

uint64_t sub_22B3A9D20@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1039 * (a3 == v3 + a2 + a1 - 2786)) ^ (a2 + a1))))();
}

uint64_t sub_22B3A9D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 *a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned __int8 *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v34 = 2 * a7;
  unsigned int v27 = 1438293641 * ((((2 * &a17) | 0x65F7AF54) - &a17 + 1292118102) ^ 0xA3C82D5);
  LODWORD(a23) = (a7 ^ 0x72FF5C3F) - v27 + ((2 * a7) & 0xE5FEB87E) + ((5 * (v26 ^ 0x2F3)) ^ 0xEDF7F39A);
  a22 = a8 + 56;
  LOBYTE(a21) = (-119 * ((((2 * &a17) | 0x54) - &a17 + 86) ^ 0xD5)) ^ 0x61;
  a24 = a8;
  a17 = v27 + v26 + 3315;
  a19 = a8 + 36;
  a20 = a13;
  (*(void (**)(int *))(v25 + 8 * (v26 ^ 0x1276)))(&a17);
  uint64_t v30 = (uint64_t)&a13[56 * *a13 + 0x7D0BC8B68F050DC0];
  unsigned int v31 = 2009815553
      * (((&a17 | 0xDF21D8B0) - &a17 + (&a17 & 0x20DE2748)) ^ 0x2E2AF6F5);
  a17 = v31 + v26 + 161;
  a19 = a8 + 0x72F64011C759083ELL;
  LODWORD(a20) = (v34 & 0xBFF3D7E0) - v31 + (a7 & 0xFFFFFFF0 ^ 0xDFF9EBF5) + 2046230524;
  a22 = v30;
  a23 = a8 + 0x6BC6E02DD468243ALL;
  a21 = a8 + 0x55CFAF5ABE15C28DLL;
  uint64_t v32 = (*(uint64_t (**)(int *))(v25 + 8 * (v26 ^ 0x121E)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 | (2 * (a18 == v24)))))(v32);
}

uint64_t sub_22B3A9F3C(uint64_t a1)
{
  *(void *)(a1 - 7 + (v4 + v2 - v5)) = *(void *)(v1 - 7 + (v4 + v2 - v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1475 * (((v6 - 2748) ^ 0x105) + v5 == (v3 & 0xFFFFFFF8))) ^ v6)))();
}

void sub_22B3A9F8C()
{
}

uint64_t sub_22B3AA004(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  unsigned int v34 = ((((v32 - 647310840) & 0x26952FED) - 1460) ^ 0x8DCE332) - v30;
  BOOL v36 = a30 - 1087996423 < (v31 - 1569460846) || v34 < a30 + 481464423 + a3;
  return (*(uint64_t (**)(void))(v33 + 8 * ((219 * v36) ^ v32)))();
}

uint64_t sub_22B3AA08C()
{
  *(unsigned char *)(v3 - 144) = *v1;
  *(unsigned char *)(v3 - 143) = v1[1];
  *(unsigned char *)(v3 - 142) = v1[2];
  *(unsigned char *)(v3 - 141) = v1[3];
  *(unsigned char *)(v3 - 140) = v1[4];
  *(unsigned char *)(v3 - 139) = v1[5];
  *(unsigned char *)(v3 - 138) = v1[6];
  *(unsigned char *)(v3 - 137) = v1[7];
  *(unsigned char *)(v3 - 136) = v1[8];
  *(unsigned char *)(v3 - 135) = v1[9];
  *(unsigned char *)(v3 - 134) = v1[10];
  *(unsigned char *)(v3 - 133) = v1[11];
  *(unsigned char *)(v3 - 132) = v1[12];
  *(unsigned char *)(v3 - 131) = v1[13];
  *(unsigned char *)(v3 - 130) = v1[14];
  *(unsigned char *)(v3 - 129) = v1[15];
  *(void *)(v3 - 160) = *(void *)v1;
  *(void *)(v3 - 152) = *((void *)v1 + 1);
  return (*(uint64_t (**)(void))(v2 + 8 * ((29 * (v1 != 0)) ^ (v0 - 2279))))();
}

uint64_t sub_22B3AA180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((2859 * (a4 + 1 == v5 + 40)) ^ v4)))();
}

uint64_t sub_22B3AA244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,int a23,uint64_t a24,int *a25,uint64_t a26,int a27,unsigned int a28)
{
  unsigned int v34 = 1866394843
      * (((&a24 ^ 0x55F1DEE2) + 136786894 - 2 * ((&a24 ^ 0x55F1DEE2) & 0x82733CE)) ^ 0xB7C1DAD8);
  a24 = v31;
  LODWORD(a25) = v34 ^ 0x65998521;
  HIDWORD(a25) = v34 + v30 - 1658;
  (*(void (**)(uint64_t *))(v28 + 8 * (v30 + 955)))(&a24);
  unsigned int v35 = 1734664879 * ((&a24 & 0x147EEE15 | ~(&a24 | 0x147EEE15)) ^ 0xC45A39F0);
  a25 = &a20;
  a26 = v31;
  a27 = v30 - v35 + 337;
  a28 = v35 - 635067263;
  LODWORD(a24) = -38327932 - v35;
  (*(void (**)(uint64_t *))(v28 + 8 * (v30 ^ 0x1C11)))(&a24);
  *(_DWORD *)(v32 - 0x21AEEC4F795AEEC7) += a20;
  *(_DWORD *)(v32 - 0x21AEEC4F795AEEC3) += a21;
  *(_DWORD *)(v32 - 0x21AEEC4F795AEEBFLL) += a22;
  *(_DWORD *)(v32 - 0x21AEEC4F795AEEBBLL) += a23;
  a26 = v32 + 0x373D3BF342347CACLL;
  LODWORD(a25) = v30
               + 1734664879 * ((&a24 & 0x2C0692A6 | ~(&a24 | 0x2C0692A6)) ^ 0xFC224543)
               + 1062496493;
  a24 = v31;
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v28 + 8 * (v30 + 951)))(&a24);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((((v33 - v29 - 891766942) < 0xFFFFFFC0)
                                              * ((v30 - 1151746301) & 0x44A63FFE ^ (v30 - 2030))) ^ (v30 - 1819))))(v36);
}

void sub_22B3AA480(int a1@<W8>)
{
  uint64_t v2 = 4 * (v1 - 237182553);
  uint64_t v3 = (int *)(STACK[0x200] + v2);
  int v4 = *v3;
  LODWORD(v3) = -1711036427
              * ((*(_DWORD *)(*(void *)STACK[0x210] + (*(_DWORD *)STACK[0x208] & 0x57F294E4)) ^ v3) & 0x7FFFFFFF);
  LODWORD(v3) = v3 ^ (v3 >> 16);
  unsigned int v5 = v3 * (a1 - 1711039059);
  *(_DWORD *)(STACK[0x238] + v2) ^= v4 ^ *((_DWORD *)*(&off_26DE9F480 + a1 - 2371) + HIBYTE(v5)) ^ *((_DWORD *)*(&off_26DE9F480 + (a1 ^ 0xBDD)) + HIBYTE(v5) - 2) ^ *((_DWORD *)*(&off_26DE9F480 + a1 - 2604) + HIBYTE(v5) - 3) ^ (-1477115904 * v3) ^ v5 ^ (-1169764207 * HIBYTE(v5));
  JUMPOUT(0x22B3AA578);
}

uint64_t sub_22B3AA5F8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((25 * ((v0 & 0x18) != (((v1 ^ 0x6DDu) + 1882) ^ 0x8D0))) ^ v1)))();
}

uint64_t sub_22B3AA634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  return sub_22B348F50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v27 - 188, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_22B3AA644(int a1, int a2, int a3)
{
  int v8 = v4 + v3;
  int v9 = v8 + v5;
  if ((v8 + v5) <= 0x40) {
    int v9 = a2;
  }
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((123 * (a3 - v8 + 2037 >= (a3 + v6 + a1 + 1860 + v9 + 177))) ^ 0x6BB)))();
}

uint64_t sub_22B3AA6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (((v4 > 0xF)
                                                                                 * ((464 * (v5 ^ 0x5DB)) ^ 0x921)) ^ v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_22B3AA6F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 - 1;
  *(unsigned char *)(v3 + v5) = ((v1 + 58) ^ 0xBA) * (v1 + 75);
  return (*(uint64_t (**)(void))(v4 + 8 * ((91 * (v5 == 0)) ^ v2)))();
}

void sub_22B3AA73C(_DWORD *a1@<X8>)
{
  uint64_t v3 = 0x7551A38B4E597DBBLL * (*(void *)(v1 + 16) - v2)
     - ((0x2AA347169CB2FB76 * (*(void *)(v1 + 16) - v2) + 0xBA752B52DFE9168) & 0x21062569B8736126)
     + 0x5656BC0F7338F947;
  *uint64_t v4 = (HIBYTE(v3) ^ 0x90) - ((2 * HIBYTE(v3)) & 0x55) + 42;
  v4[1] = (BYTE6(v3) ^ 0x83) - 2 * ((BYTE6(v3) ^ 0x83) & 0x2E ^ BYTE6(v3) & 4) + 42;
  _DWORD v4[2] = (BYTE5(v3) ^ 0x12) + ~(2 * ((BYTE5(v3) ^ 0x12) & 0x2B ^ BYTE5(v3) & 1)) + 43;
  v4[3] = (BYTE4(v3) ^ 0xB4) - 2 * ((BYTE4(v3) ^ 0xB4) & 0x2B ^ BYTE4(v3) & 1) + 42;
  v4[4] = (BYTE3(v3) ^ 0xDC) - ((2 * (BYTE3(v3) ^ 0xDC)) & 0x55) + 42;
  v4[5] = (BYTE2(v3) ^ 0x39) - ((2 * (BYTE2(v3) ^ 0x39)) & 0x55) + 42;
  v4[6] = (BYTE1(v3) ^ 0xB0) - 2 * ((BYTE1(v3) ^ 0xB0) & 0x2B ^ BYTE1(v3) & 1) + 42;
  v4[7] = v3 ^ 0xB9;
  *(_DWORD *)uint64_t v1 = *a1;
}

uint64_t sub_22B3AA8F0()
{
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((2238
                                             * (((((((v1 - 3189) | 9) + 1770359154) & 0x967A77CD) - 949) & v0) == 0)) ^ ((v1 - 3189) | 9))))(((v1 - 3189) | 9u) + 2808);
}

void sub_22B3AA940()
{
}

uint64_t sub_22B3AA950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  *(unsigned char *)(*a20 - 0x24B64731C5A67D07) = 1;
  return (*(uint64_t (**)(void))(v21 + 8 * (((*a6 == a5 + v20 + 1670542841) * ((a5 + v20 - 2786) ^ (a5 - 206))) ^ v20)))();
}

uint64_t sub_22B3AA9AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1019 * (((a1 == a6) ^ (83 * (v6 ^ 0xE3))) & 1)) ^ v6)))();
}

uint64_t sub_22B3AA9F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27)
{
  BOOL v31 = a27 - v29 == -902075540 && a26 == a4 + 17;
  return (*(uint64_t (**)(void))(v28 + 8 * ((v31 * (v27 ^ 0x975)) ^ v27)))();
}

void sub_22B3AAA3C()
{
}

uint64_t sub_22B3AAA4C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v1 | (((unsigned __int16)(v2 >> 1) < 0xAF1u) << 16)) + 1749585447 != ((v0 - 884973270) & 0x34BF9FD5 ^ 0x6848AD1D))
                                * (v0 - 2014)) ^ v0)))();
}

uint64_t sub_22B3AAABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v64 = (a5 - 208) | 0xA49;
  BOOL v66 = ((v64 - 3770) & (HIDWORD(a28) + 13)) == 0 && HIDWORD(a28) != ((v64 - 3262) ^ 0x5F95E9B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * ((30 * v66) ^ v64)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_22B3AAB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v6 = *(unsigned __int8 *)(v5 - 124) ^ 0x22;
  if (v6 == 1)
  {
    char v7 = 2 * (a5 ^ (a5 - 119));
    unsigned int v14 = *(_DWORD *)(v5 - 156);
    unsigned int v13 = *(_DWORD *)(v5 - 152);
    *(unsigned char *)(v5 - 164) = (((_BYTE)v13 << (v7 ^ 0x11)) ^ 0xC8)
                         - ((2 * (((_BYTE)v13 << (v7 ^ 0x11)) ^ 0xC8)) & 0x50)
                         + 42;
    *(unsigned char *)(v5 - 163) = ((v13 >> 5) ^ 0xB0) - ((2 * ((v13 >> 5) ^ 0xB0)) & 0x55) + 42;
    *(unsigned char *)(v5 - 162) = ((v13 >> 13) ^ 0x29) - ((2 * ((v13 >> 13) ^ 0x29)) & 0x55) + 42;
    char v11 = 84;
    *(unsigned char *)(v5 - 161) = ((v13 >> 21) ^ 0x11) - ((v13 >> 20) & 0x54) + 42;
    HIDWORD(v15) = v14 ^ 6;
    LODWORD(v15) = v13 ^ 0x20000000;
    *(unsigned char *)(v5 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x55) + 42;
    *(unsigned char *)(v5 - 159) = ((v14 >> 5) ^ 0x9D) - ((2 * ((v14 >> 5) ^ 0x9D)) & 0x55) + 42;
    *(unsigned char *)(v5 - 158) = ((v14 >> 13) ^ 0xBD) - ((2 * ((v14 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v10 = v14 >> 21;
    char v12 = (v14 >> 21) ^ 0x40;
    goto LABEL_5;
  }
  if (v6 == 2)
  {
    char v7 = (a5 - 13) & 0x9E;
    unsigned int v10 = *(_DWORD *)(v5 - 156);
    unsigned int v8 = *(_DWORD *)(v5 - 152);
    *(unsigned char *)(v5 - 164) = ((v7 + 46) ^ (v10 >> 21)) - ((v10 >> 20) & 0x54) + 42;
    *(unsigned char *)(v5 - 163) = ((v10 >> 13) ^ 0xBD) - ((2 * ((v10 >> 13) ^ 0xBD)) & 0x55) + 42;
    *(unsigned char *)(v5 - 162) = ((v10 >> 5) ^ 0x9D) - ((2 * ((v10 >> 5) ^ 0x9D)) & 0x55) + 42;
    HIDWORD(v9) = v10 ^ 6;
    LODWORD(v9) = v8 ^ 0x20000000;
    *(unsigned char *)(v5 - 161) = (v9 >> 29) - ((2 * (v9 >> 29)) & 0x55) + 42;
    *(unsigned char *)(v5 - 160) = ((v8 >> 21) ^ 0x11) - ((v8 >> 20) & 0x54) + 42;
    *(unsigned char *)(v5 - 159) = ((v8 >> 13) ^ 0x29) - ((2 * ((v8 >> 13) ^ 0x29)) & 0x55) + 42;
    *(unsigned char *)(v5 - 158) = ((v8 >> 5) ^ 0xB0) - 2 * (((v8 >> 5) ^ 0xB0) & 0x2B ^ ((v8 & 0x20) != 0)) + 42;
    LOBYTE(v10) = (8 * v8) ^ 0xC8;
    char v11 = 80;
    char v12 = v10;
LABEL_5:
    *(unsigned char *)(v5 - 157) = v12 + ((a5 + v7 - 18) ^ 0xAA) - (v11 & (2 * v10));
  }
  return sub_22B3B5C40();
}

uint64_t sub_22B3AAD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((a3 < 0xFFFFFFC0)
                                                       * ((v3 - 1151744482) & 0x44A63FFE ^ (v3 - 211))) ^ v3)))(a1, a2);
}

uint64_t sub_22B3AAD88@<X0>(int a1@<W8>)
{
  unsigned int v8 = v1 & 0xE0720317;
  *(void *)(v2 - 0xB8308F1D17695ALL) = *(void *)(v4 - 0x19157D3ABD2659DELL)
                                       + (*v3 + a1)
                                       + (((v8 - 251) | 0xC3) ^ 0x1C7);
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((1247 * (*v5 == v6)) ^ v8)))();
}

uint64_t sub_22B3AAE04()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 < v1) ^ (LODWORD(STACK[0x240]) - 1)) & 1)
                                * (((LODWORD(STACK[0x240]) - 2232) ^ 0x2E7) - 648)) ^ (LODWORD(STACK[0x240]) - 1991))))();
}

uint64_t sub_22B3AAE4C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((((v1 ^ 0x9B4) - 182298348) & 0xADDA79F) - 1401) ^ a1) > 7)
                                * (((v1 ^ 0x9B4) - 1695847692) & 0x65149DA7 ^ 0xD9F)) ^ v1 ^ 0x9B4)))();
}

uint64_t sub_22B3AAEB4()
{
  unsigned int v5 = v3 - 937245438;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((26
                                                                * (((937245438 - v1 - v2 + v5 < (v0 ^ 0x96Fu)) ^ (99 * (v0 ^ 0x63))) & 1)) | v0)))(4173321607, 2054175104, 3091215624);
}

void sub_22B3AAF54()
{
}

uint64_t sub_22B3AAF60()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((19 * (v0 > 0x677E56CC)) ^ 0x4A6)))();
}

uint64_t sub_22B3AAFCC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((v2 + 2135) ^ (3 * ((v2 + 1436) ^ 0xBE3)) ^ 4) * (v1 == 805306368)) ^ (v2 + 1436))))();
}

uint64_t sub_22B3AB008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  if (a21 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v21
  }
                                                                                          + 8
                                                                                          * ((959
                                                                                            * (LODWORD(STACK[0x2E8]) != 326024231)) ^ 0x127)))(1401283951, a2, 2893683640, a17, 1801476204, a13);
  if (a21 != 1) {
    JUMPOUT(0x22B3AB170);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(v21
                                                                               + 8
                                                                               * (((LODWORD(STACK[0x2E8]) != 326024231) | (8 * (LODWORD(STACK[0x2E8]) != 326024231))) ^ 0x127)))(1401283951, a13, 2893683640, a17, 1801476204);
}

void sub_22B3AB1A0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v2) = 920561905;
  JUMPOUT(0x22B3986BCLL);
}

void sub_22B3AB1B0()
{
}

uint64_t sub_22B3AB1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 104) = v17;
  *(_DWORD *)(v19 - 112) = v18 + ((~((v19 - 128) | 0xFD794821) + ((v19 - 128) & 0xFD794821)) ^ 0xE891802A) * v14 + 1110;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v18 + 2433)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 128) > (v16 + 1950))
                                              * (25 * (v18 ^ 0x66C) + 2434)) ^ v18)))(v20);
}

uint64_t sub_22B3AB254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, const char *a4@<X3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int8x16x4_t v59 = vld4q_s8(a4);
  uint64_t v42 = (a5 - 3079);
  uint8x16_t v43 = (uint8x16_t)veorq_s8(v59.val[1], v41);
  _Q17 = vmovl_u8(*(uint8x8_t *)v43.i8);
  _Q16 = vmovl_high_u8(v43);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint64_t v52 = (a5 - 833);
  uint64_t v53 = v36 + 16 + v39;
  uint64_t v54 = (_DWORD *)(v40 + 4 * v53);
  int v55 = *(v54 - 8) ^ *(v54 - 3);
  unsigned int v56 = v55 + v38 - ((2 * v55) & 0xB7FDD896);
  LODWORD(v53) = *(v54 - 16) ^ *(_DWORD *)(v40 + 4 * (v53 + v52) - 9256);
  HIDWORD(v57) = v53 ^ v56 ^ v35;
  LODWORD(v57) = v53 ^ ~v56;
  *uint64_t v54 = (v57 >> 31) + v38 - ((2 * (v57 >> 31)) & 0xB7FDD896);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)((v36 + 17 != v36 + 80) ^ v52)))(a1, a2, a3, HIDWORD(v57), v42, v36 + 17, v52, 3086866582, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_22B3AB408()
{
  return v0();
}

void sub_22B3AB410()
{
}

uint64_t sub_22B3AB41C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 - 1913594375;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((252
                                * (v4 - v3 + (((v1 - 2122318321) | 0x514672u) ^ 0xF3DE6CF7) < (unint64_t)(v1 ^ 0xBB7u)
                                                                                              - 449)) ^ v1)))();
}

uint64_t sub_22B3AB494(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x70D52A7E711E504ELL) = (**(unsigned __int8 **)(a2 - 0x48A9B556C05DE579) ^ 0x5FFF7BFF)
                                         + 2 * **(unsigned __int8 **)(a2 - 0x48A9B556C05DE579)
                                         - 9175146;
  return 0;
}

void sub_22B3AB4E0(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v3 - 148) = a3 + 7;
  *(_DWORD *)(v3 - 144) = a3 + 8;
  *(_DWORD *)(v3 - 156) = a3 + 5;
  *(_DWORD *)(v3 - 152) = a3 + 6;
  JUMPOUT(0x22B3AB5F0);
}

uint64_t sub_22B3AB664@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 + v1) = (((2 * v4) ^ 0x4E) - 72) ^ *(unsigned char *)(v5 + v2 + v1);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2728 * (v2 + 1 == v3)) ^ (v4 - 2190))))();
}

uint64_t sub_22B3AB6A8(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((588 * (a1 ^ 0x60F)) ^ 0xABA) - 3572) * (v1 == v2)) ^ a1)))();
}

void sub_22B3AB6E8()
{
}

uint64_t sub_22B3AB758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                                           + 8
                                           * ((((v14 ^ 0xCDC) - 7417 + (((v14 ^ 0xCDC) - 2728) | 0x890) + 426)
                                             * (a12 != 0)) ^ v14 ^ 0xCDC)))(*v12);
}

uint64_t sub_22B3AB7B8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 ^ 0x9E9) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_22B3AB7E8(uint64_t a1, int a2)
{
  int v5 = ((v4 ^ 0xE5E) - 1132) | 0x532;
  BOOL v7 = v2 + 1267934599 > 41012855 || v2 + 1267934599 < (int)((v5 ^ 0x8271C90E) + a2);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((v7 * (v5 + 1065)) ^ v5)))(0x41A953C54C8C2AEDLL);
}

uint64_t sub_22B3AB8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  return (*(uint64_t (**)(void))(v40 + 8 * ((3707 * (v41 < (a39 & 0xE755BFFF) - 795769110)) ^ (v39 + 1618120376))))();
}

void sub_22B3AB934()
{
  char v3 = *(unsigned char *)(v0 + 16);
  int v2 = (unsigned char *)(v0 + 16);
  *(unsigned char *)(v1 - 0x3085AABC84063E90) = *(unsigned char *)(v1 - 0x3085AABC84063EA0) ^ v3;
  *(unsigned char *)(v1 - 0x3085AABC84063E8FLL) = *(unsigned char *)(v1 - 0x3085AABC84063E9FLL) ^ v2[1];
  *(unsigned char *)(v1 - 0x3085AABC84063E8ELL) = *(unsigned char *)(v1 - 0x3085AABC84063E9ELL) ^ v2[2];
  *(unsigned char *)(v1 - 0x3085AABC84063E8DLL) = *(unsigned char *)(v1 - 0x3085AABC84063E9DLL) ^ v2[3];
  *(unsigned char *)(v1 - 0x3085AABC84063E8CLL) = *(unsigned char *)(v1 - 0x3085AABC84063E9CLL) ^ v2[4];
  *(unsigned char *)(v1 - 0x3085AABC84063E8BLL) = *(unsigned char *)(v1 - 0x3085AABC84063E9BLL) ^ v2[5];
  *(unsigned char *)(v1 - 0x3085AABC84063E8ALL) = *(unsigned char *)(v1 - 0x3085AABC84063E9ALL) ^ v2[6];
  *(unsigned char *)(v1 - 0x3085AABC84063E89) = *(unsigned char *)(v1 - 0x3085AABC84063E99) ^ v2[7];
  *(unsigned char *)(v1 - 0x3085AABC84063E88) = *(unsigned char *)(v1 - 0x3085AABC84063E98) ^ v2[8];
  *(unsigned char *)(v1 - 0x3085AABC84063E87) = *(unsigned char *)(v1 - 0x3085AABC84063E97) ^ v2[9];
  *(unsigned char *)(v1 - 0x3085AABC84063E86) = *(unsigned char *)(v1 - 0x3085AABC84063E96) ^ v2[10];
  *(unsigned char *)(v1 - 0x3085AABC84063E85) = *(unsigned char *)(v1 - 0x3085AABC84063E95) ^ v2[11];
  *(unsigned char *)(v1 - 0x3085AABC84063E84) = *(unsigned char *)(v1 - 0x3085AABC84063E94) ^ v2[12];
  *(unsigned char *)(v1 - 0x3085AABC84063E83) = *(unsigned char *)(v1 - 0x3085AABC84063E93) ^ v2[13];
  *(unsigned char *)(v1 - 0x3085AABC84063E82) = *(unsigned char *)(v1 - 0x3085AABC84063E92) ^ v2[14];
  *(unsigned char *)(v1 - 0x3085AABC84063E81) = *(unsigned char *)(v1 - 0x3085AABC84063E91) ^ v2[15];
  JUMPOUT(0x22B3ABD78);
}

uint64_t sub_22B3AC22C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 2012) | 0x80C) - 3729) * (v2 != 1126255904)) ^ v0)))();
}

void sub_22B3AC260()
{
  STACK[0x238] = v0 - 240;
  int v1 = STACK[0x240];
  LODWORD(STACK[0x234]) = LODWORD(STACK[0x240]) + 1115577229;
  LODWORD(STACK[0x230]) = v1 + 1115577141;
  unint64_t v2 = 1292559617
     * ((2 * ((v0 - 152) & 0x8F8FFBBE7EF17E0) - (v0 - 152) + 0x770700441810E81ELL) ^ 0xAE9D3D3CBF438077);
  STACK[0x218] = v2;
  STACK[0x228] = 2056424719 - v2;
  LODWORD(STACK[0x224]) = v1 ^ 0x6CC;
  JUMPOUT(0x22B3AC644);
}

uint64_t sub_22B3AC698(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = !v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((80 * v4) | 0x929)))();
}

uint64_t sub_22B3AC6D8@<X0>(int a1@<W0>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W8>, double a5@<D0>)
{
  *(double *)(v5 + a3) = a5;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a2 != a3) * a4) ^ a1)))();
}

uint64_t sub_22B3AC6FC@<X0>(unsigned int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  BOOL v11 = a1 > v7;
  *(unsigned char *)(*v10 + (a2 + v3 + 365)) = 42;
  unsigned int v12 = v3 + 1 + v4;
  int v13 = v11 ^ (v12 < (v5 ^ 0xA51 ^ (a3 + 628)));
  BOOL v14 = v12 < v6;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v8) ^ v5)))();
}

uint64_t sub_22B3AC760(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void, uint64_t))(v3
                                                    + 8
                                                    * ((27 * (((a2 - 316797240) & 0x12E1FD7E) - 1545655254 == v2)) ^ a2)))(a2 - 17542119 + ((((a2 - 316797240) & 0x12E1FD7E) - 1545655254) ^ v2) + 3103, 461527058);
}

uint64_t sub_22B3AC7C8()
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v0 = (uint64_t)*(&off_26DE9F480
                + ((-121 * (dword_2683EB110 ^ 0x4D ^ qword_2683EB0F0)) ^ byte_22B473700[byte_22B497360[(-121 * (dword_2683EB110 ^ 0x4D ^ qword_2683EB0F0))] ^ 0x2A])
                + 19);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_26DE9F480
                + ((-121 * ((qword_2683EB0F0 - v1) ^ 0x4D)) ^ byte_22B497260[byte_22B48A380[(-121 * ((qword_2683EB0F0 - v1) ^ 0x4D))] ^ 3])
                + 37);
  uint64_t v3 = v1 - (void)&v7 + *(void *)(v2 - 4);
  uint64_t v4 = (2059148423 * v3) ^ 0xD2361EE8B96764DLL;
  uint64_t v5 = 2059148423 * (v3 ^ 0xD2361EE8B96764DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v5) = -121 * ((v5 + *(_DWORD *)(v0 - 4)) ^ 0x4D);
  uint64_t v9 = (char *)*(&off_26DE9F480
               + (*((unsigned char *)off_26DE9FDA0
                                                 + (*((unsigned __int8 *)off_26DEA02C0 + v5 - 8) ^ 0xE6u)
                                                 - 8) ^ v5)
               + 27)
     - 4;
  unsigned int v8 = 1855 - 1990461019 * ((&v8 + 1011570787 - 2 * (&v8 & 0x3C4B5863)) ^ 0x13AFFAEA);
  LOBYTE(v0) = -121 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x4D);
  return (*((uint64_t (**)(unsigned int *))*(&off_26DE9F480
                                                     + ((-121
                                                                                      * ((qword_2683EB0F0
                                                                                        - dword_2683EB110) ^ 0x4D)) ^ byte_22B473700[byte_22B497360[(-121 * ((qword_2683EB0F0 - dword_2683EB110) ^ 0x4D))] ^ 0x4F])
                                                     + 124)
          + (v0 ^ *((unsigned char *)off_26DE9FDA0
                                                 + (*((unsigned __int8 *)off_26DEA02C0 + v0 - 8) ^ 0x45u)
                                                 - 8))
          + 3959))(&v8);
}

void sub_22B3AC9F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v9 - 0x134091E9BEE09534) = *v7;
  *(_DWORD *)(v10 - 0x66E6F27BEAA16EFDLL) = a3;
  *char v7 = 0;
  *(void *)(a6 - 0x19157D3ABD2659D6) = 0x573E0927573E0927;
  *unsigned int v8 = 840667340;
  *(_DWORD *)(a6 - 0x19157D3ABD2659CALL) = (((v6 + 598) ^ 0xAC37727 ^ *(_DWORD *)(a6 - 0x19157D3ABD2659CALL) & 0xFFFFFFFE)
                                          - 1) ^ 0xAC373CD;
  *unsigned int v12 = *v11;
}

uint64_t sub_22B3ACAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  return (*(uint64_t (**)(void))(v30 + 8 * ((825 * (a29 - 1535745202 < (v29 ^ 0x1A5u))) ^ v29)))();
}

void sub_22B3ACB30()
{
}

void sub_22B3ACFB8()
{
}

void sub_22B3ACFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int *a52)
{
  (*(void (**)(void, uint64_t, void))(a4 + 8 * (v52 + 3107)))(*a52, a2, 0);
  JUMPOUT(0x22B3BAFB0);
}

uint64_t sub_22B3ACFC8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((a6 + 50 + a6 + 2199 - 4329) * ((a4 + a3 - 1755557871) < 8)) ^ a6)))();
}

uint64_t sub_22B3AD010@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v6 + v2 + 24) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a1 ^ 0x514) + v2 != 64) * v3) | v4)))();
}

uint64_t sub_22B3AD040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x52C]) = v10;
  unsigned int v8 = *(uint64_t (**)(void))(v11 + 8 * (a8 - 3104));
  STACK[0x258] = (unint64_t)*(&off_26DE9F480 + (a8 ^ 0xD21)) - 8;
  return v8();
}

void sub_22B3AD05C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1990461019 * ((-2 - ((~a1 | 0xDD0DCA84) + (a1 | 0x22F2357B))) ^ 0xF2E9680D);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B3AD154()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((*v0 == 0xB8308F1D17695ALL) ^ (v2 + 120)) & 1) * (v2 - 1660)) ^ v2)))();
}

void sub_22B3AD1AC()
{
}

uint64_t sub_22B3AD208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((1881 * (((((a8 + v20 + v18 - 2276 - 136) | 0x88u) ^ 0xFFFFFFFFFFFFE54) & (*(_DWORD *)(a18 + 24 * (a9 - 789007355) + 8) + (int)a7)) == 2)) ^ v18)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_22B3AD2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unint64_t v18 = *(void *)(a14 + 8);
  memset(&STACK[0x240], 42, 16);
  int v19 = 1990461019 * ((((2 * (v17 - 168)) | 0x4F4EB508) - (v17 - 168) + 1482204540) ^ 0x8843F80D);
  *(_DWORD *)(v17 - 152) = v14 - v19 + 2336;
  *(_DWORD *)(v17 - 148) = v19 ^ 0x41467178;
  STACK[0x2F0] = (unint64_t)&STACK[0x250];
  STACK[0x2F8] = v18;
  STACK[0x2D8] = (unint64_t)&STACK[0x240];
  STACK[0x2E0] = v17 - 188;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 3900)))(v17 - 168);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v17 - 128) == v16 + (v14 ^ 0xD2) - 54) * (v14 ^ 0x37A)) ^ v14)))(v20);
}

uint64_t sub_22B3AD3A8()
{
  int v9 = 1292559617 * ((((2 * (v8 - 168)) | 0xA885D62) - (v8 - 168) + 2059129167) ^ 0x221746D8);
  *(_DWORD *)(v8 - 168) = (v2 + 539918983) ^ v9;
  *(void *)(v8 - 144) = v4;
  *(void *)(v8 - 136) = v3;
  *(void *)(v8 - 160) = v1;
  *(_DWORD *)(v8 - 152) = v9 ^ (v10 - ((2 * v10) & 0xFE775AEE) + 2134617463);
  *(void *)(v8 - 120) = v12;
  *(void *)(v8 - 112) = v6;
  *(void *)(v8 - 104) = v11;
  (*(void (**)(uint64_t))(v7 + 8 * (v2 + 539921405)))(v8 - 168);
  return *(_DWORD *)(v8 - 128) ^ v5;
}

void sub_22B3AD460()
{
}

void sub_22B3AD46C()
{
}

void sub_22B3AD5B8()
{
}

void sub_22B3AD5C8()
{
}

uint64_t sub_22B3AD5D0()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 891)))();
  unint64_t v5 = STACK[0x270];
  LODWORD(STACK[0x36C]) = v0;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((((23 * (v2 ^ 0xC4A)) ^ 0x234) * (v1 ^ 1)) ^ (v2 + 782))))(v4);
}

uint64_t sub_22B3AD62C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((*(_DWORD *)(v1 - 204) - 1245303471) & 0x4A39D9FF ^ 0xF9B)
                                * (*(_DWORD *)(v1 - 192) == *(_DWORD *)(v1 - 200))) ^ *(_DWORD *)(v1 - 204))))();
}

uint64_t sub_22B3AD674@<X0>(int a1@<W2>, int a2@<W7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((38 * (((-1 - a2) & 0x40000000) == (a1 ^ 0xB43) - 3795)) | a1)))();
}

uint64_t sub_22B3AD72C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((5 * (v2 ^ 0xB18) + (v2 ^ 0xAA9)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_22B3AD76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (((((v24 - 952845144) & 0x38CB40E7) + 2222) * ((v26 + v25 + 37) < 4)) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_22B3AD7B8@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unint64_t a52,unint64_t a53)
{
  int v55 = a2 + 706;
  *(void *)(a1 + 56) = 0;
  int v56 = 1866394843 * (((((v53 - 192) | 0x6B37A5CC) ^ 0xFFFFFFFE) - (~(v53 - 192) | 0x94C85A33)) ^ 0x7EDF6DC7);
  STACK[0x1948] = 0x2517DB9E01464535;
  STACK[0x1958] = a52;
  STACK[0x1960] = a53;
  *(_DWORD *)(v53 - 152) = v56 - 1335958181;
  *(_DWORD *)(v53 - 176) = (a2 - 623) ^ v56;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (a2 + 2862)))(v53 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270]
                                            + 8
                                            * (((*(_DWORD *)(v53 - 192) != ((9 * (v55 ^ 0x623)) ^ 0xDBFEE2DC))
                                              * ((v55 ^ 0x623) + 3600)) ^ v55)))(v57);
}

void sub_22B3AD8A4()
{
}

void sub_22B3AD974(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unint64_t v2 = ((unint64_t)(*(_DWORD *)(*(void *)a1 - 0x21AEEC4F795AEEB7) + 205) >> 3) & 0x3F;
  *(unsigned char *)(*(void *)a1 - 0x21AEEC4F795AEEAFLL + v2) = 0x80;
  int v3 = v1 ^ (731811679 * (((a1 | 0xB9F94F1E) - (a1 & 0xB9F94F1E)) ^ 0xF00FE95A));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B3ADB38@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xD86u));
  return v3(v1);
}

uint64_t sub_22B3ADB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((2831
                                * (((((a7 - 71827402) & 0x447FA7F) - 623) & v7) == (((a7 - 1919) | 0x100) ^ 0x142))) ^ a7)))();
}

uint64_t sub_22B3ADBC8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a2 - 1604154648);
  uint64_t v10 = (((v6 + 1325478329) & 0xB0FECEBF) - 1552) & v9;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v7 + v9) ^ *(unsigned char *)(a3 + v10) ^ *(unsigned char *)(v4 + v10) ^ *(unsigned char *)(v10 + v3 + 2) ^ (-51 * v10) ^ 0x2A;
  return (*(uint64_t (**)(void))(v8 + 8 * ((3048 * (a2 - 1 == v5)) ^ v6)))();
}

void sub_22B3ADC50()
{
}

uint64_t sub_22B3ADC58@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((3226
                                * (((v5 + 913) ^ (v3 + 227) ^ (*(unsigned __int8 *)(v4 + 3) - 134))
                                 + v1
                                 + (v2 & (2 * (*(unsigned __int8 *)(v4 + 3) - 134))) == a1)) ^ v5)))();
}

uint64_t sub_22B3ADC9C@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((425
                                * (v3 + a2 + 63 < ((a1 - 2670) | 0x608)
                                                + a2
                                                + (((a1 - 2318) | 0xC55) ^ (v3 - 2291)))) ^ a1)))();
}

void sub_22B3ADCF0()
{
}

uint64_t sub_22B3ADD08(uint64_t a1)
{
  return sub_22B3ADD34(a1, (v1 + 248990334) & 0xF128B0EF ^ 0xCB, 217);
}

uint64_t sub_22B3ADD34(uint64_t a1, int a2, int a3)
{
  uint64_t v10 = (v5 + v4 - v8);
  long long v11 = *(_OWORD *)(v3 + v10 - 15);
  long long v12 = *(_OWORD *)(v3 + v10 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 + v8 == v6) * a3) ^ v7)))();
}

uint64_t sub_22B3ADD74()
{
  BOOL v4 = v0 < 0x275672BC;
  if (v4 == v1 - 0x6E6A2A58545C57B8 < (unint64_t)((v2 - 1019) | 0xC3u) + 659976697) {
    BOOL v4 = v1 - 0x6E6A2A58545C57B8 < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((2552 * v4) ^ v2)))();
}

uint64_t sub_22B3ADDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50
                                                              + 8
                                                              * ((41 * (v49 == (((a8 - 3146) | 2) ^ (v49 - 11)))) ^ (a8 - 457))))(a1, a2, a49);
}

uint64_t sub_22B3ADE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                         + 8
                                                                                         * ((2235
                                                                                           * (v28 - 733245990 < ((v27 - 1012766990) & 0x3C5D8ED9 ^ 0x2A9u))) ^ (v27 - 2876))))(a1, -733245989, 84, a4, 1255, a27);
}

uint64_t sub_22B3ADE94()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((239
                                * (v4 - v2 + v0 - 0x21AEEC4F795AFBCDLL + (unint64_t)((v1 - 620) | 0x40Eu) < ((v1 - 1131) ^ 0x719uLL))) ^ v1)))();
}

uint64_t sub_22B3ADEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int8x16_t v65 = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 40) - 0x43A7F87880AC35C7), (int8x16_t)xmmword_22B497660);
  *(int8x16_t *)(v64 - 128) = veorq_s8(*(int8x16_t *)*(void *)(a1 + 8), (int8x16_t)xmmword_22B497650);
  *(int8x16_t *)(v64 - 112) = v65;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (int)(((*(void *)(v64 - 136) != 0) * (((a5 + 1911748799) & 0x8E0D03FB) - 521)) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_22B3ADF6C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 != ((386 * (v1 ^ 0x48D)) ^ (v2 + 8))) * ((v1 ^ 0x48D) + 53)) ^ v1)))();
}

uint64_t sub_22B3ADFAC(int a1, uint64_t a2, uint64_t a3)
{
  int v7 = *(unsigned __int8 *)(v4 + a3 - 0x603A74C9B7412B1DLL)
     - (*(unsigned __int8 *)(v5 + a3 - 0x603A74C9B7412B1DLL) ^ 0x2A);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((2663 * (((2 * v7) & 0x3FEAF796) + (v7 ^ (a1 + v3 + (a1 ^ 0x955))) == v3 + 2729)) ^ a1)))();
}

uint64_t sub_22B3AE024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v15 = (a7 - 426404893);
  *(unsigned char *)(v13 + v15) = *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v7 + v15) ^ *(unsigned char *)((v15 & 0xF) + v8 + 5) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ (-93 * (v15 & 0xF));
  return (*(uint64_t (**)(void))(v14 + 8 * ((29 * (a7 - 1 == ((2 * v12) ^ 0x326 ^ v11))) ^ (v12 + 168))))();
}

uint64_t sub_22B3AE098()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((11
                                              * (v1 + v0 + 71357713 < (((v3 - 2660) | 0xA08) ^ 0xFFFFFDB7) + v3 - 539)) ^ v3)))(v2);
}

void sub_22B3AE198(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) + 1292559617 * (a1 ^ 0xA7536869);
  __asm { BRAA            X8, X17 }
}

void sub_22B3AE260()
{
}

uint64_t sub_22B3AE2A0()
{
  return sub_22B3AE2BC();
}

uint64_t sub_22B3AE2BC@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, void *a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  BOOL v29 = v15 > v17;
  uint64_t v30 = a13 + 4 * (v26 + 721 + v19);
  unint64_t v31 = (a5 ^ HIDWORD(v24))
      + v23 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (v26 + 721) + v25) ^ v13)
      + (*(_DWORD *)(v30 + v25) ^ v13);
  *(_DWORD *)(v30 + v25) = (v31 + a1 - (((v14 ^ v18) * v20 + v21) & (2 * v31))) ^ v27;
  LODWORD(v31) = a2 + v26 + 721 + 1;
  LODWORD(v30) = v29 ^ ((int)v31 < v28);
  BOOL v32 = (int)v31 < a3;
  if (!v30) {
    BOOL v29 = v32;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((!v29 * v16) ^ v14)))();
}

void sub_22B3AE358(uint64_t a1)
{
  BOOL v3 = (*(unsigned char *)(a1 + 8) ^ (31 * ((a1 - 2 * (a1 & 0x88) - 120) ^ 0xB2))) == 0x17
    || *(void *)(a1 + 16) == 0x44D4288373D8B50DLL;
  int v1 = *(_DWORD *)(a1 + 24) ^ (1328090399 * ((a1 - 2 * (a1 & 0xDA0A088) + 228630664) ^ 0xF273C4B2));
  __asm { BRAA            X10, X17 }
}

void sub_22B3AE43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned __int8 a63)
{
  uint64_t v72 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 + 751)))(16);
  uint64_t v73 = (uint64_t)*(&off_26DE9F480 + v70 - 2816);
  *(void *)(v73 - 4) = v72;
  (*(void (**)(void))(v71 + 8 * (v70 ^ 0x1CCB)))();
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 + 751)))(36);
  int v75 = (uint64_t *)*(&off_26DE9F480 + (v70 ^ 0xC21));
  *int v75 = v74;
  int v76 = v75;
  (*(void (**)(void))(v71 + 8 * (v70 + 821)))();
  int v77 = (_DWORD *)(*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 ^ 0x371)))(11);
  int v78 = (_DWORD **)*(&off_26DE9F480 + (v70 ^ 0xDC3));
  *int v78 = v77;
  (*(void (**)(_DWORD *, uint64_t, uint64_t))(v71 + 8 * (v70 + 821)))(v77 + 1, 109, 7);
  *int v77 = 0;
  **(_DWORD **)(v73 - 4) = 0;
  int v79 = *v78;
  uint64_t v495 = v78;
  uint64_t v80 = *(unsigned char **)(v73 - 4);
  unsigned int v81 = (unsigned char *)*v76;
  v79[4] = -22;
  uint64_t v479 = *(&off_26DE9F480 + v70 - 3265);
  *uint64_t v479 = -105;
  unsigned int v82 = (unsigned __int8 *)*(&off_26DE9F480 + v70 - 3054);
  *unsigned int v82 = -120;
  unsigned int v83 = v82;
  int v490 = v82;
  v81[4] = 88;
  v80[4] = 102;
  v81[25] = 39;
  v79[9] = 51;
  v80[5] = 119;
  int v84 = (unsigned __int8 *)*(&off_26DE9F480 + v70 - 3032);
  *int v84 = 74;
  unsigned int v85 = v84;
  uint64_t v488 = v84;
  v79[6] = 25;
  v80[15] = 1;
  int v86 = (unsigned __int8 *)*(&off_26DE9F480 + (v70 ^ 0xC73));
  *int v86 = 25;
  unsigned int v87 = v86;
  uint64_t v483 = v86;
  int v88 = *(&off_26DE9F480 + v70 - 2975);
  *int v88 = 13;
  int v89 = *(&off_26DE9F480 + (v70 ^ 0xC1C));
  *int v89 = -119;
  uint64_t v485 = v89;
  unsigned int v90 = *(&off_26DE9F480 + v70 - 3186);
  *unsigned int v90 = 6;
  unsigned int v494 = v90;
  v81[9] = -72;
  unsigned int v91 = (unsigned __int8 *)*(&off_26DE9F480 + (v70 ^ 0xDAC));
  *unsigned int v91 = 94;
  int v92 = v91;
  int v489 = v91;
  v81[27] = 83;
  v478 = *(&off_26DE9F480 + (int)(v70 & 0xCED3E38D));
  unsigned char *v478 = -72;
  v79[10] = 68;
  v79[7] = -77;
  v81[2] = 99;
  int v93 = *(&off_26DE9F480 + (v70 ^ 0xD74));
  *int v93 = -62;
  uint64_t v493 = v93;
  v80[8] = -52;
  v80[6] = 47;
  v79[5] = 54;
  unsigned int v94 = *(&off_26DE9F480 + (v70 ^ 0xC36));
  *unsigned int v94 = -86;
  int v95 = (unsigned __int8 *)*(&off_26DE9F480 + (v70 ^ 0xD7F));
  *int v95 = 83;
  int v96 = v95;
  int v484 = v95;
  unsigned int v97 = *(&off_26DE9F480 + (v70 ^ 0xD9E));
  *unsigned int v97 = 87;
  uint64_t v492 = v97;
  v79[8] = 73;
  v81[32] = 34;
  unsigned int v499 = *(&off_26DE9F480 + (v70 ^ 0xD21));
  *unsigned int v499 = 29;
  v81[20] = -15;
  int v98 = *(&off_26DE9F480 + (v70 ^ 0xCD4));
  *int v98 = 35;
  int v99 = *(&off_26DE9F480 + v70 - 2897);
  *int v99 = 12;
  uint64_t v486 = v98;
  int v487 = v99;
  v80[7] = 59;
  v80[13] = -36;
  int v100 = *(&off_26DE9F480 + (v70 ^ 0xC26));
  *int v100 = -99;
  uint64_t v491 = v100;
  v81[33] = -11;
  v81[28] = 17;
  int v101 = *(unsigned char **)(v73 - 4);
  unsigned int v102 = (unsigned char *)*v76;
  *unsigned int v102 = 36;
  uint64_t v498 = *(&off_26DE9F480 + (v70 ^ 0xD02));
  *uint64_t v498 = 5;
  v102[30] = -98;
  v101[10] = -14;
  v102[35] = 66;
  int v505 = *(&off_26DE9F480 + v70 - 2955);
  uint64_t v506 = v73;
  *int v505 = 21;
  v102[3] = 113;
  v102[34] = 69;
  int v103 = *(&off_26DE9F480 + v70 - 3100);
  *int v103 = 55;
  uint64_t v496 = *(&off_26DE9F480 + (v70 ^ 0xCCA));
  *uint64_t v496 = -77;
  uint64_t v503 = *(&off_26DE9F480 + (v70 ^ 0xCF2));
  unsigned int v504 = v103;
  *uint64_t v503 = -68;
  v102[8] = -33;
  v102[10] = -85;
  v101[11] = 13;
  uint64_t v497 = *(&off_26DE9F480 + v70 - 3015);
  *uint64_t v497 = -61;
  v102[26] = 120;
  v102[1] = 34;
  int v501 = *(&off_26DE9F480 + (v70 ^ 0xC30));
  *int v501 = -22;
  v102[5] = -17;
  v102[24] = 77;
  v101[9] = -72;
  v101[14] = -86;
  v101[12] = -105;
  *((_WORD *)v102 + 9) = -3735;
  v102[23] = 72;
  v102[6] = 79;
  int v502 = *(&off_26DE9F480 + (v70 & 0x53680CE));
  *int v502 = 46;
  *((_WORD *)v102 + 6) = -23311;
  v102[29] = -39;
  *(_WORD *)(v102 + 21) = -30329;
  v102[11] = 32;
  v102[7] = 32;
  *(_WORD *)(v102 + 15) = -29455;
  v102[31] = -105;
  v102[14] = 58;
  v102[17] = 73;
  uint64_t v104 = *v85 ^ 0x1ALL | ((*v93 ^ 0xD8) << 8);
  unsigned int v105 = *(unsigned __int8 **)(v73 - 4);
  unsigned int v106 = *v78;
  unint64_t v107 = ((unint64_t)v105[4] << 24) | ((unint64_t)*((unsigned __int8 *)*v78 + 8) << 16) | v104 | ((unint64_t)(*v92 ^ 0xD8u) << 32) | ((unint64_t)(*v97 ^ 0xD8u) << 40);
  unint64_t v108 = ((unint64_t)*((unsigned __int8 *)*v78 + 7) << 56) | ((unint64_t)(*v90 ^ 0xD8u) << 48);
  unsigned int v109 = (unsigned char *)*v76;
  LODWORD(v102) = (*(unsigned __int8 *)(*v76 + 20) >> 3) | (32 * *(unsigned __int8 *)(*v76 + 20));
  unint64_t v110 = *v99 ^ 0xD8 | ((unint64_t)v105[5] << 24) | ((unint64_t)*(unsigned __int8 *)(*v76 + 2) << 16) | ((unint64_t)v105[6] << 32) | ((*v83 ^ 0xD8) << 8) | ((unint64_t)*(unsigned __int8 *)(*v76 + 27) << 40) | ((unint64_t)*(unsigned __int8 *)(*v76 + 28) << 56);
  uint64_t v111 = (uint64_t)*(&off_26DE9F480 + (v70 ^ 0xDFC));
  uint64_t v112 = v111 + 537;
  uint64_t v113 = v111;
  char v114 = *(unsigned char *)(v111 + 808 + (((*(unsigned char *)(*v76 + 9) >> 1) | (*(unsigned char *)(*v76 + 9) << 7)) ^ 0xFDLL));
  uint64_t v480 = v111 + 808;
  unint64_t v115 = ((-87
                          * ((-103 * *(unsigned char *)(v111 + 537 + ((*((unsigned char *)*v78 + 5) - 58) ^ 0x52))) ^ 0xE4)) | ((*v100 ^ 0x1ALL) << 8) | ((*v89 ^ 0x1ALL) << 16)) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(((v114 + 88) ^ 0x97 ^ ((4 * v114) | 0xE8)) - 108) << 24) | ((unint64_t)*(unsigned __int8 *)(*v76 + 33) << 32);
  unint64_t v116 = ((unint64_t)*((unsigned __int8 *)*v78 + 6) << 40) | ((unint64_t)(*v94 ^ 0x1Au) << 56) | ((unint64_t)(*v88 ^ 0x1Au) << 48);
  int v117 = *v98;
  HIDWORD(v118) = v117 ^ 0x18;
  LODWORD(v118) = (v117 ^ 0xC0) << 24;
  uint64_t v482 = v111 + 265;
  LODWORD(v99) = 35
               * (*(unsigned __int8 *)(v111 + 265 + ((v118 >> 29) ^ 0x4CLL)) ^ (((v118 >> 29) ^ 0x68)
                                                                                               + 6) ^ 0x3A);
  unint64_t v119 = ((unint64_t)(35
                                            * (*(unsigned char *)(v111 + 265 + ((v118 >> 29) ^ 0x4CLL)) ^ (((v118 >> 29) ^ 0x68) + 6) ^ 0x3A)) << 8) ^ 0x7FA3FF5FB7EBCEFDLL;
  unint64_t v120 = ((unint64_t)*(unsigned __int8 *)(*v76 + 32) << 16) | ((*v87 ^ 0x1ALL) << 24) | ((unint64_t)v105[13] << 32) | ((unint64_t)v105[8] << 40) | ((unint64_t)(*v96 ^ 0x1Au) << 48);
  unint64_t v121 = (unint64_t)*(unsigned __int8 *)(*v76 + 25) << 32;
  HIDWORD(v118) = *v478;
  LODWORD(v118) = (HIDWORD(v118) ^ 0xD8) << 24;
  int v481 = *v106;
  uint64_t v122 = ((v481 << ((v70 + 102) ^ 0x34)) & 0xDFED7BFE) + (v481 ^ 0x6FF6BDFF) - 1878441471;
  unint64_t v123 = v108 ^ v107;
  uint64_t v124 = (uint64_t)*(&off_26DE9F480 + (v70 ^ 0xDFC));
  unsigned __int8 v125 = v102 ^ 0x42 ^ *(unsigned char *)(v113 + (v102 ^ 0x64));
  unint64_t v126 = v116 ^ v115;
  unint64_t v127 = ((v99 << 9) & 0x19C00) - 0x7FA3FF5FB7EBCEFDLL + v119;
  uint64_t v128 = (*v499 ^ 0xD8) - ((2 * (*v499 ^ 0xD8u)) & 0x6ALL) - 0x2298EFD4471FECCBLL;
  unint64_t v129 = (v127 - (v127 | v128 ^ 0xDD67102BB8E01335)) ^ ((v128 ^ 0x2298EFD4471FECCALL) + 1);
  LOBYTE(v80) = -87 * ((-103 * *(unsigned char *)(v112 + (((*v479 ^ 0xD8) - 58) ^ 0x52))) ^ 0xE4);
  LOBYTE(v112) = *(unsigned char *)(v480 + ((v118 >> 25) ^ 0xFDLL));
  unint64_t v130 = v120 ^ ((unint64_t)v105[7] << 56) ^ 0x91504119B61D4B4CLL ^ (((v129
                                                                            - ((2 * v129) & 0xBACE205771C0266ALL)
                                                                            - 0x2298EFD4471FECCBLL) ^ v128)
                                                                          + v127);
  unint64_t v131 = (v121 & 0x3700000000 | ((unint64_t)v105[15] << 16) | *((unsigned __int8 *)v106 + 4) | ((unint64_t)*((unsigned __int8 *)v106 + 9) << 8) | ((unint64_t)*(unsigned __int8 *)(*v76 + 4) << 24) | v121 & 0xC800000000 | ((unint64_t)*((unsigned __int8 *)v106 + 10) << 56)) ^ a63 ^ ((unint64_t)v80 << 48) ^ ((unint64_t)a64 << 8) ^ ((unint64_t)a65 << 16) ^ (v130 - ((2 * v130) & 0xDD8FC0888D6E3C6ALL) - 0x11381FBBB948E1CBLL) ^ ((unint64_t)(((v112 + 88) ^ 0x97 ^ ((4 * v112) | 0xE8)) - 108) << 40) ^ ((unint64_t)a66 << 24) ^ ((unint64_t)a67 << 32) ^ ((unint64_t)a68 << 40) ^ ((unint64_t)a69 << 48) ^ ((unint64_t)a70 << 56);
  uint64_t v132 = v130 ^ v126 ^ 0x6EFEBB0551495301;
  unint64_t v133 = ((~(((v122 << 32) ^ 0xCFFE50130ABED0FLL) & 0xF11145A200B4C0ALL) | 0xACFC91E4799261B4)
        + (((v122 << 32) ^ 0xCFFE50130ABED0FLL) & 0xC10104020024000 | 0x53036E1B866D9E4BLL)) ^ ((v122 << 32) ^ 0xCFFE50130ABED0FLL) & 0xF0EEFBA520024000 ^ 0x5F126A1BA66FDE4ALL;
  unint64_t v134 = ((2 * v133) | 0xC77F1D0E2D8E5652) - v133 - 0x63BF8E8716C72B29;
  uint64_t v136 = ((v122 << 32) & 0x100000000000 ^ 0x7DF7FEF7C7D7EFBALL) + 2 * ((v122 << 32) & 0x100000000000);
  uint64_t v137 = v136 - 0x7DF7FEF7C7D7EFBALL;
  uint64_t v138 = v136 - 0x110120B084068180;
  unint64_t v139 = 0xEAEEDD3F0BA95DF4 - v136;
  if ((v123 & v137) == 0) {
    unint64_t v139 = v138;
  }
  unint64_t v140 = ((2 * (v123 - 0x6CF6DE4743D16E3ALL + v139)) & 0xFFEE8FFF6DFFFFBELL)
       + ((v123 - 0x6CF6DE4743D16E3ALL + v139) ^ 0x7FF747FFB6FFFFDFLL)
       - 0x7FF747FFB6FFFFDFLL;
  unint64_t v135 = ((2 * ((v134 ^ 0x9CAE9079C93398DCLL) - 0x46ECF8B7EB0746F2)) & 0x8DD9F16E00000002)
       + (((v134 ^ 0x9CAE9079C93398DCLL) - 0x46ECF8B7EB0746F2) ^ 0x46ECF8B7EB0746F3);
  unint64_t v141 = (v134 ^ 0x19B83364A2155FFLL ^ (((v140 + (v134 ^ 0x9CAE9079C93398DCLL ^ v140) + 1) ^ v135)
                                      - ((2 * ((v140 + (v134 ^ 0x9CAE9079C93398DCLL ^ v140) + 1) ^ v135)) & 0xC595D960F9DA65B8)
                                      + 0x62CAECB07CED32DCLL))
       + v140;
  *((void *)&v142 + 1) = v110 ^ ((unint64_t)v125 << 48);
  *(void *)&long long v142 = v110;
  *(void *)&long long v142 = __ROR8__((v142 >> 60) ^ 0x37251EA7F7A12049, 4);
  uint64_t v143 = (v142 - ((2 * v142) & 0xC1E85D98630BE8CLL) - 0x79F0BD133CE7A0BALL) ^ v141;
  unint64_t v144 = (v132 ^ 0xF7E0E2C25F70C30FLL) & (v126 ^ 0x66E1A638F1C66FF1) ^ v143 ^ 0x296BB467BB53F2BBLL;
  unint64_t v145 = v144 ^ v126 ^ 0x6EFEBB0551495301 ^ (((v131 ^ 0x647C9B431A5FB75BLL) & (v132 ^ 0x81F1D3DA08F3CF0))
                                             - ((2 * ((v131 ^ 0x647C9B431A5FB75BLL) & (v132 ^ 0x81F1D3DA08F3CF0))) & 0xF7BE32E543E7CB14)
                                             + 0x7BDF1972A1F3E58ALL);
  uint64_t v146 = (v145 >> 17) ^ 0x1ED00CC26A8BLL;
  uint64_t v147 = v146 & 0x138A6988FB18 ^ v145 & 0x62AB138A6988FB18;
  unint64_t v148 = (v147 | v146 & 0x6C75967704E7 ^ v145 & 0x9D54EC75967704E7) ^ 0x3DA01984D5164152;
  uint64_t v149 = (v148 + ((v145 << 54) ^ 0x5480000000000000) - 2 * (v148 & ((v145 << 54) ^ 0x5480000000000000))) ^ 0x39420D519E2F1D86;
  unint64_t v150 = ((v149 & 0x33766354EB1AD163) - ((2 * v149) & 0x248820992242240) + 0xD2D458ED97737B4) ^ v149 & 0xCC899CAB14652E9CLL;
  unint64_t v151 = (v150 & 0x7EBD713DA819A4C3 ^ 0x42903121A8008041) + (v150 & 0x81428EC257E65B3CLL ^ 0x4204C253640235) - 1;
  uint64_t v152 = ((v147 & 0x800000 | (v145 << 47)) ^ 0x20A9000000000000)
       - ((2 * ((v147 & 0x800000 | (v145 << 47)) ^ 0x20A9000000000000)) & 0x6352000001000000)
       - 0x4E56C0F4717BD593;
  unint64_t v153 = (v152 ^ 0x38EBBDC8CD477DD5 ^ v151) + (v152 ^ 0xB1A93F0B8E842A6CLL);
  unint64_t v154 = v151 ^ 0x69B4845722F5791 ^ ((v151 ^ 0x894282C343C357B8)
                                     - ((2 * (v151 ^ 0x894282C343C357B8) + 2) & 0xE04C6AF39C27FFACLL)
                                     + 0x70263579CE13FFD7);
  uint64_t v155 = 0x3FB4E7A118316292 - (v153 & 0x40000 | 0x1FDA73D08C18B149);
  if ((v154 & v153 & 0x40000) == 0) {
    uint64_t v155 = v153 & 0x40000 | 0x1FDA73D08C18B149;
  }
  unint64_t v156 = (((v154 - 0x1FDA73D08C18B149 + v155) ^ v153 & 0xFFFFFFFFFFFBFFFFLL) + (v152 ^ 0xB1A93F0B8E842A6DLL)) ^ (v145 >> 10);
  unint64_t v157 = (v131 ^ 0x9B8364BCE5A048A4) & (v141 ^ 0x5E8CC683F9A3721DLL) ^ v132;
  *((void *)&v158 + 1) = v157 ^ 0xF70C30F;
  *(void *)&long long v158 = v157 ^ 0xF7E0E2C250000000;
  *(void *)&long long v158 = __ROR8__((v158 >> 28) ^ 0xD4E853D3C589B253, 36);
  unint64_t v159 = v158 ^ ((unint64_t)v158 >> 7) ^ ((void)v158 << 23) ^ (((unint64_t)v158 >> 41) | ((void)v158 << 57));
  unint64_t v160 = (v126 ^ 0x28E2F258489A5D8FLL) & (v143 ^ 0xD6944B9844AC0D44) ^ v143 & 0xB1FCAB9F46A3CD81;
  unint64_t v161 = (((1439044986 - ((2 * v131) ^ 0x3706C979CB409149)) & 0xFFFFFFFFAA39EA86)
        + (((v131 ^ 0x647C9B431A5FB75BLL) + 719522493) ^ 0xFFFFFFFFD51CF543)) ^ (v143 ^ 0x296BB467BB53F2BBLL) & (v141 ^ 0xA173397C065C8DE2);
  unint64_t v162 = v161 ^ ((v160 ^ 0x84019004800100 | v141 ^ 0x4684C0800882420DLL) & 0x67C5E1B40CC643CFLL ^ (v160 ^ 0x84019004800100) & (v141 & 0x67C5E1B40CC643CFLL ^ 0x4684C0800882420DLL) | (v160 ^ v141) & 0x983A1E4BF339BC30);
  uint64_t v163 = v162 ^ (v162 >> 39) ^ (v162 >> 61) ^ (8 * v162) ^ (v162 << 25);
  unint64_t v164 = (v161 - ((2 * v161) & 0x38832D426A49C934) + 0x1C4196A13524E49ALL) ^ v157;
  unint64_t v165 = (v164 >> 28) ^ (v164 >> 19);
  uint64_t v166 = (v165 | (v164 << 45)) ^ (v164 << 36) ^ 0x178B1AAD70EE3277;
  uint64_t v167 = v159 ^ v164 ^ (v166 - 2 * (v166 & 0x7CAA6F0DF010401DLL ^ v165 & 8) - 0x35590F20FEFBFEBLL);
  unint64_t v168 = v156 ^ v159 ^ 0x215F8EEF5010CF5;
  *(void *)&long long v158 = __ROR8__((v167 ^ 0x9A8DA46F78653E13) & (v163 ^ 0xF9E3442FBB433865), 34);
  unint64_t v169 = v158 ^ (v168 << 30) ^ 0x8E55376900000000;
  unint64_t v170 = (((v168 >> 34) ^ v158) << 34) ^ 0xD45A650400000000;
  unint64_t v171 = (((v169 >> 30) ^ 0xFFFFFFFEB34FD16DLL)
        + ((v170 - ((2 * v170) & 0xA7FC75B800000000) + 0x53FE3ADEDD8964E2) ^ 0xAC01C52122769B1DLL)
        + ((((v170 - ((2 * v170) & 0xA7FC75B800000000) + 0x53FE3ADEDD8964E2) ^ 0x53FE3ADEDD8964E2) & 0xFFFFFFFC00000000 | (v169 >> 30)) ^ 0x14CB02E92)
        + 2) ^ __ROR8__((((v170 - ((2 * v170) & 0xA7FC75B800000000) + 0x53FE3ADEDD8964E2) >> 8) ^ 0x53FE3ADEDD8964 | __ROR8__(v169 >> 30, 8) ^ 0x92000000014CB02ELL) ^ 0xCC87159A059E9AEDLL, 56);
  LODWORD(v157) = (2 * (v171 ^ 0x2F2B2ABF) + 2) & 0x48B3CE72;
  int v172 = (v171 ^ 0x2F2B2ABF) - v157;
  LODWORD(v170) = (v172 - 1537611974) ^ ((v171 ^ 0x2F2B2ABF) - 1537611974 - v157);
  unint64_t v173 = v171 ^ 0xAAAFAB73913B9D0DLL ^ (v171 << 23) ^ (((v171 >> 7) ^ (v171 >> 41) ^ 0x16C595837FABFFCLL)
                                                     - ((2 * ((v171 >> 7) ^ (v171 >> 41) ^ 0x16C595837FABFFCLL)) & 0x1060ED083DE909ALL)
                                                     + 0x1C83076841EF484DLL) ^ ((unint64_t)((v170
                                                                                                  - ((2 * v170) & 0x1A)
                                                                                                  + 77) ^ v171 ^ 0x913B9D0D) << 57);
  *((void *)&v158 + 1) = v144 ^ 3;
  *(void *)&long long v158 = v144 ^ 0x92CFC162FD513140;
  uint64_t v174 = ((v158 >> 6) - ((2 * (v158 >> 6)) & 0xB357EB5D77B3AC26) - 0x26540A51442629EDLL) ^ 0x2048B181009AEE76;
  *((void *)&v158 + 1) = ~v144;
  *(void *)&long long v158 = v144 ^ 0x92CFC162FD513142;
  uint64_t v175 = v144 ^ 0x42ACCD9C9EB8BA00 ^ ((v158 >> 1) - ((2 * (v158 >> 1)) & 0xA0C619FCC7D31686) - 0x2F9CF3019C1674BDLL);
  uint64_t v176 = (v174 ^ v163) + v175 - 2 * ((v174 ^ v163) & v175);
  unint64_t v177 = (v156 ^ 0xFFF097F99ECABA6FLL) & (v159 ^ 0x7D41FF092E1EF79ALL);
  unint64_t v178 = ((v156 ^ v159 ^ 0x82B168F0B0D44DF5) & (v167 ^ 0x65725B90879AC1ECLL))
       + (v156 ^ 0x280CD9DBC7D9526)
       - 2 * ((v156 ^ v159 ^ 0x82B168F0B0D44DF5) & (v167 ^ 0x65725B90879AC1ECLL) & (v156 ^ 0x280CD9DBC7D9526));
  unint64_t v179 = v176 - ((2 * v176) & 0xA3B9B7340C2C991ELL) + 0x51DCDB9A06164C8FLL;
  unint64_t v180 = v177 ^ v179;
  unint64_t v181 = v178 ^ v180;
  *((void *)&v158 + 1) = v181 ^ 0x8F;
  *(void *)&long long v158 = v181 ^ 0x51DCDB9A06164C00;
  uint64_t v182 = (v158 >> 10) ^ (v181 << 47) ^ 0x2647800000000000;
  uint64_t v183 = (v181 >> 17) ^ 0x28EE6DCD030BLL;
  uint64_t v184 = v181 ^ 0x7EF93A0269E63630 ^ (v182 - ((2 * v182) & 0x5E4BC330DFE0F57ELL) + 0x2F25E1986FF07ABFLL);
  uint64_t v185 = v184
       + v183
       - 2 * (v184 & v183)
       - ((2 * (v184 + v183 - 2 * (v184 & v183))) & 0x40E0A7ACB83F454)
       - 0x7DF8FAC29A3E05D6;
  unint64_t v186 = v180 ^ 0x9B94D1F0A1E63F0 ^ (((v180 << 58) ^ 0xD400000000000000)
                                     - ((2 * ((v180 << 58) ^ 0xD400000000000000)) & 0x6800000000000000)
                                     + 0x3720E11AA557EF45);
  unint64_t v187 = ((v180 >> 6) | ((unint64_t)~v180 << 63)) ^ 0xFA66B016BD2632 ^ (v186 + ((v180 >> 1) ^ 0x1F4CD602D7A4C65ALL) - 2 * (v186 & ((v180 >> 1) ^ 0x1F4CD602D7A4C65ALL)));
  unint64_t v188 = (v156 ^ 0xF680661354590) & (v179 ^ 0xAE232465F9E9B370) ^ v163;
  uint64_t v189 = ((v188 ^ 0x515B7A86A3E9694CLL) + 0x5747C156E755AED7) ^ ((v188 ^ 0x61CBBD044BCC79ALL) + 1);
  unint64_t v190 = (((v179 ^ 0x51DCDB9A06164C8FLL) & (v163 ^ 0x61CBBD044BCC79ALL))
        - ((2 * ((v179 ^ 0x51DCDB9A06164C8FLL) & (v163 ^ 0x61CBBD044BCC79ALL))) & 0x91C6DAFB559692A0)
        - 0x371C92825534B6B0) ^ v167;
  unint64_t v191 = ((v188 ^ 0xC8E8FD86ADEC1E33 ^ (v189 - ((2 * v189) & 0x621773522D5E4CACLL) + 0x310BB9A916AF2656))
        + 0x5747C156E755AED6) ^ v190;
  unint64_t v192 = ((8 * v191) & 0x10000 ^ 0xF7FD6EFEFDC7FE68) + 2 * ((8 * v191) & 0x10000);
  uint64_t v193 = (v191 >> 39) ^ 0x15B226D;
  if (((v192 + 3670424) & v193) != 0) {
    unint64_t v194 = 0x3F51B52BBB8FE8C8 - v192;
  }
  else {
    unint64_t v194 = v192 + 0x4F56D72DBFFFEBF8;
  }
  unint64_t v195 = (8 * v191) & 0xFFFFFFFFFFFEFFFFLL ^ v191 ^ ((v191 >> 61) | (v191 << 25)) ^ (v193 - 0x4754462CBDC7EA60 + v194);
  unint64_t v196 = v195 ^ 0x748E02078D1867F6 ^ (v187 - ((2 * v187) & 0xDF984125658B555ELL) + 0x6FCC2092B2C5AAAFLL);
  unint64_t v197 = (v173 ^ 0xDE86A6AA0000000) & (v185 ^ 0x7DF8FAC29A3E05D5) ^ v196;
  unint64_t v198 = v171 ^ v190;
  unint64_t v199 = (v198 >> 19) ^ (v198 << 36) ^ ((v198 >> 28) | (v198 << 45));
  unint64_t v200 = ((v199 ^ 0xDBAF901DEAA5D003)
        - 2 * ((v199 ^ 0xDBAF901DEAA5D003) & 0x3342557E2BB3681DLL ^ v199 & 4)
        + 0x3342557E2BB36819) ^ v198 ^ v173;
  unint64_t v201 = (((v195 ^ 0xE4BDDD6AC02232A6) & v187)
        - ((2 * ((v195 ^ 0xE4BDDD6AC02232A6) & v187)) & 0xB9482ADEE1596282)
        - 0x235BEA908F534EBFLL) ^ 0xCFF78381863F9402 ^ v200;
  unint64_t v202 = (((v185 ^ 0x8207053D65C1FA2ALL) & ~v196)
        - ((2 * ((v185 ^ 0x8207053D65C1FA2ALL) & ~v196)) & 0xDF984125658B555ELL)
        + 0x6FCC2092B2C5AAAFLL) ^ v195 ^ 0x748E02078D1867F6 ^ v201;
  unint64_t v203 = v202 ^ (v202 >> 39) ^ (((v202 << 25) ^ (8 * v202)) & 0xFFFFFFFFFFFFFFF8 | (v202 >> 61));
  unint64_t v204 = v197 ^ (v197 >> 1) ^ ((v197 >> 6) | (v197 << 63));
  uint64_t v205 = v204 ^ 0x6BA60994511F8FB8;
  v204 ^= 0x441A4831DAD9C6EAuLL;
  uint64_t v206 = v203 ^ 0x2FBC41A58BC64952;
  uint64_t v207 = (v204 + (v205 ^ v203) + 1) ^ v203 ^ ((v203 ^ 0x2FBC41A58BC64952) + 1);
  unint64_t v208 = (v207 ^ 0xD043BE5A7439B6ADLL) + v204;
  unint64_t v209 = v173 ^ v185;
  unint64_t v210 = (v200 ^ 0xECAC6911096CDABCLL) & (v195 ^ 0x1B4222953FDDCD59) ^ v209;
  uint64_t v211 = (v210 ^ 0xA978244F95DFD13ELL)
       - ((2 * (v210 ^ 0xA978244F95DFD13ELL) + 0x2237EB43D839382CLL) & 0x21EF01F83561D5C6)
       - 0x3DEC8961F9327907;
  if ((v210 ^ 0xA978244F95DFD13ELL) < 0xCEE40A5E13E363EALL) {
    uint64_t v211 = v210 ^ 0x398FA4B38F6F3BDDLL;
  }
  unint64_t v212 = 0x5E138AA209538909;
  if ((v210 ^ 0xA978244F95DFD13ELL) < 0xCEE40A5E13E363EALL) {
    unint64_t v212 = 0x90F780FC1AB0EAE3;
  }
  if (v211 == 0x90F780FC1AB0EAE3) {
    unint64_t v213 = v212;
  }
  else {
    unint64_t v213 = v210 ^ 0x398FA4B38F6F3BDDLL;
  }
  unint64_t v214 = v210 ^ 0x398FA4B38F6F3BDDLL ^ (v210 >> 7) ^ (v213 << 23) ^ (v213 >> 41) ^ (((v213 << 57) ^ 0xC600000000000000)
                                                                                  - ((v213 << 58) & 0x2000000000000000)
                                                                                  - 0x6F087F03E54F151DLL);
  unint64_t v215 = v209 & 0x794CC6CC70C634B9 ^ v185 ^ (v200 ^ 0x6A1F5022865511FALL) & (v209 ^ 0x701090A83A3E05D5) ^ 0xF20785B555C7FEBBLL;
  unint64_t v216 = ((2 * (v215 + (v197 & 0x800000))) & 0xDBBFFEE5FEFB36F6) + ((v215 + (v197 & 0x800000)) ^ 0xEDDFFF72FF7D9B7BLL);
  BOOL v217 = (v215 & v197 & 0x800000) == 0;
  unint64_t v218 = ((((((v197 & 0x800000) >> 23) & 1) << 25) | 0x5EF8A7881000F08) ^ 0xFA1075877EFFF0F7)
       + ((2 * v197) & 0x1000000)
       + 0x1220008D00826486
       + v216;
  unint64_t v219 = (v218 ^ 0xDFDBBFF6EFFBB87FLL) + 0x6DFFFE19FF7DD7BCLL + ((2 * v218) & 0xBFB77FEDDFF770FELL);
  if (v217) {
    unint64_t v219 = v216 + 0x5FFBBE9DEFFBF4C0;
  }
  unint64_t v220 = (v219 - 0x4DDBBE10EF79903BLL) ^ v197 & 0xFFFFFFFFFF7FFFFFLL;
  uint64_t v221 = (v220 >> 10) ^ 0x1CDC2B1A140C32;
  uint64_t v222 = 0x334D02ED96484ELL - (v221 & 0x10 | 0x19A68176CB2427);
  if ((v221 & 0x10 & ~v220) == 0) {
    uint64_t v222 = v221 & 0x10 | 0x19A68176CB2427;
  }
  *((void *)&v223 + 1) = v220 ^ 0xCB36;
  *(void *)&long long v223 = v220 ^ 0x7370AC6850300000;
  uint64_t v224 = (v223 >> 17) ^ (v220 << 54) ^ v221 & 0xFFFFFFFFFFFFFFEFLL ^ ((v220 ^ 0x7370AC685030CB36)
                                                                    - 0x19A68176CB2427
                                                                    + v222);
  uint64_t v225 = (v224 ^ 0x327FFFFFFFFFFFFFLL) & (v214 ^ 0x7F5FA83DEEE3C462);
  unint64_t v226 = (v201 - ((2 * v201) & 0xB9450E5004F40D22) - 0x235D78D7FD85F96FLL) ^ v210;
  unint64_t v227 = (v226 >> 28) ^ ((v226 ^ 0x534DE87FC7BBFCBBLL) >> 19) ^ ((v226 ^ 0x534DE87FC7BBFCBBLL) << 36) ^ ((v226 ^ 0x534DE87FC7BBFCBBLL) << 45) ^ 0x2A792D634CB9B0D8;
  uint64_t v228 = (v227 - ((2 * v227) & 0x3AB251400BB94E58) + 0x1D5928A005DCA72CLL) ^ v226 ^ v214;
  unint64_t v229 = v224 ^ 0xF7CB87B84C7510FALL ^ v214;
  unint64_t v230 = v208 ^ (v197 << 58);
  uint64_t v231 = v225 ^ v230;
  unint64_t v232 = v225 ^ v230 ^ 0xA82267E28AE9F02ELL ^ (((v229 ^ 0xBAEBD07A5D692B67) & (v228 ^ 0x5F4FA9BB392F19FFLL))
                                             - ((2 * ((v229 ^ 0xBAEBD07A5D692B67) & (v228 ^ 0x5F4FA9BB392F19FFLL))) & 0x3044CFC515D3E05CLL)
                                             - 0x67DD981D75160FD2);
  unint64_t v233 = (v232 - ((2 * v232) & 0x74970F7098EA21F4) + 0x3A4B87B84C7510FALL) ^ v224 ^ 0xF7CB87B84C7510FALL;
  *((void *)&v223 + 1) = v233 ^ 0x11C;
  *(void *)&long long v223 = v233 ^ 0x44C9D571A5C4A400;
  uint64_t v234 = v233 ^ __ROR8__(v233, 17) ^ (v223 >> 10);
  *((void *)&v223 + 1) = v229 ^ 0x296D498;
  *(void *)&long long v223 = v229 ^ 0x45142F85A0000000;
  unint64_t v235 = __ROR8__((v223 >> 26) ^ __ROR8__((v228 ^ 0xA0B05644C6D0E600) & (v203 ^ 0xD043BE5A7439B6ADLL), 26) ^ 0x71E0FC5C984266FBLL, 38);
  uint64_t v236 = v235 ^ 0x71A96FAD028B61F5 ^ ((((v235 >> 41) | (v235 << 57)) ^ 0x1800000000015350)
                                      - 2
                                      * ((((v235 >> 41) | (v235 << 57)) ^ 0x1800000000015350) & 0x720000000028DFFFLL ^ (v235 >> 41) & 6)
                                      + 0x730FCEE51C28DFF9);
  unint64_t v237 = v236 & 0xF95FAE87093835ADLL ^ ((v235 >> 7) ^ 0x54D42903D477CLL) & 0x15FAE87093835ADLL | v236 & 0x6A05178F6C7CA52 ^ ((v235 >> 7) ^ 0x54D42903D477CLL) & 0xA05178F6C7CA52;
  unint64_t v238 = (v231 & 0x800C04C1E006941 | 0x91C20E2360BC803ALL) ^ v231 & 0x91C20E2360BC803ALL | v231 & 0x663D319081431684;
  unint64_t v239 = (v238 >> 1) ^ (v238 << 58) ^ (v238 >> 6);
  unint64_t v240 = v238 ^ 0x8DBA4C94F80B10FELL ^ ((v239 ^ 0x38C4684840018E10)
                                      - 2 * ((v239 ^ 0x38C4684840018E10) & 0x7FA25C84F80814FFLL ^ v239 & 1)
                                      - 0x5DA37B07F7EB02);
  unint64_t v241 = v240 & 0xF04458904EAD6316 ^ (v231 << 63) | v240 & 0xFBBA76FB1529CE9;
  unint64_t v242 = ((v240 & 0xF04458904EAD6316 ^ (v231 << 63)) & 0x4B67721182E9FDFDLL | v240 & 0xB23220180409CE9) ^ v240 & 8;
  unint64_t v243 = (((v224 ^ 0xCD80000000000000) & (v230 ^ 0xCFFFFFFFFFFFFFFFLL))
        - ((2 * ((v224 ^ 0xCD80000000000000) & (v230 ^ 0xCFFFFFFFFFFFFFFFLL))) & 0xD19EAF43B811C4ECLL)
        - 0x1730A85E23F71D8ALL) ^ v203;
  uint64_t v244 = v228 ^ (v230 ^ 0x3000000000000000) & v206;
  unint64_t v245 = ((v243 ^ 0x388CE9FBA83154DBLL)
        - 2 * ((v243 ^ 0x388CE9FBA83154DBLL) & 0x5CF68C6D6E96B767 ^ v243 & 0x24)
        - 0x23097392916948BDLL) ^ v244 ^ 0x83B925D657B9AEBCLL;
  unint64_t v246 = v245 ^ 0xA8501C7206E8E0B2 ^ (((2 * (v245 >> 61)) ^ 0x3FFFFFFFFFFFFFFBLL)
                                      + ((v245 >> 61) ^ 0x2A0778C95E9F3A9ALL));
  uint64_t v247 = 0xB6F5E5055A87AF20 - ((((v245 >> 34) & 1) << 37) | 0x5B7AF282AD43D790);
  if ((v246 & (8 * v245) & 0x2000000000) == 0) {
    uint64_t v247 = (((v245 >> 34) & 1) << 37) | 0x5B7AF282AD43D790;
  }
  unint64_t v248 = __ROR8__((8 * v245) & 0xFFFFFFDFFFFFFFFFLL ^ 0x12BB25DAC3BED128 ^ (((v246 | 0xC589B9D674A09EB0) & (v245 & 0xC589B9D674A09EB0 ^ 0x7A7766BBDB7FFB6FLL))+ v247- 0x5B7AF282AD43D790), 59);
  unint64_t v249 = ((v248 >> 5) ^ (v245 >> 39) | (v248 << 59)) ^ (v245 << 25);
  unint64_t v250 = v237 ^ (v235 << 23);
  unint64_t v251 = v235 ^ ((((((v244 ^ 0x3746F1A13038138ALL) - 0x6809581A09170A75) ^ ((v244 ^ 0xA0B05644C6D0E600) + 1))
                 - ((2 * (((v244 ^ 0x3746F1A13038138ALL) - 0x6809581A09170A75) ^ ((v244 ^ 0xA0B05644C6D0E600) + 1))) & 0xB9ED18DADD2D6E86)
                 - 0x23097392916948BDLL) ^ v244 ^ 0x83B925D657B9AEBCLL)
               - 0x6809581A09170A76);
  int v252 = ((v251 ^ 0x2387C0E) + 1) ^ ((v251 ^ 0x12387C0E) + 1);
  uint64_t v253 = v251 ^ 0x6668796B445DB031;
  unint64_t v254 = ((v251 >> 28) | (v251 << 45)) ^ (v251 >> 19) ^ ((unint64_t)((v252 - ((2 * v252) & 0x3346780) + 161100736) ^ v251 ^ 0x445DB031) << 36) ^ 0xF07E2E4B0723E406;
  uint64_t v255 = v250 ^ v253 ^ (v254 - ((2 * v254) & 0x2812E1E153346780) + 0x140970F0A99A33C0);
  unint64_t v256 = v255 ^ 0xF1677A2B48B55E05 ^ (((v249 ^ 0x894F104BB57B5136) & v241)
                                      - ((2 * ((v249 ^ 0x894F104BB57B5136) & v241)) & 0xAAD057E89D6ABC0ALL)
                                      + 0x55682BF44EB55E05);
  uint64_t v257 = v249 ^ 0x3DD79DA5C86D533CLL ^ (v241 - 2 * v242 + 0x4B67721182E9FDF5);
  unint64_t v258 = ((v256 ^ (v234 ^ 0x1647F7154F7C77FELL) & ~v257)
        - ((2 * (v256 ^ (v234 ^ 0x1647F7154F7C77FELL) & ~v257)) & 0x96CEE42305D3FBEALL)
        + 0x4B67721182E9FDF5) ^ v249 ^ 0x3DD79DA5C86D533CLL;
  unint64_t v259 = v257 ^ (v250 ^ 0xA40F51DF06000000) & (v234 ^ 0xE9B808EAB0838801);
  unint64_t v260 = v250 ^ v234;
  unint64_t v261 = (v255 ^ 0xA40F51DF06000000) & (v260 ^ 0x4DB75935B6838801) ^ v234 ^ v259;
  unint64_t v262 = v261 ^ (v261 >> 10) ^ (v261 << 47) ^ (v261 >> 17) ^ (v261 << 54);
  unint64_t v263 = (v249 ^ 0x76B0EFB44A84AEC9) & (v255 ^ 0x5BF0AE20F9FFFFFFLL) ^ v260;
  uint64_t v264 = ((v258 << 25) ^ 0x6A94B76164000000)
       - ((2 * ((v258 << 25) ^ 0x6A94B76164000000)) & 0x79CAA78790000000)
       - 0x431AAC3C36BA18DDLL;
  uint64_t v265 = v264 ^ 0x29E44BFB70000000;
  if ((v197 & 0xFFFFFFFFFF7FFFFFLL) == 0) {
    uint64_t v265 = 0x6AFEE7C746000000;
  }
  uint64_t v266 = (v263 << 57) ^ (v263 << 23) ^ (v263 >> 7) ^ (((v263 >> 41) ^ 0x4FFE88)
                                                    - 2 * (((v263 >> 41) ^ 0x4FFE88) & 0x608FF7 ^ (v263 >> 41) & 4)
                                                    - 0x69DC44A2511F700DLL);
  uint64_t v267 = (v258 >> 61) ^ (v258 >> 39) ^ (8 * v258);
  unint64_t v268 = v264 & 0x95011838B8000000 ^ v258 ^ v265 & (v264 ^ 0xBCE553C3C945E723) ^ ((v267 ^ 0x2DF1AA521D8EEFLL)
                                                                                    - 2
                                                                                    * ((v267 ^ 0x2DF1AA521D8EEFLL) & 0x258DB08126A611B7 ^ v267 & 0x10)
                                                                                    + 0x258DB08126A611A7);
  unint64_t v269 = ((v256 ^ v263) << 45) ^ ((v256 ^ v263) << 36) ^ ((v256 ^ v263 ^ 0xB248A6CA497C77FELL) >> 19) ^ ((v256 ^ v263 ^ 0xB248A6CA497C77FELL) >> 28) ^ 0x74D61F3717AA575FLL;
  unint64_t v270 = v266 ^ v263;
  unint64_t v271 = v266 ^ v256 ^ (v269 - ((2 * v269) & 0xD9E2BFBA8E96D0D8) + 0x6CF15FDD474B686CLL);
  uint64_t v272 = (v259 << 58) ^ (v259 >> 1) ^ ((v259 >> 6) | (v259 << 63)) ^ 0x27556E69C52C005FLL;
  uint64_t v273 = v259 ^ 0x5D9CEF631665584DLL ^ (v272 - ((2 * v272) & 0x60B028D185354E12) + 0x30581468C29AA709);
  unint64_t v274 = (((v268 ^ 0x2E76E14B1B025EEALL) & v273)
        - ((2 * ((v268 ^ 0x2E76E14B1B025EEALL) & v273)) & 0xF30B66BB22F6FA00)
        + 0x7985B35D917B7D00) ^ v271;
  unint64_t v275 = v274 ^ 0xCA067D0B784D19B8;
  unint64_t v276 = (v274 ^ 0xCA067D0B784D19B8)
       - 2 * ((v274 ^ 0xCA067D0B784D19B8) & 0xC0078DB98C1E4AFLL ^ v274 & 6)
       + 0xC0078DB98C1E4A9;
  unint64_t v277 = (v268 ^ 0xD1891EB4E4FDA115) & (v271 ^ 0x4C7C31A916C99B47) ^ v270 ^ v262;
  unint64_t v278 = v276 ^ v277 ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 19) ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) << 36) ^ (((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 28) | ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) << 45));
  v105[15] = ((v276 ^ v277 ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 19) ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 28)) >> 16) ^ 0x4C;
  *((unsigned char *)v106 + 9) = ((unsigned __int16)(v276 ^ v277 ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 19) ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 28)) >> 8) ^ 0xCC;
  *((unsigned char *)v106 + 4) = v276 ^ v277 ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 19) ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 28) ^ 0x2E;
  v109[4] = ((v276 ^ v277 ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 19) ^ ((v276 ^ v277 ^ 0x6712058196E7F0ECLL) >> 28)) >> 24) ^ 0xD2;
  unsigned char *v478 = (BYTE5(v278) ^ 0x95) + (~(2 * (BYTE5(v278) ^ 0x95)) | 0x4F) - 39;
  uint64_t v279 = v268 ^ 0x45880EB46CFDA115;
  *((void *)&v280 + 1) = v270 ^ v262 ^ 0x7D5A0E261445;
  *(void *)&long long v280 = v270 ^ v262 ^ 0x6B12000000000000;
  unint64_t v281 = (v271 ^ 0xB383CE56E93664B8) & (__ROR8__((v280 >> 48) ^ 0x90CDF9D8B4B962F4, 16) ^ 0x9D0B6F3206274B46);
  uint64_t v282 = v268 ^ 0x45880EB46CFDA115 ^ v273;
  unint64_t v283 = v282 ^ (v270 ^ 0x64061402FC77AF35) & (v262 ^ 0xF0EB96A70DAE448FLL);
  unint64_t v284 = v281 ^ v262 ^ ((((v283 ^ 0x24EB540DB6E21FACLL) + (v283 ^ 0x9401100088000000) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
                      + (v283 ^ 0x9401100088000000));
  uint64_t v285 = ((v284 >> 10) ^ 0x3C51A563C946ELL)
       + (v284 ^ 0xF146958F251BB70)
       - 2 * (((v284 >> 10) ^ 0x3C51A563C946ELL) & (v284 ^ 0x146958F251BB70));
  uint64_t v286 = v285 - ((2 * v285) & 0x168352228D2B047ELL) - 0x74BE56EEB96A7DC1;
  uint64_t v287 = v286 & 0x2417C39B73591419;
  unint64_t v288 = (v286 ^ 0xAF566A8A35CC9626) + (v286 & 0x2417C39B73591419 ^ 0xDBE9BD75CEB7EBFFLL) + 1;
  uint64_t v289 = v288
       + (v287 ^ 0x1811142110019)
       + 2 * (v288 & (v287 ^ 0x1811142110019))
       - 4 * (v288 & (v287 ^ 0x1811142110019));
  unint64_t v290 = v275 ^ (((2 * v282) ^ 0xD7FDDFFEEFFFFFFFLL) + (v282 ^ 0x9401100088000000)) & (v262 ^ 0xF146958F251BB70);
  unint64_t v291 = (v290 - ((2 * v290) & 0xA551143822883B7ELL) - 0x2D5775E3EEBBE241) ^ v279;
  unint64_t v292 = (v291 & 0xFFFFFFFA267D5DE7 ^ 0x24AA944A063D10E5 | v481 & 1) >> (v207 & 0x27 ^ 0x25) >> (v207 & 0x27 ^ 2);
  unint64_t v293 = (((v291 << 25) ^ (8 * v291)) & 0xFFFFFFFFFFFFFFF8 | (v291 >> 61)) ^ v291;
  unint64_t v294 = (v289 + ((v284 << 54) ^ 0xDC00000000000000) - 2 * (v289 & ((v284 << 54) ^ 0xDC00000000000000))) ^ (v284 >> 17);
  v109[25] = BYTE4(v278) ^ 0xCF;
  LOBYTE(v279) = *(unsigned char *)(v482
                          + ((((HIWORD(v278) ^ 0x91) << (v294 & 3) << (v294 & 3 ^ 3)) | (v278 >> 53) & 7 ^ 4) ^ 0x4C));
  *uint64_t v488 = v293 ^ v292 ^ 0xD6;
  *((unsigned char *)v106 + 10) = HIBYTE(v278) ^ 0x6E;
  *int v489 = (BYTE4(v293) ^ 0x32) - 2 * ((BYTE4(v293) ^ 0x32) & 0x5C ^ BYTE4(v293) & 4) - 40;
  *uint64_t v493 = (((unsigned __int16)(v293 ^ v292) >> 8) ^ 0x17)
        - ((2 * (((unsigned __int16)(v293 ^ v292) >> 8) ^ 0x17)) & 0xB0)
        - 40;
  LOBYTE(v278) = v279 ^ (((((HIWORD(v278) ^ 0x91) << (v294 & 3) << (v294 & 3 ^ 3)) | (v278 >> 53) & 7 ^ 4) ^ 0x68) + 6) ^ 0x3A;
  *((unsigned char *)v106 + 8) = ((v293 ^ v292) >> 16) ^ 0xD1;
  v105[4] = ((v293 ^ v292) >> 24) ^ 0x6D;
  *uint64_t v479 = (~(70 * v278) | 0x4F) + 35 * v278 - 39;
  *uint64_t v492 = (BYTE5(v293) ^ 0x4D) - ((2 * (BYTE5(v293) ^ 0x4D)) & 0xB0) - 40;
  unint64_t v295 = v283 ^ (v283 << 58) ^ (v283 << 63) ^ (v283 >> 1) ^ (v283 >> 6);
  LOBYTE(v270) = *(unsigned char *)(v480 + (((v293 >> 41) & 0x80 | (v293 >> 49) & 0x7F) ^ 0x94));
  *int v487 = v283 ^ (v283 >> 1) ^ (v283 >> 6) ^ 3;
  *int v490 = (((unsigned __int16)(v283 ^ (v283 >> 1) ^ (v283 >> 6)) >> 8) ^ 5)
        + (~(2 * ((unsigned __int16)(v283 ^ (v283 >> 1) ^ (v283 >> 6)) >> 8)) | 0x4F)
        - 39;
  v109[2] = (v295 ^ 0xC50CBE7C495605DBLL) >> ((-59 - v172) & 0x10) >> ((-59 - v172) & 0x10 ^ 0x10u);
  *((unsigned char *)v106 + 7) = HIBYTE(v293) ^ 0x97;
  v109[9] = ((v289 ^ (v284 >> 17)) >> 24) ^ 0x34;
  v109[33] = BYTE4(v294) ^ 0x8A;
  *uint64_t v485 = (BYTE2(v294) ^ 0xAC) - ((2 * (BYTE2(v294) ^ 0xAC)) & 0x34) + 26;
  v109[28] = HIBYTE(v295) ^ 0xC5;
  v105[6] = BYTE4(v295) ^ 0x7C;
  unint64_t v296 = v294 ^ (v284 << 47);
  *((unsigned char *)v106 + 6) = BYTE5(v296) ^ 7;
  *uint64_t v491 = (BYTE1(v294) ^ 0x79) - ((2 * (BYTE1(v294) ^ 0x79)) & 0x34) + 26;
  LOBYTE(v293) = (v270 + 88) ^ 0x97 ^ ((4 * v270) | 0xE8);
  v105[5] = ((v283 ^ (v283 >> 1) ^ (v283 >> 6)) >> 24) ^ 0x49;
  *unsigned int v494 = v293 - ((2 * v293 + 40) & 0xB0) + 108;
  unint64_t v297 = v277 ^ (v277 >> 7) ^ (v277 << 23);
  unint64_t v298 = v297 ^ (v277 << 57);
  unint64_t v299 = v298 ^ (v277 >> 41);
  *uint64_t v486 = (BYTE1(v299) ^ 0xEC) - ((2 * (BYTE1(v299) ^ 0xEC)) & 0xB0) - 40;
  *((unsigned char *)v106 + 5) = v294 ^ 0x28;
  v105[13] = BYTE4(v297) ^ 0xF5;
  *unsigned int v94 = (HIBYTE(v296) ^ 0xDD) - ((2 * (HIBYTE(v296) ^ 0xDD)) & 0x34) + 26;
  v109[20] = BYTE6(v295) ^ 0xC;
  *int v88 = (BYTE6(v296) ^ 0xB8) - 2 * ((BYTE6(v296) ^ 0xB8) & 0x1E ^ BYTE6(v296) & 4) + 26;
  v109[27] = BYTE5(v295) ^ 0xBE;
  *uint64_t v483 = (((v277 ^ (v277 >> 7) ^ (v277 << 23)) >> 24) ^ 0xE1)
        - ((2 * ((v277 ^ (v277 >> 7) ^ (v277 << 23)) >> 24)) & 0x34)
        + 26;
  v105[8] = BYTE5(v297) ^ 3;
  v109[32] = BYTE2(v299) ^ 0x8C;
  *unsigned int v499 = v299 ^ 0x19;
  LODWORD(v289) = ((v297 >> 51) & 0x1F | (v297 >> 43) & 0xE0) ^ 0xD6;
  LOBYTE(v294) = *(unsigned char *)(v124
                          + ((((((v289 - ((2 * v289) & 0x112) - 596437111) ^ 0x238CE8A5)
                              + ((v289 - ((2 * v289) & 0x112) - 596437111) ^ 0xDC731789)
                              + 1) ^ 0xFFFFFFFE)
                            + ((v289 - ((2 * v289) & 0x112) - 596437111) ^ 0xDC731789)) ^ 0xB7));
  v105[7] = HIBYTE(v298) ^ 0xF2;
  *int v484 = v294 ^ (((((v289 - ((2 * v289) & 0x12) - 119) ^ 0xA5) + ((v289 - ((2 * v289) & 0x12) - 119) ^ 0x89) + 1) ^ 0xFE)
                + ((v289 - ((2 * v289) & 0x12) - 119) ^ 0x89)) ^ 0x8B;
  **uint64_t v495 = v122 + 1;
  uint64_t v300 = *(void *)(v73 - 4);
  unsigned int v500 = ((2 * *(_DWORD *)v300) & 0x9FCD33FE) + (*(_DWORD *)v300 ^ 0xCFE699FF) + 806970881;
  LODWORD(v296) = (~(38 * *(unsigned __int8 *)(v300 + 11)) | 0xFFFFFF8B) - 109 * *(unsigned __int8 *)(v300 + 11) - 69;
  LODWORD(v297) = 2 * ((v296 ^ 3) & (v296 ^ 0x30)) - 77;
  int v302 = (v297 & 0xFFFFFFFE) - ((2 * v297) & 0xFFFFFFAC);
  uint64_t v303 = (uint64_t)*(&off_26DE9F480 + v70 - 2822);
  uint64_t v304 = v303 + 6;
  LODWORD(v296) = *(unsigned __int8 *)(v303
                                     + 6
                                     + (((~(38 * *(unsigned char *)(v300 + 11)) | 0x8B)
                                                        - 109 * *(unsigned char *)(v300 + 11)
                                                        - 69) ^ 0xFDLL));
  LODWORD(v297) = (v296 ^ 0xFFFFFFD2) - ((2 * (v296 ^ 0xFFFFFFD2) - 2) & 0xFFFFFFAE);
  BOOL v217 = (v296 & 1) == 0;
  int v305 = v296 & 0xFE ^ 4;
  int v306 = v297 - 42;
  if (!v217) {
    int v305 = v306;
  }
  int v307 = (v302 - 41) ^ v305;
  int v308 = *v496;
  uint64_t v309 = (unsigned char *)*v76;
  unint64_t v310 = (*v504 ^ 0x1ALL | ((*v502 ^ 0x1ALL) << 8) | ((unint64_t)*(unsigned __int8 *)(*v76 + 11) << 24) | ((*v505 ^ 0x1ALL) << 16) | ((unint64_t)*(unsigned __int8 *)(*v76 + 35) << 32)) ^ (((unint64_t)*(unsigned __int8 *)*v76 << 48) | ((unint64_t)*(unsigned __int8 *)(*v76 + 16) << 56)) ^ ((unint64_t)((v307 << (v308 & 1) << !(v308 & 1)) | ((v307 & 0x80) >> 7)) << 40);
  int v311 = -109 * *(unsigned __int8 *)(v300 + 9) - ((38 * *(unsigned __int8 *)(v300 + 9)) & 0x32) + 25;
  unsigned int v312 = *(unsigned __int8 *)(v304
                            + ((-109 * *(unsigned char *)(v300 + 9) - ((38 * *(unsigned char *)(v300 + 9)) & 0x32) + 25) ^ 0x5ELL));
  unsigned int v313 = ((v312 >> 3) | (32 * v312)) ^ (((((v311 ^ 0xA0) + (v311 ^ 0x13)) ^ 0xD2) >> 3) | (32 * (((v311 ^ 0xFFFFFFA0) + (v311 ^ 0x13)) ^ 0xFFFFFFD2))) ^ 0xFFFFFF85;
  unint64_t v314 = ((unint64_t)*(unsigned __int8 *)(*v76 + 8) << 32) | ((unint64_t)(((v313 >> 4) | (16 * v313)) ^ 0x58u) << 24);
  LOBYTE(v313) = -2 * ((3 * *(unsigned char *)(*v76 + 34)) & 3) - 109 * *(unsigned char *)(*v76 + 34) + 3;
  LOBYTE(v313) = *(unsigned char *)(v304 + (v313 ^ 0x44)) ^ ((v313 ^ 9) + (v313 ^ 0xBA)) ^ 0xD2;
  unint64_t v315 = (unsigned __int16)(*(unsigned __int8 *)(*v76 + 24) | (*(unsigned __int8 *)(*v76 + 30) << 8)) | ((unint64_t)(((v313 & 0x80) != 0) | (2 * v313)) << 16) | ((unint64_t)*(unsigned __int8 *)(v300 + 14) << 48) | ((unint64_t)*(unsigned __int8 *)(*v76 + 19) << 40) | v314;
  unint64_t v316 = v315 & 0x2635A70C2A49234DLL ^ ((unint64_t)*(unsigned __int8 *)(v300 + 12) << 56) & 0x2600000000000000 | v315 & 0xD9CA58F3D5B6DCB2 ^ ((unint64_t)*(unsigned __int8 *)(v300 + 12) << 56) & 0xD900000000000000;
  unint64_t v317 = v316 - ((2 * v316) & 0xE6C6B8C4353D99C0) - 0xC9CA39DE5613320;
  unint64_t v318 = ((unint64_t)*(unsigned __int8 *)(*v76 + 5) << 56) | ((unint64_t)*(unsigned __int8 *)(*v76 + 26) << 32) | ((unint64_t)*(unsigned __int8 *)(*v76 + 7) << 48) | *(unsigned __int8 *)(*v76 + 29) | ((unint64_t)*(unsigned __int8 *)(*v76 + 18) << 24) | ((unint64_t)*(unsigned __int8 *)(*v76 + 13) << 8) | ((unint64_t)*(unsigned __int8 *)(*v76 + 15) << 16) | ((unint64_t)*(unsigned __int8 *)(*v76 + 21) << 40);
  unsigned __int8 v319 = -109 * *(unsigned char *)(*v76 + 1) - ((38 * *(unsigned char *)(*v76 + 1)) & 0x3E) + 31;
  char v320 = *(unsigned char *)(v304 + (v319 ^ 0x58)) ^ ((v319 ^ 0xA6) + (v319 ^ 0x15)) ^ 0xD2;
  unint64_t v321 = *(unsigned __int8 *)(*v76 + 23) | ((unint64_t)((v320 < 0) | (2 * v320)) << 8) | ((unint64_t)*(unsigned __int8 *)(*v76 + 31) << 16) | ((unint64_t)*(unsigned __int8 *)(*v76 + 14) << 24) | ((unint64_t)*(unsigned __int8 *)(*v76 + 6) << 32) | ((unint64_t)*(unsigned __int8 *)(*v76 + 22) << 48) | ((unint64_t)*(unsigned __int8 *)(*v76 + 12) << 56) | ((unint64_t)*(unsigned __int8 *)(*v76 + 17) << 40);
  unint64_t v322 = ((v321 + (v321 ^ 0xA46F3B7570576D3ELL) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v321;
  uint64_t v301 = ((2 * *(_DWORD *)v300) & 0x9FCD33FE) + (*(_DWORD *)v300 ^ 0xCFE699FF) + 806970881;
  uint64_t v323 = v310 + (v301 << 32) - 2 * (v310 & (v301 << 32));
  unint64_t v324 = (a63 | ((unint64_t)(*v503 ^ 0x1Au) << 56) | ((unint64_t)(*v498 ^ 0x1Au) << 40)) ^ (*(unsigned __int8 *)(*v76 + 10) | ((unint64_t)(v308 ^ 0x1Au) << 8) | ((unint64_t)*(unsigned __int8 *)(v300 + 10) << 24) | ((unint64_t)*(unsigned __int8 *)(*v76 + 3) << 32) | ((*v497 ^ 0x1ALL) << 16)) ^ ((unint64_t)(*v501 ^ 0x1Au) << 48) ^ ((unint64_t)a64 << 8) ^ v322 ^ ((unint64_t)a65 << 16) ^ ((unint64_t)a66 << 24) ^ ((unint64_t)a67 << 32) ^ ((unint64_t)a68 << 40) ^ ((unint64_t)a69 << 48) ^ ((unint64_t)a70 << 56);
  unint64_t v325 = (v324 - 0x68040451F630332FLL + (~(2 * v324) | 0xD00808A3EC60665FLL)) & (v323 ^ 0x61764447BFE55C60);
  unint64_t v326 = v322 ^ v318;
  unint64_t v327 = (v325 - ((2 * v325) & 0x8900B3124B272D9ALL) - 0x3B7FA676DA6C6933) ^ v322 ^ v318;
  uint64_t v328 = v327 ^ 0x781810D988ABBD80;
  unint64_t v329 = ((v327 ^ 0x781810D988ABBD80) << 23) ^ 0xF691162C2F000000;
  unint64_t v330 = v327 ^ 0x8A26D29280095CEBLL ^ (v329 - ((2 * v329) & 0x7F6CD74C55000000) + 0x3FB66BA62A8EB935);
  unint64_t v331 = (v330 | (v327 >> 41) ^ 0x5AC85C) ^ ((v327 ^ 0x781810D988ABBD80) >> 7) ^ (v330 & ((v327 >> 41) ^ 0x5AC85C) | (v327 << 57));
  uint64_t v332 = v324 ^ 0x68040451F630332FLL;
  unint64_t v333 = v318 ^ 0xABB3D9C29E8F097DLL ^ (((v324 ^ 0x68040451F630332FLL) & (v326 ^ 0x39D638B520A44C1ELL))
                                      - ((2 * ((v324 ^ 0x68040451F630332FLL) & (v326 ^ 0x39D638B520A44C1ELL))) & 0xDB343D1083A97538)
                                      + 0x6D9A1E8841D4BA9CLL);
  unint64_t v334 = v317 ^ v323;
  unint64_t v335 = (v326 ^ 0xC629C74ADF5BB3E1) & (v318 ^ 0x39D638B520A44C1ELL) ^ v317 ^ v323;
  unint64_t v336 = (v333 - ((2 * v333) & 0x4527A97BE9549BD6) - 0x5D6C2B420B55B215) ^ v335;
  uint64_t v337 = v336 ^ (v336 << 47) ^ ((v336 >> 17) | (v336 << 54)) ^ (((v336 >> 10) ^ 0x19763B6F92FC2ELL)
                                                              - ((2 * ((v336 >> 10) ^ 0x19763B6F92FC2ELL)) & 0x2B25006C76D094)
                                                              + 0xD159280363B684ALL);
  *((void *)&v338 + 1) = v335 ^ 0x4DB3794CF93FDLL;
  *(void *)&long long v338 = v335 ^ 0x76D0000000000000;
  uint64_t v339 = __ROR8__((v338 >> 52) ^ 0xC2689B990AD28BBDLL, 12);
  *((void *)&v338 + 1) = ~v339;
  *(void *)&long long v338 = v339 ^ 0x2913E7EB44C19C6ALL;
  uint64_t v340 = v338 >> 1;
  *((void *)&v338 + 1) = v339 ^ 0x2B;
  *(void *)&long long v338 = v339 ^ 0x2913E7EB44C19C40;
  uint64_t v341 = v339 ^ 0x5FBA6AA330FB15E0 ^ ((v340 ^ (v338 >> 6))
                                      - ((2 * (v340 ^ (v338 >> 6))) & 0xED531A90E8751316)
                                      + 0x76A98D48743A898BLL);
  unint64_t v342 = v332 ^ (v334 ^ 0x76D4DB3794CF93FDLL) & (v323 ^ 0x9E89BBB8401AA39FLL);
  unint64_t v343 = (((v334 ^ 0x892B24C86B306C02) & (v318 ^ 0xC629C74ADF5BB3E1))
        - ((2 * ((v334 ^ 0x892B24C86B306C02) & (v318 ^ 0xC629C74ADF5BB3E1))) & 0x69EFB66B045515D8)
        - 0x4B0824CA7DD57514) ^ v323 ^ v342;
  *((void *)&v338 + 1) = v343 ^ 0xEB5C71A39;
  *(void *)&long long v338 = v343 ^ 0x5F3F670000000000;
  uint64_t v344 = ((v343 >> 61) | 0x8866B0AB57477938) ^ v343 ^ ((v343 ^ 0x5F3F670EB5C71A39) << ((v343 >> 61) & 3 ^ 2) << ((v343 >> 61) & 3 ^ 1)) ^ ((v338 >> 39) - ((2 * (v338 >> 39)) & 0xC6A1D2AA3B270620) - 0x1CAF16AAE26C7CF0);
  unint64_t v345 = v328 ^ v342;
  *((void *)&v338 + 1) = v328 ^ v342 ^ 0x3C95A;
  *(void *)&long long v338 = v328 ^ v342 ^ 0x758931ED41A00000;
  uint64_t v346 = (v338 >> 19) ^ ((v345 ^ 0x7AB18E1A726398ACLL) >> 28) ^ ((v345 ^ 0x7AB18E1A726398ACLL) << 36) ^ 0x3C051F60F38BFF73;
  unint64_t v347 = (v346 - ((2 * v346) & 0xAFDEF817B7CBA832) - 0x281083F4241A2BE7) ^ v345 ^ v331;
  unint64_t v348 = (v331 ^ v337 ^ 0xF9F6DC81D150ACC3)
       - 2 * ((v331 ^ v337 ^ 0xF9F6DC81D150ACC3) & 0x322C973CB38FA27ELL ^ (v331 ^ v337) & 0x20)
       - 0x4DD368C34C705DA2;
  unint64_t v349 = v344 ^ (v341 - 0x77994F54A8B886C8 + (~(2 * v341) | 0xEF329EA951710D8BLL) + 3);
  unint64_t v350 = (v348 ^ 0xB22C973CB38FA25ELL) & (v337 ^ 0xBB92322DF4EB0B8CLL) ^ v349;
  uint64_t v351 = (((v348 ^ 0x4DD368C34C705DA1) & (v347 ^ 0x1FFD5CB5400245F3))
        - ((2 * ((v348 ^ 0x4DD368C34C705DA1) & (v347 ^ 0x1FFD5CB5400245F3))) & 0x2778CA3E6D19E81ALL)
        + 0x13BC651F368CF40DLL) ^ v337;
  unint64_t v352 = ((v350 ^ 0xBC6F8E5BA8549929) + (v351 ^ 0xAAA1F2A91F2F2F37 ^ v350 ^ 0xBC6F8E5BA8549929) + 1) ^ ((v351 ^ 0xAAA1F2A91F2F2F37) + 1);
  unint64_t v353 = (v351 ^ 0x11EE83BAEE72EB52 ^ (v352 - ((2 * v352) & 0x89611DD81D447734) + 0x44B08EEC0EA23B9ALL))
       + (v350 ^ 0xBC6F8E5BA8549929);
  unint64_t v354 = v353 - ((2 * v353) & 0xA84385714A3A3A4) - 0x7ABDE3D475AE2E2ELL;
  *((void *)&v338 + 1) = v354 ^ 0x1D2;
  *(void *)&long long v338 = v354 ^ 0x85421C2B8A51D000;
  uint64_t v355 = (v338 >> 10) ^ (v354 << 47) ^ 0xE8E9000000000000;
  uint64_t v356 = (v355 - ((2 * v355) & 0xA84385714A3A3A4) - 0x7ABDE3D475AE2E2ELL) ^ v354;
  unint64_t v357 = (v356 & 0x5C9CE5D5FBD3F905 ^ ((v354 >> 17) ^ 0x42A10E15C528) & 0x65D5FBD3F905 | v356 & 0xA3631A2A042C06FALL) ^ ((v354 >> 17) ^ 0x42A10E15C528) & 0x1A2A042C06FALL;
  uint64_t v358 = v344 ^ 0x34093EF0FF13E013;
  unint64_t v359 = v348 ^ (v347 ^ 0xE002A34ABFFDBA0CLL) & (v344 ^ 0x34093EF0FF13E013);
  unint64_t v360 = 0xF000000000000000;
  if ((v359 & 0x1000000000000000) != 0) {
    unint64_t v360 = 0x1000000000000000;
  }
  unint64_t v361 = v360 + (v359 ^ 0xB22C973CB38FA25ELL);
  *((void *)&v363 + 1) = v359 ^ 0x1C4320FD71BLL;
  *(void *)&long long v363 = v361 ^ 0x8A383C0000000000;
  uint64_t v362 = v363 >> 41;
  *((void *)&v363 + 1) = v359;
  *(void *)&long long v363 = v361;
  uint64_t v364 = (v363 >> 7) ^ v361 ^ v362;
  unint64_t v365 = (((v344 ^ 0xCBF6C10F00EC1FECLL) & v341)
        - ((2 * ((v344 ^ 0xCBF6C10F00EC1FECLL) & v341)) & 0x2A6E72BF83123E28)
        - 0x6AC8C6A03E76E0ECLL) ^ 0x8ACA65EA818B5AE7 ^ v347;
  uint64_t v366 = ((2 * (v365 - 1374038446)) & 0xA3CC535C) + ((v365 - 1374038446) ^ 0x51E629AE);
  unint64_t v367 = (v366 - ((2 * v366) & 0xF1551E660FBA5926) + 0x78AA8F3307DD2C93) ^ v359;
  unint64_t v368 = v367 ^ ((v367 ^ 0xCA86180FB4528ECDLL) >> 19) ^ ((v367 ^ 0xCA86180FB4528ECDLL) << 36) ^ ((v367 ^ 0xCA86180FB4528ECDLL) >> 28) ^ ((v367 ^ 0xCA86180FB4528ECDLL) << 45);
  unint64_t v369 = v364 ^ 0xBD2C4C81708375AFLL;
  uint64_t v370 = (v368 ^ 0x27EFC3B10CB66BB5) + 1;
  unint64_t v371 = ((v364 ^ 0xBD2C4C81708375AFLL) + (v364 ^ 0x9AC38F307C351E1ALL ^ v368) + 1) ^ v370;
  unint64_t v372 = (v368 ^ 0x13D49EA491C4BC52 ^ (v371 - ((2 * v371) & 0x978945D4C51A5030) - 0x343B5D159D72D7E8))
       + (v364 ^ 0xBD2C4C81708375AFLL);
  unint64_t v373 = v372 - ((2 * v372) & 0x9E70C538D664D2A2) - 0x30C79D6394CD96AFLL;
  unint64_t v374 = v357 ^ v364;
  unint64_t v375 = (v337 ^ 0xBB92322DF4EB0B8CLL)
       + (v349 ^ 0x439071A457AB66D6)
       - 2 * ((v337 ^ 0x3B92322DF4EB0B8CLL) & (v349 ^ 0x439071A457AB66D6));
  unint64_t v376 = v375 - ((2 * v375) & 0xBCF3B250C76A796ELL) - 0x218626D79C4AC349;
  if (!v329) {
    unint64_t v376 = v349 ^ 0x9DE9A88C341E5A61;
  }
  unint64_t v377 = (((v376 ^ 0xDE79D92863B53CB7) & (v337 ^ 0x446DCDD20B14F473))
        + v358
        - 2 * ((v376 ^ 0xDE79D92863B53CB7) & (v337 ^ 0x446DCDD20B14F473) & v358)) ^ v365;
  unint64_t v378 = (v377 << 25) ^ 0xADCEAB5DAC000000;
  uint64_t v379 = (((v377 >> 39) ^ 0xAE8F82) - ((2 * ((v377 >> 39) ^ 0xAE8F82)) & 0x36C7C58) + 0x3B4A3CE371B63E2CLL) ^ v377;
  *((void *)&v381 + 1) = v377 ^ 0x1747C156E755AED6;
  *(void *)&long long v381 = v377 ^ 0x4000000000000000;
  uint64_t v380 = v381 >> 61;
  uint64_t v382 = 0xDEBD3A67AD5F6124 - (v379 & 4 | 0x6F5E9D33D6AFB092);
  if ((v379 & 4 & v380) == 0) {
    uint64_t v382 = v379 & 4 | 0x6F5E9D33D6AFB092;
  }
  unint64_t v383 = v379 & 0xFFFFFFFFFFFFFFFBLL ^ 0x6C0DFDB596E390FALL ^ (v380 - 0x6F5E9D33D6AFB092 + v382);
  uint64_t v384 = v383 + v378 - 2 * (v383 & v378) - ((2 * (v383 + v378 - 2 * (v383 & v378))) & 0x192D62769DD32AD4);
  *((void *)&v386 + 1) = v350 ^ 0xBC6F8E5BA8549929;
  *(void *)&long long v386 = v350 ^ 0xD32AF9C4010B5912;
  uint64_t v385 = v386 >> 1;
  *(void *)&long long v386 = __ROR8__(v350 ^ 0xBC6F8E5BA8549929, 6);
  unint64_t v387 = v350 ^ 0x3660E179F2AD7BFBLL ^ ((v385 ^ v386 ^ 0xE9BD15DE7EA57F00)
                                      - 2
                                      * ((v385 ^ v386 ^ 0xE9BD15DE7EA57F00) & 0x654A18BDF3A622F9 ^ (v385 ^ v386) & 0x11)
                                      - 0x1AB5E7420C59DD18);
  uint64_t v388 = v369 & ~v357 ^ (v384 + 0xC96B13B4EE9956ALL) ^ v387;
  unint64_t v389 = ((v388 ^ 0xC96B13B4EE9956ALL)
        + (v357 & 0x3E37916EC52CD499)
        - 2 * (v357 & 0x3E37916EC52CD499 & ((v384 + 0xC96B13B4EE9956ALL) ^ v387 ^ 0xC16912A44289408))) ^ (v374 ^ 0x42D3B37E8F7C8A50) & (v373 ^ 0xCF38629C6B326951) & 0x3E37916EC52CD499 ^ ((((v374 ^ 0x42D3B37E8F7C8A50) & (v373 ^ 0xCF38629C6B326951)) - ((2 * ((v374 ^ 0x42D3B37E8F7C8A50) & (v373 ^ 0xCF38629C6B326951))) & 0x12B0593370B6E6A6) - 0x76A7D36647A48CADLL) ^ v357) & 0xC1C86E913AD32B66;
  unint64_t v390 = (v389 ^ 0xF23880F96863E874) >> (v370 & 0xA) >> (v370 & 0xA ^ 0xA);
  unint64_t v391 = (v389 << 47) ^ (v389 << 54) ^ v390 ^ 0xE93A000000000000;
  unint64_t v392 = __ROR8__(v389, 36) & 0xFFFFE0000FFFFFFFLL ^ __ROR8__(v389 ^ 0xFF1622948265F874 ^ (v391- 2* (v391 & 0xD2EA26DEA061019 ^ v390 & 0x19)+ 0xD2EA26DEA061000), 19) ^ 0xD71CA188C51B38D5;
  unint64_t v393 = v374 ^ ((v384 + 0xC96B13B4EE9956ALL) ^ 0xC96B13B4EE9956ALL) & (v373 ^ 0x30C79D6394CD96AELL);
  unint64_t v394 = (v393 << 23) ^ (v393 >> 7) ^ ((v393 >> 41) | (v393 << 57)) ^ 0xBBA738A06F8CE73ELL;
  unint64_t v395 = ((v384 + 0xC96B13B4EE9956ALL) ^ 0xF3694EC4B1166A95) & v387 ^ v373;
  unint64_t v396 = v357 & ((v384 + 0xC96B13B4EE9956ALL) ^ v387 ^ 0xF3694EC4B1166A95);
  unint64_t v397 = v395 ^ (v384 + 0xC96B13B4EE9956ALL) ^ v396 ^ (8 * (v395 ^ (v384 + 0xC96B13B4EE9956ALL) ^ v396)) ^ ((v395 ^ (v384 + 0xC96B13B4EE9956ALL) ^ v396) >> 39) ^ (((v395 ^ (v384 + 0xC96B13B4EE9956ALL) ^ ~v396) >> 61) | ((v395 ^ (v384 + 0xC96B13B4EE9956ALL) ^ v396) << 25));
  unint64_t v398 = (v394 - ((2 * v394) & 0xD1F2B440862D8E20) + 0x68F95A204316C710) ^ v393;
  unint64_t v399 = ((v393 ^ 0xBD2C4C81708375AFLL)
        - ((2 * (v393 ^ 0xBD2C4C81708375AFLL)) & 0xF443DBEB0A4F9682)
        - 0x5DE120A7AD834BFLL) ^ v395;
  *((void *)&v386 + 1) = v399 ^ 0xBBE241A;
  *(void *)&long long v386 = v399 ^ 0x5B1D4E30F0000000;
  uint64_t v400 = v386 >> 28;
  *(void *)&long long v386 = __ROR8__(v399, 19);
  unint64_t v401 = v398 ^ v399 ^ ((v400 ^ v386 ^ 0xC4834B63A9C61F77)
                      - ((2 * (v400 ^ v386 ^ 0xC4834B63A9C61F77)) & 0x5C2AE857BF9ADBBCLL)
                      + 0x2E15742BDFCD6DDELL);
  uint64_t v402 = __ROR8__(v392, 45);
  unint64_t v403 = v402 ^ v398;
  unint64_t v404 = v402 ^ v398 ^ (((v401 ^ 0x79B5985DB8072F90) & (v397 ^ 0x40D0473C08BAF6E8))
                      - ((2 * ((v401 ^ 0x79B5985DB8072F90) & (v397 ^ 0x40D0473C08BAF6E8))) & 0x9C88F43E68A4BBAALL)
                      - 0x31BB85E0CBADA22BLL);
  unint64_t v405 = v404 ^ 0xBE4A426C85AFA7DFLL ^ ((((v404 >> 41) | (v404 << 57)) ^ 0xAE0000000020C3EFLL)
                                      - ((2 * (((v404 >> 41) | (v404 << 57)) ^ 0xAE0000000020C3EFLL)) & 0xFC0000000080A510)
                                      - 0x326323583FAD78);
  unint64_t v406 = v405 & 0xFFFFFFFFFFFF7FFFLL ^ (v404 >> 7) ^ ((unsigned __int16)v405 & 0x8000 | (v404 << 23));
  *((void *)&v386 + 1) = v388;
  *(void *)&long long v386 = v388 ^ 0x75C35BD703A12D66;
  uint64_t v407 = v386 >> 1;
  *(void *)&long long v386 = __ROR8__(v388, 6);
  unint64_t v408 = v388 ^ 0x246DC6D1F28D6D96 ^ ((v407 ^ v386 ^ 0x99D70D6F5C0E84B5)
                                      - ((2 * (v407 ^ v386 ^ 0x99D70D6F5C0E84B5)) & 0xA35D3A0DE25881E0)
                                      + 0x51AE9D06F12C40F0);
  unint64_t v409 = (((v403 ^ 0xFF040C7CE559957FLL) & (v402 ^ 0xF3B9AE3A792DF32BLL))
        - ((2 * ((v403 ^ 0xFF040C7CE559957FLL) & (v402 ^ 0xF3B9AE3A792DF32BLL))) & 0x1874C0E15D57923CLL)
        - 0x73C59F8F515436E2) ^ v408 ^ v397;
  unint64_t v410 = (((v403 ^ 0xFBF3831AA66A80) & (v401 ^ 0x864A67A247F8D06FLL))
        - ((2 * ((v403 ^ 0xFBF3831AA66A80) & (v401 ^ 0x864A67A247F8D06FLL))) & 0xF44DCC7D41214D66)
        + 0x7A26E63EA090A6B3) ^ v402 ^ v409 ^ 0xCCEA274CA6113FF6;
  uint64_t v411 = v410 ^ 0x4F5D4607BB30EA1FLL ^ (((v410 >> 10) ^ 0xCAA58A2A0E183)
                                      - ((2 * ((v410 >> 10) ^ 0xCAA58A2A0E183)) & 0x68491A716DCAC8)
                                      + 0x7DF4248D38B6E564);
  uint64_t v412 = (v410 << 47) ^ (v410 << 54) ^ (v411
                                      + ((v410 >> 17) ^ 0x1954B14541C3)
                                      - 2 * (v411 & ((v410 >> 17) ^ 0x1954B14541C3)));
  unint64_t v413 = v401 ^ ((v408 & (v397 ^ 0xBF2FB8C3F7450917))
               - ((2 * (v408 & (v397 ^ 0xBF2FB8C3F7450917))) & 0x14CBD57294A74A40)
               - 0x759A1546B5AC5AE0);
  unint64_t v414 = v413 ^ 0xC2F8D1B0DAB754FLL ^ (v402 ^ 0xC4651C586D20CD4) & (v408 ^ v397 ^ 0xBF2FB8C3F7450917);
  unint64_t v415 = (v414 - ((2 * v414) & 0x86C2398644AE6146) + 0x43611CC3225730A3) ^ v397;
  uint64_t v416 = v303 + 276;
  uint64_t v417 = v415 ^ (v415 << 25) ^ (8 * v415) ^ (v415 >> 39) ^ (((((v415 >> 61) ^ 0xA3 ^ -((v415 >> 61) ^ 0xA3) ^ (((v415 >> 61) ^ 1) + 94))
                                                                             + 93) ^ *(unsigned char *)(v303
                                                                                              + 276
                                                                                              + ((v415 >> 61) ^ 0xB5)))
                                                                           + 81);
  unint64_t v418 = v413 ^ 0x3D6FFB78DCA0BDE5 ^ v404;
  unint64_t v419 = (((v418 << 36) ^ (v418 << 45)) & 0xFFFFFFF000000000 | (v418 >> 28)) ^ (v418 >> 19);
  uint64_t v420 = ((v419 ^ 0x703E0A57AB96C082)
        - 2 * ((v419 ^ 0x703E0A57AB96C082) & 0x2220F2E72F775DBFLL ^ v419 & 0xC)
        - 0x5DDF0D18D088A24DLL) ^ v418;
  unint64_t v421 = (v409 << 63) ^ ((v409 ^ 0xCCEA274CA6113FF6) << 58) ^ 0xE800000000000000;
  unint64_t v422 = v409 ^ 0xCCEA274CA6113FF6 ^ ((v409 ^ 0xCCEA274CA6113FF6) >> 6) ^ ((v409 ^ 0xCCEA274CA6113FF6) >> 1) ^ 0x340A3C8224150F36 ^ (v421 - ((2 * v421) & 0x1800000000000000) - 0x728DBA2FC68848FFLL);
  uint64_t v423 = v417 ^ (v422 - ((2 * v422) & 0x2770DE678862E068) + 0x13B86F33C4317034);
  unint64_t v424 = (v423 ^ 0x2A7561930107BCABLL) & (v412 ^ 0xD97D800000000000) ^ v417;
  uint64_t v425 = (v424 & 0x1000000000000 ^ 0x3E4FEFFCF57DE6DFLL) + 2 * (v424 & 0x1000000000000);
  unint64_t v426 = v420 ^ v406;
  uint64_t v427 = (v417 ^ 0x39CD0EA0C536CC9FLL) & v422 ^ v426;
  BOOL v217 = ((v425 - 0x3E4FEFFCF57DE6DFLL) & (v427 ^ 0x6D44000000000000)) == 0;
  unint64_t v428 = (v417 ^ 0xC632F15F3AC93360) & (v426 ^ 0x92BB92BAEDA4882CLL) ^ v412 ^ v406;
  *((void *)&v386 + 1) = v428 ^ 0xE84C329CBBLL;
  *(void *)&long long v386 = v428 ^ 0xAC5A0E0000000000;
  uint64_t v429 = v428 ^ 0xD69606280A0EDCB7 ^ ((v386 >> 41) - ((2 * (v386 >> 41)) & 0xF59811808C788018) + 0x7ACC08C0463C400CLL);
  unint64_t v430 = v429 & 0x382C5F8E0EC71FEDLL ^ ((v428 << 57) ^ 0x7600000000000000) & 0x3800000000000000 | v429 & 0xC7D3A071F138E012 ^ ((v428 << 57) ^ 0x7600000000000000) & 0xC7FFFFFFFFFFFFFFLL;
  uint64_t v431 = v423 ^ (v412 ^ 0x26827FFFFFFFFFFFLL) & (v406 ^ 0x58923847CBC4DFEALL);
  unint64_t v432 = v431 ^ v412 ^ (((v412 ^ v406 ^ 0x7E1047B8343B2015) & (v426 ^ 0x6D446D45125B77D3))
                      - ((2 * ((v412 ^ v406 ^ 0x7E1047B8343B2015) & (v426 ^ 0x6D446D45125B77D3))) & 0x75610BAD01C8451ELL)
                      + 0x3AB085D680E4228FLL);
  unint64_t v433 = v430 ^ (v428 >> 7);
  unint64_t v434 = v432 ^ (v432 >> 17) ^ (v432 >> 10) ^ (v432 << 47) ^ (v432 << 54);
  unint64_t v435 = (v433 ^ 0x158B41DD0986539)
       + (v434 ^ 0xAD4E95ECDEAA6DE0)
       - 2 * ((v433 ^ 0x158B41DD0986539) & (v434 ^ 0x2D4E95ECDEAA6DE0));
  unint64_t v436 = v435 - ((2 * v435) & 0xDF7F90206FF00B16);
  uint64_t v437 = v425 - 0x80748908400028ALL;
  uint64_t v438 = 0x7498976966FBCB34 - v425;
  if (!v217) {
    uint64_t v437 = v438;
  }
  unint64_t v439 = ((v427 ^ 0x6D446D45125B77D3) - 0x3648A76C717DE455 + v437) ^ v424 & 0xFF7EFFFFFFFFFFFFLL;
  unint64_t v440 = v439 ^ v424 & 0x80000000000000;
  uint64_t v441 = v303 - 4;
  unint64_t v442 = v440 ^ (((*(unsigned char *)(v441 + ((-21 * ((v439 >> 61) ^ 5)) ^ 0x5DLL) + 815) + 63) ^ 0x11)
                                - 50) ^ (v440 >> 39) ^ (((8 * v440) ^ (v439 << 25) ^ 0xE55B5E5420941E90)
                                                      - 2
                                                      * (((8 * v440) ^ (v439 << 25) ^ 0xE55B5E5420941E90) & 0x31D02C32ED070D8 ^ (8 * v440) & 8)
                                                      + 0x31D02C32ED070D4);
  unint64_t v443 = ((v427 ^ 0x9B87B1F9F6D25C33) + (v427 ^ 0x6D446D45125B77D3) + 1) ^ 0xFFFFFFFFFFFFFFFELL;
  unint64_t v444 = ((v427 ^ 0x2E9B3EBEE3455A36 ^ (v443 - ((2 * v443) & 0x87BEA7F7E23C5BCALL) + 0x43DF53FBF11E2DE5))
        + 2 * (v443 & (v427 ^ 0x6D446D45125B77D3))) ^ v428;
  *((void *)&v445 + 1) = v444 ^ 0x4DFEA;
  *(void *)&long long v445 = v444 ^ 0x81EFB847CBC00000;
  uint64_t v446 = v444 ^ 0x23759ED50CD3FF20 ^ ((v445 >> 19) - ((2 * (v445 >> 19)) & 0x45344D258E2E4194) - 0x5D65D96D38E8DF36);
  uint64_t v447 = v433 ^ (v444 << 36) ^ (v446 + ((v444 >> 28) ^ 0x81EFB847CLL) - 2 * (v446 & ((v444 >> 28) ^ 0x81EFB847CLL)));
  *((void *)&v445 + 1) = v431 ^ 0x10;
  *(void *)&long long v445 = v431 ^ 0xB84E65672A07BC00;
  uint64_t v448 = v445 >> 6;
  *(void *)&long long v445 = __ROR8__(v431, 1);
  unint64_t v449 = v431 ^ 0xF76519715861723ELL ^ ((v448 ^ v445 ^ 0x5C2732B39503DE08)
                                      - 2
                                      * ((v448 ^ v445 ^ 0x5C2732B39503DE08) & 0x4F2B7C167266CE2FLL ^ (v448 ^ v445) & 1)
                                      + 0x4F2B7C167266CE2ELL);
  unint64_t v450 = (v442 ^ 0xA52A4DA95F0E9D98) + v449 - 2 * ((v442 ^ 0x252A4DA95F0E9D98) & v449);
  uint64_t v451 = v450 - ((2 * v450) & 0x6EDD882E810BE814) - 0x48913BE8BF7A0BF6;
  unint64_t v452 = v447 ^ 0xC212A5EB6DCAF495 ^ (((v451 ^ 0xB76EC4174085F40ALL) & (v442 ^ 0x5AD5B256A0F16267))
                                      - ((2 * ((v451 ^ 0xB76EC4174085F40ALL) & (v442 ^ 0x5AD5B256A0F16267))) & 0xFE0FDEAD7AA52358)
                                      + 0x7F07EF56BD5291ACLL);
  unint64_t v453 = v436 + 0x6FBFC81037F8058BLL;
  unint64_t v454 = (v447 ^ 0x42EAB5422F679AC6) & (v442 ^ 0xA52A4DA95F0E9D98) ^ (v436 + 0x6FBFC81037F8058BLL);
  unint64_t v455 = (v452 - ((2 * v452) & 0x8C5F7B66505F5B4CLL) - 0x39D0424CD7D0525ALL) ^ v454;
  *((void *)&v445 + 1) = (v452 - ((2 * v452) & 0x505F5B4C) + 674213286) ^ v454 ^ 0x2204F;
  *(void *)&long long v445 = v455 ^ 0xAF785C469A180000;
  unint64_t v456 = v455 ^ __ROR8__(v455, 28) ^ (v445 >> 19);
  v309[10] = v456 & 0xCF ^ 6 | v456 ^ 0x26;
  unint64_t v457 = (v456 ^ 0xEDA58BC6D9FE426) >> (v456 & 8) >> (v456 & 8 ^ 8);
  *uint64_t v496 = v457 + (~(2 * v457) | 0xCB) + 27;
  unint64_t v458 = (((v451 ^ 0x48913BE8BF7A0BF5) & (v434 ^ 0xAD4E95ECDEAA6DE0))
        - ((2 * ((v451 ^ 0x48913BE8BF7A0BF5) & (v434 ^ 0xAD4E95ECDEAA6DE0))) & 0x9B4AE407671B32E0)
        + 0x4DA57203B38D9970) ^ v442 ^ v452;
  unint64_t v459 = ((v456 >> 13) & 0xF8 | (v456 >> 21) & 7) ^ 0x3B;
  unint64_t v460 = (v459 >> 3) & 0xFFFFFF1F | (32 * (v459 & 7));
  uint64_t v461 = v458 ^ (8 * v458) ^ (v458 >> 39);
  char v462 = *(unsigned char *)(v416 + (v460 ^ 0x4F));
  *int v502 = (BYTE1(v461) ^ 0xF2) - 2 * ((BYTE1(v461) ^ 0xF2) & 0x1E ^ BYTE1(v461) & 4) + 26;
  *uint64_t v498 = (BYTE5(v456) ^ 0x58) - 2 * ((BYTE5(v456) ^ 0x58) & 0x1F ^ BYTE5(v456) & 5) + 26;
  *uint64_t v497 = (v462 ^ v460 ^ 4) - ((2 * (v462 ^ v460 ^ 4) + 34) & 0x34) + 107;
  unint64_t v463 = v461 ^ (v458 >> 61);
  *unsigned int v504 = v463 ^ 0x22;
  v309[3] = BYTE4(v456) ^ 0xBC;
  *(unsigned char *)(v300 + 10) = BYTE3(v456) ^ 0x6D;
  *int v501 = (BYTE6(v456) ^ 0xDA) - 2 * ((BYTE6(v456) ^ 0xDA) & 0x1E ^ BYTE6(v456) & 4) + 26;
  unint64_t v464 = ((2 * v454) & 0x8E6862743E5650AELL ^ 0x7197FFDFD1AFFFF9) + (v454 ^ 0x6FBFC81037F8058BLL);
  unint64_t v465 = v464 - 2 * ((v464 + 0x734313A1F2B2858) & 0x2E706C742CAD956FLL ^ v464 & 5) - 0xA5B6251B427423ELL;
  *((void *)&v445 + 1) = v465 ^ 0x6A;
  *(void *)&long long v445 = v465 ^ 0xAE706C742CAD9500;
  uint64_t v466 = (v445 >> 7) ^ v465;
  unint64_t v467 = ((v466 ^ 0xAE706C742CAD956ALL)
        + ((v465 >> 41) ^ 0xAE706C742CFAAD5CLL ^ v466)
        - 2 * ((v465 >> 41) ^ 0xAE706C742CFAAD5CLL ^ v466)) ^ (((v465 >> 41) ^ 0xFFFFFFFFFFA8C7C9) + 1);
  unint64_t v468 = (v465 >> 41) ^ 0xACC7C1F5EFAEBAB2 ^ (v467 - ((2 * v467) & 0x598F83EBDFF30508) - 0x53383E0A10067D7CLL);
  unint64_t v469 = v466 ^ 0xAE140DFC66BAE98FLL ^ (v468 - ((2 * v468) & 0xC8C310942EF9CALL) + 0x6461884A177CE5);
  uint64_t v470 = v469
       + 2 * (v468 & (v466 ^ 0x2E706C742CAD956ALL))
       - ((2 * (v469 + 2 * (v468 & (v466 ^ 0x2E706C742CAD956ALL)))) & 0x60618108B7B17B16);
  unint64_t v471 = v451 ^ (((v453 ^ 0x6FBFC81037F8058BLL) & (v434 ^ 0x52B16A132155921FLL))
               - ((2 * ((v453 ^ 0x6FBFC81037F8058BLL) & (v434 ^ 0x52B16A132155921FLL))) & 0x6EDD882E810BE814)
               - 0x48913BE8BF7A0BF6);
  unint64_t v472 = v471 ^ (v471 >> 1) ^ (v471 << 58) ^ ((unint64_t)~((v450
                                                                 - ((2 * v450) & 0x810BE814)
                                                                 + 1082520586) ^ (((v453 ^ 0x37F8058B) & (v434 ^ 0x2155921F))
                                                                                - ((2
                                                                                  * ((v453 ^ 0x37F8058B) & (v434 ^ 0x2155921F))) & 0x810BE814)
                                                                                + 1082520586)) << 63) ^ (v471 >> 6);
  unint64_t v473 = (((v447 ^ 0xBD154ABDD0986539) & (v453 ^ 0x904037EFC807FA74))
        - ((2 * ((v447 ^ 0xBD154ABDD0986539) & (v453 ^ 0x904037EFC807FA74))) & 0x94B5B9169807CD82)
        + 0x4A5ADC8B4C03E6C1) ^ v434 ^ v471;
  *((void *)&v445 + 1) = v473 ^ 0x2C6;
  *(void *)&long long v445 = v473 ^ 0xCEF5E266B656C000;
  unint64_t v474 = v463 ^ (v458 << 25);
  *uint64_t v503 = (HIBYTE(v456) ^ 0xE) - ((2 * (HIBYTE(v456) ^ 0xE)) & 0x34) + 26;
  LODWORD(v468) = 147 * (WORD1(v474) ^ 0x5F7D) - ((294 * (WORD1(v474) ^ 0x5F7D)) & 0x1ACBACA) - 2083103387;
  LODWORD(v468) = *(unsigned __int8 *)(v304
                                     + ((-109 * (BYTE2(v474) ^ 0x7D)
                                                        - ((38 * (BYTE2(v474) ^ 0x7D)) & 0xCA)
                                                        + 101) ^ 0x22)) ^ ((v468 ^ 0x6F) + (v468 ^ 0xDC));
  *(unsigned char *)(v300 + 11) = BYTE5(v474) ^ 0xC9;
  *int v505 = ((((v468 ^ 0xFFFFFFD2) & 0x80) != 0) | (2 * (v468 ^ 0xD2))) - ((4 * v468) & 0x34) + 26;
  *uint64_t v309 = BYTE6(v474) ^ 0xD0;
  v309[35] = BYTE4(v474) ^ 0xC1;
  v309[11] = ((v463 ^ (v458 << 25)) >> 24) ^ 0x5F;
  LODWORD(v468) = 147 * (WORD1(v472) ^ 0x4850) - ((294 * (WORD1(v472) ^ 0x4850)) & 0x13DC04) + 201977346;
  LOBYTE(v474) = *(unsigned char *)(v416 + (HIBYTE(v474) ^ 0xAC)) ^ HIBYTE(v474);
  v309[24] = v472 ^ 0x42;
  LODWORD(v443) = (-109 * (BYTE2(v472) ^ 0x50) - ((38 * (BYTE2(v472) ^ 0x50)) & 4) + 2) ^ 8;
  v309[30] = BYTE1(v472) ^ 0xCB;
  v309[16] = (v474 ^ 0xE7) + 81;
  LODWORD(v474) = *(unsigned __int8 *)(v304
                                     + ((v443 & 0x5E | (-109 * (BYTE2(v472) ^ 0x50)
                                                                       - ((38 * (BYTE2(v472) ^ 0x50)) & 4)
                                                                       + 2) & 0xA1) ^ 0x4D));
  uint64_t v475 = v473 ^ __ROR8__(v473, 17) ^ (v445 >> 10);
  *(unsigned char *)(v300 + 9) = BYTE3(v472) ^ 0x48;
  v309[34] = (((v474 ^ (v443 + (v468 ^ 0xBB)) ^ 0xFFFFFFD2) & 0x80) != 0) | (2 * (v474 ^ (v443 + (v468 ^ 0xBB)) ^ 0xD2));
  v309[8] = (*(unsigned char *)(v416 + (BYTE4(v472) ^ 0x7BLL)) ^ BYTE4(v472) ^ 0xCC ^ 0xFC) + 81;
  LODWORD(v441) = *(unsigned __int8 *)(v441 + ((3 * (BYTE5(v472) ^ 0x80)) ^ 0x40) + 548);
  *(unsigned char *)(v300 + 12) = HIBYTE(v472) ^ 0x1F;
  v309[5] = (v475 ^ 0xAF96851C476599EDLL) >> (v432 & 0x38 ^ 0x18) >> (v432 & 0x38 ^ 0x20);
  v309[26] = BYTE4(v475) ^ 0x1C;
  v309[7] = BYTE6(v475) ^ 0x96;
  v309[19] = (((((v441 >> 4) | (16 * v441)) ^ 0xFFFFFF8E) & 0x80) != 0) | (2
                                                                                               * (((v441 >> 4) | (16 * v441)) ^ 0x8E));
  v309[29] = v475 ^ 0xED;
  v470 += 0x3030C0845BD8BD8BLL;
  v309[23] = v470 ^ 0x8B;
  v309[18] = BYTE3(v475) ^ 0x47;
  unint64_t v476 = v470 ^ (v465 << 23);
  v309[21] = BYTE5(v475) ^ 0x85;
  v309[14] = BYTE3(v476) ^ 0xEE;
  v309[15] = BYTE2(v475) ^ 0x65;
  *(unsigned char *)(v300 + 14) = BYTE6(v472) ^ 6;
  v309[31] = BYTE2(v476) ^ 0xD8;
  v309[6] = BYTE4(v476) ^ 0x4E;
  v309[1] = BYTE1(v470) ^ 0xBD;
  v309[13] = BYTE1(v475) ^ 0x99;
  char v477 = *(unsigned char *)(v416 + (BYTE5(v476) ^ 0x21));
  v309[12] = HIBYTE(v476) ^ 0xA;
  v309[22] = BYTE6(v476) ^ 0x26;
  v309[17] = (v477 ^ BYTE5(v476) ^ 0x96 ^ 0xFC) + 81;
  **(_DWORD **)(v506 - 4) = v500 + 1;
  JUMPOUT(0x22B3B3538);
}

uint64_t sub_22B3B3574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13)
{
  unsigned int v19 = 1503746353 * (((&a11 | 0xC57F0237) + (~&a11 | 0x3A80FDC8)) ^ 0xE31EC080);
  a12 = v15;
  a11 = v19 + v16 + 416;
  LODWORD(a13) = v19 + 1299996386;
  (*(void (**)(int *))(v14 + 8 * (v16 ^ 0x91E)))(&a11);
  a12 = v13 - 0x1A311C056C7BD919;
  a13 = v15;
  a11 = v18 + (((&a11 | 0x2F2D4467) + (~&a11 | 0xD0D2BB98)) ^ 0x39DD014C) * v17 + v16;
  uint64_t v20 = (*(uint64_t (**)(int *))(v14 + 8 * (v16 ^ 0x1688)))(&a11);
  *(void *)(v13 - 0x21AEEC4F795AEEAFLL) = 0;
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * v16))(v20);
}

uint64_t sub_22B3B36A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((v2 ^ (v3 == a1)) & 1) == 0) * (v2 ^ 0x42D)) ^ v2)))();
}

uint64_t sub_22B3B36E0@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3726 * (a2 + 1 == v2 + 32)) ^ a1)))();
}

void sub_22B3B37B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int8x16_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int8x16_t *a48)
{
  v48.i64[0] = 0x5050505050505050;
  v48.i64[1] = 0x5050505050505050;
  v49.i64[0] = 0xA8A8A8A8A8A8A8A8;
  v49.i64[1] = 0xA8A8A8A8A8A8A8A8;
  *a16 = veorq_s8(vaddq_s8(vsubq_s8(*a16, vandq_s8(vaddq_s8(*a16, *a16), v48)), v49), *a48);
  JUMPOUT(0x22B3ABC58);
}

uint64_t sub_22B3B3904@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((845 * (v5 - 1 == ((8 * v4) ^ 0x6760) + a2)) ^ v4)))();
}

void sub_22B3B3940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v62 = 1948972247 * ((v61 + 1008448438 - 2 * ((v61 - 136) & 0x3C1BB43E)) ^ 0x898541D0);
  *(_DWORD *)(v61 - 116) = (*a27 ^ 0xF6A6E22A) - v62;
  *(_DWORD *)(v61 - 136) = a23 ^ v62;
  *(void *)(v61 - 128) = a60;
  (*(void (**)(uint64_t))(v60 + 8 * a22))(v61 - 136);
  JUMPOUT(0x22B36CFA0);
}

uint64_t sub_22B3B3A10@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(void *)(v3 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 == v4) * a1) ^ a2)))();
}

void sub_22B3B3A34()
{
}

uint64_t sub_22B3B3B8C()
{
  int v4 = (((v0 + 2877) | 0x84) ^ 0x99159853) + v2;
  BOOL v6 = v4 > 631989193 || v4 < v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 * ((v0 + 2960) ^ 0x39F)) ^ v0)))();
}

void sub_22B3B3BE0()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xCEDu)))();
  JUMPOUT(0x22B3B3C04);
}

uint64_t sub_22B3B3CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, unsigned int a13, unint64_t *a14, int a15)
{
  int v22 = v21 ^ 0x1D;
  int v23 = *v15 ^ v18;
  unsigned int v24 = 1328090399
      * (((&a10 | 0xAA2BCC61) - &a10 + (&a10 & 0x55D43398)) ^ 0x55F8A85B);
  a13 = v24 + (v19 ^ 0x370793D0) - 536986304 + (v20 & 0xEE7F97CE ^ 0x8070904E);
  a12 = ((((v22 ^ 0x1D) - 43 * v23 + 98) ^ 0x2E) + ((((v22 ^ 0x1D) - 43 * v23 + 98) << ((v22 + 63) ^ 0xF)) & 0x5C) - 4) ^ (31 * (((&a10 | 0x61) - &a10 + (&a10 & 0x98)) ^ 0x5B));
  a11 = v22 - v24 + 2002;
  a10 = v17;
  a14 = &STACK[0x48AB25CB3E53BFE6];
  uint64_t v25 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v22 + 2299)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((29 * (a15 != -604050357)) ^ v22)))(v25);
}

void sub_22B3B3DF0()
{
}

void sub_22B3B3DF8(uint64_t a1)
{
  int v1 = 1866394843 * ((-1682930662 - (a1 | 0x9BB0841A) + (a1 | 0x644F7BE5)) ^ 0x8E584C11);
  __asm { BRAA            X8, X17 }
}

void sub_22B3B3EE0(uint64_t a1)
{
  int v1 = 1438293641 * ((-2 - ((a1 | 0x46237229) + (~a1 | 0xB9DC8DD6))) ^ 0x11BD8A9);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 12) ^ v1;
  int v5 = *(_DWORD *)(v3 - 0x21AEEC4F795AEEB7);
  *(_DWORD *)(v3 - 0x21AEEC4F795AEEB7) = v5 + 8 * v4 + 1455799568;
  unsigned int v6 = v5 + 8 * v4 + 407389076;
  if ((v5 - 1048410492) < 0x3DBF01B7 != v6 < 0x3DBF01B7) {
    BOOL v7 = (v5 - 1048410492) < 0x3DBF01B7;
  }
  else {
    BOOL v7 = v6 < v5 - 1048410492;
  }
  *(_DWORD *)(v3 - 0x21AEEC4F795AEEB3) += ((v4 - 891766878) >> 29) + v7;
  __asm { BRAA            X11, X17 }
}

void sub_22B3B4060()
{
  if (v0 == 397592362) {
    int v1 = -604050357;
  }
  else {
    int v1 = 604092307;
  }
  *(_DWORD *)(v2 + 8) = v1;
}

uint64_t sub_22B3B40C4()
{
  STACK[0x210] = (unint64_t)&STACK[0x3F4E6157ECB6AF2E];
  STACK[0x208] = (unint64_t)&STACK[0x7FD2E20123E4420F];
  STACK[0x200] = (unint64_t)&STACK[0x36FC4A2A40148B43];
  *(void *)(v1 + 272) = &STACK[0x2D4];
  int v4 = 1292559617 * ((v2 - 192 - 2 * ((v2 - 192) & 0x740C0116) + 1946943766) ^ 0xD35F697F);
  *(_DWORD *)(v2 - 176) = (v0 - 226) ^ v4;
  *(_WORD *)(v2 - 172) = v4 + 17209;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0x775)))(v2 - 192);
  unint64_t v6 = STACK[0x270];
  int v7 = LOBYTE(STACK[0x2D7]);
  int v8 = (LOBYTE(STACK[0x2D4]) << ((v0 - 44) & 0xFB ^ 0x4B)) | (LOBYTE(STACK[0x2D5]) << 16) | (LOBYTE(STACK[0x2D6]) << (((v0 - 44) ^ 4) - 75)) | v7;
  LODWORD(STACK[0x508]) = v8 - 2 * (v8 & 0x1BD17E9F ^ v7 & 1) - 1680769378;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((51 * ((LODWORD(STACK[0x414]) >> 3) & 1)) ^ v0)))(v5);
}

void sub_22B3B4408()
{
}

void sub_22B3B4410()
{
}

void sub_22B3B46DC()
{
}

uint64_t sub_22B3B46E8(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  *int v12 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v14 + (v10 + a10)), a6), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v14 + (v10 + a10)), *(int8x16_t *)(v14 + (v10 + a10))), a5)));
  return (*(uint64_t (**)(void))(v13 + 8 * (a9 + v11 - 49)))();
}

uint64_t sub_22B3B4740(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 < 0x20) ^ (a1 - 67)) & 1) * ((a1 ^ 0x671) - 2625)) ^ a1)))();
}

uint64_t sub_22B3B4778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((v8 ^ 0xB38B1914) == v9 + ((v10 - 1784693100) & 0x7AF5FFD1) + 2114392406)
                                * (a8 + ((v10 + 45861) | 0x10950B41) + 141)) ^ (v10 + 207))))();
}

uint64_t sub_22B3B47F4()
{
  BOOL v4 = v2 + 161020909 > (v0 - 1026244015);
  if ((v0 - 1026244015) < 0x3F34BFC3 != v2 + 161020909 < (v3 + 1060418007)) {
    BOOL v4 = v2 + 161020909 < (v3 + 1060418007);
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 * (24 * (v3 ^ 0xD65) - 2296)) ^ v3)))();
}

void sub_22B3B4874()
{
}

void sub_22B3B4880()
{
  *(_DWORD *)(v1 - 192) = v2;
  *(_DWORD *)(v1 - 200) = v2 & 0xFFFFFFF8;
  *(_DWORD *)(v1 - 204) = v0 - 1873;
  JUMPOUT(0x22B3B48F0);
}

uint64_t sub_22B3B49C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v26 - 104) = v25;
  *(_DWORD *)(v26 - 112) = v22 + ((((v26 - 128) | 0x1167E3B3) - ((v26 - 128) & 0x1167E3B3)) ^ 0xFB70D447) * v23 - 244;
  *(void *)(v26 - 120) = a21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v22 + 1079)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v26 - 128) > v21 + (v22 ^ 0x1Cu) + 20) * (v22 ^ 0xE10)) ^ v22)))(v27);
}

void sub_22B3B4A64(uint64_t a1)
{
  int v1 = 1503746353 * (((a1 | 0x73C6F490) - (a1 & 0x73C6F490)) ^ 0x55A73626);
  __asm { BRAA            X10, X17 }
}

void sub_22B3B4B10()
{
  *int v0 = 604092306;
  JUMPOUT(0x22B3B4B1CLL);
}

void sub_22B3B4BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LODWORD(STACK[0x260]) = 528895453;
  LODWORD(STACK[0x290]) = v10 - 31;
  int v9 = (char *)&a9 + v11 - 0x3D63BD92DA195D22;
  STACK[0x240] = (unint64_t)(v9 + 2048);
  STACK[0x248] = (unint64_t)(v9 + 2176);
  STACK[0x250] = (unint64_t)(v9 + 2304);
  JUMPOUT(0x22B35298CLL);
}

uint64_t sub_22B3B4BF8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((100 * ((((v0 ^ 0x949FAAB1) + v1) & 0xFFFFFFFC) - LODWORD(STACK[0x240]) == -1801476204)) ^ v0)))();
}

uint64_t sub_22B3B4C40(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x70D52A7E711E505ELL) = *(_DWORD *)(a2 - 0x48A9B556C05DE571);
  *(void *)(a1 - 0x70D52A7E711E5056) = *(void *)(a2 - 0x48A9B556C05DE569);
  return 0;
}

void sub_22B3B4C98(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1503746353 * ((a1 & 0x31AE6F2F | ~(a1 | 0x31AE6F2F)) ^ 0xE8305266);
  __asm { BRAA            X1, X17 }
}

void sub_22B3B4DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v21 = 1948972247 * ((((v20 - 144) | 0x7C2A346) - (v20 - 144) + ((v20 - 144) & 0xF83D5CB8)) ^ 0xB25C56A8);
  *int v18 = v17;
  *(_DWORD *)(v20 - 132) = v15 - v21 + ((v19 + 532) ^ 0xE5C27140);
  *(_DWORD *)(v20 - 128) = v21 + v19 + 2605;
  v18[3] = a15;
  (*(void (**)(uint64_t))(v16 + 8 * (v19 ^ 0xC8F)))(v20 - 144);
  JUMPOUT(0x22B3B4E64);
}

uint64_t sub_22B3B4EB8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((a19 - *a16 - 1334771065 != ((a1 - 1398) ^ 0x7AAC6CD3))
                                * ((a1 - 1042675691) & 0x3E25F7FD ^ 0x696)) ^ a1)))();
}

void sub_22B3B4F5C()
{
}

uint64_t sub_22B3B4F68@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(_OWORD *)(v5 + a3 + 24) = *(_OWORD *)(v4 + a3 + 24);
  return (*(uint64_t (**)(void))(a2 + 8 * ((28 * (v6 & ~(((v3 ^ a1) * v7) ^ (a3 == 48)))) | v3)))();
}

uint64_t sub_22B3B4FAC(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((((a1 + 1220158051) & 0xB745D7BF) + 3) ^ (a1 - 1433)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_22B3B4FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v11 = (unsigned __int8 *)(a4 + v6 + v9);
  int v12 = ((*v11 ^ 0x2A) << 24) | ((((a5 - 7) ^ v11[1]) ^ 0x1C) << 16) | ((v11[2] ^ 0x2A) << 8);
  *(_DWORD *)(v10 + v6 + v9) = (v12 | v11[3] ^ 0x2A) + v8 - 2 * ((v12 | v11[3] ^ 0x2A) & (v5 + 4) ^ (v11[3] ^ 0x2A) & 4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * ((764 * ((unint64_t)(v6 + 4 + v9) < 0x40)) ^ a5)))(a1, a2, a3);
}

void sub_22B3B507C()
{
}

uint64_t sub_22B3B5364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((46 * (((a5 ^ v6 ^ (a6 - 22)) & 0x80000000) == ((a6 - 457) ^ 0x819))) ^ (a6 - 22))))();
}

void sub_22B3B53B4()
{
}

void sub_22B3B53C0()
{
}

void sub_22B3B53CC()
{
}

void sub_22B3B53DC()
{
}

uint64_t sub_22B3B53EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * ((47
                                * (a30 - v31 + ((39 * (v30 ^ 0x58C)) ^ 0x1CB29C30u) < ((v30 - 1477) | 0x881u) - 2194)) ^ v30)))();
}

uint64_t sub_22B3B5474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25)
{
  BOOL v28 = (((((a25 - 22) ^ 0xB6) & BYTE4(a12)) + ~(_BYTE)v25 + 1) & 0xF) == 0
     && (((a25 - 790) ^ 0xFF0AF4B6) & HIDWORD(a12)) + (v25 ^ 0x7F857EFF) != 2139455231;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((((a25 - 790) ^ 1 ^ (39 * ((a25 - 790) ^ 0x974))) * v28) ^ (a25 - 790))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_22B3B54F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (((((a3 + 476) ^ 0xC91) + ((a3 + 476) | 0xA0) - 2092)
                                              * (*(_DWORD *)(v11 - 236) == *(_DWORD *)(v11 - 240))) ^ a3)))(a10);
}

uint64_t sub_22B3B5534(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((v4 ^ 0x7A1 ^ (v4 + 1618044689) & 0x9F8E9DD7) * ((a4 & 8) == 0)) ^ v4)))();
}

uint64_t sub_22B3B5580@<X0>(int a1@<W7>, unsigned int a2@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v2 * (uint64_t)v3 + 36);
  BOOL v8 = (v6 - 787271771 > (int)((a2 - 618) ^ 0x5DA8F563) || v6 - 787271771 < SLODWORD(STACK[0x268]))
    && v6 != a1 + (a2 ^ 0xE9D) - 195;
  return (*(uint64_t (**)(void))(v5 + 8 * ((58 * v8) ^ a2)))();
}

void sub_22B3B55EC()
{
}

void sub_22B3B55F4()
{
}

uint64_t sub_22B3B5600(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return (*(uint64_t (**)(uint64_t))(v45
                                            + 8
                                            * (int)((((((a1 + 1543435062) & 0xA4010D3F) - 334) ^ ((a1 + 2426) | 0x50))
                                                   * (v44 == a8)) ^ a1)))(a44);
}

void sub_22B3B564C()
{
}

void sub_22B3B57F4()
{
}

void sub_22B3B57FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_DWORD *)(*(void *)(a7 + 584) + ((LODWORD(STACK[0x3CC]) + v7) & 0xFFFFFFFC)) = v8;
  JUMPOUT(0x22B33E8FCLL);
}

uint64_t sub_22B3B5830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  unsigned int v27 = a11 - (a14 & 0xEE5C0006) + ((59 * (a26 ^ 0x530)) ^ 0x1648B665);
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * ((127
                                * (((2 * v27) & 0xBEE6FFF2 ^ 0xAE440002) + (v27 ^ 0xA85D7FFA) + 1871690872 != 1325612145)) ^ a26)))();
}

uint64_t sub_22B3B58F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  unsigned int v46 = a11 - ((2 * a10) & 0x1D4ECBE) + ((a45 + 23715451) & 0xFE961EFE) - 1079773127;
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * ((28
                                * (((2 * v46) & 0xAF6FBEFE ^ 0x144ACBE) + (v46 ^ 0xD75DA920) + 2055055294 == 1379239741)) ^ a45)))();
}

uint64_t sub_22B3B59E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4 = *(uint64_t (**)(void))(v12 + 8 * (v15 - 1248));
  unsigned int v5 = v8 + a4;
  uint64_t v6 = *v16;
  *(unsigned char *)(*v16 + v5) = (HIBYTE(v9) ^ v13) - 2 * ((HIBYTE(v9) ^ v13) & 0x2B ^ HIBYTE(v9) & 1) + 42;
  *(unsigned char *)(v6 + v5 + 1) = (v10 ^ BYTE2(v9)) - ((2 * (v10 ^ BYTE2(v9))) & 0x55) + 42;
  *(unsigned char *)(v6 + (v8 + a4 + 2)) = (BYTE1(v9) ^ 0x11) + (v14 | ~(v9 >> 7)) + 43;
  *(unsigned char *)(v6 + v5 + 3) = v9 ^ v11;
  return v4();
}

uint64_t sub_22B3B59F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,unsigned int a40)
{
  unsigned int v46 = (unsigned __int8 *)(a3 + v40 + v45);
  int v47 = ((*v46 ^ v43) << 24) | ((*(unsigned __int8 *)(a3
                                                    + ((a40 - 1029058200) & 0xD5627FF ^ (unint64_t)(v45 + 1324))
                                                    + v40) ^ v43) << 16) | ((v46[2] ^ v43) << 8);
  *(_DWORD *)(v41 + ((v40 + v45) & 0xFFFFFFFFFFFFFFFCLL)) = (v47 | v46[3] ^ v43)
                                                          + v44
                                                          - 2 * ((v47 | v46[3] ^ v43) & 0x5BFEEC4F ^ (v46[3] ^ v43) & 4);
  return (*(uint64_t (**)(void))(v42 + 8 * ((801 * ((unint64_t)(v40 + 4 + v45) < 0x40)) ^ a40)))();
}

void sub_22B3B5AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  unsigned int v34 = (int *)(a31 + 4 * v33);
  int v35 = *v34;
  LODWORD(v34) = -1711036427
               * ((*(_DWORD *)(*a24 + (*a23 & 0xFFFFFFFF99D24490)) ^ v34) & ((a22 & 0xCF35EBFF)
                                                                                           + 2147481090));
  LODWORD(v34) = v34 ^ (v34 >> 16);
  unsigned int v36 = -1711036427 * v34;
  *(_DWORD *)(a32 + 4 * v33) ^= v35 ^ *((_DWORD *)*(&off_26DE9F480 + v32 - 1751) + HIBYTE(v36)) ^ *((_DWORD *)*(&off_26DE9F480 + a21)
                                                                                                  + HIBYTE(v36)
                                                                                                  - 3) ^ *((_DWORD *)*(&off_26DE9F480 + v32 - 1700) + HIBYTE(v36) + 2) ^ (-1477115904 * v34) ^ v36 ^ (1277536779 * HIBYTE(v36));
  JUMPOUT(0x22B3B5B84);
}

uint64_t sub_22B3B5BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v14 = (a6 - 187960830);
  *(unsigned char *)(*(void *)(v13 - 136) + v14) = *(unsigned char *)(v10 + (v14 & 0xF)) ^ *(unsigned char *)(v7 + v14) ^ *(unsigned char *)(v9 + (v14 & 0xF)) ^ *(unsigned char *)((a7 + 729) + (unint64_t)(v14 & 0xF) + v8 - 1359) ^ (123 * (v14 & 0xF));
  return (*(uint64_t (**)(void))(v12 + 8 * ((248 * (a6 - 1 != v11 + 1360)) ^ (a7 + 2537))))();
}

uint64_t sub_22B3B5C40()
{
  int v23 = (const char *)(v22 - 220);
  __n128 v24 = (__n128)vdupq_n_s32(0x5BFEEC4Fu);
  v25.n128_u64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v25.n128_u64[1] = 0x2A2A2A2A2A2A2A2ALL;
  __n128 v26 = (__n128)vdupq_n_s32(0xDBFEEC4B);
  v27.n128_u64[0] = 0x5454545454545454;
  v27.n128_u64[1] = 0x5454545454545454;
  __n128 v28 = (__n128)vdupq_n_s32(0x5BFEEC5Bu);
  int v0 = *(uint64_t (**)(__n128, __n128, __n128, __n128, __n128))(v20 + 8 * v18);
  int v1 = *(_DWORD *)(v22 - 144);
  int v3 = *(_DWORD *)(v22 - 140);
  int v2 = *(_DWORD *)(v22 - 136);
  int v4 = *(unsigned char *)(v22 - 124) ^ 0x22;
  if (v4 == 2)
  {
    int8x16x4_t v30 = vld4q_s8(v23);
    uint8x16_t v13 = (uint8x16_t)veorq_s8(v30.val[1], (int8x16_t)v25);
    _Q22 = vmovl_u8(*(uint8x8_t *)v13.i8);
    _Q21 = vmovl_high_u8(v13);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    return sub_22B3A6B70();
  }
  else if (v4 == 1)
  {
    int8x16x4_t v29 = vld4q_s8(v23);
    uint8x16_t v5 = (uint8x16_t)veorq_s8(v29.val[2], (int8x16_t)v25);
    _Q26 = vmovl_high_u8(v5);
    _Q25 = vmovl_u8(*(uint8x8_t *)v5.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return (*(uint64_t (**)(__n128))(v20 + 12240))(v24);
  }
  else
  {
    *(_DWORD *)(v22 - 148) = 2 * (*(_DWORD *)(v22 - 148) ^ v21) + v21 - (v19 & (4 * (*(_DWORD *)(v22 - 148) ^ v21)));
    *(_DWORD *)(v22 - 144) = 2 * (v1 ^ v21) + v21 - (v19 & (4 * (v1 ^ v21)));
    *(_DWORD *)(v22 - 140) = 2 * (v3 ^ v21) + v21 - (v19 & (4 * (v3 ^ v21)));
    *(_DWORD *)(v22 - 136) = v21 + 2 * (v2 ^ v21) - (v19 & (4 * (v2 ^ v21)));
    return v0(v24, v25, v26, v27, v28);
  }
}

void sub_22B3B5CB8()
{
}

uint64_t sub_22B3B5D20@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 + (v4 ^ (a2 - 2178)) - 224) * (a3 != v3)) ^ v4)))();
}

uint64_t sub_22B3B5D58(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 16) + 1990461019 * (((result | 0x40281B77) - result + (result & 0xBFD7E488)) ^ 0x6FCCB9FE);
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)(v2 - 0x5E1AB9F430EC979CLL) = HIBYTE(v1) ^ 0xC;
  *(unsigned char *)(v2 - 0x5E1AB9F430EC979BLL) = BYTE2(v1) ^ 0xAF;
  *(unsigned char *)(v2 - 0x5E1AB9F430EC979ALL) = BYTE1(v1) ^ 0xD6;
  *(unsigned char *)(v2 - 0x5E1AB9F430EC9799) = v1 ^ 0x70;
  return result;
}

void sub_22B3B5E08(uint64_t a1)
{
  int v1 = 1866394843 * ((2 * (a1 & 0x400CF3B1) - a1 - 1074590642) ^ 0x55E43BBA);
  __asm { BRAA            X10, X17 }
}

void sub_22B3B5EAC()
{
}

uint64_t sub_22B3B5F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v11 + v9 * (uint64_t)v8 + 32) == a8) * (15 * (v10 ^ 0xF35) - 75)) ^ v10)))();
}

void sub_22B3B5F98()
{
}

uint64_t sub_22B3B5FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((2 * v7) & 0xD1475FDE ^ 0x41021A90) + (v7 ^ 0x4F72F2B7) - 142673699 != ((a7 + 98) ^ 0x6022ACF5))
                                * (a7 - 933)) ^ a7)))();
}

void sub_22B3B6018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,int a31,int a32,int a33,unsigned __int8 a34,int a35,int a36,char a37)
{
  int v38 = ((*(_DWORD *)(v37 - 220) ^ 0xEB) << 8) | ((a25 ^ 0x3C) << 24) | ((a23 ^ 0x1B) << 16) | a30;
  *(_DWORD *)(v37 - 244) = a35 ^ 0x6D317973;
  *(_DWORD *)(v37 - 248) = (a18 | ((a27 ^ 0xB0) << 16) | ((a31 ^ 0xD7) << (((a37 - 111) | 0x50) ^ 0xC2)) & 0xFFFF00FF | ((a34 ^ 0xBE) << 8)) ^ 0xF47F1AF9;
  *(_DWORD *)(v37 - 236) = (((a21 ^ 0xAF) << 24) | ((a33 ^ 0x96) << 8) | ((a19 ^ 0xEB) << 16) | a17) ^ 0xB02A85AB;
  *(_DWORD *)(v37 - 240) = v38 ^ 0xAEE1082E;
  JUMPOUT(0x22B32A560);
}

uint64_t sub_22B3B6114()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((29 * (v1 != 0)) ^ v0)))();
}

uint64_t sub_22B3B6170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v27 = 1990461019 * ((v26 - 144) ^ 0x2FE4A289);
  *(void *)(v26 - 136) = &STACK[0x7E9805B87EA7CAA2];
  *(_DWORD *)(v26 - 104) = 362873235 - v27;
  int v28 = v25 - v27 + 982;
  uint64_t v29 = (uint64_t)*(&off_26DE9F480 + v25 + 45);
  *(_DWORD *)(v26 - 144) = v28;
  *(void *)(v26 - 120) = &STACK[0x717BE438C5D0876C];
  *(void *)(v26 - 112) = v29 - 8;
  (*(void (**)(uint64_t))(v24 + 8 * (v25 + 3998)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((*(_DWORD *)(v26 - 128) == v23)
                                                   * ((17 * (v25 ^ 0xDD) + 189493132) & 0xF4B488BE ^ 0x364)) ^ v25)))(a23);
}

uint64_t sub_22B3B6270()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 & 2) == v0 - 3155) * (((v0 - 1051) | 0x700) - 3823)) ^ (v0 - 719))))();
}

void sub_22B3B62A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48) - 1988622253 * (((a1 | 0x41099A5B) - a1 + (a1 & 0xBEF665A4)) ^ 0xB711DAFB);
  __asm { BRAA            X2, X17 }
}

uint64_t sub_22B3B63C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37
  }
                                                       + 8
                                                       * (((a37 == 326024231) * (137 * (a7 ^ (a7 - 5)) - 588)) ^ (v38 + a7 - 839))))(a1, a10);
  if (a17 != 1) {
    JUMPOUT(0x22B3B653CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37
                                                                       + 8
                                                                       * ((391 * (a37 != 326024231)) ^ (v38 + a7 - 808))))(a1, a2, a3, a10);
}

uint64_t sub_22B3B656C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v14 + ((((v16 - 136) | 0x6A106AF4) - ((v16 - 136) & 0x6A106AF4)) ^ 0x80075D00) * v13 + 1598;
  *(void *)(v16 - 112) = v15;
  *(void *)(v16 - 128) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v14 ^ 0xB7B)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((924 * (*(_DWORD *)(v16 - 136) - 1678219540 < (v14 ^ 0xA69u) - 924535234)) ^ v14)))(v17);
}

void sub_22B3B6618()
{
}

void sub_22B3B6620(unsigned char *a1@<X8>)
{
  a1[16] = *a1 ^ v1[16];
  a1[17] = a1[1] ^ v1[17];
  a1[18] = a1[2] ^ v1[18];
  a1[19] = a1[3] ^ v1[19];
  a1[20] = a1[4] ^ v1[20];
  a1[21] = a1[5] ^ v1[21];
  a1[22] = a1[6] ^ v1[22];
  a1[23] = a1[7] ^ v1[23];
  a1[24] = a1[8] ^ v1[24];
  a1[25] = a1[9] ^ v1[25];
  a1[26] = a1[10] ^ v1[26];
  a1[27] = a1[11] ^ v1[27];
  a1[28] = a1[12] ^ v1[28];
  a1[29] = a1[13] ^ v1[29];
  a1[30] = a1[14] ^ v1[30];
  a1[31] = a1[15] ^ v1[31];
  JUMPOUT(0x22B34485CLL);
}

uint64_t sub_22B3B6734()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8 * (((((v2 - 291) ^ 0x41D) + ((v2 - 291) | 0xE)) * (v0 == v1)) ^ v2)))(2332161312);
}

void sub_22B3B677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x370]) = v8;
  LODWORD(STACK[0x4CC]) = v10;
  LODWORD(STACK[0x338]) = v9;
  LODWORD(STACK[0x468]) = v11;
  LODWORD(STACK[0x3CC]) = 1363996449;
  uint64_t v15 = *(void *)(a7 + 568);
  int v16 = *(_DWORD *)(v15 - 0x2970AB8229FC3CD6);
  LODWORD(STACK[0x4A4]) = v7;
  *(_DWORD *)(v15 - 0x2970AB8229FC3CD6) = (v16 ^ v13)
                                          + ((v13 + (v12 ^ 0x8AC) - 3155) ^ v7)
                                          + v13
                                          - (v14 & (2 * ((v16 ^ v13) + ((v13 + (v12 ^ 0x8AC) - 3155) ^ v7))));
  JUMPOUT(0x22B3B6808);
}

uint64_t sub_22B3B68E8@<X0>(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((*(unsigned __int8 *)(a1 + 2) - 72) ^ v5)
                                 + v3
                                 + ((v4 + ((a2 - 903) | 0x388) - 1004) & (2 * (*(unsigned __int8 *)(a1 + 2) - 72))) != a3)
                                * (((a2 + 1061) | 0x280) - 2697)) ^ a2)))();
}

uint64_t sub_22B3B6940@<X0>(uint64_t a1@<X8>)
{
  return sub_22B37564C(a1);
}

uint64_t sub_22B3B69C4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v2 - 2080028927 >= ((v0 - 2166) | 0x191u) - 399) * (v0 - 2169)) ^ v0)))();
}

uint64_t sub_22B3B6A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * (((v6 + v5 - 1874716158 < (((v7 - 3524) | 0x5F6) ^ 0x5FEu))
                                                                                           * ((v7 ^ 0x197) - 3123)) ^ v7)))(a1, a2, a3, a4, a5, 2554828612);
}

uint64_t sub_22B3B6A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  LOBYTE(STACK[0xBF8]) = v48 + ((v47 - 5) | 8) + 0x80 - 93;
  unsigned int v51 = 1503746353 * ((((v45 ^ 0x8A000200 | 0x61FBDDD2) ^ 0xFFFFFFFE) - (v45 ^ 0x60FB5502 | 0x9E04222D)) ^ 0x33656A4B);
  v49[394] = a33;
  *(_DWORD *)(v50 - 152) = v51 + 1331781508;
  *(_DWORD *)(v50 - 128) = v47 - v51 + 1124;
  v49[395] = v46;
  (*(void (**)(uint64_t))(a6 + 8 * (v47 + 3500)))(v50 - 152);
  v49[393] = v46;
  v49[394] = a44 + 16 * (int)v48 - 303524688;
  *(_DWORD *)(v50 - 136) = (v47 - 175) ^ (731811679 * ((v45 - 642225602 - 2 * (v45 & 0xD9B86A3E)) ^ 0x904ECC7A));
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(a45 + 8 * (v47 + 3510)))(v50 - 152);
  return (*(uint64_t (**)(uint64_t))(a45 + 8 * (v47 ^ (19 * (v48 != 1629583037)))))(v52);
}

uint64_t sub_22B3B6BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v47 = STACK[0x464];
  int v48 = 1948972247
      * ((2 * (((v45 - 192) ^ 0xCB0B56D6) & 0x4190AA34) - ((v45 - 192) ^ 0xCB0B56D6) - 1099999798) ^ 0xC0FAF6F2);
  v42[34] = a36;
  v42[37] = a37;
  v42[38] = a42;
  *(_DWORD *)(v45 - 172) = v43 - v48 + 518;
  *(_DWORD *)(v45 - 168) = v48 + a39 - 2 * (((v43 + 2415) ^ 0xC5D) & a39 ^ (a39 + 1145692544) & 0x5B76BCFF) - 1614766479;
  *(_DWORD *)(v45 - 176) = v47 + v48 + (((v43 + 32) | 0x802) ^ 0xFC71D7FE);
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v43 + 3441)))(v45 - 192);
  unint64_t v50 = STACK[0x270];
  int v51 = *(_DWORD *)(v45 - 192);
  LODWORD(STACK[0x290]) = v51;
  return (*(uint64_t (**)(uint64_t))(v50 + 8 * ((368 * (v51 == v44)) ^ v43)))(v49);
}

uint64_t sub_22B3B6CE0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3421 * (v2 + 1 == v4 + 64)) ^ a2)))();
}

uint64_t sub_22B3B6D98@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  a5 = a1;
  a6 = a2;
  a3 = v7 - 1292559617 * ((&a3 + 357302662 - 2 * ((unint64_t)&a3 & 0x154C0186)) ^ 0xB21F69EF) + 173;
  uint64_t v8 = (*(uint64_t (**)(int *))(v6 + 8 * (v7 ^ 0x11AD)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * (((a4 != -604050357) * (2 * (v7 + 1471) - 3692)) ^ v7)))(v8);
}

void sub_22B3B6E30()
{
  *v0 ^= STACK[0x268];
  JUMPOUT(0x22B3B6E58);
}

uint64_t sub_22B3B6EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * ((75
                                                                                 * ((((v5 - 1174) ^ (a5 < ((v5 + 696) ^ 0xE5Au))) & 1) == 0)) ^ v5)))(a1, a2, a3, a4, 0);
}

void sub_22B3B6EE4()
{
}

uint64_t sub_22B3B6EF0@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (a2
                               + a1
                               + (((~(a3 == v3) + 2 * (a3 == v3) == -1) ^ (a2 + a1) ^ 0x4B) & 1)
                               - 570)))();
}

void sub_22B3B6F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  *(_DWORD *)(a60 + 392) = 1187837913;
  int v68 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, void, void, uint64_t, unint64_t *, unint64_t *))(v67 + 8 * (v60 ^ 0x1CD6)))(v63, 3, &STACK[0x2E4], *(void *)(a7 + 24), (v64 - 1801476204), a6, &STACK[0x4F0], &STACK[0x420]);
  unint64_t v69 = STACK[0x270];
  unsigned int v70 = ((2 * v68) & 0xBD9EBB7C) + (v68 ^ 0x5ECF5DBE);
  LODWORD(STACK[0x378]) = v70 - 302663698;
  unint64_t v71 = STACK[0x278];
  if (v70 != 1590648254)
  {
    if (v70 == 1859083713)
    {
      LODWORD(STACK[0x36C]) = 604092275;
    }
    else
    {
      int v73 = 225134719 * ((v66 + 1704572842 - 2 * ((v66 - 192) & 0x6599B86A)) ^ 0x7369FD40);
      STACK[0x1940] = a30;
      *(_DWORD *)(v66 - 184) = v70 - v73 - ((2 * (v70 - 302663698) + 1718998184) & 0xB7FDD896) + 2100268685;
      *(_DWORD *)(v66 - 180) = (v71 + 766) ^ v73;
      (*(void (**)(uint64_t))(v69 + 8 * ((int)v71 + 951)))(v66 - 192);
    }
    JUMPOUT(0x22B3A1774);
  }
  LODWORD(STACK[0x4AC]) = 2094922313;
  LODWORD(STACK[0x4FC]) = (LODWORD(STACK[0x420]) ^ 0x6BE9FC6F) - 9020419 + ((2 * LODWORD(STACK[0x420])) & 0xD7D3F8DE);
  STACK[0x300] = v62;
  STACK[0x3D0] = v61;
  uint64_t v72 = (char *)&STACK[0x560] + v65 - 0x3D63BD92DA195902;
  STACK[0x388] = (unint64_t)v72;
  STACK[0x4D8] = (unint64_t)&STACK[0x560] + v65 - 0x18AD76611472D55BLL;
  *(void *)uint64_t v72 = 0x6370646600;
  v72[8] = 1;
  JUMPOUT(0x22B3B70E8);
}

uint64_t sub_22B3B7470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v52
                                                                                         + 8
                                                                                         * ((v51 != v51 + a8 - 3147 - 24) ^ (a8 - 895))))(a51, 4294967223, 0xFFB55154A6C5F289, a4, 2112);
}

uint64_t sub_22B3B74C0()
{
  return sub_22B3B74D8(208);
}

uint64_t sub_22B3B74D8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v7 = (char *)(v2 + 4 * v5);
  int8x16x4_t v10 = vld4q_s8(v7);
  uint64_t v8 = (char *)(v2 + ((4 * v5) | 0x40));
  v11.val[0] = v10.val[3];
  v11.val[1] = v10.val[2];
  int8x16x4_t v12 = vld4q_s8(v8);
  v11.val[2] = v10.val[1];
  v11.val[3] = v10.val[0];
  v10.val[0] = v12.val[3];
  v10.val[1] = v12.val[2];
  v10.val[2] = v12.val[1];
  v10.val[3] = v12.val[0];
  vst4q_s8(v7, v11);
  vst4q_s8(v8, v10);
  return (*(uint64_t (**)(void))(a2 + 8 * (((v6 + v5 == v3) * a1) ^ (v4 + 1942))))();
}

uint64_t sub_22B3B753C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x19157D3ABD2659CELL) + 1845707427;
  unsigned int v4 = *(_DWORD *)(v1 - 0x19157D3ABD2659D2) + 1222691392;
  BOOL v5 = v3 < 0xA01ED367;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v2 - 140) | 0xC1u) - 1608593002) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((93 * v7) ^ v2)))();
}

void sub_22B3B75DC()
{
}

uint64_t sub_22B3B783C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 | 0x782) ^ 0x161) + 1301) ^ 0x45B)
                                * (((2 * v1) & 0x7BF4DA7A ^ 0x71F4504A) + (v1 ^ 0x8700559A) + 1534066399 == 426404892)) ^ (v0 | 0x782))))();
}

void sub_22B3B78B4()
{
}

uint64_t sub_22B3B78BC@<X0>(int a1@<W8>)
{
  int v6 = *(_DWORD *)(v3 + 4 * (v1 + v4)) ^ 0xB8F0A5D ^ ((*(_DWORD *)(v3 + 4 * (v1 + v4)) >> 30)
                                                                    + 193923677
                                                                    - ((*(_DWORD *)(v3 + 4 * (v1 + v4)) >> 29) & 2));
  *(_DWORD *)(v3 + 4 * (v1 + 1 + v4)) = 1242235479
                                                      - v1
                                                      + (*(_DWORD *)(v3 + 4 * (v1 + 1 + v4)) ^ 0x545237C8 ^ (1566083941 * v6 + 1414674376 - ((-1162799414 * v6) & 0xA8A46F90)));
  unint64_t v7 = 1328090399 * ((((v5 - 152) | 0xE6F04B01A45078ELL) - ((v5 - 152) & 0xE6F04B01A45078ELL)) ^ 0xD770838CE59663B4);
  uint64_t v8 = v5 - 152;
  *(void *)(v8 + 24) = v7 + 1892318653;
  *(_DWORD *)(v5 - 120) = -1328090399 * ((((v5 - 152) | 0x1A45078E) - ((v5 - 152) & 0x1A45078E)) ^ 0xE59663B4);
  *(void *)(v8 + 40) = (v1 + 650083175) ^ v7;
  *(_DWORD *)(v5 - 136) = v7 ^ (a1 - 1055732104) ^ 0xE5;
  *(_DWORD *)(v5 - 152) = ((a1 - 1055732104) ^ 0x31) - v7;
  *(_DWORD *)(v5 - 148) = -1533762316 - v7 + a1;
  *(_DWORD *)(v5 - 144) = a1 - 1055732104 - v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1765)))(v5 - 152);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 140)))(v9);
}

uint64_t sub_22B3B7A24@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,_DWORD *a54)
{
  LODWORD(STACK[0x36C]) = v54;
  *(void *)(a1 + 24) = v55;
  return (*(uint64_t (**)(void))(v56 + 8 * ((507 * (((a2 + 1) ^ (*a54 == a2 - 1274)) & 1)) ^ a2)))();
}

uint64_t sub_22B3B7A6C(uint64_t a1, int a2, uint64_t a3, char a4)
{
  BOOL v7 = v5 == (((14 * (v4 ^ a2)) ^ a4) - 53);
  return (*(uint64_t (**)(void))(v6 + 8 * (v7 | (32 * v7) | (14 * (v4 ^ a2)))))();
}

uint64_t sub_22B3B7A9C(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((510 * (((5 * (a1 ^ 0x9D)) ^ (((a1 - 2770) & v1) == 0)) & 1)) ^ a1)))();
}

uint64_t sub_22B3B7ADC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 + 717704874) & 0xD538A43A) + 20) * (v2 == a1)) ^ v1)))();
}

uint64_t sub_22B3B7B20()
{
  return (*(uint64_t (**)(uint64_t, void))(v3
                                                    + 8
                                                    * ((94
                                                      * ((((unint64_t)(v4 - v0 + 4) < 0x20) ^ (v2 + 8)) & 1)) ^ (v2 + 1650))))(v1, (v2 + 263) | 0x204u);
}

uint64_t sub_22B3B7B68@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ 0xCF6) - 2843) * (a1 != 0)) ^ v1)))();
}

void sub_22B3B7BA8()
{
  int v1 = *(unsigned char **)(v0 - 248);
  *(unsigned char *)(v0 - 176) = *v1;
  *(unsigned char *)(v0 - 175) = v1[1];
  *(unsigned char *)(v0 - 174) = v1[2];
  *(unsigned char *)(v0 - 173) = v1[3];
  *(unsigned char *)(v0 - 172) = v1[4];
  *(unsigned char *)(v0 - 171) = v1[5];
  *(unsigned char *)(v0 - 170) = v1[6];
  *(unsigned char *)(v0 - 169) = v1[7];
  *(unsigned char *)(v0 - 168) = v1[8];
  *(unsigned char *)(v0 - 167) = v1[9];
  *(unsigned char *)(v0 - 166) = v1[10];
  *(unsigned char *)(v0 - 165) = v1[11];
  *(unsigned char *)(v0 - 164) = v1[12];
  *(unsigned char *)(v0 - 163) = v1[13];
  *(unsigned char *)(v0 - 162) = v1[14];
  *(unsigned char *)(v0 - 161) = v1[15];
  JUMPOUT(0x22B387D54);
}

uint64_t sub_22B3B7C50@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((4 * a2) ^ 0x17B4) + 753) * (v2 == a1)) ^ a2)))();
}

void sub_22B3B7C8C()
{
}

void sub_22B3B7CC0()
{
}

void sub_22B3B7D08()
{
  *(unsigned char *)(v1 + 1) = 47;
  *uint64_t v0 = 0;
  JUMPOUT(0x22B3B7DA8);
}

void sub_22B3B7DEC()
{
}

void sub_22B3B7DF8(_DWORD *a1)
{
  *((unsigned char *)a1 + v1 + 4) = 115;
  sub_22B33A0C4(a1);
}

uint64_t sub_22B3B7E24()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (v1 | (32 * ((v0 ^ 0x26u) >= ((v1 - 1261) | 0x820) + 122 * (v1 ^ 0x58Cu) - 3084)))))();
}

uint64_t sub_22B3B7E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36)
{
  return (*(uint64_t (**)(void))(v36 + 8 * ((3074 * (a36 == ((v37 - 1998447211) & 0x771DE636) + 1323515105)) | v37)))();
}

uint64_t sub_22B3B7EB8(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  int8x16x4_t v10 = (char *)&STACK[0x560] + v8 - 0x3D63BD92DA196282;
  *(_DWORD *)int8x16x4_t v10 = 1792869030;
  *((void *)v10 + 1) = 0;
  *((_DWORD *)v10 + 4) = 1601403797;
  *((_DWORD *)v10 + 6) = 1801476204;
  *((void *)v10 + 4) = 0;
  *((_DWORD *)v10 + 10) = 1801476204;
  STACK[0x2A8] = (unint64_t)(v10 + 40);
  *((void *)v10 + 6) = 0;
  a8[59] = v10 + 48;
  *((_DWORD *)v10 + 14) = 1801476204;
  a8[44] = v10 + 56;
  *((void *)v10 + 8) = 0;
  a8[35] = v10 + 64;
  *((_DWORD *)v10 + 18) = 1801476204;
  *a8 = v10 + 72;
  *((void *)v10 + 10) = 0;
  STACK[0x2B8] = (unint64_t)(v10 + 80);
  v10[88] = 77;
  *(_DWORD *)(v9 - 0x24B64731C5A68327) = 1792869030;
  *(__n128 *)(v9 - 0x24B64731C5A68323) = a2;
  *(_DWORD *)(v9 - 0x24B64731C5A68313) = 0;
  STACK[0x218] = (unint64_t)(v10 + 0x70D52A7E711E505ELL);
  *(_DWORD *)(v9 - 0x24B64731C5A6830FLL) = 1801476204;
  *(_DWORD *)(v9 - 0x24B64731C5A6830BLL) = 1968439266;
  *(__n128 *)(v9 - 0x24B64731C5A68173) = a2;
  *(__n128 *)(v9 - 0x24B64731C5A68163) = a2;
  *(void *)(v9 - 0x24B64731C5A68153) = 0;
  strcpy((char *)(v9 - 0x24B64731C5A67EBFLL), "********************");
  *(unsigned char *)(v9 - 0x24B64731C5A67EAALL) = 0;
  *(_WORD *)(v9 - 0x24B64731C5A67EA9) = 0;
  *(_DWORD *)(v9 - 0x24B64731C5A6823FLL) = 1968439266;
  *(void *)(v9 - 0x24B64731C5A67EA7) = 0;
  *(void *)(v9 - 0x24B64731C5A67E9FLL) = 0;
  return sub_22B3B80D8(a1, 87, 3142240957);
}

uint64_t sub_22B3B80D8@<X0>(int a1@<W1>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v8 = (__n128 *)(v4 + a2);
  *uint64_t v8 = a3;
  v8[1] = a3;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v3 + 357) | v5) ^ v6) + a2 == 256) * a1) ^ v3)))();
}

uint64_t sub_22B3B810C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v48 = v47 - 152;
  *(_DWORD *)(v47 - 144) = (v45 + 1935319834) ^ (1328090399
                                               * ((((v47 - 152) ^ 0x68C861B1 | 0x28E6F169)
                                                 - ((v47 - 152) ^ 0x68C861B1)
                                                 + (((v47 - 152) ^ 0x68C861B1) & 0xD7190E90)) ^ 0xBFFDF4E2));
  v46[393] = a25;
  (*(void (**)(uint64_t))(a6 + 8 * (v45 ^ 0xDFE)))(v47 - 152);
  int v49 = v45 + 1107;
  unsigned int v50 = 1503746353 * ((~(v48 | 0x801ED42D) + (v48 & 0x801ED42D)) ^ 0x5980E964);
  v46[395] = a25;
  *(_DWORD *)(v47 - 152) = v50 + 1331781556;
  *(_DWORD *)(v47 - 128) = v45 + 1107 - v50;
  v46[394] = (char *)*(&off_26DE9F480 + v45 - 234) - 4;
  uint64_t v51 = 8 * (v45 + 3483);
  (*(void (**)(uint64_t))(a45 + v51))(v47 - 152);
  int v52 = 1503746353 * (((v48 | 0x7B180FCF) - (v48 & 0x7B180FCF)) ^ 0x5D79CD79);
  v46[395] = a25;
  v46[394] = a31;
  *(_DWORD *)(v47 - 152) = v52 + 1331781512;
  *(_DWORD *)(v47 - 128) = v49 - v52;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(a45 + v51))(v47 - 152);
  return sub_22B3B82B0(v53);
}

uint64_t sub_22B3B82B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v10 + 2832) = *(void *)(v10 + 2744);
  LODWORD(STACK[0xC68]) = STACK[0xC10];
  *(void *)(v6 + 2844) = *(void *)(v6 + 2756);
  LODWORD(STACK[0xC74]) = STACK[0xC1C];
  *uint64_t v7 = *(_OWORD *)((char *)v7 - 88);
  return (*(uint64_t (**)(void))(a6 + 8 * (((v8 == 1528) * v9) ^ v8)))();
}

uint64_t sub_22B3B8308@<X0>(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W3>, uint64_t a3@<X5>, unint64_t a4@<X7>, unsigned __int8 a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(void))
{
  char v14 = *(unsigned char *)(STACK[0xAF8] + (*(unsigned __int8 *)(a3 - 16) ^ a4));
  *(unsigned char *)(a3 - 16) = v14 - ((2 * v14) & 0x55) + 42;
  char v15 = *(unsigned char *)(STACK[0xB38] + (*(unsigned __int8 *)(a3 - 12) ^ a4));
  *(unsigned char *)(a3 - 12) = v15 - ((2 * v15) & 0x55) + 42;
  *(unsigned char *)(a3 - 8) = *(unsigned char *)(STACK[0xB78] + v13) - ((2 * *(unsigned char *)(STACK[0xB78] + v13)) & 0x55) + 42;
  *(unsigned char *)(a3 - 4) = *(unsigned char *)(STACK[0xBB8] + a2) - ((2 * *(unsigned char *)(STACK[0xBB8] + a2)) & 0x55) + 42;
  char v16 = *(unsigned char *)(STACK[0xBC8] + (v12 ^ a4));
  *(unsigned char *)(a3 - 3) = v16 - ((2 * v16) & 0x55) + 42;
  char v17 = *(unsigned char *)(STACK[0xB88] + (*(unsigned __int8 *)(a3 - 11) ^ a4));
  *(unsigned char *)(a3 - 7) = v17 - ((2 * v17) & 0x55) + 42;
  char v18 = *(unsigned char *)(STACK[0xB48] + (*(unsigned __int8 *)(a3 - 15) ^ a4));
  *(unsigned char *)(a3 - 11) = v18 - ((2 * v18) & 0x55) + 42;
  char v19 = *(unsigned char *)(STACK[0xB08] + (a5 ^ a4));
  *(unsigned char *)(a3 - 15) = v19 - ((2 * v19) & 0x55) + 42;
  uint64_t v20 = *(unsigned __int8 *)(a3 - 14);
  char v21 = *(unsigned char *)(STACK[0xB18] + (a1 ^ a4));
  *(unsigned char *)(a3 - 14) = v21 - ((2 * v21) & 0x55) + 42;
  *(unsigned char *)(a3 - 6) = *(unsigned char *)(STACK[0xB98] + (v20 ^ a4)) - ((2 * *(unsigned char *)(STACK[0xB98] + (v20 ^ a4))) & 0x55) + 42;
  uint64_t v22 = *(unsigned __int8 *)(a3 - 10);
  char v23 = *(unsigned char *)(STACK[0xB58] + (*(unsigned __int8 *)(a3 - 2) ^ a4));
  *(unsigned char *)(a3 - 10) = v23 - ((2 * v23) & 0x55) + 42;
  *(unsigned char *)(a3 - 2) = *(unsigned char *)(STACK[0xBD8] + (v22 ^ a4)) - ((2 * *(unsigned char *)(STACK[0xBD8] + (v22 ^ a4))) & 0x55) + 42;
  uint64_t v24 = *(unsigned __int8 *)(a3 - 13);
  char v25 = *(unsigned char *)(STACK[0xB28] + (*(unsigned __int8 *)(a3 - 9) ^ a4));
  *(unsigned char *)(a3 - 13) = v25 - ((2 * v25) & 0x55) + 42;
  char v26 = *(unsigned char *)(STACK[0xB68] + (*(unsigned __int8 *)(a3 - 5) ^ a4));
  *(unsigned char *)(a3 - 9) = v26 - ((2 * v26) & 0x55) + 42;
  char v27 = *(unsigned char *)(STACK[0xBA8] + (*(unsigned __int8 *)(a3 - 1) ^ a4));
  *(unsigned char *)(a3 - 5) = v27 - ((2 * v27) & 0x55) + 42;
  *(unsigned char *)(a3 - 1) = *(unsigned char *)(STACK[0xBE8] + (v24 ^ a4))
                     + (~(2 * *(unsigned char *)(STACK[0xBE8] + (v24 ^ a4))) | 0xAB)
                     + 43;
  return a12();
}

void sub_22B3B8550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = 731811679 * ((((v23 - 144) | 0x339643A7) + (~(v23 - 144) | 0xCC69BC58)) ^ 0x7A60E5E2);
  *(_DWORD *)(v23 - 120) = (a20 - 1013350402 + ((v20 - 3040) | 0x100)) ^ v24;
  *(_DWORD *)(v23 - 140) = (v20 - 742) ^ v24;
  *(void *)(v23 - 136) = v22;
  *(void *)(v23 - 128) = a9;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 ^ 0x205)))(v23 - 144);
  JUMPOUT(0x22B330B3CLL);
}

void sub_22B3B85DC()
{
}

uint64_t sub_22B3B8704(uint64_t a1, int a2, double a3)
{
  *(double *)(v4 + a1) = a3;
  BOOL v9 = v5 == a1;
  uint64_t v10 = a1 + 8;
  int v11 = v9;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((v7 & ~(v6 ^ v11)) * a2) ^ v3)))(v10);
}

uint64_t sub_22B3B8730()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((8 * v0) ^ 0x5EA8) + 93967383) & 0xFA66249E ^ 0x3E6)
                                     * (*(unsigned char *)(*(void *)(v1 + 64) + 1) == 43)) ^ v0)))();
}

uint64_t sub_22B3B8788@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2690 * (((v2 - 1459193430) & 0x56F98BBF) - 2695 == v1)) ^ v2)))();
}

uint64_t sub_22B3B87CC@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((2740 * (a2 + 1 == v2 + 32)) ^ a1)))();
}

void sub_22B3B88A4()
{
}

uint64_t sub_22B3B88AC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v11 = a2 + 2;
  uint64_t v12 = v6 - 2;
  *(unsigned char *)(v12 + v7) = ((v2 + v11) ^ v8) * (v5 + v11);
  *(unsigned char *)(v12 + 126) = ((v4 + v11) ^ v8) * (v3 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v11 == 126) * a1) ^ v9)))();
}

void sub_22B3B88B8()
{
}

uint64_t sub_22B3B88C0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((v1 - 297198888 >= (((v2 & 0x8D163E5F) - 1180) ^ 0xFFFFF88C))
                                     * ((((v2 & 0x8D163E5F) - 2907) | 0x100) - 392)) ^ v2 & 0x8D163E5F)))();
}

void sub_22B3B8910(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_22B3B8984(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_22B324C80(a1, a2, a3, a4, a5, v5 + v6 + v7 + 551873590);
}

uint64_t sub_22B3B899C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (((((v1 + 1506) | 0x520) - 3249) * (v2 == 0x27D15D58)) ^ v1)))(a1, 1810840426);
}

void sub_22B3B89E8()
{
}

uint64_t sub_22B3B8AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v9
                                                                                       + 8
                                                                                       * ((((((a8 - 816) ^ ((v8 & 8) == 0)) & 1) == 0)
                                                                                         * ((a8 ^ 0x4D) - 1038)) ^ a8)))(a1, a2, a3, a4, (a8 - 816) | 0x80u, (a3 - a4));
}

uint64_t sub_22B3B8B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x4D0] = v6;
  return sub_22B331E40(a1, a2, a3, a4, a5, a6, (uint64_t)&STACK[0x310]);
}

uint64_t sub_22B3B8B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((206 * (v8 + 1 != v10 + 20)) ^ a7)))(v7);
}

void sub_22B3B8BF0()
{
}

uint64_t sub_22B3B8C9C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((v0 - 1928806842) & 0x72F73F3D ^ 0x66D) * (*(void *)(v2 - 200) == 0)) ^ v0)))();
}

uint64_t sub_22B3B8CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v12 = v10 + 1277960388;
  if ((v10 + 1277960388) <= 0x40) {
    int v12 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((35 * ((a3 - v8 - v9 + v12 + 2037) > 0xE)) ^ 0xA0Eu)))(-v9, 64, a3, 3703451895, a5, a6, a7, a8);
}

uint64_t sub_22B3B8D6C()
{
  return sub_22B3B8D88();
}

uint64_t sub_22B3B8D88()
{
  *(_DWORD *)(*v1 - 0x24B64731C5A67D97) = ((v3 - 48759491) & 0x67ED5FFF ^ 0xB55283CB) + v2;
  *(void *)(*v1 - 0x24B64731C5A6811FLL) = *v0 + 1;
  return 0;
}

uint64_t sub_22B3B8DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14, unsigned int a15, unint64_t *a16, uint64_t a17)
{
  unsigned int v20 = 1328090399 * ((2126990158 - (&a12 | 0x7EC74B4E) + (&a12 | 0x8138B4B1)) ^ 0x7EEBD08B);
  a15 = v20 ^ 0x881FFD3C;
  a16 = &STACK[0x25ABA05A3795B0FA];
  a17 = a11;
  a12 = (v19 - 1653801862) ^ v20;
  a13 = 1754467479 - v20;
  uint64_t v21 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 3107)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)(((a14 == v17)
                                                   * (((v19 + 275) | 0x200) ^ (v19 + 1128302920) & 0xBCBF7BEF ^ 0x805)) ^ v19)))(v21);
}

void sub_22B3B8EF0()
{
}

uint64_t sub_22B3B8EF8(uint64_t result)
{
  unsigned int v1 = (*(unsigned char *)(result + 4) + ((16 - (result | 0x10) + (result | 0xEF)) ^ 0xAA)) - 96;
  BOOL v2 = v1 > 8;
  int v3 = (1 << v1) & 0x105;
  if (v2 || v3 == 0) {
    int v5 = 604091428;
  }
  else {
    int v5 = -604050357;
  }
  *(_DWORD *)(result + 8) = v5;
  return result;
}

void sub_22B3B8F64(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v1 = 2009815553 * (a1 ^ 0xF10B2E45);
  int v2 = *(_DWORD *)(a1 + 32) - v1;
  uint64_t v3 = *(void *)a1;
  unsigned int v4 = 1948972247 * (((&v8 | 0xB30200AF) - (&v8 & 0xB30200AF)) ^ 0x69CF541);
  unsigned int v5 = ((65859449 * (*(_DWORD *)(a1 + 48) - v1) + 488755764) ^ 0x777FDDFE)
     + v4
     + ((2 * (65859449 * (*(_DWORD *)(a1 + 48) - v1) + 488755764)) & 0xEEFFBBFC);
  unsigned int v6 = (*(_DWORD *)(a1 + 36) - v1) ^ 0xB17FC1F8;
  int v9 = &STACK[0x66E6F27BEAA16F09];
  int v11 = v2 - v4 + 510;
  unsigned int v12 = v4 + v6;
  unsigned int v10 = v5 - 876677424;
  unsigned __int8 v13 = &STACK[0x134091E9BEE09534];
  uint64_t v14 = v3;
  uint64_t v7 = (char *)*(&off_26DE9F480 + (v2 ^ 0x386)) - 8;
  (*(void (**)(int *))&v7[8 * (v2 ^ 0x12B9)])(&v8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_22B3B9110()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((((v1 - 460528336) & 0x1B731EF3) - 2283) | 4) ^ 0x7B6) * (v0 == v2)) ^ (v1 - 460528336) & 0x1B731EF3)))();
}

uint64_t sub_22B3B9154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47
                                                                                + 8
                                                                                * ((56
                                                                                  * (v46 == v46 + (a8 ^ 0xC49) - 4 - 38)) ^ (a8 + 756))))(a1, a46, a3, a4, 4294967223);
}

uint64_t sub_22B3B91A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  unsigned int v15 = (a12 ^ v12) - ((2 * (a12 ^ v12)) & 0xBBD5D166) + 1575676083;
  BOOL v16 = (((v13 - 912) | 6) ^ (2 * v15) & 0xDF7BCBFC ^ 0x9B51C35A) + (v15 ^ 0x32570D4D) - 134578188 != 1740137970;
  return (*(uint64_t (**)(void))(v14 + 8 * (((8 * v16) | (16 * v16)) ^ v13)))();
}

uint64_t sub_22B3B9230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((7 * (((a8 >> 4 == 157245312) ^ (81 * (a5 ^ 0xAD))) & 1)) ^ a5)))();
}

uint64_t sub_22B3B9274(_DWORD *a1)
{
  unsigned int v2 = *a1 ^ (1292559617 * ((a1 + 1433560265 - 2 * (a1 & 0x557264C9)) ^ 0xF2210CA0));
  uint64_t result = (*((uint64_t (**)(char *, void (*)()))*(&off_26DE9F480 + (int)(v2 ^ 0x9B42BAC7))
            + (int)(v2 + 1690129486)
            - 1))((char *)*(&off_26DE9F480 + (v2 & 0x402C00C9)) - 12, sub_22B34D68C);
  int v4 = *(_DWORD *)*(&off_26DE9F480 + (int)(v2 ^ 0x9B42BAB1));
  if (result) {
    int v4 = 604092149;
  }
  a1[1] = v4;
  return result;
}

void sub_22B3B9354(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  int8x16x4_t v59 = *(unsigned int **)(v57 + 8 * (a1 ^ 0xC2C));
  int v60 = *(void **)(v57 + 8 * (a1 ^ 0xDB6));
  uint64_t v61 = *v59;
  unint64_t v62 = (unsigned char *)*v60;
  a24 = *(unsigned char *)*v60 - 30;
  a25 = v62[1] - 30;
  a26 = v62[2] - 30;
  a27 = v62[3] - 30;
  a28 = v62[4] - 30;
  a29 = v62[5] - 30;
  a30 = v62[6] - 30;
  a31 = v62[7] - 30;
  a32 = v62[8] - 30;
  a33 = v62[9] - 30;
  a34 = v62[10] - 30;
  a35 = v62[11] - 30;
  a36 = v62[12] - 30;
  a37 = v62[13] - 30;
  a38 = v62[14] - 30;
  a39 = v62[15] - 30;
  a40 = v62[16] - 30;
  a41 = v62[17] - 30;
  a42 = v62[18] - 30;
  a43 = v62[19] - 30;
  a44 = v62[20] - 30;
  a45 = v62[21] - 30;
  uint64_t v63 = (unsigned char *)*v60;
  a46 = v63[22] - 30;
  a47 = v63[23] - 30;
  a48 = v63[24] - 30;
  a49 = v63[25] - 30;
  a50 = v63[26] - 30;
  a51 = v63[27] - 30;
  a52 = v63[28] - 30;
  a53 = v63[29] - 30;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (a1 + 952)))(v61, &a24, v53);
  int v71 = ((2 * v64) & 0xFEBFFDF8) + (v64 ^ 0xFF5FFEFC);
  if (v71 == -10486020)
  {
    *(_DWORD *)(v58 + 384) |= (v55 - 1643) ^ 0x628;
    *(_DWORD *)(v58 + 84) = 1052621672;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (v55 ^ 0x1C9C)))(*v53, v58 + 372, v58 + 376, v58 + 380, v54);
    sub_22B3A3EBC();
  }
  else
  {
    if (v71 == -10484918)
    {
      uint64_t v72 = *v59;
      int v73 = **(unsigned char ***)(v57 + 8 * (v55 ^ 0xDF5));
      a4 = *v73 - 90;
      a5 = v73[1] - 90;
      a6 = v73[2] - 90;
      a7 = v73[3] - 90;
      a8 = v73[4] - 90;
      a9 = v73[5] - 90;
      a10 = v73[6] - 90;
      a11 = v73[7] - 90;
      a12 = v73[8] - 90;
      a13 = v73[9] - 90;
      a14 = v73[10] - 90;
      a15 = v73[11] - 90;
      a16 = v73[12] - 90;
      a17 = v73[13] - 90;
      a18 = v73[14] - 90;
      a19 = v73[15] - 90;
      a20 = v73[16] - 90;
      a21 = v73[17] - 90;
      a22 = v73[18] - 90;
      a23 = v73[19] - 90;
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (v55 ^ 0x1CD8)))(v72, &a4, v53);
      int v74 = (2 * v64) & 0xFEFFFAFC;
      int v71 = (v64 ^ 0xFF7FFD7E) + 2145267454;
    }
    else
    {
      int v74 = 2147364224;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56
                                                                                          + 8
                                                                                          * ((30
                                                                                            * (v71 + v74 == v55 + 2136874987)) ^ (v55 - 1643))))(v64, v65, v66, v67, v68, v69, v70);
  }
}

uint64_t sub_22B3B9704(__n128 a1)
{
  *uint64_t v3 = a1;
  v3[1] = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

uint64_t sub_22B3B9728(unsigned int a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a1 <= 0x30) {
    uint64_t v7 = 48;
  }
  else {
    uint64_t v7 = a1;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1285 * (v4 + v7 + (unint64_t)((a4 - 314) | 0xA44u) - 2667 + v6 < 0x40)) ^ ((a4 - 314) | 0xA44))))();
}

uint64_t sub_22B3B9838(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v10 = (v7 & 0x9770EFB7) + 105630278;
  *(void *)(a7 + 160) = (v10 ^ 0xFFFFFFFFF9B43087) + STACK[0x240];
  *(void *)(a7 + 376) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((7 * (((v8 > a1) ^ v10) & 1)) ^ v7 & 0x9770EFB7)))();
}

uint64_t sub_22B3B9914()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((938 * (v0 != 0)) ^ 0x1F8u)))();
}

uint64_t sub_22B3B993C(uint64_t a1, unsigned int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a4 - 2005) ^ 0xE48) - 2057) * (a2 > 0x1E)) ^ a4)))();
}

void sub_22B3B9970(uint64_t a1)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  int v1 = *(_DWORD *)(a1 + 16) - 731811679 * ((1995111358 - (a1 | 0x76EAFBBE) + (a1 | 0x89150441)) ^ 0xC0E3A205);
  uint64_t v7 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v31 = v2 - 0x1C88CB57747EAEE5;
  uint64_t v24 = v2 - 0x1C88CB57747EAEC9;
  uint64_t v28 = v2 - 0x1C88CB57747EAECDLL;
  uint64_t v36 = v2 - 0x1C88CB57747EAEE1;
  unint64_t v38 = ((unint64_t)v47 ^ 0xF7CFBFDBDFF76F3DLL)
      + 0x5978DC6FF74EDCE3
      + ((2 * (void)v47) & 0xEF9F7FB7BFEEDE70);
  uint64_t v45 = v2 + 0xCE7E02AB57D8E05;
  uint64_t v21 = v2 - 0x1C88CB57747EAEC5;
  uint64_t v18 = v2 - 0x1C88CB57747EAEF1;
  uint64_t v17 = v2 - 0x1C88CB57747EAEF0;
  uint64_t v16 = v2 - 0x1C88CB57747EAEEFLL;
  uint64_t v15 = v2 - 0x1C88CB57747EAEEELL;
  uint64_t v14 = v2 - 0x1C88CB57747EAEE9;
  uint64_t v13 = v2 - 0x1C88CB57747EAEEDLL;
  uint64_t v12 = v2 - 0x1C88CB57747EAEECLL;
  uint64_t v11 = v2 - 0x1C88CB57747EAEEBLL;
  uint64_t v10 = v2 - 0x1C88CB57747EAEEALL;
  char v25 = (char *)&v5 - 0x42CACC5D4F458676;
  uint64_t v5 = v2 - 0x1C88CB57AE66FE85;
  int v6 = v1 ^ 0x13C;
  int v40 = 1103 * (v1 ^ 0x97);
  int v39 = v1 + 1300228393;
  unsigned int v35 = ((v1 + 1300228393) & 0xB2801EDF) - 2057;
  unsigned int v9 = (v1 + 856014024) & 0xCCFA4BEE;
  int32x4_t v33 = vdupq_n_s32(0x5BFEEC5Bu);
  int32x4_t v34 = vdupq_n_s32(0x5BFEEC4Fu);
  int v46 = (v1 - 1412544694) & 0x5431BFBB;
  int v8 = 95 * (v1 ^ 0x90);
  int v20 = v1 + 514405567;
  int v19 = v1 ^ 0xF74;
  int v27 = 19 * (v1 ^ 0xC7);
  int v30 = v1 + 176487146;
  int v44 = v1 - 1533326042;
  int v32 = (v1 ^ 0x70E) - 1798;
  int v23 = v1 ^ 0xB60;
  int v37 = &v48;
  uint64_t v26 = 0x42CACC5D4F4588D6;
  uint64_t v41 = 0x42CACC5D4F4588D6;
  int v43 = v1;
  uint64_t v42 = v2 - 0x1C88CB57747EAF29;
  int32x4_t v29 = vdupq_n_s32(0xDBFEEC4B);
  uint64_t v3 = (char *)*(&off_26DE9F480 + (v1 ^ 0x1FF)) - 8;
  uint64_t v22 = *(void *)&v3[8 * v1];
  unsigned int v4 = *(_DWORD *)(v2 - 0x1C88CB57747EAEE5) & 0x3F ^ (3 * (v1 ^ 0x13C) - 1250);
  *(unsigned char *)(v2 - 0x1C88CB57747EAF29 + v4) = -86;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B3B9E0C()
{
  *uint64_t v2 = v7 ^ v4;
  uint64_t v10 = v8;
  int v9 = (v3 - 658) ^ (225134719
                   * ((379551908 - (&v9 | 0x169F80A4) + (&v9 | 0xE9607F5B)) ^ 0xFF903A71));
  (*(void (**)(int *))(v1 + 8 * (v3 + 892)))(&v9);
  uint64_t v10 = v6;
  int v9 = (v3 - 658) ^ (225134719 * ((&v9 + 467316494 - 2 * ((unint64_t)&v9 & 0x1BDAAF0E)) ^ 0xD2AEA24));
  uint64_t result = (*(uint64_t (**)(int *))(v1 + 8 * (v3 + 892)))(&v9);
  *(_DWORD *)(v0 + 20) = -604050357;
  return result;
}

uint64_t sub_22B3B9F34@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1 + 24) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 == 48) * v2) ^ v4)))();
}

uint64_t sub_22B3B9F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(v15 + (a7 + v12)) = *(unsigned char *)(v8 + ((a7 + v12) & 0xFLL)) ^ *(unsigned char *)(v7
                                                                                                + (a7 + v12)) ^ *(unsigned char *)((((_BYTE)a7 + (_BYTE)v12) & 0xF) + v9 + 4) ^ *(unsigned char *)(v10 + (((_BYTE)a7 + (_BYTE)v12) & 0xF)) ^ (-109 * ((a7 + v12) & 0xF));
  return (*(uint64_t (**)(void))(v14 + 8 * (((a7 - 1 == v11) * ((v13 + 1478) ^ 0x9A3)) ^ (v13 + 2495))))();
}

void sub_22B3B9FC8()
{
}

uint64_t sub_22B3B9FD8@<X0>(int a1@<W4>, uint64_t a2@<X5>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((*(_DWORD *)(*v5 + 4 * a3 + a2) == v4) * (((6 * (v6 ^ v7) - 1601) | a1) - 1420)) ^ (6 * (v6 ^ v7)))))();
}

void sub_22B3BA01C()
{
}

uint64_t sub_22B3BA064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v16 - 128) = v14
                         - 1734664879 * ((2 * ((v16 - 128) & 0x304B2F98) - (v16 - 128) + 1337249891) ^ 0x606FF879)
                         - 141;
  *(void *)(v16 - 120) = a14;
  *(void *)(v16 - 112) = &STACK[0x281D12643933BF53];
  (*(void (**)(uint64_t))(v15 + 8 * (v14 | 0xD28)))(v16 - 128);
  *(_DWORD *)(v16 - 112) = v14 + 1866394843 * ((v16 - 128) ^ 0xEA1737F4) + 2034;
  *(void *)(v16 - 120) = a14;
  *(void *)(v16 - 104) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 3357)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v16 - 128) > 0x64079912u)
                                              * ((v14 ^ 0x548) + 37 * (v14 ^ 0x2F3) - 3012)) ^ v14)))(v17);
}

uint64_t sub_22B3BA1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v13 = a11 + 622720576 + ((347 * (v12 ^ 0x3A9) + 67442965) & 0xFBFAEAEB) < 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v13) | (v13 << 6)) ^ v12)))();
}

uint64_t sub_22B3BA234@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  v8.i64[0] = 0x5454545454545454;
  v8.i64[1] = 0x5454545454545454;
  v9.i64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v9.i64[1] = 0x2A2A2A2A2A2A2A2ALL;
  *(int8x16_t *)(v3 + ((5 * ((2 * (a1 ^ 0x524)) ^ 0x8DBu) + 4294966930) & (a2 + v2))) = vaddq_s8(vsubq_s8(*v7, vandq_s8(vaddq_s8(*v7, *v7), v8)), v9);
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((31 * (((v4 + v5 - 3814) & 0x1FFFFFFF0) != 16)) ^ (2 * (a1 ^ 0x524)) ^ 0x1F)))();
}

uint64_t sub_22B3BA2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  LODWORD(STACK[0x36C]) = v61;
  return (*(uint64_t (**)(void))(v62
                              + 8 * ((435 * ((*(_DWORD *)(a60 + 392) - 1187837912) < 0xFFFFFFFE)) ^ v60)))();
}

void sub_22B3BA320()
{
}

uint64_t sub_22B3BA374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  *int v32 = v32[623];
  return (*(uint64_t (**)(void))(v34 + 8 * (((((a32 - 1821) | 0x40) + 627) * (v33 == 1)) ^ (a32 + 604))))();
}

uint64_t sub_22B3BA3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  return (*(uint64_t (**)(void))(a6
                              + 8
                              * (((a49 == (((v49 - 291) | 0x106) ^ 0x4EE345FB))
                                * (((v49 - 1159994772) & 0x45241F6E) - 1049)) ^ v49)))();
}

uint64_t sub_22B3BA414(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v11 = (v9 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1))) + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ v8) == ((v7 - a3) ^ a4)
     && (v4 + v5 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((2358 * v11) ^ v7)))();
}

void sub_22B3BA464()
{
}

uint64_t sub_22B3BA46C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (498 * ((unint64_t)(v1 - a1) < 0x20)))))();
}

uint64_t sub_22B3BA4AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((23 * (v0 < ((((2 * (v1 + 2496)) ^ 0x1ACA) + 117) ^ (v1 + 329)))) ^ (v1 + 2496))))();
}

uint64_t sub_22B3BA4E8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == v1 - 1082) * ((v1 ^ 0x124) - 1183)) ^ v1)))();
}

uint64_t sub_22B3BA518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (v18 ^ ((v17 == 0) | (4 * (v17 == 0))))))(a1, a2, a3, a4, (v18 + 1165825654) & 0xBA82E9BE, a6, a7, a8, a9, *(void *)(a1 + 8), a11, v16, a13, a14, a15, a16);
}

uint64_t sub_22B3BA570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v19 = v13 - v12;
  *(_DWORD *)(a10 - 0x6E3B751A40ADDC1) = -1763560952 - v14;
  int v20 = 1292559617 * ((((v18 - 136) | 0x9ED45453) - ((v18 - 136) & 0x9ED45453)) ^ 0x39873C3A);
  *(void *)(v18 - 136) = v15;
  *(_DWORD *)(v18 - 128) = (v17 + 4) ^ v20;
  *(_DWORD *)(v18 - 124) = v20 ^ 0x52EC3B2E;
  (*(void (**)(uint64_t))(v16 + 8 * (int)(v17 + 2509)))(v18 - 136);
  int v21 = 1948972247 * ((v18 + 811593514 - 2 * ((v18 - 136) & 0x305FEFB2)) ^ 0x85C11A5C);
  *(void *)(v18 - 128) = v15;
  *(_DWORD *)(v18 - 136) = (v17 + 1774) ^ v21;
  *(_DWORD *)(v18 - 132) = (v19 ^ 0xC2278866) - v21 + ((2 * v19) & 0xFB95F0C0 ^ 0x7B90E000) - 817905733;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x161E)))(v18 - 136);
  *(_DWORD *)(v18 - 136) = v17
                         - 1734664879
                         * (((((v18 - 136) | 0x22996E12) ^ 0xFFFFFFFE) - (~(v18 - 136) | 0xDD6691ED)) ^ 0xF2BDB9F7)
                         - 1010;
  *(void *)(v18 - 128) = a12;
  *(void *)(v18 - 120) = &STACK[0x281D12643933BF43];
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x9C7)))(v18 - 136);
  *(void *)(v18 - 128) = a12;
  *(void *)(v18 - 112) = v15;
  *(_DWORD *)(v18 - 120) = v17
                         + 1866394843 * ((((v18 - 136) | 0x24D6D79A) - ((v18 - 136) & 0x24D6D79A)) ^ 0xCEC1E06E)
                         + 1165;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0x9C8)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((99
                                              * (*(_DWORD *)(v18 - 136) - 1678219539 >= ((v17 + 661690804) & 0xD88F66F7 ^ 0xFA9F5E63))) ^ v17)))(v22);
}

void sub_22B3BA7DC()
{
}

uint64_t sub_22B3BA84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (int)(((~a18 + v19 - (unint64_t)(((a6 + v20 - 3452) ^ 0x8DB0999u) + v18) < 0x10)
                                     * ((v20 - 126404) & 0xAC7BFBFF ^ (a6 - 82))) ^ v20)))();
}

uint64_t sub_22B3BA8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((382
                                * (((v9 + 18) & 0x7F ^ 0xFEEED0F8) + ((2 * (v9 + 18)) & 0xF0) + 17903367 < ((a8 + 1914786479) & 0x8DDEA67E ^ 0x602))) ^ a8)))();
}

void sub_22B3BA930()
{
}

void sub_22B3BA940()
{
}

void sub_22B3BA984()
{
}

void sub_22B3BA990(uint64_t a1, char a2)
{
  int v2 = LOBYTE(STACK[0x2EC]) ^ 0x22;
  if (v2 == 1)
  {
    unsigned int v8 = STACK[0x2D0];
    unsigned int v9 = STACK[0x2CC];
    LOBYTE(STACK[0x2C4]) = ((8 * LOBYTE(STACK[0x2D0])) ^ 0xC8) - ((2 * ((8 * LOBYTE(STACK[0x2D0])) ^ 0xC8)) & 0x55) + 42;
    LOBYTE(STACK[0x2C5]) = ((v8 >> 5) ^ 0xB0) - 2 * (((v8 >> 5) ^ 0xB0) & 0x2B ^ ((v8 & 0x20) != 0)) + 42;
    LOBYTE(STACK[0x2C6]) = ((v8 >> 13) ^ 0x29) - ((2 * ((v8 >> 13) ^ 0x29)) & 0x55) + 42;
    char v6 = 84;
    LOBYTE(STACK[0x2C7]) = ((v8 >> 21) ^ 0x11) - ((v8 >> 20) & 0x54) + 42;
    HIDWORD(v10) = v9 ^ 6;
    LODWORD(v10) = v8 ^ 0x20000000;
    LOBYTE(STACK[0x2C8]) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0x55) + 42;
    LOBYTE(STACK[0x2C9]) = ((v9 >> 5) ^ 0x9D) - ((2 * ((v9 >> 5) ^ 0x9D)) & 0x55) + 42;
    LOBYTE(STACK[0x2CA]) = ((v9 >> 13) ^ 0xBD) - ((2 * ((v9 >> 13) ^ 0xBD)) & 0x55) + 42;
    unsigned int v5 = v9 >> 21;
    char v7 = (v9 >> 21) ^ 0x40;
  }
  else
  {
    if (v2 != 2) {
      goto LABEL_6;
    }
    unsigned int v5 = STACK[0x2CC];
    unsigned int v3 = STACK[0x2D0];
    LOBYTE(STACK[0x2C4]) = ((LODWORD(STACK[0x2CC]) >> 21) ^ 0x40)
                         + (~(LODWORD(STACK[0x2CC]) >> 20) | 0xAB)
                         + 43;
    LOBYTE(STACK[0x2C5]) = ((v5 >> 13) ^ 0xBD) - ((2 * ((v5 >> 13) ^ 0xBD)) & 0x55) + 42;
    LOBYTE(STACK[0x2C6]) = ((v5 >> 5) ^ 0x9D) - ((2 * ((v5 >> 5) ^ 0x9D)) & 0x55) + 42;
    HIDWORD(v4) = v5 ^ 6;
    LODWORD(v4) = v3 ^ 0x20000000;
    LOBYTE(STACK[0x2C7]) = (v4 >> 29) - ((2 * (v4 >> 29)) & 0x55) + 42;
    LOBYTE(STACK[0x2C8]) = ((v3 >> 21) ^ 0x11) - ((v3 >> 20) & 0x54) + 42;
    LOBYTE(STACK[0x2C9]) = ((v3 >> 13) ^ 0x29) + (~(2 * ((v3 >> 13) ^ 0x29)) | 0xAB) + 43;
    LOBYTE(STACK[0x2CA]) = ((v3 >> 5) ^ 0xB0) - 2 * (((v3 >> 5) ^ 0xB0) & 0x2E ^ (v3 >> 5) & 4) + 42;
    LOBYTE(v5) = (8 * v3) ^ 0xC8;
    char v6 = 80;
    char v7 = v5;
  }
  LOBYTE(STACK[0x2CB]) = v7 + ((39 - a2) ^ 0x92) - (v6 & (2 * v5));
LABEL_6:
  JUMPOUT(0x22B3343A8);
}

uint64_t sub_22B3BABB8@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v7 = a2 - 1327;
  unsigned int v8 = ((a2 - 1241) | 4)
     + 128683779
     + ((((a2 - 2114) | 0x144) - 310420475) & (2 * (a1 + v5 + (v6 ^ v3) + 1176)))
     + ((a1 + v5 + (v6 ^ v3) + 1176) ^ 0xF6BFB1ED);
  unsigned int v9 = v4 - 1490206265;
  int v10 = (v9 < 0xFE6B4AEE) ^ (v8 < 0xFE6B4AEE);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xFE6B4AEE;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((103 * v11) ^ v7)))();
}

uint64_t sub_22B3BAC60@<X0>(int a1@<W8>)
{
  unsigned int v7 = *(unsigned __int8 *)(v5 + (v4 + a1 + 140) % v2);
  unsigned int v8 = *(unsigned __int8 *)(v5 + (((v3 + 1161443657) & 0xBAC5CDDF ^ (a1 + 3621)) + v4) % v2);
  unsigned int v9 = *(unsigned __int8 *)(v5 + (v4 + a1) % v2);
  *(unsigned char *)(v5 + (v4 + a1 + 177) % v2) ^= ((v8 >> 7) | (2 * v8)) ^ ((v7 >> 2) | ((_BYTE)v7 << 6)) ^ ((v9 >> 3) | (32 * v9));
  return (*(uint64_t (**)(void))(v6 + 8 * ((v4 + 1 != v1 + 256) | (32 * (v4 + 1 != v1 + 256)) | v3)))();
}

uint64_t sub_22B3BAD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(int8x16_t *)(v6 - 240) = veorq_s8(*(int8x16_t *)*(void *)(a1 + 16), (int8x16_t)xmmword_22B497670);
  return (*(uint64_t (**)(void))(v5 + 8 * (a5 ^ (232 * (v6 - 240 == *(void *)(v6 - 248))))))();
}

uint64_t sub_22B3BAD50@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((5 * (((v3 + 38) | 0x48) ^ 0x707)) ^ 0x4BA) * (v2 == v1)) ^ v3)))();
}

uint64_t sub_22B3BAD8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v7 - v8)) = *(void *)(a2 + (v7 - v8));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 + v8 == a3) * a7) ^ v9)))();
}

uint64_t sub_22B3BADB8()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0x39D)))();
  return (*(uint64_t (**)(void))(STACK[0x270] + 8 * ((63 * (STACK[0x358] != 0)) ^ (v0 - 312))))();
}

uint64_t sub_22B3BADFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 - 2931) ^ v7 ^ 0xD9F) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_22B3BAE30(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (a2 ^ (95 * (v2 != 0xAD04D159)))))(a1, 1592551887);
}

uint64_t sub_22B3BAE90()
{
  *int v2 = v2[623];
  unint64_t v5 = 1328090399 * ((v4 - 0x4C047BE0A813C09BLL - 2 * ((v4 - 192) & 0xB3FB841F57EC4025)) ^ 0x6AE40323A83F241FLL);
  STACK[0x1968] = (v3 - 361390859) ^ v5;
  *(_DWORD *)(v4 - 160) = -1328090399 * ((v4 + 1475100517 - 2 * ((v4 - 192) & 0x57EC4025)) ^ 0xA83F241F);
  STACK[0x1958] = v5 + 4235091479u;
  int v6 = v0 + 309 - 1328090399 * ((v4 + 1475100517 - 2 * ((v4 - 192) & 0x57EC4025)) ^ 0xA83F241F);
  *(_DWORD *)(v4 - 192) = v6 - 711656437;
  *(_DWORD *)(v4 - 188) = v6 - 1533763147;
  *(_DWORD *)(v4 - 176) = (v0 - 711656079) ^ (1328090399
                                            * ((v4 + 1475100517 - 2 * ((v4 - 192) & 0x57EC4025)) ^ 0xA83F241F));
  *(_DWORD *)(v4 - 184) = v6 - 711656466;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 + 309) ^ 0x3AA)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x270] + 8 * *(int *)(v4 - 180)))(v7);
}

void sub_22B3BAF84()
{
}

uint64_t sub_22B3BB08C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  v8.n128_u64[0] = ((_BYTE)a5 + 7) & 0xF;
  v8.n128_u64[1] = ((_BYTE)a5 + 6) & 0xF;
  v9.n128_u64[0] = ((_BYTE)a5 + 5) & 0xF;
  v9.n128_u64[1] = ((_BYTE)a5 + a8 - 50 + 38) & 0xF;
  v10.n128_u64[0] = ((_BYTE)a5 + 3) & 0xF;
  v10.n128_u64[1] = ((_BYTE)a5 + 2) & 0xF;
  v11.n128_u64[0] = ((_BYTE)a5 + 1) & 0xF;
  v11.n128_u64[1] = a5 & 0xF;
  v12.n128_u64[0] = ((_BYTE)a5 - 1) & 0xF;
  v12.n128_u64[1] = ((_BYTE)a5 + 14) & 0xF;
  v13.n128_u64[0] = (a5 + 13) & 0xF;
  v13.n128_u64[1] = ((_BYTE)a5 + 12) & 0xF;
  v14.n128_u64[0] = ((_BYTE)a5 + 11) & 0xF;
  v14.n128_u64[1] = ((_BYTE)a5 + 10) & 0xF;
  return sub_22B3BB174(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_22B3BB174(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14, int a15)
{
  uint64_t v27 = (a12 + v15 - a14);
  uint64_t v28 = ((_BYTE)a12 + (_BYTE)v15 - (_BYTE)a14) & 0xF;
  uint64_t v29 = v20;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v24).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v24).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v19 + v27), *(int8x16_t *)(v16 + (v27 & 0xF) - 15)), veorq_s8(*(int8x16_t *)((v27 & 0xF) + v18 - 11), *(int8x16_t *)((v27 & 0xF) + v17 - 12))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), v26), vmulq_s8(v30, v25)));
  *(int8x16_t *)(v19 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v23 + 8 * (((v21 + a14 != a13) * v22) ^ a15)))();
}

uint64_t sub_22B3BB1FC()
{
  return sub_22B3BB238((15 * (v0 ^ 0x4BFu)) ^ 0x4D5, 49);
}

uint64_t sub_22B3BB238@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (char *)(v3 + 4 * v4);
  int8x8x4_t v9 = vld4_s8(v7);
  v10.val[0] = v9.val[3];
  v10.val[1] = v9.val[2];
  v10.val[2] = v9.val[1];
  v10.val[3] = v9.val[0];
  vst4_s8(v7, v10);
  return (*(uint64_t (**)(void))(a3 + 8 * (((a1 + v4 != v6) * a2) ^ v5)))();
}

uint64_t sub_22B3BB274(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8
                                                          * ((((v3 + 472) ^ v3 ^ 0x1C8) * (v2 != 1195091115)) ^ v3)))(a1, 1105579921);
}

uint64_t sub_22B3BB2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int8x8x4_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                   + 8
                                                                   * ((77
                                                                     * (v6 < ((((a6 - 1589283793) & 0x5EBA8B7D) + 3246) ^ (a6 + 3179)))) ^ a6));
  *(_DWORD *)(v8 - 136) = v6;
  return v9(a1, a2, a3, 0);
}

void sub_22B3BB2FC()
{
  STACK[0x2F8] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3132));
  JUMPOUT(0x22B32E5ECLL);
}

void sub_22B3BB314()
{
}

uint64_t sub_22B3BB484()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 ^ 0x67B ^ v1 ^ 0x17 ^ 0x647) * (v0 == 55)) ^ v1 ^ 0x748)))();
}

void sub_22B3BB4C8()
{
  unint64_t v1 = STACK[0x278];
  uint64_t v2 = (unsigned char *)STACK[0x400];
  int v3 = (unsigned char *)STACK[0x440];
  uint64_t v4 = (unsigned char *)STACK[0x260];
  v4[248] = *(unsigned char *)STACK[0x400] ^ *(unsigned char *)STACK[0x440] ^ v0;
  v4[249] = v2[1] ^ v3[1] ^ v0;
  v4[250] = v2[2] ^ v3[2] ^ v0;
  v4[251] = v2[3] ^ v3[3] ^ v0;
  v4[252] = v2[4] ^ v3[4] ^ v0;
  v4[253] = v2[5] ^ v3[5] ^ v0;
  v4[254] = v2[6] ^ (v1 - 41) ^ v3[6];
  v4[255] = v2[7] ^ v3[7] ^ v0;
  v4[256] = v2[8] ^ v3[8] ^ v0;
  v4[257] = v2[9] ^ v3[9] ^ v0;
  v4[258] = v2[10] ^ v3[10] ^ v0;
  v4[259] = v2[11] ^ v3[11] ^ v0;
  v4[260] = v2[12] ^ v3[12] ^ v0;
  v4[261] = v2[13] ^ v3[13] ^ v0;
  v4[262] = v2[14] ^ v3[14] ^ v0;
  v4[263] = v2[15] ^ v3[15] ^ v0;
  v4[264] = v2[16] ^ v3[16] ^ v0;
  v4[265] = v2[17] ^ v3[17] ^ v0;
  v4[266] = v2[18] ^ v3[18] ^ v0;
  v4[267] = v2[19] ^ v3[19] ^ v0;
  JUMPOUT(0x22B3BB678);
}

uint64_t sub_22B3BB6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((108 * (a9 + 4 < a9)) ^ v9)))(a1);
}

uint64_t sub_22B3BB728(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * ((a1 ^ 0x43D09D23) == ((v1 + 477) ^ 0x535))) ^ v1)))();
}

uint64_t sub_22B3BB774@<X0>(uint64_t a1@<X2>, char a2@<W5>, int a3@<W8>)
{
  uint64_t v8 = (v5 + a3);
  unsigned int v9 = *(_DWORD *)(v7 - 220 + v8 + 72);
  *(unsigned char *)(a1 + v8) = v9 ^ 0x13;
  *(unsigned char *)(a1 + (v8 + 2)) = (BYTE2(v9) ^ 0x95) + (~(v9 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v8 + 1)) = (BYTE1(v9) ^ 0x67) - ((((v9 >> 8) ^ 0x67) << (v4 - a2 - 127)) & 0x54) + 42;
  *(unsigned char *)(a1 + (v8 + 3)) = (HIBYTE(v9) ^ 0x11) - ((v9 >> 23) & 0x54) + 42;
  LODWORD(v8) = *(_DWORD *)(v7 - 128) + 1060286778;
  BOOL v10 = v8 < v3;
  BOOL v11 = v5 + 147325473 < v8;
  if (v5 + 147325473 < v3 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((112 * !v11) ^ v4)))();
}

uint64_t sub_22B3BB858()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 32) == 0x2A8EF3598CCBFA3ALL) * (((v0 - 794) ^ 0x52C) - 638)) ^ (v0 - 794))))();
}

uint64_t sub_22B3BB8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t a5)
{
  int8x16x4_t v14 = vld4q_s8(v5);
  uint8x16_t v6 = (uint8x16_t)veorq_s8(v14.val[2], a5);
  _Q25 = vmovl_high_u8(v6);
  _Q24 = vmovl_u8(*(uint8x8_t *)v6.i8);
  __asm
  {
    SHLL2           V24.4S, V24.8H, #0x10
    SHLL2           V25.4S, V25.8H, #0x10
  }
  return sub_22B398E30(a1, a2, a3, a4, 738781644);
}

uint64_t sub_22B3BB9D8@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1553 * (a1 + 1 == v3 + 48)) ^ a2)))();
}

uint64_t sub_22B3BBAAC()
{
  *(_DWORD *)(v6 - 112) = v0 + (((~(v6 - 128) & 0xC9E91262) - (~(v6 - 128) | 0xC9E91263)) ^ 0x23FE2597) * v2 - 607;
  *(void *)(v6 - 128) = v5;
  *(void *)(v6 - 120) = v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0x1796)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v1 == ((v0 - 300) ^ 0x7570AC28)) * (v0 + 985)) ^ v0)))(v7);
}

void sub_22B3BBB40()
{
}

uint64_t sub_22B3BBB50(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 - 0x70D52A7E711E5006) = 77;
  *(_DWORD *)(a1 - 0x70D52A7E711E5016) = *(_DWORD *)(a2 - 0x48A9B556C05DE57DLL);
  *(void *)(a1 - 0x70D52A7E711E500ELL) = *(void *)(a2 - 0x48A9B556C05DE579);
  return 0;
}

void sub_22B3BBBC0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     - 2009815553 * (((a1 ^ 0x29DACD99 | 0xFE3C163A) - ((a1 ^ 0x29DACD99) & 0xFE3C163A)) ^ 0x26EDF5E6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_22B3BBC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int *a34)
{
  uint64_t v39 = *a34;
  uint64_t v40 = (((v38 - 144) | 0x640FFB83759AD0EDLL) - ((v38 - 144) & 0x640FFB83759AD0EDLL)) ^ 0x5BC1B77A5A7E7264;
  *(_DWORD *)(v38 - 112) = ((v34 + 1432040970) ^ 0xEE) + v40 * v37;
  *(_DWORD *)(v38 - 108) = ((v34 + 1432040970) ^ 0x3D) + v40 * v37;
  *(_DWORD *)(v38 - 120) = (v34 + 533704923) ^ (v40 * v37);
  *(_DWORD *)(v38 - 116) = v34 + 1432040970 + v40 * v37;
  *(void *)(v38 - 128) = v39 - v40 * v37;
  *(void *)(v38 - 144) = -(v40 * v37);
  *(_DWORD *)(v38 - 136) = v40 * v37;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ (v36 - 2945))))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v38 - 132)))(v41);
}

void sub_22B3BBD5C()
{
}

uint64_t sub_22B3BBD68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((v2 >= STACK[0x278] - 376569709)
                                     * (((STACK[0x278] - 2890) | 0x274) - 833)) | (STACK[0x278] - 2322))))();
}

uint64_t sub_22B3BBDAC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unsigned int v44 = ((v37 - 342952663 - 2 * (v37 & 0xEB8EF529)) ^ 0x199C2DD) * v36;
  v40[34] = v41;
  v40[37] = a36;
  v40[36] = a35;
  *(_DWORD *)(v42 - 176) = (v39 + 487) ^ v44;
  *(_DWORD *)(v42 - 152) = a1 + v44;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v39 + 3972)))(v42 - 192);
  unint64_t v46 = STACK[0x270];
  int v47 = *(_DWORD *)(v42 - 192);
  STACK[0x4D0] = v38;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, __n128))(v46 + 8 * (int)(((v47 == -604050357) * (((v39 - 1632723525) ^ 0x9EAE920C) + ((v39 - 1632723525) & 0x61516DF3) - 4654)) ^ v39)))(v45, 2142237067, 19, STACK[0x278], 604092306, 4083822861, (__n128)0);
}

uint64_t sub_22B3BBED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((63 * (*(void *)(a7 + 72) != 0)) ^ (v7 - 312))))();
}

void sub_22B3BBEFC()
{
  *(void *)(v2 - 216) = *(void *)(v2 - 200) - 7;
  *(void *)(v2 - 208) = v0 - 7;
  *(_DWORD *)(v2 - 240) = v1 & 0xFFFFFFF8;
  *(_DWORD *)(v2 - 236) = v1;
  JUMPOUT(0x22B3BBF74);
}

void sub_22B3BC068()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 891)))();
  JUMPOUT(0x22B3BC090);
}

void sub_22B3BC0F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1328090399 * ((a1 & 0x7524ACE | ~(a1 | 0x7524ACE)) ^ 0x77ED10B);
  __asm { BRAA            X13, X17 }
}

void sub_22B3BC228()
{
}

uint64_t sub_22B3BC270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8 * ((1204 * (v7 + 1 == v9 + 20)) ^ a7)))(v8, a2, a1);
}

uint64_t sub_22B3BC34C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((((a4 - 1801476201) & 0xFFFFFFFC) - a18 == v18 - 1801476833)
                                * ((5 * (v18 ^ 0x23B)) ^ 0xEE)) ^ v18)))();
}

uint64_t sub_22B3BC3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, unint64_t *a13, int a14)
{
  a13 = &STACK[0x2B48C588999CF069];
  a12 = v16
      - 225134719 * ((((2 * &a12) | 0xD64ED090) - &a12 + 349738936) ^ 0xFDD72D62)
      - 113;
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v14 + 8 * (v16 ^ 0xE14)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1004 * (a14 == v15 + ((v16 + 1634) | 0x22) - 2158)) ^ v16)))(v17);
}

uint64_t sub_22B3BC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (((((4 * v5) ^ 0x3BCC) - 714) * (v4 != 0)) ^ v5)))(a1, a2, a3, a4);
}

uint64_t sub_22B3BC520(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)((((v2 + v3 + 1055) < 0xFFFFFFC0)
                                                   * (((v1 + 1216173783) & 0xB782A7FF) - 954)) ^ v1)))(a1);
}

uint64_t sub_22B3BC568@<X0>(char a1@<W8>)
{
  uint64_t v6 = v1 - 1;
  *(unsigned char *)(v4 + v6) = (a1 + v2 + ((v3 + 32) | 4) - 99) * ((v2 - 115) ^ 0xBA);
  return (*(uint64_t (**)(void))(v5 + 8 * ((436 * (v6 == 0)) ^ v3)))();
}

void sub_22B3BC5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned char *a54)
{
  *int v55 = a1;
  *uint64_t v54 = 142;
  *a54 = 1;
  *(unsigned char *)(a50 + 1) = 45;
  JUMPOUT(0x22B3BC67CLL);
}

uint64_t sub_22B3BC6C4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (((3 * (v11 ^ 0xD35) - 3328) * (a1 != a6)) ^ v11)))(a11);
}

uint64_t sub_22B3BC6FC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v3 + v4) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * (v4 + 16 == a1 - 101)) ^ v2)))();
}

uint64_t sub_22B3BC728(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((19 * (a2 + v2 + 63 >= v2 + 1577753264 + (v3 ^ 0xB00u) - v5 - 335)) ^ v3)))(2689);
}

uint64_t sub_22B3BC784(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = v6 + 3002 + ((v6 + 449) ^ (a4 - 2681)) + a2 + a3 + v10;
  uint64_t v13 = (a2 + a3) & 0xF;
  unint64_t v14 = v8 + v13 - v12;
  uint64_t v15 = (v7 | v13) - v12;
  unint64_t v16 = (v9 | v13) - v12;
  BOOL v20 = (unint64_t)(a6 - v10 - 0x66D0A0B6AF3E50DBLL) > 0xF
     && v14 > 0xF
     && (unint64_t)(v15 + 2) > 0xF
     && v16 > 0xF;
  return (*(uint64_t (**)(void))(v11 + 8 * ((248 * v20) ^ (v6 + 1505))))();
}

uint64_t sub_22B3BC814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  v48[395] = v47;
  v48[396] = v45 + 12;
  v48[393] = a24;
  *(_DWORD *)(v49 - 140) = v46
                         + 1328090399
                         * ((1014288680 - ((v49 - 152) | 0x3C74D128) + ((v49 - 152) | 0xC38B2ED7)) ^ 0x3C584AED)
                         + 1618;
  uint64_t v50 = (*(uint64_t (**)(uint64_t))(a6 + 8 * (v46 + 2907)))(v49 - 152);
  return (*(uint64_t (**)(uint64_t))(a45
                                            + 8
                                            * (((((v46 + 97) ^ (*(_DWORD *)(v49 - 144) == -604050357)) & 1)
                                              * ((v46 + 504) ^ 0x723)) ^ v46)))(v50);
}

uint64_t sub_22B3BC8DC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((2595
                                * (*(unsigned __int8 *)(v1 + 1) == (((_BYTE)v2 + 63) & 0x75 ^ ((v2 + 101) | 0x50) ^ 4))) ^ v2)))();
}

uint64_t sub_22B3BC938()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 1657) ^ 0x42C ^ ((v2 - 3278) | 0x27B)) * (v1 != v0)) ^ v2)))();
}

uint64_t sub_22B3BC970()
{
  int v4 = v1 - (v3 & 0x3235386C) + ((v2 - 634230543) & 0x25CD97DF ^ 0x191A9F7F);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((371
                                * ((v2 ^ 0x32351234 ^ (2 * v4) & 0x73FF96DC) + (v4 ^ 0x60E55758) - 1613496422 == 433310472)) ^ v2)))();
}

void sub_22B3BCA08()
{
}

void sub_22B3BCA14()
{
}

uint64_t sub_22B3BCA1C(unsigned int a1, unsigned int a2, int a3, int a4)
{
  *(unsigned char *)(v11 + (a4 - 1600282345)) = *(unsigned char *)(v7 + ((a4 - 1600282345) & 0xFLL)) ^ *(unsigned char *)(v5 + (a4 - 1600282345)) ^ *(unsigned char *)(v8 + (((_BYTE)a4 + 23) & 0xF)) ^ *(unsigned char *)((((_BYTE)a4 + 23) & 0xF) + v6 + 4) ^ (-11 * ((a4 + 23) & 0xF));
  BOOL v13 = a1 > 0x84127C54;
  unsigned int v14 = (v4 ^ 0x1C8B21F6) + a4;
  int v15 = v13 ^ (v14 < v10);
  BOOL v16 = v14 < a2;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a3) ^ v9)))();
}

void sub_22B3BCAB4()
{
}

void sub_22B3BCAC0()
{
}

void sub_22B3BCAC8(int a1@<W8>)
{
  int v7 = 1988622253 * ((v6 + 1256507635 - 2 * ((v6 - 144) & 0x4AE4C983)) ^ 0xBCFC8923);
  *(_DWORD *)(v6 - 124) = v7 + v2 + (((a1 - 1323) | 0x191) ^ 0xF6130DDF);
  *(_DWORD *)(v6 - 120) = v7 + a1 + 1030;
  *int v4 = v1;
  v4[1] = v5;
  (*(void (**)(uint64_t))(v3 + 8 * (a1 + 2631)))(v6 - 144);
  JUMPOUT(0x22B3BCB44);
}

uint64_t sub_22B3BCC80@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1062
                                * (((*(unsigned __int8 *)(v4 + 7) - 1) ^ v3)
                                 + v1
                                 + (((*(unsigned __int8 *)(v4 + 7) - 1) << ((v5 - 111) ^ 0x64)) & v2) == a1)) ^ v5)))();
}

void sub_22B3BCCC8()
{
  *(_DWORD *)(v2 - 116) = v1;
  *(_DWORD *)(v2 - 128) = v0;
  *(_DWORD *)(v2 - 136) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x22B3BCD1CLL);
}

uint64_t sub_22B3BCE08()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 & 0x18) == (v1 + 63) - 1367) * (((v1 + 1290) | 9) + 1213)) ^ v1)))();
}

void sub_22B3BCE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 224) = a1;
  LODWORD(STACK[0x410]) = v4;
  JUMPOUT(0x22B3BCE68);
}

void sub_22B3BCF2C()
{
}

void sub_22B3BCFCC()
{
}

uint64_t sub_22B3BD09C@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - 640327804);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v5 + 2) ^ *(unsigned char *)((v8 & 0xF) + v6 + 1) ^ (83 * (v8 & 0xF)) ^ 0x2A;
  return (*(uint64_t (**)(void))(v7 + 8 * ((3617 * (a2 - 1 == v3)) ^ (a1 - 1482))))();
}

uint64_t sub_22B3BD110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  return (*(uint64_t (**)(void))(v60
                              + 8 * ((825 * (a60 + a56 + a55 == (v61 ^ 0x78DD8700 ^ ((v61 - 25) | 0x404)))) ^ v61)))();
}

uint64_t sub_22B3BD170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((32 * (((a3 + 1) & 0x7FFFFFE0) != v4)) | ((((a3 + 1) & 0x7FFFFFE0) != v4) << 6)) ^ v3)))();
}

uint64_t sub_22B3BD24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17
  }
                                                       + 8
                                                       * ((255 * (*(_DWORD *)(v18 - 128) != 326024231)) ^ (a6 + a5 + 1318))))(a10, 3014948224);
  if (a17 != 1) {
    JUMPOUT(0x22B3BD3B4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17
                                                              + 8
                                                              * ((112
                                                                * (*(_DWORD *)(v18 - 128) == ((a5 - 1332942273) & 0x9BBEA37D)
                                                                                           + 326023402)) ^ (a5 + a6))))(a1, 3014948224, a10);
}

uint64_t sub_22B3BD3E0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + v4) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 == v4) * v3) ^ v6)))();
}

uint64_t sub_22B3BD404@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(unsigned __int8 *)(v3 + (a1 + 1)) == ((v1 ^ 0x6F) * v2 + 87))
                                * (v1 - 844)) ^ v1)))();
}

uint64_t sub_22B3BD43C()
{
  BOOL v5 = v4 - 0x21AEEC4F795AF799 - v3 + v0 + 2282 >= ((239 * (v1 ^ 0x6F1u)) ^ ((unint64_t)(v1 ^ 0x56Eu) + 745));
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v5) | (8 * v5)) ^ v1)))();
}

uint64_t sub_22B3BD49C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 - 1241) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_22B3BD4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  BOOL v42 = (LODWORD(STACK[0x324]) ^ v40) == (v39 ^ 0xC449EF14 ^ (v39 + 1199664400) & 0xB87E9C7B) + a39;
  return (*(uint64_t (**)(void))(v41 + 8 * (((8 * v42) | (16 * v42)) ^ v39)))();
}

uint64_t sub_22B3BD520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  unint64_t v29 = ((v27 + ((a26 - 2017) | 1u) - 181) ^ ((a26 - 2900) | 0x400u)) + v26;
  if (v29 <= 0x38) {
    unint64_t v29 = 56;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((2016 * (v29 - v26 + 971525980 > 7)) ^ a26)))();
}

uint64_t sub_22B3BD588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_22B3BD63C(a13 - 0x281D12643933BF1BLL, 2095643897, (v13 ^ 0x9F0u) - 234409894, 234407909, 0xAB114573F18A3524, 0xDFD47FCF191E57A9, 842837842, 0x35FBFFBCFFFBF8F8);
}

uint64_t sub_22B3BD63C(void *a1, unsigned int a2, int a3, int a4, uint64_t a5)
{
  uint64_t v20 = 4 * (v14 + v13);
  int v21 = v6 + v18 + (*(_DWORD *)(*v10 + v20 + a5) ^ v16) - (*(_DWORD *)(*v11 + v20 + a5) ^ v16);
  *(_DWORD *)(*a1 + v20 + a5) = v21 + (a3 & a4 ^ (v16 - 289)) - (v17 & (2 * v21));
  BOOL v22 = v14 + v12 < v8;
  if (v7 > a2 != v14 + v12 < v19) {
    BOOL v22 = v7 > a2;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * v5) ^ v9)))();
}

void sub_22B3BD6E4()
{
  STACK[0x2F0] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3119));
  JUMPOUT(0x22B3A2CA0);
}

void sub_22B3BD6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  LODWORD(STACK[0x244]) = v14 + 1;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, void))(v15 + 8 * (a12 ^ 0x118C)))(a14, 0);
  uint64_t v18 = *(void *)(v16 - 224);
  *(_DWORD *)(v16 - 236) = *(_DWORD *)(v16 - 216);
  *(_DWORD *)(v16 - 232) = v18;
  uint64_t v19 = 8 * (a12 ^ 0xE62);
  *(_DWORD *)(v16 - 228) = (*(uint64_t (**)(uint64_t))(v15 + v19))(v17);
  *(_DWORD *)(v16 - 240) = (*(uint64_t (**)(void))(v15 + v19))();
  JUMPOUT(0x22B3BD7D8);
}

uint64_t sub_22B3BD96C()
{
  int v9 = 1328090399 * ((((v8 - 168) | 0xDE5C53D) - (v8 - 168) + ((v8 - 168) & 0xF21A3AC0)) ^ 0xF236A107);
  *(void *)(v8 - 168) = v6;
  *(void *)(v8 - 160) = v11;
  *(void *)(v8 - 144) = v3;
  *(void *)(v8 - 136) = v1;
  *(_DWORD *)(v8 - 152) = v9 + v2 + 539918870 + 519;
  *(void *)(v8 - 120) = v12;
  *(void *)(v8 - 112) = v4;
  *(_DWORD *)(v8 - 128) = v9 ^ (v10 - ((2 * v10) & 0xEFEE1F1A) + 2012680077);
  (*(void (**)(uint64_t))(v7 + 8 * (int)(v2 ^ 0xDFD19425)))(v8 - 168);
  return *(_DWORD *)(v8 - 124) ^ v5;
}

void sub_22B3BDA24()
{
  STACK[0x2F0] = *(void *)(v0 + 8 * (int)(STACK[0x278] - 3146));
  JUMPOUT(0x22B3A2CA0);
}

uint64_t sub_22B3BDA3C@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((*(_DWORD *)(*v4 + 4 * a2 - 0x54EEBA8C0E75CADCLL) != v3) * v5) ^ a1)))();
}

uint64_t sub_22B3BDA78@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((235
                                              * (((3 * (a6 ^ 0xC6B)) ^ 0xB31DF2BE) + a1 < (((a6 - 1376) | 0x20) ^ 0xB31DF57C)
                                                                                        + a1)) ^ a6)))(3273);
}

void sub_22B3BDAEC(uint64_t a1)
{
  int v1 = 1292559617 * (((a1 | 0xCFAF1A7C) - (a1 & 0xCFAF1A7C)) ^ 0x68FC7215);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_22B3BDBAC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((11
                                * (*(unsigned char *)(((v0 - 1682) | 0x20Eu)
                                            + (unint64_t)v2
                                            + ((unint64_t)(v2 < v1) << 32)
                                            + v4
                                            - 1030435591) == 0)) ^ v0)))();
}

uint64_t sub_22B3BDC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  unsigned int v44 = a41 + ((((v42 - 1174109000) & 0x45FB7B3A) + 529627325) ^ ((v42 - 2311) | 0x21));
  BOOL v45 = v41 + 274070961 < v44;
  if (v44 < 0x33003DBD != (v41 + 274070961) < 0x33003DBD) {
    BOOL v45 = v44 < 0x33003DBD;
  }
  return (*(uint64_t (**)(void))(v43 + 8 * ((617 * v45) ^ v42)))();
}

void sub_22B3BDC94(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(void *)a1 == 0x1AD13B37B10193F2;
  }
  else {
    BOOL v2 = 1;
  }
  int v4 = v2 || *(void *)(a1 + 16) == 0x717BE438C5D0856CLL;
  int v1 = *(_DWORD *)(a1 + 12) - 1328090399 * ((((2 * a1) | 0xEBBB7AA8) - a1 + 170017452) ^ 0xA0ED96E);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_22B3BDD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6.n128_u64[0] = 0x2A2A2A2A2A2A2A2ALL;
  v6.n128_u64[1] = 0x2A2A2A2A2A2A2A2ALL;
  return sub_22B3BDD9C(a1, a2, v5 & 0xFFFFFFE0, (a5 ^ 0x6D7u) - 810, (a5 ^ 0x6D7u) - 1986, 0, ((a5 ^ 0x6D7) - 810) ^ 0xC23u, 167, v6);
}

uint64_t sub_22B3BDD9C(int a1, int8x16_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7, int a8, int a9)
{
  uint64_t v13 = (a1 + v10 - a7);
  int8x16_t v14 = *(int8x16_t *)(v9 + v13 - 15);
  int8x16_t v15 = *(int8x16_t *)(v9 + v13 - 31);
  uint64_t v16 = v11 + v13;
  *(int8x16_t *)(v16 - 15) = veorq_s8(v14, a2);
  *(int8x16_t *)(v16 - 31) = veorq_s8(v15, a2);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a8 + a7 != a4) * a9) ^ a6)))();
}

uint64_t sub_22B3BDDE4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v6 = *((_DWORD *)&STACK[0x28C] + ((v4 + a2) >> (v3 - 37)) + 18);
  *(unsigned char *)(a1 + (v4 + a2)) = v6 ^ 0x13;
  *(unsigned char *)(a1 + (v4 + a2 + 2)) = (BYTE2(v6) ^ 0x95) + (~(v6 >> 15) | 0xAB) + 43;
  *(unsigned char *)(a1 + (v4 + a2 + 1)) = (BYTE1(v6) ^ 0x67) - ((2 * (BYTE1(v6) ^ 0x67)) & 0x55) + 42;
  *(unsigned char *)(a1 + (v4 + a2 + 3)) = (HIBYTE(v6) ^ 0x11) - ((v6 >> 23) & 0x54) + 42;
  unsigned int v7 = LODWORD(STACK[0x2E8]) - 67555268;
  BOOL v8 = v7 < v2;
  BOOL v9 = v4 + 30355030 < v7;
  if (v4 + 30355030 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 | (8 * v9)) ^ v3)))();
}

void sub_22B3BDEC4(uint64_t a1@<X6>, int a2@<W8>)
{
  (*(void (**)(void, void, void))(v4 + 8 * (v3 ^ 0x12CB)))(LODWORD(STACK[0x2E0]), (v2 + a2 + 2), *(void *)(a1 + 136));
  JUMPOUT(0x22B339BACLL);
}

uint64_t sub_22B3BDF1C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  *(_DWORD *)(v36 + 4 * (v34 + 1 + v35)) = 1215976520
                                                         - v34
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v36 + 4 * (v34 + v35)) ^ (*(_DWORD *)(v36 + 4 * (v34 + v35)) >> 30))) ^ *(_DWORD *)(v36 + 4 * (v34 + 1 + v35)));
  *(_DWORD *)(v37 - 112) = a1 - 1741348872 + v32;
  *(_DWORD *)(v37 - 108) = ((a1 - 1741348872) ^ 0xB) - v32;
  *(_DWORD *)(v37 - 140) = (a1 + 13955456) ^ v32;
  *(void *)(v37 - 136) = a31;
  *(void *)(v37 - 128) = (v34 - 1287541101) - v32;
  *(_DWORD *)(v37 - 120) = v32 ^ (a1 - 1741348872) ^ 0xB7;
  *(_DWORD *)(v37 - 116) = v32 ^ 1;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a1 ^ (v31 + 590))))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * *(int *)(v37 - 144)))(v38);
}

void sub_22B3BDFF0()
{
}

char *sub_22B3BDFFC(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v9 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v21 = *result++;
            *a2++ = v21;
LABEL_17:
            char v22 = *result++;
            *a2++ = v22;
LABEL_18:
            char v23 = *result++;
            *a2++ = v23;
LABEL_19:
            char v24 = *result++;
            *a2++ = v24;
LABEL_20:
            char v25 = *result++;
            *a2++ = v25;
LABEL_21:
            char v26 = *result++;
            *a2++ = v26;
LABEL_22:
            char v27 = *result++;
            *a2++ = v27;
LABEL_23:
            char v28 = *result++;
            *a2++ = v28;
            --v9;
          }
          while (v9);
          break;
      }
    }
  }
  else
  {
    unint64_t v10 = -(int)result & 7;
    switch((int)v10)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v11 = *result++;
        *a2++ = v11;
LABEL_6:
        char v12 = *result++;
        *a2++ = v12;
LABEL_7:
        char v13 = *result++;
        *a2++ = v13;
LABEL_8:
        char v14 = *result++;
        *a2++ = v14;
LABEL_9:
        char v15 = *result++;
        *a2++ = v15;
LABEL_10:
        char v16 = *result++;
        *a2++ = v16;
LABEL_11:
        char v17 = *result++;
        *a2++ = v17;
        break;
      default:
        break;
    }
    BOOL v18 = a3 >= v10;
    unint64_t v19 = a3 - v10;
    if (!v18) {
      unint64_t v19 = 0;
    }
    if (v19 >= 8)
    {
      unint64_t v20 = ((v19 >> 3) + 7) >> 3;
      switch((v19 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_26:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
LABEL_27:
            uint64_t v31 = *(void *)result;
            result += 8;
            *(void *)a2 = v31;
            a2 += 8;
LABEL_28:
            uint64_t v32 = *(void *)result;
            result += 8;
            *(void *)a2 = v32;
            a2 += 8;
LABEL_29:
            uint64_t v33 = *(void *)result;
            result += 8;
            *(void *)a2 = v33;
            a2 += 8;
LABEL_30:
            uint64_t v34 = *(void *)result;
            result += 8;
            *(void *)a2 = v34;
            a2 += 8;
LABEL_31:
            uint64_t v35 = *(void *)result;
            result += 8;
            *(void *)a2 = v35;
            a2 += 8;
LABEL_32:
            uint64_t v36 = *(void *)result;
            result += 8;
            *(void *)a2 = v36;
            a2 += 8;
            --v20;
          }
          while (v20);
          break;
      }
    }
    switch(v19 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v3 = *result++;
        *a2++ = v3;
LABEL_35:
        char v4 = *result++;
        *a2++ = v4;
LABEL_36:
        char v5 = *result++;
        *a2++ = v5;
LABEL_37:
        char v6 = *result++;
        *a2++ = v6;
LABEL_38:
        char v7 = *result++;
        *a2++ = v7;
LABEL_39:
        char v8 = *result++;
        *a2++ = v8;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

unsigned char *sub_22B3BE21C(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t __APReceiverFairPlayHelperGetTypeID_block_invoke()
{
  APReceiverFairPlayHelperGetTypeID_fairPlayHelperClass = 0;
  *(void *)algn_2684028B8 = "APReceiverFairPlayHelper";
  qword_2684028C0 = 0;
  unk_2684028C8 = 0;
  qword_2684028D0 = (uint64_t)apReceiverFairPlayHelper_Finalize;
  unk_2684028D8 = 0;
  qword_2684028E0 = 0;
  unk_2684028E8 = 0;
  qword_2684028F0 = (uint64_t)apReceiverFairPlayHelper_CopyDebugDescription;
  uint64_t result = _CFRuntimeRegisterClass();
  APReceiverFairPlayHelperGetTypeID_typeID = result;
  return result;
}

CFStringRef apReceiverFairPlayHelper_CopyDebugDescription(const void *a1)
{
  ASPrintF();
  CFAllocatorRef v2 = CFGetAllocator(a1);
  CFStringRef v3 = CFStringCreateWithFormat(v2, 0, @"<APReceiverFairPlayHelper %p %s>", a1, 0);
  free(0);
  return v3;
}

void apReceiverFairPlayHelper_Finalize(uint64_t a1)
{
  if (gLogCategory_APReceiverFairPlayHelper <= 30
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFAllocatorRef v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 16) = 0;
  }
}

const void *APReceiverFairPlayHelperCreate()
{
  if (gLogCategory_APReceiverFairPlayHelper <= 30
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APReceiverFairPlayHelperGetTypeID_once != -1) {
    dispatch_once(&APReceiverFairPlayHelperGetTypeID_once, &__block_literal_global);
  }
  Instance = (const void *)_CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
LABEL_19:
    if (gLogCategory_APReceiverFairPlayHelper <= 90
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Instance)
    {
      CFRelease(Instance);
      return 0;
    }
    return Instance;
  }
  if (gLogCategory_APReceiverFairPlayHelper <= 30)
  {
    if (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APReceiverFairPlayHelper <= 30
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2000000000;
  int v7 = 0;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __apReceiverFairPlayHelper_InitContext_block_invoke;
  block[3] = &unk_264894D58;
  block[4] = &v4;
  if (apReceiverFairPlayHelper_InitContext_onceToken != -1) {
    dispatch_once(&apReceiverFairPlayHelper_InitContext_onceToken, block);
  }
  int v1 = *((_DWORD *)v5 + 6);
  _Block_object_dispose(&v4, 8);
  if (v1) {
    goto LABEL_19;
  }
  return Instance;
}

void APReceiverFairPlayHelperRemoveAllFPSessions(uint64_t a1)
{
  CFArrayRef v2 = *(const __CFArray **)(a1 + 16);
  if (v2)
  {
    CFIndex Count = CFArrayGetCount(v2);
    if (Count >= 1)
    {
      CFIndex v4 = Count;
      for (CFIndex i = 0; i != v4; ++i)
      {
        CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 16), i);
        uint64_t Int64 = CFDictionaryGetInt64();
        if (gLogCategory_APReceiverFairPlayHelper <= 30
          && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (Int64) {
          h5eRUOOOhxuaBmELCqQZZEcx();
        }
      }
    }
    int v7 = *(const void **)(a1 + 16);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 16) = 0;
    }
  }
}

uint64_t APReceiverFairPlayHelperCopyAuthorizeItemResponseIntoBuffer(uint64_t a1, const __CFDictionary *a2, const __CFString *a3, char *a4, size_t a5, void *a6)
{
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  if (apReceiverFairPlayHelper_CopyPICResponseData(a1, a2, a3, &v13, &v12))
  {
    APSLogErrorAt();
    uint64_t v10 = 4294895366;
    goto LABEL_18;
  }
  if (v13)
  {
    if (!Base64EncodeCopyEx())
    {
      int v9 = snprintf(a4, a5, "%s: %s\n%s: %s\n", "PIC-Data", 0, "Player-GUID", gFairPlayPlayerGUID);
      if (v9 < 1 || v9 >= (int)a5)
      {
        uint64_t v10 = 4294895362;
LABEL_17:
        APSLogErrorAt();
        goto LABEL_18;
      }
      goto LABEL_9;
    }
    uint64_t v10 = 4294895362;
    APSLogErrorAt();
LABEL_18:
    if (gLogCategory_APReceiverFairPlayHelper <= 90
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_11;
  }
  int v9 = snprintf(a4, a5, "%s:\n%s: %s\n", "PIC-Data", "Player-GUID", gFairPlayPlayerGUID);
  if (v9 < 1 || v9 >= (int)a5)
  {
    uint64_t v10 = 4294895362;
    goto LABEL_17;
  }
LABEL_9:
  uint64_t v10 = 0;
  if (a6) {
    *a6 = v9;
  }
LABEL_11:
  if (v13) {
    jEHf8Xzsv8K(v13);
  }
  return v10;
}

uint64_t apReceiverFairPlayHelper_CopyPICResponseData(uint64_t a1, CFDictionaryRef theDict, const __CFString *a3, void *a4, void *a5)
{
  v39[3] = *(void **)MEMORY[0x263EF8340];
  if (a3)
  {
    uint64_t v8 = CFStringCopyUTF8CString();
    if (v8)
    {
      uint64_t v13 = v8;
      APSLogErrorAt();
      char v14 = 0;
      goto LABEL_83;
    }
    CFStringGetLength(a3);
  }
  v39[0] = 0;
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"PIC-Request");
  if (Value)
  {
    CFStringRef v10 = Value;
    CFRetain(Value);
    CFTypeID v11 = CFGetTypeID(v10);
    if (v11 == CFStringGetTypeID())
    {
      uint64_t v12 = CFStringCopyUTF8CString();
      if (v12)
      {
        uint64_t v13 = v12;
      }
      else
      {
        CFStringGetLength(v10);
        uint64_t v13 = Base64DecodeCopy();
        if (!v13)
        {
          char v14 = 0;
          goto LABEL_13;
        }
      }
      APSLogErrorAt();
      if (gLogCategory_APReceiverFairPlayHelper <= 90
        && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      char v14 = 0;
    }
    else
    {
      CFTypeID v15 = CFGetTypeID(v10);
      if (v15 == CFDataGetTypeID())
      {
        CFIndex Length = CFDataGetLength((CFDataRef)v10);
        char v14 = (UInt8 *)malloc_type_malloc(Length, 0x100004077774924uLL);
        v40.location = 0;
        v40.length = Length;
        CFDataGetBytes((CFDataRef)v10, v40, v14);
      }
      else
      {
        char v14 = 0;
      }
      uint64_t v13 = 0;
    }
LABEL_13:
    CFRelease(v10);
    if (v13)
    {
      APSLogErrorAt();
      goto LABEL_83;
    }
    goto LABEL_14;
  }
  char v14 = 0;
LABEL_14:
  CFArrayRef v18 = *(const __CFArray **)(a1 + 16);
  char v17 = (CFArrayRef *)(a1 + 16);
  CFArrayRef v16 = v18;
  uint64_t v37 = v14;
  if (v18 && CFArrayGetCount(v16) >= 10)
  {
    CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(*v17, 0);
    uint64_t Int64 = CFDictionaryGetInt64();
    if (gLogCategory_APReceiverFairPlayHelper <= 30
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Int64) {
      h5eRUOOOhxuaBmELCqQZZEcx();
    }
    CFDictionaryRef cf = ValueAtIndex;
    CFArrayRemoveValueAtIndex(*v17, 0);
  }
  else
  {
    CFDictionaryRef cf = 0;
  }
  uint64_t v21 = 10;
  do
  {
    df35957c4e0();
    if (!v22)
    {
      woqRTqq9PL5McfBs891();
      if (v23 != -42032 && v23 != -42180)
      {
        uint64_t v13 = v23;
        if (!v23) {
          goto LABEL_44;
        }
LABEL_62:
        APSLogErrorAt();
        CFDictionaryRef v27 = cf;
        goto LABEL_65;
      }
    }
    memset(v39, 0, 24);
    if (gLogCategory_APReceiverFairPlayHelper <= 40
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    zxcm2Qme0x(0, 0, (uint64_t)v39);
    uint64_t v13 = v25;
    if (v25) {
      goto LABEL_41;
    }
    DataToHexCStringEx();
    uint64_t v13 = XtCqEf5X(0, (uint64_t)v39, (uint64_t)"/var/mobile/Media/iTunes_Control/iTunes/AirTunes/", (uint64_t)&gFairPlayContextID);
    if (gLogCategory_APReceiverFairPlayHelper <= 50
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v13) {
LABEL_41:
    }
      usleep(0x30D40u);
    --v21;
  }
  while (v21);
  if (v13) {
    goto LABEL_62;
  }
LABEL_44:
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960568;
    goto LABEL_68;
  }
  CFDictionaryRef v27 = Mutable;
  CFDictionarySetCString();
  CFDictionarySetInt64();
  char v28 = v17;
  uint64_t v29 = CFArrayEnsureCreatedAndAppend();
  if (v29)
  {
    uint64_t v13 = v29;
    APSLogErrorAt();
    goto LABEL_66;
  }
  if (gLogCategory_APReceiverFairPlayHelper < 31)
  {
    if (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APReceiverFairPlayHelper <= 10
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      CFIndex Count = CFArrayGetCount(*v17);
      if (Count >= 1)
      {
        CFIndex v31 = Count;
        for (CFIndex i = 0; i != v31; ++i)
        {
          CFDictionaryRef v27 = (const __CFDictionary *)CFArrayGetValueAtIndex(*v28, i);
          if (gLogCategory_APReceiverFairPlayHelper <= 10
            && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
          {
            CFDictionaryGetValue(v27, @"uuid");
            CFDictionaryGetValue(v27, @"id");
            char v28 = v17;
            LogPrintF();
          }
        }
      }
    }
  }
  uint64_t v13 = 0;
LABEL_65:
  if (!v27) {
    goto LABEL_67;
  }
LABEL_66:
  CFRelease(v27);
LABEL_67:
  if (!v13) {
    goto LABEL_72;
  }
LABEL_68:
  if (gLogCategory_APReceiverFairPlayHelper <= 90
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_72:
  if (!v13)
  {
    *a4 = 0;
    *a5 = 0;
    char v14 = v37;
    goto LABEL_74;
  }
  APSLogErrorAt();
  char v14 = v37;
LABEL_83:
  if (gLogCategory_APReceiverFairPlayHelper <= 90
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_74:
  if (v14) {
    free(v14);
  }
  return v13;
}

uint64_t APReceiverFairPlayHelperCopyAuthorizeItemResponseIntoDictionary(uint64_t a1, const __CFDictionary *a2, const __CFString *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  CFIndex length = 0;
  bytes = 0;
  if (a4)
  {
    if (!apReceiverFairPlayHelper_CopyPICResponseData(a1, a2, a3, &bytes, &length))
    {
      CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      if (bytes)
      {
        CFDataRef v6 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], bytes, length);
        CFDictionaryAddValue(*(CFMutableDictionaryRef *)v4, @"PIC-Data", v6);
        if (v6) {
          CFRelease(v6);
        }
      }
      CFStringRef v7 = CFStringCreateWithCString(v5, gFairPlayPlayerGUID, 0x8000100u);
      CFDictionaryAddValue(*(CFMutableDictionaryRef *)v4, @"playerGUID", v7);
      if (v7) {
        CFRelease(v7);
      }
      uint64_t v4 = 0;
      goto LABEL_9;
    }
    APSLogErrorAt();
    uint64_t v4 = 4294895366;
  }
  else
  {
    APSLogErrorAt();
  }
  if (gLogCategory_APReceiverFairPlayHelper <= 90
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_9:
  if (bytes) {
    jEHf8Xzsv8K((uint64_t)bytes);
  }
  return v4;
}

uint64_t APReceiverFairPlayHelperProcessFPInfo(uint64_t a1, __CFDictionary *a2, const char **a3)
{
  CFStringGetTypeID();
  TypedCFStringRef Value = CFDictionaryGetTypedValue();
  if (TypedValue) {
    CFStringRef v7 = (__CFString *)TypedValue;
  }
  else {
    CFStringRef v7 = @"00000000-0000-0000-0000-000000000000";
  }
  CFArrayRef v8 = *(const __CFArray **)(a1 + 16);
  if (v8)
  {
    CFIndex Count = CFArrayGetCount(v8);
    CFIndex v10 = Count - 1;
    if (Count >= 1)
    {
      uint64_t v11 = Count;
      while (1)
      {
        CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 16), --v11);
        CFStringGetTypeID();
        uint64_t v12 = (const void *)CFDictionaryGetTypedValue();
        if (v12)
        {
          if (CFEqual(v12, v7)) {
            break;
          }
        }
        if (v11 <= 0) {
          goto LABEL_10;
        }
      }
      uint64_t Int64 = CFDictionaryGetInt64();
      if (!Int64)
      {
LABEL_10:
        int v13 = 1;
        goto LABEL_13;
      }
      goto LABEL_28;
    }
    int v13 = 0;
  }
  else
  {
    int v13 = 0;
    CFIndex v10 = -1;
  }
LABEL_13:
  if (gLogCategory_APReceiverFairPlayHelper <= 20
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!v13) {
    goto LABEL_22;
  }
  while (1)
  {
    CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 16), v10);
    CFStringGetTypeID();
    char v14 = (const void *)CFDictionaryGetTypedValue();
    if (v14)
    {
      if (CFEqual(v14, @"00000000-0000-0000-0000-000000000000")) {
        break;
      }
    }
    if (v10-- <= 0) {
      goto LABEL_22;
    }
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  if (!Int64)
  {
LABEL_22:
    if (gLogCategory_APReceiverFairPlayHelper <= 20
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t Int64 = 0;
    goto LABEL_35;
  }
LABEL_28:
  if (gLogCategory_APReceiverFairPlayHelper <= 30
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionarySetInt64();
LABEL_35:
  CFDataGetTypeID();
  CFDataRef v17 = (const __CFData *)CFDictionaryGetTypedValue();
  if (v17)
  {
    uint64_t v18 = 0;
    if (CFDataGetLength(v17)) {
      unint64_t v19 = "(NC-D)";
    }
    else {
      unint64_t v19 = "(C-D)";
    }
  }
  else
  {
    CFDataGetTypeID();
    CFDataRef v20 = (const __CFData *)CFDictionaryGetTypedValue();
    if (v20)
    {
      CFDataRef v21 = v20;
      uint64_t v28 = 0;
      int v27 = 0;
      CFIndex Length = CFDataGetLength(v20);
      if (Length) {
        unint64_t v19 = "(NC-Cloud-D)";
      }
      else {
        unint64_t v19 = "(C-Cloud-D)";
      }
      if (Int64)
      {
        uint64_t v23 = Length;
        BytePtr = CFDataGetBytePtr(v21);
        nXJ7Amk1zyK93(Int64, (uint64_t)BytePtr, v23, (uint64_t)&v28, (uint64_t)&v27);
        if (v25)
        {
          uint64_t v18 = v25;
        }
        else
        {
          uint64_t v18 = CFDictionarySetData();
          jEHf8Xzsv8K(v28);
          if (!v18)
          {
            CFDictionaryRemoveValue(a2, @"PD-Info");
            goto LABEL_48;
          }
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        uint64_t v18 = 4294960528;
      }
      if (gLogCategory_APReceiverFairPlayHelper <= 90
        && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      uint64_t v18 = 0;
      unint64_t v19 = "(N-D)";
    }
  }
LABEL_48:
  if (a3) {
    *a3 = v19;
  }
  return v18;
}

uint64_t _APMediaDataControlServerGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPMediaDataControlServerTypeID = result;
  return result;
}

void _APMediaDataControlServerFinalize(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 104))
  {
    int v13 = FatalErrorF();
    APMediaDataControlServerCreate(v13, v14);
  }
  else
  {
    if (gLogCategory_APMediaDataControlServer <= 50
      && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFArrayRef v2 = *(const void **)(a1 + 48);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(a1 + 48) = 0;
    }
    CFStringRef v3 = *(const void **)(a1 + 88);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(a1 + 88) = 0;
    }
    uint64_t v4 = *(const void **)(a1 + 96);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(a1 + 96) = 0;
    }
    CFAllocatorRef v5 = *(const void **)(a1 + 160);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(a1 + 160) = 0;
    }
    CFDataRef v6 = *(const void **)(a1 + 40);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 40) = 0;
    }
    CFStringRef v7 = *(const void **)(a1 + 176);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 176) = 0;
    }
    CFArrayRef v8 = *(NSObject **)(a1 + 128);
    if (v8)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 128));
      dispatch_release(v8);
      *(void *)(a1 + 128) = 0;
    }
    int v9 = *(NSObject **)(a1 + 136);
    if (v9)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
      dispatch_release(v9);
      *(void *)(a1 + 136) = 0;
    }
    int v10 = *(_DWORD *)(a1 + 144);
    if ((v10 & 0x80000000) == 0)
    {
      if (close(v10) && *__error()) {
        __error();
      }
      *(_DWORD *)(a1 + 144) = -1;
    }
    if (*(void *)(a1 + 152))
    {
      NetSocket_Delete();
      *(void *)(a1 + 152) = 0;
    }
    uint64_t v11 = *(NSObject **)(a1 + 112);
    if (v11)
    {
      dispatch_release(v11);
      *(void *)(a1 + 112) = 0;
    }
    uint64_t v12 = *(NSObject **)(a1 + 120);
    if (v12)
    {
      dispatch_release(v12);
      *(void *)(a1 + 120) = 0;
    }
  }
}

uint64_t APMediaDataControlServerCreate(uint64_t a1, CFDictionaryRef theDict, long long *a3, uint64_t *a4)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  if (CFDictionaryContainsKey(theDict, @"MDC::AllowP2P")) {
    BOOL v8 = CFDictionaryGetInt64() != 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (CFDictionaryContainsKey(theDict, @"MDC::EncryptionReadKey"))
  {
    CFDataGetTypeID();
    TypedCFStringRef Value = (const void *)CFDictionaryGetTypedValue();
  }
  else
  {
    TypedCFStringRef Value = 0;
  }
  if (CFDictionaryContainsKey(theDict, @"MDC::EncryptionWriteKey"))
  {
    CFDataGetTypeID();
    int v10 = (const void *)CFDictionaryGetTypedValue();
  }
  else
  {
    int v10 = 0;
  }
  if (CFDictionaryContainsKey(theDict, @"MDC::Label"))
  {
    CFStringGetTypeID();
    uint64_t v11 = (__CFString *)CFDictionaryGetTypedValue();
  }
  else
  {
    uint64_t v11 = &stru_26DEA1830;
  }
  if (CFDictionaryContainsKey(theDict, @"MDC::QualityOfService")) {
    dispatch_qos_class_t Int64 = CFDictionaryGetInt64();
  }
  else {
    dispatch_qos_class_t Int64 = QOS_CLASS_DEFAULT;
  }
  if (CFDictionaryContainsKey(theDict, @"MDC::TimeoutSecs")) {
    int Int64Ranged = CFDictionaryGetInt64Ranged();
  }
  else {
    int Int64Ranged = -1;
  }
  if (!*(unsigned char *)(a1 + 1) || (TypedValue != 0) != (v10 != 0) || !a3 || !*((void *)a3 + 1))
  {
    APSLogErrorAt();
    return -6705;
  }
  int v28 = Int64Ranged;
  if (gAPMediaDataControlServerInitOnce != -1) {
    dispatch_once_f(&gAPMediaDataControlServerInitOnce, 0, (dispatch_function_t)_APMediaDataControlServerGetTypeID);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return -6728;
  }
  uint64_t v15 = Instance;
  *(void *)(Instance + 176) = 0;
  *(_OWORD *)(Instance + 144) = 0u;
  *(_OWORD *)(Instance + 160) = 0u;
  *(_OWORD *)(Instance + 112) = 0u;
  *(_OWORD *)(Instance + 128) = 0u;
  *(_OWORD *)(Instance + 80) = 0u;
  *(_OWORD *)(Instance + 96) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 16) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  long long v16 = *a3;
  *(void *)(Instance + 32) = *((void *)a3 + 2);
  *(_OWORD *)(Instance + 16) = v16;
  if (*(void *)a3)
  {
    uint64_t v17 = FigCFWeakReferenceHolderCreateWithReferencedObject();
    *(void *)(v15 + 40) = v17;
    if (!v17) {
      goto LABEL_59;
    }
  }
  *(_DWORD *)(v15 + 144) = -1;
  *(void *)(v15 + 152) = 0;
  SockAddrCopy();
  uint64_t v18 = *(const void **)(v15 + 48);
  if (v11) {
    CFRetain(v11);
  }
  *(void *)(v15 + 48) = v11;
  if (v18) {
    CFRelease(v18);
  }
  SNPrintF();
  unint64_t v19 = dispatch_queue_attr_make_with_qos_class(0, Int64, 0);
  dispatch_queue_t v20 = dispatch_queue_create(label, v19);
  *(void *)(v15 + 112) = v20;
  if (!v20) {
    goto LABEL_59;
  }
  SNPrintF();
  CFDataRef v21 = dispatch_queue_attr_make_with_qos_class(0, Int64, 0);
  dispatch_queue_t v22 = dispatch_queue_create(label, v21);
  *(void *)(v15 + 120) = v22;
  if (!v22) {
    goto LABEL_59;
  }
  *(unsigned char *)(v15 + 84) = v8;
  uint64_t v23 = *(const void **)(v15 + 88);
  if (TypedValue) {
    CFRetain(TypedValue);
  }
  *(void *)(v15 + 88) = TypedValue;
  if (v23) {
    CFRelease(v23);
  }
  char v24 = *(const void **)(v15 + 96);
  if (v10) {
    CFRetain(v10);
  }
  *(void *)(v15 + 96) = v10;
  if (v24) {
    CFRelease(v24);
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(v15 + 160) = Mutable;
  if (!Mutable)
  {
LABEL_59:
    APSLogErrorAt();
    unsigned int v29 = -6728;
    goto LABEL_60;
  }
  unsigned int v29 = ServerSocketOpen();
  if (v29)
  {
    APSLogErrorAt();
LABEL_60:
    CFRelease((CFTypeRef)v15);
    return v29;
  }
  if (*(unsigned char *)(v15 + 84)) {
    SocketSetP2P();
  }
  *(_DWORD *)(v15 + 168) = v28;
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APTTrafficMetricsCreate();
  *a4 = v15;
  return v29;
}

void controlServer_startInternal(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(v2 + 104)) {
    goto LABEL_8;
  }
  dispatch_source_t v3 = dispatch_source_create(MEMORY[0x263EF83E8], *(int *)(v2 + 144), 0, *(dispatch_queue_t *)(v2 + 112));
  if (v3)
  {
    uint64_t v4 = v3;
    CFAllocatorRef v5 = (void *)CFRetain((CFTypeRef)v2);
    dispatch_set_context(v4, v5);
    dispatch_source_set_event_handler_f(v4, (dispatch_function_t)controlServer_acceptConnection);
    dispatch_source_set_cancel_handler_f(v4, (dispatch_function_t)controlServer_listenSourceCancelled);
    *(void *)(v2 + 128) = v4;
    *(unsigned char *)(v2 + 104) = 1;
    dispatch_resume(v4);
LABEL_8:
    int v6 = 0;
    goto LABEL_9;
  }
  APSLogErrorAt();
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    int v6 = -6728;
    LogPrintF();
  }
  else
  {
    int v6 = -6728;
  }
LABEL_9:
  *((_DWORD *)a1 + 2) = v6;
}

void controlServer_listenSourceCancelled(_DWORD *cf)
{
  int v2 = cf[36];
  if ((v2 & 0x80000000) == 0)
  {
    if (close(v2) && *__error()) {
      __error();
    }
    cf[36] = -1;
  }

  CFRelease(cf);
}

uint64_t controlServer_acceptConnection(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_24;
  }
  if (gLogCategory_APMediaDataControlServer <= 30
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v2 = SocketAccept();
  if (v2)
  {
    int v12 = v2;
LABEL_35:
    APSLogErrorAt();
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 84)) {
    SocketSetP2P();
  }
  setsockopt(-1, 6, 1, &controlServer_acceptConnection_sOne, 4u);
  int v3 = NetSocket_CreateWithNative();
  if (v3)
  {
    int v12 = v3;
    goto LABEL_35;
  }
  uint64_t v4 = *(const void **)(a1 + 88);
  if (!v4) {
    goto LABEL_15;
  }
  if (!*(void *)(a1 + 96))
  {
LABEL_14:
    CFRelease(v4);
    *(void *)(a1 + 88) = 0;
    goto LABEL_15;
  }
  CFDataGetBytePtr((CFDataRef)v4);
  CFDataGetBytePtr(*(CFDataRef *)(a1 + 96));
  int v5 = NetSocketChaCha20Poly1305Configure();
  if (v5)
  {
    int v12 = v5;
    goto LABEL_35;
  }
  uint64_t v4 = *(const void **)(a1 + 88);
  if (v4) {
    goto LABEL_14;
  }
LABEL_15:
  int v6 = *(const void **)(a1 + 96);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 96) = 0;
  }
  int Native = NetSocket_GetNative();
  dispatch_source_t v8 = dispatch_source_create(MEMORY[0x263EF83E8], Native, 0, *(dispatch_queue_t *)(a1 + 112));
  if (!v8)
  {
    APSLogErrorAt();
    int v12 = -6728;
    goto LABEL_25;
  }
  int v9 = v8;
  APTTrafficMetricsConnectionFormed();
  int v10 = (void *)CFRetain((CFTypeRef)a1);
  dispatch_set_context(v9, v10);
  dispatch_source_set_event_handler_f(v9, (dispatch_function_t)controlServer_receiveData);
  dispatch_source_set_cancel_handler_f(v9, (dispatch_function_t)controlServer_dataSourceCancelled);
  *(void *)(a1 + 136) = v9;
  *(void *)(a1 + 152) = 0;
  uint64_t v11 = *(NSObject **)(a1 + 128);
  if (v11)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 128));
    dispatch_release(v11);
    *(void *)(a1 + 128) = 0;
  }
  dispatch_resume(v9);
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_24:
  int v12 = 0;
LABEL_25:
  uint64_t result = 0;
  if (v12)
  {
    if (gLogCategory_APMediaDataControlServer <= 90)
    {
      if (gLogCategory_APMediaDataControlServer != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

void controlServer_dataSourceCancelled(void *a1)
{
  NetSocket_Disconnect();
  if (a1[19])
  {
    NetSocket_Delete();
    a1[19] = 0;
  }

  CFRelease(a1);
}

void controlServer_receiveData(uint64_t a1)
{
  int v2 = *(NSObject **)(a1 + 136);
  if (!dispatch_source_get_data(v2))
  {
    if (v2)
    {
      dispatch_source_cancel(v2);
      dispatch_release(v2);
      *(void *)(a1 + 136) = 0;
    }
    return;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    return;
  }
  if (v2)
  {
    if (gLogCategory_APMediaDataControlServer <= 30
      && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APTTrafficMetricsMessageReadStarted();
    int v3 = (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 + 152) + 24))(*(void *)(a1 + 152), 32);
    APTTrafficMetricsMessageReadFinished();
    if (v3)
    {
      APSLogErrorAt();
    }
    else
    {
      int8x8_t v28 = vrev32_s8(0);
      unint64_t v29 = bswap64(0);
      int v30 = bswap32(0);
      CFDataRef v4 = (const __CFData *)(v28.u32[0] - 32);
      int v5 = (UInt8 *)malloc_type_malloc((size_t)v4, 0x755FD699uLL);
      if (v5)
      {
        int v6 = v5;
        if (v28.u32[0] == 32)
        {
          int v10 = 0;
          goto LABEL_17;
        }
        APTTrafficMetricsMessageReadStarted();
        int v3 = (*(uint64_t (**)(void, const __CFData *))(*(void *)(a1 + 152) + 24))(*(void *)(a1 + 152), v4);
        APTTrafficMetricsMessageReadFinished();
        if (v3)
        {
          APSLogErrorAt();
        }
        else
        {
          CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFDataRef v8 = CFDataCreateWithBytesNoCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], v6, (CFIndex)v4, (CFAllocatorRef)*MEMORY[0x263EFFB28]);
          if (v8)
          {
            CFDataRef v4 = v8;
            CFPropertyListRef v9 = CFPropertyListCreateWithData(v7, v8, 0, 0, 0);
            int v10 = v9;
            if (!v9)
            {
              int v3 = -6728;
              goto LABEL_83;
            }
            CFTypeID v11 = CFGetTypeID(v9);
            if (v11 != CFDictionaryGetTypeID())
            {
              int v3 = -6756;
LABEL_83:
              APSLogErrorAt();
              free(v6);
              dispatch_qos_class_t Int64 = 0;
LABEL_45:
              CFRelease(v4);
LABEL_46:
              if (v10) {
                CFRelease(v10);
              }
              if (Int64) {
                CFRelease(Int64);
              }
              if (!v3) {
                return;
              }
              goto LABEL_51;
            }
LABEL_17:
            dispatch_qos_class_t Int64 = 0;
            switch(v28.i32[1])
            {
              case 0x6173796E:
                goto LABEL_21;
              case 0x72706C79:
                dispatch_qos_class_t Int64 = (const void *)CFNumberCreateInt64();
                if (Int64)
                {
                  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 160), Int64);
                  if (!Value)
                  {
                    APSLogErrorAt();
                    int v3 = -6727;
                    goto LABEL_44;
                  }
                  CFArrayRef v15 = Value;
                  CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(Value, 0);
                  uint64_t v17 = CFArrayGetValueAtIndex(v15, 1);
                  controlServer_invokeResponse(a1, (uint64_t)ValueAtIndex, v10, v30, (uint64_t)v17);
                  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 160), Int64);
LABEL_43:
                  APTTrafficMetricsMessageProcessed();
                  int v3 = 0;
                  goto LABEL_44;
                }
                break;
              case 0x73796E63:
                dispatch_qos_class_t Int64 = (const void *)CFNumberCreateInt64();
                if (Int64)
                {
LABEL_21:
                  if (!v30 || !v10)
                  {
                    APSLogErrorAt();
                    int v3 = -6705;
                    goto LABEL_95;
                  }
                  if (*(void *)(a1 + 16))
                  {
                    int v13 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
                    if (!v13)
                    {
                      APSLogErrorAt();
                      if (gLogCategory_APMediaDataControlServer <= 60
                        && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      int v3 = -6709;
                      goto LABEL_95;
                    }
                  }
                  else
                  {
                    int v13 = 0;
                  }
                  uint64_t v18 = malloc_type_calloc(1uLL, 0x38uLL, 0x10E0040FFDB73A6uLL);
                  unint64_t v19 = v18;
                  if (v18)
                  {
                    v18[1] = a1;
                    *uint64_t v18 = *(void *)(a1 + 24);
                    v18[2] = Int64;
                    v18[3] = v29;
                    *((_DWORD *)v18 + 8) = v30;
                    v18[5] = v10;
                    v18[6] = v13;
                    CFRetain((CFTypeRef)a1);
                    dispatch_queue_t v20 = (const void *)v19[2];
                    if (v20) {
                      CFRetain(v20);
                    }
                    CFDataRef v21 = (const void *)v19[5];
                    if (v21) {
                      CFRetain(v21);
                    }
                    dispatch_queue_t v22 = (const void *)v19[6];
                    if (v22) {
                      CFRetain(v22);
                    }
                    dispatch_async_f(*(dispatch_queue_t *)(a1 + 120), v19, (dispatch_function_t)controlServer_delegateRequestInternal);
                    int v3 = 0;
                    if (v13) {
                      goto LABEL_41;
                    }
                  }
                  else
                  {
                    APSLogErrorAt();
                    int v3 = -6728;
                    if (v13) {
LABEL_41:
                    }
                      CFRelease(v13);
                  }
                  if (v19) {
                    goto LABEL_43;
                  }
LABEL_95:
                  APSLogErrorAt();
LABEL_44:
                  free(v6);
                  if (!v4) {
                    goto LABEL_46;
                  }
                  goto LABEL_45;
                }
                break;
              default:
                int v3 = -6717;
                goto LABEL_44;
            }
            APSLogErrorAt();
            int v3 = -6728;
            goto LABEL_44;
          }
          APSLogErrorAt();
          int v3 = -6728;
        }
        free(v6);
      }
      else
      {
        APSLogErrorAt();
        int v3 = -6728;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    int v3 = -6723;
  }
LABEL_51:
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APSLogErrorAt();
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v23 = *(NSObject **)(a1 + 136);
  if (v23)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
    dispatch_release(v23);
    *(void *)(a1 + 136) = 0;
  }
  if (*(void *)(a1 + 32))
  {
    if (*(void *)(a1 + 16))
    {
      char v24 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
      if (!v24)
      {
        APSLogErrorAt();
        if (gLogCategory_APMediaDataControlServer <= 60
          && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return;
      }
    }
    else
    {
      char v24 = 0;
    }
    uint64_t v25 = malloc_type_calloc(1uLL, 0x20uLL, 0x10E00402F6D9A90uLL);
    if (!v25)
    {
      APSLogErrorAt();
      if (!v24) {
        return;
      }
LABEL_72:
      CFRelease(v24);
      return;
    }
    char v26 = v25;
    v25[1] = a1;
    *uint64_t v25 = *(void *)(a1 + 32);
    *((_DWORD *)v25 + 4) = v3;
    v25[3] = v24;
    CFRetain((CFTypeRef)a1);
    int v27 = (const void *)v26[3];
    if (v27) {
      CFRetain(v27);
    }
    dispatch_async_f(*(dispatch_queue_t *)(a1 + 120), v26, (dispatch_function_t)controlServer_delegateFailureInternal);
    if (v24) {
      goto LABEL_72;
    }
  }
}

void controlServer_invokeResponse(uint64_t a1, uint64_t a2, const void *a3, int a4, uint64_t a5)
{
  if (!a1) {
    goto LABEL_11;
  }
  if (!a2) {
    return;
  }
  int v10 = malloc_type_calloc(1uLL, 0x20uLL, 0x10E0040443F8196uLL);
  if (v10)
  {
    CFTypeID v11 = v10;
    *int v10 = a2;
    v10[1] = a3;
    *((_DWORD *)v10 + 4) = a4;
    v10[3] = a5;
    if (a3) {
      CFRetain(a3);
    }
    int v12 = *(NSObject **)(a1 + 120);
    dispatch_async_f(v12, v11, (dispatch_function_t)controlServer_invokeResponseInternal);
  }
  else
  {
LABEL_11:
    APSLogErrorAt();
  }
}

void controlServer_delegateFailureInternal(void *a1)
{
  ((void (*)(void, void, void))*a1)(a1[1], *((unsigned int *)a1 + 4), a1[3]);
  int v2 = (const void *)a1[1];
  if (v2) {
    CFRelease(v2);
  }
  int v3 = (const void *)a1[3];
  if (v3) {
    CFRelease(v3);
  }

  free(a1);
}

void controlServer_invokeResponseInternal(void *a1)
{
  ((void (*)(void, void, void))*a1)(a1[1], *((unsigned int *)a1 + 4), a1[3]);
  int v2 = (const void *)a1[1];
  if (v2) {
    CFRelease(v2);
  }

  free(a1);
}

void controlServer_delegateRequestInternal(void *a1)
{
  ((void (*)(void, void, void, void, void, void))*a1)(a1[1], a1[2], *((unsigned int *)a1 + 8), a1[3], a1[5], a1[6]);
  int v2 = (const void *)a1[1];
  if (v2) {
    CFRelease(v2);
  }
  int v3 = (const void *)a1[2];
  if (v3) {
    CFRelease(v3);
  }
  CFDataRef v4 = (const void *)a1[5];
  if (v4) {
    CFRelease(v4);
  }
  int v5 = (const void *)a1[6];
  if (v5) {
    CFRelease(v5);
  }

  free(a1);
}

void controlServer_stopInternal(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(v2 + 104))
  {
    CFDictionaryApplyFunction(*(CFDictionaryRef *)(v2 + 160), (CFDictionaryApplierFunction)controlServer_cancelResponseApplier, (void *)v2);
    CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(v2 + 160));
    int v3 = *(NSObject **)(v2 + 128);
    if (v3)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v2 + 128));
      dispatch_release(v3);
      *(void *)(v2 + 128) = 0;
    }
    CFDataRef v4 = *(NSObject **)(v2 + 136);
    if (v4)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v2 + 136));
      dispatch_release(v4);
      *(void *)(v2 + 136) = 0;
    }
    *(unsigned char *)(v2 + 104) = 0;
    if (gLogCategory_APMediaDataControlServer <= 50
      && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  *((_DWORD *)a1 + 2) = 0;
}

void controlServer_cancelResponseApplier(int a1, CFArrayRef theArray, uint64_t a3)
{
  CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, 0);
  int v6 = CFArrayGetValueAtIndex(theArray, 1);

  controlServer_invokeResponse(a3, (uint64_t)ValueAtIndex, 0, -6723, (uint64_t)v6);
}

void APMediaDataControlServerSendRequest(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    int v10 = malloc_type_calloc(1uLL, 0x30uLL, 0x10E0040F9530876uLL);
    if (v10)
    {
      CFTypeID v11 = v10;
      *int v10 = a1;
      *((_DWORD *)v10 + 2) = a2;
      _DWORD v10[2] = 0;
      v10[3] = a3;
      v10[4] = a4;
      v10[5] = a5;
      CFRetain(a1);
      int v12 = (const void *)v11[3];
      if (v12) {
        CFRetain(v12);
      }
      int v13 = a1[14];
      dispatch_async_f(v13, v11, (dispatch_function_t)controlServer_sendRequestInternal);
      return;
    }
    int v14 = -6728;
  }
  else
  {
    int v14 = -6705;
  }
  APSLogErrorAt();

  controlServer_invokeResponse((uint64_t)a1, a4, 0, v14, a5);
}

void controlServer_sendRequestInternal(uint64_t *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  if (gLogCategory_APMediaDataControlServer <= 30
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(*a1 + 104))
  {
    APSLogErrorAt();
    CFDataRef v7 = 0;
    CFArrayRef v6 = 0;
    dispatch_qos_class_t Int64 = 0;
    int v13 = -6718;
    goto LABEL_41;
  }
  if (!*(void *)(*a1 + 136))
  {
    APSLogErrorAt();
    CFDataRef v7 = 0;
    CFArrayRef v6 = 0;
    dispatch_qos_class_t Int64 = 0;
    int v13 = -6723;
    goto LABEL_41;
  }
  uint64_t v2 = (const void *)a1[3];
  if (v2 && !CFPropertyListIsValid(v2, kCFPropertyListBinaryFormat_v1_0))
  {
    APSLogErrorAt();
    CFDataRef v7 = 0;
    CFArrayRef v6 = 0;
    dispatch_qos_class_t Int64 = 0;
    int v13 = -6717;
    goto LABEL_41;
  }
  if (a1[4])
  {
    dispatch_qos_class_t Int64 = 0;
    DWORD1(v14) = 1937337955;
    do
    {
      if (Int64) {
        CFRelease(Int64);
      }
      int v4 = RandomBytes();
      if (v4)
      {
        int v13 = v4;
        APSLogErrorAt();
        CFDataRef v7 = 0;
        CFArrayRef v6 = 0;
        dispatch_qos_class_t Int64 = 0;
        goto LABEL_41;
      }
      dispatch_qos_class_t Int64 = (const void *)CFNumberCreateInt64();
      if (!Int64)
      {
        APSLogErrorAt();
        CFDataRef v7 = 0;
        CFArrayRef v6 = 0;
        goto LABEL_40;
      }
    }
    while (CFDictionaryContainsKey(*(CFDictionaryRef *)(*a1 + 160), Int64));
    CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    *(_OWORD *)values = *((_OWORD *)a1 + 2);
    CFArrayRef v6 = CFArrayCreate(v5, (const void **)values, 2, 0);
    if (v6) {
      goto LABEL_19;
    }
    APSLogErrorAt();
    CFDataRef v7 = 0;
    goto LABEL_40;
  }
  CFArrayRef v6 = 0;
  dispatch_qos_class_t Int64 = 0;
  DWORD1(v14) = 1634957678;
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
LABEL_19:
  LODWORD(v15) = *((_DWORD *)a1 + 2);
  Empty = (const void *)a1[3];
  *((void *)&v14 + 1) = a1[2];
  if (!Empty) {
    Empty = (const void *)CFDictionaryGetEmpty();
  }
  CFDataRef Data = CFPropertyListCreateData(v5, Empty, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  CFDataRef v7 = Data;
  if (!Data)
  {
    APSLogErrorAt();
LABEL_40:
    int v13 = -6728;
    goto LABEL_41;
  }
  *(void *)&long long v14 = _byteswap_uint64(__PAIR64__(CFDataGetLength(Data) + 32, DWORD1(v14)));
  *((void *)&v14 + 1) = bswap64(*((unint64_t *)&v14 + 1));
  LODWORD(v15) = bswap32(v15);
  *(void *)((char *)&v15 + 4) = bswap64(*(unint64_t *)((char *)&v15 + 4));
  HIDWORD(v15) = 0;
  *(void *)&long long v16 = &v14;
  *((void *)&v16 + 1) = 32;
  if (CFDataGetLength(Data) < 1)
  {
    uint64_t v10 = 1;
  }
  else
  {
    *(void *)&long long v17 = CFDataGetBytePtr(v7);
    *((void *)&v17 + 1) = CFDataGetLength(v7);
    uint64_t v10 = 2;
  }
  int v11 = (*(uint64_t (**)(void, long long *, uint64_t, void))(*(void *)(*a1 + 152) + 40))(*(void *)(*a1 + 152), &v16, v10, *(unsigned int *)(*a1 + 168));
  if (!v11)
  {
    if (a1[4]) {
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(*a1 + 160), Int64, v6);
    }
    goto LABEL_28;
  }
  int v13 = v11;
  APSLogErrorAt();
LABEL_41:
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  controlServer_invokeResponse(*a1, a1[4], 0, v13, a1[5]);
  if (v7) {
LABEL_28:
  }
    CFRelease(v7);
  if (v6) {
    CFRelease(v6);
  }
  if (Int64) {
    CFRelease(Int64);
  }
  if (*a1) {
    CFRelease((CFTypeRef)*a1);
  }
  int v12 = (const void *)a1[3];
  if (v12) {
    CFRelease(v12);
  }
  free(a1);
}

uint64_t APMediaDataControlServerSendRequestSync(void *a1, uint64_t a2, dispatch_time_t a3)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
  if (!v6)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFDataRef v7 = v6;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 2, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    dispatch_release(v7);
    return 4294960568;
  }
  CFMutableDictionaryRef v9 = Mutable;
  uint64_t v10 = (NSObject **)malloc_type_calloc(1uLL, 0x10uLL, 0x20040A4A59CD2uLL);
  if (v10)
  {
    int v11 = v10;
    dispatch_retain(v7);
    *int v11 = v7;
    v11[1] = CFRetain(v9);
    APMediaDataControlServerSendRequest(a1, 1668116068, a2, (uint64_t)APMediaDataControlRequestSyncHandler, (uint64_t)v11);
    if (dispatch_semaphore_wait(v7, a3))
    {
      APSLogErrorAt();
      uint64_t Int64 = 4294960574;
    }
    else if (CFDictionaryContainsKey(v9, @"Error"))
    {
      uint64_t Int64 = CFDictionaryGetInt64();
      if (Int64) {
        APSLogErrorAt();
      }
    }
    else
    {
      APSLogErrorAt();
      uint64_t Int64 = 4294960554;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t Int64 = 4294960568;
  }
  dispatch_release(v7);
  CFRelease(v9);
  return Int64;
}

void APMediaDataControlRequestSyncHandler(void *value, uint64_t a2, uint64_t a3)
{
  if (value) {
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a3 + 8), @"Reply", value);
  }
  CFDictionarySetInt64();
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)a3);
  if (*(void *)a3) {
    dispatch_release(*(dispatch_object_t *)a3);
  }
  int v4 = *(const void **)(a3 + 8);
  if (v4) {
    CFRelease(v4);
  }

  free((void *)a3);
}

uint64_t APMediaDataControlServerSendResponse(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  context[0] = result;
  context[1] = a2;
  context[2] = a3;
  context[3] = a4;
  int v6 = a5;
  unsigned int v7 = 0;
  if (result)
  {
    if (a2)
    {
      dispatch_sync_f(*(dispatch_queue_t *)(result + 112), context, (dispatch_function_t)controlServer_sendResponseInternal);
      uint64_t result = v7;
      if (v7) {
        return APSLogErrorAt();
      }
    }
  }
  else
  {
    return APSLogErrorAt();
  }
  return result;
}

void controlServer_sendResponseInternal(_DWORD *a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  int v14 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  if (!*((void *)a1 + 1)) {
    goto LABEL_21;
  }
  if (gLogCategory_APMediaDataControlServer <= 30
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    if (!*((void *)a1 + 3)) {
      CFDictionaryGetEmpty();
    }
    LogPrintF();
  }
  if (*(unsigned char *)(*(void *)a1 + 104))
  {
    if (*(void *)(*(void *)a1 + 136))
    {
      uint64_t v2 = (const void *)*((void *)a1 + 3);
      if (v2 && !CFPropertyListIsValid(v2, kCFPropertyListBinaryFormat_v1_0))
      {
        APSLogErrorAt();
        int v10 = -6717;
      }
      else
      {
        unint64_t v3 = CFGetInt64();
        *(void *)((char *)&v13 + 4) = v3;
        CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        Empty = (const void *)*((void *)a1 + 3);
        if (!Empty) {
          Empty = (const void *)CFDictionaryGetEmpty();
        }
        CFDataRef Data = CFPropertyListCreateData(v4, Empty, kCFPropertyListBinaryFormat_v1_0, 0, 0);
        if (Data)
        {
          CFDataRef v7 = Data;
          *(void *)&long long v12 = bswap32(CFDataGetLength(Data) + 32) | 0x796C707200000000;
          *((void *)&v12 + 1) = bswap64(*((void *)a1 + 2));
          LODWORD(v13) = 0;
          *(void *)((char *)&v13 + 4) = bswap64(v3);
          HIDWORD(v13) = bswap32(a1[8]);
          *(void *)&long long v15 = &v12;
          *((void *)&v15 + 1) = 32;
          if (CFDataGetLength(v7) < 1)
          {
            uint64_t v9 = 1;
          }
          else
          {
            *(void *)&long long v16 = CFDataGetBytePtr(v7);
            *((void *)&v16 + 1) = CFDataGetLength(v7);
            uint64_t v9 = 2;
          }
          int v14 = (*(uint64_t (**)(void, long long *, uint64_t, void, uint64_t))(*(void *)(*(void *)a1 + 152)
                                                                                        + 40))(*(void *)(*(void *)a1 + 152), &v15, v9, *(unsigned int *)(*(void *)a1 + 168), v8);
          if (v14) {
            APSLogErrorAt();
          }
          CFRelease(v7);
LABEL_21:
          int v10 = v14;
          if (!v14) {
            goto LABEL_26;
          }
          goto LABEL_22;
        }
        APSLogErrorAt();
        int v10 = -6728;
      }
    }
    else
    {
      APSLogErrorAt();
      int v10 = -6723;
    }
  }
  else
  {
    APSLogErrorAt();
    int v10 = -6718;
  }
  int v14 = v10;
LABEL_22:
  if (gLogCategory_APMediaDataControlServer <= 90)
  {
    if (gLogCategory_APMediaDataControlServer != -1 || (v11 = _LogCategory_Initialize(), int v10 = v14, v11))
    {
      LogPrintF();
      int v10 = v14;
    }
  }
LABEL_26:
  a1[9] = v10;
}

uint64_t sbufsink_UpdateStats(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 72))
  {
    CFAllocatorRef v4 = *(void **)DerivedStorage;
    if (*(void *)DerivedStorage)
    {
      CFAllocatorRef v5 = v4[2];
      block[0] = (CFTypeRef)MEMORY[0x263EF8330];
      block[1] = (CFTypeRef)3221225472;
      block[2] = __APReceiverStatsCollectorUpdateSenderStats_block_invoke;
      block[3] = &__block_descriptor_48_e5_v8__0l;
      block[4] = v4;
      void block[5] = a2;
      dispatch_sync(v5, block);
      if (*(_DWORD *)(DerivedStorage + 68))
      {
        block[0] = 0;
        uint64_t CMBaseObject = FigValeriaGetCMBaseObject();
        uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v7) {
          uint64_t v8 = v7;
        }
        else {
          uint64_t v8 = 0;
        }
        uint64_t v9 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v8 + 48);
        if (v9)
        {
          v9(CMBaseObject, @"FigVideoQueueStats", *MEMORY[0x263EFFB08], block);
          if (block[0])
          {
            APReceiverStatsCollectorUpdateVideoPerformanceStats(*(void *)DerivedStorage, (uint64_t)block[0]);
            CFRelease(block[0]);
          }
        }
      }
      APReceiverStatsCollectorShowStats(*(void *)DerivedStorage);
    }
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895164;
  }
}

uint64_t sbufsink_ClearScreen()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMSampleBufferRef v7 = 0;
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  if (*(unsigned char *)(DerivedStorage + 72))
  {
    if (*(void *)(DerivedStorage + 24) <= mach_absolute_time()) {
      int64_t v1 = UpTicksToNanoseconds();
    }
    else {
      int64_t v1 = UpTicksToNanoseconds() + 10000000;
    }
    *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x263F010E0];
    sampleTimingArray.duration.epoch = *(void *)(MEMORY[0x263F010E0] + 16);
    CMTimeMake(&sampleTimingArray.presentationTimeStamp, v1, 1000000000);
    sampleTimingArray.decodeTimeStamp = *(CMTime *)*(void *)&MEMORY[0x263F01090];
    uint64_t v2 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, &v7);
    if (v2)
    {
      uint64_t v4 = v2;
    }
    else
    {
      unint64_t v3 = (const void *)*MEMORY[0x263EFFB40];
      CMSetAttachment(v7, (CFStringRef)*MEMORY[0x263F01048], (CFTypeRef)*MEMORY[0x263EFFB40], 1u);
      CMSetAttachment(v7, (CFStringRef)*MEMORY[0x263F01038], v3, 1u);
      uint64_t v4 = APReceiverSBufConsumerPushVideoSBuf(*(void *)(DerivedStorage + 8), (uint64_t)v7);
      if (!v4) {
        goto LABEL_11;
      }
    }
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v4 = 4294895164;
  }
LABEL_11:
  if (v7) {
    CFRelease(v7);
  }
  return v4;
}

uint64_t APReceiverSBufConsumerPushVideoSBuf(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = 0;
  long long v15 = &v14;
  uint64_t v16 = 0x2000000000;
  int v17 = 0;
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
  if (!v6)
  {
    CMSampleBufferRef v7 = MEMORY[0x263EF83A0];
    goto LABEL_9;
  }
  CMSampleBufferRef v7 = v6(a1);
  if (v7)
  {
LABEL_9:
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __APReceiverSBufConsumerPushVideoSBuf_block_invoke;
    block[3] = &unk_264894D80;
    block[4] = &v14;
    void block[5] = a1;
    CFTypeRef block[6] = a2;
    dispatch_sync(v7, block);
    uint64_t v10 = *((unsigned int *)v15 + 6);
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 32);
  if (v12) {
    uint64_t v10 = v12(a1, a2);
  }
  else {
    uint64_t v10 = 4294954514;
  }
  *((_DWORD *)v15 + 6) = v10;
LABEL_10:
  _Block_object_dispose(&v14, 8);
  return v10;
}

uint64_t __APReceiverSBufConsumerPushVideoSBuf_block_invoke(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
  if (v6) {
    uint64_t result = v6(v2, v3);
  }
  else {
    uint64_t result = 4294954514;
  }
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = result;
  return result;
}

uint64_t sbufsink_UpdateVideoConfig(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, uint64_t a7, uint64_t a8, int a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  int valuePtr = a9;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v24 = *(_DWORD *)(DerivedStorage + 64);
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 72))
  {
    uint64_t v31 = 4294895164;
LABEL_26:
    APSLogErrorAt();
    goto LABEL_27;
  }
  if (a8)
  {
    uint64_t v25 = *(const void **)(DerivedStorage + 32);
    if (v25)
    {
      CFRelease(v25);
      *(void *)(DerivedStorage + 32) = 0;
    }
    char v26 = *(const void **)(DerivedStorage + 40);
    if (v26)
    {
      CFRelease(v26);
      *(void *)(DerivedStorage + 40) = 0;
    }
    int v27 = *(const void **)(DerivedStorage + 48);
    if (v27)
    {
      CFRelease(v27);
      *(void *)(DerivedStorage + 48) = 0;
    }
    int8x8_t v28 = *(const void **)(DerivedStorage + 56);
    if (v28)
    {
      CFRelease(v28);
      *(void *)(DerivedStorage + 56) = 0;
    }
    uint64_t v29 = APSVideoFormatDescriptionCreateFromBlockBuffer();
    if (!v29)
    {
      v34.origin.x = a3;
      v34.origin.y = a4;
      v34.size.width = a5;
      v34.size.height = a6;
      *(void *)(DerivedStorage + 40) = CGRectCreateDictionaryRepresentation(v34);
      v35.origin.x = a12;
      v35.origin.y = a13;
      v35.size.width = a14;
      v35.size.height = a15;
      *(void *)(DerivedStorage + 48) = CGRectCreateDictionaryRepresentation(v35);
      *(void *)(DerivedStorage + 56) = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      FourCharCode MediaSubType = CMFormatDescriptionGetMediaSubType(*(CMFormatDescriptionRef *)(DerivedStorage + 32));
      *(_DWORD *)(DerivedStorage + 64) = MediaSubType;
      if (MediaSubType != v24
        && gLogCategory_APReceiverScreenSinkSBufConsumer <= 50
        && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APReceiverStatsCollectorUpdateVideoSizes(*(void *)DerivedStorage, a5, a6, a14, a15, a12, a13);
      APReceiverStatsCollectorUpdateVideoFormatDescription(*(void *)DerivedStorage, *(const opaqueCMFormatDescription **)(DerivedStorage + 32));
      return 0;
    }
    uint64_t v31 = v29;
    goto LABEL_26;
  }
  APSLogErrorAt();
  uint64_t v31 = 4294895165;
LABEL_27:
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 60
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v31;
}

uint64_t sbufsink_UpdateH264VideoConfig(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, uint64_t a7, const __CFData *a8, int a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  int valuePtr = a9;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 72))
  {
    uint64_t v29 = 4294895164;
LABEL_20:
    APSLogErrorAt();
    goto LABEL_21;
  }
  if (a8)
  {
    int v24 = *(const void **)(DerivedStorage + 32);
    if (v24)
    {
      CFRelease(v24);
      *(void *)(DerivedStorage + 32) = 0;
    }
    uint64_t v25 = *(const void **)(DerivedStorage + 40);
    if (v25)
    {
      CFRelease(v25);
      *(void *)(DerivedStorage + 40) = 0;
    }
    char v26 = *(const void **)(DerivedStorage + 48);
    if (v26)
    {
      CFRelease(v26);
      *(void *)(DerivedStorage + 48) = 0;
    }
    int v27 = *(const void **)(DerivedStorage + 56);
    if (v27)
    {
      CFRelease(v27);
      *(void *)(DerivedStorage + 56) = 0;
    }
    CFAllocatorRef v28 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFDataGetBytePtr(a8);
    CFDataGetLength(a8);
    uint64_t v29 = FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom();
    if (!v29)
    {
      v32.origin.x = a3;
      v32.origin.y = a4;
      v32.size.width = a5;
      v32.size.height = a6;
      *(void *)(DerivedStorage + 40) = CGRectCreateDictionaryRepresentation(v32);
      v33.origin.x = a12;
      v33.origin.y = a13;
      v33.size.width = a14;
      v33.size.height = a15;
      *(void *)(DerivedStorage + 48) = CGRectCreateDictionaryRepresentation(v33);
      *(void *)(DerivedStorage + 56) = CFNumberCreate(v28, kCFNumberSInt32Type, &valuePtr);
      *(_DWORD *)(DerivedStorage + 64) = 1635148593;
      APReceiverStatsCollectorUpdateVideoSizes(*(void *)DerivedStorage, a5, a6, a14, a15, a12, a13);
      APReceiverStatsCollectorUpdateVideoFormatDescription(*(void *)DerivedStorage, *(const opaqueCMFormatDescription **)(DerivedStorage + 32));
      return v29;
    }
    goto LABEL_20;
  }
  APSLogErrorAt();
  uint64_t v29 = 4294895165;
LABEL_21:
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 60
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v29;
}

uint64_t sbufsink_EnqueueFrame(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMSampleBufferRef v24 = 0;
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  size_t sampleSizeArray = 0;
  if (!*(unsigned char *)(DerivedStorage + 72))
  {
    uint64_t v20 = 4294895164;
    goto LABEL_31;
  }
  if (!*(void *)(DerivedStorage + 32))
  {
    uint64_t v20 = 4294895164;
    goto LABEL_31;
  }
  if (!*(void *)(DerivedStorage + 40))
  {
    uint64_t v20 = 4294895164;
    goto LABEL_31;
  }
  if (!*(void *)(DerivedStorage + 48))
  {
    uint64_t v20 = 4294895164;
    goto LABEL_31;
  }
  if (!*(void *)(DerivedStorage + 56))
  {
    uint64_t v20 = 4294895164;
    goto LABEL_31;
  }
  *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x263F01090];
  sampleTimingArray.duration.epoch = *(void *)(MEMORY[0x263F01090] + 16);
  sampleTimingArray.decodeTimeStamp = sampleTimingArray.duration;
  CMClockMakeHostTimeFromSystemUnits(&sampleTimingArray.presentationTimeStamp, a3);
  size_t sampleSizeArray = CMBlockBufferGetDataLength(a2);
  uint64_t v10 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, 1u, 0, 0, *(CMFormatDescriptionRef *)(DerivedStorage + 32), 1, 1, &sampleTimingArray, 1, &sampleSizeArray, &v24);
  if (v10)
  {
    uint64_t v20 = v10;
    goto LABEL_31;
  }
  if (!a5)
  {
    CFArrayRef SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(v24, 1u);
    CFDictionaryRef ValueAtIndex = (__CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0);
    CFDictionarySetValue(ValueAtIndex, (const void *)*MEMORY[0x263F01018], (const void *)*MEMORY[0x263EFFB40]);
  }
  CMSetAttachment(v24, (CFStringRef)*MEMORY[0x263F015E8], *(CFTypeRef *)(DerivedStorage + 40), 0);
  CMSetAttachment(v24, (CFStringRef)*MEMORY[0x263F015D8], *(CFTypeRef *)(DerivedStorage + 48), 0);
  CMSetAttachment(v24, (CFStringRef)*MEMORY[0x263F015F0], *(CFTypeRef *)(DerivedStorage + 56), 0);
  uint64_t v13 = *(void *)(DerivedStorage + 16);
  if (!v13 || *(_DWORD *)(DerivedStorage + 64) != 1869117027) {
    goto LABEL_20;
  }
  CMSampleBufferRef v14 = v24;
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  int v17 = *(uint64_t (**)(uint64_t, CMSampleBufferRef))(v16 + 32);
  if (!v17)
  {
    uint64_t v20 = 4294954514;
LABEL_31:
    APSLogErrorAt();
    goto LABEL_24;
  }
  uint64_t v18 = v17(v13, v14);
  if (v18)
  {
    uint64_t v20 = v18;
    goto LABEL_31;
  }
LABEL_20:
  uint64_t v19 = APReceiverSBufConsumerPushVideoSBuf(*(void *)(DerivedStorage + 8), (uint64_t)v24);
  if (v19)
  {
    uint64_t v20 = v19;
    goto LABEL_31;
  }
  *(void *)(DerivedStorage + 24) = a3;
  ++*(_DWORD *)(DerivedStorage + 68);
  if (a4) {
    APReceiverStatsCollectorLogFrameStats(a4, 0);
  }
  uint64_t v20 = 0;
LABEL_24:
  if (v24) {
    CFRelease(v24);
  }
  if (v20
    && gLogCategory_APReceiverScreenSinkSBufConsumer <= 60
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v20;
}

uint64_t sbufsink_Stop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 72))
  {
    uint64_t v1 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
      && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APReceiverStatsCollectorDisableHUD(*(void *)v1);
    uint64_t v2 = *(const void **)(v1 + 32);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(v1 + 32) = 0;
    }
    uint64_t v3 = *(const void **)(v1 + 40);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(v1 + 40) = 0;
    }
    uint64_t v4 = *(const void **)(v1 + 48);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(v1 + 48) = 0;
    }
    uint64_t v5 = *(const void **)(v1 + 56);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(v1 + 56) = 0;
    }
    *(_DWORD *)(v1 + 64) = 0;
    *(unsigned char *)(v1 + 72) = 0;
  }
  return 0;
}

uint64_t sbufsink_Start()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 72))
  {
    APSLogErrorAt();
    return 4294895164;
  }
  else
  {
    uint64_t result = 0;
    *(unsigned char *)(DerivedStorage + 72) = 1;
    *(_DWORD *)(DerivedStorage + 68) = 0;
  }
  return result;
}

uint64_t sbufsink_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2) {
    goto LABEL_42;
  }
  uint64_t v6 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"StatsDisplayEnabled"))
  {
    if (*(unsigned char *)(v6 + 72))
    {
      uint64_t v7 = *(void *)v6;
      if ((const void *)*MEMORY[0x263EFFB40] == a3) {
        APReceiverStatsCollectorEnableHUD(v7, 0);
      }
      else {
        APReceiverStatsCollectorDisableHUD(v7);
      }
      return 0;
    }
    uint64_t v14 = 4294895164;
LABEL_47:
    APSLogErrorAt();
    return v14;
  }
  if (CFEqual(a2, @"StatsCollector"))
  {
    if (*(unsigned char *)(v6 + 72))
    {
      uint64_t v14 = 4294895164;
      goto LABEL_47;
    }
    if (!a3)
    {
      uint64_t v9 = *(const void **)v6;
      *(void *)uint64_t v6 = 0;
      if (!v9) {
        return 0;
      }
LABEL_30:
      CFRelease(v9);
      return 0;
    }
    CFTypeID v8 = CFGetTypeID(a3);
    if (APReceiverStatsCollectorGetTypeID_once != -1) {
      dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_446);
    }
    if (v8 == APReceiverStatsCollectorGetTypeID_typeID)
    {
      uint64_t v9 = *(const void **)v6;
      *(void *)uint64_t v6 = a3;
      CFRetain(a3);
      if (!v9) {
        return 0;
      }
      goto LABEL_30;
    }
LABEL_42:
    APSLogErrorAt();
    return 4294895165;
  }
  if (CFEqual(a2, @"KeyExchangeReceiver"))
  {
    if (*(unsigned char *)(v6 + 72))
    {
      uint64_t v14 = 4294895164;
      goto LABEL_47;
    }
    if (a3)
    {
      CFTypeID v10 = CFGetTypeID(a3);
      if (v10 != FigPWDKeyExchangeReceiverGetTypeID()) {
        goto LABEL_42;
      }
      uint64_t v13 = *(const void **)(v6 + 16);
      int v11 = (void *)(v6 + 16);
      long long v12 = v13;
      *int v11 = a3;
      CFRetain(a3);
      if (!v13)
      {
LABEL_25:
        if (*v11
          && gLogCategory_APReceiverScreenSinkSBufConsumer <= 50
          && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
    }
    else
    {
      uint64_t v16 = *(const void **)(v6 + 16);
      int v11 = (void *)(v6 + 16);
      long long v12 = v16;
      *int v11 = 0;
      if (!v16) {
        goto LABEL_25;
      }
    }
    CFRelease(v12);
    goto LABEL_25;
  }
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

CFStringRef sbufsink_CopyDebugDescription(const void *a1)
{
  ASPrintF();
  CFAllocatorRef v2 = CFGetAllocator(a1);
  CFStringRef v3 = CFStringCreateWithFormat(v2, 0, @"<APReceiverScreenSinkSBufConsumer %p %s>", a1, 0);
  free(0);
  return v3;
}

void sbufsink_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
  CFAllocatorRef v2 = *(const void **)(DerivedStorage + 32);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 32) = 0;
  }
  CFStringRef v3 = *(const void **)(DerivedStorage + 40);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 40) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 48);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 48) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 56);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 56) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 16);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 16) = 0;
  }
}

uint64_t initMRMediaRemoteRemovePlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v6 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteRemovePlayer");
  softLinkMRMediaRemoteRemovePlayer = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

void *__MediaRemoteLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote", 2);
  MediaRemoteLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  int v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback");
  if (v0)
  {
    uint64_t result = *v0;
    constantValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback = result;
  }
  else
  {
    uint64_t result = constantValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback;
  }
  getMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback = MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlaybackFunction;
  return result;
}

uint64_t MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlaybackFunction()
{
  return constantValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback;
}

uint64_t initValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  int v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange");
  if (v0)
  {
    uint64_t result = *v0;
    constantValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange = result;
  }
  else
  {
    uint64_t result = constantValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange;
  }
  getMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange = MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChangeFunction;
  return result;
}

uint64_t MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChangeFunction()
{
  return constantValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange;
}

uint64_t initValMRNowPlayingSessionManagerIsSilentPrimaryDidChange()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  int v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerIsSilentPrimaryDidChange");
  if (v0)
  {
    uint64_t result = *v0;
    constantValMRNowPlayingSessionManagerIsSilentPrimaryDidChange = result;
  }
  else
  {
    uint64_t result = constantValMRNowPlayingSessionManagerIsSilentPrimaryDidChange;
  }
  getMRNowPlayingSessionManagerIsSilentPrimaryDidChange = MRNowPlayingSessionManagerIsSilentPrimaryDidChangeFunction;
  return result;
}

uint64_t MRNowPlayingSessionManagerIsSilentPrimaryDidChangeFunction()
{
  return constantValMRNowPlayingSessionManagerIsSilentPrimaryDidChange;
}

uint64_t initMRMediaRemoteSetWantsNowPlayingNotifications(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v2 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetWantsNowPlayingNotifications");
  softLinkMRMediaRemoteSetWantsNowPlayingNotifications = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

void ___getDefaultMRSupportedCommandInfos_block_invoke()
{
  CFAllocatorRef v0 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 13, MEMORY[0x263EFFF70]);
  for (uint64_t i = 0; i != 13; ++i)
  {
    uint64_t v3 = dword_22B497804[i];
    uint64_t v4 = ((uint64_t (*)(uint64_t))softLinkMRMediaRemoteCommandInfoCreate)((uint64_t)v0);
    if (v4)
    {
      uint64_t v5 = (const void *)v4;
      ((void (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoSetCommand)(v4, v3);
      ((void (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoSetEnabled)((uint64_t)v5, 1);
      CFArrayAppendValue(Mutable, v5);
      CFRelease(v5);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  _getDefaultMRSupportedCommandInfos_s_defaultCommandInfos = (uint64_t)CFArrayCreateCopy(v0, Mutable);
  if (Mutable)
  {
    CFRelease(Mutable);
  }
}

uint64_t initMRMediaRemoteCommandInfoSetEnabled(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoSetEnabled");
  softLinkMRMediaRemoteCommandInfoSetEnabled = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initMRMediaRemoteCommandInfoSetCommand(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoSetCommand");
  softLinkMRMediaRemoteCommandInfoSetCommand = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initMRMediaRemoteCommandInfoCreate(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v2 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoCreate");
  softLinkMRMediaRemoteCommandInfoCreate = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initValkMRMediaRemotePlayerPlaybackStateDidChangeNotification()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemotePlayerPlaybackStateDidChangeNotification");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemotePlayerPlaybackStateDidChangeNotification = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemotePlayerPlaybackStateDidChangeNotification;
  }
  getkMRMediaRemotePlayerPlaybackStateDidChangeNotification = kMRMediaRemotePlayerPlaybackStateDidChangeNotificationFunction;
  return result;
}

uint64_t kMRMediaRemotePlayerPlaybackStateDidChangeNotificationFunction()
{
  return constantValkMRMediaRemotePlayerPlaybackStateDidChangeNotification;
}

Class initMRPlayerPath()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  Class result = objc_getClass("MRPlayerPath");
  classMRPlayerPath = (uint64_t)result;
  getMRPlayerPathClass = MRPlayerPathFunction;
  return result;
}

uint64_t MRPlayerPathFunction()
{
  return classMRPlayerPath;
}

Class initMRPlayer()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  Class result = objc_getClass("MRPlayer");
  classMRPlayer = (uint64_t)result;
  getMRPlayerClass = MRPlayerFunction;
  return result;
}

uint64_t MRPlayerFunction()
{
  return classMRPlayer;
}

uint64_t initMRNowPlayingSessionManagerLocalDeviceRoutingContextID()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerLocalDeviceRoutingContextID");
  softLinkMRNowPlayingSessionManagerLocalDeviceRoutingContextID = v0;

  return v0();
}

uint64_t initMRNowPlayingSessionManagerIsSilentPrimary()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerIsSilentPrimary");
  softLinkMRNowPlayingSessionManagerIsSilentPrimary = v0;

  return v0();
}

uint64_t initValkMRMediaRemotePlaybackStateUserInfoKey()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemotePlaybackStateUserInfoKey");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemotePlaybackStateUserInfoKey = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemotePlaybackStateUserInfoKey;
  }
  getkMRMediaRemotePlaybackStateUserInfoKey = kMRMediaRemotePlaybackStateUserInfoKeyFunction;
  return result;
}

uint64_t kMRMediaRemotePlaybackStateUserInfoKeyFunction()
{
  return constantValkMRMediaRemotePlaybackStateUserInfoKey;
}

uint64_t initValkMRNowPlayingPlayerPathUserInfoKey()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRNowPlayingPlayerPathUserInfoKey");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRNowPlayingPlayerPathUserInfoKey = result;
  }
  else
  {
    uint64_t result = constantValkMRNowPlayingPlayerPathUserInfoKey;
  }
  getkMRNowPlayingPlayerPathUserInfoKey = kMRNowPlayingPlayerPathUserInfoKeyFunction;
  return result;
}

uint64_t kMRNowPlayingPlayerPathUserInfoKeyFunction()
{
  return constantValkMRNowPlayingPlayerPathUserInfoKey;
}

uint64_t initMRMediaRemoteSyncClientProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFTypeID v10 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSyncClientProperties");
  softLinkMRMediaRemoteSyncClientProperties = v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, a2, a3, a4, a5);
}

uint64_t initMRNowPlayingClientCreateFromExternalRepresentation(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v2 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingClientCreateFromExternalRepresentation");
  softLinkMRNowPlayingClientCreateFromExternalRepresentation = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initValkMRMediaRemoteMediaTypeMusic()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteMediaTypeMusic");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteMediaTypeMusic = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteMediaTypeMusic;
  }
  getkMRMediaRemoteMediaTypeMusic = kMRMediaRemoteMediaTypeMusicFunction;
  return result;
}

uint64_t kMRMediaRemoteMediaTypeMusicFunction()
{
  return constantValkMRMediaRemoteMediaTypeMusic;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoMediaType()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoMediaType");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoMediaType = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoMediaType;
  }
  getkMRMediaRemoteNowPlayingInfoMediaType = kMRMediaRemoteNowPlayingInfoMediaTypeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoMediaTypeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoMediaType;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoUniqueIdentifier()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoUniqueIdentifier");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier;
  }
  getkMRMediaRemoteNowPlayingInfoUniqueIdentifier = kMRMediaRemoteNowPlayingInfoUniqueIdentifierFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoUniqueIdentifierFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier;
}

CFDictionaryRef ___getMetadataKeyMap_block_invoke()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  long long v5 = *(_OWORD *)&off_264894ED8;
  long long v6 = xmmword_264894EE8;
  uint64_t v7 = @"uniqueID";
  *(_OWORD *)keys = xmmword_264894EA8;
  long long v3 = *(_OWORD *)&off_264894EB8;
  long long v4 = xmmword_264894EC8;
  values[0] = (void *)getkMRMediaRemoteNowPlayingInfoAlbum();
  values[1] = (void *)getkMRMediaRemoteNowPlayingInfoArtist();
  values[2] = (void *)getkMRMediaRemoteNowPlayingInfoArtworkData();
  values[3] = (void *)getkMRMediaRemoteNowPlayingInfoArtworkMIMEType();
  values[4] = (void *)getkMRMediaRemoteNowPlayingInfoDuration();
  values[5] = (void *)getkMRMediaRemoteNowPlayingInfoElapsedTime();
  values[6] = (void *)getkMRMediaRemoteNowPlayingInfoPlaybackRate();
  values[7] = (void *)getkMRMediaRemoteNowPlayingInfoTitle();
  values[8] = (void *)getkMRMediaRemoteNowPlayingInfoTotalTrackCount();
  values[9] = (void *)getkMRMediaRemoteNowPlayingInfoTrackNumber();
  values[10] = (void *)getkMRMediaRemoteNowPlayingInfoUniqueIdentifier();
  CFDictionaryRef result = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const void **)keys, (const void **)values, 11, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  _getMetadataKeyMap_s_metadataKeyMap = (uint64_t)result;
  return result;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTrackNumber()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTrackNumber");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTrackNumber = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTrackNumber;
  }
  getkMRMediaRemoteNowPlayingInfoTrackNumber = kMRMediaRemoteNowPlayingInfoTrackNumberFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTrackNumberFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTrackNumber;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTotalTrackCount()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTotalTrackCount");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTotalTrackCFIndex Count = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount;
  }
  getkMRMediaRemoteNowPlayingInfoTotalTrackCFIndex Count = kMRMediaRemoteNowPlayingInfoTotalTrackCountFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTotalTrackCountFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTitle()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTitle");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTitle = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTitle;
  }
  getkMRMediaRemoteNowPlayingInfoTitle = kMRMediaRemoteNowPlayingInfoTitleFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTitleFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTitle;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoPlaybackRate()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoPlaybackRate");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoPlaybackRate = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoPlaybackRate;
  }
  getkMRMediaRemoteNowPlayingInfoPlaybackRate = kMRMediaRemoteNowPlayingInfoPlaybackRateFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoPlaybackRateFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoPlaybackRate;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoElapsedTime()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoElapsedTime");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoElapsedTime = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoElapsedTime;
  }
  getkMRMediaRemoteNowPlayingInfoElapsedTime = kMRMediaRemoteNowPlayingInfoElapsedTimeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoElapsedTimeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoElapsedTime;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoDuration()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoDuration");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoDuration = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoDuration;
  }
  getkMRMediaRemoteNowPlayingInfoDuration = kMRMediaRemoteNowPlayingInfoDurationFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoDurationFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoDuration;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtworkMIMEType()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtworkMIMEType");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType;
  }
  getkMRMediaRemoteNowPlayingInfoArtworkMIMEType = kMRMediaRemoteNowPlayingInfoArtworkMIMETypeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtworkMIMETypeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtworkData()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtworkData");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtworkCFDataRef Data = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoArtworkData;
  }
  getkMRMediaRemoteNowPlayingInfoArtworkCFDataRef Data = kMRMediaRemoteNowPlayingInfoArtworkDataFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtworkDataFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtworkData;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtist()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtist");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtist = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoArtist;
  }
  getkMRMediaRemoteNowPlayingInfoArtist = kMRMediaRemoteNowPlayingInfoArtistFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtistFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtist;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoAlbum()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoAlbum");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoAlbum = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoAlbum;
  }
  getkMRMediaRemoteNowPlayingInfoAlbum = kMRMediaRemoteNowPlayingInfoAlbumFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoAlbumFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoAlbum;
}

void sub_22B3C58BC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t initMRMediaRemoteGetNowPlayingInfoForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v8 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteGetNowPlayingInfoForPlayer");
  softLinkMRMediaRemoteGetNowPlayingInfoForPlayer = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initMRMediaRemoteSetNowPlayingPlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v6 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetNowPlayingPlayer");
  softLinkMRMediaRemoteSetNowPlayingPlayer = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initMRMediaRemoteCommandInfoCreateFromExternalRepresentation(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoCreateFromExternalRepresentation");
  softLinkMRMediaRemoteCommandInfoCreateFromExternalRepresentation = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initMRMediaRemoteSetSupportedCommandsForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v8 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetSupportedCommandsForPlayer");
  softLinkMRMediaRemoteSetSupportedCommandsForPlayer = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initMRMediaRemoteRemoveCommandHandlerBlockForPlayer(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteRemoveCommandHandlerBlockForPlayer");
  softLinkMRMediaRemoteRemoveCommandHandlerBlockForPlayer = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

void sub_22B3C62C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t initMRMediaRemoteAddCommandHandlerBlockForPlayer(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteAddCommandHandlerBlockForPlayer");
  softLinkMRMediaRemoteAddCommandHandlerBlockForPlayer = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

void sub_22B3C6684(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t initValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteOptionRemoteControlInterfaceIdentifier");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
  }
  getkMRMediaRemoteOptionRemoteControlInterfaceIdentifier = kMRMediaRemoteOptionRemoteControlInterfaceIdentifierFunction;
  return result;
}

uint64_t kMRMediaRemoteOptionRemoteControlInterfaceIdentifierFunction()
{
  return constantValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
}

uint64_t initMRMediaRemoteSetPlaybackStateForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v8 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetPlaybackStateForPlayer");
  softLinkMRMediaRemoteSetPlaybackStateForPlayer = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initMRMediaRemoteSetNowPlayingInfoForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFTypeID v10 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetNowPlayingInfoForPlayer");
  softLinkMRMediaRemoteSetNowPlayingInfoForPlayer = v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, a2, a3, a4, a5);
}

uint64_t initMRMediaRemoteBroadcastCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v12 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteBroadcastCommand");
  softLinkMRMediaRemoteBroadcastCommand = v12;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v12)(a1, a2, a3, a4, a5, a6);
}

uint64_t initMRMediaRemoteGetLocalOrigin()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteGetLocalOrigin");
  softLinkMRMediaRemoteGetLocalOrigin = v0;

  return v0();
}

uint64_t initMRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v8 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer");
  softLinkMRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initMRNowPlayingSessionManagerStopSession()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  CFAllocatorRef v0 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerStopSession");
  softLinkMRNowPlayingSessionManagerStopSession = v0;

  return v0();
}

uint64_t initMRMediaRemoteSetCanBeNowPlayingForPlayer(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetCanBeNowPlayingForPlayer");
  softLinkMRMediaRemoteSetCanBeNowPlayingForPlayer = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

void sub_22B3C7968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy_(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

uint64_t initMRNowPlayingSessionManagerStartSession(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  long long v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerStartSession");
  softLinkMRNowPlayingSessionManagerStartSession = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initMRMediaRemoteSetCanBeNowPlayingApplication(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetCanBeNowPlayingApplication");
  softLinkMRMediaRemoteSetCanBeNowPlayingApplication = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initMRMediaRemoteSetNowPlayingApplicationOverrideEnabled(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_128);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetNowPlayingApplicationOverrideEnabled");
  softLinkMRMediaRemoteSetNowPlayingApplicationOverrideEnabled = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t APAdvertiserGetTypeID()
{
  if (APAdvertiserGetTypeID_initOnce != -1) {
    dispatch_once_f(&APAdvertiserGetTypeID_initOnce, &APAdvertiserGetTypeID_typeID, (dispatch_function_t)_APAdvertiserClassRegister);
  }
  return APAdvertiserGetTypeID_typeID;
}

uint64_t _APAdvertiserClassRegister(uint64_t *a1)
{
  uint64_t result = _CFRuntimeRegisterClass();
  *a1 = result;
  return result;
}

void _APAdvertiserFinalize(uint64_t a1)
{
  _APAdvertiserDestroySubAdvertiser(a1 + 128);
  _APAdvertiserDestroySubAdvertiser(a1 + 136);
  _APAdvertiserDestroySubAdvertiser(a1 + 144);
  _APAdvertiserDestroySubAdvertiser(a1 + 152);
  _APAdvertiserDestroySubAdvertiser(a1 + 160);
  _APAdvertiserDestroySubAdvertiser(a1 + 168);
  uint64_t v2 = *(const void **)(a1 + 96);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 96) = 0;
  }
  long long v3 = *(const void **)(a1 + 104);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 104) = 0;
  }
  long long v4 = *(const void **)(a1 + 216);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 216) = 0;
  }
  long long v5 = *(const void **)(a1 + 40);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 40) = 0;
  }
  long long v6 = *(const void **)(a1 + 72);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 72) = 0;
  }
  uint64_t v7 = *(const void **)(a1 + 112);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 112) = 0;
  }
  uint64_t v8 = *(NSObject **)(a1 + 64);
  if (v8)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
    dispatch_release(v8);
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v9 = *(NSObject **)(a1 + 16);
  if (v9)
  {
    dispatch_release(v9);
    *(void *)(a1 + 16) = 0;
  }
}

void _APAdvertiserDestroySubAdvertiser(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    if (v2[1])
    {
      BonjourAdvertiserStop();
      CFRelease(*(CFTypeRef *)(*(void *)a1 + 8));
      *(void *)(*(void *)a1 + 8) = 0;
      uint64_t v2 = *(void **)a1;
    }
    if (!v2[2]
      || (BonjourAdvertiserStop(),
          CFRelease(*(CFTypeRef *)(*(void *)a1 + 16)),
          *(void *)(*(void *)a1 + 16) = 0,
          (uint64_t v2 = *(void **)a1) != 0))
    {
      free(v2);
      *(void *)a1 = 0;
    }
  }
}

uint64_t APAdvertiserCreate(const __CFDictionary *a1, uint64_t *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (APAdvertiserGetTypeID_initOnce != -1) {
    dispatch_once_f(&APAdvertiserGetTypeID_initOnce, &APAdvertiserGetTypeID_typeID, (dispatch_function_t)_APAdvertiserClassRegister);
  }
  uint64_t Instance = (_OWORD *)_CFRuntimeCreateInstance();
  if (Instance)
  {
    uint64_t v5 = (uint64_t)Instance;
    Instance[13] = 0u;
    Instance[14] = 0u;
    Instance[11] = 0u;
    Instance[12] = 0u;
    Instance[9] = 0u;
    Instance[10] = 0u;
    Instance[7] = 0u;
    Instance[8] = 0u;
    Instance[5] = 0u;
    Instance[6] = 0u;
    Instance[3] = 0u;
    Instance[4] = 0u;
    Instance[1] = 0u;
    Instance[2] = 0u;
    dispatch_queue_t v6 = dispatch_queue_create("APAdvertiser", 0);
    *(void *)(v5 + 16) = v6;
    if (v6)
    {
      uint64_t v7 = FigCFWeakReferenceHolderCreateWithReferencedObject();
      *(void *)(v5 + 88) = v7;
      if (v7)
      {
        *(unsigned char *)(v5 + 120) = 1;
        if (a1)
        {
          *(unsigned char *)(v5 + 180) = CFDictionaryGetInt64() != 0;
          *(unsigned char *)(v5 + 181) = CFDictionaryGetInt64() != 0;
          if (CFDictionaryGetValue(a1, @"interfaceName"))
          {
            CFGetCString();
            if (v17[0])
            {
              unsigned int v8 = if_nametoindex(v17);
              if (v8) {
                *(_DWORD *)(v5 + 28) = v8;
              }
            }
          }
          *(_DWORD *)(v5 + 24) = CFDictionaryGetInt64Ranged();
          CFArrayRef Value = CFDictionaryGetValue(a1, @"systemInfo");
          *(void *)(v5 + 216) = Value;
          if (Value) {
            CFRetain(Value);
          }
        }
        *(unsigned char *)(v5 + 121) = IsAppleTV();
        FigCFDictionaryGetBooleanIfPresent();
        if (*(unsigned char *)(v5 + 181))
        {
          *(unsigned char *)(v5 + 120) = 0;
          _APAdvertiserEnsureAssistedModeInfoCreated(v5, 0);
          char v10 = 0;
        }
        else if (*(unsigned char *)(v5 + 180))
        {
          char v10 = 0;
          *(_WORD *)(v5 + 120) = 0;
        }
        else
        {
          char v10 = 1;
        }
        SharedHelper = (const void *)APConnectivityHelperGetSharedHelper();
        if (SharedHelper)
        {
          CFTypeRef v12 = CFRetain(SharedHelper);
          *(void *)(v5 + 40) = v12;
          if (v12)
          {
            if (!APConnectivityHelperRegisterEventHandler()
              || gLogCategory_APAdvertiser > 90
              || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize())
            {
              goto LABEL_31;
            }
            goto LABEL_27;
          }
        }
        else
        {
          *(void *)(v5 + 40) = 0;
        }
        if (gLogCategory_APAdvertiser > 90
          || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_31;
        }
LABEL_27:
        LogPrintF();
LABEL_31:
        uint64_t v13 = *(NSObject **)(v5 + 16);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = __APAdvertiserCreate_block_invoke;
        block[3] = &__block_descriptor_49_e5_v8__0l;
        char v16 = v10;
        block[4] = v5;
        void block[5] = a1;
        dispatch_sync(v13, block);
        uint64_t result = 0;
        *a2 = v5;
        return result;
      }
    }
    APSLogErrorAt();
    APAdvertiserInvalidate(v5);
    CFRelease((CFTypeRef)v5);
  }
  else
  {
    APSLogErrorAt();
  }
  return 4294960568;
}

uint64_t _APAdvertiserEnsureAssistedModeInfoCreated(uint64_t result, int a2)
{
  uint64_t v2 = result;
  long long v3 = (const char *)(result + 182);
  if (a2 || !*(unsigned char *)(result + 182))
  {
    do
    {
LABEL_3:
      while (1)
      {
        RandomString();
        size_t v4 = strlen(v3);
        if (v4 >= 0xA && v4 <= 0xF) {
          break;
        }
        APSLogErrorAt();
      }
      char v5 = *v3;
      dispatch_queue_t v6 = (unsigned __int8 *)(v2 + 183);
    }
    while (!*v3);
    while ((v5 - 48) < 0xA)
    {
      int v7 = *v6++;
      char v5 = v7;
      if (!v7) {
        goto LABEL_3;
      }
    }
    return RandomString();
  }
  return result;
}

uint64_t __APAdvertiserCreate_block_invoke(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    *(_DWORD *)(*(void *)(a1 + 32) + 56) |= 1u;
  }
  uint64_t result = (uint64_t)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 40), @"P2PConfig");
  if (result)
  {
    uint64_t result = _APAdvertiserProcessP2PConfig(*(void *)(a1 + 32));
    if (result)
    {
      return APSLogErrorAt();
    }
  }
  return result;
}

uint64_t APAdvertiserInvalidate(uint64_t a1)
{
  uint64_t v9 = 0;
  char v10 = &v9;
  uint64_t v11 = 0x2020000000;
  int v12 = 0;
  uint64_t v5 = 0;
  dispatch_queue_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  int v8 = 0;
  uint64_t v1 = *(NSObject **)(a1 + 16);
  if (v1)
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APAdvertiserInvalidate_block_invoke;
    block[3] = &unk_264895F08;
    void block[5] = &v5;
    void block[6] = a1;
    block[4] = &v9;
    dispatch_sync(v1, block);
    uint64_t v2 = *((unsigned int *)v10 + 6);
    if (!v2) {
      uint64_t v2 = *((unsigned int *)v6 + 6);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  _Block_object_dispose(&v5, 8);
  _Block_object_dispose(&v9, 8);
  return v2;
}

void __APAdvertiserInvalidate_block_invoke(void *a1)
{
  _APAdvertiserStop(a1[6]);
  uint64_t v2 = (void *)a1[6];
  if (v2[5])
  {
    APConnectivityHelperRemoveAllRegistrations();
    uint64_t v2 = (void *)a1[6];
  }
  long long v3 = (const void *)v2[11];
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1[6] + 88) = 0;
    uint64_t v2 = (void *)a1[6];
  }
  uint64_t v4 = v2[12];
  if (v4)
  {
    uint64_t v5 = *(void **)(v4 + 16);
    dispatch_queue_t v6 = [v5 internalQueue];
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v10 = 3221225472;
    uint64_t v11 = __APAdvertiserBTLEManagerInvalidate_block_invoke;
    int v12 = &unk_264895FB0;
    uint64_t v13 = (NSObject **)v5;
    dispatch_sync(v6, &block);
    *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = 0;
    uint64_t v2 = (void *)a1[6];
  }
  uint64_t v7 = (NSObject **)v2[13];
  if (v7)
  {
    if (gLogCategory_APAdvertiserRapportManager <= 50
      && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v8 = v7[5];
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v10 = 3221225472;
    uint64_t v11 = __APAdvertiserRapportManagerInvalidate_block_invoke;
    int v12 = &__block_descriptor_40_e5_v8__0l;
    uint64_t v13 = v7;
    dispatch_sync(v8, &block);
    *(_DWORD *)(*(void *)(a1[5] + 8) + 24) = 0;
    uint64_t v2 = (void *)a1[6];
  }

  _APAdvertiserSetNeedsNIRangingSession((uint64_t)v2, 0);
}

uint64_t _APAdvertiserStop(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    uint64_t v1 = result;
    *(unsigned char *)(result + 32) = 0;
    if (*(void *)(result + 40))
    {
      _APAdvertiserStopListeningForNetwork(result, 1, *(unsigned __int8 *)(result + 48));
      _APAdvertiserStopListeningForNetwork(v1, 7, *(unsigned __int8 *)(v1 + 49));
    }
    return _APAdvertiserUpdate(v1);
  }
  return result;
}

void _APAdvertiserSetNeedsNIRangingSession(uint64_t a1, int a2)
{
  if (*(unsigned __int8 *)(a1 + 224) != a2)
  {
    if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 224) = a2;
    if (*(void *)(a1 + 216))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      if (a2) {
        FigNotificationCenterAddWeakListener();
      }
      else {
        FigNotificationCenterRemoveWeakListener();
      }
      _APAdvertiserUpdateNIRangingSession(a1, v4);
    }
    else if (gLogCategory_APAdvertiser <= 90 {
           && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
}

void _APAdvertiserUpdateNIRangingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 216);
  if (!v3)
  {
    APSLogErrorAt();
    goto LABEL_42;
  }
  CFDataRef v4 = (const __CFData *)APReceiverSystemInfoCopyProperty(v3, a2, @"BluetoothAddress", 0, 0);
  if (!v4)
  {
LABEL_42:
    dispatch_queue_t v6 = 0;
LABEL_44:
    char v8 = 1;
    goto LABEL_12;
  }
  CFDataRef v5 = v4;
  BytePtr = CFDataGetBytePtr(v4);
  dispatch_queue_t v6 = (const void *)CFStringCreateF();
  if (!v6)
  {
    APSLogErrorAt();
    CFRelease(v5);
    goto LABEL_44;
  }
  CFRelease(v5);
  if (*(unsigned char *)(a1 + 224))
  {
    if (*(void *)(a1 + 232))
    {
      if (!APSIsProximityReceiverEnabled()) {
        goto LABEL_40;
      }
      uint64_t v7 = *(const UInt8 **)(a1 + 232);
      if (!v7) {
        goto LABEL_40;
      }
      if (gLogCategory_APAdvertiser > 50) {
        goto LABEL_23;
      }
      if (gLogCategory_APAdvertiser == -1)
      {
        if (!_LogCategory_Initialize())
        {
LABEL_23:
          dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
          if (v10)
          {
            uint64_t v11 = v10;
            int v12 = *(void **)(a1 + 232);
            v18[0] = MEMORY[0x263EF8330];
            v18[1] = 3221225472;
            v18[2] = ___APAdvertiserUpdateNIRangingSessionWithDeviceIdentifier_block_invoke;
            v18[3] = &unk_264894F78;
            v18[4] = v11;
            v18[5] = a1;
            objc_msgSend(v12, "updateResponderDeviceIdentifier:completionHandler:", v6, v18, BytePtr);
            dispatch_semaphore_wait(v11, 0xFFFFFFFFFFFFFFFFLL);
            dispatch_release(v11);
          }
          else
          {
            APSLogErrorAt();
          }
          goto LABEL_40;
        }
        uint64_t v7 = *(const UInt8 **)(a1 + 232);
      }
      BytePtr = v7;
      LogPrintF();
      goto LABEL_23;
    }
    if (APSIsProximityReceiverEnabled())
    {
      if (!*(void *)(a1 + 232))
      {
        if (gLogCategory_APAdvertiser <= 50
          && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        getNISpatialBrowsingConfigurationClass();
        uint64_t v14 = objc_opt_new();
        uint64_t v15 = v14;
        if (v14
          && (objc_msgSend(v14, "setResponder:", 1, BytePtr),
              [v15 setDeviceIdentifier:v6],
              getNISessionClass(),
              char v16 = objc_opt_new(),
              (*(void *)(a1 + 232) = v16) != 0))
        {
          [v16 runWithConfiguration:v15];
          if (gLogCategory_APAdvertiser <= 50
            && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          APSLogErrorAt();
        }
        goto LABEL_39;
      }
      APSLogErrorAt();
    }
    uint64_t v15 = 0;
LABEL_39:

LABEL_40:
    CFRelease(v6);
    return;
  }
  char v8 = 0;
LABEL_12:
  if (APSIsProximityReceiverEnabled())
  {
    uint64_t v9 = *(UInt8 **)(a1 + 232);
    if (v9)
    {
      if (gLogCategory_APAdvertiser <= 50)
      {
        if (gLogCategory_APAdvertiser != -1 || (v13 = _LogCategory_Initialize(), uint64_t v9 = *(UInt8 **)(a1 + 232), v13))
        {
          BytePtr = v9;
          LogPrintF();
          uint64_t v9 = *(UInt8 **)(a1 + 232);
        }
      }
      [(UInt8 *)v9 invalidate];

      *(void *)(a1 + 232) = 0;
      if (gLogCategory_APAdvertiser <= 50
        && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  if ((v8 & 1) == 0) {
    goto LABEL_40;
  }
}

Class initNISession()
{
  if (NearbyInteractionLibrary_sOnce != -1) {
    dispatch_once(&NearbyInteractionLibrary_sOnce, &__block_literal_global_179);
  }
  Class result = objc_getClass("NISession");
  classNISession = (uint64_t)result;
  getNISessionClass = NISessionFunction;
  return result;
}

uint64_t NISessionFunction()
{
  return classNISession;
}

void *__NearbyInteractionLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/NearbyInteraction.framework/NearbyInteraction", 2);
  NearbyInteractionLibrary_sLib = (uint64_t)result;
  return result;
}

Class initNISpatialBrowsingConfiguration()
{
  if (NearbyInteractionLibrary_sOnce != -1) {
    dispatch_once(&NearbyInteractionLibrary_sOnce, &__block_literal_global_179);
  }
  Class result = objc_getClass("NISpatialBrowsingConfiguration");
  classNISpatialBrowsingConfiguration = (uint64_t)result;
  getNISpatialBrowsingConfigurationClass = NISpatialBrowsingConfigurationFunction;
  return result;
}

uint64_t NISpatialBrowsingConfigurationFunction()
{
  return classNISpatialBrowsingConfiguration;
}

void _APAdvertiserInfoHandleBluetoothAddressChanged(int a1, NSObject **cf)
{
  CFRetain(cf);
  uint64_t v3 = cf[2];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = ___APAdvertiserInfoHandleBluetoothAddressChanged_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = cf;
  dispatch_async(v3, block);
}

uint64_t _APAdvertiserStopListeningForNetwork(uint64_t a1, uint64_t a2, int a3)
{
  if (!a3)
  {
    uint64_t result = APConnectivityHelperDeregisterForEvent();
    if (result)
    {
      uint64_t result = APSLogErrorAt();
      if (gLogCategory_APAdvertiser <= 90)
      {
        if (gLogCategory_APAdvertiser != -1) {
          return LogPrintF();
        }
        uint64_t result = _LogCategory_Initialize();
        if (result) {
          return LogPrintF();
        }
      }
    }
  }
  return result;
}

uint64_t _APAdvertiserUpdate(uint64_t a1)
{
  unsigned int updated = _APAdvertiserUpdateSubAdvertiserState(a1, 0, (uint64_t *)(a1 + 128));
  if (*(unsigned char *)(a1 + 121)) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = 1;
  }
  uint64_t v4 = a1 + 136;
  unsigned int v5 = _APAdvertiserUpdateSubAdvertiserState(a1, v3, (uint64_t *)(a1 + 136));
  if (!updated) {
    unsigned int updated = v5;
  }
  unsigned int v6 = _APAdvertiserUpdateSubAdvertiserState(a1, 3u, (uint64_t *)(a1 + 144));
  if (!updated) {
    unsigned int updated = v6;
  }
  unsigned int v7 = _APAdvertiserUpdateSubAdvertiserState(a1, 5u, (uint64_t *)(a1 + 152));
  if (!updated) {
    unsigned int updated = v7;
  }
  unsigned int v8 = _APAdvertiserUpdateSubAdvertiserState(a1, 4u, (uint64_t *)(a1 + 160));
  if (!updated) {
    unsigned int updated = v8;
  }
  unsigned int v9 = _APAdvertiserUpdateSubAdvertiserState(a1, 8u, (uint64_t *)(a1 + 168));
  if (!updated) {
    unsigned int updated = v9;
  }
  if (*(unsigned char *)(a1 + 181)
    || !*(unsigned char *)(a1 + 49)
    || (*(unsigned char *)(a1 + 121) && *(void *)v4 && *(unsigned char *)(*(void *)v4 + 4) && !*(unsigned char *)(a1 + 178)
      ? (int v10 = *(unsigned char *)(a1 + 179) != 0)
      : (int v10 = 1),
        *(unsigned char *)(a1 + 176) && v10 == *(unsigned __int8 *)(a1 + 177)))
  {
    int v13 = 0;
  }
  else
  {
    if (APSIsVirtualMachine())
    {
      if (gLogCategory_APAdvertiser > 50 || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize()) {
        goto LABEL_38;
      }
      goto LABEL_36;
    }
    if (objc_msgSend((id)objc_msgSend(MEMORY[0x263F86470], "currentState"), "supportsSoloMode"))
    {
      uint64_t v11 = *(const void **)(a1 + 112);
      if (v10)
      {
        if (!v11)
        {
          int v12 = APSWiFiTransactionCreate();
          if (v12)
          {
            int v13 = v12;
            APSLogErrorAt();
            goto LABEL_39;
          }
        }
      }
      else if (v11)
      {
        CFRelease(v11);
        *(void *)(a1 + 112) = 0;
      }
      if (gLogCategory_APAdvertiser > 50 || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize()) {
        goto LABEL_38;
      }
      uint64_t v14 = "Enable";
      if (!v10) {
        uint64_t v14 = "Disable";
      }
      uint64_t v58 = v14;
      uint64_t v59 = 0;
LABEL_36:
      LogPrintF();
LABEL_38:
      int v13 = 0;
      *(unsigned char *)(a1 + 177) = v10;
      *(unsigned char *)(a1 + 176) = 1;
      goto LABEL_39;
    }
    APSLogErrorAt();
    int v13 = -6735;
  }
LABEL_39:
  if (updated) {
    unsigned int v15 = updated;
  }
  else {
    unsigned int v15 = v13;
  }
  LOWORD(v61) = 0;
  int v16 = *(_DWORD *)(a1 + 56);
  if ((v16 & 2) != 0 && (*(unsigned char *)(a1 + 52) & 2) == 0 && *(unsigned char *)(a1 + 49)
    || (v16 & 8) != 0 && (*(unsigned char *)(a1 + 52) & 8) == 0 && *(unsigned char *)(a1 + 49))
  {
    BOOL v17 = 1;
  }
  else
  {
    BOOL v17 = (v16 & 0x20) != 0 && (*(unsigned char *)(a1 + 52) & 0x20) == 0 && *(unsigned char *)(a1 + 48) != 0;
  }
  if (*(unsigned char *)(a1 + 181)) {
    goto LABEL_126;
  }
  uint64_t v18 = *(void *)(a1 + 96);
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v19 = (uint64_t *)MEMORY[0x263EFFB40];
    if (v18) {
      goto LABEL_63;
    }
    if (gAPAdvertiserBTLEManagerInitOnce != -1) {
      dispatch_once(&gAPAdvertiserBTLEManagerInitOnce, &__block_literal_global_5595);
    }
    uint64_t Instance = _CFRuntimeCreateInstance();
    if (Instance
      && (uint64_t v21 = Instance,
          *(void *)(Instance + 16) = 0,
          dispatch_queue_t v22 = [[APAdvertiserBTLEManager alloc] initWithEventContext:Instance], (*(void *)(v21 + 16) = v22) != 0))
    {
      *(void *)(a1 + 96) = v21;
      if (*(unsigned char *)(a1 + 180))
      {
        int v23 = APAdvertiserBTLEManagerSetProperty(v22, @"requireAltBrowser", *v19);
        if (v23)
        {
          int v33 = v23;
          goto LABEL_153;
        }
        uint64_t v21 = *(void *)(a1 + 96);
      }
      int v24 = objc_msgSend(*(id *)(v21 + 16), "setEventHandler:withContext:", _APAdvertiserBTLEEventHandler, *(void *)(a1 + 88), v58, v59);
      if (!v24)
      {
        CFNumberRef v25 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt16Type, (const void *)(a1 + 24));
        if (v25)
        {
          CFNumberRef v26 = v25;
          int v27 = APAdvertiserBTLEManagerSetProperty(*(void **)(*(void *)(a1 + 96) + 16), @"receiverPort", (uint64_t)v25);
          if (!v27)
          {
            CFRelease(v26);
            uint64_t v18 = *(void *)(a1 + 96);
            if (!v18)
            {
              APSLogErrorAt();
              goto LABEL_85;
            }
LABEL_63:
            uint64_t v69 = 0;
            uint64_t v70 = &v69;
            uint64_t v71 = 0x2020000000;
            int v72 = 0;
            CFAllocatorRef v28 = *(void **)(v18 + 16);
            uint64_t v29 = objc_msgSend(v28, "internalQueue", v58);
            uint64_t block = MEMORY[0x263EF8330];
            uint64_t v63 = 3221225472;
            uint64_t v64 = __APAdvertiserBTLEManagerGetBTLEMode_block_invoke;
            uint64_t v65 = &unk_264896028;
            uint64_t v66 = (uint64_t *)v28;
            uint64_t v67 = &v69;
            uint64_t v68 = (__int16 *)&v61;
            dispatch_sync(v29, &block);
            _Block_object_dispose(&v69, 8);
            int v30 = (uint64_t *)MEMORY[0x263EFFB38];
            if (v17) {
              int v30 = v19;
            }
            int v31 = APAdvertiserBTLEManagerSetProperty(*(void **)(*(void *)(a1 + 96) + 16), @"isP2PAllowed", *v30);
            if (v31)
            {
              int v33 = v31;
            }
            else if ((unsigned __int16)v61 == 1)
            {
              if (!*(void *)(a1 + 72) || !*(unsigned char *)(a1 + 80)) {
                goto LABEL_85;
              }
              if (gLogCategory_APAdvertiser <= 40
                && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              int v36 = _APAdvertiserSetBTLEParameters(a1);
              if (!v36)
              {
                uint64_t v37 = *(void **)(*(void *)(a1 + 96) + 16);
                uint64_t v38 = [v37 internalQueue];
                uint64_t block = MEMORY[0x263EF8330];
                uint64_t v63 = 3221225472;
                uint64_t v64 = __APAdvertiserBTLEManagerRestartAdvertising_block_invoke;
                uint64_t v65 = &unk_264895FB0;
                uint64_t v66 = (uint64_t *)v37;
                dispatch_sync(v38, &block);
                goto LABEL_85;
              }
              int v33 = v36;
            }
            else
            {
              int v35 = _APAdvertiserSetBTLEParameters(a1);
              if (v35)
              {
                int v33 = v35;
              }
              else
              {
                int v33 = APAdvertiserBTLEManagerSetBTLEMode(*(void **)(*(void *)(a1 + 96) + 16), 1);
                if (!v33) {
                  goto LABEL_86;
                }
              }
            }
            goto LABEL_154;
          }
          int v33 = v27;
          APSLogErrorAt();
          CFRelease(v26);
        }
        else
        {
          APSLogErrorAt();
          int v33 = -6728;
        }
LABEL_154:
        APSLogErrorAt();
        goto LABEL_86;
      }
      int v33 = v24;
    }
    else
    {
      APSLogErrorAt();
      int v33 = -72312;
    }
LABEL_153:
    APSLogErrorAt();
    goto LABEL_154;
  }
  if (!v18)
  {
LABEL_85:
    int v33 = 0;
    goto LABEL_86;
  }
  int v32 = APAdvertiserBTLEManagerSetBTLEMode(*(void **)(v18 + 16), 0);
  int v33 = 0;
  if (v32)
  {
    int v34 = v32;
    APSLogErrorAt();
    int v33 = v34;
  }
LABEL_86:
  int v39 = *(unsigned __int8 *)(a1 + 181);
  if (!v15) {
    unsigned int v15 = v33;
  }
  __int16 v60 = 0;
  if (v39) {
    goto LABEL_126;
  }
  uint64_t v40 = *(void *)(a1 + 104);
  if (!*(unsigned char *)(a1 + 32))
  {
    if (v40)
    {
      unsigned int v43 = APAdvertiserRapportManagerSetMode(v40, 0);
      if (v43)
      {
        unsigned int v44 = v43;
        APSLogErrorAt();
        unsigned int v45 = v44;
        goto LABEL_137;
      }
    }
    goto LABEL_126;
  }
  if (v40)
  {
LABEL_111:
    uint64_t v69 = 0;
    uint64_t v70 = &v69;
    uint64_t v71 = 0x2020000000;
    int v72 = 0;
    uint64_t v50 = *(NSObject **)(v40 + 40);
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v63 = 3221225472;
    uint64_t v64 = __APAdvertiserRapportManagerGetMode_block_invoke;
    uint64_t v65 = &unk_264895EB8;
    uint64_t v66 = &v69;
    uint64_t v67 = (uint64_t *)v40;
    uint64_t v68 = &v60;
    dispatch_sync(v50, &block);
    _Block_object_dispose(&v69, 8);
    if (v60 != 1)
    {
      unsigned int v54 = _APAdvertiserSetRapportParameters(a1, v51, v52, v53);
      if (v54)
      {
        unsigned int v45 = v54;
      }
      else
      {
        unsigned int v45 = APAdvertiserRapportManagerSetMode(*(void *)(a1 + 104), 1);
        if (!v45) {
          goto LABEL_127;
        }
      }
      goto LABEL_136;
    }
    if (*(void *)(a1 + 72) && *(unsigned char *)(a1 + 80))
    {
      unsigned int v45 = _APAdvertiserSetRapportParameters(a1, v51, v52, v53);
      if (!v45) {
        goto LABEL_127;
      }
      goto LABEL_136;
    }
LABEL_126:
    unsigned int v45 = 0;
    goto LABEL_127;
  }
  uint64_t v69 = 0;
  uint64_t v70 = &v69;
  uint64_t v71 = 0x2020000000;
  int v72 = 0;
  if (gAPAdvertiserRapportManagerInitOnce != -1) {
    dispatch_once(&gAPAdvertiserRapportManagerInitOnce, &__block_literal_global_5378);
  }
  uint64_t v41 = _CFRuntimeCreateInstance();
  int v42 = (uint64_t *)v41;
  if (!v41)
  {
    APSLogErrorAt();
    unsigned int v45 = -72412;
    *((_DWORD *)v70 + 6) = -72412;
    _Block_object_dispose(&v69, 8);
    goto LABEL_136;
  }
  *(_OWORD *)(v41 + 16) = 0u;
  *(void *)(v41 + 80) = 0;
  *(_OWORD *)(v41 + 48) = 0u;
  *(_OWORD *)(v41 + 64) = 0u;
  *(_OWORD *)(v41 + 32) = 0u;
  if (gLogCategory_APAdvertiserRapportManager <= 50
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v61 = 0;
  if (_APAdvertiserRapportManager_getActiveManagers_once != -1) {
    dispatch_once(&_APAdvertiserRapportManager_getActiveManagers_once, &__block_literal_global_10);
  }
  if (FigCFWeakReferenceTableAddValueAndGetKey()) {
    APSLogErrorAt();
  }
  uint64_t v46 = v61;
  v42[2] = v61;
  if (v46)
  {
    dispatch_queue_t v47 = dispatch_queue_create("APAdvertiserRapportManagerInternalQueue", 0);
    v42[5] = (uint64_t)v47;
    if (v47)
    {
      dispatch_queue_t v48 = dispatch_queue_create("APAdvertiserRapportManagerEventQueue", 0);
      v42[4] = (uint64_t)v48;
      if (v48)
      {
        uint64_t v49 = v42[5];
        uint64_t block = MEMORY[0x263EF8330];
        uint64_t v63 = 3221225472;
        uint64_t v64 = __APAdvertiserRapportManagerCreate_block_invoke;
        uint64_t v65 = &unk_264895E20;
        uint64_t v66 = &v69;
        uint64_t v67 = v42;
        dispatch_sync(v49, &block);
        if (!*((_DWORD *)v70 + 6))
        {
          *(void *)(a1 + 104) = v42;
          _Block_object_dispose(&v69, 8);
          goto LABEL_110;
        }
        APSLogErrorAt();
        goto LABEL_147;
      }
    }
    APSLogErrorAt();
    int v57 = -72412;
  }
  else
  {
    APSLogErrorAt();
    int v57 = -6728;
  }
  *((_DWORD *)v70 + 6) = v57;
LABEL_147:
  CFRelease(v42);
  unsigned int v45 = *((_DWORD *)v70 + 6);
  _Block_object_dispose(&v69, 8);
  if (!v45)
  {
LABEL_110:
    uint64_t v40 = *(void *)(a1 + 104);
    if (!v40)
    {
      APSLogErrorAt();
      goto LABEL_126;
    }
    goto LABEL_111;
  }
LABEL_136:
  APSLogErrorAt();
LABEL_137:
  uint64_t v56 = *(void *)(a1 + 104);
  if (v56) {
    APAdvertiserRapportManagerSetMode(v56, 0);
  }
LABEL_127:
  if (v15) {
    return v15;
  }
  else {
    return v45;
  }
}

void sub_22B3C9FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _APAdvertiserUpdateSubAdvertiserState(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v6 = *a3;
  if (*a3) {
    int v7 = *(unsigned __int8 *)(v6 + 4);
  }
  else {
    int v7 = 0;
  }
  if ((*(_DWORD *)(a1 + 56) & (1 << a2)) == 0) {
    goto LABEL_33;
  }
  if ((*(_DWORD *)(a1 + 52) & (1 << a2)) != 0 || a2 > 8) {
    goto LABEL_33;
  }
  if (((1 << a2) & 0x10E) != 0)
  {
    unsigned int v9 = (unsigned char *)(a1 + 49);
  }
  else
  {
    if (((1 << a2) & 0x30) == 0)
    {
      if (a2) {
        goto LABEL_33;
      }
      goto LABEL_16;
    }
    unsigned int v9 = (unsigned char *)(a1 + 48);
  }
  if (!*v9) {
    goto LABEL_33;
  }
LABEL_16:
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(unsigned char *)(a1 + 178)) {
      int v10 = 1;
    }
    else {
      int v10 = *(unsigned char *)(a1 + 179) != 0;
    }
    if ((a2 & 0xFFFFFFFD) != 1)
    {
      if (a2 > 5 || ((1 << a2) & 0x2A) == 0)
      {
LABEL_25:
        if (v7)
        {
          if (*(unsigned char *)(a1 + 80))
          {
            uint64_t updated = _APAdvertiserUpdateSubAdvertiserTXTRecordsAndStartIfNecessary(a1, *a3);
            if (updated) {
              APSLogErrorAt();
            }
          }
          else
          {
            uint64_t updated = 0;
          }
          if (v7 == 1) {
            return updated;
          }
LABEL_30:
          if (gLogCategory_APAdvertiser <= 90
            && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return updated;
        }
        if (v6)
        {
LABEL_54:
          long long v37 = 0u;
          long long v38 = 0u;
          *(_OWORD *)int v35 = 0u;
          long long v36 = 0u;
          CFTypeRef v33 = 0;
          CFTypeRef cf = 0;
          if (*(unsigned char *)(v6 + 4))
          {
LABEL_97:
            uint64_t updated = 0;
            goto LABEL_98;
          }
          if (!*(void *)(v6 + 8))
          {
            APSLogErrorAt();
            uint64_t updated = 4294960587;
            goto LABEL_98;
          }
          LODWORD(v16) = 0;
          int v17 = 0;
          unsigned int v18 = *(_DWORD *)v6;
          if (*(_DWORD *)v6 > 8u)
          {
            uint64_t v20 = 0;
            int v23 = 0;
            unsigned int v22 = 0;
            uint64_t v24 = 0;
            goto LABEL_87;
          }
          int v19 = 1 << v18;
          if (((1 << v18) & 0x127) != 0)
          {
            if (!*(unsigned char *)(a1 + 180))
            {
              if (v18 == 5)
              {
                uint64_t v20 = "com.apple.airplay";
              }
              else if (v18 == 8)
              {
                uint64_t v20 = v35;
                __sprintf_chk(v35, 0, 0x40uLL, "_%s._%s.", (const char *)(a1 + 182), "tcp");
                CFTypeRef cf = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(a1 + 198), 0x8000100u);
                if (cf)
                {
LABEL_62:
                  unsigned int v22 = *(_DWORD *)v6;
                  if (*(_DWORD *)v6 == 5)
                  {
                    int v17 = 0;
                    uint64_t v24 = 0x280000000000000;
                    unsigned int v22 = 2304;
LABEL_80:
                    int v23 = 1;
                    goto LABEL_86;
                  }
                  if (!v22)
                  {
                    int v23 = 0;
                    uint64_t v24 = 0;
                    int v17 = *(_DWORD *)(a1 + 28);
LABEL_86:
                    int v16 = "local.";
                    goto LABEL_87;
                  }
                  unsigned int v27 = if_nametoindex("awdl0");
                  if (v27)
                  {
                    int v17 = v27;
                    unsigned int v22 = 0;
                    uint64_t v24 = 0;
                    goto LABEL_80;
                  }
LABEL_125:
                  APSLogErrorAt();
                  uint64_t updated = 4294960534;
LABEL_98:
                  if (cf) {
                    CFRelease(cf);
                  }
                  if (v33) {
                    CFRelease(v33);
                  }
                  if (!updated) {
                    return updated;
                  }
                  goto LABEL_124;
                }
              }
              else
              {
                uint64_t v20 = "_airplay._tcp.";
              }
LABEL_61:
              uint64_t v21 = APAdvertiserInfoCreateAirPlayServiceName(*(void *)(a1 + 72), &cf);
              if (v21)
              {
                uint64_t updated = v21;
                goto LABEL_120;
              }
              goto LABEL_62;
            }
            if (v18 == 1)
            {
              uint64_t v20 = "_airplay-alt._tcp.";
              goto LABEL_61;
            }
          }
          else
          {
            uint64_t v20 = 0;
            int v23 = 0;
            unsigned int v22 = 0;
            uint64_t v24 = 0;
            if ((v19 & 0x18) == 0)
            {
LABEL_87:
              uint64_t v29 = _APAdvertiserSetupBonjourAdvertiser(*(void *)(v6 + 8), (int)v16, v20, (CFStringRef)cf, v17, *(_DWORD *)(a1 + 24), v23, v24, v22);
              if (v29)
              {
                uint64_t updated = v29;
                goto LABEL_120;
              }
              if (!*(void *)(v6 + 16))
              {
LABEL_92:
                uint64_t v32 = _APAdvertiserUpdateSubAdvertiserTXTRecordsAndStartIfNecessary(a1, v6);
                if (!v32)
                {
                  *(unsigned char *)(v6 + 4) = 1;
                  if (gLogCategory_APAdvertiser <= 50
                    && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  goto LABEL_97;
                }
                uint64_t updated = v32;
                goto LABEL_120;
              }
              if (!*(unsigned char *)(a1 + 180))
              {
                uint64_t RAOPServiceName = APAdvertiserInfoCreateRAOPServiceName(*(void *)(a1 + 72), (__CFString **)&v33);
                if (RAOPServiceName)
                {
                  uint64_t updated = RAOPServiceName;
                }
                else
                {
                  uint64_t v31 = _APAdvertiserSetupBonjourAdvertiser(*(void *)(v6 + 16), (int)"local.", "_raop._tcp.", (CFStringRef)v33, v17, *(_DWORD *)(a1 + 24), v23, 0, 0);
                  if (!v31) {
                    goto LABEL_92;
                  }
                  uint64_t updated = v31;
                }
LABEL_120:
                APSLogErrorAt();
                goto LABEL_98;
              }
              goto LABEL_118;
            }
            if (!*(unsigned char *)(a1 + 180))
            {
              uint64_t v26 = APAdvertiserInfoCreateRAOPServiceName(*(void *)(a1 + 72), (__CFString **)&cf);
              if (v26)
              {
                uint64_t updated = v26;
                goto LABEL_120;
              }
              if (*(_DWORD *)v6 == 4)
              {
                int v17 = 0;
                uint64_t v24 = 0x280000000000000;
                unsigned int v22 = 2304;
              }
              else
              {
                unsigned int v28 = if_nametoindex("awdl0");
                if (!v28) {
                  goto LABEL_125;
                }
                int v17 = v28;
                unsigned int v22 = 0;
                uint64_t v24 = 0;
              }
              int v23 = 1;
              uint64_t v20 = "_airplay-p2p._tcp.";
              goto LABEL_86;
            }
          }
LABEL_118:
          APSLogErrorAt();
          goto LABEL_97;
        }
        int v13 = malloc_type_calloc(1uLL, 0x18uLL, 0x102004069A7EC9CuLL);
        if (v13)
        {
          uint64_t v6 = (uint64_t)v13;
          *int v13 = a2;
          uint64_t v14 = BonjourAdvertiserCreate();
          if (v14)
          {
            uint64_t updated = v14;
          }
          else
          {
            BonjourAdvertiserSetDispatchQueue();
            if (a2 > 2 || !*(unsigned char *)(a1 + 120)) {
              goto LABEL_53;
            }
            uint64_t v15 = BonjourAdvertiserCreate();
            if (!v15)
            {
              BonjourAdvertiserSetDispatchQueue();
LABEL_53:
              *a3 = v6;
              goto LABEL_54;
            }
            uint64_t updated = v15;
          }
          APSLogErrorAt();
          free((void *)v6);
        }
        else
        {
          APSLogErrorAt();
          uint64_t updated = 4294960568;
        }
LABEL_124:
        APSLogErrorAt();
        goto LABEL_30;
      }
      int v10 = *(unsigned char *)(a1 + 178) & 1;
    }
    if (v10) {
      goto LABEL_25;
    }
  }
LABEL_33:
  if (v6) {
    BOOL v12 = v7 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12 || !*(unsigned char *)(v6 + 4) || !*(void *)(v6 + 8)) {
    return 0;
  }
  BonjourAdvertiserStop();
  if (*(void *)(v6 + 16)) {
    BonjourAdvertiserStop();
  }
  if (*(_DWORD *)v6 == 8) {
    _APAdvertiserEnsureAssistedModeInfoCreated(a1, 1);
  }
  uint64_t updated = 0;
  *(unsigned char *)(v6 + 4) = 0;
  if (gLogCategory_APAdvertiser <= 50)
  {
    if (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    return 0;
  }
  return updated;
}

uint64_t _APAdvertiserSetBTLEParameters(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 72);
  if (result)
  {
    if (*(void *)(a1 + 96))
    {
      uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      uint64_t result = APAdvertiserBTLEManagerSetProperty(*(void **)(*(void *)(a1 + 96) + 16), @"accessControlType", [NSNumber numberWithUnsignedInt:PropertyInt64Sync]);
      unsigned int v4 = result;
      if (result)
      {
        APSLogErrorAt();
        return v4;
      }
    }
    else
    {
      APSLogErrorAt();
      return 0;
    }
  }
  return result;
}

uint64_t _APAdvertiserSetRapportParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v11 = 0;
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5)
  {
    if (*(void *)(a1 + 104))
    {
      uint64_t v6 = APAdvertiserInfoCopyProperty(v5, a2, @"deviceID", a4, (int *)&v11);
      if (v11)
      {
        APSLogErrorAt();
        unsigned int v11 = -6705;
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 104);
        uint64_t v13 = 0;
        uint64_t v14 = &v13;
        uint64_t v15 = 0x2020000000;
        int v16 = 0;
        unsigned int v8 = *(NSObject **)(v7 + 40);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = __APAdvertiserRapportManagerSetProperty_block_invoke;
        block[3] = &unk_264895E68;
        block[4] = &v13;
        void block[5] = v7;
        void block[6] = @"deviceID";
        void block[7] = v6;
        dispatch_sync(v8, block);
        unsigned int v9 = *((_DWORD *)v14 + 6);
        _Block_object_dispose(&v13, 8);
        unsigned int v11 = v9;
        if (v9) {
          APSLogErrorAt();
        }
      }
      if (v6) {
        CFRelease(v6);
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
  return v11;
}

void _APAdvertiserBTLEEventHandler(uint64_t a1, int a2)
{
  uint64_t v3 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v3)
  {
    unsigned int v4 = (const void *)v3;
    uint64_t v5 = *(NSObject **)(v3 + 16);
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    _DWORD v6[2] = ___APAdvertiserBTLEEventHandler_block_invoke;
    v6[3] = &__block_descriptor_44_e5_v8__0l;
    int v7 = a2;
    v6[4] = v4;
    dispatch_sync(v5, v6);
    CFRelease(v4);
  }
}

uint64_t _APAdvertiserHandleSourceDeviceNearbyEvent(uint64_t a1, char a2)
{
  if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  *(unsigned char *)(a1 + 178) = a2;
  uint64_t result = _APAdvertiserUpdate(a1);
  if (result)
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t _APAdvertiserUpdateSubAdvertiserTXTRecordsAndStartIfNecessary(uint64_t a1, uint64_t a2)
{
  CFTypeRef v11 = 0;
  CFTypeRef v12 = 0;
  if (!*(void *)(a2 + 8))
  {
    APSLogErrorAt();
    BinaryTXTRecordFromTXTRecordBytes = 0;
    uint64_t v6 = 4294960587;
    goto LABEL_29;
  }
  unsigned int v15 = 0;
  CFTypeRef v13 = 0;
  CFTypeRef cf = 0;
  uint64_t v4 = *(void *)(a1 + 72);
  if (v4)
  {
    BinaryTXTRecordFromTXTRecordBytes = 0;
    switch(*(_DWORD *)a2)
    {
      case 0:
      case 1:
      case 2:
      case 8:
        unsigned int v15 = APAdvertiserInfoCopyAirPlayDataWithNANServiceType(v4, 0, (CFDataRef *)&v12);
        if (v15) {
          goto LABEL_43;
        }
        goto LABEL_5;
      case 3:
        unsigned int v15 = APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(v4, 0, (CFDataRef *)&v12);
        if (v15) {
          goto LABEL_43;
        }
        goto LABEL_5;
      case 4:
        unsigned int v15 = APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(v4, 2, (CFDataRef *)&v12);
        if (v15) {
          goto LABEL_43;
        }
        goto LABEL_5;
      case 5:
        unsigned int v15 = APAdvertiserInfoCopyAirPlayDataWithNANServiceType(v4, 2u, (CFDataRef *)&cf);
        if (v15
          || (unsigned int v15 = APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(*(void *)(a1 + 72), 0, (CFDataRef *)&v13)) != 0)
        {
LABEL_43:
          APSLogErrorAt();
LABEL_5:
          BinaryTXTRecordFromTXTRecordBytes = 0;
          break;
        }
        CFDataGetBytePtr((CFDataRef)cf);
        CFDataGetLength((CFDataRef)cf);
        BinaryTXTRecordFromTXTRecordBytes = (const void *)CreateBinaryTXTRecordFromTXTRecordBytes();
        if (!v15)
        {
          CFTypeRef v12 = v13;
          CFTypeRef v13 = 0;
          break;
        }
        APSLogErrorAt();
        if (BinaryTXTRecordFromTXTRecordBytes)
        {
          CFRelease(BinaryTXTRecordFromTXTRecordBytes);
          goto LABEL_5;
        }
        break;
      default:
        break;
    }
  }
  else
  {
    APSLogErrorAt();
    BinaryTXTRecordFromTXTRecordBytes = 0;
    unsigned int v15 = -6709;
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v13) {
    CFRelease(v13);
  }
  uint64_t v6 = v15;
  if (v15) {
    goto LABEL_42;
  }
  uint64_t updated = _APAdvertiserUpdateBonjourAdvertiser(a2, 1, (CFDataRef)v12, (const __CFData *)BinaryTXTRecordFromTXTRecordBytes);
  if (updated)
  {
    uint64_t v6 = updated;
LABEL_42:
    APSLogErrorAt();
    goto LABEL_29;
  }
  if (!*(void *)(a2 + 16)) {
    goto LABEL_15;
  }
  uint64_t v8 = APAdvertiserInfoCopyRAOPData(*(void *)(a1 + 72), (CFDataRef *)&v11);
  if (v8)
  {
    uint64_t v6 = v8;
    goto LABEL_42;
  }
  uint64_t v9 = _APAdvertiserUpdateBonjourAdvertiser(a2, 0, (CFDataRef)v11, 0);
  if (v9)
  {
    uint64_t v6 = v9;
    goto LABEL_42;
  }
LABEL_15:
  if (*(unsigned char *)(a2 + 4)
    && gLogCategory_APAdvertiser <= 50
    && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v6 = 0;
LABEL_29:
  if (v12) {
    CFRelease(v12);
  }
  if (BinaryTXTRecordFromTXTRecordBytes) {
    CFRelease(BinaryTXTRecordFromTXTRecordBytes);
  }
  if (v11) {
    CFRelease(v11);
  }
  return v6;
}

uint64_t _APAdvertiserSetupBonjourAdvertiser(int a1, int a2, const char *a3, CFStringRef theString, int a5, int a6, int a7, uint64_t a8, unsigned int a9)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  memset(v16, 0, sizeof(v16));
  if (!CFStringGetCString(theString, (char *)v16, 256, 0x8000100u))
  {
    APSLogErrorAt();
    return 4294960534;
  }
  uint64_t v11 = BonjourAdvertiserSetDomain();
  if (v11)
  {
    uint64_t v14 = v11;
LABEL_18:
    APSLogErrorAt();
    return v14;
  }
  uint64_t v12 = BonjourAdvertiserSetName();
  if (v12)
  {
    uint64_t v14 = v12;
    goto LABEL_18;
  }
  uint64_t v13 = BonjourAdvertiserSetServiceType();
  if (v13)
  {
    uint64_t v14 = v13;
    goto LABEL_18;
  }
  uint64_t v14 = a9;
  if ((a8 & 0x200000000000000) != 0)
  {
    if ((a9 >> 10) & 2 | (strcmp(a3, "com.apple.airplay") == 0)) {
      BonjourAdvertiserSetNANControlFlags();
    }
  }
  else
  {
    BonjourAdvertiserSetInterfaceIndex();
  }
  BonjourAdvertiserSetPort();
  BonjourAdvertiserSetP2P();
  if (a8) {
    BonjourAdvertiserSetFlags();
  }
  if (a9)
  {
    BonjourAdvertiserSetTrafficFlags();
    return 0;
  }
  return v14;
}

uint64_t _APAdvertiserUpdateBonjourAdvertiser(uint64_t a1, int a2, CFDataRef theData, const __CFData *a4)
{
  if (theData)
  {
    CFDataGetBytePtr(theData);
    CFDataGetLength(theData);
  }
  uint64_t v7 = BonjourAdvertiserSetTXTRecord();
  if (v7)
  {
    uint64_t v9 = v7;
LABEL_17:
    APSLogErrorAt();
    return v9;
  }
  BonjourAdvertiserSetNANCustomData();
  if (gLogCategory_APAdvertiser <= 10 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
  {
    if (a4) {
      CFDataGetLength(a4);
    }
    LogPrintF();
  }
  if (*(unsigned char *)(a1 + 4)) {
    uint64_t v8 = BonjourAdvertiserUpdate();
  }
  else {
    uint64_t v8 = BonjourAdvertiserStart();
  }
  uint64_t v9 = v8;
  if (v8) {
    goto LABEL_17;
  }
  return v9;
}

uint64_t _APAdvertiserProcessP2PConfig(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 181)) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 121);
  uint64_t Int64 = CFDictionaryGetInt64();
  if (v2) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (Int64) {
    int v5 = *(_DWORD *)(a1 + 56) | v4;
  }
  else {
    int v5 = *(_DWORD *)(a1 + 56) & ~v4;
  }
  *(_DWORD *)(a1 + 56) = v5;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56) & 0xFFFFFFF7 | (8 * (CFDictionaryGetInt64() != 0));
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56) & 0xFFFFFFDF | (32 * (CFDictionaryGetInt64() != 0));
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56) & 0xFFFFFFEF | (16 * (CFDictionaryGetInt64() != 0));
  uint64_t v6 = _APAdvertiserUpdate(a1);
  if (v6) {
    APSLogErrorAt();
  }
  return v6;
}

void _APAdvertiserHandleConnectivityHelperEvent(const void *a1, int a2, uint64_t a3, void *a4)
{
  CFRetain(a1);
  CFRetain(a4);
  uint64_t v7 = a4[2];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = ___APAdvertiserHandleConnectivityHelperEvent_block_invoke;
  block[3] = &__block_descriptor_52_e5_v8__0l;
  int v9 = a2;
  block[4] = a4;
  void block[5] = a1;
  dispatch_async(v7, block);
}

uint64_t APAdvertiserStart(uint64_t a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  int v8 = 0;
  uint64_t v1 = *(NSObject **)(a1 + 16);
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 3221225472;
  _DWORD v4[2] = __APAdvertiserStart_block_invoke;
  v4[3] = &unk_264895E20;
  v4[4] = &v5;
  v4[5] = a1;
  dispatch_sync(v1, v4);
  uint64_t v2 = *((unsigned int *)v6 + 6);
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t __APAdvertiserStart_block_invoke(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 40);
  if (*(unsigned char *)(v2 + 32))
  {
    int v3 = 0;
    goto LABEL_7;
  }
  if (*(int *)(v2 + 24) <= 0 || !*(void *)(v2 + 72))
  {
    APSLogErrorAt();
    int v3 = -6745;
LABEL_11:
    uint64_t result = _APAdvertiserStop(v2);
    goto LABEL_7;
  }
  *(unsigned char *)(v2 + 32) = 1;
  if (*(void *)(v2 + 40))
  {
    _APAdvertiserStartListeningForNetwork(v2, 1, *(unsigned __int8 *)(v2 + 48));
    _APAdvertiserStartListeningForNetwork(v2, 7, *(unsigned __int8 *)(v2 + 49));
  }
  uint64_t result = _APAdvertiserUpdate(v2);
  int v3 = result;
  if (result)
  {
    APSLogErrorAt();
    goto LABEL_11;
  }
LABEL_7:
  *(_DWORD *)(*(void *)(*(void *)(v1 + 32) + 8) + 24) = v3;
  return result;
}

uint64_t _APAdvertiserStartListeningForNetwork(uint64_t result, uint64_t a2, int a3)
{
  if (!a3)
  {
    uint64_t result = APConnectivityHelperRegisterForEvent();
    if (result)
    {
      if (gLogCategory_APAdvertiser <= 90)
      {
        if (gLogCategory_APAdvertiser != -1) {
          return LogPrintF();
        }
        uint64_t v4 = result;
        int v3 = _LogCategory_Initialize();
        uint64_t result = v4;
        if (v3) {
          return LogPrintF();
        }
      }
    }
  }
  return result;
}

uint64_t APAdvertiserFlushBonjourRecords(uint64_t a1)
{
  v10[0] = 0;
  v10[1] = v10;
  _DWORD v10[2] = 0x2020000000;
  v10[3] = 0;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  int v9 = 0;
  if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v2 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APAdvertiserFlushBonjourRecords_block_invoke;
  block[3] = &unk_264895F08;
  void block[5] = v10;
  void block[6] = a1;
  block[4] = &v6;
  dispatch_sync(v2, block);
  uint64_t v3 = *((unsigned int *)v7 + 6);
  _Block_object_dispose(&v6, 8);
  _Block_object_dispose(v10, 8);
  return v3;
}

void sub_22B3CBAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void __APAdvertiserFlushBonjourRecords_block_invoke(void *a1)
{
  uint64_t v2 = a1[6];
  if (!*(void *)(v2 + 64))
  {
    dispatch_source_t v3 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(v2 + 16));
    uint64_t v4 = (void *)a1[6];
    v4[8] = v3;
    if (!v3)
    {
      APSLogErrorAt();
      *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = -6728;
      return;
    }
    *(void *)(*(void *)(a1[5] + 8) + 24) = CFRetain(v4);
    uint64_t v5 = *(NSObject **)(a1[6] + 64);
    handler[0] = MEMORY[0x263EF8330];
    handler[1] = 3221225472;
    handler[2] = __APAdvertiserFlushBonjourRecords_block_invoke_2;
    handler[3] = &unk_2648953A8;
    handler[4] = a1[5];
    dispatch_source_set_event_handler(v5, handler);
    uint64_t v6 = *(NSObject **)(a1[6] + 64);
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    _DWORD v10[2] = __APAdvertiserFlushBonjourRecords_block_invoke_3;
    v10[3] = &unk_2648953A8;
    void v10[4] = a1[5];
    dispatch_source_set_cancel_handler(v6, v10);
    dispatch_resume(*(dispatch_object_t *)(a1[6] + 64));
    uint64_t v2 = a1[6];
  }
  if (*(unsigned char *)(v2 + 121)) {
    int v7 = 4;
  }
  else {
    int v7 = 2;
  }
  *(_DWORD *)(v2 + 52) |= 0x109 | v7;
  _APAdvertiserUpdate(v2);
  uint64_t v8 = *(NSObject **)(a1[6] + 64);
  dispatch_time_t v9 = dispatch_time(0, 2000000000);
  dispatch_source_set_timer(v8, v9, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
}

uint64_t __APAdvertiserFlushBonjourRecords_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  if (*(unsigned char *)(v1 + 121)) {
    int v2 = -270;
  }
  else {
    int v2 = -268;
  }
  *(_DWORD *)(v1 + 52) &= v2;
  return _APAdvertiserUpdate(v1);
}

void __APAdvertiserFlushBonjourRecords_block_invoke_3(uint64_t a1)
{
  uint64_t v1 = *(const void **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  if (v1) {
    CFRelease(v1);
  }
}

uint64_t APAdvertiserStop(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APAdvertiserStop_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v1, block);
  return 0;
}

uint64_t __APAdvertiserStop_block_invoke(uint64_t a1)
{
  return _APAdvertiserStop(*(void *)(a1 + 32));
}

uint64_t APAdvertiserSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v10 = 0;
  if (a2 && a3)
  {
    dispatch_source_t v3 = *(NSObject **)(a1 + 16);
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    _DWORD v6[2] = __APAdvertiserSetProperty_block_invoke;
    v6[3] = &unk_264895E68;
    v6[4] = &v7;
    void v6[5] = a2;
    v6[6] = a1;
    v6[7] = a3;
    dispatch_sync(v3, v6);
    uint64_t v4 = *((unsigned int *)v8 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v4 = 4294960591;
    *((_DWORD *)v8 + 6) = -6705;
  }
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_22B3CBE80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void __APAdvertiserSetProperty_block_invoke(uint64_t a1)
{
  if (CFEqual(*(CFTypeRef *)(a1 + 40), @"advertiserInfo"))
  {
    uint64_t v2 = *(void *)(a1 + 48);
    dispatch_source_t v3 = *(const void **)(a1 + 56);
    block[0] = 0;
    uint64_t v4 = *(const void **)(v2 + 72);
    if (v4 == v3 || v3 && v4 && CFEqual(v4, v3))
    {
      int v5 = 0;
    }
    else
    {
      int v9 = APAdvertiserInfoCopy(*MEMORY[0x263EFFB08], (uint64_t)v3, block);
      if (v9)
      {
        int v5 = v9;
      }
      else
      {
        int v10 = *(const void **)(v2 + 72);
        if (v10) {
          CFRelease(v10);
        }
        *(void *)(v2 + 72) = block[0];
        *(unsigned char *)(v2 + 80) = 1;
        int v5 = _APAdvertiserUpdate(v2);
        if (!v5) {
          goto LABEL_15;
        }
      }
      APSLogErrorAt();
    }
LABEL_15:
    *(unsigned char *)(v2 + 80) = 0;
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v5;
    if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      APSLogErrorAt();
    }
    return;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 40), @"P2PConfig"))
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = _APAdvertiserProcessP2PConfig(*(void *)(a1 + 48));
    if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 96);
      if (v6)
      {
        v18[0] = 0;
        v18[1] = v18;
        v18[2] = 0x2020000000;
        int v19 = 0;
        uint64_t v7 = *(void **)(v6 + 16);
        uint64_t v8 = [v7 internalQueue];
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = __APAdvertiserBTLEManagerUpdatePreferences_block_invoke;
        block[3] = &unk_264896078;
        block[4] = v7;
        void block[5] = v18;
        dispatch_sync(v8, block);
        _Block_object_dispose(v18, 8);
      }
      return;
    }
    goto LABEL_39;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 40), @"enforceSolo"))
  {
    uint64_t v11 = CFGetInt64();
    int v12 = v11 != 0;
    if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      goto LABEL_39;
    }
    uint64_t v13 = *(void *)(a1 + 48);
    if (*(unsigned char *)(v13 + 181) || *(unsigned __int8 *)(v13 + 179) == v12)
    {
      int v16 = 0;
    }
    else
    {
      if (gLogCategory_APAdvertiser <= 50
        && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v13 + 179) = v12;
      int v16 = _APAdvertiserUpdate(v13);
      if (v16) {
        APSLogErrorAt();
      }
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v16;
    if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
LABEL_39:
      APSLogErrorAt();
    }
  }
  else
  {
    if (!CFEqual(*(CFTypeRef *)(a1 + 40), @"allowAssistedModeAdvertisingOverAWDL"))
    {
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -6727;
      return;
    }
    uint64_t v14 = CFGetInt64();
    if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      goto LABEL_39;
    }
    uint64_t v15 = *(void *)(a1 + 48);
    *(_DWORD *)(v15 + 56) = *(_DWORD *)(v15 + 56) & 0xFFFFFEFF | ((v14 != 0) << 8);
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = _APAdvertiserUpdate(v15);
    if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      goto LABEL_39;
    }
  }
}

void sub_22B3CC2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t APAdvertiserCopyProperty(uint64_t a1, CFTypeRef cf1, CFTypeRef *a3)
{
  if (!CFEqual(cf1, @"assistedModeInfo")) {
    return 4294960569;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 4, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v6 = Mutable;
    uint64_t v7 = *(NSObject **)(a1 + 16);
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    _DWORD v10[2] = ___APAdvertiserCopyAssistedModeInfo_block_invoke;
    v10[3] = &__block_descriptor_48_e5_v8__0l;
    void v10[4] = a1;
    void v10[5] = v6;
    dispatch_sync(v7, v10);
    *a3 = CFRetain(v6);
    CFRelease(v6);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960568;
    APSLogErrorAt();
  }
  return v8;
}

uint64_t APAdvertiserDebugShow(uint64_t a1, unsigned int a2, uint64_t a3)
{
  v4[0] = a1;
  v4[1] = a2;
  _DWORD v4[2] = a3;
  uint64_t v5 = 0;
  dispatch_sync_f(*(dispatch_queue_t *)(a1 + 16), v4, (dispatch_function_t)_APAdvertiserDebugShow);
  return v5;
}

void _APAdvertiserDebugShow(uint64_t *a1)
{
  int v22 = 0;
  uint64_t v2 = *a1;
  int v3 = *((_DWORD *)a1 + 2);
  uint64_t v4 = a1[2];
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  uint64_t v7 = *(void *)(v2 + 72);
  if (v7)
  {
    CFStringRef v8 = (const __CFString *)APAdvertiserInfoCopyProperty(v7, v5, @"deviceID", v6, &v22);
    FigCFStringGetCStringPtrAndBufferToFree();
    CFStringGetLength(v8);
    TextToHardwareAddressScalar();
  }
  else
  {
    CFStringRef v8 = 0;
  }
  CFStringRef v21 = v8;
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  if (*(unsigned char *)(v2 + 121)) {
    int v9 = "yes";
  }
  else {
    int v9 = "no";
  }
  uint64_t v20 = v9;
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  if (*(unsigned char *)(v2 + 181))
  {
    CFStringRef v21 = (const __CFString *)(v2 + 182);
    uint64_t v20 = (const char *)(v2 + 198);
    DataBuffer_AppendF();
  }
  if (*(unsigned char *)(v2 + 178)) {
    int v10 = "yes";
  }
  else {
    int v10 = "no";
  }
  if (*(unsigned char *)(v2 + 179)) {
    uint64_t v11 = "yes";
  }
  else {
    uint64_t v11 = "no";
  }
  unsigned int v18 = v10;
  int v19 = v11;
  DataBuffer_AppendF();
  if (*(void *)(v2 + 72))
  {
    DataBuffer_AppendF();
    int v22 = APAdvertiserInfoDebugShow(*(void *)(v2 + 72), v3, v4);
  }
  if (*(void *)(v2 + 96))
  {
    DataBuffer_AppendF();
    uint64_t v12 = *(void *)(v2 + 96);
    uint64_t v31 = 0;
    uint64_t v32 = &v31;
    uint64_t v33 = 0x2020000000;
    int v34 = 0;
    uint64_t v13 = *(void **)(v12 + 16);
    uint64_t v14 = objc_msgSend(v13, "internalQueue", "P2P", v18, v19, v20, v21);
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v24 = 3221225472;
    CFNumberRef v25 = __APAdvertiserBTLEManagerDebugShow_block_invoke;
    uint64_t v26 = &unk_264896050;
    unsigned int v27 = (uint64_t *)v13;
    unsigned int v28 = &v31;
    uint64_t v29 = v4;
    int v30 = v3;
    dispatch_sync(v14, &block);
    LODWORD(v13) = *((_DWORD *)v32 + 6);
    _Block_object_dispose(&v31, 8);
    int v22 = (int)v13;
  }
  if (*(void *)(v2 + 104))
  {
    DataBuffer_AppendF();
    uint64_t v15 = *(void *)(v2 + 104);
    uint64_t v31 = 0;
    uint64_t v32 = &v31;
    uint64_t v33 = 0x2020000000;
    int v34 = 0;
    int v16 = *(NSObject **)(v15 + 40);
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v24 = 3221225472;
    CFNumberRef v25 = __APAdvertiserRapportManagerDebugShow_block_invoke;
    uint64_t v26 = &unk_264895EE0;
    unsigned int v27 = &v31;
    unsigned int v28 = (uint64_t *)v15;
    int v30 = v3;
    uint64_t v29 = v4;
    dispatch_sync(v16, &block);
    int v17 = *((_DWORD *)v32 + 6);
    _Block_object_dispose(&v31, 8);
    int v22 = v17;
  }
  DataBuffer_AppendF();
  *((_DWORD *)a1 + 6) = v22;
  if (v8) {
    CFRelease(v8);
  }
}

void sub_22B3CCA8C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t APAdvertiserReportNANIssue(uint64_t a1, uint64_t a2)
{
  if (a1 && a2)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 3221225472;
    _DWORD v4[2] = __APAdvertiserReportNANIssue_block_invoke;
    void v4[3] = &__block_descriptor_48_e5_v8__0l;
    v4[4] = a1;
    v4[5] = a2;
    dispatch_sync(v2, v4);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
}

uint64_t __APAdvertiserReportNANIssue_block_invoke(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 32);
  if (*(void *)(v2 + 160))
  {
    if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    uint64_t result = BonjourAdvertiserReportNANIssue();
    uint64_t v2 = *(void *)(v1 + 32);
  }
  if (*(void *)(v2 + 152))
  {
    if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    return BonjourAdvertiserReportNANIssue();
  }
  return result;
}

uint64_t APAdvertiserUpdateNANLinkStatus(uint64_t a1, int a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 3221225472;
    _DWORD v4[2] = __APAdvertiserUpdateNANLinkStatus_block_invoke;
    void v4[3] = &__block_descriptor_44_e5_v8__0l;
    v4[4] = a1;
    BOOL v5 = a2 != 0;
    dispatch_sync(v2, v4);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
}

uint64_t __APAdvertiserUpdateNANLinkStatus_block_invoke(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 32);
  if (*(void *)(v2 + 160))
  {
    if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    uint64_t result = BonjourAdvertiserUpdateLinkStatusNAN();
    uint64_t v2 = *(void *)(v1 + 32);
  }
  if (*(void *)(v2 + 152))
  {
    if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    return BonjourAdvertiserUpdateLinkStatusNAN();
  }
  return result;
}

uint64_t APAdvertiserCopyNANWifiStats(uint64_t a1, void *a2)
{
  uint64_t v21 = 0;
  uint64_t v17 = 0;
  unsigned int v18 = &v17;
  uint64_t v19 = 0x2020000000;
  char v20 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960591;
    goto LABEL_15;
  }
  CFArrayRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960568;
    goto LABEL_15;
  }
  dispatch_semaphore_t v5 = dispatch_semaphore_create(0);
  if (!v5)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960568;
    goto LABEL_14;
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APAdvertiserCopyNANWifiStats_block_invoke;
  block[3] = &unk_264895FD8;
  void block[6] = a1;
  void block[7] = Mutable;
  block[4] = v6;
  void block[5] = &v17;
  dispatch_sync(v7, block);
  if (!*((unsigned char *)v18 + 24))
  {
    uint64_t v13 = 4294960561;
    goto LABEL_13;
  }
  dispatch_time_t v8 = dispatch_time(0, 1000000000);
  if (dispatch_semaphore_wait(v6, v8))
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960574;
    goto LABEL_13;
  }
  CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(Mutable, 0);
  int v10 = ValueAtIndex;
  if (!ValueAtIndex) {
    goto LABEL_12;
  }
  CFTypeID v11 = CFGetTypeID(ValueAtIndex);
  if (v11 != CFDictionaryGetTypeID())
  {
    CFTypeID v14 = CFGetTypeID(v10);
    if (v14 == CFNumberGetTypeID() && FigCFArrayGetInt64AtIndex())
    {
      uint64_t v13 = v21;
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v13 = 4294960587;
    goto LABEL_13;
  }
  CFTypeRef v12 = CFRetain(v10);
  uint64_t v13 = 0;
  *a2 = v12;
LABEL_13:
  dispatch_release(v6);
LABEL_14:
  CFRelease(Mutable);
LABEL_15:
  _Block_object_dispose(&v17, 8);
  return v13;
}

void sub_22B3CD0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __APAdvertiserCopyNANWifiStats_block_invoke(uint64_t result)
{
  if (*(void *)(*(void *)(result + 48) + 160))
  {
    uint64_t v1 = result;
    *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = 1;
    CFRetain(*(CFTypeRef *)(result + 56));
    dispatch_retain(*(dispatch_object_t *)(v1 + 32));
    return BonjourAdvertiserGenerateStatisticsNAN();
  }
  return result;
}

void __APAdvertiserCopyNANWifiStats_block_invoke_2(uint64_t a1)
{
  if (NSErrorToOSStatus())
  {
    CFArrayAppendInt64();
  }
  else if (APTNANDataSessionStatisticsReportCopyDictionary())
  {
    APSLogErrorAt();
  }
  else
  {
    CFArrayAppendValue(*(CFMutableArrayRef *)(a1 + 40), 0);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  dispatch_release(*(dispatch_object_t *)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 40);
  if (v2) {
    CFRelease(v2);
  }
}

uint64_t APReceiverRemoteControlSessionGetClassID()
{
  if (APReceiverRemoteControlSessionGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APReceiverRemoteControlSessionGetClassID_sRegisterOnce, &APReceiverRemoteControlSessionGetClassID_sClassID, (dispatch_function_t)rcs_getClassID);
  }
  return APReceiverRemoteControlSessionGetClassID_sClassID;
}

uint64_t rcs_getClassID(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();

  return MEMORY[0x270EE8008](&rcs_getClassID_sClassDesc, ClassID, 1, a1);
}

CFStringRef rcs_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"[APReceiverRemoteControlSession %p]", a1);
}

uint64_t APReceiverRemoteControlSessionGetTypeID()
{
  if (APReceiverRemoteControlSessionGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APReceiverRemoteControlSessionGetClassID_sRegisterOnce, &APReceiverRemoteControlSessionGetClassID_sClassID, (dispatch_function_t)rcs_getClassID);
  }

  return CMBaseClassGetCFTypeID();
}

uint64_t __APReceiverRequestProcessorGetClassID_block_invoke()
{
  uint64_t ClassID = CMBaseGetClassID();

  return MEMORY[0x270EE8008](&APReceiverRequestProcessorGetClassID_classDesc, ClassID, 1, &APReceiverRequestProcessorGetClassID_classID);
}

uint64_t APReceiverAudioSessionRealTimeCreate(uint64_t a1, const void *a2, _OWORD *a3, const __CFDictionary *a4, uint64_t *a5)
{
  uint64_t v157 = *MEMORY[0x263EF8340];
  uint64_t v144 = 0;
  uint64_t AudioFormatIndex = 0;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v10 = malloc_type_calloc(1uLL, 0x2470uLL, 0x10F0040E1765923uLL);
  if (!v10)
  {
    APSLogErrorAt();
    return -72150;
  }
  uint64_t v11 = (uint64_t)v10;
  *int v10 = a1;
  void v10[4] = CFRetain(a2);
  *(_DWORD *)(v11 + 24) = 96;
  *(unsigned char *)(v11 + 96) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(v143, 0, 28);
  uint64_t v12 = FigCFWeakReferenceHolderCreateWithReferencedObject();
  *(void *)(v11 + 8) = v12;
  if (!v12) {
    goto LABEL_293;
  }
  unsigned int v145 = APSRTCReportingAgentCreate();
  if (v145)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unsigned int v145 = 0;
  }
  else if (gLogCategory_APReceiverAudioSessionRealTime <= 40 {
         && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  uint64_t v13 = FigSimpleMutexCreate();
  *(void *)(v11 + 2280) = v13;
  if (v13)
  {
    dispatch_queue_t v14 = dispatch_queue_create("APReceiverAudioSessionPeriodicTaskQueue", 0);
    *(void *)(v11 + 8944) = v14;
    if (!v14
      || (dispatch_queue_t v15 = dispatch_queue_create("APReceiverAudioSessionLogQueue", 0), (*(void *)(v11 + 9064) = v15) == 0))
    {
      APSLogErrorAt();
      char v20 = 0;
      unsigned int v145 = APSSignalErrorAt();
      goto LABEL_452;
    }
    if (CFDictionaryGetInt64()) {
      BOOL v16 = 0;
    }
    else {
      BOOL v16 = APSSettingsGetIntWithDefault() != 0;
    }
    *(unsigned char *)(v11 + 9216) = v16;
    uint64_t Int64 = CFDictionaryGetInt64();
    if (v145)
    {
      APSLogErrorAt();
      char v20 = 0;
      goto LABEL_452;
    }
    if (CFDictionaryGetInt64Ranged() == 1381257248)
    {
      unint64_t v139 = a5;
      if (!CFDictionaryContainsKey(a4, @"MediaDataControl"))
      {
        uint64_t v138 = 0;
        goto LABEL_45;
      }
      CFArrayGetTypeID();
      TypedCFArrayRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
      CFIndex Count = CFArrayGetCount(TypedValue);
      switch(Count)
      {
        case 0:
          goto LABEL_41;
        case 1:
LABEL_33:
          CFDataGetTypeID();
          CFArrayGetTypedValueAtIndex();
LABEL_41:
          CFArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          char v20 = Mutable;
          if (Mutable)
          {
            int v23 = (const void **)MEMORY[0x263EFFB40];
            if (!Int64) {
              int v23 = (const void **)MEMORY[0x263EFFB38];
            }
            CFDictionarySetValue(Mutable, @"MDC::AllowP2P", *v23);
            FigCFDictionarySetValue();
            FigCFDictionarySetValue();
            CFDictionarySetValue(v20, @"MDC::Label", @"RT");
            CFDictionarySetInt64();
            FigCFDictionarySetInt32();
            *(void *)&long long v140 = a1;
            *((void *)&v140 + 1) = audioSession_handleMediaDataControlRequest;
            uint64_t v141 = 0;
            *(_OWORD *)&inSourceFormat.Float64 mSampleRate = *a3;
            *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)((char *)a3 + 12);
            uint64_t v138 = v20;
            unsigned int v145 = APMediaDataControlServerCreate((uint64_t)&inSourceFormat, v20, &v140, (uint64_t *)(v11 + 40));
            if (v145) {
              goto LABEL_339;
            }
LABEL_45:
            *(_DWORD *)(v11 + 72) = CFDictionaryGetInt64();
            if (v145) {
              goto LABEL_339;
            }
            CFArrayRef Value = CFDictionaryGetValue(a4, @"AudioFormat");
            if (Value)
            {
              CFTypeRef v25 = CFRetain(Value);
              *(void *)(v11 + 2288) = v25;
              if (v25)
              {
                uint64_t AudioFormatIndex = APSAudioFormatDescriptionGetAudioFormatIndex();
LABEL_52:
                uint64_t ASBD = APSAudioFormatDescriptionGetASBD();
                *(_DWORD *)(v11 + 92) = APAudioFormatIndexGetBitsPerChannel();
                if (!*(_DWORD *)(v11 + 72)) {
                  *(_DWORD *)(v11 + 72) = APAudioFormatIDToAPCompressionType();
                }
                *(_DWORD *)(v11 + 76) = *(double *)ASBD;
                int v27 = *(_DWORD *)(ASBD + 28);
                *(_DWORD *)(v11 + 80) = v27;
                int v28 = *(_DWORD *)(ASBD + 24);
                *(_DWORD *)(v11 + 84) = v28;
                if (!v28) {
                  *(_DWORD *)(v11 + 84) = (((*(_DWORD *)(v11 + 92) + 7) & 0xFFFFFFF8) * v27) >> 3;
                }
                uint64_t v29 = CFDictionaryGetValue(a4, @"NetworkClock");
                *(void *)(v11 + 2296) = v29;
                if (v29)
                {
                  CFTypeID v30 = CFGetTypeID(v29);
                  if (v30 != APSNetworkClockGetTypeID()) {
                    goto LABEL_341;
                  }
                  uint64_t v31 = *(const void **)(v11 + 2296);
                  if (v31) {
                    CFRetain(v31);
                  }
                }
                *(unsigned char *)(v11 + 532) = 0;
                *(_DWORD *)(v11 + 528) = CFDictionaryGetInt64();
                if (!v145)
                {
                  *(unsigned char *)(v11 + 2304) = CFDictionaryGetInt64() != 0;
                  if (!v145)
                  {
                    uint64_t v32 = CFDictionaryGetInt64();
                    if (!v145)
                    {
                      if (v32) {
                        audioSession_updateCallDurationMetric(v11, 1);
                      }
                      uint64_t v33 = CFDictionaryGetValue(a4, @"StatsCollector");
                      *(void *)(v11 + 2336) = v33;
                      if (v33) {
                        CFRetain(v33);
                      }
                      *(void *)(v11 + 9072) = (int)FigGetCFPreferenceNumberWithDefault();
                      int v34 = CFDictionaryGetInt64();
                      if (v34 >= 1) {
                        int v35 = v34;
                      }
                      else {
                        int v35 = 6001;
                      }
                      *(_DWORD *)(v11 + 1568) = v35;
                      int v36 = CFDictionaryGetInt64();
                      if (v36)
                      {
                        int v37 = *(_DWORD *)(v11 + 76) * v36 / 0x3E8u;
                        *(_DWORD *)(v11 + 1612) = v37;
                      }
                      else
                      {
                        *(_DWORD *)(v11 + 1612) = CFDictionaryGetInt64();
                        int v37 = CFDictionaryGetInt64();
                      }
                      *(_DWORD *)(v11 + 1616) = v37;
                      if (*(unsigned char *)(v11 + 2304)) {
                        int v38 = 11;
                      }
                      else {
                        int v38 = 10;
                      }
                      *(_DWORD *)(v11 + 1624) = v38;
                      if (CFDictionaryContainsKey(a4, @"ClientDeviceModel"))
                      {
                        uint64_t v39 = CFDictionaryGetValue(a4, @"ClientDeviceModel");
                        *(void *)(v11 + 136) = v39;
                        if (v39) {
                          CFRetain(v39);
                        }
                      }
                      if (CFDictionaryContainsKey(a4, @"ClientOSBuildVersion"))
                      {
                        uint64_t v40 = CFDictionaryGetValue(a4, @"ClientOSBuildVersion");
                        *(void *)(v11 + 144) = v40;
                        if (v40) {
                          CFRetain(v40);
                        }
                      }
                      *(_DWORD *)(v11 + 156) = CFDictionaryGetInt64();
                      *(_DWORD *)(v11 + 152) = CFDictionaryGetInt64();
                      unsigned int v41 = CFDictionaryGetInt64();
                      *(_DWORD *)(v11 + 88) = v41;
                      unsigned int v42 = *(_DWORD *)(v11 + 76);
                      int v43 = *(_DWORD *)(v11 + 84);
                      CFDictionaryGetData();
                      if (v145 == -6727)
                      {
                        uint64_t v44 = Int64;
                        CFDataRef cf = 0;
                        unsigned int v145 = 0;
                        goto LABEL_93;
                      }
                      if (!v145)
                      {
                        if (v144 == 32)
                        {
                          for (uint64_t i = 160; i != 464; ++i)
                            *(unsigned char *)(v11 + i) = 0;
                          __memcpy_chk();
                          *(unsigned char *)(v11 + 160) = 1;
                          if (!*(unsigned char *)(v11 + 96))
                          {
                            uint64_t v44 = Int64;
                            CFDataRef cf = 0;
                            goto LABEL_93;
                          }
                          CFDataRef v46 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)(v11 + 424), 32);
                          if (v46)
                          {
                            CFDataRef cf = v46;
                            unsigned int v145 = APSCryptorChaCha20Poly1305Create();
                            if (v145)
                            {
                              APSLogErrorAt();
                              CFDataRef v134 = cf;
                              char v20 = v138;
LABEL_450:
                              CFRelease(v134);
LABEL_451:
                              if (!v11) {
                                goto LABEL_453;
                              }
                              goto LABEL_452;
                            }
                            uint64_t v44 = Int64;
LABEL_93:
                            LODWORD(v47) = (v41 + v41 / (v42 / 0x3E8) + 16) * v43;
                            *(_DWORD *)(v11 + 1628) = 512;
                            if (v47 <= 0x5C0) {
                              uint64_t v47 = 1472;
                            }
                            else {
                              uint64_t v47 = v47;
                            }
                            *(void *)(v11 + 1632) = v47 + 12;
                            uint64_t v48 = UpTicksPerSecond();
                            uint64_t v49 = mach_absolute_time();
                            *(void *)(v11 + 1744) = SecondsToUpTicks();
                            *(void *)(v11 + 1752) = v49;
                            *(void *)(v11 + 1856) = 60 * v48;
                            *(void *)(v11 + 1848) = v49 + 60 * v48;
                            *(void *)(v11 + 1944) = v48;
                            *(void *)(v11 + 1936) = v49 + v48;
                            *(void *)(v11 + 1968) = 0x7FFFFFFFFFFFFFFFLL;
                            *(_DWORD *)(v11 + 1984) = 0;
                            *(void *)(v11 + 1976) = v49 + 8 * v48;
                            float v50 = (float)((float)(unint64_t)v48
                                        * (float)FigGetCFPreferenceNumberWithDefault())
                                / 1000.0;
                            *(void *)(v11 + 9088) = (unint64_t)v50;
                            uint64_t v51 = v49 + (unint64_t)v50;
                            *(void *)(v11 + 9080) = v51;
                            *(void *)(v11 + 9096) = (unint64_t)v50;
                            *(void *)(v11 + 9104) = v51;
                            *(unsigned char *)(v11 + 9113) = FigGetCFPreferenceNumberWithDefault();
                            *(_WORD *)(v11 + 9152) = 0;
                            *(unsigned char *)(v11 + 9165) = 0;
                            APSSettingsGetIntWithDefault();
                            *(void *)(v11 + 9224) = MillisecondsToUpTicks() + v49;
                            *(unsigned char *)(v11 + 9248) = 0;
                            atomic_store(0, (unsigned __int8 *)(v11 + 9264));
                            *(_DWORD *)(v11 + 9252) = APSSettingsGetIntWithDefault();
                            *(unsigned char *)(v11 + 8804) = 0;
                            *(_WORD *)(v11 + 8824) = 0;
                            *(void *)(v11 + 8848) = 0;
                            APSIOReporterCreate();
                            unsigned int v145 = 0;
                            APSSettingsGetIntWithDefault();
                            *(void *)(v11 + 8920) = SecondsToUpTicks();
                            *(void *)(v11 + 8928) = mach_absolute_time();
                            *(_WORD *)(v11 + 8936) = 0;
                            *(float *)(v11 + 1620) = (float)((float)*(unsigned int *)(v11 + 1616) * 1000.0)
                                                   / (float)*(unsigned int *)(v11 + 76);
                            *(void *)(v11 + 9144) = (int)FigGetCFPreferenceNumberWithDefault();
                            *(void *)(v11 + 9136) = (int)FigGetCFPreferenceNumberWithDefault();
                            int v52 = CFDictionaryGetInt64();
                            *(void *)(v11 + 1872) = v49;
                            *(void *)(v11 + 1880) = v52 * v48;
                            *(void *)(v11 + 1888) = v48;
                            *(void *)(v11 + 1896) = 0;
                            *(void *)(v11 + 1904) = v49;
                            *(void *)(v11 + 1912) = 10 * v48;
                            *(unsigned char *)(v11 + 9112) = 0;
                            CFAllocatorRef v53 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
                            unsigned int v145 = APSAtomicMessageQueueCreate();
                            if (v145) {
                              goto LABEL_345;
                            }
                            unsigned int v145 = APSAtomicMessageQueueCreate();
                            if (v145) {
                              goto LABEL_345;
                            }
                            SockAddrCopy();
                            unsigned int v145 = ServerSocketOpen();
                            if (v145) {
                              goto LABEL_345;
                            }
                            uint64_t v54 = v44;
                            if (v44) {
                              SocketSetP2P();
                            }
                            SocketSetPacketTimestamps();
                            SocketSetQoS();
                            SockAddrSetPort();
                            *(_OWORD *)(v11 + 1572) = v143[0];
                            *(_OWORD *)(v11 + 1584) = *(_OWORD *)((char *)v143 + 12);
                            socklen_t Size = SockAddrGetSize();
                            *(_DWORD *)(v11 + 1600) = Size;
                            unsigned int v145 = connect(*(_DWORD *)(v11 + 1560), (const sockaddr *)(v11 + 1572), Size);
                            if (v145)
                            {
                              if (*__error())
                              {
                                int v56 = *__error();
                                unsigned int v145 = v56;
                                if (!v56) {
                                  goto LABEL_115;
                                }
                              }
                              else
                              {
                                unsigned int v145 = -6700;
                              }
                              if (gLogCategory_APReceiverAudioSessionRealTime >= 91)
                              {
                                *(unsigned char *)(v11 + 1604) = 0;
                                goto LABEL_119;
                              }
                              if (gLogCategory_APReceiverAudioSessionRealTime != -1
                                || (v57 = _LogCategory_Initialize(), int v56 = v145, v57))
                              {
                                LogPrintF();
                                int v56 = v145;
                              }
                            }
                            else
                            {
                              int v56 = 0;
                              unsigned int v145 = 0;
                            }
LABEL_115:
                            int v58 = gLogCategory_APReceiverAudioSessionRealTime;
                            *(unsigned char *)(v11 + 1604) = v56 == 0;
                            if (v58 <= 50 && (v58 != -1 || _LogCategory_Initialize())) {
                              LogPrintF();
                            }
LABEL_119:
                            if (CFDictionaryGetInt64() || *(_DWORD *)(v11 + 528))
                            {
                              *(unsigned char *)(v11 + 2160) = 1;
                            }
                            else
                            {
                              uint64_t v69 = malloc_type_malloc(0x5000uLL, 0x102004012755DA7uLL);
                              *(void *)(v11 + 2136) = v69;
                              if (!v69) {
                                goto LABEL_309;
                              }
                              uint64_t v70 = 0x1FFFFFFFFFFFF605;
                              do
                              {
                                v69[v70 + 2555] = &v69[v70 + 2560];
                                v70 += 5;
                              }
                              while (v70 * 8);
                              v69[2555] = 0;
                              *(void *)(v11 + 2144) = v69;
                              *(void *)(v11 + 2168) = 0x7FFFFFFFFFFFFFFFLL;
                              *(_OWORD *)(v11 + 2176) = xmmword_22B497770;
                              *(void *)(v11 + 2200) = 100000000;
                              if (*(_DWORD *)(v11 + 528)) {
                                BOOL v71 = 1;
                              }
                              else {
                                BOOL v71 = FigGetCFPreferenceNumberWithDefault() != 0;
                              }
                              *(unsigned char *)(v11 + 2160) = v71;
                              *(void *)(v11 + 2224) = -1;
                              *(void *)(v11 + 2248) = -1;
                              *(_DWORD *)(v11 + 2264) = 128;
                              unsigned int v145 = APSAtomicMessageQueueCreate();
                              if (v145) {
                                goto LABEL_345;
                              }
                            }
                            unsigned int v145 = APSRTPPassThroughJitterBufferCreate();
                            if (v145) {
                              goto LABEL_345;
                            }
                            Buffersocklen_t Size = APCompressionTypeGetBufferSize();
                            if (!BufferSize)
                            {
                              APSLogErrorAt();
                              int v130 = -6735;
                              goto LABEL_311;
                            }
                            size_t v60 = BufferSize;
                            *(void *)(v11 + 9008) = 0;
                            *(void *)(v11 + 9040) = 0;
                            *(void *)(v11 + 8992) = 0;
                            *(void *)(v11 + 8998) = 0;
                            size_t v61 = (*(_DWORD *)(v11 + 84) * *(_DWORD *)(v11 + 88));
                            *(void *)(v11 + 9024) = v61;
                            *(void *)(v11 + 9032) = v61;
                            uint64_t v62 = malloc_type_malloc(v61, 0xD970A78CuLL);
                            *(void *)(v11 + 9016) = v62;
                            if (v62)
                            {
                              if (*(_DWORD *)(v11 + 72) == 1) {
                                goto LABEL_168;
                              }
                              memset(&inSourceFormat, 0, sizeof(inSourceFormat));
                              memset(&inDestinationFormat, 0, sizeof(inDestinationFormat));
                              inPropertyCFDataRef Data = 3;
                              int v63 = APCompressionTypeFillStreamDescription();
                              if (v63)
                              {
                                int v133 = v63;
                              }
                              else
                              {
                                if (*(_DWORD *)(v11 + 88)) {
                                  inSourceFormat.mFramesPerPacket = *(_DWORD *)(v11 + 88);
                                }
                                LODWORD(v64) = *(_DWORD *)(v11 + 76);
                                inDestinationFormat.Float64 mSampleRate = (double)v64;
                                *(void *)&inDestinationFormat.mFormatID = 0xC6C70636DLL;
                                UInt32 v65 = *(_DWORD *)(v11 + 80);
                                UInt32 v66 = *(_DWORD *)(v11 + 92);
                                inDestinationFormat.mBytesPerPacket = (v66 >> 3) * v65;
                                inDestinationFormat.mFramesPerPacket = 1;
                                inDestinationFormat.mBytesPerFrame = inDestinationFormat.mBytesPerPacket;
                                inDestinationFormat.mChannelsPerFrame = v65;
                                inDestinationFormat.mBitsPerChannel = v66;
                                inDestinationFormat.mReserved = 0;
                                uint64_t v67 = (AudioConverterRef *)(v11 + 1792);
                                OSStatus v68 = AudioConverterNew(&inSourceFormat, &inDestinationFormat, (AudioConverterRef *)(v11 + 1792));
                                if (v68)
                                {
                                  int v133 = v68;
                                }
                                else
                                {
                                  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                    && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                     || _LogCategory_Initialize()))
                                  {
                                    LogPrintF();
                                  }
                                  if (((*(_DWORD *)(v11 + 72) - 4) & 0xFFFFFFFB) != 0)
                                  {
                                    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                      && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                       || _LogCategory_Initialize()))
                                    {
                                      LogPrintF();
                                    }
                                    int v74 = malloc_type_calloc(1uLL, 0x4020uLL, 0x1010040784321C2uLL);
                                    *(void *)(v11 + 8992) = v74;
                                    if (!v74)
                                    {
                                      int v133 = -72150;
                                      goto LABEL_358;
                                    }
                                    APSPacketLossConcealerReset();
                                    *(unsigned char *)(v11 + 9005) = 0;
                                  }
                                  else
                                  {
                                    outPropertyCFDataRef Data = 0;
                                    ioPropertyDatasocklen_t Size = 8;
                                    OSStatus v72 = AudioConverterSetProperty(*v67, 0x636F6E6Du, 4u, &inPropertyData);
                                    if (v72)
                                    {
                                      int v133 = v72;
                                      goto LABEL_358;
                                    }
                                    OSStatus Property = AudioConverterGetProperty(*v67, 0x7072696Du, &ioPropertyDataSize, &outPropertyData);
                                    if (Property)
                                    {
                                      int v133 = Property;
                                      goto LABEL_358;
                                    }
                                    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                      && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                       || _LogCategory_Initialize()))
                                    {
                                      LogPrintF();
                                    }
                                    int v75 = (int)outPropertyData;
                                    if (inPropertyData == 5) {
                                      int v75 = 1;
                                    }
                                    *(_DWORD *)(v11 + 9000) = v75;
                                    *(unsigned char *)(v11 + 9005) = 1;
                                  }
                                  *(_DWORD *)(v11 + 9008) = 0;
                                  if (*(_DWORD *)(v11 + 80) < 3u) {
                                    goto LABEL_459;
                                  }
                                  ioPropertyDatasocklen_t Size = 0;
                                  outPropertyCFDataRef Data = 0;
                                  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                    && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                     || _LogCategory_Initialize()))
                                  {
                                    LogPrintF();
                                  }
                                  APAudioFormatGetMagicCookieForAACELD();
                                  OSStatus v76 = AudioConverterSetProperty(*(AudioConverterRef *)(v11 + 1792), 0x646D6763u, ioPropertyDataSize, outPropertyData);
                                  if (v76)
                                  {
                                    int v133 = v76;
                                  }
                                  else
                                  {
LABEL_459:
                                    if (inSourceFormat.mFormatID != 1634492771) {
                                      goto LABEL_167;
                                    }
                                    LODWORD(outPropertyData) = bswap32(inSourceFormat.mFramesPerPacket);
                                    BYTE5(outPropertyData) = *(_DWORD *)(v11 + 92);
                                    HIWORD(outPropertyData) = 2600;
                                    char v147 = 14;
                                    unsigned int v77 = *(_DWORD *)(v11 + 76);
                                    char v148 = *(_DWORD *)(v11 + 80);
                                    __int16 v149 = -256;
                                    BYTE4(outPropertyData) = 0;
                                    int v150 = 0;
                                    int v151 = 0;
                                    unsigned int v152 = bswap32(v77);
                                    OSStatus v78 = AudioConverterSetProperty(*(AudioConverterRef *)(v11 + 1792), 0x646D6763u, 0x18u, &outPropertyData);
                                    if (!v78)
                                    {
LABEL_167:
                                      unsigned int v145 = 0;
LABEL_168:
                                      *(void *)(v11 + 1664) = v60;
                                      int v79 = malloc_type_malloc(v60, 0xAA25A07AuLL);
                                      *(void *)(v11 + 1656) = v79;
                                      if (v79)
                                      {
                                        *(void *)(v11 + 1680) = v60;
                                        uint64_t v80 = malloc_type_malloc(v60, 0x9F72027FuLL);
                                        *(void *)(v11 + 1672) = v80;
                                        if (v80)
                                        {
                                          *(void *)(v11 + 1696) = v60;
                                          unsigned int v81 = malloc_type_malloc(v60, 0xD81D2703uLL);
                                          *(void *)(v11 + 1688) = v81;
                                          if (v81)
                                          {
                                            *(void *)(v11 + 1712) = v60;
                                            unsigned int v82 = malloc_type_malloc(v60, 0x56CF42B1uLL);
                                            *(void *)(v11 + 1704) = v82;
                                            if (v82)
                                            {
                                              gAirPlayAudioStats = xmmword_22B497780;
                                              byte_268402E10 = 0;
                                              qword_268402E18 = 0;
                                              dword_268402E20 = 0;
                                              *(void *)(v11 + 9300) = 0;
                                              *(_DWORD *)(v11 + 9296) = 16842752;
                                              unsigned int v83 = CFDictionaryGetValue(a4, @"ReceiverSession");
                                              if (v83)
                                              {
                                                *(_DWORD *)(v11 + 9312) = v83[124];
                                                APSCopyClusterInfo();
                                                int v84 = &unk_268401000;
                                                if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                                  && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                                   || _LogCategory_Initialize()))
                                                {
                                                  LogPrintF();
                                                }
                                                uint64_t v85 = FigCFWeakReferenceHolderCreateWithReferencedObject();
                                                *(void *)(v11 + 16) = v85;
                                                if (v85)
                                                {
                                                  uint64_t v86 = v54;
                                                  APTTrafficMetricsCreate();
                                                  uint64_t v87 = nw_activity_create();
                                                  *(void *)(v11 + 104) = v87;
                                                  if (!v87)
                                                  {
                                                    APSLogErrorAt();
                                                    unsigned int v145 = -6728;
                                                    if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                      || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                      && !_LogCategory_Initialize())
                                                    {
                                                      goto LABEL_346;
                                                    }
LABEL_324:
                                                    LogPrintF();
                                                    goto LABEL_346;
                                                  }
                                                  nw_activity_activate();
                                                  int v88 = CFDictionaryContainsKey(a4, @"NetworkInfoRemoteRTP");
                                                  *(unsigned char *)(v11 + 97) = v88;
                                                  if (v88)
                                                  {
                                                    CFDictionaryGetTypeID();
                                                    uint64_t v89 = CFDictionaryGetTypedValue();
                                                    if (!v145)
                                                    {
                                                      LODWORD(outPropertyData) = 0;
                                                      inSourceFormat.Float64 mSampleRate = 0.0;
                                                      inDestinationFormat.Float64 mSampleRate = 0.0;
                                                      int IntWithDefault = APSSettingsGetIntWithDefault();
                                                      int v91 = APSSettingsGetIntWithDefault();
                                                      CFStringGetTypeID();
                                                      CFDictionaryGetTypedValue();
                                                      if (outPropertyData)
                                                      {
                                                        APSLogErrorAt();
                                                      }
                                                      else
                                                      {
                                                        CFMutableDictionaryRef v92 = CFDictionaryCreateMutable(v53, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                                                        if (v92)
                                                        {
                                                          int v93 = v92;
                                                          int v94 = IntWithDefault | v91;
                                                          *(void *)(v11 + 112) = dispatch_queue_create("APReceiverAudioSessionRealTime.callbackQueue", 0);
                                                          int v95 = (const void *)*MEMORY[0x263EFFB40];
                                                          CFDictionarySetValue(v93, (const void *)*MEMORY[0x263F20D48], (const void *)*MEMORY[0x263EFFB40]);
                                                          CFDictionarySetInt64();
                                                          if (v94)
                                                          {
                                                            LODWORD(outPropertyData) = APSRealTimeReadableRingBufferCreate();
                                                            if (outPropertyData) {
                                                              goto LABEL_250;
                                                            }
                                                            CFDictionarySetValue(v93, (const void *)*MEMORY[0x263F20DC8], *(const void **)(v11 + 128));
                                                            if (IntWithDefault) {
                                                              CFDictionarySetValue(v93, (const void *)*MEMORY[0x263F20DC0], v95);
                                                            }
                                                          }
                                                          if (APSGetAllowPersistentGroupsOnInfra()) {
                                                            CFDictionarySetValue(v93, (const void *)*MEMORY[0x263F20DB8], v95);
                                                          }
                                                          LODWORD(outPropertyData) = APTransportConnectionUDPNWCreate();
                                                          if (outPropertyData)
                                                          {
                                                            APSLogErrorAt();
                                                            int v84 = &unk_268401000;
                                                            int v100 = v139;
                                                            if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                              || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                              && !_LogCategory_Initialize())
                                                            {
                                                              goto LABEL_251;
                                                            }
                                                            goto LABEL_209;
                                                          }
                                                          LODWORD(outPropertyData) = APSNetworkAddressCreateWithString();
                                                          if (outPropertyData)
                                                          {
                                                            APSLogErrorAt();
                                                            int v84 = &unk_268401000;
                                                            int v100 = v139;
                                                            if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                              || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                              && !_LogCategory_Initialize())
                                                            {
                                                              goto LABEL_251;
                                                            }
                                                            goto LABEL_209;
                                                          }
                                                          LODWORD(outPropertyData) = APSNetworkAddressCopyInterfaceName();
                                                          if (outPropertyData)
                                                          {
LABEL_250:
                                                            APSLogErrorAt();
                                                            int v100 = v139;
                                                            int v84 = &unk_268401000;
                                                            goto LABEL_251;
                                                          }
                                                          Float64 mSampleRate = inSourceFormat.mSampleRate;
                                                          uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
                                                          uint64_t v98 = *(void *)(CMBaseObjectGetVTable() + 8);
                                                          if (v98) {
                                                            uint64_t v99 = v98;
                                                          }
                                                          else {
                                                            uint64_t v99 = 0;
                                                          }
                                                          unsigned int v102 = *(uint64_t (**)(uint64_t, void, void))(v99 + 56);
                                                          if (v102)
                                                          {
                                                            LODWORD(outPropertyData) = v102(CMBaseObject, *MEMORY[0x263F20DA0], *(void *)&mSampleRate);
                                                            if (!outPropertyData)
                                                            {
                                                              Float64 v103 = inDestinationFormat.mSampleRate;
                                                              if (!*(void *)&inDestinationFormat.mSampleRate) {
                                                                goto LABEL_218;
                                                              }
                                                              uint64_t v104 = APTransportConnectionGetCMBaseObject();
                                                              uint64_t v105 = *(void *)(CMBaseObjectGetVTable() + 8);
                                                              if (v105) {
                                                                uint64_t v106 = v105;
                                                              }
                                                              else {
                                                                uint64_t v106 = 0;
                                                              }
                                                              unint64_t v107 = *(uint64_t (**)(uint64_t, void, void))(v106 + 56);
                                                              if (v107)
                                                              {
                                                                LODWORD(outPropertyData) = v107(v104, *MEMORY[0x263F20D80], *(void *)&v103);
                                                                if (!outPropertyData)
                                                                {
                                                                  if (*(void *)&inDestinationFormat.mSampleRate
                                                                    && CFStringHasPrefix(*(CFStringRef *)&inDestinationFormat.mSampleRate, @"llw"))
                                                                  {
                                                                    *(unsigned char *)(v11 + 9164) = APSSettingsGetIntWithDefault() != 0;
                                                                    *(unsigned char *)(v11 + 9166) = APSSettingsGetIntWithDefault() != 0;
                                                                    APSSettingsGetIntWithDefault();
                                                                    *(void *)(v11 + 9168) = SecondsToUpTicks();
                                                                  }
LABEL_218:
                                                                  uint64_t v108 = APTransportConnectionGetCMBaseObject();
                                                                  uint64_t v109 = *(void *)(CMBaseObjectGetVTable() + 8);
                                                                  if (v109) {
                                                                    uint64_t v110 = v109;
                                                                  }
                                                                  else {
                                                                    uint64_t v110 = 0;
                                                                  }
                                                                  uint64_t v111 = *(uint64_t (**)(uint64_t, void, uint64_t))(v110 + 56);
                                                                  if (v111)
                                                                  {
                                                                    LODWORD(outPropertyData) = v111(v108, *MEMORY[0x263F20DA8], v89);
                                                                    if (!outPropertyData)
                                                                    {
                                                                      uint64_t v112 = *(void *)(v11 + 112);
                                                                      uint64_t v113 = *(void *)(v11 + 120);
                                                                      uint64_t v114 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                                      if (v114) {
                                                                        uint64_t v115 = v114;
                                                                      }
                                                                      else {
                                                                        uint64_t v115 = 0;
                                                                      }
                                                                      unint64_t v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), uint64_t, void))(v115 + 16);
                                                                      if (v116)
                                                                      {
                                                                        LODWORD(outPropertyData) = v116(v113, v11, audioSession_eventCallback, v112, 0);
                                                                        if (!outPropertyData)
                                                                        {
                                                                          uint64_t v117 = APTransportConnectionGetCMBaseObject();
                                                                          uint64_t v118 = *(void *)(CMBaseObjectGetVTable() + 8);
                                                                          if (v118) {
                                                                            uint64_t v119 = v118;
                                                                          }
                                                                          else {
                                                                            uint64_t v119 = 0;
                                                                          }
                                                                          unint64_t v120 = *(uint64_t (**)(uint64_t, void, void))(v119 + 56);
                                                                          if (v120)
                                                                          {
                                                                            LODWORD(outPropertyData) = v120(v117, *MEMORY[0x263F20D98], *MEMORY[0x263F20D68]);
                                                                            if (!outPropertyData)
                                                                            {
                                                                              uint64_t v121 = *(void *)(v11 + 120);
                                                                              uint64_t v122 = *(void *)(CMBaseObjectGetVTable()
                                                                                               + 16);
                                                                              if (v122) {
                                                                                uint64_t v123 = v122;
                                                                              }
                                                                              else {
                                                                                uint64_t v123 = 0;
                                                                              }
                                                                              int v84 = &unk_268401000;
                                                                              unsigned __int8 v125 = *(uint64_t (**)(uint64_t))(v123 + 8);
                                                                              if (v125)
                                                                              {
                                                                                LODWORD(outPropertyData) = v125(v121);
                                                                                if (!outPropertyData)
                                                                                {
                                                                                  uint64_t v126 = APTransportConnectionGetCMBaseObject();
                                                                                  uint64_t v127 = *(void *)(CMBaseObjectGetVTable() + 8);
                                                                                  if (v127) {
                                                                                    uint64_t v128 = v127;
                                                                                  }
                                                                                  else {
                                                                                    uint64_t v128 = 0;
                                                                                  }
                                                                                  unint64_t v129 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, uint64_t))(v128 + 48);
                                                                                  if (v129)
                                                                                  {
                                                                                    LODWORD(outPropertyData) = v129(v126, *MEMORY[0x263F20D88], v53, v11 + 520);
                                                                                    int v100 = v139;
                                                                                    if (!outPropertyData) {
                                                                                      goto LABEL_251;
                                                                                    }
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    LODWORD(outPropertyData) = -12782;
                                                                                  }
                                                                                  APSLogErrorAt();
                                                                                  int v100 = v139;
                                                                                  if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                                    || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                                    && !_LogCategory_Initialize())
                                                                                  {
                                                                                    goto LABEL_251;
                                                                                  }
                                                                                  goto LABEL_209;
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                LODWORD(outPropertyData) = -12782;
                                                                              }
                                                                              APSLogErrorAt();
                                                                              int v100 = v139;
                                                                              if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                                || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                                && !_LogCategory_Initialize())
                                                                              {
                                                                                goto LABEL_251;
                                                                              }
LABEL_209:
                                                                              LogPrintF();
LABEL_251:
                                                                              CFRelease(v93);
LABEL_252:
                                                                              if (*(void *)&inSourceFormat.mSampleRate) {
                                                                                CFRelease(*(CFTypeRef *)&inSourceFormat.mSampleRate);
                                                                              }
                                                                              if (*(void *)&inDestinationFormat.mSampleRate) {
                                                                                CFRelease(*(CFTypeRef *)&inDestinationFormat.mSampleRate);
                                                                              }
                                                                              unsigned int v145 = outPropertyData;
                                                                              if (!outPropertyData) {
                                                                                goto LABEL_257;
                                                                              }
                                                                              APSLogErrorAt();
                                                                              int v131 = v84[516];
                                                                              if (v131 > 90
                                                                                || v131 == -1
                                                                                && !_LogCategory_Initialize())
                                                                              {
                                                                                goto LABEL_346;
                                                                              }
                                                                              goto LABEL_324;
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            LODWORD(outPropertyData) = -12782;
                                                                          }
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        LODWORD(outPropertyData) = -12782;
                                                                      }
                                                                      goto LABEL_250;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    LODWORD(outPropertyData) = -12782;
                                                                  }
                                                                  APSLogErrorAt();
                                                                  int v84 = &unk_268401000;
                                                                  int v100 = v139;
                                                                  if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                    || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                    && !_LogCategory_Initialize())
                                                                  {
                                                                    goto LABEL_251;
                                                                  }
                                                                  goto LABEL_209;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                LODWORD(outPropertyData) = -12782;
                                                              }
                                                              APSLogErrorAt();
                                                              int v84 = &unk_268401000;
                                                              int v100 = v139;
                                                              if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                && !_LogCategory_Initialize())
                                                              {
                                                                goto LABEL_251;
                                                              }
                                                              goto LABEL_209;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            LODWORD(outPropertyData) = -12782;
                                                          }
                                                          APSLogErrorAt();
                                                          int v84 = &unk_268401000;
                                                          int v100 = v139;
                                                          if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                            || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                            && !_LogCategory_Initialize())
                                                          {
                                                            goto LABEL_251;
                                                          }
                                                          goto LABEL_209;
                                                        }
                                                        APSLogErrorAt();
                                                        LODWORD(outPropertyData) = -72150;
                                                      }
                                                      int v100 = v139;
                                                      int v84 = (_DWORD *)&unk_268401000;
                                                      goto LABEL_252;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    unsigned int v145 = ServerSocketOpen();
                                                    if (!v145)
                                                    {
                                                      APTTrafficMetricsConnectionFormed();
                                                      int v100 = v139;
                                                      if (v86) {
                                                        SocketSetP2P();
                                                      }
                                                      uint64_t v101 = CFDictionaryGetInt64();
                                                      if (!v145)
                                                      {
                                                        if (!v101) {
                                                          SocketSetQoS();
                                                        }
LABEL_257:
                                                        unsigned int v145 = OpenSelfConnectedLoopbackSocket();
                                                        if (!v145)
                                                        {
                                                          PIDInit();
                                                          *(unsigned char *)(v11 + 2040) = CFDictionaryGetInt64() != 0;
                                                          int v124 = v84[516];
                                                          if (v124 <= 30
                                                            && (v124 != -1 || _LogCategory_Initialize()))
                                                          {
                                                            if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 2
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 3
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 5)
                                                            {
                                                              if (APSAudioFormatDescriptionGetAudioFormatIndex() != 7
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 91
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
                                                              {
                                                                APSAudioFormatDescriptionGetAudioFormatIndex();
                                                              }
                                                              int v100 = v139;
                                                            }
                                                            LogPrintF();
                                                          }
                                                          *(void *)(v11 + 1728) = 8;
                                                          unint64_t v135 = malloc_type_calloc(1uLL, 8uLL, 0xF6E70F3FuLL);
                                                          *(void *)(v11 + 1720) = v135;
                                                          char v20 = v138;
                                                          if (v135)
                                                          {
                                                            *(unsigned char *)(v11 + 2276) = 0;
                                                            if (v100)
                                                            {
                                                              *int v100 = v11;
                                                              uint64_t v11 = 0;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            APSLogErrorAt();
                                                            unsigned int v145 = -6728;
                                                          }
LABEL_449:
                                                          CFDataRef v134 = cf;
                                                          if (!cf) {
                                                            goto LABEL_451;
                                                          }
                                                          goto LABEL_450;
                                                        }
                                                      }
                                                    }
                                                  }
LABEL_345:
                                                  APSLogErrorAt();
                                                  goto LABEL_346;
                                                }
                                              }
                                              APSLogErrorAt();
                                              unsigned int v145 = APSSignalErrorAt();
LABEL_346:
                                              char v20 = v138;
                                              goto LABEL_449;
                                            }
                                          }
                                        }
                                      }
                                      APSLogErrorAt();
                                      int v130 = -72150;
LABEL_311:
                                      unsigned int v145 = v130;
                                      goto LABEL_346;
                                    }
                                    int v133 = v78;
                                  }
                                }
                              }
LABEL_358:
                              APSLogErrorAt();
                              char v20 = v138;
                              unsigned int v145 = v133;
                              APSLogErrorAt();
                              goto LABEL_449;
                            }
LABEL_309:
                            APSLogErrorAt();
                            int v130 = -6728;
                            goto LABEL_311;
                          }
                          APSLogErrorAt();
                          int v132 = -6728;
                          goto LABEL_348;
                        }
LABEL_341:
                        APSLogErrorAt();
                        int v132 = -72151;
LABEL_348:
                        unsigned int v145 = v132;
                        goto LABEL_340;
                      }
                    }
                  }
                }
LABEL_339:
                APSLogErrorAt();
LABEL_340:
                char v20 = v138;
                goto LABEL_452;
              }
            }
            else
            {
              *(void *)(v11 + 2288) = 0;
            }
            unsigned int v145 = APCompressionTypeToAPAudioFormatIndex();
            if (v145) {
              goto LABEL_339;
            }
            unsigned int v145 = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
            if (v145) {
              goto LABEL_339;
            }
            goto LABEL_52;
          }
          APSLogErrorAt();
          int v21 = -6728;
          goto LABEL_40;
        case 2:
          CFDataGetTypeID();
          CFArrayGetTypedValueAtIndex();
          goto LABEL_33;
      }
      char v20 = 0;
      int v21 = -6705;
    }
    else
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      char v20 = 0;
      int v21 = -72151;
    }
  }
  else
  {
LABEL_293:
    APSLogErrorAt();
    char v20 = 0;
    int v21 = -72150;
  }
LABEL_40:
  unsigned int v145 = v21;
LABEL_452:
  free((void *)v11);
LABEL_453:
  if (v20) {
    CFRelease(v20);
  }
  return v145;
}

uint64_t audioSession_updateCallDurationMetric(uint64_t result, int a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 9280);
  if (a2)
  {
    if (!v3)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t result = mach_absolute_time();
      *(void *)(v2 + 9280) = result;
      return result;
    }
  }
  else if (!v3)
  {
    return result;
  }
  mach_absolute_time();
  uint64_t result = UpTicksToSeconds();
  *(void *)(v2 + 9272) += result;
  *(void *)(v2 + 9280) = 0;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioSession_eventCallback(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 7)
  {
    dispatch_semaphore_t v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (v5)
    {
      if (APSRTPPassThroughJitterBufferAcquireRelinquishedNode())
      {
        APSLogErrorAt();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_16;
      }
      uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      int v9 = *(uint64_t (**)(uint64_t))(v8 + 64);
      if (v9)
      {
        int v10 = (OpaqueCMBlockBuffer *)v9(a2);
        if (v10)
        {
          uint64_t v11 = v10;
          DataCFIndex Length = CMBlockBufferGetDataLength(v10);
          CMBlockBufferCopyDataBytes(v11, 0, DataLength, MEMORY[0x18]);
          MEMORY[0x30] = mach_absolute_time();
          if (!audioSession_processPacket(a3, 0, DataLength, 0))
          {
LABEL_21:
            CFRelease(v11);
LABEL_22:
            if (v5) {
              goto LABEL_23;
            }
            return 0;
          }
LABEL_20:
          if (!v11) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
      }
    }
    APSLogErrorAt();
    APSSignalErrorAt();
LABEL_16:
    uint64_t v11 = 0;
    goto LABEL_20;
  }
  if (a1 == 6)
  {
    dispatch_semaphore_t v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v5)
    {
      AirPlayReceiverSessionControl((uint64_t)v5, v4, @"sessionDied", 0, 0, 0);
LABEL_23:
      CFRelease(v5);
    }
  }
  return 0;
}

uint64_t audioSession_processPacket(uint64_t a1, uint64_t **a2, unint64_t a3, int a4)
{
  uint64_t v7 = a1;
  if (*(unsigned char *)(a1 + 96))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 30
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    kdebug_trace();
    uint64_t v16 = APSRTPPacketProcessorProcessPacket();
    if (!v16)
    {
      atomic_fetch_add((atomic_uint *volatile)(v7 + 1920), 1u);
      atomic_fetch_add((atomic_uint *volatile)(v7 + 1924), 0);
      if (gLogCategory_APReceiverAudioSessionRealTime > 10
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_82;
      }
      goto LABEL_28;
    }
    uint64_t v43 = v16;
    APSLogErrorAt();
LABEL_96:
    APSLogErrorAt();
    return v43;
  }
  kdebug_trace();
  if (a3 <= 0xB)
  {
LABEL_93:
    APSLogErrorAt();
    return 4294960553;
  }
  uint64_t v8 = a2[3];
  *((_WORD *)v8 + 1) = bswap32(*((unsigned __int16 *)v8 + 1)) >> 16;
  *(uint64_t *)((char *)v8 + 4) = (uint64_t)vrev32_s8(*(int8x8_t *)((char *)v8 + 4));
  kdebug_trace();
  char v9 = *((unsigned char *)v8 + 1);
  if (a4) {
    *((_DWORD *)a2 + 9) |= 1u;
  }
  audioSession_sessionLock(*(pthread_mutex_t **)(v7 + 2280));
  audioSession_processEnqueuedRetransmitCommands(v7);
  if (audioSession_trackDups(v7, *((unsigned __int16 *)v8 + 1)))
  {
    APSRTPPassThroughJitterBufferRelinquishNode();
    audioSession_sessionUnlock(*(pthread_mutex_t **)(v7 + 2280));
    return 0;
  }
  if (!a4) {
    audioSession_trackLosses(v7, (uint64_t)v8);
  }
  if (!*(unsigned char *)(v7 + 2160)) {
    audioSession_retransmitsUpdate(v7, *((unsigned __int16 *)v8 + 1), a4);
  }
  int v10 = v9 & 0x7F;
  if (!a4)
  {
    int v11 = *(_DWORD *)(v7 + 1864);
    if ((v11 + 1) > 1) {
      int v12 = v11 + 1;
    }
    else {
      int v12 = 1;
    }
    *(_DWORD *)(v7 + 1864) = v12;
  }
  unint64_t v13 = a3 - 12;
  audioSession_sessionUnlock(*(pthread_mutex_t **)(v7 + 2280));
  if (v10 == 97)
  {
    unint64_t v14 = 0;
    uint64_t v15 = 0;
    while (*((char *)v8 + v14 + 12) < 0)
    {
      v14 += 4;
      ++v15;
      if (v14 > v13) {
        goto LABEL_93;
      }
    }
    uint64_t v17 = v14 | 1;
    if ((v14 | 1) > v13) {
      goto LABEL_93;
    }
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v15 = 0;
  }
  uint64_t v45 = v7;
  if (*(void *)(v7 + 504) || *(unsigned char *)(v7 + 160))
  {
    if (v13 > *(void *)(v7 + 1680)) {
      goto LABEL_93;
    }
    unsigned int v18 = *(int8x8_t **)(v7 + 1720);
    if (!v18)
    {
      APSLogErrorAt();
      uint64_t v43 = 4294960591;
      goto LABEL_96;
    }
    *unsigned int v18 = vrev32_s8(*(int8x8_t *)((char *)v8 + 4));
    BOOL v19 = a3 >= v17 + 12;
    size_t v20 = a3 - (v17 + 12);
    if (!v19) {
      goto LABEL_93;
    }
    if (*(unsigned char *)(v7 + 160))
    {
      int v47 = v10;
      if (v20 <= 0x17)
      {
        APSLogErrorAt();
        uint64_t v43 = 4294960553;
      }
      else
      {
        chacha20_poly1305_init_64x64();
        chacha20_poly1305_add_aad();
        v20 -= 24;
        uint64_t v21 = chacha20_poly1305_decrypt();
        if (chacha20_poly1305_verify() + v21 == v20)
        {
          uint64_t v22 = 0;
          uint64_t v23 = v7 + 456;
          int v10 = v47;
          do
          {
            if (++*(unsigned char *)(v23 + v22)) {
              BOOL v25 = 1;
            }
            else {
              BOOL v25 = v22 == 7;
            }
            ++v22;
          }
          while (!v25);
          goto LABEL_50;
        }
        APSLogErrorAt();
        uint64_t v43 = 4294960534;
      }
    }
    else
    {
      uint64_t v26 = AES_CBCFrame_Update();
      if (!v26)
      {
LABEL_50:
        bzero(*(void **)(v7 + 1720), *(void *)(v7 + 1728));
        unint64_t v13 = v20;
        memcpy((char *)v8 + v17 + 12, *(const void **)(v7 + 1672), v20);
        goto LABEL_51;
      }
      uint64_t v43 = v26;
      APSLogErrorAt();
    }
    bzero(*(void **)(v7 + 1720), *(void *)(v7 + 1728));
    goto LABEL_96;
  }
LABEL_51:
  *a2 = v8;
  a2[1] = (uint64_t *)((char *)v8 + v17 + 12);
  a2[2] = (uint64_t *)v13;
  *((_DWORD *)a2 + 8) = *((_DWORD *)v8 + 1);
  if (v10 == 97)
  {
    unint64_t v48 = v13 + v17;
    if (v15)
    {
      uint64_t v27 = v15 - 1;
      uint64_t v28 = 12;
      uint64_t v46 = v15;
      while (1)
      {
        uint64_t v29 = v17;
        unsigned int v30 = bswap32(*(_DWORD *)((char *)*a2 + v28));
        size_t v31 = v30 & 0x3FF;
        uint64_t v32 = (void *)(v17 + v31);
        if ((unint64_t)v32 > v48) {
          goto LABEL_93;
        }
        uint64_t v33 = APSRTPPassThroughJitterBufferAcquireRelinquishedNode();
        if (v33)
        {
          uint64_t v43 = v33;
          goto LABEL_96;
        }
        MEMORY[0x24] |= 2u;
        unsigned int v34 = (v30 >> 10) & 0x3FFF;
        MEMORY[0x28] = v34 / *(_DWORD *)(v7 + 88);
        if (gLogCategory_APReceiverAudioSessionRealTime <= 30)
        {
          if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize())
          {
            uint64_t v7 = v45;
            LogPrintF();
          }
          else
          {
            uint64_t v7 = v45;
          }
        }
        __dst = v32;
        uint64_t v35 = MEMORY[0x18];
        int v36 = *((_DWORD *)*a2 + 2);
        uint64_t v37 = **a2;
        *MEMORY[0x18] = v37;
        *(unsigned char *)(v35 + 1) = BYTE1(v37) & 0x80 | HIBYTE(v30) & 0x7F;
        unsigned int v38 = *(_DWORD *)(v35 + 4) - v34;
        *(_DWORD *)(v35 + 4) = v38;
        *(_DWORD *)(v35 + 8) = v36;
        memcpy((void *)(v35 + 12), (char *)*a2 + v29 + 12, v31);
        MEMORY[0] = v35;
        MEMORY[8] = v35 + 12;
        MEMORY[0x10] = v31;
        MEMORY[0x20] = v38;
        unint64_t v39 = atomic_load((unint64_t *)(v7 + 1768));
        if ((v39 & 0xFF000000000000) != 0 && MEMORY[0x20] - (int)v39 < 1
          || APSRTPPassThroughJitterBufferInsertNode())
        {
          APSRTPPassThroughJitterBufferRelinquishNode();
        }
        else if (gLogCategory_APReceiverAudioSessionRealTime <= 10 {
               && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        }
        {
          LogPrintF();
        }
        --v27;
        v28 += 4;
        uint64_t v15 = v46;
        uint64_t v17 = (uint64_t)__dst;
        if (v27 == -1)
        {
          uint64_t v8 = *a2;
          break;
        }
      }
    }
    uint64_t v40 = a2[3];
    *((unsigned char *)v40 + 1) = *((unsigned char *)v40 + 1) & 0x80 | *((unsigned char *)v8 + 4 * v15 + 12) & 0x7F;
    a2[1] = (uint64_t *)((char *)v40 + 12);
    a2[2] = (uint64_t *)(v48 - v17);
    memmove((char *)v40 + 12, (char *)v40 + v17 + 12, v48 - v17);
  }
  audioSession_estimateRenderDeadline();
  unint64_t v41 = atomic_load((unint64_t *)(v7 + 1768));
  if ((v41 & 0xFF000000000000) == 0 || *((_DWORD *)a2 + 8) - (int)v41 >= 1)
  {
    uint64_t inserted = APSRTPPassThroughJitterBufferInsertNode();
    if (inserted) {
      return inserted;
    }
    atomic_fetch_add((atomic_uint *volatile)(v7 + 1920), 1u);
    atomic_fetch_add((atomic_uint *volatile)(v7 + 1924), v15);
    if (gLogCategory_APReceiverAudioSessionRealTime > 10
      || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_82;
    }
LABEL_28:
    LogPrintF();
LABEL_82:
    kdebug_trace();
    return 0;
  }
  return 4294960539;
}

uint64_t audioSession_sessionLock(pthread_mutex_t *a1)
{
  if (!a1 || (result = pthread_mutex_lock(a1), uint64_t v1 = vars8, result))
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t audioSession_processEnqueuedRetransmitCommands(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 2128);
  if (result)
  {
    while (1)
    {
      uint64_t result = APSAtomicMessageQueueReadMessage();
      if (!result) {
        break;
      }
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  return result;
}

uint64_t audioSession_trackDups(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 532))
  {
    uint64_t v6 = 0;
    int16x8_t v7 = vdupq_n_s16(a2);
    do
    {
      *(int16x8_t *)(a1 + 536 + v6) = v7;
      v6 += 16;
    }
    while (v6 != 1024);
    *(unsigned char *)(a1 + 532) = 1;
    goto LABEL_14;
  }
  int v3 = *(unsigned __int16 *)(a1 + 534);
  int v4 = (__int16)(a2 - v3);
  if (v4 > 0 || a2 != v3 && v4 >= -511)
  {
    uint64_t v5 = a1 + 2 * (a2 & 0x1FF);
    if (*(unsigned __int16 *)(v5 + 536) != a2)
    {
      *(_WORD *)(v5 + 536) = a2;
LABEL_14:
      uint64_t result = 0;
      *(_WORD *)(a1 + 534) = a2;
      return result;
    }
  }
  if (!*(_DWORD *)(a1 + 528)
    && gLogCategory_APReceiverAudioSessionRealTimeStats <= 40
    && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 1;
}

uint64_t audioSession_trackLosses(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(unsigned __int16 *)(a2 + 2);
  if (!*(_DWORD *)(result + 1864)
    || (int v5 = *(unsigned __int16 *)(result + 1760), v6 = v5 + 1, v4 == (unsigned __int16)(v5 + 1)))
  {
LABEL_36:
    *(_WORD *)(v3 + 1760) = v4;
    *(_DWORD *)(v3 + 1764) = *(_DWORD *)(a2 + 4);
    return result;
  }
  __int16 v7 = v5 + 1;
  unsigned __int16 v8 = v4 - v6;
  if ((__int16)(v4 - v6) >= 1)
  {
    unsigned int v9 = (unsigned __int16)(v4 - v6);
    LODWORD(qword_268402E18) = qword_268402E18 + v8;
    uint64_t v10 = *(void *)(result + 2336);
    if (v10) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v10 + 60), v9, memory_order_relaxed);
    }
    if (*(_DWORD *)(result + 2268) < v9) {
      *(_DWORD *)(result + 2268) = v9;
    }
    if (*(_DWORD *)(result + 2264) >= v9)
    {
      if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 30)
      {
        if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1
          || (uint64_t result = _LogCategory_Initialize(), result))
        {
          uint64_t result = LogPrintF();
        }
      }
      if (!*(unsigned char *)(v3 + 2160))
      {
        int v11 = (void *)(v3 + 2152);
        do
        {
          int v12 = v11;
          int v11 = (void *)*v11;
        }
        while (v11);
        mach_absolute_time();
        uint64_t result = UpTicksToNanoseconds();
        unsigned __int16 v13 = 0;
        while (1)
        {
          uint64_t v14 = *(void *)(v3 + 2144);
          if (!v14) {
            break;
          }
          *(void *)(v3 + 2144) = *(void *)v14;
          *(void *)uint64_t v14 = 0;
          *(_WORD *)(v14 + 8) = v13 + v7;
          *(_WORD *)(v14 + 10) = 0;
          *(void *)(v14 + 16) = result;
          *(void *)(v14 + 32) = result;
          *int v12 = v14;
          ++v13;
          int v12 = (void *)v14;
          if (v13 >= v8) {
            goto LABEL_36;
          }
        }
        if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 60)
        {
          if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1
            || (uint64_t result = _LogCategory_Initialize(), result))
          {
            uint64_t result = LogPrintF();
          }
        }
      }
    }
    else
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 30
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      ++*(_DWORD *)(v3 + 2272);
      uint64_t result = audioSession_retransmitsAbortAll(v3);
    }
    goto LABEL_36;
  }
  if (v4 != v5 && !*(_DWORD *)(result + 528) && gLogCategory_APReceiverAudioSessionRealTime <= 30)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioSession_retransmitsUpdate(uint64_t a1, int a2, int a3)
{
  mach_absolute_time();
  uint64_t result = UpTicksToNanoseconds();
  unint64_t v7 = result;
  unsigned __int16 v8 = (uint64_t *)(a1 + 2152);
  while (1)
  {
    unsigned int v9 = v8;
    unsigned __int16 v8 = (uint64_t *)*v8;
    if (!v8) {
      break;
    }
    if (*((unsigned __int16 *)v8 + 4) == a2)
    {
      if (!a3) {
        goto LABEL_36;
      }
      unint64_t v10 = result - v8[2];
      unint64_t v11 = *(void *)(a1 + 2224);
      if (v10 < v11)
      {
        *(void *)(a1 + 2224) = v10;
        unint64_t v11 = v10;
      }
      unint64_t v12 = *(void *)(a1 + 2232);
      if (v10 <= v12)
      {
        if (v10 > v11 && v10 < v12) {
          *(void *)(a1 + 2240) = (v10 - *(void *)(a1 + 2240) + (*(void *)(a1 + 2240) << 6)) >> 6;
        }
      }
      else
      {
        *(void *)(a1 + 2232) = v10;
      }
      if (*((unsigned __int16 *)v8 + 5) > 1u) {
        goto LABEL_36;
      }
      uint64_t v14 = result - v8[3];
      if (v14 >= *(void *)(a1 + 2168))
      {
        if (v14 <= *(void *)(a1 + 2176))
        {
          uint64_t v15 = *(void *)(a1 + 2184);
          BOOL v16 = __OFSUB__(v14, v15);
          uint64_t v17 = v14 - v15;
          if (v17 >= 0) {
            uint64_t v18 = v17;
          }
          else {
            uint64_t v18 = -v17;
          }
          if (v17 < 0 != v16) {
            v17 += 7;
          }
          uint64_t v19 = v15 + (v17 >> 3);
          *(void *)(a1 + 2184) = v19;
          uint64_t v20 = *(void *)(a1 + 2192);
          BOOL v21 = v18 < v20;
          uint64_t v22 = v18 - v20;
          if (v21) {
            v22 += 3;
          }
          uint64_t v23 = v20 + (v22 >> 2);
          *(void *)(a1 + 2192) = v23;
          uint64_t v24 = 4 * v23 + 2 * v19;
          if (v24 >= 100000000) {
            uint64_t v24 = 100000000;
          }
          *(void *)(a1 + 2200) = v24;
          goto LABEL_36;
        }
      }
      else
      {
        *(void *)(a1 + 2168) = v14;
        if (v14 <= *(void *)(a1 + 2176)) {
          goto LABEL_36;
        }
      }
      *(void *)(a1 + 2176) = v14;
LABEL_36:
      *unsigned int v9 = *v8;
      *unsigned __int16 v8 = *(void *)(a1 + 2144);
      *(void *)(a1 + 2144) = v8;
      goto LABEL_37;
    }
  }
  if (a3)
  {
    if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 40)
    {
      if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1
        || (uint64_t result = _LogCategory_Initialize(), result))
      {
        uint64_t result = LogPrintF();
      }
    }
    ++*(_DWORD *)(a1 + 2220);
  }
LABEL_37:
  BOOL v25 = *(uint64_t **)(a1 + 2152);
  if (v25)
  {
    int v26 = 3;
    do
    {
      if (v7 >= v25[4])
      {
        uint64_t v27 = v25[2];
        int v28 = *((unsigned __int16 *)v25 + 5);
        *((_WORD *)v25 + 5) = v28 + 1;
        if (v28)
        {
          unint64_t v29 = v7 - v27;
          if (v29 < *(void *)(a1 + 2248)) {
            *(void *)(a1 + 2248) = v29;
          }
          if (v29 > *(void *)(a1 + 2256)) {
            *(void *)(a1 + 2256) = v29;
          }
        }
        v25[3] = v7;
        v25[4] = *(void *)(a1 + 2200) + v7;
        unsigned int v30 = *((unsigned __int16 *)v25 + 4);
        uint64_t v35 = 0;
        int v32 = 16831872;
        __int16 v33 = bswap32(v30) >> 16;
        __int16 v34 = 256;
        int v31 = *(_DWORD *)(a1 + 1560);
        uint64_t result = *(unsigned char *)(a1 + 1604)
               ? send(v31, &v32, 8uLL, 0)
               : sendto(v31, &v32, 8uLL, 0, (const sockaddr *)(a1 + 1572), *(_DWORD *)(a1 + 1600));
        if (result == 8 || *__error() && (uint64_t result = *__error(), !result)) {
          ++*(_DWORD *)(a1 + 2208);
        }
        else {
          uint64_t result = APSLogErrorAt();
        }
        if (!--v26) {
          break;
        }
      }
      BOOL v25 = (uint64_t *)*v25;
    }
    while (v25);
  }
  return result;
}

uint64_t audioSession_sessionUnlock(pthread_mutex_t *a1)
{
  if (!a1 || (result = pthread_mutex_unlock(a1), uint64_t v1 = vars8, result))
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t audioSession_estimateRenderDeadline()
{
  uint64_t result = mach_absolute_time();
  _X22 = 0;
  _X23 = 0;
  __asm { CASPAL          X22, X23, X22, X23, [X9] }
  return result;
}

void audioSession_receiverLogger(const void **a1)
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    CFRelease(v2);
  }
}

void audioSession_endToEndLogger(const void **a1)
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    CFRelease(v2);
  }
}

uint64_t audioSession_retransmitsAbortAll(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 2152);
  if (v2)
  {
    if (gLogCategory_APReceiverAudioSessionRealTimeStats > 40) {
      goto LABEL_7;
    }
    if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    uint64_t v2 = *(void **)(a1 + 2152);
    if (v2)
    {
LABEL_7:
      uint64_t v3 = *(void **)(a1 + 2144);
      do
      {
        int v4 = v2;
        uint64_t v2 = (void *)*v2;
        *int v4 = v3;
        uint64_t v3 = v4;
      }
      while (v2);
      *(void *)(a1 + 2152) = 0;
      *(void *)(a1 + 2144) = v4;
    }
  }

  return audioSession_processEnqueuedRetransmitCommands(a1);
}

uint64_t audioSession_enqueueNodeCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = atomic_load((unint64_t *)(*(void *)a3 + 1768));
  audioSession_estimateRenderDeadline();
  if ((v4 & 0xFF000000000000) != 0 && *(_DWORD *)(a2 + 32) - (int)v4 < 1) {
    return 4294960539;
  }

  return APSRTPPassThroughJitterBufferInsertNode();
}

uint64_t audioSession_shouldProcessPacketCallback(uint64_t a1, int a2, uint64_t a3, uint64_t *a4, unsigned char *a5)
{
  uint64_t v7 = *a4;
  uint64_t v8 = *(void *)(a1 + 24);
  audioSession_sessionLock(*(pthread_mutex_t **)(*a4 + 2280));
  audioSession_processEnqueuedRetransmitCommands(v7);
  if (audioSession_trackDups(v7, *(unsigned __int16 *)(v8 + 2)))
  {
    *a5 = 0;
  }
  else
  {
    if (!a2) {
      audioSession_trackLosses(v7, v8);
    }
    if (*(unsigned char *)(v7 + 2160))
    {
      if (a2) {
        goto LABEL_7;
      }
    }
    else
    {
      audioSession_retransmitsUpdate(v7, *(unsigned __int16 *)(v8 + 2), a2);
      if (a2) {
        goto LABEL_7;
      }
    }
    int v10 = *(_DWORD *)(v7 + 1864);
    if ((v10 + 1) > 1) {
      int v11 = v10 + 1;
    }
    else {
      int v11 = 1;
    }
    *(_DWORD *)(v7 + 1864) = v11;
  }
LABEL_7:
  audioSession_sessionUnlock(*(pthread_mutex_t **)(v7 + 2280));
  return 0;
}

NSObject *audioSession_dispatchDataRetainF(NSObject *a1)
{
  return a1;
}

uint64_t audioSession_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, int a3, uint64_t a4, const __CFDictionary *cf, uint64_t a6)
{
  int v27 = 0;
  int v11 = *(unsigned __int8 **)(a6 + 40);
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3 > 1752458867)
  {
    switch(a3)
    {
      case 1752458868:
        uint64_t Int64 = CFDictionaryGetInt64();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        audioSession_updateCallDurationMetric((uint64_t)v11, Int64 != 0);
        return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
      case 1936549491:
        CFBooleanGetTypeID();
        TypedCFArrayRef Value = (const __CFBoolean *)CFDictionaryGetTypedValue();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          CFBooleanGetValue(TypedValue);
          LogPrintF();
        }
        int v27 = APReceiverAudioSessionPlatformSetProperty(*(void **)v11, v21, @"RASP::MuteStream", v22, (uint64_t)TypedValue);
        if (v27) {
          goto LABEL_44;
        }
        return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
      case 1953653603:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        audioSession_triggerCoreCapture((uint64_t)v11, cf);
        return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
    }
LABEL_31:
    int v24 = -6714;
LABEL_32:
    int v27 = v24;
    return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
  }
  if (a3 == 1634562925)
  {
    CFStringGetTypeID();
    uint64_t v16 = CFDictionaryGetTypedValue();
    int v27 = APReceiverAudioSessionPlatformSetProperty(*(void **)v11, v17, @"RASP::AudioMode", v18, v16);
    if (v27) {
      goto LABEL_44;
    }
    return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
  }
  if (a3 == 1701733219)
  {
    if (cf)
    {
      uint64_t v19 = CFDictionaryGetInt64();
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      atomic_store(v19 != 0, v11 + 9264);
    }
    return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
  }
  if (a3 != 1718383464) {
    goto LABEL_31;
  }
  if (!cf || (CFTypeID v12 = CFGetTypeID(cf), v12 != CFDictionaryGetTypeID()))
  {
    APSLogErrorAt();
    int v24 = -6756;
    goto LABEL_32;
  }
  CFDictionaryGetInt64Ranged();
  uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
  APSAudioTransportTimeMakeWithRTPTime();
  int v27 = APReceiverAudioSessionRealTimeFlushAudio((uint64_t)v11, 0, v14, v15, v26, Int64Ranged, 0);
  if (v27) {
LABEL_44:
  }
    APSLogErrorAt();
  return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
}

uint64_t APReceiverAudioSessionRealTimeFlushAudio(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5, uint64_t a6, _OWORD *a7)
{
  if (*a5 != 1)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
  APReceiverAudioSessionPlatformControl(*(void **)a1, @"RASP::FlushAudio");
  *(void *)(a1 + 1752) = mach_absolute_time();
  atomic_load((unint64_t *)(a1 + 1768));
  atomic_store(0, (unint64_t *)(a1 + 1768));
  while (!APSAtomicMessageQueueSendMessage())
    usleep(1u);
  if (*(_DWORD *)(a1 + 528)) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = FigGetCFPreferenceNumberWithDefault() != 0;
  }
  *(unsigned char *)(a1 + 2160) = v9;
  *(_DWORD *)(a1 + 1864) = 0;
  uint64_t v10 = APSRTPPassThroughJitterBufferFlush();
  if (v10)
  {
    uint64_t v12 = v10;
    APSLogErrorAt();
    goto LABEL_18;
  }
  audioSession_retransmitsAbortAll(a1);
  int v11 = *(OpaqueAudioConverter **)(a1 + 1792);
  if (v11)
  {
    uint64_t v12 = AudioConverterReset(v11);
    if (!a7) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v12 = 0;
  if (a7)
  {
LABEL_17:
    APSAudioTransportTimeMakeWithRTPTime();
    *a7 = *(_OWORD *)v14;
    *(_OWORD *)((char *)a7 + 12) = *(_OWORD *)&v14[12];
  }
LABEL_18:
  audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
  return v12;
}

void audioSession_triggerCoreCapture(uint64_t a1, const __CFDictionary *a2)
{
  unint64_t v4 = (unsigned char *)(a1 + 8936);
  int v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
  if (!APSSettingsGetIntWithDefault())
  {
    *unint64_t v4 = 0;
    if (gLogCategory_APReceiverAudioSessionRealTime > 50
      || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_17;
    }
LABEL_6:
    LogPrintF();
    goto LABEL_17;
  }
  if (v4[228])
  {
    CFDictionaryGetInt64Ranged();
    CFDictionaryGetInt64Ranged();
  }
  *unint64_t v4 = 1;
  if (v5)
  {
    ++*(void *)(a1 + 8888);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverSessionControl((uint64_t)v5, v6, @"reportIssue", 0, a2, 0);
  }
  if (!v4[228]) {
    goto LABEL_16;
  }
  if (CFAppendPrintF())
  {
    APSLogErrorAt();
    if (gLogCategory_APReceiverAudioSessionRealTime > 90
      || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_17;
    }
    goto LABEL_6;
  }
  APSW5LogCollect();
LABEL_16:
  atomic_store(0, v4 + 328);
LABEL_17:
  if (v5) {
    CFRelease(v5);
  }
}

void APReceiverAudioSessionRealTimeFinalize(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8984))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(0);
  }
  if (*(void *)(a1 + 64))
  {
    SendSelfConnectedLoopbackMessage();
    pthread_join(*(pthread_t *)(a1 + 56), 0);
    *(void *)(a1 + 64) = 0;
  }
  int v2 = *(_DWORD *)(a1 + 48);
  if ((v2 & 0x80000000) == 0)
  {
    if (close(v2) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 48) = -1;
  }
  if (*(void *)(a1 + 104))
  {
    nw_activity_complete_with_reason();
    nw_release(*(void **)(a1 + 104));
    *(void *)(a1 + 104) = 0;
  }
  if (*(unsigned char *)(a1 + 97))
  {
    uint64_t v3 = *(const void **)(a1 + 112);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(a1 + 112) = 0;
    }
    if (*(void *)(a1 + 120))
    {
      uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
      if (CMBaseObject)
      {
        uint64_t v5 = CMBaseObject;
        uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v7 = v6 ? v6 : 0;
        BOOL v9 = *(void (**)(uint64_t))(v7 + 24);
        if (v9) {
          v9(v5);
        }
      }
      uint64_t v10 = *(const void **)(a1 + 120);
      if (v10)
      {
        CFRelease(v10);
        *(void *)(a1 + 120) = 0;
      }
    }
  }
  else
  {
    int v8 = *(_DWORD *)(a1 + 52);
    if ((v8 & 0x80000000) == 0)
    {
      if (close(v8) && *__error()) {
        __error();
      }
      *(_DWORD *)(a1 + 52) = -1;
    }
    APTTrafficMetricsConnectionClosed();
  }
  if (*(void *)(a1 + 2280))
  {
    FigSimpleMutexDestroy();
    *(void *)(a1 + 2280) = 0;
  }
  int v11 = *(const void **)(a1 + 8);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(a1 + 8) = 0;
  }
  uint64_t v12 = *(const void **)(a1 + 128);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(a1 + 128) = 0;
  }
  unsigned __int16 v13 = *(const void **)(a1 + 1992);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(a1 + 1992) = 0;
  }
  uint64_t v14 = *(const void **)(a1 + 40);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(a1 + 40) = 0;
  }
  uint64_t v15 = *(const void **)(a1 + 2296);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(a1 + 2296) = 0;
  }
  uint64_t v16 = *(const void **)(a1 + 2336);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(a1 + 2336) = 0;
  }
  uint64_t v17 = *(const void **)(a1 + 2344);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(a1 + 2344) = 0;
  }
  uint64_t v18 = *(const void **)(a1 + 16);
  if (v18)
  {
    CFRelease(v18);
    *(void *)(a1 + 16) = 0;
  }
  audioSession_logHistograms(a1);
  uint64_t v19 = *(const void **)(a1 + 2360);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(a1 + 2360) = 0;
  }
  uint64_t v20 = *(const void **)(a1 + 2352);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(a1 + 2352) = 0;
  }
  *(_DWORD *)(a1 + 512) = 0;
  int v21 = *(_DWORD *)(a1 + 1560);
  if ((v21 & 0x80000000) == 0)
  {
    if (close(v21) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 1560) = -1;
  }
  uint64_t v22 = *(const void **)(a1 + 520);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 520) = 0;
  }
  uint64_t v23 = *(const void **)(a1 + 2128);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(a1 + 2128) = 0;
  }
  int v24 = *(const void **)(a1 + 9048);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(a1 + 9048) = 0;
  }
  BOOL v25 = *(void **)(a1 + 2136);
  if (v25)
  {
    free(v25);
    *(void *)(a1 + 2136) = 0;
  }
  int v26 = *(const void **)(a1 + 1640);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(a1 + 1640) = 0;
  }
  int v27 = *(void **)(a1 + 1656);
  if (v27)
  {
    free(v27);
    *(void *)(a1 + 1656) = 0;
  }
  int v28 = *(void **)(a1 + 1672);
  if (v28)
  {
    free(v28);
    *(void *)(a1 + 1672) = 0;
  }
  unint64_t v29 = *(void **)(a1 + 1688);
  if (v29)
  {
    free(v29);
    *(void *)(a1 + 1688) = 0;
  }
  unsigned int v30 = *(void **)(a1 + 1704);
  if (v30)
  {
    free(v30);
    *(void *)(a1 + 1704) = 0;
  }
  int v31 = *(OpaqueAudioConverter **)(a1 + 1792);
  if (v31)
  {
    AudioConverterDispose(v31);
    *(void *)(a1 + 1792) = 0;
  }
  *(_DWORD *)(a1 + 1864) = 0;
  int v32 = *(const void **)(a1 + 2288);
  if (v32)
  {
    CFRelease(v32);
    *(void *)(a1 + 2288) = 0;
  }
  if (*(_DWORD *)(a1 + 24))
  {
    *(_DWORD *)(a1 + 24) = 0;
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  AES_CBCFrame_Final();
  __int16 v33 = *(const void **)(a1 + 472);
  if (v33)
  {
    CFRelease(v33);
    *(void *)(a1 + 472) = 0;
  }
  __int16 v34 = *(const void **)(a1 + 9200);
  if (v34) {
    CFRelease(v34);
  }
  uint64_t v35 = *(const void **)(a1 + 9208);
  if (v35) {
    CFRelease(v35);
  }
  int v36 = *(NSObject **)(a1 + 8944);
  if (v36)
  {
    dispatch_release(v36);
    *(void *)(a1 + 8944) = 0;
  }
  uint64_t v37 = *(NSObject **)(a1 + 9064);
  if (v37)
  {
    dispatch_release(v37);
    *(void *)(a1 + 9064) = 0;
  }
  unsigned int v38 = *(void **)(a1 + 1720);
  if (v38) {
    free(v38);
  }
  unint64_t v39 = *(void **)(a1 + 8992);
  if (v39) {
    free(v39);
  }
  uint64_t v40 = *(void **)(a1 + 9016);
  if (v40) {
    free(v40);
  }
  unint64_t v41 = *(const void **)(a1 + 136);
  if (v41)
  {
    CFRelease(v41);
    *(void *)(a1 + 136) = 0;
  }
  unsigned int v42 = *(const void **)(a1 + 144);
  if (v42)
  {
    CFRelease(v42);
    *(void *)(a1 + 144) = 0;
  }
  uint64_t v43 = *(const void **)(a1 + 9288);
  if (v43)
  {
    CFRelease(v43);
    *(void *)(a1 + 9288) = 0;
  }
  uint64_t v44 = *(const void **)(a1 + 8864);
  if (v44) {
    CFRelease(v44);
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v45 = *(const void **)(a1 + 32);
  if (v45) {
    CFRelease(v45);
  }

  free((void *)a1);
}

uint64_t audioSession_logHistograms(uint64_t a1)
{
  audioSession_flushHistogramMessageQueue(a1);
  uint64_t result = *(void *)(a1 + 2352);
  if (result)
  {
    return CFDictionaryApplyBlock();
  }
  return result;
}

uint64_t audioSession_flushHistogramMessageQueue(uint64_t a1)
{
  if (a1)
  {
    uint64_t result = *(void *)(a1 + 2360);
    if (result)
    {
      while (1)
      {
        uint64_t result = APSAtomicMessageQueueReadMessage();
        if (!result) {
          break;
        }
        if (gLogCategory_APReceiverAudioSessionRealTime <= 90
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
  }
  else
  {
    return APSLogErrorAt();
  }
  return result;
}

void __audioSession_logHistograms_block_invoke()
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

CFDictionaryRef audioSession_addHistogramValue(const __CFDictionary *result, const void *a2, double a3)
{
  if (result)
  {
    uint64_t result = (const __CFDictionary *)CFDictionaryGetValue(result, a2);
    if (result)
    {
      v4.n128_f64[0] = a3;
      return (const __CFDictionary *)MEMORY[0x270F0C010](v4);
    }
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeInvalidate(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 120);
  if (result)
  {
    uint64_t result = APTransportConnectionGetCMBaseObject();
    if (result)
    {
      uint64_t v2 = result;
      uint64_t VTable = CMBaseObjectGetVTable();
      uint64_t v5 = *(void *)(VTable + 8);
      uint64_t result = VTable + 8;
      uint64_t v4 = v5;
      uint64_t v6 = v5 ? v4 : 0;
      uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 24);
      if (v7) {
        uint64_t result = v7(v2);
      }
    }
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeReadAudio(uint64_t a1, int a2, uint64_t a3, char *a4, unint64_t a5)
{
  _X24 = a3;
  kdebug_trace();
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (*(_DWORD *)(a1 + 2000))
  {
    uint64_t v8 = *(void *)(a1 + 1776);
    do
    {
      _X3 = *(void *)(a1 + 1784);
      __asm { CASPAL          X2, X3, X24, X25, [X8] }
      _ZF = _X2 == v8;
      uint64_t v8 = _X2;
    }
    while (!_ZF);
  }
  uint64_t v129 = 0;
  uint64_t v13 = *(void *)(a1 + 120);
  if (v13)
  {
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v15 = v14 ? v14 : 0;
    uint64_t v16 = *(void (**)(uint64_t))(v15 + 96);
    if (v16) {
      v16(v13);
    }
  }
  if (*(void *)(a1 + 128)
    && (APSRTPPassThroughJitterBufferAcquireRelinquishedNode()
     || APSRealTimeReadableRingBufferRead()))
  {
    APSLogErrorAt();
  }
  int v124 = a2;
  uint64_t v17 = (unsigned char *)(a1 + 8825);
  uint64_t v115 = (int32x2_t *)(a1 + 2004);
  uint64_t v129 = 0;
  uint64_t v130 = 0;
  unint64_t v120 = (unsigned char *)(a1 + 1836);
  uint64_t v131 = 0;
  while (APSAtomicMessageQueueReadMessage())
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v18 = mach_absolute_time();
  unint64_t v127 = *(unsigned int *)(a1 + 84);
  uint64_t v132 = 0;
  uint64_t v129 = 0;
  uint64_t v130 = 0;
  do
  {
    unint64_t v19 = *(unsigned int *)(a1 + 8784);
    int v20 = *(_DWORD *)(a1 + 8784);
    atomic_compare_exchange_strong((atomic_uint *volatile)(a1 + 8784), (unsigned int *)&v20, v19 | 1);
  }
  while (v20 != v19);
  uint64_t v21 = a1 + 3208 * ((v19 >> 1) & 1);
  signed int v22 = *(_DWORD *)(v21 + 5568) % 0xC8u;
  unint64_t v23 = a5;
  int v128 = a2 - *(_DWORD *)(a1 + 464);
  int v24 = v128 + a5 / v127;
  int v126 = v24;
  if (!*(_DWORD *)(a1 + 2000))
  {
    if ((int)(a5 / v127 - 1) < 0) {
      goto LABEL_208;
    }
    uint64_t v116 = v21 + 2368;
    uint64_t v117 = v18;
    int v98 = 0;
    int v25 = 0;
    int v99 = v124 - *(_DWORD *)(a1 + 464);
LABEL_191:
    int v100 = v126 - v99;
    if (*v17)
    {
      int v101 = *(_DWORD *)(a1 + 2004) + *(_DWORD *)(a1 + 1736);
      int v102 = v99;
      if (v17[159] == 1)
      {
        if (!v17[340])
        {
          v17[340] = 1;
          audioSession_triggerAsyncGlitchLog(a1);
          int v101 = *(_DWORD *)(a1 + 2004) + *(_DWORD *)(a1 + 1736);
        }
        uint64_t v103 = v116 + 16 * v22;
        *(void *)uint64_t v103 = v117;
        *(_DWORD *)(v103 + 8) = v102 - v101;
        *(_DWORD *)(v103 + 12) = v100;
        ++v22;
        kdebug_trace();
      }
    }
    audioSession_plc(a1, (uint64_t)a4, (v100 * v127), a4);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 10
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!v25)
    {
      unint64_t v23 = a5;
      goto LABEL_208;
    }
    int v121 = v98 + 1;
    audioSession_enqueueRetransmitCommand(a1);
    unint64_t v23 = a5;
    goto LABEL_203;
  }
  uint64_t v116 = v21 + 2368;
  uint64_t v117 = v18;
  signed int v119 = *(_DWORD *)(v21 + 5568) % 0xC8u;
  uint64_t v118 = a1 + 3208 * ((v19 >> 1) & 1);
  int v25 = 0;
  int v121 = 0;
  int v125 = v24 + 441000;
  uint64_t v114 = &a4[a5];
  uint64_t v26 = *(void *)(a1 + 1648);
  uint64_t v132 = v26;
LABEL_26:
  int v27 = (unsigned char *)(a1 + 2012);
  do
  {
LABEL_27:
    if (!v26)
    {
      APSRTPPassThroughJitterBufferAcquireLowestInsertedNode();
      uint64_t v26 = v132;
      if (!v132)
      {
        uint64_t v32 = 0;
        break;
      }
    }
    v17[179] = 0;
    uint64_t v28 = *(unsigned int *)(v26 + 32);
    int v29 = *v27;
    if (*v27)
    {
      if ((int)v28 - *(_DWORD *)(a1 + 2016) < 0)
      {
        int v29 = 1;
      }
      else
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 30
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        int v29 = 0;
        *(_DWORD *)(a1 + 2004) = *(_DWORD *)(a1 + 2008);
        *(unsigned char *)(a1 + 2012) = 0;
        *(unsigned char *)(a1 + 1836) = 1;
      }
    }
    int v30 = *(_DWORD *)(a1 + 2004) + v28 + *(_DWORD *)(a1 + 1736);
    if (v29 && v30 - v125 >= 1)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 30
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v31 = *(_DWORD *)(a1 + 2008);
      *(_DWORD *)(a1 + 2004) = v31;
      *(unsigned char *)(a1 + 2012) = 0;
      *(unsigned char *)(a1 + 1836) = 1;
      int v30 = v31 + v28 + *(_DWORD *)(a1 + 1736);
    }
    uint64_t v32 = v132;
    if (v30 - v24 >= 0) {
      break;
    }
    uint64_t v33 = *(unsigned __int16 *)(*(void *)v132 + 2);
    unint64_t v34 = atomic_load((unint64_t *)(a1 + 1768));
    if ((v34 & 0xFF000000000000) != 0)
    {
      int v35 = v33 - WORD2(v34);
      if (v35 << 16 > 0x10000)
      {
        unsigned __int16 v36 = v35 - 1;
        HIDWORD(qword_268402E18) += v36;
        uint64_t v37 = *(void *)(a1 + 2336);
        if (v37) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v37 + 64), v36, memory_order_relaxed);
        }
        if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 30
          && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    atomic_store(v34 & 0xFF00000000000000 | (v33 << 32) | v28 | 0x1000000000000, (unint64_t *)(a1 + 1768));
    uint64_t v38 = v132;
    int v39 = *(_DWORD *)(a1 + 72);
    if (v39 != 1 && *(void *)(v132 + 8) == *(void *)v132 + 12) {
      LODWORD(v40) = *(_DWORD *)(a1 + 88);
    }
    else {
      unint64_t v40 = *(void *)(v132 + 16) / v127;
    }
    int v41 = v30 - v128;
    if ((int)v40 + v30 - v128 <= 0)
    {
      int v25 = 1;
      audioSession_discardLatePacket(a1);
      uint64_t v26 = 0;
      uint64_t v132 = 0;
      int v24 = v126;
      goto LABEL_27;
    }
    unsigned int v42 = *(void **)(v132 + 8);
    if (v42 != (void *)(*(void *)v132 + 12)) {
      goto LABEL_58;
    }
    unint64_t v46 = *(void *)(v132 + 16);
    unint64_t v47 = *(void *)(a1 + 1632) - 12;
    if (v39 == 1)
    {
      if (v46 > v47) {
        goto LABEL_183;
      }
      Swap16Mem();
      v133[0] = v46;
      size_t v48 = v46;
    }
    else
    {
      v133[0] = 0;
      if (audioSession_audioDecoderDecodeFrame((void *)a1, (uint64_t)v42, v46, *(void **)(a1 + 1656), *(void *)(a1 + 1664), v133)|| (*(void *)(a1 + 9032) = *(void *)(a1 + 9024), size_t v48 = v133[0], v133[0] > v47))
      {
LABEL_183:
        APSLogErrorAt();
        uint64_t v17 = (unsigned char *)(a1 + 8825);
LABEL_178:
        int v24 = v126;
        if (gLogCategory_APReceiverAudioSessionRealTime <= 90
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APSRTPPassThroughJitterBufferRelinquishNode();
        uint64_t v26 = 0;
        uint64_t v132 = 0;
        int v25 = 1;
        goto LABEL_26;
      }
      memcpy(v42, *(const void **)(a1 + 1656), v133[0]);
    }
    uint64_t v17 = (unsigned char *)(a1 + 8825);
    if (!*(unsigned char *)(a1 + 9113)) {
      goto LABEL_86;
    }
    if (v48 < 8 || *(unsigned char *)(a1 + 9112)) {
      goto LABEL_85;
    }
    size_t v49 = v48 >> 3;
    while (!*v42)
    {
LABEL_84:
      ++v42;
      if (!--v49) {
        goto LABEL_85;
      }
    }
    *(unsigned char *)(a1 + 9112) = 1;
    if (*(void *)(a1 + 9048))
    {
      if (!APSAtomicMessageQueueSendMessage()
        && gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      mach_absolute_time();
      if (!APSAtomicMessageQueueSendMessage()
        && gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_84;
    }
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_85:
    size_t v48 = v133[0];
LABEL_86:
    if (v48) {
      unint64_t v50 = 10000 * v46 / v48;
    }
    else {
      LODWORD(v50) = 0;
    }
    *(_DWORD *)(a1 + 1832) = (v50 - *(_DWORD *)(a1 + 1832) + (*(_DWORD *)(a1 + 1832) << 6)) >> 6;
    *(void *)(v38 + 16) = v48;
    uint64_t v51 = v132;
    if (!*(void *)(v132 + 16)) {
      goto LABEL_178;
    }
    ++*(void *)(a1 + 8848);
    int v27 = (unsigned char *)(a1 + 2012);
    if ((*(unsigned char *)(v51 + 36) & 2) == 0)
    {
      int v52 = *(unsigned __int16 *)(*(void *)v51 + 2);
      int v53 = *(_DWORD *)(v51 + 32);
      int v54 = *(unsigned __int16 *)(a1 + 8832);
      int v55 = *(_DWORD *)(a1 + 8836);
      unsigned int v56 = v52 - v54;
      if (v52 - v54 < 0) {
        unsigned int v56 = v54 - v52;
      }
      unsigned int v57 = v53 - v55;
      if (v53 - v55 < 0) {
        unsigned int v57 = v55 - v53;
      }
      *(unsigned char *)(a1 + 8825) = 1;
      *(_WORD *)(a1 + 8826) = v54;
      *(_DWORD *)(a1 + 8828) = v55;
      *(_WORD *)(a1 + 8832) = v52;
      *(_DWORD *)(a1 + 8836) = v53;
      _ZF = v52 == v54 || v53 == v55;
      if (!_ZF && v57 >= v56)
      {
        int v60 = v57 / v56;
        *(_DWORD *)(a1 + 8840) = v60;
        if (v60 != *(_DWORD *)(a1 + 88)
          && gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(_DWORD *)(a1 + 8840) = *(_DWORD *)(a1 + 88);
      }
    }
LABEL_58:
    uint64_t v43 = v132;
    int v44 = v128;
    int v45 = v30 + *(void *)(v132 + 16) / v127;
    int v24 = v126;
    if (v45 - v128 <= 0)
    {
      audioSession_discardLatePacket(a1);
      uint64_t v26 = 0;
      uint64_t v132 = 0;
      int v25 = 1;
      goto LABEL_27;
    }
    int v61 = v128 - v30;
    if (v128 - v30 < 0)
    {
      if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 20
        && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (*(void *)(a1 + 8848) >= 2uLL)
      {
        kdebug_trace();
        if (!v17[340])
        {
          v17[340] = 1;
          audioSession_triggerAsyncGlitchLog(a1);
        }
        uint64_t v63 = v116 + 16 * v119;
        *(void *)uint64_t v63 = v117;
        *(_DWORD *)(v63 + 8) = v128 - (*(_DWORD *)(a1 + 2004) + *(_DWORD *)(a1 + 1736));
        *(_DWORD *)(v63 + 12) = v41;
        ++v119;
      }
      audioSession_enqueueRetransmitCommand(a1);
      audioSession_plc(a1, *(void *)(v132 + 8), (v41 * v127), a4);
      unint64_t v64 = &a4[(v41 * v127)];
      ++v121;
      uint64_t v43 = v132;
      int v44 = v30;
      int v24 = v126;
    }
    else
    {
      if (v41 < 0)
      {
        ++dword_268402E20;
        uint64_t v62 = *(void *)(a1 + 2336);
        if (v62) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v62 + 68), 1u, memory_order_relaxed);
        }
        if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 20
          && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        audioSession_enqueueRetransmitCommand(a1);
        int v44 = v128;
        uint64_t v65 = (v61 * v127);
        uint64_t v43 = v132;
        uint64_t v66 = *(void *)(v132 + 16);
        *(void *)(v132 + 8) += v65;
        *(void *)(v43 + 16) = v66 - v65;
        *(_DWORD *)(v43 + 32) += v61;
        ++v121;
        int v30 = v128;
      }
      unint64_t v64 = a4;
    }
    int v113 = v61;
    if (*(unsigned char *)(a1 + 2041) && (uint64_t v67 = *(char **)(v43 + 8), v67 == (char *)(*(void *)v43 + 12)))
    {
      int v69 = *(_DWORD *)(a1 + 2112);
      if (v69 < 1)
      {
        if (v69 < 0)
        {
          int v76 = v44;
          unsigned int v77 = v64;
          OSStatus v78 = *(int **)(a1 + 1704);
          memcpy(v78, v67, *(void *)(v43 + 16));
          unint64_t v79 = *(unsigned int *)(a1 + 84);
          uint64_t v81 = *(void *)(v43 + 8);
          unint64_t v80 = *(void *)(v43 + 16);
          if ((uint64_t)(v80 / v79) < 1)
          {
            unsigned int v83 = *(_DWORD **)(v43 + 8);
          }
          else
          {
            unsigned int v82 = &v78[v80 / v79];
            unsigned int v83 = *(_DWORD **)(v43 + 8);
            do
            {
              int v84 = *v78;
              unsigned int v85 = *(_DWORD *)(a1 + 2116) + 1;
              *(_DWORD *)(a1 + 2116) = v85;
              if (v85 >= *(_DWORD *)(a1 + 2120))
              {
                *(_DWORD *)(a1 + 2116) = 0;
                *v83++ = v84;
              }
              *v83++ = v84;
              ++v78;
            }
            while (v78 < v82);
            unint64_t v79 = *(unsigned int *)(a1 + 84);
          }
          int v96 = (char *)v83 - v81;
          unint64_t v97 = (unint64_t)&v96[-v80] / v79;
          *(void *)(v43 + 16) = v96;
          *(_DWORD *)(v43 + 32) -= v97;
          *uint64_t v115 = vadd_s32(*v115, vdup_n_s32(v97));
          uint64_t v43 = v132;
          unint64_t v64 = v77;
          int v24 = v126;
          int v44 = v76;
        }
      }
      else
      {
        unint64_t v70 = *(void *)(v43 + 16);
        unint64_t v71 = *(unsigned int *)(a1 + 84);
        if ((uint64_t)(v70 / v71) < 1)
        {
          int v73 = *(char **)(v43 + 8);
        }
        else
        {
          OSStatus v72 = &v67[4 * (v70 / v71)];
          int v73 = *(char **)(v43 + 8);
          int v74 = v73;
          do
          {
            unsigned int v75 = *(_DWORD *)(a1 + 2116) + 1;
            *(_DWORD *)(a1 + 2116) = v75;
            if (v75 >= *(_DWORD *)(a1 + 2120))
            {
              *(_DWORD *)(a1 + 2116) = 0;
            }
            else
            {
              *(_DWORD *)int v73 = *(_DWORD *)v74;
              v73 += 4;
            }
            v74 += 4;
          }
          while (v74 < v72);
          unint64_t v71 = *(unsigned int *)(a1 + 84);
        }
        int64_t v86 = v73 - v67;
        unint64_t v87 = (v70 - v86) / v71;
        *(void *)(v43 + 16) = v86;
        *(_DWORD *)(v43 + 32) += v87;
        *uint64_t v115 = vsub_s32(*v115, vdup_n_s32(v87));
      }
      int v68 = v44;
      int v45 = v30 + *(void *)(v43 + 16) / v127;
    }
    else
    {
      int v68 = v44;
    }
    int v88 = v45 - v24;
    if (v45 - v24 <= 0) {
      int v89 = v45;
    }
    else {
      int v89 = v24;
    }
    int v90 = v89 - v30;
    size_t v91 = ((v89 - v30) * v127);
    CFMutableDictionaryRef v92 = *(const void **)(v43 + 8);
    int v93 = v64;
    memcpy(v64, v92, v91);
    kdebug_trace();
    if (v17[340] == 1)
    {
      v17[340] = 0;
      audioSession_triggerAsyncGlitchLog(a1);
    }
    if ((v113 & 0x80000000) == 0) {
      APSPacketLossConcealerSaveData();
    }
    a4 = &v93[v91];
    int v128 = v90 + v68;
    if (v88 >= 1)
    {
      uint64_t v32 = v132;
      size_t v112 = *(void *)(v132 + 16) - v91;
      *(void *)(v132 + 8) += v91;
      *(void *)(v32 + 16) = v112;
      *(_DWORD *)(v32 + 32) += v90;
      int v25 = 1;
      int v24 = v126;
      break;
    }
    atomic_fetch_add((atomic_uint *volatile)(a1 + 1928), 1u);
    uint64_t v94 = v132;
    if ((*(unsigned char *)(v132 + 36) & 2) != 0)
    {
      atomic_fetch_add((atomic_uint *volatile)(a1 + 1932), 1u);
      uint64_t v94 = v132;
    }
    int v27 = (unsigned char *)(a1 + 2012);
    int v24 = v126;
    if (*(void *)(a1 + 2360))
    {
      int v95 = *(_DWORD *)(v94 + 40);
      LODWORD(v129) = 1919247468;
      LODWORD(v130) = v95;
      APSAtomicMessageQueueSendMessage();
    }
    APSRTPPassThroughJitterBufferRelinquishNode();
    uint64_t v26 = 0;
    uint64_t v32 = 0;
    uint64_t v132 = 0;
    int v25 = 1;
  }
  while (a4 < v114);
  *(void *)(a1 + 1648) = v32;
  int v99 = v128;
  if (v128 - v24 < 0)
  {
    uint64_t v21 = v118;
    signed int v22 = v119;
    int v98 = v121;
    goto LABEL_191;
  }
  unint64_t v23 = a5;
  uint64_t v21 = v118;
  signed int v22 = v119;
  if (!v25) {
    goto LABEL_208;
  }
LABEL_203:
  if (!APSRTPPassThroughJitterBufferIsFlushing() && v121 >= 1 && *v120) {
    *unint64_t v120 = 0;
  }
LABEL_208:
  if (*v17) {
    *(_DWORD *)(v21 + 5568) = v22;
  }
  unint64_t v104 = atomic_load((unint64_t *)(a1 + 1768));
  if ((v104 & 0xFF000000000000) != 0
    && gLogCategory_APReceiverAudioSessionRealTimeStats <= 50
    && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
  {
    int v105 = *(_DWORD *)(a1 + 1764) - v104;
    if (byte_268402E10)
    {
      double v106 = *((double *)&gAirPlayAudioStats + 1)
           + *(double *)&gAirPlayAudioStats * ((double)v105 - *((double *)&gAirPlayAudioStats + 1));
    }
    else
    {
      double v106 = (double)v105;
      byte_268402E10 = 1;
    }
    *((double *)&gAirPlayAudioStats + 1) = v106;
    double v107 = ((double)(*(_DWORD *)(a1 + 76) >> 1) + v106 * 1000.0) / (double)*(unsigned int *)(a1 + 76);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 10
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v108 = *(void *)(a1 + 2336);
    if (v108) {
      *(_DWORD *)(v108 + 56) = (int)v107;
    }
  }
  atomic_exchange((atomic_uint *volatile)(a1 + 8784), *(_DWORD *)(a1 + 8784) & 0xFFFFFFFE);
  unint64_t v109 = v23 / *(unsigned int *)(a1 + 84);
  if (*(unsigned char *)(a1 + 9152) && *(_DWORD *)(a1 + 9160) + *(_DWORD *)(a1 + 9156) != v124)
  {
    atomic_fetch_add((atomic_uint *volatile)(a1 + 8856), 1u);
    uint64_t v110 = *(const void **)(a1 + 32);
    if (v110) {
      CFRetain(v110);
    }
    APSAsyncLoggerGetSharedLogger();
    APSAsyncLoggerLogMessage();
  }
  kdebug_trace();
  uint64_t result = 0;
  *(unsigned char *)(a1 + 9152) = 1;
  *(_DWORD *)(a1 + 9156) = v124;
  *(_DWORD *)(a1 + 9160) = v109;
  return result;
}

uint64_t audioSession_discardLatePacket(uint64_t a1)
{
  ++dword_268402E20;
  uint64_t v2 = *(void *)(a1 + 2336);
  if (v2) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 + 68), 1u, memory_order_relaxed);
  }
  if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 30
    && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  kdebug_trace();
  audioSession_enqueueRetransmitCommand(a1);

  return APSRTPPassThroughJitterBufferRelinquishNode();
}

uint64_t audioSession_audioDecoderDecodeFrame(void *inInputDataProcUserData, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, void *a6)
{
  if (!a2 || !a4) {
    goto LABEL_13;
  }
  UInt32 v7 = *((_DWORD *)inInputDataProcUserData + 22);
  unint64_t v8 = *((_DWORD *)inInputDataProcUserData + 21) * v7;
  if (v8 > a5)
  {
    APSLogErrorAt();
    return 4294960553;
  }
  if (!a6)
  {
LABEL_13:
    APSLogErrorAt();
    return 4294960591;
  }
  *(void *)&v13.mNumberBuffers = 1;
  *((void *)inInputDataProcUserData + 225) = a2;
  *((void *)inInputDataProcUserData + 226) = a2 + a3;
  ioOutputDataPacketsocklen_t Size = v7;
  v13.mBuffers[0].mNumberChannels = *((_DWORD *)inInputDataProcUserData + 20);
  v13.mBuffers[0].mDataBytesocklen_t Size = v8;
  v13.mBuffers[0].mCFDataRef Data = a4;
  uint64_t v10 = AudioConverterFillComplexBuffer(*((AudioConverterRef *)inInputDataProcUserData + 224), (AudioConverterComplexInputDataProc)audioSession_audioDecoderDecodeCallback, inInputDataProcUserData, &ioOutputDataPacketSize, &v13, 0);
  if (v10 != -6750 && (uint64_t v11 = v10, v10))
  {
    APSLogErrorAt();
  }
  else
  {
    uint64_t v11 = 0;
    *a6 = *((_DWORD *)inInputDataProcUserData + 21) * ioOutputDataPacketSize;
  }
  return v11;
}

uint64_t audioSession_triggerAsyncGlitchLog(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 8);
  if (v1) {
    CFRetain(v1);
  }
  APSAsyncLoggerGetSharedLogger();
  return APSAsyncLoggerLogMessage();
}

uint64_t audioSession_enqueueRetransmitCommand(uint64_t result)
{
  if (*(void *)(result + 2128))
  {
    if (*(void *)(result + 2152)
      && gLogCategory_APReceiverAudioSessionRealTime <= 40
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    mach_absolute_time();
    UpTicksToNanoseconds();
    uint64_t result = APSAtomicMessageQueueSendMessage();
    if (!result) {
      return APSLogErrorAt();
    }
  }
  return result;
}

void audioSession_plc(uint64_t a1, uint64_t a2, size_t a3, char *a4)
{
  unint64_t v8 = (unsigned char *)(a1 + 9004);
  uint64_t v14 = 0;
  ++*(_DWORD *)(a1 + 9040);
  *(_DWORD *)(a1 + 9044) += a3 / *(unsigned int *)(a1 + 84);
  bzero(a4, a3);
  *unint64_t v8 = 1;
  if (((*(_DWORD *)(a1 + 72) - 4) & 0xFFFFFFFB) != 0 || !v8[1])
  {
    *(_DWORD *)(a1 + 9012) = APSPacketLossConcealerConceal();
    return;
  }
  if (a3)
  {
    size_t v9 = 0;
    size_t v10 = *(void *)(a1 + 9032);
    do
    {
      uint64_t v11 = *(void *)(a1 + 9024);
      if (v10 == v11)
      {
        bzero(*(void **)(a1 + 9016), v10);
        if (audioSession_audioDecoderDecodeFrame((void *)a1, a2, 0, *(void **)(a1 + 9016), *(void *)(a1 + 9024), &v14))
        {
          APSLogErrorAt();
          return;
        }
        size_t v10 = 0;
        *(void *)(a1 + 9032) = 0;
        uint64_t v11 = *(void *)(a1 + 9024);
      }
      size_t v12 = v11 - v10;
      if (a3 - v9 >= v12) {
        size_t v13 = v12;
      }
      else {
        size_t v13 = a3 - v9;
      }
      memcpy(&a4[v9], (const void *)(*(void *)(a1 + 9016) + v10), v13);
      v9 += v13;
      size_t v10 = *(void *)(a1 + 9032) + v13;
      *(void *)(a1 + 9032) = v10;
    }
    while (v9 < a3);
  }
  *(_DWORD *)(a1 + 9012) = *(_DWORD *)(a1 + 9008);
}

void audioSession_ioDiscontinuityLogger(const void **a1)
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *a1;
  if (*a1)
  {
    CFRelease(v2);
  }
}

void audioSession_glitchLogger(uint64_t a1)
{
  uint64_t v2 = mach_absolute_time();
  uint64_t v3 = *(__CFDictionary **)a1;
  if (!*(void *)a1) {
    return;
  }
  uint64_t v4 = v2;
  uint64_t v5 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (!v5)
  {
    uint64_t v14 = v3;
LABEL_25:
    CFRelease(v14);
    return;
  }
  uint64_t v6 = (const void *)v5;
  uint64_t v7 = *(void *)(v5 + 40);
  unint64_t v8 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  size_t v9 = *(const char **)(a1 + 8);
  if (strcmp(v9, "[Glitch Gap Start]") && strcmp(v9, "[Glitch Underrun Start]")) {
    goto LABEL_21;
  }
  if (*(unsigned char *)(v7 + 9216)) {
    notify_post("com.apple.airplay.AmbientAudioGlitched");
  }
  if (!*(unsigned char *)(v7 + 9166) || *(unsigned char *)(v7 + 8936) || v4 < *(void *)(v7 + 9224)) {
    goto LABEL_21;
  }
  if (*(unsigned char *)(v7 + 9248)
    || (unsigned int v10 = *(_DWORD *)(v7 + 8788), v10 < *(_DWORD *)(v7 + 9252))
    || ((unint64_t v11 = UpTicksToSeconds()) == 0 ? (v12 = 0) : (v12 = 3600 * (int)v10 / v11),
        v12 < *(unsigned int *)(v7 + 9252)))
  {
    unint64_t v13 = atomic_load((unint64_t *)&audioSession_glitchLogger_sNextIssueReportTicks);
    if (v4 < v13)
    {
LABEL_21:
      uint64_t v14 = 0;
      goto LABEL_22;
    }
    unint64_t v25 = v13;
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v26 = 1;
  }
  else
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v26 = 0;
    unint64_t v25 = 0;
  }
  CFArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  uint64_t v14 = Mutable;
  if (!Mutable
    || (CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x263F24A48], (const void *)*MEMORY[0x263F24A50]),
        CFDictionarySetInt64())
    || CFDictionarySetInt64())
  {
    APSLogErrorAt();
    goto LABEL_22;
  }
  uint64_t v16 = (const void *)*MEMORY[0x263EFFB40];
  uint64_t v17 = (const void *)*MEMORY[0x263EFFB38];
  if (v26) {
    uint64_t v18 = (const void *)*MEMORY[0x263EFFB38];
  }
  else {
    uint64_t v18 = (const void *)*MEMORY[0x263EFFB40];
  }
  CFDictionarySetValue(v14, (const void *)*MEMORY[0x263F24A30], v18);
  unsigned __int8 v19 = atomic_load((unsigned __int8 *)(v7 + 9264));
  int v20 = (const void *)*MEMORY[0x263F24A28];
  if ((v19 & 1) == 0)
  {
    CFDictionarySetValue(v14, v20, v17);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unint64_t v23 = *(void **)(v7 + 40);
    if (v23) {
      APMediaDataControlServerSendRequest(v23, 1919513459, (uint64_t)v14, 0, 0);
    }
    goto LABEL_22;
  }
  CFDictionarySetValue(v14, v20, v16);
  if (v26)
  {
    if (!APSSettingsGetIntWithDefault())
    {
      unint64_t v21 = v25;
      unint64_t v22 = v25;
      atomic_compare_exchange_strong(&audioSession_glitchLogger_sNextIssueReportTicks, &v22, *(void *)(v7 + 9168) + v4);
      if (v22 != v21)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_22;
      }
    }
  }
  else
  {
    *(unsigned char *)(v7 + 9248) = 1;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v24 = *(void **)(v7 + 40);
  if (v24) {
    APMediaDataControlServerSendRequest(v24, 1919513459, (uint64_t)v14, 0, 0);
  }
  audioSession_triggerCoreCapture(v7, v14);
LABEL_22:
  CFRelease(v3);
  CFRelease(v6);
  if (v8) {
    CFRelease(v8);
  }
  if (v14) {
    goto LABEL_25;
  }
}

uint64_t audioSession_audioDecoderDecodeCallback(uint64_t a1, _DWORD *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 1800);
  uint64_t v6 = *(void *)(a5 + 1808);
  if (v5 == v6 && !*(unsigned char *)(a5 + 9004))
  {
    *a2 = 0;
    return 4294960546;
  }
  else
  {
    uint64_t result = 0;
    *a2 = 1;
    *(_DWORD *)a3 = 1;
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(a5 + 80);
    *(_DWORD *)(a3 + 12) = v6 - v5;
    *(void *)(a3 + 16) = v5;
    *(void *)(a5 + 1800) = v6;
    *(void *)(a5 + 1816) = 0;
    *(_DWORD *)(a5 + 1824) = 0;
    *(_DWORD *)(a5 + 1828) = v6 - v5;
    *a4 = a5 + 1816;
  }
  return result;
}

uint64_t audioSession_consumeNetworkDataBufferPacket(uint64_t result, int a2, NSObject *a3)
{
  uint64_t v3 = result;
  if (a2)
  {
    *(void *)(*(void *)(result + 8) + 48) = mach_absolute_time();
    size_t size = dispatch_data_get_size(a3);
    if (size > *(void *)(*(void *)v3 + 1632))
    {
      uint64_t result = APSLogErrorAt();
      int v7 = -6743;
    }
    else
    {
      size_t v6 = size;
      uint64_t result = APSDispatchDataCopyBytes();
      int v7 = result;
      if (result) {
        uint64_t result = APSLogErrorAt();
      }
      else {
        *(void *)(v3 + 16) = v6;
      }
    }
  }
  else
  {
    int v7 = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(v3 + 24) = v7;
  return result;
}

uint64_t APReceiverAudioSessionRealTimeConvertProgressRTPTimeToSecond(uint64_t a1, int a2, int a3, int a4, double *a5, double *a6, double a7, double a8)
{
  if (a1)
  {
    unint64_t v10 = atomic_load((unint64_t *)(a1 + 1768));
    if ((v10 & 0xFF000000000000) == 0) {
      LODWORD(v10) = a3;
    }
    LODWORD(a8) = *(_DWORD *)(a1 + 76);
    double v11 = (double)*(unint64_t *)&a8;
    double v12 = (double)((int)v10 - a2) / v11;
    double v13 = (double)(a4 - a2) / v11;
    if (gLogCategory_APReceiverAudioSessionRealTime <= 40
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a5) {
      *a5 = v12;
    }
    uint64_t result = 0;
    if (a6) {
      *a6 = v13;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895144;
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeSetSecurityInfo(uint64_t a1, const UInt8 *a2, const UInt8 *a3)
{
  if (!a1) {
    return 4294895144;
  }
  uint64_t v6 = a1 + 480;
  AES_CBCFrame_Final();
  *(void *)(a1 + 504) = 0;
  uint64_t v7 = AES_CBCFrame_Init();
  if (v7)
  {
    uint64_t v8 = v7;
    APSLogErrorAt();
    return v8;
  }
  *(void *)(a1 + 504) = v6;
  if (!*(unsigned char *)(a1 + 96)) {
    return 0;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v10 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, 16);
  if (!v10)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFDataRef v11 = v10;
  CFDataRef v12 = CFDataCreate(v9, a3, 16);
  if (!v12)
  {
    APSLogErrorAt();
    CFRelease(v11);
    return 4294960568;
  }
  CFDataRef v13 = v12;
  uint64_t v8 = APSCryptorCBCCreate();
  if (v8)
  {
    APSLogErrorAt();
  }
  else
  {
    uint64_t v14 = *(const void **)(a1 + 472);
    *(void *)(a1 + 472) = 0;
    if (v14) {
      CFRelease(v14);
    }
  }
  CFRelease(v11);
  CFRelease(v13);
  return v8;
}

uint64_t APReceiverAudioSessionRealTimeStartPacketProcesser(uint64_t a1)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  uint64_t v2 = (_WORD *)(a1 + 8824);
  if (*(unsigned char *)(a1 + 8984))
  {
    uint64_t v32 = 4294895143;
    goto LABEL_46;
  }
  if (!*(void *)(a1 + 64))
  {
    *(void *)(a1 + 8952) = mach_absolute_time();
    uint64_t v3 = pthread_create((pthread_t *)(a1 + 56), 0, (void *(__cdecl *)(void *))audioSession_networkThread, (void *)a1);
    if (v3)
    {
      uint64_t v32 = v3;
    }
    else
    {
      *(void *)(a1 + 64) = a1 + 56;
      *(void *)(a1 + 1904) = *(void *)(a1 + 8952);
      uint64_t v4 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 8944));
      *(void *)(a1 + 8968) = v4;
      if (!v4) {
        goto LABEL_40;
      }
      uint64_t v5 = v4;
      dispatch_set_context(v4, (void *)a1);
      dispatch_source_set_event_handler_f(v5, (dispatch_function_t)audioSession_performPeriodicTasks);
      dispatch_time_t v6 = dispatch_time(0, 250000000);
      dispatch_source_set_timer(v5, v6, 0xEE6B280uLL, 0xEE6B280uLL);
      dispatch_resume(v5);
      uint64_t v7 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 9064));
      *(void *)(a1 + 9056) = v7;
      if (!v7)
      {
LABEL_40:
        APSLogErrorAt();
        return 4294960596;
      }
      dispatch_set_context(v7, (void *)a1);
      dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 9056), (dispatch_function_t)audioSession_log);
      dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 9056), 0, 1000000 * *(void *)(a1 + 9072), 0);
      dispatch_resume(*(dispatch_object_t *)(a1 + 9056));
      *(_DWORD *)(a1 + 8792) = 0;
      *(_DWORD *)(a1 + 8800) = 0;
      *(void *)(a1 + 8784) = 0;
      *(void *)(a1 + 8848) = 0;
      *uint64_t v2 = 0;
      unint64_t v34 = v2;
      v2[56] = 0;
      *(void *)(a1 + 8888) = 0;
      bzero((void *)(a1 + 2368), 0xC84uLL);
      bzero((void *)(a1 + 5576), 0xC84uLL);
      APSIOReporterGetCoreCaptureCount();
      *(void *)(a1 + 9184) = mach_absolute_time();
      *(void *)(a1 + 9192) = (int)FigGetCFPreferenceNumberWithDefault();
      CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFAllocatorRef v9 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
      CFDataRef v10 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
      CFArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFDataRef v12 = CFDictionaryCreateMutable(v8, 0, v9, v10);
      CFDataRef v13 = *(const void **)(a1 + 2352);
      if (v13)
      {
        CFRelease(v13);
        *(void *)(a1 + 2352) = 0;
      }
      uint64_t v14 = *(const void **)(a1 + 2360);
      if (v14)
      {
        CFRelease(v14);
        *(void *)(a1 + 2360) = 0;
      }
      uint64_t v15 = (const void *)*MEMORY[0x263F24AA8];
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x263F24AA8], @"ms");
      FigCFDictionarySetDouble();
      FigCFDictionarySetInt32();
      if (Mutable && v12)
      {
        uint64_t v16 = (const void **)MEMORY[0x263F24AA0];
        uint64_t v17 = (const void *)*MEMORY[0x263F24AA0];
        CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x263F24AA0], @"Histogram_GlitchDuration");
        uint64_t v18 = (const void *)APSStatsHistogramCreate();
        if (v18)
        {
          unsigned __int8 v19 = v18;
          CFDictionarySetValue(v12, @"Histogram_GlitchDuration", v18);
          CFRelease(v19);
        }
        CFDictionarySetValue(Mutable, v17, @"Histogram_StartupGlitchDuration");
        int v20 = (const void *)APSStatsHistogramCreate();
        if (v20)
        {
          unint64_t v21 = v20;
          CFDictionarySetValue(v12, @"Histogram_StartupGlitchDuration", v20);
          CFRelease(v21);
        }
        CFDictionarySetValue(Mutable, v17, @"Histogram_NonStartupGlitchDuration");
        unint64_t v22 = (const void *)APSStatsHistogramCreate();
        if (v22)
        {
          unint64_t v23 = v22;
          CFDictionarySetValue(v12, @"Histogram_NonStartupGlitchDuration", v22);
          CFRelease(v23);
        }
      }
      else
      {
        uint64_t v16 = (const void **)MEMORY[0x263F24AA0];
        APSLogErrorAt();
        APSLogErrorAt();
        APSLogErrorAt();
      }
      FigCFDictionarySetDouble();
      FigCFDictionarySetDouble();
      FigCFDictionarySetInt32();
      if (Mutable && v12)
      {
        CFDictionarySetValue(Mutable, *v16, @"Histogram_NetworkTransitTime");
        int v24 = (const void *)APSStatsHistogramCreate();
        if (v24)
        {
          unint64_t v25 = v24;
          CFDictionarySetValue(v12, @"Histogram_NetworkTransitTime", v24);
          CFRelease(v25);
        }
      }
      else
      {
        APSLogErrorAt();
      }
      CFDictionaryRemoveValue(Mutable, v15);
      FigCFDictionarySetDouble();
      FigCFDictionarySetDouble();
      FigCFDictionarySetInt32();
      if (Mutable && v12)
      {
        CFDictionarySetValue(Mutable, *v16, @"Histogram_RenderRedundancyLevel");
        int v26 = (const void *)APSStatsHistogramCreate();
        if (v26)
        {
          int v27 = v26;
          CFDictionarySetValue(v12, @"Histogram_RenderRedundancyLevel", v26);
          CFRelease(v27);
        }
      }
      else
      {
        APSLogErrorAt();
      }
      APSAtomicMessageQueueCreate();
      CFRelease(Mutable);
      *(void *)(a1 + 2352) = v12;
      uint64_t v28 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 8944));
      *(void *)(a1 + 8976) = v28;
      if (!v28)
      {
        APSLogErrorAt();
        return 4294960568;
      }
      dispatch_set_context(v28, (void *)a1);
      dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 8976), (dispatch_function_t)audioSession_performGlitchCollection);
      int v29 = *(NSObject **)(a1 + 8976);
      dispatch_time_t v30 = dispatch_time(0, 1000000000);
      dispatch_source_set_timer(v29, v30, 0x3B9ACA00uLL, 0x3B9ACA00uLL);
      dispatch_resume(*(dispatch_object_t *)(a1 + 8976));
      uint64_t v31 = *(void *)(a1 + 40);
      if (!v31
        || (uint64_t context = *(void *)(a1 + 40),
            uint64_t v36 = 0,
            dispatch_sync_f(*(dispatch_queue_t *)(v31 + 112), &context, (dispatch_function_t)controlServer_startInternal), uint64_t v32 = v36, !v36))
      {
        APSCopyTightSyncInfo();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *((unsigned char *)v34 + 160) = 1;
        return 0;
      }
    }
LABEL_46:
    APSLogErrorAt();
    return v32;
  }
  return 0;
}

uint64_t audioSession_performGlitchCollection(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = (char *)(result + 8804);
    APSAsyncLoggerGetSharedLogger();
    uint64_t result = APSAsyncLoggerLogMessage();
    BOOL v3 = 0;
    unsigned int v4 = 0;
    for (unsigned int i = 0; i != 100; ++i)
    {
      unsigned int v6 = *(_DWORD *)(v1 + 8784);
      if ((v6 & 1) == 0)
      {
        unsigned int v4 = (v6 >> 1) & 1;
        int v7 = *(_DWORD *)(v1 + 8784);
        atomic_compare_exchange_strong((atomic_uint *volatile)(v1 + 8784), (unsigned int *)&v7, (v6 & 0xFFFFFFFD | (2 * v4)) ^ 2);
        if (v7 == v6) {
          break;
        }
      }
      uint64_t result = usleep(0xAu);
      BOOL v3 = i > 0x62;
    }
    CFAllocatorRef v8 = (_OWORD *)(v1 + 2368 + 3208 * v4);
    int v9 = v3;
    uint64_t v10 = v9 ? 0 : v1 + 2368 + 3208 * v4;
    if (!v9)
    {
      uint64_t v11 = v1 + 2368 + 3208 * v4;
      unsigned int v12 = *(_DWORD *)(v11 + 3200);
      int v13 = v2[20];
      uint64_t result = mach_absolute_time();
      uint64_t v14 = result;
      if (v12 > 0xC8) {
        goto LABEL_69;
      }
      unsigned int v15 = v12;
      if (v12 != 200) {
        goto LABEL_18;
      }
      if (*v2 == 1)
      {
LABEL_69:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 90)
        {
          if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
            uint64_t result = LogPrintF();
          }
        }
      }
      unsigned int v15 = 200;
LABEL_18:
      if (*v2 == 1)
      {
        uint64_t result = (uint64_t)memmove(v8 + 1, (const void *)(v1 + 2368 + 3208 * v4), 16 * v15);
        *CFAllocatorRef v8 = *(_OWORD *)(v1 + 8808);
        ++v12;
      }
      if (v12 < 2)
      {
        unsigned int v16 = 0;
        if (v13)
        {
LABEL_27:
          if (v15 || *v2)
          {
            int v23 = 0;
            unsigned int v24 = v16 + 1;
            goto LABEL_44;
          }
          int v23 = 0;
          goto LABEL_43;
        }
      }
      else
      {
        unsigned int v16 = 0;
        uint64_t v17 = v12 - 1;
        uint64_t v18 = (_DWORD *)(v10 + 28);
        do
        {
          uint64_t v19 = v10 + 16 * v16;
          int v22 = *(_DWORD *)(v19 + 12);
          int v20 = (_DWORD *)(v19 + 12);
          int v21 = v22;
          if (v22 + *(v20 - 1) == *(v18 - 1)) {
            *int v20 = *v18 + v21;
          }
          else {
            *(_OWORD *)(v10 + 16 * ++v16) = *(_OWORD *)(v18 - 3);
          }
          v18 += 4;
          --v17;
        }
        while (v17);
        if (v13) {
          goto LABEL_27;
        }
      }
      if (!v15)
      {
        int v25 = *v2;
        BOOL v26 = v25 != 1;
        if (v25 == 1) {
          unsigned int v27 = v16 + 1;
        }
        else {
          unsigned int v27 = v16;
        }
        BOOL v28 = v25 == 0;
        if (*v2) {
          unsigned int v24 = v27;
        }
        else {
          unsigned int v24 = v16;
        }
        int v23 = !v28 && v26;
LABEL_44:
        int v29 = (_DWORD *)(v11 + 3200);
        if (v2[133])
        {
          if (v14 < *(void *)(v1 + 8928))
          {
LABEL_66:
            *int v29 = 0;
            return result;
          }
          *((_WORD *)v2 + 66) = 0;
        }
        int v42 = v23;
        uint64_t v43 = (_DWORD *)(v11 + 3200);
        uint64_t v41 = v10;
        if (v24)
        {
          uint64_t v40 = v14;
          int v30 = 0;
          uint64_t v31 = v24;
          uint64_t v32 = v10 + 8;
          uint64_t v33 = v2;
          while (1)
          {
            if (v2[21])
            {
              double v34 = (float)((float)((float)*(int *)(v32 + 4) * 1000.0) / (float)*(unsigned int *)(v1 + 76));
              unint64_t v35 = *(void *)(v32 - 8);
              unint64_t v36 = *(void *)(v1 + 9224);
              if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
              CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.airplay.realTimeAudioUnderrun", 0, 0, 1u);
              audioSession_addHistogramValue(*(const __CFDictionary **)(v1 + 2352), @"Histogram_GlitchDuration", v34);
              uint64_t v38 = v35 >= v36 ? @"Histogram_NonStartupGlitchDuration" : @"Histogram_StartupGlitchDuration";
              uint64_t result = (uint64_t)audioSession_addHistogramValue(*(const __CFDictionary **)(v1 + 2352), v38, v34);
              ++v30;
              uint64_t v2 = v33;
              if (v33[132]) {
                break;
              }
            }
            v32 += 16;
            if (!--v31) {
              goto LABEL_62;
            }
          }
          char v39 = 0;
          *(void *)(v1 + 8928) = *(void *)(v1 + 8920) + v40;
          v33[133] = 1;
          *(_DWORD *)(v1 + 8788) += v30;
        }
        else
        {
          int v30 = 0;
LABEL_62:
          *(_DWORD *)(v1 + 8788) += v30;
          char v39 = v42;
          if (v42)
          {
            *(_OWORD *)(v1 + 8808) = *(_OWORD *)(v41 + 16 * v16);
            char v39 = 1;
          }
        }
        int v29 = v43;
        *uint64_t v2 = v39;
        goto LABEL_66;
      }
      int v23 = 1;
LABEL_43:
      unsigned int v24 = v16;
      goto LABEL_44;
    }
  }
  return result;
}

uint64_t audioSession_log(uint64_t a1)
{
  uint64_t result = APSRTPPassThroughJitterBufferGetInsertedNodeCount();
  if (*(int *)(a1 + 1628) > 0 && *(_DWORD *)(a1 + 76))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        APSSGetGasGaugeStringForPercent();
        return LogPrintF();
      }
    }
  }
  else
  {
    return APSLogErrorAt();
  }
  return result;
}

void audioSession_performPeriodicTasks(uint64_t a1)
{
  CFTypeRef v31 = 0;
  if (!a1) {
    return;
  }
  audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
  audioSession_processEnqueuedRetransmitCommands(a1);
  audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
  audioSession_flushHistogramMessageQueue(a1);
  uint64_t v2 = mach_absolute_time();
  if (*(_DWORD *)(a1 + 1864) == *(_DWORD *)(a1 + 1868))
  {
    uint64_t v3 = v2;
    uint64_t v4 = v2 - *(void *)(a1 + 1872);
    if (v2 - *(void *)(a1 + 1904) > *(void *)(a1 + 1912))
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 40
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        UpTicksPerSecond();
        LogPrintF();
      }
      *(void *)(a1 + 1904) = v3;
    }
    if (v4 > *(void *)(a1 + 1880)) {
      goto LABEL_103;
    }
  }
  uint64_t v5 = mach_absolute_time();
  if (v5 >= *(void *)(a1 + 1848))
  {
    ++*(_DWORD *)(a1 + 1840);
    int v6 = *(_DWORD *)(a1 + 8788);
    int v7 = v6 - *(_DWORD *)(a1 + 8792);
    *(_DWORD *)(a1 + 8792) = v6;
    if (v7 < 1)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()) {
          goto LABEL_17;
        }
        goto LABEL_21;
      }
    }
    else
    {
      ++*(_DWORD *)(a1 + 8800);
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()) {
LABEL_17:
        }
          LogPrintF();
LABEL_21:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    *(void *)(a1 + 1848) = *(void *)(a1 + 1856) + v5;
  }
  if (v5 >= *(void *)(a1 + 1936))
  {
    atomic_exchange((atomic_uint *volatile)(a1 + 1952), 0);
    atomic_exchange((atomic_uint *volatile)(a1 + 1956), 0);
    atomic_exchange((atomic_uint *volatile)(a1 + 1960), 0);
    unsigned int v8 = atomic_exchange((atomic_uint *volatile)(a1 + 1920), 0);
    atomic_exchange((atomic_uint *volatile)(a1 + 1924), 0);
    unsigned int v9 = atomic_exchange((atomic_uint *volatile)(a1 + 1928), 0);
    atomic_exchange((atomic_uint *volatile)(a1 + 1932), 0);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v8
      && gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v9
      && gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(void *)(a1 + 1936) = *(void *)(a1 + 1944) + v5;
  }
  if (v5 >= *(void *)(a1 + 9080))
  {
    audioSession_logHistograms(a1);
    *(void *)(a1 + 9080) = *(void *)(a1 + 9088) + v5;
  }
  if (v5 < *(void *)(a1 + 1976)) {
    goto LABEL_60;
  }
  cf[0] = 0;
  CFDictionaryRef v10 = *(const __CFDictionary **)(a1 + 2352);
  if (v10)
  {
    if (*(void *)(a1 + 40)
      && *(void *)(a1 + 1968) != 0x7FFFFFFFFFFFFFFFLL
      && CFDictionaryGetValue(v10, @"Histogram_NonStartupGlitchDuration"))
    {
      if (!APSStatsHistogramCreateSerializedDictionary())
      {
        mach_absolute_time();
        UpTicksToSeconds();
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (Mutable
          && !FigCFDictionarySetInt32()
          && !CFDictionarySetInt64()
          && !CFDictionarySetInt64())
        {
          FigCFDictionarySetValue();
          APMediaDataControlServerSendRequest(*(void **)(a1 + 40), 1918989680, (uint64_t)Mutable, 0, 0);
          goto LABEL_55;
        }
        APSLogErrorAt();
LABEL_111:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 90
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_55;
      }
      APSLogErrorAt();
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        CFMutableDictionaryRef Mutable = 0;
        goto LABEL_111;
      }
    }
    CFMutableDictionaryRef Mutable = 0;
LABEL_55:
    if (Mutable) {
      CFRelease(Mutable);
    }
  }
  int v12 = *(_DWORD *)(a1 + 1984);
  if ((v12 + 1) <= 4) {
    *(_DWORD *)(a1 + 1984) = ++v12;
  }
  uint64_t v13 = kAirPlayReportRenderDeadlineBackoffSec[v12];
  *(void *)(a1 + 1976) = v5 + UpTicksPerSecond() * v13;
LABEL_60:
  if (v5 < *(void *)(a1 + 9104)) {
    goto LABEL_96;
  }
  memset(cf, 0, sizeof(cf));
  if (!*(void *)(a1 + 9048)) {
    goto LABEL_95;
  }
  uint64_t v14 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  while (1)
  {
    if (!APSAtomicMessageQueueReadMessage()) {
      goto LABEL_95;
    }
    if (v34 == 1) {
      break;
    }
    if (v34 != 2) {
      goto LABEL_85;
    }
    uint64_t v15 = *(void *)(a1 + 2296);
    uint64_t v16 = v33;
    uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v17) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    int v23 = *(unsigned int (**)(uint64_t, uint64_t, CFTypeRef *))(v18 + 16);
    if (!v23 || v23(v15, v16, cf))
    {
      APSLogErrorAt();
      if (gLogCategory_APReceiverAudioSessionRealTime > 90
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_95;
      }
LABEL_91:
      LogPrintF();
      goto LABEL_95;
    }
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
LABEL_81:
      mach_absolute_time();
      UpTicksToMilliseconds();
      LogPrintF();
    }
LABEL_85:
    ++v14;
  }
  uint64_t v19 = *(void *)(a1 + 2296);
  uint64_t v20 = v33;
  uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v21) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  unsigned int v24 = *(unsigned int (**)(uint64_t, uint64_t, CFTypeRef *))(v22 + 16);
  if (v24 && !v24(v19, v20, cf))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_81;
    }
    goto LABEL_85;
  }
  APSLogErrorAt();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 90
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_91;
  }
LABEL_95:
  *(void *)(a1 + 9104) = *(void *)(a1 + 9096) + v5;
LABEL_96:
  UpTicksToSecondsF();
  if (*(void *)(a1 + 9192) <= (unint64_t)v25
    && (*(void *)(a1 + 9184) = v5, (uint64_t v26 = FigCFWeakReferenceHolderCopyReferencedObject()) != 0))
  {
    BOOL v28 = (const void *)v26;
    AirPlayReceiverSessionControl(v26, v27, @"nanWifiStats", 0, 0, (__CFDictionary **)&v31);
    CFTypeRef v29 = v31;
    if (v31)
    {
      int v30 = *(const void **)(a1 + 9208);
      CFRetain(v31);
      *(void *)(a1 + 9208) = v29;
      if (v30) {
        CFRelease(v30);
      }
    }
    APSNetworkClockLogCurrentNetworkTime();
    CFRelease(v28);
  }
  else
  {
    APSNetworkClockLogCurrentNetworkTime();
  }
LABEL_103:
  if (v31) {
    CFRelease(v31);
  }
}

uint64_t audioSession_networkThread(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a1 + 97)) {
    int v20 = 0;
  }
  else {
    int v20 = *(_DWORD *)(a1 + 52);
  }
  unint64_t v2 = *(int *)(a1 + 1560);
  unint64_t v3 = *(int *)(a1 + 48);
  pthread_setname_np("AirPlayAudioReceiver");
  if (*(unsigned char *)(a1 + 97)) {
    FigThreadGetMachThreadPriorityValue();
  }
  SetCurrentThreadPriority();
  int v4 = *(unsigned __int8 *)(a1 + 97);
  if (v20 > -1 && v4 == 0) {
    int v6 = v20;
  }
  else {
    int v6 = -1;
  }
  if ((int)v2 > v6) {
    int v6 = v2;
  }
  if ((int)v3 > v6) {
    int v6 = v3;
  }
  int v7 = v6 + 1;
  memset(&v21, 0, sizeof(v21));
  int v19 = 1 << v20;
  int v8 = 1 << v2;
  unint64_t v9 = v2 >> 5;
  int v10 = 1 << v3;
  unint64_t v11 = v3 >> 5;
  unint64_t v18 = (unint64_t)v20 >> 5;
  if (!v4)
  {
LABEL_17:
    if (__darwin_check_fd_set_overflow(v20, &v21, 0)) {
      v21.fds_bits[v18] |= v19;
    }
    goto LABEL_19;
  }
  while (1)
  {
LABEL_19:
    if (__darwin_check_fd_set_overflow(v2, &v21, 0)) {
      v21.fds_bits[v9] |= v8;
    }
    if (__darwin_check_fd_set_overflow(v3, &v21, 0)) {
      v21.fds_bits[v11] |= v10;
    }
    int v12 = select(v7, &v21, 0, 0, 0);
    if (v12 > 0) {
      break;
    }
    if (!v12 || !*__error()) {
      goto LABEL_42;
    }
    int v15 = *__error();
    if (!v15) {
      break;
    }
    if (v15 != 4) {
LABEL_42:
    }
      usleep(0x186A0u);
LABEL_71:
    if (!*(unsigned char *)(a1 + 97)) {
      goto LABEL_17;
    }
  }
  if (!*(unsigned char *)(a1 + 97) && __darwin_check_fd_set_overflow(v20, &v21, 0) && (v21.fds_bits[v18] & v19) != 0)
  {
    BOOL v28 = 0;
    *(void *)&long long v22 = 0;
    if (!APSRTPPassThroughJitterBufferAcquireRelinquishedNode())
    {
      APTTrafficMetricsMessageReadStarted();
      int v16 = SocketRecvFrom();
      APTTrafficMetricsMessageReadFinished();
      if (v16 == 35)
      {
LABEL_50:
        APTTrafficMetricsMessageProcessed();
        if (v28) {
          APSRTPPassThroughJitterBufferRelinquishNode();
        }
        APSNetworkClockLogCurrentNetworkTime();
        goto LABEL_25;
      }
      if (!v16)
      {
        atomic_fetch_add((atomic_uint *volatile)(a1 + 1952), v22);
        if (!audioSession_processPacket(a1, v28, v22, 0)) {
          BOOL v28 = 0;
        }
        goto LABEL_50;
      }
    }
    APSLogErrorAt();
    goto LABEL_50;
  }
LABEL_25:
  if (__darwin_check_fd_set_overflow(v2, &v21, 0) && (v21.fds_bits[v9] & v8) != 0)
  {
    bzero(&v28, 0x5A4uLL);
    uint64_t v25 = 0;
    unint64_t v26 = 0;
    unint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    APTTrafficMetricsMessageReadStarted();
    int v13 = SocketRecvFrom();
    APTTrafficMetricsMessageReadFinished();
    if (v13 == 35) {
      goto LABEL_68;
    }
    if (v13) {
      goto LABEL_73;
    }
    atomic_fetch_add((atomic_uint *volatile)(a1 + 1956), v26);
    size_t v14 = v26 - 4;
    if (v26 < 4 || (v28 & 0xC0) != 0x80) {
      goto LABEL_68;
    }
    if (BYTE1(v28) == 215)
    {
      if (v26 > 0x1B)
      {
        LODWORD(v22) = 2;
        BYTE8(v22) = (_BYTE)v28;
        *((double *)&v23 + 1) = (double)bswap64(v29) / 1000000000.0;
        HIDWORD(v22) = bswap32(HIDWORD(v28));
        LODWORD(v23) = bswap32(v30);
        unint64_t v24 = bswap64(v31);
        while (!APSAtomicMessageQueueSendMessage())
          usleep(1u);
        goto LABEL_57;
      }
LABEL_73:
      APSLogErrorAt();
      goto LABEL_68;
    }
    if (BYTE1(v28) != 214)
    {
      if (BYTE1(v28) == 212)
      {
        if (v26 > 0x13)
        {
          BYTE8(v22) = (_BYTE)v28;
          LODWORD(v22) = 1;
          *((double *)&v23 + 1) = (double)bswap32(v29) + (double)bswap32(HIDWORD(v29)) * 2.32830644e-10 + -2208988800.0;
          HIDWORD(v22) = bswap32(HIDWORD(v28));
          LODWORD(v23) = bswap32(v30);
          unint64_t v24 = 0;
          while (!APSAtomicMessageQueueSendMessage())
            usleep(1u);
LABEL_57:
          audioSession_logTimeAnnounce(a1, &v22);
          kdebug_trace();
          goto LABEL_68;
        }
        goto LABEL_73;
      }
LABEL_68:
      APTTrafficMetricsMessageProcessed();
      goto LABEL_69;
    }
    if (v26 == 8)
    {
      WORD2(v28) = bswap32(WORD2(v28)) >> 16;
      audioSession_enqueueRetransmitCommand(a1);
      ++*(_DWORD *)(a1 + 2216);
      goto LABEL_68;
    }
    if (v26 < 0x10) {
      goto LABEL_68;
    }
    int v27 = 0;
    if (*(unsigned char *)(a1 + 2160))
    {
      if (gLogCategory_APReceiverAudioSessionRealTime > 90
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_84;
      }
    }
    else
    {
      if (!*(unsigned char *)(a1 + 97))
      {
        if (APSRTPPassThroughJitterBufferAcquireRelinquishedNode() || *(void *)(a1 + 1632) < v14)
        {
          APSLogErrorAt();
        }
        else
        {
          memcpy(v27[3], (char *)&v28 + 4, v14);
          if (!audioSession_processPacket(a1, v27, v14, 1))
          {
            int v27 = 0;
LABEL_67:
            APSNetworkClockLogCurrentNetworkTime();
            ++*(_DWORD *)(a1 + 2212);
            goto LABEL_68;
          }
        }
LABEL_84:
        if (v27) {
          APSRTPPassThroughJitterBufferRelinquishNode();
        }
        goto LABEL_67;
      }
      if (gLogCategory_APReceiverAudioSessionRealTime > 90
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_84;
      }
    }
    LogPrintF();
    goto LABEL_84;
  }
LABEL_69:
  if (!__darwin_check_fd_set_overflow(v3, &v21, 0) || (v21.fds_bits[v11] & v10) == 0) {
    goto LABEL_71;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t audioSession_logTimeAnnounce(uint64_t result, _DWORD *a2)
{
  if ((*a2 - 3) >= 0xFFFFFFFE)
  {
    memset(v8, 0, sizeof(v8));
    uint64_t v2 = *(void *)(result + 2296);
    uint64_t VTable = CMBaseObjectGetVTable();
    uint64_t v5 = *(void *)(VTable + 16);
    uint64_t result = VTable + 16;
    uint64_t v4 = v5;
    if (v5) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 0;
    }
    int v7 = *(uint64_t (**)(uint64_t, void *))(v6 + 8);
    if (v7) {
      uint64_t result = v7(v2, v8);
    }
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeStopPacketProcesser(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v2 = a1;
  CFTypeRef v19 = 0;
  if (!a1) {
    return v2;
  }
  unint64_t v3 = (unsigned char *)(a1 + 8824);
  if (*(unsigned char *)(a1 + 8984))
  {
    if (*(void *)(a1 + 64) && *(_DWORD *)(a1 + 48))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      if (v5)
      {
        context[0] = *(void *)(a1 + 40);
        context[1] = 0;
        dispatch_sync_f(*(dispatch_queue_t *)(v5 + 112), context, (dispatch_function_t)controlServer_stopInternal);
      }
      SendSelfConnectedLoopbackMessage();
      pthread_join(*(pthread_t *)(v2 + 56), 0);
      *(void *)(v2 + 64) = 0;
      *unint64_t v3 = 1;
      audioSession_performGlitchCollection(v2);
      *(unsigned char *)(v2 + 8825) = 0;
      APSIOReporterGetCoreCaptureCount();
      uint64_t v6 = *(NSObject **)(v2 + 8944);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke;
      block[3] = &__block_descriptor_tmp_418;
      block[4] = v2;
      dispatch_sync(v6, block);
      int v7 = *(NSObject **)(v2 + 9064);
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 0x40000000;
      v17[2] = __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke_2;
      v17[3] = &__block_descriptor_tmp_164;
      v17[4] = v2;
      dispatch_sync(v7, v17);
      int v8 = *(NSObject **)(v2 + 8944);
      v16[0] = MEMORY[0x263EF8330];
      v16[1] = 0x40000000;
      v16[2] = __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke_3;
      v16[3] = &__block_descriptor_tmp_165;
      v16[4] = v2;
      dispatch_sync(v8, v16);
      APSCopyTightSyncInfo();
      if (v19) {
        *(unsigned char *)(v2 + 9297) = 1;
      }
      if (a2)
      {
        *(void *)(v2 + 8896) = CFDictionaryGetInt64();
        *(void *)(v2 + 8904) = CFDictionaryGetInt64();
        *(void *)(v2 + 8912) = CFDictionaryGetInt64();
        *(void *)(v2 + 9232) = CFDictionaryGetInt64();
        *(void *)(v2 + 9240) = CFDictionaryGetInt64();
        unint64_t v9 = *(const void **)(v2 + 9200);
        CFArrayRef Value = CFDictionaryGetValue(a2, @"senderNANWifiStats");
        unint64_t v11 = Value;
        if (Value) {
          CFRetain(Value);
        }
        *(void *)(v2 + 9200) = v11;
        if (v9) {
          CFRelease(v9);
        }
      }
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(void *)(v2 + 8960) = mach_absolute_time();
      *(unsigned char *)(v2 + 8984) = 0;
      uint64_t v2 = *(void *)(v2 + 120);
      if (!v2) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      size_t v14 = *(void (**)(uint64_t, void))(v13 + 24);
      if (v14) {
        v14(v2, 0);
      }
    }
    uint64_t v2 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v2 = 4294895143;
  }
LABEL_25:
  if (v19) {
    CFRelease(v19);
  }
  return v2;
}

void __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 8968);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 8968));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 8968) = 0;
  }
}

void __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 9056);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 9056));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 9056) = 0;
  }
}

void __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke_3(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 8976);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 8976));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 8976) = 0;
  }
}

uint64_t APReceiverAudioSessionRealTimeUpdateLatency(_DWORD *a1)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  int v2 = a1[403];
  int v3 = a1[402];
  BOOL v4 = __OFSUB__(v2, v3);
  int v5 = v2 - v3;
  if (v5 < 0 != v4)
  {
    if (v3 < 22051)
    {
      int v5 = -v3;
    }
    else
    {
      int v5 = -441000;
      a1[434] = -441000;
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (v7 = _LogCategory_Initialize(), int v5 = a1[434], v7))
        {
          LogPrintF();
          int v5 = a1[434];
        }
      }
    }
  }
  a1[434] = v5 - a1[2250] * a1[22] + gAirTunesRelativeTimeOffset;
  if (gLogCategory_APReceiverAudioSessionRealTime > 50) {
    return 0;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeCopyMetrics(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2)
    {
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895145;
    }
  }
  else
  {
    uint64_t v2 = 4294895144;
    APSLogErrorAt();
  }
  return v2;
}

uint64_t APReceiverAudioSessionRealTimeLogEnded(uint64_t result, uint64_t a2)
{
  if (!result) {
    return result;
  }
  if (!a2)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 2240);
  if (v3 == -1) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = (v3 / 0xF4240);
  }
  unint64_t v5 = *(void *)(result + 2248);
  if (v5 == -1) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (v5 / 0xF4240);
  }
  unint64_t v7 = *(void *)(result + 2256);
  if (v7 == -1) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = (v7 / 0xF4240);
  }
  unint64_t v9 = UpTicksToSeconds();
  DataBuffer_AppendF();
  *((void *)&v47 + 1) = v6;
  uint64_t v48 = v8;
  *(void *)&long long v47 = v4;
  DataBuffer_AppendF();
  uint64_t v43 = dword_268402E20;
  uint64_t v44 = *(unsigned int *)(v2 + 2268);
  uint64_t v45 = *(unsigned int *)(v2 + 2272);
  unint64_t v46 = *(unsigned int *)(v2 + 1832) / 0x64uLL;
  DataBuffer_AppendF();
  uint64_t v42 = *(unsigned int *)(v2 + 2036);
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  unint64_t v11 = *(void *)(v2 + 8880);
  unint64_t v12 = *(void *)(v2 + 8872);
  if (v11 >= v12) {
    unint64_t v13 = v11 - v12;
  }
  else {
    unint64_t v13 = 0;
  }
  unint64_t v14 = *(void *)(v2 + 8888);
  if (v13 >= v14) {
    unint64_t v15 = v13 - v14;
  }
  else {
    unint64_t v15 = 0;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1)
    {
LABEL_20:
      uint64_t v50 = *(void *)(v2 + 9232);
      uint64_t v51 = *(void *)(v2 + 9240);
      uint64_t v48 = *(void *)(v2 + 8912);
      uint64_t v49 = *(unsigned int *)(v2 + 8856);
      long long v47 = *(_OWORD *)(v2 + 8896);
      uint64_t v45 = v14;
      unint64_t v46 = v15;
      uint64_t v43 = v11;
      uint64_t v44 = v13;
      uint64_t v42 = v12;
      LogPrintF();
      goto LABEL_22;
    }
    if (_LogCategory_Initialize())
    {
      unint64_t v12 = *(void *)(v2 + 8872);
      unint64_t v11 = *(void *)(v2 + 8880);
      unint64_t v14 = *(void *)(v2 + 8888);
      goto LABEL_20;
    }
  }
LABEL_22:
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  audioSession_updateCallDurationMetric(v2, 0);
  FigCFDictionarySetInt64();
  uint64_t v16 = *(void *)(v2 + 9200);
  if (v16)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1
        || (int v17 = _LogCategory_Initialize(), v16 = *(void *)(v2 + 9200), v17))
      {
        uint64_t v42 = v16;
        LogPrintF();
      }
    }
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFBooleanGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
  }
  uint64_t v18 = *(void *)(v2 + 9208);
  if (v18)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1
        || (int v19 = _LogCategory_Initialize(), v18 = *(void *)(v2 + 9208), v19))
      {
        uint64_t v42 = v18;
        LogPrintF();
      }
    }
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFBooleanGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
  }
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  CFDictionaryRef v20 = *(const __CFDictionary **)(v2 + 2352);
  if (v20)
  {
    CFDictionaryGetValue(v20, @"Histogram_GlitchDuration");
    fd_set v21 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"glitchDurationHistogram", v21);
    if (v21) {
      CFRelease(v21);
    }
    CFDictionaryGetValue(*(CFDictionaryRef *)(v2 + 2352), @"Histogram_StartupGlitchDuration");
    long long v22 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"startupGlitchDurationHistogram", v22);
    if (v22) {
      CFRelease(v22);
    }
    CFDictionaryGetValue(*(CFDictionaryRef *)(v2 + 2352), @"Histogram_NetworkTransitTime");
    long long v23 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"receiverRenderDeadlineHistogram", v23);
    if (v23) {
      CFRelease(v23);
    }
    CFDictionaryGetValue(*(CFDictionaryRef *)(v2 + 2352), @"Histogram_RenderRedundancyLevel");
    unint64_t v24 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"renderRedundancyLevelHistogram", v24);
    if (v24) {
      CFRelease(v24);
    }
  }
  CFAllocatorRef v25 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  int v26 = *(_DWORD *)(v2 + 156);
  if (v26 > 31)
  {
    if (v26 > 127)
    {
      if (v26 == 128)
      {
        int v27 = "NAN";
        goto LABEL_62;
      }
      if (v26 == 256)
      {
        int v27 = "IPsecBT";
        goto LABEL_62;
      }
    }
    else
    {
      if (v26 == 32)
      {
        int v27 = "BTLE";
        goto LABEL_62;
      }
      if (v26 == 64)
      {
        int v27 = "WFD";
        goto LABEL_62;
      }
    }
LABEL_55:
    int v27 = "?";
    if (v26 == 512) {
      int v27 = "IPSecWiFi";
    }
  }
  else
  {
    int v27 = "Enet";
    switch(v26)
    {
      case 1:
        break;
      case 2:
        int v27 = "WiFi";
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_55;
      case 4:
        int v27 = "AWDL";
        break;
      case 8:
        int v27 = "USB";
        break;
      default:
        if (v26 != 16) {
          goto LABEL_55;
        }
        int v27 = "Direct";
        break;
    }
  }
LABEL_62:
  CFStringRef v28 = CFStringCreateWithFormat(v25, 0, @"%s", v27, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
  int v29 = *(_DWORD *)(v2 + 72);
  if (v29 <= 63)
  {
    unsigned int v30 = "PCM";
    switch(v29)
    {
      case 1:
        goto LABEL_86;
      case 2:
        unsigned int v30 = "ALAC";
        goto LABEL_86;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_76;
      case 4:
        unsigned int v30 = "AAC-LC";
        goto LABEL_86;
      case 8:
        unsigned int v30 = "AAC-ELD";
        goto LABEL_86;
      default:
        if (v29 == 16)
        {
          unsigned int v30 = "H.264";
        }
        else
        {
          if (v29 != 32) {
            goto LABEL_76;
          }
          unsigned int v30 = "Opus";
        }
        break;
    }
    goto LABEL_86;
  }
  if (v29 <= 255)
  {
    if (v29 == 64)
    {
      unsigned int v30 = "HEVC";
      goto LABEL_86;
    }
    if (v29 == 128)
    {
      unsigned int v30 = "DDPLUS";
      goto LABEL_86;
    }
LABEL_76:
    if (v29 == 2048)
    {
      unsigned int v30 = "QLAC";
    }
    else
    {
      unsigned int v30 = "?";
      if (v29 == 4096) {
        unsigned int v30 = "APAC";
      }
    }
    goto LABEL_86;
  }
  if (v29 == 256)
  {
    unsigned int v30 = "QC3";
    goto LABEL_86;
  }
  if (v29 == 512)
  {
    unsigned int v30 = "QAAC-HE";
    goto LABEL_86;
  }
  if (v29 != 1024) {
    goto LABEL_76;
  }
  unsigned int v30 = "QAAC-LC";
LABEL_86:
  CFStringRef v31 = CFStringCreateWithFormat(v25, 0, @"%s", v30);
  uint64_t v32 = *(const void **)(v2 + 136);
  if (v32) {
    CFDictionarySetValue(Mutable, @"clientDeviceModel", v32);
  }
  uint64_t v33 = *(const void **)(v2 + 144);
  if (v33) {
    CFDictionarySetValue(Mutable, @"clientOSBuildVersionNumber", v33);
  }
  CFDictionarySetValue(Mutable, @"transportType", v28);
  CFDictionarySetValue(Mutable, @"codecType", v31);
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  unint64_t v35 = 600;
  if (v9 > 0x258) {
    unint64_t v35 = v9;
  }
  LODWORD(v34) = *(_DWORD *)(v2 + 76);
  unint64_t v36 = (unint64_t)((double)v34 * 0.1 * (double)v35);
  unint64_t v37 = 2 * v35;
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  unint64_t v38 = *(unsigned int *)(v2 + 9040);
  if (v37 <= v38) {
    LODWORD(v38) = v37;
  }
  *(_DWORD *)(v2 + 9040) = v38;
  FigCFDictionarySetInt64();
  unint64_t v39 = *(unsigned int *)(v2 + 9044);
  if (v39 >= v36) {
    LODWORD(v39) = v36;
  }
  *(_DWORD *)(v2 + 9044) = v39;
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  CFDictionarySetValue(Mutable, @"sessionType", @"AudioRealTime");
  CFStringRef v40 = (const __CFString *)CFPreferencesCopyValue(@"ExperimentGroup", @"com.apple.da", @"mobile", (CFStringRef)*MEMORY[0x263EFFE50]);
  CFStringRef v41 = v40;
  if (v40 && CFEqual(v40, @"carry")) {
    FigCFDictionarySetInt64();
  }
  APSRTCReportingAgentSendMediaEvent();
  APSRTCReportingAgentSendEvent();
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v28) {
    CFRelease(v28);
  }
  if (v31) {
    CFRelease(v31);
  }
  if (v41) {
    CFRelease(v41);
  }
  return 0;
}

CFMutableDictionaryRef APReceiverAudioSessionRealTimeCopyAudioBufferInfo(uint64_t a1, int *a2)
{
  if (a1)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      CFMutableArrayRef v4 = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
      if (v4)
      {
        CFRelease(v4);
        int v5 = 0;
      }
      else
      {
        int v5 = -72150;
        APSLogErrorAt();
        CFRelease(Mutable);
        CFMutableDictionaryRef Mutable = 0;
      }
    }
    else
    {
      int v5 = -72150;
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    int v5 = -72152;
  }
  if (a2) {
    *a2 = v5;
  }
  return Mutable;
}

uint64_t APReceiverAudioSessionRealTimeCopyProperty(uint64_t a1, CFTypeRef cf1, int *a3)
{
  int v13 = 0;
  if (!a1) {
    goto LABEL_30;
  }
  if (!cf1)
  {
    APSLogErrorAt();
    uint64_t result = 0;
    int v10 = -72151;
    goto LABEL_32;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, @"AudioFormat"))
  {
    uint64_t v6 = *(const void **)(a1 + 2288);
    goto LABEL_9;
  }
  if (CFEqual(cf1, @"CompressionType"))
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 72);
    goto LABEL_13;
  }
  if (CFEqual(cf1, @"MediaDataControlPort"))
  {
    uint64_t result = CFNumberCreateInt64();
    if (a3) {
      goto LABEL_20;
    }
    return result;
  }
  if (CFEqual(cf1, @"MaximumLatency"))
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 1616);
    goto LABEL_13;
  }
  if (CFEqual(cf1, @"MinimumLatency"))
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 1612);
    goto LABEL_13;
  }
  if (CFEqual(cf1, @"NumberOfChannels"))
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 80);
    goto LABEL_13;
  }
  if (CFEqual(cf1, @"PlatformAudioLatency"))
  {
    audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
    int v12 = *(_DWORD *)(a1 + 1608);
    audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = &v12;
    goto LABEL_13;
  }
  if (CFEqual(cf1, @"RTCPPort"))
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 1564);
    goto LABEL_13;
  }
  if (CFEqual(cf1, @"RTCPPortRemote"))
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 1568);
    goto LABEL_13;
  }
  if (!CFEqual(cf1, @"AudioPort"))
  {
    if (CFEqual(cf1, @"AudioNetworkInfo"))
    {
      uint64_t v6 = *(const void **)(a1 + 520);
      if (!v6)
      {
LABEL_30:
        APSLogErrorAt();
        uint64_t result = 0;
        int v10 = -72152;
        goto LABEL_32;
      }
    }
    else
    {
      if (CFEqual(cf1, @"SampleRate"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unint64_t v9 = (int *)(a1 + 76);
LABEL_13:
        uint64_t result = (uint64_t)CFNumberCreate(v8, kCFNumberSInt32Type, v9);
        if (!a3) {
          return result;
        }
        goto LABEL_20;
      }
      if (!CFEqual(cf1, @"IsUsingScreen"))
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t result = 0;
        int v10 = -72154;
        goto LABEL_32;
      }
      unint64_t v11 = (const void **)MEMORY[0x263EFFB40];
      if (!*(unsigned char *)(a1 + 2304)) {
        unint64_t v11 = (const void **)MEMORY[0x263EFFB38];
      }
      uint64_t v6 = *v11;
    }
LABEL_9:
    uint64_t result = (uint64_t)CFRetain(v6);
    if (!a3) {
      return result;
    }
    goto LABEL_20;
  }
  if (!*(unsigned char *)(a1 + 97))
  {
LABEL_40:
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unint64_t v9 = (int *)(a1 + 512);
    goto LABEL_13;
  }
  if (*(void *)(a1 + 520))
  {
    *(_DWORD *)(a1 + 512) = CFDictionaryGetInt64();
    goto LABEL_40;
  }
  APSLogErrorAt();
  uint64_t result = 0;
  int v10 = -72153;
LABEL_32:
  int v13 = v10;
  if (a3) {
LABEL_20:
  }
    *a3 = v13;
  return result;
}

uint64_t APReceiverAudioSessionRealTimeSetProperty(uint64_t a1, CFTypeRef cf1, uint64_t a3)
{
  unsigned int v12 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    return -72152;
  }
  if (!cf1 || !a3)
  {
    APSLogErrorAt();
    return -72151;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(cf1, @"VolumeLinear"))
  {
    if (CFEqual(cf1, @"PlatformAudioLatency"))
    {
      int v8 = CFGetInt64Ranged();
      audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
      *(_DWORD *)(a1 + 1608) = v8;
LABEL_14:
      audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
      return v12;
    }
    if (CFEqual(cf1, @"RTCMetadata"))
    {
      APSRTCReportingAgentSendMediaEvent();
      return v12;
    }
    if (CFEqual(cf1, @"timelineOffset"))
    {
      int v10 = CFGetInt64();
      if ((v10 - 251) > 0xFFFFFE0A)
      {
        audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
        gAirTunesRelativeTimeOffset = v10;
        goto LABEL_14;
      }
      APSLogErrorAt();
      return -6710;
    }
    else
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return -72154;
    }
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unsigned int v12 = APReceiverAudioSessionPlatformSetProperty(*(void **)a1, v6, @"RASP::VolumeLinear", v7, a3);
  if (v12) {
    APSLogErrorAt();
  }
  return v12;
}

uint64_t APReceiverStatsCollectorGetTypeID()
{
  if (APReceiverStatsCollectorGetTypeID_once != -1) {
    dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_446);
  }
  return APReceiverStatsCollectorGetTypeID_typeID;
}

uint64_t __APReceiverStatsCollectorGetTypeID_block_invoke()
{
  APReceiverStatsCollectorGetTypeID_statsCollectorClass = 0;
  *(void *)algn_268402AC8 = "APReceiverStatsCollector";
  qword_268402AD0 = (uint64_t)aprstats_Init;
  unk_268402AD8 = 0;
  qword_268402AE0 = (uint64_t)aprstats_Finalize;
  unk_268402AE8 = 0;
  qword_268402AF0 = 0;
  unk_268402AF8 = 0;
  qword_268402B00 = (uint64_t)aprstats_CopyDebugDescription;
  uint64_t result = _CFRuntimeRegisterClass();
  APReceiverStatsCollectorGetTypeID_typeID = result;
  return result;
}

CFStringRef aprstats_CopyDebugDescription(const void *a1)
{
  ASPrintF();
  CFAllocatorRef v2 = CFGetAllocator(a1);
  CFStringRef v3 = CFStringCreateWithFormat(v2, 0, @"<APReceiverStatsCollector %p %s>", a1, 0);
  free(0);
  return v3;
}

void aprstats_Finalize(void *a1)
{
  if (gLogCategory_APReceiverStatsCollector <= 30
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APReceiverStatsCollectorDisableHUD((uint64_t)a1);
  CFAllocatorRef v2 = (const void *)a1[25];
  if (v2)
  {
    CFRelease(v2);
    a1[25] = 0;
  }
  CFStringRef v3 = (const void *)a1[6];
  if (v3)
  {
    CFRelease(v3);
    a1[6] = 0;
  }
  CFMutableArrayRef v4 = (const void *)a1[15];
  if (v4)
  {
    CFRelease(v4);
    a1[15] = 0;
  }
  int v5 = (const void *)a1[16];
  if (v5)
  {
    CFRelease(v5);
    a1[16] = 0;
  }
  uint64_t v6 = (const void *)a1[17];
  if (v6)
  {
    CFRelease(v6);
    a1[17] = 0;
  }
  uint64_t v7 = (const void *)a1[34];
  if (v7)
  {
    CFRelease(v7);
    a1[34] = 0;
  }
  int v8 = a1[2];
  if (v8)
  {
    dispatch_release(v8);
    a1[2] = 0;
  }
}

void APReceiverStatsCollectorDisableHUD(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(NSObject **)(a1 + 16);
    if (v1)
    {
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = __APReceiverStatsCollectorDisableHUD_block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0l;
      block[4] = a1;
      dispatch_sync(v1, block);
    }
  }
}

uint64_t __APReceiverStatsCollectorDisableHUD_block_invoke(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (*(unsigned char *)(v1 + 256))
  {
    uint64_t v2 = result;
    [MEMORY[0x263F158F8] begin];
    [MEMORY[0x263F158F8] setDisableActions:1];
    [*(id *)(v1 + 32) removeFromSuperlayer];

    *(void *)(v1 + 32) = 0;
    [*(id *)(v1 + 40) removeFromSuperlayer];

    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 24) = 0;
    CFStringRef v3 = *(void **)(v1 + 264);
    if (v3)
    {
      objc_msgSend((id)objc_msgSend(v3, "layer"), "removeFromSuperlayer");

      *(void *)(v1 + 264) = 0;
    }
    uint64_t result = [MEMORY[0x263F158F8] commit];
    if (gLogCategory_APReceiverStatsCollector <= 30)
    {
      if (gLogCategory_APReceiverStatsCollector != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    *(unsigned char *)(*(void *)(v2 + 32) + 256) = 0;
  }
  return result;
}

double aprstats_Init(uint64_t a1)
{
  *(void *)(a1 + 272) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t APReceiverStatsCollectorCreate()
{
  if (!IsAppleInternalBuild() || !FigGetCFPreferenceNumberWithDefault()) {
    return 0;
  }
  if (gLogCategory_APReceiverStatsCollector <= 30
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APReceiverStatsCollectorGetTypeID_once != -1) {
    dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_446);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    dispatch_queue_t v1 = dispatch_queue_create("com.apple.airplay.receiver.statscollector", 0);
    *(void *)(Instance + 16) = v1;
    if (v1)
    {
      *(_DWORD *)(Instance + 260) = 0;
      *(_DWORD *)(Instance + 88) = APSScreenLatencyMs();
      *(_OWORD *)(Instance + 96) = xmmword_22B497790;
      *(unsigned char *)(Instance + 112) = 0;
      if (gLogCategory_APReceiverStatsCollector <= 30
        && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return Instance;
    }
  }
  APSLogErrorAt();
  if (gLogCategory_APReceiverStatsCollector <= 90
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Instance)
  {
    CFRelease((CFTypeRef)Instance);
    return 0;
  }
  return Instance;
}

void APReceiverStatsCollectorSetScreenOptions(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v2 = *(NSObject **)(a1 + 16);
      v3[0] = MEMORY[0x263EF8330];
      v3[1] = 3221225472;
      v3[2] = __APReceiverStatsCollectorSetScreenOptions_block_invoke;
      v3[3] = &__block_descriptor_48_e5_v8__0l;
      v3[4] = a1;
      v3[5] = a2;
      dispatch_sync(v2, v3);
    }
  }
}

uint64_t __APReceiverStatsCollectorSetScreenOptions_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (gLogCategory_APReceiverStatsCollector <= 30
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigCFDictionaryGetInt32IfPresent();
  *(void *)(v1 + 248) = 0;
  uint64_t v2 = *(const void **)(v1 + 120);
  if (v2) {
    CFRelease(v2);
  }
  *(void *)(v1 + 120) = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  CFStringAppendF();
  CFStringAppendF();
  CFArrayGetTypeID();
  TypedCFArrayRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
  if (TypedValue) {
    TypedCFArrayRef Value = (const __CFArray *)CFArrayGetCount(TypedValue);
  }
  if ((unint64_t)TypedValue >= 0x10) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = (uint64_t)TypedValue;
  }
  if (v4)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      CFDictionaryGetTypeID();
      if (CFArrayGetTypedValueAtIndex())
      {
        CFStringGetTypeID();
        uint64_t v6 = (const void *)CFDictionaryGetTypedValue();
        if (v6)
        {
          CFEqual(v6, @"HIDIn");
          CFStringAppendF();
          ++*(_DWORD *)(v1 + 248);
        }
      }
    }
  }
  CFStringAppendF();
  CFStringAppendF();
  CFStringAppendF();
  CFStringAppendF();
  *(_DWORD *)(v1 + 252) += 4;
  if (FigSupportsIOSurfaceTimingInfo())
  {
    CFStringAppendF();
    CFStringAppendF();
    CFStringAppendF();
    CFStringAppendF();
    CFStringAppendF();
  }
  CFStringAppendF();
  CFStringAppendF();
  CFStringAppendF();
  return CFStringAppendF();
}

void APReceiverStatsCollectorSetIfName(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetIfName_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

uint64_t __APReceiverStatsCollectorSetIfName_block_invoke()
{
  return __strlcpy_chk();
}

void APReceiverStatsCollectorSetHUDOptions(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetHUDOptions_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void __APReceiverStatsCollectorSetHUDOptions_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(const void **)(a1 + 40);
  CFStringRef v3 = *(const void **)(v2 + 48);
  *(void *)(v2 + 48) = v1;
  if (v1) {
    CFRetain(v1);
  }
  if (v3)
  {
    CFRelease(v3);
  }
}

void APReceiverStatsCollectorEnableLogging(uint64_t a1)
{
}

void aprstats_logEnable(uint64_t a1, char a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __aprstats_logEnable_block_invoke;
    v3[3] = &__block_descriptor_41_e5_v8__0l;
    v3[4] = a1;
    char v4 = a2;
    dispatch_sync(v2, v3);
  }
}

uint64_t __aprstats_logEnable_block_invoke(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 257) = *(unsigned char *)(result + 40);
  return result;
}

void APReceiverStatsCollectorDisableLogging(uint64_t a1)
{
}

void APReceiverStatsCollectorEnableHUD(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorEnableHUD_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a2;
    void v3[5] = a1;
    dispatch_sync(v2, v3);
  }
}

uint64_t __APReceiverStatsCollectorEnableHUD_block_invoke(uint64_t result)
{
  uint64_t v1 = result;
  CFDictionaryRef v3 = *(const __CFDictionary **)(result + 32);
  uint64_t v2 = *(void *)(result + 40);
  if (!v3) {
    CFDictionaryRef v3 = *(const __CFDictionary **)(v2 + 48);
  }
  if (*(unsigned char *)(v2 + 256)) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v3 == 0;
  }
  if (!v4)
  {
    id v5 = objc_alloc_init(MEMORY[0x263F086B0]);
    int v6 = *(_DWORD *)(v2 + 260);
    CFArrayRef Value = (void *)CFDictionaryGetValue(v3, @"PresentationLayer");
    if (Value)
    {
      int v8 = Value;
      int Int32IfPresent = FigCFDictionaryGetInt32IfPresent();
      *(void *)(v2 + 24) = v8;
      [MEMORY[0x263F158F8] begin];
      [MEMORY[0x263F158F8] setDisableActions:1];
      int v10 = objc_alloc_init(APHUDLayer);
      *(void *)(v2 + 32) = v10;
      [(APHUDLayer *)v10 setName:@"HUDLayer"];
      objc_msgSend(*(id *)(v2 + 32), "setFrame:", 40.0, 40.0, 400.0, 470.0);
      [*(id *)(v2 + 32) setEdgeAntialiasingMask:0];
      if (Int32IfPresent) {
        [*(id *)(v2 + 32) setZPosition:(double)0];
      }
      [*(id *)(v2 + 32) addLine:@" Version:\t" withColorIndex:14];
      [*(id *)(v2 + 32) addLine:@" Interface:\t" withColorIndex:14];
      unint64_t v11 = *(void **)(v2 + 32);
      if (v6)
      {
        unsigned int v12 = @" TReg(R):\t";
      }
      else
      {
        [v11 addLine:@" TReg(S):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" TReg(R):\t" withColorIndex:14];
        unint64_t v11 = *(void **)(v2 + 32);
        unsigned int v12 = @" S WxH:\t";
      }
      [v11 addLine:v12 withColorIndex:14];
      [*(id *)(v2 + 32) addLine:@" D WxH:\t" withColorIndex:14];
      [*(id *)(v2 + 32) addLine:@" Codec:\t" withColorIndex:14];
      int v13 = *(void **)(v2 + 32);
      if (v6)
      {
        [v13 addLine:@" TV-FPS:\t" withColorIndex:0];
        [*(id *)(v2 + 32) addLine:@" TV-DPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" RSSI(R):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Chan(R):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Seq(R1):\t" withColorIndex:14];
        unint64_t v14 = *(void **)(v2 + 32);
        unint64_t v15 = @" Seq(R2):\t";
        uint64_t v16 = 14;
      }
      else
      {
        [v13 addLine:@" Chroma:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" P-FPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" W-FPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" SubS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" B4En:\t" withColorIndex:1];
        [*(id *)(v2 + 32) addLine:@" FPS Th:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Q-FPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" S-FPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" R-FPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" TV-FPS:\t" withColorIndex:0];
        [*(id *)(v2 + 32) addLine:@" TV-DPS:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Est BW:\t" withColorIndex:3];
        [*(id *)(v2 + 32) addLine:@" Act BW:\t" withColorIndex:4];
        [*(id *)(v2 + 32) addLine:@" Loss:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" RTT:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Latency:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Ahead:\t" withColorIndex:2];
        [*(id *)(v2 + 32) addLine:@" EnDp:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" IdEn:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" IdDp:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" CPU:\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" RSSI(S):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" RSSI(R):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Chan(S):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Chan(R):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Seq(S1):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Seq(S2):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Seq(R1):\t" withColorIndex:14];
        [*(id *)(v2 + 32) addLine:@" Seq(R2):\t" withColorIndex:14];
        unint64_t v14 = *(void **)(v2 + 32);
        unint64_t v15 = @" SO Drops:\t";
        uint64_t v16 = 5;
      }
      [v14 addLine:v15 withColorIndex:v16];
      [*(id *)(v2 + 32) addLine:@" A Buff\t" withColorIndex:14];
      [*(id *)(v2 + 32) addLine:@" A Lost:\t" withColorIndex:14];
      [*(id *)(v2 + 32) addLine:@" A Unrec:\t" withColorIndex:14];
      [*(id *)(v2 + 32) addLine:@" A Late:\t" withColorIndex:14];
      int v17 = (const void *)CGColorCreateWithRGB();
      [*(id *)(v2 + 32) setBackgroundColor:v17];
      CFRelease(v17);
      objc_msgSend(*(id *)(v2 + 32), "setGeometryFlipped:", objc_msgSend(*(id *)(v2 + 24), "contentsAreFlipped") ^ 1);
      [*(id *)(v2 + 24) addSublayer:*(void *)(v2 + 32)];
      uint64_t v18 = objc_alloc_init(APGraphLayer);
      *(void *)(v2 + 40) = v18;
      [(APGraphLayer *)v18 setName:@"GraphLayer"];
      objc_msgSend(*(id *)(v2 + 40), "setFrame:", 40.0, 520.0, 195.0, 150.0);
      [*(id *)(v2 + 40) setBorderWidth:1.0];
      [*(id *)(v2 + 40) setEdgeAntialiasingMask:0];
      if (Int32IfPresent) {
        [*(id *)(v2 + 40) setZPosition:(double)0];
      }
      [*(id *)(v2 + 40) setUpGraphs:6];
      LODWORD(v19) = 1116471296;
      [*(id *)(v2 + 40) setUpGraph:0 min:30 max:0.0 numValues:v19];
      if (!v6)
      {
        LODWORD(v20) = 1116471296;
        [*(id *)(v2 + 40) setUpGraph:1 min:30 max:0.0 numValues:v20];
        LODWORD(v21) = 1120403456;
        LODWORD(v22) = -20.0;
        [*(id *)(v2 + 40) setUpGraph:2 min:30 max:v22 numValues:v21];
        LODWORD(v23) = 20.0;
        [*(id *)(v2 + 40) setUpGraph:3 min:30 max:0.0 numValues:v23];
        LODWORD(v24) = 25.0;
        [*(id *)(v2 + 40) setUpGraph:4 min:30 max:0.0 numValues:v24];
        LODWORD(v25) = 30.0;
        [*(id *)(v2 + 40) setUpGraph:5 min:30 max:0.0 numValues:v25];
      }
      objc_msgSend(*(id *)(v2 + 40), "setGeometryFlipped:", objc_msgSend(*(id *)(v2 + 24), "contentsAreFlipped") ^ 1);
      [*(id *)(v2 + 24) addSublayer:*(void *)(v2 + 40)];
      if (FigGetCFPreferenceNumberWithDefault())
      {
        int v26 = [APLatencyVisualizationLayer alloc];
        [*(id *)(v2 + 40) zPosition];
        id v28 = [(APLatencyVisualizationLayer *)v26 init:aprstats_getSynchronizedNetworkTime timeContext:v2 zPosition:(int)(v27 + 3.0)];
        objc_msgSend(v28, "setFrame:", *(double *)(v2 + 160), *(double *)(v2 + 168), *(double *)(v2 + 176), *(double *)(v2 + 184));
        [*(id *)(v2 + 24) addSublayer:v28];
        *(void *)(v2 + 264) = [[APLatencyVisualizationTrackingController alloc] init:v28];

        if (gLogCategory_APReceiverStatsCollector <= 30
          && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      [MEMORY[0x263F158F8] commit];
      if (gLogCategory_APReceiverStatsCollector <= 30
        && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
      {
        [*(id *)(v2 + 32) frame];
        uint64_t v30 = v29;
        [*(id *)(v2 + 32) frame];
        uint64_t v32 = v31;
        [*(id *)(v2 + 32) frame];
        uint64_t v34 = v33;
        [*(id *)(v2 + 32) frame];
        uint64_t v38 = v34;
        uint64_t v39 = v35;
        uint64_t v36 = v30;
        uint64_t v37 = v32;
        LogPrintF();
      }
      double result = objc_msgSend(v5, "drain", v36, v37, v38, v39);
      *(unsigned char *)(*(void *)(v1 + 40) + 256) = 1;
    }
    else
    {
      APSLogErrorAt();
      return [v5 drain];
    }
  }
  return result;
}

double aprstats_getSynchronizedNetworkTime(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 272);
  if (v1)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v3 = v2 ? v2 : 0;
    BOOL v4 = *(unsigned int (**)(uint64_t, uint64_t *))(v3 + 8);
    if (v4)
    {
      if (!v4(v1, &v6)) {
        return (double)(int)v8 + (double)v7 * 5.42101086e-20;
      }
    }
  }
  APSLogErrorAt();
  return 0.0;
}

void APReceiverStatsCollectorSetMirroringMode(uint64_t a1, int a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetMirroringMode_block_invoke;
    v3[3] = &__block_descriptor_44_e5_v8__0l;
    v3[4] = a1;
    int v4 = a2;
    dispatch_sync(v2, v3);
  }
}

uint64_t __APReceiverStatsCollectorSetMirroringMode_block_invoke(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 260) = *(_DWORD *)(result + 40);
  return result;
}

void APReceiverStatsCollectorShowStats(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APReceiverStatsCollectorShowStats_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = a1;
    dispatch_sync(v1, block);
  }
}

void __APReceiverStatsCollectorShowStats_block_invoke(uint64_t a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 257) || *(unsigned char *)(v1 + 256))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    double v3 = Current - *(double *)(v1 + 232);
    if (v3 >= 0.5)
    {
      double v4 = *(double *)(v1 + 104);
      int v5 = *(_DWORD *)(v1 + 260);
      *(double *)(v1 + 232) = Current;
      FigCFDictionaryGetDoubleIfPresent();
      FigCFDictionaryGetDoubleIfPresent();
      FigCFDictionaryGetDoubleIfPresent();
      FigCFDictionaryGetDoubleIfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      FigCFDictionaryGetInt32IfPresent();
      int v48 = *(_DWORD *)(v1 + 72);
      int v6 = v48 - *(_DWORD *)(v1 + 76);
      *(_DWORD *)(v1 + 76) = v48;
      CFDictionaryRef v7 = *(const __CFDictionary **)(v1 + 136);
      if (v7)
      {
        CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(*(CFDictionaryRef *)(v1 + 136), (const void *)*MEMORY[0x263F124A0]);
        if (Value)
        {
          CFArrayRef v9 = Value;
          CFTypeID v10 = CFGetTypeID(Value);
          if (v10 == CFArrayGetTypeID())
          {
            CFIndex Count = CFArrayGetCount(v9);
            if (Count >= 1)
            {
              CFIndex v12 = Count;
              CFIndex v13 = 0;
              while (1)
              {
                CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v9, v13);
                int v54 = 0;
                if (FigCFDictionaryGetInt32IfPresent()) {
                  break;
                }
                if (v12 == ++v13) {
                  goto LABEL_13;
                }
              }
              CFDictionaryRef v7 = ValueAtIndex;
            }
          }
        }
      }
LABEL_13:
      if (FigCFDictionaryGetInt32IfPresent())
      {
        uint64_t v47 = (int)((double)(v48 - *(_DWORD *)(v1 + 80)) / v3 + 0.5);
        *(_DWORD *)(v1 + 80) = v48;
      }
      else
      {
        uint64_t v47 = 0;
      }
      if (FigCFDictionaryGetInt32IfPresent())
      {
        uint64_t v46 = (int)((double)(v48 - *(_DWORD *)(v1 + 84)) / v3 + 0.5);
        *(_DWORD *)(v1 + 84) = v48;
      }
      else
      {
        uint64_t v46 = 0;
      }
      if (v7) {
        CFDictionaryGetValue(v7, (const void *)*MEMORY[0x263F12498]);
      }
      uint64_t v44 = (int)((double)v6 / v3 + 0.5);
      uint64_t v43 = *(_DWORD *)(v1 + 88) - ((int)v4 & ((int)v4 >> 31));
      uint64_t add_explicit = atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 60), 0, memory_order_relaxed);
      atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 60), -(int)add_explicit, memory_order_relaxed);
      uint64_t v16 = atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 64), 0, memory_order_relaxed);
      atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 64), -(int)v16, memory_order_relaxed);
      uint64_t v17 = atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 68), 0, memory_order_relaxed);
      atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 68), -(int)v17, memory_order_relaxed);
      if (*(unsigned char *)(v1 + 256))
      {
        uint64_t v45 = (int)v4;
        id v42 = objc_alloc_init(MEMORY[0x263F086B0]);
        int v52 = 0;
        int v53 = 0;
        uint64_t v51 = 0;
        uint64_t v50 = 0;
        if (*(void *)(v1 + 128))
        {
          CFDictionaryGetValue(*(CFDictionaryRef *)(v1 + 128), @"trafficRegistration");
          FigCFDictionaryGetBooleanIfPresent();
          FigCFDictionaryGetBooleanIfPresent();
          FigCFDictionaryGetInt32IfPresent();
          FigCFDictionaryGetInt32IfPresent();
          LODWORD(v49) = 0;
        }
        CFTypeRef v49 = 0;
        APTransportGetSharedTransport();
        uint64_t CMBaseObject = FigTransportGetCMBaseObject();
        uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v19) {
          uint64_t v20 = v19;
        }
        else {
          uint64_t v20 = 0;
        }
        double v21 = *(unsigned int (**)(uint64_t, void, void, CFTypeRef *))(v20 + 48);
        if (v21 && !v21(CMBaseObject, *MEMORY[0x263F20DD0], *MEMORY[0x263EFFB08], &v49))
        {
          APTransportTrafficRegistrarGetRegistration();
          APTransportTrafficRegistrarGetRSSI();
          APTransportTrafficRegistrarGetWifiChannel();
          APTransportTrafficRegistrarGetAWDLChannelSequence();
        }
        if (v49) {
          CFRelease(v49);
        }
        [MEMORY[0x263F158F8] begin];
        [MEMORY[0x263F158F8] setDisableActions:1];
        if (*(_DWORD *)(v1 + 260)) {
          double v22 = "Mirroring 2";
        }
        else {
          double v22 = "Mirroring 1";
        }
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", 0, @"%s", v22);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", 1, @"%s", v1 + 208);
        if (v5)
        {
          uint64_t v23 = 2;
        }
        else
        {
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", 2, @"%s%s", "", "");
          uint64_t v23 = 3;
        }
        uint64_t v24 = (v23 + 1);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v23, @"%s%s", "", "");
        if (!v5)
        {
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v23 + 1), @"%.0fx%.0f", *(void *)(v1 + 144), *(void *)(v1 + 152));
          uint64_t v24 = (v23 + 2);
        }
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v24, @"%.0fx%.0f", *(void *)(v1 + 176), *(void *)(v1 + 184));
        uint64_t v25 = (v24 + 2);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 1), @"%c%c%c%c", HIBYTE(*(_DWORD *)(v1 + 192)), BYTE2(*(_DWORD *)(v1 + 192)), BYTE1(*(_DWORD *)(v1 + 192)), *(_DWORD *)(v1 + 192));
        if (!v5)
        {
          int v26 = *(__CFString **)(v1 + 200);
          if (!v26) {
            int v26 = &stru_26DEA1830;
          }
          [*(id *)(v1 + 32) setValueAtIndex:(v24 + 2), @"%@", v26 format];
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 3), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 4), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 5), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 6), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 7), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v24 | 8, @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 9), @"%u", 0);
          uint64_t v25 = (v24 + 11);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v24 + 10), @"%u", v44);
        }
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v25, @"%u", v47);
        uint64_t v27 = (v25 + 2);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 1), @"%u", v46);
        if (!v5)
        {
          [*(id *)(v1 + 32) setValueAtIndex:(v25 + 2), @"%.2f", 0.0 / 1000000.0 format];
          [*(id *)(v1 + 32) setValueAtIndex:(v25 + 3), @"%.2f", 0.0 / 1000000.0 format];
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 4), @"%u%%", (int)(0.0 * 100.0));
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 5), @"%u ms", 0);
          [*(id *)(v1 + 32) setValueAtIndex:(v25 + 6) format:v43];
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 7), @"%d", v45);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 8), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 9), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 10), @"%u", 0);
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 11), @"%u", (int)0.0);
          uint64_t v27 = (v25 + 13);
          int v5 = 0;
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v25 + 12), @"%d", 0);
        }
        uint64_t v28 = (v27 + 1);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v27, @"%d", 0);
        if (!v5)
        {
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v27 + 1), @"%d", 0);
          uint64_t v28 = (v27 + 2);
        }
        uint64_t v29 = (v28 + 1);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v28, @"%d", 0);
        if (!v5)
        {
          uint64_t v30 = v52;
          if (!v52) {
            uint64_t v30 = "N/A";
          }
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v28 + 1), @"%s", v30);
          uint64_t v29 = (v28 + 3);
          uint64_t v31 = v53;
          if (!v53) {
            uint64_t v31 = "N/A";
          }
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v28 + 2), @"%s", v31);
        }
        uint64_t v32 = v50;
        if (!v50) {
          uint64_t v32 = "N/A";
        }
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v29, @"%s", v32);
        uint64_t v33 = (v29 + 2);
        uint64_t v34 = v51;
        if (!v51) {
          uint64_t v34 = "N/A";
        }
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v29 + 1), @"%s", v34);
        if (!v5)
        {
          objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v29 + 2), @"%u", 0);
          uint64_t v33 = (v29 + 3);
        }
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", v33, @"%u ms", *(unsigned int *)(v1 + 56));
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v33 + 1), @"%u", add_explicit);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v33 + 2), @"%u", v16);
        objc_msgSend(*(id *)(v1 + 32), "setValueAtIndex:format:", (v33 + 3), @"%u", v17);
        [*(id *)(v1 + 32) setNeedsDisplay];
        [*(id *)(v1 + 32) display];
        *(float *)&double v35 = (float)(int)v47;
        [*(id *)(v1 + 40) updateValue:0 value:v35];
        if (!v5)
        {
          *(float *)&double v36 = (float)0;
          [*(id *)(v1 + 40) updateValue:1 value:v36];
          *(float *)&double v37 = (float)(int)v45;
          [*(id *)(v1 + 40) updateValue:2 value:v37];
          HIDWORD(v38) = 0;
          *(float *)&double v38 = (float)0.0 / 1000000.0;
          [*(id *)(v1 + 40) updateValue:3 value:v38];
          HIDWORD(v39) = 0;
          *(float *)&double v39 = (float)0.0 / 1000000.0;
          [*(id *)(v1 + 40) updateValue:4 value:v39];
          *(float *)&double v40 = (float)0;
          [*(id *)(v1 + 40) updateValue:5 value:v40];
        }
        [*(id *)(v1 + 40) setNeedsDisplay];
        [*(id *)(v1 + 40) display];
        CFStringRef v41 = *(void **)(v1 + 264);
        if (v41) {
          objc_msgSend((id)objc_msgSend(v41, "layer"), "setFrame:", *(double *)(v1 + 160), *(double *)(v1 + 168), *(double *)(v1 + 176), *(double *)(v1 + 184));
        }
        [MEMORY[0x263F158F8] commit];
        free(v52);
        free(v53);
        free(v50);
        free(v51);
        [v42 drain];
      }
      if (*(unsigned char *)(v1 + 257)
        && gLogCategory_APReceiverStatsCollector <= 50
        && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
}

uint64_t aprstats_createAWDLSequenceLines(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result = AirPlayCreateAWDLChannelSequenceString();
  if (a3 >= 9)
  {
    return AirPlayCreateAWDLChannelSequenceString();
  }
  return result;
}

uint64_t APReceiverStatsCollectorUpdateAudioBufferDuration(uint64_t result, int a2)
{
  if (result) {
    *(_DWORD *)(result + 56) = a2;
  }
  return result;
}

uint64_t APReceiverStatsCollectorAddAudioLostPacketCount(uint64_t result, unsigned int a2)
{
  if (result) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(result + 60), a2, memory_order_relaxed);
  }
  return result;
}

uint64_t APReceiverStatsCollectorAddAudioUnrecoveredPacketCount(uint64_t result, unsigned int a2)
{
  if (result) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(result + 64), a2, memory_order_relaxed);
  }
  return result;
}

uint64_t APReceiverStatsCollectorAddAudioLatePacketCount(uint64_t result, unsigned int a2)
{
  if (result) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(result + 68), a2, memory_order_relaxed);
  }
  return result;
}

void APReceiverStatsCollectorUpdateVideoSizes(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  if (a1)
  {
    CFDictionaryRef v7 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APReceiverStatsCollectorUpdateVideoSizes_block_invoke;
    block[3] = &__block_descriptor_88_e5_v8__0l;
    block[4] = a1;
    *(double *)&void block[5] = a2;
    *(double *)&void block[6] = a3;
    *(double *)&void block[7] = a4;
    *(double *)&void block[8] = a5;
    *(double *)&block[9] = a6;
    *(double *)&block[10] = a7;
    dispatch_sync(v7, block);
  }
}

void APReceiverStatsCollectorUpdateVideoCodec(uint64_t a1, int a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorUpdateVideoCodec_block_invoke;
    v3[3] = &__block_descriptor_44_e5_v8__0l;
    v3[4] = a1;
    int v4 = a2;
    dispatch_sync(v2, v3);
  }
}

uint64_t __APReceiverStatsCollectorUpdateVideoCodec_block_invoke(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 192) = *(_DWORD *)(result + 40);
  return result;
}

void APReceiverStatsCollectorUpdateVideoFormatDescription(uint64_t a1, const opaqueCMFormatDescription *a2)
{
  if (a1 && a2)
  {
    CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
    CFDictionaryRef Extension = (const __CFDictionary *)CMFormatDescriptionGetExtension(a2, (CFStringRef)*MEMORY[0x263F00E90]);
    unsigned __int8 v15 = 0;
    if (Extension)
    {
      CFDictionaryRef v6 = Extension;
      if (CFDictionaryGetValue(Extension, @"hvcC"))
      {
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        __int16 v12 = 0;
        if (!FigHEVCBridge_GetHEVCParameterSetAtIndex()
          && !FigHEVCBridge_GetSPSChromaFormatAndBitDepths())
        {
          if (v15 > 3uLL) {
            CFStringAppendFormat(Mutable, 0, @"??? (%d)", v15);
          }
          else {
            CFStringAppendFormat(Mutable, 0, @"%s", off_2648950C8[v15]);
          }
          if (HIBYTE(v12) == v12) {
            CFStringAppendFormat(Mutable, 0, @" (%d-bit)", HIBYTE(v12));
          }
          else {
            CFStringAppendFormat(Mutable, 0, @" (%d-bit luma %d-bit chroma)", HIBYTE(v12), v12);
          }
        }
        goto LABEL_22;
      }
      CFDataRef Value = (const __CFData *)CFDictionaryGetValue(v6, @"avcC");
      if (Value)
      {
        int v8 = CFDataGetBytePtr(Value)[1];
        switch(v8)
        {
          case 100:
            uint64_t v9 = 1;
            goto LABEL_20;
          case 244:
            uint64_t v9 = 3;
            goto LABEL_20;
          case 122:
            uint64_t v9 = 2;
LABEL_20:
            CFStringAppendFormat(Mutable, 0, @"%s", off_2648950C8[v9]);
            goto LABEL_22;
        }
        CFStringAppendFormat(Mutable, 0, @"???");
      }
    }
LABEL_22:
    CFTypeID v10 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APReceiverStatsCollectorUpdateVideoFormatDescription_block_invoke;
    block[3] = &__block_descriptor_56_e5_v8__0l;
    block[4] = a1;
    void block[5] = Mutable;
    void block[6] = a2;
    dispatch_sync(v10, block);
    if (Mutable) {
      CFRelease(Mutable);
    }
  }
}

uint64_t __APReceiverStatsCollectorUpdateVideoFormatDescription_block_invoke(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(const void **)(a1 + 40);
  int v4 = *(const void **)(v3 + 200);
  *(void *)(v3 + 200) = v2;
  if (v2) {
    CFRetain(v2);
  }
  if (v4) {
    CFRelease(v4);
  }
  uint64_t result = CMFormatDescriptionGetMediaSubType(*(CMFormatDescriptionRef *)(a1 + 48));
  *(_DWORD *)(*(void *)(a1 + 32) + 192) = result;
  return result;
}

void APReceiverStatsCollectorUpdateVideoPerformanceStats(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorUpdateVideoPerformanceStats_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    void v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void __APReceiverStatsCollectorUpdateVideoPerformanceStats_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(const void **)(a1 + 40);
  uint64_t v3 = *(const void **)(v2 + 136);
  *(void *)(v2 + 136) = v1;
  if (v1) {
    CFRetain(v1);
  }
  if (v3)
  {
    CFRelease(v3);
  }
}

void APReceiverStatsCollectorUpdateSenderStats(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorUpdateSenderStats_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    void v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void __APReceiverStatsCollectorUpdateSenderStats_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(const void **)(a1 + 40);
  uint64_t v3 = *(const void **)(v2 + 128);
  *(void *)(v2 + 128) = v1;
  if (v1) {
    CFRetain(v1);
  }
  if (v3)
  {
    CFRelease(v3);
  }
}

void APReceiverStatsCollectorGetFrameCounters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    int v4 = *(NSObject **)(a1 + 16);
    v5[0] = MEMORY[0x263EF8330];
    v5[1] = 3221225472;
    v5[2] = __APReceiverStatsCollectorGetFrameCounters_block_invoke;
    v5[3] = &__block_descriptor_64_e5_v8__0l;
    v5[4] = a2;
    v5[5] = a1;
    v5[6] = a3;
    v5[7] = a4;
    dispatch_sync(v4, v5);
  }
}

void *__APReceiverStatsCollectorGetFrameCounters_block_invoke(void *result)
{
  uint64_t v1 = (_DWORD *)result[4];
  if (v1) {
    *uint64_t v1 = *(_DWORD *)(result[5] + 72);
  }
  uint64_t v2 = (_DWORD *)result[6];
  if (v2) {
    *uint64_t v2 = *(_DWORD *)(result[5] + 80);
  }
  uint64_t v3 = (_DWORD *)result[7];
  if (v3) {
    *uint64_t v3 = *(_DWORD *)(result[5] + 84);
  }
  return result;
}

void __APReceiverStatsCollectorUpdateAndCopyFrameStats_block_invoke(void *a1)
{
  uint64_t v1 = a1[4];
  uint64_t v2 = a1[5];
  uint64_t v3 = (__CFDictionary **)a1[6];
  uint64_t v4 = mach_absolute_time();
  ++*(_DWORD *)(v1 + 72);
  if (*(void *)v2 >= v4) {
    int v5 = UpTicksToMilliseconds();
  }
  else {
    int v5 = -(int)UpTicksToMilliseconds();
  }
  if (*(unsigned char *)(v1 + 112))
  {
    *(double *)(v1 + 104) = *(double *)(v1 + 104) + *(double *)(v1 + 96) * ((double)v5 - *(double *)(v1 + 104));
  }
  else
  {
    *(double *)(v1 + 104) = (double)v5;
    *(unsigned char *)(v1 + 112) = 1;
  }
  if (v5 < -*(_DWORD *)(v1 + 88)
    && gLogCategory_APReceiverStatsCollector <= 50
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v3)
  {
    uint64_t v19 = v3;
    CFAllocatorRef alloc = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    uint64_t v6 = *(void *)(v2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(v2 + 8);
    }
    snprintf_add();
    *(void *)(v1 + 240) = v6;
    uint64_t v7 = *(void *)(v2 + 8);
    int v8 = *(_DWORD *)(v1 + 248);
    if (v8 <= 0) {
      int v9 = 0;
    }
    else {
      int v9 = v8 - 1;
    }
    if (v9 >= *(_DWORD *)(v2 + 40)) {
      int v9 = *(_DWORD *)(v2 + 40);
    }
    if (v9 >= 1)
    {
      CFTypeID v10 = *(unsigned __int16 **)(v2 + 24);
      unint64_t v11 = &v10[v9];
      do
      {
        snprintf_add();
        unsigned int v12 = *v10++;
        v7 += (((unint64_t)v12 << 32) * (unsigned __int128)0x4189374BC6A7F0uLL) >> 64;
      }
      while (v10 < v11);
    }
    if (*(int *)(v2 + 44) >= 1)
    {
      uint64_t v13 = 0;
      do
      {
        snprintf_add();
        ++v13;
      }
      while (v13 < *(int *)(v2 + 44));
    }
    CFDictionarySetCString();
    FigCFDictionarySetInt32();
    CFMutableStringRef v14 = CFStringCreateMutable(alloc, 0);
    UpTicksToMilliseconds();
    CFStringAppendF();
    CFDictionarySetValue(Mutable, @"preLine", v14);
    CFRelease(v14);
    FigCFDictionarySetInt32();
    FigCFDictionarySetInt32();
    FigCFDictionarySetInt32();
    FigCFDictionarySetInt64();
    unsigned __int8 v15 = *(const void **)(v1 + 120);
    if (v15)
    {
      HIDWORD(v16) = -1030792151 * *(_DWORD *)(v1 + 72);
      LODWORD(v16) = HIDWORD(v16);
      if ((v16 >> 2) <= 0x28F5C28) {
        CFDictionarySetValue(Mutable, @"header", v15);
      }
    }
    *uint64_t v19 = Mutable;
  }
}

uint64_t APReceiverStatsCollectorLogFrameStats(uint64_t result, const __CFDictionary *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!result) {
    return result;
  }
  CFDictionaryRef v3 = (const __CFDictionary *)result;
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  char v15 = 0;
  if (a2)
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    FigCFDictionaryGetInt64IfPresent();
    uint64_t v11 = 0;
    if (CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F12438])) {
      FigGetIOSurfaceTimingStatsFromTimingInfoDictionary();
    }
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(uint64_t *)((char *)&v11 + v4);
      if (!v6)
      {
        *(uint64_t *)((char *)&v11 + v4) = v5;
        uint64_t v6 = v5;
      }
      v4 += 8;
      uint64_t v5 = v6;
    }
    while (v4 != 48);
    FigCFDictionaryGetInt64IfPresent();
    if (v11) {
      int v7 = UpTicksToMilliseconds();
    }
    else {
      int v7 = 0;
    }
    snprintf_add();
    uint64_t v8 = 0;
    int v10 = v7;
    do
    {
      if (*(uint64_t *)((char *)&v11 + v8 + 8) <= *(unint64_t *)((char *)&v11 + v8)) {
        int v9 = 0;
      }
      else {
        int v9 = UpTicksToMilliseconds();
      }
      snprintf_add();
      v10 += v9;
      v8 += 8;
    }
    while (v8 != 32);
  }
  snprintf_add();
  snprintf_add();
  snprintf_add();
  snprintf_add();
  uint64_t result = (uint64_t)CFDictionaryGetValue(v3, @"header");
  if (!result) {
    goto LABEL_31;
  }
  if (gLogCategory_APReceiverStatsCollector <= 50)
  {
    if (gLogCategory_APReceiverStatsCollector != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
    if (gLogCategory_APReceiverStatsCollector <= 50)
    {
      if (gLogCategory_APReceiverStatsCollector != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
      if (gLogCategory_APReceiverStatsCollector <= 50)
      {
        if (gLogCategory_APReceiverStatsCollector != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
          uint64_t result = LogPrintF();
        }
LABEL_31:
        if (gLogCategory_APReceiverStatsCollector <= 50)
        {
          if (gLogCategory_APReceiverStatsCollector != -1 || (uint64_t result = _LogCategory_Initialize(), result))
          {
            CFDictionaryGetValue(v3, @"preLine");
            CFDictionaryGetValue(v3, @"deltasMs");
            return LogPrintF();
          }
        }
      }
    }
  }
  return result;
}

void APReceiverStatsCollectorSetNetworkClock(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetNetworkClock_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    void v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void __APReceiverStatsCollectorSetNetworkClock_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(const void **)(a1 + 40);
  CFDictionaryRef v3 = *(const void **)(v2 + 272);
  *(void *)(v2 + 272) = v1;
  if (v1) {
    CFRetain(v1);
  }
  if (v3)
  {
    CFRelease(v3);
  }
}

void AirPlayManagedDefaultsLogging_HandleReceiverManagedDefaultsLoggingChanged()
{
  CFPreferencesAppSynchronize(@"com.apple.airplay");
  CFStringRef v0 = (const __CFString *)APSSettingsCopyValue();
  if (v0)
  {
    CFStringRef v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    if (v2 != CFStringGetTypeID() || CFStringGetLength(v1) < 1)
    {
      ___HandleManagedDefaultsLoggingChanged_block_invoke();
LABEL_11:
      CFRelease(v1);
      return;
    }
    LogControlCF();
    CFDictionaryRef v3 = (void (*)(const __CFString *))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "MediaControlSenderLogControlCF");
    if (v3) {
      v3(v1);
    }
    CFRelease(v1);
    CFStringRef v4 = (const __CFString *)APSSettingsCopyValue();
    if (v4)
    {
      CFStringRef v1 = v4;
      CFTypeID v5 = CFGetTypeID(v4);
      if (v5 == CFStringGetTypeID() && CFStringGetLength(v1) >= 1) {
        LogControlCF();
      }
      goto LABEL_11;
    }
  }
  else
  {
    ___HandleManagedDefaultsLoggingChanged_block_invoke();
  }
}

uint64_t APReceiverScreenSinkCreateFileWriter(uint64_t a1, void *a2)
{
  if (!IsAppleInternalBuild()) {
    return 4294954514;
  }
  if (a2)
  {
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (APReceiverScreenSinkGetClassID_once != -1) {
      dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_5652);
    }
    uint64_t v3 = CMDerivedObjectCreate();
    if (v3)
    {
      uint64_t v4 = v3;
      APSLogErrorAt();
    }
    else
    {
      if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
        && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v4 = 0;
      *a2 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895165;
  }
  return v4;
}

uint64_t fwsink_updateVideoConfig(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 16))
  {
    uint64_t v7 = 4294895164;
    goto LABEL_13;
  }
  if (!a2)
  {
    APSLogErrorAt();
    uint64_t v7 = 4294895165;
LABEL_14:
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 60
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v7;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 8);
  CFTypeID v5 = (void *)(DerivedStorage + 8);
  uint64_t v4 = v6;
  if (v6)
  {
    CFRelease(v4);
    *CFTypeID v5 = 0;
  }
  uint64_t v7 = APSVideoFormatDescriptionCreateFromBlockBuffer();
  if (v7)
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  return v7;
}

uint64_t fwsink_updateH264VideoConfig(uint64_t a1, const __CFData *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 16))
  {
    uint64_t v7 = 4294895164;
    goto LABEL_13;
  }
  if (!a2)
  {
    APSLogErrorAt();
    uint64_t v7 = 4294895165;
LABEL_14:
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 60
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v7;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 8);
  CFTypeID v5 = (void *)(DerivedStorage + 8);
  uint64_t v4 = v6;
  if (v6)
  {
    CFRelease(v4);
    *CFTypeID v5 = 0;
  }
  CFDataGetBytePtr(a2);
  CFDataGetLength(a2);
  uint64_t v7 = FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom();
  if (v7)
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  return v7;
}

uint64_t fwsink_enqueueFrame(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMSampleBufferRef v22 = 0;
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  size_t sampleSizeArray = 0;
  if (*(unsigned char *)(DerivedStorage + 16))
  {
    if (*(void *)(DerivedStorage + 8))
    {
      *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x263F01090];
      sampleTimingArray.duration.epoch = *(void *)(MEMORY[0x263F01090] + 16);
      sampleTimingArray.decodeTimeStamp = sampleTimingArray.duration;
      CMClockMakeHostTimeFromSystemUnits(&sampleTimingArray.presentationTimeStamp, a3);
      size_t sampleSizeArray = CMBlockBufferGetDataLength(a2);
      uint64_t v9 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, 1u, 0, 0, *(CMFormatDescriptionRef *)(DerivedStorage + 8), 1, 1, &sampleTimingArray, 1, &sampleSizeArray, &v22);
      if (v9)
      {
        uint64_t v18 = v9;
      }
      else
      {
        if (!a5)
        {
          CFArrayRef SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(v22, 1u);
          CFDictionaryRef ValueAtIndex = (__CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0);
          CFDictionarySetValue(ValueAtIndex, (const void *)*MEMORY[0x263F01018], (const void *)*MEMORY[0x263EFFB40]);
        }
        uint64_t v12 = *(void *)DerivedStorage;
        CMSampleBufferRef v13 = v22;
        uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v14) {
          uint64_t v15 = v14;
        }
        else {
          uint64_t v15 = 0;
        }
        uint64_t v16 = *(uint64_t (**)(uint64_t, CMSampleBufferRef, void, double, double, double, double, double, double, double, double))(v15 + 24);
        if (v16)
        {
          uint64_t v17 = v16(v12, v13, 0, *MEMORY[0x263F001A8], *(double *)(MEMORY[0x263F001A8] + 8), *(double *)(MEMORY[0x263F001A8] + 16), *(double *)(MEMORY[0x263F001A8] + 24), *MEMORY[0x263F001A8], *(double *)(MEMORY[0x263F001A8] + 8), *(double *)(MEMORY[0x263F001A8] + 16), *(double *)(MEMORY[0x263F001A8] + 24));
          uint64_t v18 = 0;
          if (!v17) {
            goto LABEL_18;
          }
          uint64_t v18 = v17;
        }
        else
        {
          uint64_t v18 = 4294954514;
        }
      }
    }
    else
    {
      uint64_t v18 = 4294895164;
    }
  }
  else
  {
    uint64_t v18 = 4294895164;
  }
  APSLogErrorAt();
LABEL_18:
  if (v22) {
    CFRelease(v22);
  }
  if (v18
    && gLogCategory_APReceiverScreenSinkFileWriter <= 60
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v18;
}

uint64_t fwsink_Stop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 16))
  {
    uint64_t v1 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef v2 = *(CFTypeRef *)v1;
    if (*(void *)v1)
    {
      uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v3) {
        uint64_t v4 = v3;
      }
      else {
        uint64_t v4 = 0;
      }
      CFTypeID v5 = *(void (**)(CFTypeRef, void))(v4 + 16);
      if (v5) {
        v5(v2, 0);
      }
      if (*(void *)v1)
      {
        CFRelease(*(CFTypeRef *)v1);
        *(void *)uint64_t v1 = 0;
      }
    }
    uint64_t v6 = *(const void **)(v1 + 8);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(v1 + 8) = 0;
    }
    *(unsigned char *)(v1 + 16) = 0;
  }
  return 0;
}

uint64_t fwsink_Start(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v18 = 4294895165;
    goto LABEL_23;
  }
  uint64_t v5 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDataRef Value = CFDictionaryGetValue(a2, @"FilePath");
  if (!Value || (uint64_t v7 = Value, v8 = CFGetTypeID(Value), v8 != CFStringGetTypeID()))
  {
    uint64_t v18 = 4294895165;
LABEL_23:
    APSLogErrorAt();
    goto LABEL_24;
  }
  if (!*(unsigned char *)(v5 + 16))
  {
    *(unsigned char *)(v5 + 16) = 1;
    uint64_t v9 = FigVirtualDisplaySinkFileWriterCreate();
    if (v9)
    {
      uint64_t v18 = v9;
    }
    else
    {
      uint64_t CMBaseObject = FigVirtualDisplaySinkGetCMBaseObject();
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      CMSampleBufferRef v13 = *(uint64_t (**)(uint64_t, void, const void *))(v12 + 56);
      if (v13)
      {
        uint64_t v14 = v13(CMBaseObject, *MEMORY[0x263F12540], v7);
        if (v14)
        {
          uint64_t v18 = v14;
        }
        else
        {
          uint64_t v15 = *(void *)v5;
          uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v16) {
            uint64_t v17 = v16;
          }
          else {
            uint64_t v17 = 0;
          }
          uint64_t v19 = *(uint64_t (**)(uint64_t, void, void))(v17 + 8);
          if (v19)
          {
            uint64_t v18 = v19(v15, 0, 0);
            if (!v18) {
              return v18;
            }
          }
          else
          {
            uint64_t v18 = 4294954514;
          }
        }
      }
      else
      {
        uint64_t v18 = 4294954514;
      }
    }
    goto LABEL_23;
  }
  APSLogErrorAt();
  uint64_t v18 = 4294895164;
LABEL_24:
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 90
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  CMSampleBufferRef v22 = *(void (**)(uint64_t))(v21 + 16);
  if (v22) {
    v22(a1);
  }
  return v18;
}

CFStringRef fwsink_CopyDebugDescription(const void *a1)
{
  ASPrintF();
  CFAllocatorRef v2 = CFGetAllocator(a1);
  CFStringRef v3 = CFStringCreateWithFormat(v2, 0, @"<APReceiverScreenSinkFileWriter %p %s>", a1, 0);
  free(0);
  return v3;
}

uint64_t fwsink_Finalize(uint64_t a1)
{
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v5 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v4 = v5;
  if (v5) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 16);
  if (v7)
  {
    return v7(a1);
  }
  return result;
}

uint64_t _APReceiverNTPClientGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPReceiverNTPClientTypeID = result;
  return result;
}

void _APReceiverNTPClientFinalize(uint64_t a1)
{
  APReceiverNTPClientStop(a1);
  CFAllocatorRef v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 16) = 0;
  }
  if (gLogCategory_APReceiverNTPClient <= 40
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t APReceiverNTPClientStop(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 24);
  if (*(void *)(a1 + 88))
  {
    SendSelfConnectedLoopbackMessage();
    uint64_t v3 = pthread_join(*(pthread_t *)(a1 + 80), 0);
    *(void *)(a1 + 88) = 0;
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v4 = *(_DWORD *)(a1 + 72);
  if ((v4 & 0x80000000) == 0)
  {
    if (close(v4) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 72) = -1;
  }
  int v5 = *(_DWORD *)(a1 + 24);
  if ((v5 & 0x80000000) == 0)
  {
    if (close(v5) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 24) = -1;
  }
  if ((v2 & 0x80000000) == 0
    && gLogCategory_APReceiverNTPClient <= 50
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v3;
}

uint64_t ntpClient_sendRequest(uint64_t a1)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = 117494400;
  uint64_t v14 = 0;
  uint64_t v13 = 0;
  int v15 = 0;
  AirTunesClock_GetSynchronizedTime(*(void *)(a1 + 16), (int *)&v10);
  unsigned int v2 = HIDWORD(v11);
  unsigned int v3 = v10 - 2085978496;
  *(_DWORD *)(a1 + 96) = v10 - 2085978496;
  *(_DWORD *)(a1 + 100) = v2;
  unsigned int v16 = bswap32(v3);
  unsigned int v17 = bswap32(v2);
  int v4 = *(_DWORD *)(a1 + 24);
  if (*(unsigned char *)(a1 + 68)) {
    ssize_t v5 = send(v4, &v12, 0x20uLL, 0);
  }
  else {
    ssize_t v5 = sendto(v4, &v12, 0x20uLL, 0, (const sockaddr *)(a1 + 36), *(_DWORD *)(a1 + 64));
  }
  if (v5 == 32)
  {
LABEL_7:
    uint64_t v6 = 0;
    int v7 = *(_DWORD *)(a1 + 104);
    if ((v7 + 1) > 1) {
      int v8 = v7 + 1;
    }
    else {
      int v8 = 1;
    }
    *(_DWORD *)(a1 + 104) = v8;
    return v6;
  }
  if (*__error())
  {
    uint64_t v6 = *__error();
    if (!v6) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = 4294960596;
  }
  if (gLogCategory_APReceiverNTPClient <= 50
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v6;
}

uint64_t ntpClient_receiveResponse()
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v0 = SocketRecvFrom();
  uint64_t v1 = v0;
  if (v0 != 35)
  {
    if (v0) {
      APSLogErrorAt();
    }
    else {
      return 4294960553;
    }
  }
  return v1;
}

uint64_t ntpClient_thread(uint64_t a1)
{
  unint64_t v1 = *(int *)(a1 + 24);
  unint64_t v2 = *(int *)(a1 + 72);
  pthread_setname_np("AirPlayTimeSyncClient");
  SetCurrentThreadPriority();
  if (gLogCategory_APReceiverNTPClient <= 30
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v13.tv_sec = 0;
  *(void *)&v13.tv_usec = 0;
  memset(&v14, 0, 32);
  if ((int)v1 <= (int)v2) {
    int v3 = v2;
  }
  else {
    int v3 = v1;
  }
  memset(&v14.fds_bits[8], 0, 32);
  if (v3 < 0) {
    int v3 = -1;
  }
  int v4 = v3 + 1;
  int v5 = 1 << v1;
  memset(&v14.fds_bits[16], 0, 64);
  unint64_t v6 = v1 >> 5;
  int v7 = 1 << v2;
  unint64_t v8 = v2 >> 5;
  do
  {
    while (1)
    {
      if (__darwin_check_fd_set_overflow(v1, &v14, 0)) {
        v14.fds_bits[v6] |= v5;
      }
      if (__darwin_check_fd_set_overflow(v2, &v14, 0)) {
        v14.fds_bits[v8] |= v7;
      }
      v13.tv_sec = 2;
      v13.tv_usec = arc4random() % 0xF4240;
      int v9 = select(v4, &v14, 0, 0, &v13);
      if (v9 > 0) {
        break;
      }
      if (!v9) {
        goto LABEL_27;
      }
      if (*__error())
      {
        int v10 = *__error();
        if (v10 != 4)
        {
          if (!v10) {
            break;
          }
          if (v10 != -6722) {
            goto LABEL_28;
          }
LABEL_27:
          ntpClient_sendRequest(a1);
        }
      }
      else
      {
LABEL_28:
        usleep(0x186A0u);
      }
    }
    if (__darwin_check_fd_set_overflow(v1, &v14, 0) && (v14.fds_bits[v6] & v5) != 0) {
      ntpClient_receiveResponse();
    }
  }
  while (!__darwin_check_fd_set_overflow(v2, &v14, 0) || (v14.fds_bits[v8] & v7) == 0);
  if (gLogCategory_APReceiverNTPClient <= 30
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t APReceiverScreenSessionGetClassID()
{
  if (APReceiverScreenSessionGetClassID_once != -1) {
    dispatch_once(&APReceiverScreenSessionGetClassID_once, &__block_literal_global_923);
  }
  return APReceiverScreenSessionGetClassID_classID;
}

uint64_t __APReceiverScreenSessionGetClassID_block_invoke()
{
  uint64_t ClassID = CMBaseGetClassID();

  return MEMORY[0x270EE8008](&APReceiverScreenSessionGetClassID_classDesc, ClassID, 1, &APReceiverScreenSessionGetClassID_classID);
}

uint64_t APReceiverScreenSessionGetTypeID()
{
  if (APReceiverScreenSessionGetClassID_once != -1) {
    dispatch_once(&APReceiverScreenSessionGetClassID_once, &__block_literal_global_923);
  }

  return CMBaseClassGetCFTypeID();
}

uint64_t APReceiverScreenSessionCreate(uint64_t a1, const void *a2, const __CFDictionary *a3, CFTypeRef *a4)
{
  CFTypeRef cf = 0;
  char v26 = 1;
  if (a2)
  {
    if (a4)
    {
      if (gLogCategory_APReceiverScreenSession <= 30
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (APReceiverScreenSessionGetClassID_once != -1) {
        dispatch_once(&APReceiverScreenSessionGetClassID_once, &__block_literal_global_923);
      }
      uint64_t v7 = CMDerivedObjectCreate();
      if (v7)
      {
        uint64_t v22 = v7;
      }
      else
      {
        uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
        *(_DWORD *)(DerivedStorage + 228) = -1;
        *(void *)(DerivedStorage + 144) = CFRetain(a2);
        *(void *)(DerivedStorage + 200) = FigSimpleMutexCreate();
        *(void *)(DerivedStorage + 208) = FigSimpleMutexCreate();
        *(void *)(DerivedStorage + 240) = FigSimpleMutexCreate();
        uint64_t v9 = FigDispatchQueueCreateWithPriority();
        *(void *)(DerivedStorage + 216) = v9;
        if (!v9)
        {
          APSLogErrorAt();
          uint64_t v22 = 4294895176;
          goto LABEL_54;
        }
        *(_WORD *)(DerivedStorage + 186) = 256;
        *(_DWORD *)(DerivedStorage + 192) = -1;
        if (!a3) {
          goto LABEL_22;
        }
        FigCFDictionaryGetInt32IfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        CFDataRef Value = CFDictionaryGetValue(a3, @"NetworkClock");
        *(void *)(DerivedStorage + 128) = Value;
        if (Value
          && (CFRetain(Value), (long long v11 = *(const void **)(DerivedStorage + 128)) != 0)
          && (CFTypeID v12 = CFGetTypeID(v11), v12 != APSNetworkClockGetTypeID()))
        {
          uint64_t v22 = 4294895175;
        }
        else
        {
          timeval v13 = CFDictionaryGetValue(a3, @"StatsCollector");
          *(void *)(DerivedStorage + 136) = v13;
          if (!v13) {
            goto LABEL_21;
          }
          CFRetain(v13);
          timeval v13 = *(const void **)(DerivedStorage + 136);
          if (!v13) {
            goto LABEL_21;
          }
          CFTypeID v14 = CFGetTypeID(v13);
          if (APReceiverStatsCollectorGetTypeID_once != -1) {
            dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_446);
          }
          if (v14 == APReceiverStatsCollectorGetTypeID_typeID)
          {
            timeval v13 = *(const void **)(DerivedStorage + 136);
LABEL_21:
            APReceiverStatsCollectorSetNetworkClock((uint64_t)v13, *(void *)(DerivedStorage + 128));
LABEL_22:
            if (!v26)
            {
LABEL_28:
              uint64_t v16 = *(void *)(DerivedStorage + 136);
              uint64_t v17 = *(void *)(DerivedStorage + 144);
              uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v18) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = 0;
              }
              long long v20 = *(void (**)(uint64_t, __CFString *, uint64_t))(v19 + 56);
              if (v20) {
                v20(v17, @"StatsCollector", v16);
              }
              if (introspector_getCollectionOfScreenSessions_once != -1) {
                dispatch_once(&introspector_getCollectionOfScreenSessions_once, &__block_literal_global_112);
              }
              if (introspector_getCollectionOfScreenSessions_coll)
              {
                long long v21 = *(NSObject **)introspector_getCollectionOfScreenSessions_coll;
                block[0] = MEMORY[0x263EF8330];
                block[1] = 0x40000000;
                block[2] = __APReceiverScreenSessionCreate_block_invoke;
                block[3] = &__block_descriptor_tmp_57;
                block[4] = introspector_getCollectionOfScreenSessions_coll;
                void block[5] = cf;
                dispatch_sync(v21, block);
                if (introspector_getCollectionOfScreenSessions_once != -1) {
                  dispatch_once(&introspector_getCollectionOfScreenSessions_once, &__block_literal_global_112);
                }
              }
              v28[0] = MEMORY[0x263EF8330];
              v28[1] = 0x40000000;
              v28[2] = __aprscreen_captureAddIntrospectorCmd_block_invoke;
              v28[3] = &__block_descriptor_tmp_127;
              v28[4] = introspector_getCollectionOfScreenSessions_coll;
              if (aprscreen_captureAddIntrospectorCmd_once != -1) {
                dispatch_once(&aprscreen_captureAddIntrospectorCmd_once, v28);
              }
              APTTrafficMetricsCreate();
              if (gLogCategory_APReceiverScreenSession <= 30
                && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              uint64_t v22 = 0;
              *a4 = cf;
              return v22;
            }
            LODWORD(v28[0]) = 0;
            int v25 = 2;
            FigCFDictionaryGetInt32IfPresent();
            FigCFDictionaryGetInt32IfPresent();
            uint64_t v15 = ServerSocketOpen();
            if (!v15)
            {
              if (*(unsigned char *)(DerivedStorage + 186)) {
                SocketSetP2P();
              }
              if (*(unsigned char *)(DerivedStorage + 187)) {
                SocketSetQoS();
              }
              goto LABEL_28;
            }
            uint64_t v22 = v15;
            goto LABEL_53;
          }
          uint64_t v22 = 4294895175;
        }
      }
    }
    else
    {
      uint64_t v22 = 4294895175;
    }
  }
  else
  {
    uint64_t v22 = 4294895175;
  }
LABEL_53:
  APSLogErrorAt();
LABEL_54:
  if (gLogCategory_APReceiverScreenSession <= 90
    && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (cf) {
    CFRelease(cf);
  }
  return v22;
}

void __APReceiverScreenSessionCreate_block_invoke(uint64_t a1)
{
}

uint64_t __aprscreen_captureAddIntrospectorCmd_block_invoke(uint64_t result)
{
  if (*(void *)(result + 32)) {
    return MEMORY[0x270F0BD58](@"recordScreenSessions");
  }
  return result;
}

void aprscreen_captureIntrospectorCmd(NSObject **a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 < 2) {
    goto LABEL_4;
  }
  unint64_t v8 = *(const char **)(a4 + 8);
  if (!strcmp(v8, "start"))
  {
    if (a3 < 3) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    char v10 = 1;
  }
  else
  {
    if (strcmp(v8, "stop"))
    {
LABEL_4:
      FPrintF();
      return;
    }
    uint64_t v9 = 0;
    char v10 = 0;
  }
  long long v11 = *a1;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __aprscreen_captureIntrospectorCmd_block_invoke;
  block[3] = &__block_descriptor_tmp_140;
  char v13 = v10;
  block[4] = a1;
  void block[5] = v9;
  void block[6] = a2;
  dispatch_sync(v11, block);
}

uint64_t __aprscreen_captureIntrospectorCmd_block_invoke(uint64_t a1)
{
  if (CFSetGetCount(*(CFSetRef *)(*(void *)(a1 + 32) + 8)) >= 1) {
    return CFSetApplyBlock();
  }

  return FPrintF();
}

void __aprscreen_captureIntrospectorCmd_block_invoke_2(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 48))
  {
    CFTypeRef cf = 0;
    int v2 = aprscreen_captureStart(a2, *(const char **)(a1 + 32), (CFStringRef *)&cf);
    if (!v2)
    {
      FPrintF();
      CFRelease(cf);
    }
  }
  else
  {
    int v2 = aprscreen_captureStop();
  }
  if (v2) {
    FPrintF();
  }
}

uint64_t aprscreen_captureStart(uint64_t a1, const char *a2, CFStringRef *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 208));
  uint64_t v7 = (CFTypeRef *)(DerivedStorage + 168);
  if (*(void *)(DerivedStorage + 168))
  {
    if (gLogCategory_APReceiverScreenSession > 90)
    {
      CFMutableDictionaryRef Mutable = 0;
      BOOL v12 = 0;
      uint64_t v13 = 4294895173;
    }
    else
    {
      if (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      CFMutableDictionaryRef Mutable = 0;
      BOOL v12 = 0;
      uint64_t v13 = 4294895173;
    }
    goto LABEL_39;
  }
  if (*(void *)(DerivedStorage + 344))
  {
    if (!*(unsigned char *)(DerivedStorage + 706))
    {
      uint64_t v13 = 4294895172;
      if (gLogCategory_APReceiverScreenSession <= 90
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_36;
    }
    if (!*(void *)(DerivedStorage + 152))
    {
      if (gLogCategory_APReceiverScreenSession > 90)
      {
        CFMutableDictionaryRef Mutable = 0;
        BOOL v12 = 0;
        uint64_t v13 = 4294895175;
      }
      else
      {
        if (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        CFMutableDictionaryRef Mutable = 0;
        BOOL v12 = 0;
        uint64_t v13 = 4294895175;
      }
      goto LABEL_39;
    }
  }
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t FileWriter = APReceiverScreenSinkCreateFileWriter(*MEMORY[0x263EFFB08], (void *)(DerivedStorage + 168));
  if (FileWriter)
  {
    uint64_t v13 = FileWriter;
    APSLogErrorAt();
LABEL_36:
    CFMutableDictionaryRef Mutable = 0;
    BOOL v12 = 0;
    goto LABEL_39;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (a2)
  {
    CFStringRef v11 = CFStringCreateWithCString(v8, a2, 0x8000100u);
  }
  else
  {
    uint64_t TempDirectory = FVDUtilsGetTempDirectory();
    uint64_t v15 = getpid();
    CFStringRef v11 = CFStringCreateWithFormat(v8, 0, @"%@aprcapture-%d-%d.mov", TempDirectory, v15, atomic_fetch_add_explicit(aprscreen_captureStart_count, 1u, memory_order_relaxed) + 1);
  }
  CFStringRef v16 = v11;
  CFDictionarySetValue(Mutable, @"FilePath", v11);
  CFTypeRef v17 = *v7;
  uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  long long v20 = *(uint64_t (**)(CFTypeRef, __CFDictionary *))(v19 + 8);
  if (!v20)
  {
    uint64_t v13 = 4294954514;
    goto LABEL_26;
  }
  uint64_t v21 = v20(v17, Mutable);
  if (v21)
  {
    uint64_t v13 = v21;
LABEL_26:
    APSLogErrorAt();
    if (*v7)
    {
      CFRelease(*v7);
      BOOL v12 = 0;
      *uint64_t v7 = 0;
    }
    else
    {
      BOOL v12 = 0;
    }
    goto LABEL_32;
  }
  *(_WORD *)(DerivedStorage + 176) = 0;
  BOOL v12 = *(void *)(DerivedStorage + 344) != 0;
  uint64_t v13 = 0;
  if (a3)
  {
    *a3 = v16;
LABEL_39:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 208));
    goto LABEL_40;
  }
LABEL_32:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 208));
  if (v16) {
    CFRelease(v16);
  }
LABEL_40:
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v12)
  {
    uint64_t v22 = *(void (**)(uint64_t, __CFString *, void, void))(DerivedStorage + 152);
    if (v22) {
      v22(a1, @"ForceKeyFrameNeeded", 0, *(void *)(DerivedStorage + 160));
    }
  }
  return v13;
}

uint64_t aprscreen_captureStop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 208));
  uint64_t v1 = *(void *)(DerivedStorage + 168);
  if (v1)
  {
    uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v2) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 0;
    }
    int v5 = *(void (**)(uint64_t))(v3 + 16);
    if (v5) {
      v5(v1);
    }
    unint64_t v6 = *(const void **)(DerivedStorage + 168);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(DerivedStorage + 168) = 0;
    }
    uint64_t v4 = 0;
    *(_WORD *)(DerivedStorage + 176) = 0;
  }
  else
  {
    uint64_t v4 = 4294895173;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 208));
  return v4;
}

uint64_t __introspector_getCollectionOfScreenSessions_block_invoke()
{
  uint64_t result = IsAppleInternalBuild();
  if (result)
  {
    introspector_getCollectionOfScreenSessions_coll = (uint64_t)malloc_type_calloc(1uLL, 0x18uLL, 0x70040EA3A3B56uLL);
    *(void *)introspector_getCollectionOfScreenSessions_coll = dispatch_queue_create("CollectionOfScreenSessions", 0);
    CFMutableSetRef Mutable = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 0);
    uint64_t v2 = introspector_getCollectionOfScreenSessions_coll;
    *(void *)(introspector_getCollectionOfScreenSessions_coll + 8) = Mutable;
    *(void *)(v2 + 16) = "ScreenSessions";
    return MEMORY[0x270F0BD58](@"showScreenSessions");
  }
  return result;
}

uint64_t aprscreen_SetSecurityInfoAES()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
  if (*(unsigned char *)(DerivedStorage + 185) || *(unsigned char *)(DerivedStorage + 184))
  {
    uint64_t v1 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    if (*(unsigned char *)(DerivedStorage + 704))
    {
      AES_CTR_Final();
      *(unsigned char *)(DerivedStorage + 704) = 0;
    }
    uint64_t v1 = AES_CTR_Init();
    *(unsigned char *)(DerivedStorage + 704) = v1 == 0;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  return v1;
}

uint64_t aprscreen_SetSecurityInfoChaCha(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 && a3 == 32)
  {
    uint64_t v6 = DerivedStorage;
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
    if (*(unsigned char *)(v6 + 185) || *(unsigned char *)(v6 + 184))
    {
      uint64_t v7 = 4294895173;
      if (gLogCategory_APReceiverScreenSession <= 90
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      for (uint64_t i = 0; i != 304; ++i)
        *(unsigned char *)(v6 + 352 + i) = 0;
      uint64_t v7 = 0;
      long long v9 = a2[1];
      *(_OWORD *)(v6 + 616) = *a2;
      *(_OWORD *)(v6 + 632) = v9;
      *(unsigned char *)(v6 + 352) = 1;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 200));
  }
  else
  {
    APSLogErrorAt();
    return 4294895175;
  }
  return v7;
}

uint64_t aprscreen_SetEventHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
  if (*(unsigned char *)(DerivedStorage + 185) || *(unsigned char *)(DerivedStorage + 184))
  {
    uint64_t v6 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    uint64_t v6 = 0;
    *(void *)(DerivedStorage + 152) = a2;
    *(void *)(DerivedStorage + 160) = a3;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  return v6;
}

uint64_t aprscreen_Shutdown(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (introspector_getCollectionOfScreenSessions_once != -1) {
    dispatch_once(&introspector_getCollectionOfScreenSessions_once, &__block_literal_global_112);
  }
  if (introspector_getCollectionOfScreenSessions_coll)
  {
    uint64_t v3 = *(NSObject **)introspector_getCollectionOfScreenSessions_coll;
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __aprscreen_Shutdown_block_invoke;
    block[3] = &__block_descriptor_tmp_102;
    block[4] = introspector_getCollectionOfScreenSessions_coll;
    void block[5] = a1;
    dispatch_sync(v3, block);
  }
  uint64_t v4 = *(pthread_mutex_t **)(DerivedStorage + 200);
  if (v4)
  {
    pthread_mutex_lock(v4);
    if (!*(unsigned char *)(DerivedStorage + 185))
    {
      if (gLogCategory_APReceiverScreenSession <= 30
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v5 = *(_DWORD *)(DerivedStorage + 228);
      if ((v5 & 0x80000000) == 0)
      {
        if (close(v5) && *__error()) {
          __error();
        }
        *(_DWORD *)(DerivedStorage + 228) = -1;
      }
      uint64_t v6 = CMBaseObjectGetDerivedStorage();
      uint64_t v7 = *(pthread_mutex_t **)(v6 + 240);
      if (v7)
      {
        pthread_mutex_lock(v7);
        *(unsigned char *)(v6 + 248) = 1;
        if (*(void *)(v6 + 232)) {
          NetSocket_Cancel();
        }
        pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 240));
      }
      if (*(unsigned char *)(DerivedStorage + 184)) {
        dispatch_sync(*(dispatch_queue_t *)(DerivedStorage + 216), &__block_literal_global_106);
      }
      *(unsigned char *)(DerivedStorage + 185) = 1;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  }
  return 0;
}

uint64_t aprscreen_Start(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSession <= 30
    && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
  if (*(unsigned char *)(DerivedStorage + 185))
  {
    uint64_t v5 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
LABEL_12:
      LogPrintF();
    }
  }
  else if (*(unsigned char *)(DerivedStorage + 184))
  {
    uint64_t v5 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_12;
    }
  }
  else
  {
    if (a2) {
      CFRetain(a2);
    }
    uint64_t v6 = *(NSObject **)(DerivedStorage + 216);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __aprscreen_Start_block_invoke;
    block[3] = &__block_descriptor_tmp_75;
    block[4] = a1;
    void block[5] = a2;
    dispatch_async(v6, block);
    uint64_t v5 = 0;
    *(unsigned char *)(DerivedStorage + 184) = 1;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  return v5;
}

uint64_t aprscreen_ntpTimestamp()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v1 = *(void *)(DerivedStorage + 136);
  if (!v1) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(DerivedStorage + 128);
  if (!v2)
  {
    uint64_t v1 = 0;
LABEL_9:
    unint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  unint64_t v5 = *(void *)(v4 + 8);
  if (v5)
  {
    ((void (*)(uint64_t, uint64_t *))v5)(v2, &v8);
    unint64_t v5 = v10;
    uint64_t v1 = v9;
  }
  else
  {
    uint64_t v1 = 0;
  }
LABEL_10:
  *((void *)&v7 + 1) = v5;
  *(void *)&long long v7 = v1;
  return v7 >> 32;
}

uint64_t aprscreen_SetProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 4294895174;
  if (a2)
  {
    int v3 = gLogCategory_APReceiverScreenSession;
    if (gLogCategory_APReceiverScreenSession <= 30)
    {
      if (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      int v3 = gLogCategory_APReceiverScreenSession;
    }
    if (v3 <= 50 && (v3 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895175;
  }
  return v2;
}

uint64_t aprscreen_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, CFNumberRef *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 && a4)
  {
    uint64_t v8 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSession <= 30
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (CFEqual(a2, @"ListenPort"))
    {
      CFNumberRef v9 = CFNumberCreate(a3, kCFNumberSInt32Type, (const void *)(v8 + 224));
      *a4 = v9;
      if (v9)
      {
        return 0;
      }
      else
      {
        APSLogErrorAt();
        return 4294895176;
      }
    }
    else
    {
      uint64_t v10 = 4294895174;
      if (gLogCategory_APReceiverScreenSession <= 50
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895175;
  }
  return v10;
}

CFStringRef aprscreen_CopyDebugDescription(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v3 = *(unsigned __int8 *)(DerivedStorage + 352);
  int v4 = *(unsigned __int8 *)(DerivedStorage + 704);
  ASPrintF();
  ASPrintF();
  CFAllocatorRef v5 = CFGetAllocator(a1);
  uint64_t v6 = "yes";
  if (*(unsigned char *)(DerivedStorage + 185)) {
    long long v7 = "yes";
  }
  else {
    long long v7 = "no";
  }
  if (*(unsigned char *)(DerivedStorage + 184)) {
    uint64_t v8 = "yes";
  }
  else {
    uint64_t v8 = "no";
  }
  if (*(unsigned char *)(DerivedStorage + 186)) {
    CFNumberRef v9 = "yes";
  }
  else {
    CFNumberRef v9 = "no";
  }
  if (*(unsigned char *)(DerivedStorage + 188)) {
    uint64_t v10 = "yes";
  }
  else {
    uint64_t v10 = "no";
  }
  if (v3) {
    CFStringRef v11 = "yes";
  }
  else {
    CFStringRef v11 = "no";
  }
  if (!v4) {
    uint64_t v6 = "no";
  }
  CFStringRef v12 = CFStringCreateWithFormat(v5, 0, @"<APReceiverScreenSession %p %s>{\n\tShut down:          %s\n\tStarted:            %s\n\tAllow P2P:          %s\n\tIgnore timestamps:  %s\n\tPeer address:       %s\n\tConfigs processed:  %u\n\tFrames processed:   %u\n\tChaCha used:        %s\n\tAES used:           %s\n\tNetworkClock:      %p\n\tSink:               %@\n}", a1, 0, v7, v8, v9, v10, 0, *(void *)(DerivedStorage + 344), *(void *)(DerivedStorage + 336), v11, v6, *(void *)(DerivedStorage + 128), *(void *)(DerivedStorage + 144));
  free(0);
  free(0);
  return v12;
}

uint64_t aprscreen_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSession <= 30
    && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  CFAllocatorRef v5 = *(void (**)(uint64_t))(v4 + 16);
  if (v5) {
    v5(a1);
  }
  int v6 = *(_DWORD *)(DerivedStorage + 228);
  if ((v6 & 0x80000000) == 0)
  {
    if (close(v6) && *__error()) {
      __error();
    }
    *(_DWORD *)(DerivedStorage + 228) = -1;
  }
  if (*(void *)(DerivedStorage + 232))
  {
    NetSocket_Delete();
    *(void *)(DerivedStorage + 232) = 0;
  }
  long long v7 = *(const void **)(DerivedStorage + 144);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 144) = 0;
  }
  uint64_t v8 = *(const void **)(DerivedStorage + 168);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 168) = 0;
  }
  CFNumberRef v9 = *(const void **)(DerivedStorage + 136);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 136) = 0;
  }
  uint64_t v10 = *(const void **)(DerivedStorage + 128);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 128) = 0;
  }
  CFStringRef v11 = *(const void **)(DerivedStorage + 712);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 712) = 0;
  }
  if (*(unsigned char *)(DerivedStorage + 352))
  {
    uint64_t v12 = 0;
    *(unsigned char *)(DerivedStorage + 352) = 0;
    do
      *(unsigned char *)(DerivedStorage + 352 + v12++) = 0;
    while (v12 != 304);
  }
  if (*(unsigned char *)(DerivedStorage + 704))
  {
    *(unsigned char *)(DerivedStorage + 704) = 0;
    AES_CTR_Final();
  }
  uint64_t v13 = *(NSObject **)(DerivedStorage + 216);
  if (v13)
  {
    dispatch_release(v13);
    *(void *)(DerivedStorage + 216) = 0;
  }
  if (*(void *)(DerivedStorage + 240))
  {
    FigSimpleMutexDestroy();
    *(void *)(DerivedStorage + 240) = 0;
  }
  if (*(void *)(DerivedStorage + 208))
  {
    FigSimpleMutexDestroy();
    *(void *)(DerivedStorage + 208) = 0;
  }
  uint64_t result = *(void *)(DerivedStorage + 200);
  if (result)
  {
    uint64_t result = FigSimpleMutexDestroy();
    *(void *)(DerivedStorage + 200) = 0;
  }
  return result;
}

uint64_t mcProcessor_SetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    a3 = 4294895345;
    goto LABEL_51;
  }
  uint64_t v6 = DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"rp_startedVideo"))
  {
    if (a3)
    {
      a3 = 0;
      *(unsigned char *)(v6 + 384) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
LABEL_51:
    APSLogErrorAt();
    return a3;
  }
  if (CFEqual(a2, @"rp_clientDeviceID"))
  {
    if (a3)
    {
      a3 = 0;
      *(void *)(v6 + 144) = CFGetInt64();
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_videoSessionID"))
  {
    if (a3)
    {
      a3 = 0;
      *(_DWORD *)(v6 + 376) = CFGetInt64();
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_transportDelegate"))
  {
    if (!a3)
    {
      *(_OWORD *)(v6 + 320) = 0u;
      *(_OWORD *)(v6 + 336) = 0u;
      *(_OWORD *)(v6 + 345) = 0u;
      return a3;
    }
    CFTypeID v8 = CFGetTypeID((CFTypeRef)a3);
    if (v8 == CFDataGetTypeID())
    {
      if (CFDataGetLength((CFDataRef)a3) == 40)
      {
        BytePtr = CFDataGetBytePtr((CFDataRef)a3);
        a3 = 0;
        uint64_t v10 = *((void *)BytePtr + 4);
        long long v11 = *((_OWORD *)BytePtr + 1);
        *(_OWORD *)(v6 + 320) = *(_OWORD *)BytePtr;
        *(_OWORD *)(v6 + 336) = v11;
        *(void *)(v6 + 352) = v10;
        *(unsigned char *)(v6 + 360) = 1;
        return a3;
      }
      a3 = 4294895345;
    }
    else
    {
      a3 = 4294895345;
    }
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_beingReversed"))
  {
    if (a3)
    {
      a3 = 0;
      *(unsigned char *)(v6 + 385) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_oldClient"))
  {
    if (a3)
    {
      a3 = 0;
      *(unsigned char *)(v6 + 313) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_sessionUUID"))
  {
    if (!a3)
    {
      *(void *)(v6 + 104) = 0;
      *(void *)(v6 + 112) = 0;
      return a3;
    }
    CFTypeID v12 = CFGetTypeID((CFTypeRef)a3);
    if (v12 == CFDataGetTypeID())
    {
      if (CFDataGetLength((CFDataRef)a3) == 16)
      {
        uint64_t v13 = CFDataGetBytePtr((CFDataRef)a3);
        a3 = 0;
        *(_OWORD *)(v6 + 104) = *(_OWORD *)v13;
        return a3;
      }
      a3 = 4294895345;
    }
    else
    {
      a3 = 4294895345;
    }
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_sessionToken"))
  {
    if (a3)
    {
      a3 = 0;
      *(void *)(v6 + 96) = CFGetInt64();
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_purpose"))
  {
    if (a3)
    {
      a3 = CFStringCopyUTF8CString();
      if (!a3)
      {
        *(_OWORD *)(v6 + 297) = MEMORY[0];
        free(0);
        return a3;
      }
    }
    else
    {
      a3 = 4294895345;
    }
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_encrypted"))
  {
    if (a3)
    {
      a3 = 0;
      *(unsigned char *)(v6 + 260) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, @"rp_authenticated"))
  {
    if (a3)
    {
      a3 = 0;
      *(unsigned char *)(v6 + 176) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  a3 = 4294895342;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return a3;
}

void *mcProcessor_CopyProperty(uint64_t a1, const void *a2, int *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    uint64_t result = 0;
    int v10 = -71951;
    goto LABEL_17;
  }
  uint64_t v6 = DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"rp_startedVideo"))
  {
    long long v7 = (CFTypeRef *)MEMORY[0x263EFFB40];
    int v8 = *(unsigned __int8 *)(v6 + 384);
LABEL_8:
    if (!v8) {
      long long v7 = (CFTypeRef *)MEMORY[0x263EFFB38];
    }
    uint64_t result = (void *)CFRetain(*v7);
    goto LABEL_16;
  }
  if (!CFEqual(a2, @"rp_clientDeviceID"))
  {
    if (CFEqual(a2, @"rp_videoSessionID"))
    {
      uint64_t result = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, (const void *)(v6 + 376));
      if (!result)
      {
        int v10 = -71950;
        goto LABEL_48;
      }
    }
    else
    {
      if (CFEqual(a2, @"rp_beingReversed"))
      {
        long long v7 = (CFTypeRef *)MEMORY[0x263EFFB40];
        int v8 = *(unsigned __int8 *)(v6 + 385);
        goto LABEL_8;
      }
      if (CFEqual(a2, @"rp_oldClient"))
      {
        long long v7 = (CFTypeRef *)MEMORY[0x263EFFB40];
        int v8 = *(unsigned __int8 *)(v6 + 313);
        goto LABEL_8;
      }
      if (CFEqual(a2, @"rp_sessionUUID"))
      {
        uint64_t result = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)(v6 + 104), 16);
        if (!result)
        {
          int v10 = -71950;
          goto LABEL_48;
        }
      }
      else if (CFEqual(a2, @"rp_sessionToken"))
      {
        uint64_t result = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt64Type, (const void *)(v6 + 96));
        if (!result)
        {
          int v10 = -71950;
          goto LABEL_48;
        }
      }
      else if (CFEqual(a2, @"rp_purpose"))
      {
        uint64_t result = (void *)CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(v6 + 297), 0x8000100u);
        if (!result)
        {
          int v10 = -71950;
          goto LABEL_48;
        }
      }
      else
      {
        if (CFEqual(a2, @"rp_encrypted"))
        {
          long long v7 = (CFTypeRef *)MEMORY[0x263EFFB40];
          int v8 = *(unsigned __int8 *)(v6 + 260);
          goto LABEL_8;
        }
        if (CFEqual(a2, @"rp_authenticated"))
        {
          long long v7 = (CFTypeRef *)MEMORY[0x263EFFB40];
          int v8 = *(unsigned __int8 *)(v6 + 176);
          goto LABEL_8;
        }
        if (!CFEqual(a2, @"rp_receiverUI"))
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v10 = -71954;
          goto LABEL_48;
        }
        long long v11 = *(const void **)(v6 + 392);
        if (!v11 || (uint64_t result = (void *)CFRetain(v11)) == 0)
        {
          APSLogErrorAt();
          uint64_t result = 0;
          int v10 = -71952;
          goto LABEL_17;
        }
      }
    }
LABEL_16:
    int v10 = 0;
    goto LABEL_17;
  }
  uint64_t result = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt64Type, (const void *)(v6 + 144));
  if (result) {
    goto LABEL_16;
  }
  int v10 = -71950;
LABEL_48:
  APSLogErrorAt();
  uint64_t result = 0;
LABEL_17:
  if (a3) {
    *a3 = v10;
  }
  return result;
}

uint64_t mcProcessor_GetTransportDelegate(uint64_t a1, uint64_t *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 360)) {
    uint64_t v4 = DerivedStorage + 320;
  }
  else {
    uint64_t v4 = 0;
  }
  *a2 = v4;
  return 0;
}

uint64_t mcProcessor_SetTransportDelegate(uint64_t a1, long long *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    long long v4 = *a2;
    long long v5 = a2[1];
    *(void *)(DerivedStorage + 352) = *((void *)a2 + 4);
    *(_OWORD *)(DerivedStorage + 320) = v4;
    *(_OWORD *)(DerivedStorage + 336) = v5;
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
  }
  *(unsigned char *)(DerivedStorage + 360) = v6;
  return 0;
}

uint64_t mcProcessor_HandleRequest()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  uint64_t v257 = v1;
  CFDictionaryRef v3 = v2;
  int v5 = v4;
  char v6 = (void *)v0;
  uint64_t v287 = *MEMORY[0x263EF8340];
  uint64_t v7 = 4294895362;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)(DerivedStorage + 272) = mach_absolute_time();
  uint64_t v9 = 4294895361;
  if (v5 <= 1886283374)
  {
    if (v5 <= 1735616869)
    {
      if (v5 <= 1735422065)
      {
        if (v5 != 1633907822)
        {
          if (v5 != 1735222134) {
            return v9;
          }
          LODWORD(cf) = 0;
          long long v285 = 0u;
          long long v286 = 0u;
          long long v283 = 0u;
          long long v284 = 0u;
          long long v281 = 0u;
          long long v282 = 0u;
          long long v279 = 0u;
          long long v280 = 0u;
          long long v277 = 0u;
          long long v278 = 0u;
          long long v275 = 0u;
          long long v276 = 0u;
          long long v273 = 0u;
          long long v274 = 0u;
          long long v272 = 0u;
          *(_OWORD *)__src = 0u;
          block.value = 0;
          uint64_t v10 = *(void *)(CMBaseObjectGetDerivedStorage() + 392);
          if (v10)
          {
            uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v11) {
              uint64_t v12 = v11;
            }
            else {
              uint64_t v12 = 0;
            }
            int v95 = *(unsigned int (**)(uint64_t, __CFString *, void, CMTime *))(v12 + 112);
            if (v95 && !v95(v10, @"volume", 0, &block))
            {
              CFNumberGetValue((CFNumberRef)block.value, kCFNumberFloatType, &cf);
              if (gLogCategory_APReceiverRequestProcessorMediaControl <= 20
                && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              int v197 = snprintf((char *)__src, 0x100uLL, "volume: %f\n", *(float *)&cf);
              if (!APReceiverRequestProcessorPrepareBinaryDataResponse((uint64_t)__src, v197, v257))
              {
                uint64_t v9 = 0;
LABEL_401:
                value = (const void *)block.value;
                if (!block.value) {
                  return v9;
                }
LABEL_679:
                CFRelease(value);
                return v9;
              }
            }
            APSLogErrorAt();
          }
          else
          {
            APSLogErrorAt();
          }
          uint64_t v9 = 4294895362;
          goto LABEL_401;
        }
        uint64_t v45 = CMBaseObjectGetDerivedStorage();
        LODWORD(valuePtr) = 0;
        block.value = 0;
        CFTypeRef cf = 0;
        CFDataGetTypeID();
        TypedCFDataRef Value = (const __CFData *)CFDictionaryGetTypedValue();
        CFDataRef v47 = TypedValue;
        if (!TypedValue) {
          goto LABEL_143;
        }
        CFDataGetBytePtr(TypedValue);
        CFDataGetLength(v47);
        CFDictionaryGetTypeID();
        CFDictionaryRef v48 = (const __CFDictionary *)CFCreateWithPlistBytes();
        CFDataRef v47 = v48;
        if (!v48)
        {
          APSLogErrorAt();
          CFMutableDictionaryRef v102 = 0;
          uint64_t v103 = 0;
          uint64_t v9 = 4294895354;
          goto LABEL_670;
        }
        CFTypeRef v49 = (__CFString *)CFDictionaryGetValue(v48, @"type");
        uint64_t v50 = CFDictionaryGetValue(v47, @"params");
        if (v49)
        {
          if (CFEqual(v49, @"playlistInsert"))
          {
            CFDictionaryGetTypeID();
            if (CFDictionaryGetTypedValue())
            {
              CFDictionaryGetTypeID();
              uint64_t v51 = CFDictionaryGetTypedValue();
              if (v51)
              {
                CFDictionaryRef v52 = (const __CFDictionary *)v51;
                int Int64 = CFDictionaryGetInt64();
                switch(Int64)
                {
                  case 0:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v52, @"uuid");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      CFDictionaryGetValue(v52, @"path");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v45 + 244);
                    break;
                  case 1:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v52, @"uuid");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      CFDictionaryGetValue(v52, @"Content-Location");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v45 + 252);
                    break;
                  case 2:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v52, @"uuid");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      CFDictionaryGetValue(v52, @"path");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v45 + 248);
                    break;
                  case 3:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v52, @"uuid");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      CFDictionaryGetValue(v52, @"Content-Location");
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
                        _LogCategory_Initialize();
                      }
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v45 + 256);
                    break;
                  default:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    break;
                }
                int v221 = *(_DWORD *)(v45 + 24);
                if (v221 == 4 || v221 == 128 || v221 == 64) {
                  CFDictionarySetValue(v52, @"allowP2P", (const void *)*MEMORY[0x263EFFB40]);
                }
                LODWORD(valuePtr) = mcProcessor_addTLSInfo();
                if (valuePtr)
                {
                  APSLogErrorAt();
                  CFMutableDictionaryRef v102 = 0;
                  uint64_t v103 = 0;
                  uint64_t v9 = 4294895353;
                  goto LABEL_670;
                }
                if (*(void *)(v45 + 120)) {
                  CFDictionaryGetInt64();
                }
                mcProcessor_fixIPAddressURL();
                LODWORD(valuePtr) = APReceiverFairPlayHelperProcessFPInfo(*(void *)(v45 + 400), v52, 0);
                if (valuePtr)
                {
                  APSLogErrorAt();
                  CFMutableDictionaryRef v102 = 0;
                  uint64_t v103 = 0;
                  uint64_t v9 = 4294895352;
                  goto LABEL_670;
                }
              }
            }
          }
          if (!*(unsigned char *)(v45 + 408))
          {
            CFTypeID v239 = CFGetTypeID(v49);
            if (v239 == CFStringGetTypeID())
            {
              if (CFEqual(v49, @"requestForStreamingKey"))
              {
                cf1a = @"requestForStreamingKey";
              }
              else
              {
                int v242 = CFEqual(v49, @"unhandledURLResponse");
                unint64_t v243 = v49;
                if (v242) {
                  unint64_t v243 = @"failedURLResponse";
                }
                cf1a = v243;
              }
              if (!v50 || (CFTypeID v244 = CFGetTypeID(v50), v244 == CFDictionaryGetTypeID()))
              {
                uint64_t v245 = *(void *)(v45 + 392);
                if (!v245)
                {
                  APSLogErrorAt();
                  CFMutableDictionaryRef v102 = 0;
                  uint64_t v103 = 0;
                  goto LABEL_766;
                }
                uint64_t v246 = *(void *)(CMBaseObjectGetVTable() + 16);
                if (v246) {
                  uint64_t v247 = v246;
                }
                else {
                  uint64_t v247 = 0;
                }
                unint64_t v248 = *(uint64_t (**)(uint64_t, __CFString *, const void *, CMTime *))(v247 + 104);
                if (!v248)
                {
                  int v227 = -12782;
                  goto LABEL_633;
                }
                int inserted = v248(v245, cf1a, v50, &block);
LABEL_631:
                int v227 = inserted;
LABEL_633:
                uint64_t v103 = 0;
                goto LABEL_655;
              }
            }
LABEL_143:
            APSLogErrorAt();
            CFMutableDictionaryRef v102 = 0;
            uint64_t v103 = 0;
            uint64_t v9 = 4294895366;
            goto LABEL_670;
          }
        }
        else if (!*(unsigned char *)(v45 + 408))
        {
          goto LABEL_143;
        }
        if (FigCFEqual())
        {
          CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          uint64_t v103 = Mutable;
          if (Mutable)
          {
            CFDictionarySetValue(Mutable, @"kind", @"request");
            CFDictionarySetValue(v103, @"type", @"streamingKey");
            FigCFDictionarySetValue();
            if (v50)
            {
              CFTypeID v223 = CFGetTypeID(v50);
              if (v223 == CFDictionaryGetTypeID()) {
                FigCFDictionarySetValueFromKeyInDict();
              }
            }
            uint64_t v224 = CMBaseObjectGetDerivedStorage();
            uint64_t v225 = v224;
            __src[0] = 0;
            if (*(unsigned char *)(v224 + 384))
            {
              ++*(void *)(v224 + 424);
              Uint Int64 = (const void *)FigCFNumberCreateUInt64();
              if (UInt64)
              {
                CFDictionarySetValue(v103, @"messageID", UInt64);
                int v227 = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v103, 0, (CFMutableDictionaryRef *)__src);
                if (v227)
                {
                  APSLogErrorAt();
                  unint64_t v230 = __src[0];
                }
                else
                {
                  uint64_t v228 = (const void *)FigSemaphoreCreate();
                  pthread_mutex_lock(*(pthread_mutex_t **)(v225 + 432));
                  CFDictionarySetValue(*(CFMutableDictionaryRef *)(v225 + 416), UInt64, v228);
                  pthread_mutex_unlock(*(pthread_mutex_t **)(v225 + 432));
                  uint64_t v229 = *(void *)(v225 + 392);
                  unint64_t v230 = __src[0];
                  uint64_t v231 = *(void *)(CMBaseObjectGetVTable() + 16);
                  if (v231) {
                    uint64_t v232 = v231;
                  }
                  else {
                    uint64_t v232 = 0;
                  }
                  unint64_t v240 = *(uint64_t (**)(uint64_t, const void *, void))(v232 + 64);
                  if (v240)
                  {
                    int v227 = v240(v229, v230, 0);
                    if (!v227)
                    {
                      int v227 = FigSemaphoreWaitRelative();
                      if (v227)
                      {
                        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 90
                          && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                           || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                        pthread_mutex_lock(*(pthread_mutex_t **)(v225 + 432));
                        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v225 + 416), UInt64);
                        pthread_mutex_unlock(*(pthread_mutex_t **)(v225 + 432));
                      }
                      pthread_mutex_lock(*(pthread_mutex_t **)(v225 + 448));
                      uint64_t v253 = CFDictionaryGetValue(*(CFDictionaryRef *)(v225 + 440), UInt64);
                      if (v253) {
                        CFTypeRef v254 = CFRetain(v253);
                      }
                      else {
                        CFTypeRef v254 = 0;
                      }
                      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v225 + 440), UInt64);
                      pthread_mutex_unlock(*(pthread_mutex_t **)(v225 + 448));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
                        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                         || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      block.value = (CMTimeValue)v254;
                      goto LABEL_653;
                    }
                  }
                  else
                  {
                    int v227 = -12782;
                  }
                  APSLogErrorAt();
                }
LABEL_653:
                FigSemaphoreDestroy();
                CFRelease(UInt64);
                if (v230) {
                  CFRelease(v230);
                }
                goto LABEL_655;
              }
              int v227 = -6728;
            }
            else
            {
              int v227 = -6709;
            }
            APSLogErrorAt();
            FigSemaphoreDestroy();
LABEL_655:
            LODWORD(valuePtr) = v227;
            goto LABEL_656;
          }
          goto LABEL_786;
        }
        if (FigCFEqual())
        {
          unint64_t v233 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          uint64_t v103 = v233;
          if (v233)
          {
            CFDictionarySetValue(v233, @"kind", @"request");
            CFDictionarySetValue(v103, @"type", @"unhandledURL");
            CFDictionarySetValue(v103, @"response", v50);
            if (v50)
            {
              CFTypeID v234 = CFGetTypeID(v50);
              if (v234 == CFDictionaryGetTypeID()) {
                FigCFDictionarySetValueFromKeyInDict();
              }
            }
            LODWORD(valuePtr) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v103, 0, (CFMutableDictionaryRef *)&cf);
            if (!valuePtr)
            {
              uint64_t v235 = *(void *)(v45 + 392);
              CFTypeRef v236 = cf;
              uint64_t v237 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v237) {
                uint64_t v238 = v237;
              }
              else {
                uint64_t v238 = 0;
              }
              unint64_t v250 = *(uint64_t (**)(uint64_t, CFTypeRef, void))(v238 + 64);
              if (v250) {
                int v227 = v250(v235, v236, 0);
              }
              else {
                int v227 = -12782;
              }
              LODWORD(valuePtr) = v227;
              goto LABEL_656;
            }
LABEL_788:
            APSLogErrorAt();
            CFMutableDictionaryRef v102 = 0;
            goto LABEL_789;
          }
          goto LABEL_786;
        }
        if (FigCFEqual())
        {
          CFDictionaryGetTypeID();
          CFDictionaryGetTypedValue();
          uint64_t v103 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          if (v103)
          {
            CFDictionaryGetTypeID();
            unint64_t v241 = (const void *)CFDictionaryGetTypedValue();
            if (!v241)
            {
              APSLogErrorAt();
LABEL_715:
              CFMutableDictionaryRef v102 = 0;
LABEL_766:
              uint64_t v9 = 4294895362;
              goto LABEL_670;
            }
            CFDictionarySetValue(v103, @"item", v241);
            CFDictionarySetValue(v103, @"type", @"removePlayQueueItem");
            FigCFDictionarySetValueFromKeyInDict();
            LODWORD(valuePtr) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v103, 0, (CFMutableDictionaryRef *)&cf);
            if (!valuePtr)
            {
              int v227 = APReceiverUIControllerControlVideoPlayback(*(void *)(v45 + 392), (uint64_t)cf);
              goto LABEL_655;
            }
            goto LABEL_788;
          }
LABEL_786:
          APSLogErrorAt();
          CFMutableDictionaryRef v102 = 0;
          uint64_t v103 = 0;
LABEL_789:
          uint64_t v9 = 4294895350;
LABEL_670:
          if (block.value) {
            CFRelease((CFTypeRef)block.value);
          }
          if (v102) {
            CFRelease(v102);
          }
          if (v47) {
            CFRelease(v47);
          }
          if (v103) {
            CFRelease(v103);
          }
          value = cf;
          if (!cf) {
            return v9;
          }
          goto LABEL_679;
        }
        if (!FigCFEqual())
        {
          uint64_t v103 = 0;
          int v227 = (int)valuePtr;
LABEL_656:
          if (v227 && gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
          {
            if (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()) {
              LogPrintF();
            }
            if (gLogCategory_APReceiverRequestProcessorMediaControl <= 10
              && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
          }
          CFMutableDictionaryRef v102 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          if (v102)
          {
            CFDictionarySetNumber();
            if (block.value) {
              CFDictionarySetValue(v102, @"params", (const void *)block.value);
            }
            if (!APReceiverRequestProcessorPreparePlistResponse(v102, v257))
            {
              uint64_t v9 = 0;
              goto LABEL_670;
            }
            APSLogErrorAt();
            goto LABEL_766;
          }
          APSLogErrorAt();
          goto LABEL_715;
        }
        CFDictionaryGetTypeID();
        if (CFDictionaryGetTypedValue())
        {
          CFDictionaryGetTypeID();
          CFDictionaryRef v251 = (const __CFDictionary *)CFDictionaryGetTypedValue();
          if (v251)
          {
            CFDictionaryGetTypeID();
            uint64_t v252 = CFDictionaryGetTypedValue();
            int inserted = mcProcessor_insertPlayQueueItemV2((uint64_t)v6, v251, v252, 0);
            goto LABEL_631;
          }
        }
        goto LABEL_143;
      }
      if (v5 != 1735422066)
      {
        if (v5 != 1735615346) {
          return v9;
        }
        long long v277 = 0u;
        long long v278 = 0u;
        long long v275 = 0u;
        long long v276 = 0u;
        long long v273 = 0u;
        long long v274 = 0u;
        long long v272 = 0u;
        *(_OWORD *)__src = 0u;
        block.value = 0;
        uint64_t v20 = *(void *)(CMBaseObjectGetDerivedStorage() + 392);
        if (v20)
        {
          uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v21) {
            uint64_t v22 = v21;
          }
          else {
            uint64_t v22 = 0;
          }
          int v96 = *(unsigned int (**)(uint64_t, __CFString *, void, CMTime *))(v22 + 112);
          if (v96 && !v96(v20, @"playbackInfo", 0, &block))
          {
            CFDictionaryGetDouble();
            double v98 = v97;
            CFDictionaryGetDouble();
            float v99 = v98;
            float v101 = v100;
            if (gLogCategory_APReceiverRequestProcessorMediaControl <= 10
              && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int v199 = snprintf((char *)__src, 0x80uLL, "duration: %f\nposition: %f\n", v101, v99);
            if (!APReceiverRequestProcessorPrepareBinaryDataResponse((uint64_t)__src, v199, v257))
            {
              uint64_t v9 = 0;
LABEL_406:
              value = (const void *)block.value;
              if (!block.value) {
                return v9;
              }
              goto LABEL_679;
            }
          }
          APSLogErrorAt();
        }
        else
        {
          APSLogErrorAt();
        }
        uint64_t v9 = 4294895362;
        goto LABEL_406;
      }
      uint64_t v68 = CMBaseObjectGetDerivedStorage();
      LODWORD(valuePtr) = 0;
      __src[0] = 0;
      block.value = 0;
      CFTypeRef cf = 0;
      CFStringGetTypeID();
      int v69 = (const void *)CFDictionaryGetTypedValue();
      if (!v69)
      {
        APSLogErrorAt();
        uint64_t v9 = 4294895362;
        goto LABEL_462;
      }
      CFDataGetTypeID();
      CFDataRef v70 = (const __CFData *)CFDictionaryGetTypedValue();
      CFDataRef v71 = v70;
      if (v70)
      {
        if (CFDataGetLength(v70) >= 1)
        {
          CFDictionaryRef v72 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v71, 0, 0, 0);
          CFDataRef v71 = v72;
          if (!v72)
          {
            APSLogErrorAt();
            uint64_t v9 = 4294895354;
            goto LABEL_462;
          }
          int v73 = CFDictionaryGetValue(v72, @"qualifier");
LABEL_174:
          uint64_t v114 = *(void *)(v68 + 392);
          if (!v114)
          {
            APSLogErrorAt();
            goto LABEL_759;
          }
          if (*(unsigned char *)(v68 + 408))
          {
            uint64_t v115 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
            uint64_t v116 = v115;
            if (v115)
            {
              CFDictionarySetValue(v115, @"kind", @"request");
              CFDictionarySetValue(v116, @"type", @"property");
              CFDictionarySetValue(v116, @"property", v69);
              if (v73 && (CFTypeID v117 = CFGetTypeID(v73), v117 == CFDictionaryGetTypeID()))
              {
                mcProcessor_qualifierToRendererParameters((uint64_t)v73, v116);
                FigCFDictionarySetValueFromKeyInDict();
                FigCFDictionarySetValueFromKeyInDict();
              }
              else
              {
                int v118 = FigCFEqual();
                BOOL v119 = v73 == 0;
                if (!v118) {
                  BOOL v119 = 1;
                }
                if (!v119)
                {
                  CFTypeID v120 = CFGetTypeID(v73);
                  if (v120 == CFNumberGetTypeID()) {
                    FigCFDictionarySetValue();
                  }
                }
              }
              LODWORD(valuePtr) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v116, 1, (CFMutableDictionaryRef *)&cf);
              if (!valuePtr)
              {
                uint64_t v121 = *(void *)(v68 + 392);
                CFTypeRef v122 = cf;
                uint64_t v123 = *(void *)(CMBaseObjectGetVTable() + 16);
                if (v123) {
                  uint64_t v124 = v123;
                }
                else {
                  uint64_t v124 = 0;
                }
                uint64_t v138 = *(uint64_t (**)(uint64_t, CFTypeRef, CMTime *))(v124 + 64);
                if (v138)
                {
                  int v139 = v138(v121, v122, &block);
                  LODWORD(valuePtr) = v139;
                  if (v139 == -6727 || !v139)
                  {
LABEL_395:
                    if (v139) {
                      goto LABEL_717;
                    }
                    unint64_t v196 = (__CFDictionary *)block.value;
                    goto LABEL_455;
                  }
                }
                else
                {
                  LODWORD(valuePtr) = -12782;
                }
                if (gLogCategory_APReceiverRequestProcessorMediaControl > 50) {
                  goto LABEL_717;
                }
                if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                  || (v195 = _LogCategory_Initialize(), int v139 = (int)valuePtr, v195))
                {
                  LogPrintF();
                  int v139 = (int)valuePtr;
                }
                goto LABEL_395;
              }
              APSLogErrorAt();
            }
            else
            {
              APSLogErrorAt();
              uint64_t v116 = 0;
            }
            uint64_t v7 = 4294895350;
            goto LABEL_457;
          }
          uint64_t v125 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v125) {
            uint64_t v126 = v125;
          }
          else {
            uint64_t v126 = 0;
          }
          uint64_t v183 = *(uint64_t (**)(uint64_t, const void *, const __CFData *, void **))(v126 + 112);
          if (v183)
          {
            int v184 = v183(v114, v69, v71, __src);
            LODWORD(valuePtr) = v184;
            if (v184 == -6727 || !v184)
            {
LABEL_451:
              unint64_t v196 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (v196)
              {
                CFDictionarySetNumber();
                if (__src[0]) {
                  CFDictionarySetValue(v196, @"value", __src[0]);
                }
                uint64_t v116 = 0;
                block.value = (CMTimeValue)v196;
LABEL_455:
                if (!APReceiverRequestProcessorPreparePlistResponse(v196, v257))
                {
                  uint64_t v7 = 0;
LABEL_457:
                  if (v71) {
                    CFRelease(v71);
                  }
                  if (v116) {
                    CFRelease(v116);
                  }
                  uint64_t v9 = v7;
LABEL_462:
                  if (cf) {
                    CFRelease(cf);
                  }
                  if (block.value) {
                    CFRelease((CFTypeRef)block.value);
                  }
                  value = __src[0];
                  if (!__src[0]) {
                    return v9;
                  }
                  goto LABEL_679;
                }
LABEL_717:
                APSLogErrorAt();
                goto LABEL_457;
              }
              APSLogErrorAt();
LABEL_759:
              uint64_t v116 = 0;
              goto LABEL_457;
            }
          }
          else
          {
            LODWORD(valuePtr) = -12782;
          }
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          goto LABEL_451;
        }
        CFDataRef v71 = 0;
      }
      int v73 = 0;
      goto LABEL_174;
    }
    if (v5 <= 1885435251)
    {
      if (v5 != 1735616870)
      {
        int v13 = 1735684980;
LABEL_23:
        if (v5 != v13) {
          return v9;
        }
LABEL_248:
        *uint64_t v257 = 0;
        return v9;
      }
      uint64_t v62 = CMBaseObjectGetDerivedStorage();
      LODWORD(v260) = 0;
      uint64_t v63 = CFDictionaryCopyCString();
      unint64_t v64 = (void *)v63;
      if (v63) {
        uint64_t v65 = (const char *)v63;
      }
      else {
        uint64_t v65 = "00000000-0000-0000-0000-000000000000";
      }
      strlen(v65);
      int v66 = StringToUUID();
      LODWORD(v260) = v66;
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30)
      {
        if (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        int v66 = (int)v260;
      }
      if (v66
        && gLogCategory_APReceiverRequestProcessorMediaControl <= 60
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v188 = *(void *)(*(void *)(v62 + 128) + 160);
      long long v285 = 0u;
      long long v286 = 0u;
      long long v283 = 0u;
      long long v284 = 0u;
      long long v281 = 0u;
      long long v282 = 0u;
      long long v279 = 0u;
      long long v280 = 0u;
      long long v277 = 0u;
      long long v278 = 0u;
      long long v275 = 0u;
      long long v276 = 0u;
      long long v273 = 0u;
      long long v274 = 0u;
      long long v272 = 0u;
      *(_OWORD *)__src = 0u;
      uint64_t v189 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (v189)
      {
        CFObjectGetPropertyInt64Sync();
        FigCFDictionarySetInt64();
        LODWORD(valuePtr) = *(_DWORD *)(v188 + 96);
        WORD2(valuePtr) = *(_WORD *)(v188 + 100);
        HardwareAddressToCString();
        CFDictionarySetCString();
        CFTypeRef cf = 0;
        p_CFTypeRef cf = &cf;
        uint64_t v269 = 0x2020000000;
        uint64_t v270 = 0;
        unint64_t v190 = *(NSObject **)(v188 + 16);
        block.value = MEMORY[0x263EF8330];
        *(void *)&block.uint64_t timescale = 3221225472;
        block.epoch = (CMTimeEpoch)__APReceiverSystemInfoCopyFeatures_block_invoke;
        uint64_t v264 = &unk_264895E20;
        uint64_t v265 = &cf;
        uint64_t v266 = v188;
        dispatch_sync(v190, &block);
        CFTypeRef v191 = p_cf[3];
        _Block_object_dispose(&cf, 8);
        if (v191 && APSFeaturesGetLegacyFlags()) {
          CFDictionarySetInt64();
        }
        LOBYTE(__src[0]) = 0;
        GetDeviceModelString();
        CFDictionarySetCString();
        if (IsAppleInternalBuild())
        {
          LOBYTE(__src[0]) = 0;
          GetDeviceInternalModelString();
          CFDictionarySetCString();
        }
        LOBYTE(__src[0]) = 0;
        GetSystemBuildVersionString();
        CFDictionarySetCString();
        LOBYTE(__src[0]) = 0;
        HardwareAddressToCString();
        CFDictionarySetCString();
        CFDictionarySetValue(v189, @"protovers", @"1.0");
        APSVersionUtilsGetShortVersionLength();
        CFDictionarySetCString();
        if (IsAppleInternalBuild())
        {
          LOBYTE(__src[0]) = 0;
          GetDeviceUniqueID();
          CFDictionarySetCString();
        }
        if (v191) {
          CFRelease(v191);
        }
        LODWORD(v260) = 0;
        unint64_t v192 = (const char *)CFDictionaryCopyCString();
        uint64_t v193 = (char *)v192;
        if (v192) {
          strlen(v192);
        }
        LODWORD(__src[0]) = 0;
        SNScanF();
        LODWORD(__src[0]) = wmhYOjgJkR();
        CFDictionarySetInt64();
        if (!APReceiverRequestProcessorPrepareXMLPlistResponse(v189, v257))
        {
          uint64_t v9 = 0;
          if (!v64) {
            goto LABEL_366;
          }
          goto LABEL_365;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        LODWORD(v260) = -6728;
        APSLogErrorAt();
        uint64_t v193 = 0;
      }
      uint64_t v9 = 4294895362;
      if (!v64)
      {
LABEL_366:
        free(v193);
        if (v189) {
          CFRelease(v189);
        }
        return v9;
      }
LABEL_365:
      free(v64);
      goto LABEL_366;
    }
    if (v5 != 1885435252)
    {
      if (v5 != 1886151033) {
        return v9;
      }
      cf1 = (void *)CMBaseObjectGetDerivedStorage();
      int started = 0;
      block.value = 0;
      *(void *)&block.uint64_t timescale = 0;
      unint64_t v260 = 0;
      int valuePtr = 0;
      long long v273 = 0u;
      long long v274 = 0u;
      long long v272 = 0u;
      *(_OWORD *)__src = 0u;
      CFTypeRef v259 = 0;
      double Current = CFAbsoluteTimeGetCurrent();
      gettimeofday((timeval *)&block, 0);
      long long v29 = (const char *)CFDictionaryCopyCString();
      long long v30 = (char *)v29;
      if (v29) {
        strlen(v29);
      }
      if (strnicmpx())
      {
        int v258 = 0;
        CFTypeRef cf = 0;
        int64_t v86 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (!v86)
        {
          APSLogErrorAt();
          int v88 = 0;
LABEL_769:
          CFDateRef v150 = 0;
          uint64_t v9 = v7;
          goto LABEL_370;
        }
        CFStringGetTypeID();
        unint64_t v87 = (const void *)CFDictionaryGetTypedValue();
        CFDictionarySetValue(v86, @"Content-Location", v87);
        int v88 = (char *)CFDictionaryCopyCString();
        if (v88)
        {
          size_t v89 = strlen(v88);
          if (v89 >= 0x40)
          {
            APSLogErrorAt();
LABEL_768:
            uint64_t v7 = 4294895366;
            goto LABEL_769;
          }
        }
        else
        {
          size_t v89 = 0;
        }
        __memcpy_chk();
        *((unsigned char *)__src + v89) = 0;
        if (sscanf((const char *)__src, "%f", &v258) != 1) {
          goto LABEL_767;
        }
        int started = CFDictionarySetNumber();
        if (started)
        {
LABEL_729:
          APSLogErrorAt();
          goto LABEL_769;
        }
        free(v88);
        unint64_t v135 = (const char *)CFDictionaryCopyCString();
        int v88 = (char *)v135;
        if (v135) {
          strlen(v135);
        }
        if (!started)
        {
          int started = Base64DecodeCopy();
          if (started) {
            goto LABEL_767;
          }
          CFDictionarySetData();
        }
        int started = 0;
      }
      else
      {
        CFDataGetTypeID();
        CFDataRef v93 = (const __CFData *)CFDictionaryGetTypedValue();
        CFDataRef v94 = v93;
        if (!v93)
        {
          APSLogErrorAt();
          int v88 = 0;
          int64_t v86 = 0;
          CFDateRef v150 = 0;
          goto LABEL_369;
        }
        CFDataGetBytePtr(v93);
        CFDataGetLength(v94);
        CFDictionaryGetTypeID();
        int64_t v86 = (__CFDictionary *)CFCreateWithPlistBytes();
        if (!v86)
        {
          APSLogErrorAt();
          int v88 = 0;
          int64_t v86 = 0;
          goto LABEL_756;
        }
        int v88 = 0;
      }
      long long v140 = CFDictionaryGetValue(v86, @"Start-Estimated-Date");
      uint64_t v141 = v140;
      if (!v140) {
        goto LABEL_235;
      }
      CFTypeID v142 = CFGetTypeID(v140);
      if (v142 == CFDateGetTypeID())
      {
        free(v30);
        uint64_t v143 = (const char *)CFDictionaryCopyCString();
        long long v30 = (char *)v143;
        if (v143)
        {
          strlen(v143);
          CFTypeRef cf = 0;
          p_CFTypeRef cf = 0;
          CFTypeID v144 = CFGetTypeID(v141);
          if (v144 == CFDateGetTypeID())
          {
            int started = ParseFractionalDateString();
            if (!started)
            {
              CFTypeRef v145 = cf;
              uint64_t v146 = (int)p_cf;
              CMTimeValue v147 = block.value;
              uint64_t timescale = block.timescale;
              double v149 = MEMORY[0x230F46E90](v141);
              CFDateRef v150 = CFDateCreate(0, v149 + (double)(1000000 * (v147 - (uint64_t)v145) - v146 + timescale) / 1000000.0);
              if (v150)
              {
                CFDictionarySetValue(v86, @"Start-Estimated-Date", v150);
LABEL_236:
                int v151 = CFDictionaryGetValue(v86, @"Start-Position");
                if (!v151)
                {
                  int v151 = CFDictionaryGetValue(v86, @"Start-Date");
                  if (!v151) {
                    int v151 = CFDictionaryGetValue(v86, @"Start-Estimated-Date");
                  }
                }
                if (gMediaControlVideoDisabled)
                {
                  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                     || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  goto LABEL_369;
                }
                uint64_t v152 = cf1[49];
                uint64_t v153 = *(void *)(CMBaseObjectGetVTable() + 16);
                if (v153) {
                  uint64_t v154 = v153;
                }
                else {
                  uint64_t v154 = 0;
                }
                unint64_t v186 = *(uint64_t (**)(uint64_t, void, void))(v154 + 72);
                if (v186)
                {
                  int started = v186(v152, 0, 0);
                  if (!started)
                  {
                    int v187 = *((_DWORD *)cf1 + 6);
                    if (v187 == 4 || v187 == 128 || v187 == 64) {
                      CFDictionarySetValue(v86, @"allowP2P", (const void *)*MEMORY[0x263EFFB40]);
                    }
                    if (cf1[15]) {
                      CFDictionaryGetInt64();
                    }
                    mcProcessor_fixIPAddressURL();
                    unint64_t v214 = CFDictionaryGetValue(v86, @"Content-Location");
                    if (v214)
                    {
                      CFTypeID v215 = CFGetTypeID(v214);
                      if (v215 == CFStringGetTypeID())
                      {
                        if (CFDictionaryGetValue(v86, @"cookies") && !*((unsigned char *)cf1 + 176))
                        {
                          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
                            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                             || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          CFDictionaryRemoveValue(v86, @"cookies");
                        }
                        if (CFDictionaryGetValue(v86, @"purchaseBundle") && !*((unsigned char *)cf1 + 176))
                        {
                          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
                            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                             || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          CFDictionaryRemoveValue(v86, @"purchaseBundle");
                        }
                        if (IsAppleInternalBuild() && CFDictionaryGetInt64()) {
                          APReceiverSystemInfoClearVideoCache();
                        }
                        int started = mcProcessor_addTLSInfo();
                        if (started)
                        {
                          APSLogErrorAt();
                          uint64_t v9 = 4294895353;
                          goto LABEL_370;
                        }
                        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                          && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                           || _LogCategory_Initialize()))
                        {
                          CFDictionaryGetValue(v86, @"uuid");
                          int v219 = gLogCategory_APReceiverRequestProcessorMediaControl;
                          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 10)
                          {
                            if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                              || (_LogCategory_Initialize(),
                                  int v219 = gLogCategory_APReceiverRequestProcessorMediaControl,
                                  gLogCategory_APReceiverRequestProcessorMediaControl <= 10))
                            {
                              if (v219 == -1) {
                                _LogCategory_Initialize();
                              }
                            }
                          }
                          LogPrintF();
                        }
                        CFDictionarySetInt64();
                        if (cf1[49])
                        {
                          if (*((unsigned char *)cf1 + 408))
                          {
                            int started = mcProcessor_startVideoPlaybackV2((uint64_t)v6);
                            if (!started)
                            {
                              int started = mcProcessor_insertPlayQueueItemV2((uint64_t)v6, v86, 0, (uint64_t)v151);
                              if (!started) {
                                goto LABEL_528;
                              }
                            }
                          }
                          else
                          {
                            unint64_t v260 = "?";
                            int started = APReceiverFairPlayHelperProcessFPInfo(cf1[50], v86, &v260);
                            if (started)
                            {
                              APSLogErrorAt();
                              uint64_t v9 = 4294895352;
                              goto LABEL_370;
                            }
                            int v220 = APReceiverUIControllerStartVideoPlaybackV1(cf1[49], cf1[16], (uint64_t)v86, (uint64_t)&v259);
                            int started = v220;
                            uint64_t v9 = 4294895359;
                            if (v220 <= 452)
                            {
                              if (v220 == -6721) {
                                goto LABEL_370;
                              }
                              if (!v220)
                              {
                                if (!v259)
                                {
                                  APSLogErrorAt();
                                  uint64_t v9 = 4294960534;
                                  goto LABEL_370;
                                }
                                *((_DWORD *)cf1 + 94) = CFDictionaryGetInt64();
LABEL_528:
                                mcProcessor_addTrafficRegistration();
                                if (!*((unsigned char *)cf1 + 384)) {
                                  mcProcessor_logVideoStarted(Current, (uint64_t)v6, v86);
                                }
                                _mcProcessor_StartKeepAliveTimer(v6);
                                *((unsigned char *)cf1 + 384) = 1;
                                AirPlayReceiverServerHoldPowerAssertion(cf1[16]);
                                uint64_t v9 = 0;
                                if (v257) {
                                  *uint64_t v257 = 0;
                                }
                                goto LABEL_370;
                              }
                            }
                            else if (v220 == 453 || v220 == 200453)
                            {
                              goto LABEL_370;
                            }
                          }
                        }
                        goto LABEL_349;
                      }
                    }
                    APSLogErrorAt();
LABEL_757:
                    uint64_t v9 = 4294895366;
                    goto LABEL_370;
                  }
                }
                else
                {
                  int started = -12782;
                }
LABEL_349:
                APSLogErrorAt();
LABEL_369:
                uint64_t v9 = 4294895362;
LABEL_370:
                free(v88);
                free(valuePtr);
                free(v30);
                if (v150) {
                  CFRelease(v150);
                }
                if (v86) {
                  CFRelease(v86);
                }
                if (v259) {
                  CFRelease(v259);
                }
                return v9;
              }
              goto LABEL_729;
            }
          }
LABEL_767:
          APSLogErrorAt();
          goto LABEL_768;
        }
LABEL_235:
        CFDateRef v150 = 0;
        goto LABEL_236;
      }
      APSLogErrorAt();
LABEL_756:
      CFDateRef v150 = 0;
      goto LABEL_757;
    }
    LODWORD(v260) = 0;
    uint64_t v77 = CMBaseObjectGetDerivedStorage();
    block.value = 0;
    bzero(__src, 0x1E000uLL);
    CFTypeRef cf = 0;
    int valuePtr = 0;
    CFStringGetTypeID();
    CFStringRef v78 = (const __CFString *)CFDictionaryGetTypedValue();
    if (!*(unsigned char *)(v77 + 408))
    {
      uint64_t v90 = APReceiverFairPlayHelperCopyAuthorizeItemResponseIntoBuffer(*(void *)(v77 + 400), v3, v78, (char *)__src, 0x1E000uLL, &block);
      if (v90)
      {
        uint64_t v9 = v90;
        APSLogErrorAt();
        goto LABEL_483;
      }
      CFTypeRef v91 = 0;
      CFStringRef v78 = 0;
      unsigned int v83 = 0;
      uint64_t v81 = 0;
      CMTimeValue v92 = block.value;
LABEL_472:
      if (APReceiverRequestProcessorPrepareBinaryDataResponse((uint64_t)__src, v92, v257)) {
        APSLogErrorAt();
      }
      else {
        uint64_t v7 = 0;
      }
      if (!v81) {
        goto LABEL_476;
      }
      goto LABEL_475;
    }
    LODWORD(v260) = mcProcessor_startVideoPlaybackV2((uint64_t)v6);
    if (v260)
    {
      APSLogErrorAt();
      uint64_t v9 = 4294895362;
      goto LABEL_483;
    }
    CFAllocatorRef v79 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, v3);
    uint64_t v81 = MutableCopy;
    if (!MutableCopy)
    {
      APSLogErrorAt();
      uint64_t v9 = 4294895350;
      goto LABEL_483;
    }
    CFDictionarySetValue(MutableCopy, @"type", @"authorizeItem");
    CFDictionarySetValue(v81, @"kind", @"request");
    if (v78)
    {
      unsigned int v82 = CFDictionaryCreateMutable(v79, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      unsigned int v83 = v82;
      if (!v82)
      {
        APSLogErrorAt();
        CFStringRef v78 = 0;
        unsigned int v83 = 0;
        goto LABEL_741;
      }
      CFDictionarySetValue(v82, @"uuid", v78);
      CFDictionarySetValue(v81, @"item", v83);
      CFStringRef v78 = (const __CFString *)CFDictionaryGetValue(v3, @"PIC-Request");
      if (v78)
      {
        CFStringRef v78 = (const __CFString *)[objc_alloc(MEMORY[0x263EFF8F8]) initWithBase64EncodedString:v78 options:0];
        FigCFDictionarySetValue();
      }
      FigCFDictionarySetValueFromKeyInDict();
    }
    else
    {
      unsigned int v83 = 0;
    }
    LODWORD(v260) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v81, 1, (CFMutableDictionaryRef *)&cf);
    if (!v260)
    {
      uint64_t v132 = *(void *)(v77 + 392);
      CFTypeRef v91 = cf;
      uint64_t v133 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v133) {
        uint64_t v134 = v133;
      }
      else {
        uint64_t v134 = 0;
      }
      uint64_t v136 = *(unsigned int (**)(uint64_t, CFTypeRef, void **))(v134 + 64);
      if (v136)
      {
        if (!v136(v132, v91, &valuePtr))
        {
          CFDictionaryRef v137 = (const __CFDictionary *)valuePtr;
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (v137)
          {
            unint64_t v216 = (void *)CFDictionaryGetValue(v137, @"PIC-Data");
            BOOL v217 = (void *)CFDictionaryGetValue(v137, @"playerGUID");
            unsigned int v218 = snprintf((char *)__src, 0x1E000uLL, "%s: %s\n%s: %s\n", "PIC-Data", (const char *)objc_msgSend((id)objc_msgSend(v216, "base64EncodedStringWithOptions:", 0), "cStringUsingEncoding:", 4), "Player-GUID", (const char *)objc_msgSend(v217, "cStringUsingEncoding:", 4));
            if (v218 - 122880 >= 0xFFFE2001)
            {
              CMTimeValue v92 = v218;
              block.value = v218;
              goto LABEL_472;
            }
          }
          APSLogErrorAt();
          APSLogErrorAt();
LABEL_475:
          CFRelease(v81);
          CFTypeRef v91 = cf;
LABEL_476:
          if (v91) {
            CFRelease(v91);
          }
          if (v83) {
            CFRelease(v83);
          }
          if (v78) {
            CFRelease(v78);
          }
          uint64_t v9 = v7;
LABEL_483:
          CFTypeRef v213 = valuePtr;
          if (!valuePtr) {
            return v9;
          }
          goto LABEL_437;
        }
      }
      else
      {
        LODWORD(v260) = -12782;
      }
      APSLogErrorAt();
      goto LABEL_475;
    }
    APSLogErrorAt();
LABEL_741:
    uint64_t v7 = 4294895350;
    goto LABEL_475;
  }
  if (v5 <= 1918989412)
  {
    if (v5 > 1886809963)
    {
      if (v5 == 1886809964)
      {
        uint64_t v74 = CMBaseObjectGetDerivedStorage();
        LODWORD(__src[0]) = 0;
        CFNumberRef v75 = (const __CFNumber *)CFDictionaryGetValue(v3, @"volume");
        if (v75)
        {
          CFNumberRef v76 = v75;
          CFNumberGetValue(v75, kCFNumberFloatType, __src);
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v155 = *(void *)(v74 + 392);
          if (v155)
          {
            uint64_t v156 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v156) {
              uint64_t v157 = v156;
            }
            else {
              uint64_t v157 = 0;
            }
            long long v158 = *(unsigned int (**)(uint64_t, __CFString *, void, const __CFNumber *))(v157 + 120);
            if (v158 && !v158(v155, @"volume", 0, v76))
            {
              uint64_t v7 = 0;
              *uint64_t v257 = 0;
            }
          }
          else
          {
            APSLogErrorAt();
          }
        }
        else
        {
          APSLogErrorAt();
          return 4294895366;
        }
        return v7;
      }
      else if (v5 == 1918984564)
      {
        CFDataGetTypeID();
        CFDataRef v23 = (const __CFData *)CFDictionaryGetTypedValue();
        if (v23
          && (CFDataRef v24 = v23, CFDataGetLength(v23) > 0)
          && (CFDictionaryRef v25 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v24, 0, 0, 0)) != 0)
        {
          CFDictionaryRef v26 = v25;
          CFTypeID v27 = CFGetTypeID(v25);
          if (v27 == CFDictionaryGetTypeID())
          {
            uint64_t v9 = mcProcessor_processSetRateInternal(v6, v26, v257);
          }
          else
          {
            APSLogErrorAt();
            uint64_t v9 = 4294895354;
          }
          CFRelease(v26);
        }
        else
        {
          APSLogErrorAt();
          return 4294895354;
        }
      }
      return v9;
    }
    if (v5 != 1886283375)
    {
      int v13 = 1886679924;
      goto LABEL_23;
    }
    uint64_t v54 = CMBaseObjectGetDerivedStorage();
    uint64_t v55 = v54;
    LODWORD(valuePtr) = 0;
    __src[0] = 0;
    block.value = 0;
    CFTypeRef cf = 0;
    if (*(unsigned char *)(v54 + 408))
    {
      unsigned int v56 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      unsigned int v57 = v56;
      if (!v56
        || (CFDictionarySetValue(v56, @"type", @"playbackInfo"),
            CFDictionarySetValue(v57, @"kind", @"request"),
            LODWORD(valuePtr) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v57, 1, (CFMutableDictionaryRef *)&block), valuePtr))
      {
        APSLogErrorAt();
        uint64_t v130 = 0;
        uint64_t v9 = 4294895350;
        goto LABEL_315;
      }
      uint64_t v58 = *(void *)(v55 + 392);
      CMTimeValue v59 = block.value;
      uint64_t v60 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v60) {
        uint64_t v61 = v60;
      }
      else {
        uint64_t v61 = 0;
      }
      unint64_t v127 = *(uint64_t (**)(uint64_t, CMTimeValue, CFTypeRef *))(v61 + 64);
      if (v127)
      {
        LODWORD(valuePtr) = v127(v58, v59, &cf);
        if (!valuePtr)
        {
          CFDictionaryRef v128 = (const __CFDictionary *)FigCFDictionaryGetValue();
          if (v128)
          {
            uint64_t v129 = CFDictionaryCreateMutableCopy(0, 0, v128);
            uint64_t v130 = v129;
            if (v129)
            {
              mcProcessor_replaceV2RangeKeysWithV1(v129, (const void *)*MEMORY[0x263F01400]);
              mcProcessor_replaceV2RangeKeysWithV1(v130, (const void *)*MEMORY[0x263F013C8]);
              int v131 = APReceiverRequestProcessorPrepareXMLPlistResponse(v130, v257);
LABEL_309:
              LODWORD(valuePtr) = v131;
              if (!v131)
              {
                uint64_t v9 = 0;
LABEL_315:
                if (__src[0]) {
                  CFRelease(__src[0]);
                }
                if (v57) {
                  CFRelease(v57);
                }
                if (block.value) {
                  CFRelease((CFTypeRef)block.value);
                }
                if (cf) {
                  CFRelease(cf);
                }
                if (v130) {
                  CFRelease(v130);
                }
                return v9;
              }
              APSLogErrorAt();
LABEL_314:
              uint64_t v9 = 4294895362;
              goto LABEL_315;
            }
          }
        }
      }
      else
      {
        LODWORD(valuePtr) = -12782;
      }
      APSLogErrorAt();
LABEL_313:
      uint64_t v130 = 0;
      goto LABEL_314;
    }
    unsigned int v57 = *(__CFDictionary **)(v54 + 392);
    if (!v57)
    {
      APSLogErrorAt();
      goto LABEL_313;
    }
    uint64_t v84 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v84) {
      uint64_t v85 = v84;
    }
    else {
      uint64_t v85 = 0;
    }
    uint64_t v175 = *(uint64_t (**)(__CFDictionary *, __CFString *, void, void **))(v85 + 112);
    if (v175)
    {
      LODWORD(valuePtr) = v175(v57, @"playbackInfo", 0, __src);
      if (__src[0])
      {
        CFDictionaryGetDouble();
        if (valuePtr)
        {
LABEL_300:
          int v179 = CFDictionaryGetInt64();
          if (!valuePtr) {
            *(_DWORD *)(v55 + 212) = v179;
          }
          CFDictionaryGetDouble();
          if (!valuePtr) {
            *(void *)(v55 + 216) = v180;
          }
          CFDictionaryGetDouble();
          if (!valuePtr) {
            *(void *)(v55 + 224) = v181;
          }
          CFDictionaryGetDouble();
          if (!valuePtr) {
            *(void *)(v55 + 232) = v182;
          }
          int v131 = APReceiverRequestProcessorPrepareXMLPlistResponse(__src[0], v257);
          unsigned int v57 = 0;
          uint64_t v130 = 0;
          goto LABEL_309;
        }
        double v177 = v176;
        unint64_t v178 = CFDictionaryCreateMutableCopy(0, 0, (CFDictionaryRef)__src[0]);
        if (v178)
        {
          if (__src[0])
          {
            CFRelease(__src[0]);
            __src[0] = 0;
          }
          CFDictionaryRemoveValue(v178, @"playbackLikelyToKeepUpTime");
          if (!*(_DWORD *)(v55 + 208))
          {
            *(_DWORD *)(v55 + 208) = ((v177 - *(double *)(v55 + 200)) * 1000.0);
            CFDictionarySetInt64();
          }
          __src[0] = v178;
          goto LABEL_300;
        }
      }
    }
    else
    {
      LODWORD(valuePtr) = -12782;
    }
    APSLogErrorAt();
    unsigned int v57 = 0;
    goto LABEL_313;
  }
  if (v5 > 1936748657)
  {
    if (v5 != 1936748658)
    {
      if (v5 != 1936941938)
      {
        if (v5 == 1937010544)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (mcProcessor_handleStop())
          {
            APSLogErrorAt();
            return 4294895362;
          }
          uint64_t v9 = 0;
          goto LABEL_248;
        }
        return v9;
      }
      uint64_t v39 = CMBaseObjectGetDerivedStorage();
      LODWORD(valuePtr) = 0;
      CFTypeRef cf = 0;
      CFDataGetTypeID();
      CFDataRef v40 = (const __CFData *)CFDictionaryGetTypedValue();
      CFDataRef v41 = v40;
      if (v40)
      {
        CFDataGetBytePtr(v40);
        CFDataGetLength(v41);
        CFDictionaryGetTypeID();
        CFDataRef v41 = (const __CFData *)CFCreateWithPlistBytes();
        if (!v41)
        {
          APSLogErrorAt();
          uint64_t v9 = 4294895366;
          goto LABEL_436;
        }
      }
      CFNumberRef v42 = (const __CFNumber *)CFDictionaryGetValue(v3, @"position");
      uint64_t v43 = v42;
      if (!v42)
      {
        APSLogErrorAt();
        CFDictionaryRef v203 = 0;
        uint64_t v7 = 4294895366;
        goto LABEL_429;
      }
      CFNumberGetValue(v42, kCFNumberFloatType, &valuePtr);
      int v44 = gLogCategory_APReceiverRequestProcessorMediaControl;
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
      {
        if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
        {
          if (!_LogCategory_Initialize()) {
            goto LABEL_410;
          }
          int v44 = gLogCategory_APReceiverRequestProcessorMediaControl;
        }
        if (v44 == -1) {
          _LogCategory_Initialize();
        }
        LogPrintF();
      }
LABEL_410:
      uint64_t v200 = *(void *)(v39 + 392);
      if (!v200)
      {
        APSLogErrorAt();
        uint64_t v43 = 0;
        CFDictionaryRef v203 = 0;
        goto LABEL_429;
      }
      if (*(unsigned char *)(v39 + 408))
      {
        CFAllocatorRef v201 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unint64_t v202 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        uint64_t v43 = v202;
        if (!v202)
        {
          APSLogErrorAt();
          uint64_t v43 = 0;
          CFDictionaryRef v203 = 0;
          uint64_t v7 = 4294895350;
          goto LABEL_429;
        }
        CFDictionarySetValue(v202, @"type", @"seek");
        CFDictionarySetValue(v43, @"kind", @"request");
        __src[0] = 0;
        __src[1] = 0;
        *(void *)&long long v272 = 0;
        CMTimeMakeWithSeconds((CMTime *)__src, *(float *)&valuePtr, 10000);
        *(_OWORD *)&block.value = *(_OWORD *)__src;
        block.epoch = v272;
        CFDictionaryRef v203 = CMTimeCopyAsDictionary(&block, v201);
        FigCFDictionarySetValue();
        FigCFDictionarySetValueFromKeyInDict();
        FigCFDictionarySetValue();
        FigCFDictionarySetValueFromKeyInDict();
        if (mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v43, 0, (CFMutableDictionaryRef *)&cf)) {
          goto LABEL_428;
        }
        uint64_t v204 = *(void *)(v39 + 392);
        CFTypeRef v205 = cf;
        uint64_t v206 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v206) {
          uint64_t v207 = v206;
        }
        else {
          uint64_t v207 = 0;
        }
        unint64_t v210 = *(uint64_t (**)(uint64_t, CFTypeRef, void))(v207 + 64);
        if (v210) {
          int v211 = v210(v204, v205, 0);
        }
        else {
          int v211 = -12782;
        }
      }
      else
      {
        uint64_t v208 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v208) {
          uint64_t v209 = v208;
        }
        else {
          uint64_t v209 = 0;
        }
        unint64_t v212 = *(uint64_t (**)(uint64_t, __CFString *, const __CFData *, __CFDictionary *))(v209 + 120);
        if (!v212)
        {
          CFDictionaryRef v203 = 0;
          uint64_t v43 = 0;
          goto LABEL_428;
        }
        int v211 = v212(v200, @"position", v41, v43);
        uint64_t v43 = 0;
        CFDictionaryRef v203 = 0;
      }
      if (!v211)
      {
        uint64_t v7 = 0;
        *uint64_t v257 = 0;
LABEL_429:
        if (v41) {
          CFRelease(v41);
        }
        if (v203) {
          CFRelease(v203);
        }
        if (v43) {
          CFRelease(v43);
        }
        uint64_t v9 = v7;
LABEL_436:
        CFTypeRef v213 = cf;
        if (!cf) {
          return v9;
        }
LABEL_437:
        CFRelease(v213);
        return v9;
      }
LABEL_428:
      APSLogErrorAt();
      goto LABEL_429;
    }
    uint64_t v31 = CMBaseObjectGetDerivedStorage();
    LODWORD(block.value) = 0;
    __src[0] = 0;
    CFStringGetTypeID();
    long long v32 = (const void *)CFDictionaryGetTypedValue();
    if (v32)
    {
      CFDataGetTypeID();
      CFDataRef v33 = (const __CFData *)CFDictionaryGetTypedValue();
      CFDataRef v34 = v33;
      if (!v33)
      {
        uint64_t v37 = 0;
        double v38 = 0;
        goto LABEL_169;
      }
      if (CFDataGetLength(v33) < 1)
      {
        uint64_t v37 = 0;
        double v38 = 0;
        CFDataRef v34 = 0;
        goto LABEL_169;
      }
      CFDataRef v35 = (const __CFData *)CFPropertyListCreateWithData(0, v34, 0, 0, 0);
      CFDataRef v34 = v35;
      if (v35)
      {
        CFTypeID v36 = CFGetTypeID(v35);
        if (v36 != CFDictionaryGetTypeID())
        {
          APSLogErrorAt();
          CFMutableDictionaryRef v160 = 0;
          uint64_t v9 = 4294895354;
LABEL_389:
          CFRelease(v34);
LABEL_390:
          if (v160) {
            CFRelease(v160);
          }
          goto LABEL_392;
        }
        uint64_t v37 = CFDictionaryGetValue(v34, @"qualifier");
        double v38 = CFDictionaryGetValue(v34, @"value");
LABEL_169:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
          && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v159 = *(void *)(v31 + 392);
        if (!v159)
        {
          APSLogErrorAt();
          CFMutableDictionaryRef v160 = 0;
          goto LABEL_388;
        }
        if (!*(unsigned char *)(v31 + 408))
        {
          uint64_t v166 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v166) {
            uint64_t v167 = v166;
          }
          else {
            uint64_t v167 = 0;
          }
          uint64_t v185 = *(uint64_t (**)(uint64_t, const void *, const void *, const void *))(v167 + 120);
          if (v185) {
            int v174 = v185(v159, v32, v37, v38);
          }
          else {
            int v174 = -12782;
          }
          CFMutableDictionaryRef v160 = 0;
          goto LABEL_379;
        }
        CFMutableDictionaryRef v160 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (v160)
        {
          if (v37)
          {
            CFTypeID v161 = CFGetTypeID(v37);
            if (v161 == CFDictionaryGetTypeID())
            {
              mcProcessor_qualifierToRendererParameters((uint64_t)v37, v160);
              FigCFDictionarySetValueFromKeyInDict();
              FigCFDictionarySetValueFromKeyInDict();
            }
          }
          if (FigCFEqual())
          {
            CFDictionarySetValue(v160, @"type", @"seek");
            FigCFDictionarySetValue();
            LODWORD(block.value) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v160, 0, (CFMutableDictionaryRef *)__src);
            if (!LODWORD(block.value))
            {
              uint64_t v162 = *(void *)(v31 + 392);
              uint64_t v163 = __src[0];
              uint64_t v164 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v164) {
                uint64_t v165 = v164;
              }
              else {
                uint64_t v165 = 0;
              }
              unint64_t v173 = *(uint64_t (**)(uint64_t, void *, void))(v165 + 64);
              if (v173)
              {
LABEL_289:
                int v174 = v173(v162, v163, 0);
                goto LABEL_379;
              }
LABEL_378:
              int v174 = -12782;
LABEL_379:
              LODWORD(block.value) = v174;
              if (v174
                && gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFMutableDictionaryRef v194 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (v194)
              {
                CFDictionarySetNumber();
                if (APReceiverRequestProcessorPreparePlistResponse(v194, v257)) {
                  APSLogErrorAt();
                }
                else {
                  uint64_t v7 = 0;
                }
                CFRelease(v194);
              }
              else
              {
                APSLogErrorAt();
              }
LABEL_388:
              uint64_t v9 = v7;
              if (!v34) {
                goto LABEL_390;
              }
              goto LABEL_389;
            }
          }
          else
          {
            CFDictionarySetValue(v160, @"type", @"setProperty");
            CFDictionarySetValue(v160, @"kind", @"request");
            CFDictionarySetValue(v160, @"property", v32);
            CFDictionarySetValue(v160, @"value", v38);
            int v168 = FigCFEqual();
            BOOL v169 = v37 == 0;
            if (!v168) {
              BOOL v169 = 1;
            }
            if (!v169)
            {
              CFTypeID v170 = CFGetTypeID(v37);
              if (v170 == CFNumberGetTypeID()) {
                FigCFDictionarySetValue();
              }
            }
            CFDictionaryGetValue(v34, @"item");
            FigCFDictionarySetValue();
            LODWORD(block.value) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v160, 0, (CFMutableDictionaryRef *)__src);
            if (!LODWORD(block.value))
            {
              uint64_t v162 = *(void *)(v31 + 392);
              uint64_t v163 = __src[0];
              uint64_t v171 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v171) {
                uint64_t v172 = v171;
              }
              else {
                uint64_t v172 = 0;
              }
              unint64_t v173 = *(uint64_t (**)(uint64_t, void *, void))(v172 + 64);
              if (v173) {
                goto LABEL_289;
              }
              goto LABEL_378;
            }
          }
          APSLogErrorAt();
        }
        else
        {
          APSLogErrorAt();
          CFMutableDictionaryRef v160 = 0;
        }
        uint64_t v7 = 4294895350;
        goto LABEL_388;
      }
      APSLogErrorAt();
      uint64_t v9 = 4294895354;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v9 = 4294895362;
    }
LABEL_392:
    if (__src[0]) {
      CFRelease(__src[0]);
    }
    return v9;
  }
  if (v5 != 1918989413)
  {
    if (v5 != 1920365171) {
      return v9;
    }
    LODWORD(block.value) = 0;
    __src[0] = 0;
    uint64_t v14 = CMBaseObjectGetDerivedStorage();
    CFStringGetTypeID();
    CFStringRef v15 = (const __CFString *)CFDictionaryGetTypedValue();
    if (!v15) {
      goto LABEL_708;
    }
    LODWORD(block.value) = CFStringCopyUTF8CString();
    if (!LODWORD(block.value))
    {
      CFStringGetLength(v15);
      if (strnicmpx()) {
        goto LABEL_708;
      }
      __src[0] = 0;
      CFStringGetTypeID();
      CFStringRef v16 = (const __CFString *)CFDictionaryGetTypedValue();
      if (!v16) {
        goto LABEL_708;
      }
      LODWORD(block.value) = CFStringCopyUTF8CString();
      if (!LODWORD(block.value))
      {
        CFStringGetLength(v16);
        if (strnicmpx()) {
          goto LABEL_708;
        }
        __src[0] = 0;
        CFStringGetTypeID();
        CFStringRef v17 = (const __CFString *)CFDictionaryGetTypedValue();
        if (!v17) {
          goto LABEL_708;
        }
        LODWORD(block.value) = CFStringCopyUTF8CString();
        if (!LODWORD(block.value))
        {
          CFStringGetLength(v17);
          if (strncasestr()) {
            *(unsigned char *)(v14 + 313) = 1;
          }
          if (__src[0]) {
            free(__src[0]);
          }
          __src[0] = 0;
          if (*(_OWORD *)(v14 + 104) != 0) {
            goto LABEL_708;
          }
          CFStringGetTypeID();
          CFStringRef v18 = (const __CFString *)CFDictionaryGetTypedValue();
          if (v18)
          {
            LODWORD(block.value) = CFStringCopyUTF8CString();
            if (LODWORD(block.value)) {
              goto LABEL_734;
            }
            CFStringGetLength(v18);
            int v19 = StringToUUID();
            LODWORD(block.value) = v19;
            __src[0] = 0;
          }
          else
          {
            int v19 = StringToUUID();
            LODWORD(block.value) = v19;
          }
          if (v19) {
            goto LABEL_708;
          }
          CFStringGetTypeID();
          CFStringRef v104 = (const __CFString *)CFDictionaryGetTypedValue();
          if (!v104)
          {
            *(unsigned char *)(v14 + 301) = 116;
            *(_DWORD *)(v14 + 297) = 1852143205;
            size_t Length = 5;
            goto LABEL_151;
          }
          LODWORD(block.value) = CFStringCopyUTF8CString();
          if (!LODWORD(block.value))
          {
            size_t Length = CFStringGetLength(v104);
            if (Length < 0x10)
            {
              memcpy((void *)(v14 + 297), __src[0], Length);
              __src[0] = 0;
LABEL_151:
              *(unsigned char *)(v14 + Length + 297) = 0;
              double v106 = *(const void **)(v14 + 128);
              uint64_t v107 = *(void *)(v14 + 32);
              CFObjectSetValue();
              CFRetain(v106);
              dispatch_retain(*(dispatch_object_t *)(v107 + 120));
              CFRetain(v6);
              int v108 = HTTPConnectionDetach();
              if (v108) {
                APSLogErrorAt();
              }
              LODWORD(block.value) = v108;
              goto LABEL_154;
            }
LABEL_708:
            APSLogErrorAt();
LABEL_154:
            CFMutableDictionaryRef v109 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
            if (!v109)
            {
              APSLogErrorAt();
              CFMutableDictionaryRef v109 = 0;
              LODWORD(block.value) = -71950;
              goto LABEL_158;
            }
            LODWORD(block.value) = CFDictionarySetInt64();
            if (LODWORD(block.value))
            {
              APSLogErrorAt();
              goto LABEL_158;
            }
            *uint64_t v257 = v109;
LABEL_157:
            CFMutableDictionaryRef v109 = 0;
LABEL_158:
            uint64_t v110 = *(void *)(v14 + 392);
            uint64_t v111 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v111) {
              uint64_t v112 = v111;
            }
            else {
              uint64_t v112 = 0;
            }
            int v113 = *(void (**)(uint64_t, void))(v112 + 80);
            if (v113) {
              v113(v110, 0);
            }
            if (__src[0]) {
              free(__src[0]);
            }
            if (v109) {
              CFRelease(v109);
            }
            return LODWORD(block.value);
          }
        }
      }
    }
LABEL_734:
    APSLogErrorAt();
    goto LABEL_157;
  }

  return mcProcessor_processSetRateInternal(v6, v3, v257);
}

uint64_t mcProcessor_addTLSInfo()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 120) || (uint64_t v1 = DerivedStorage, !CFDictionaryGetInt64()))
  {
    if (gLogCategory_APReceiverRequestProcessorMediaControl > 50
      || gLogCategory_APReceiverRequestProcessorMediaControl == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
LABEL_13:
    LogPrintF();
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  int v5 = *(uint64_t (**)(uint64_t, const char *, uint64_t, void, void, uint64_t, unsigned char *))(v4 + 24);
  if (v5)
  {
    uint64_t v6 = v5(v2, "Pair-TLS-PSK", 12, 0, 0, 16, v10);
    if (!v6)
    {
      CFDictionarySetData();
      __s[0] = 0;
      SockAddrToString();
      strlen(__s);
      CFDictionarySetData();
      if (gLogCategory_APReceiverRequestProcessorMediaControl > 50
        || gLogCategory_APReceiverRequestProcessorMediaControl == -1 && !_LogCategory_Initialize())
      {
        return 0;
      }
      goto LABEL_13;
    }
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 4294954514;
  }
  APSLogErrorAt();
  return v7;
}

uint64_t mcProcessor_fixIPAddressURL()
{
  return CFDictionaryGetCString();
}

uint64_t mcProcessor_createAndWrapDataDictionaryForV2(uint64_t a1, int a2, CFMutableDictionaryRef *a3)
{
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v6 = Mutable;
    uint64_t CFDataFromCFPropertyList = FigCreateCFDataFromCFPropertyList();
    if (CFDataFromCFPropertyList)
    {
      uint64_t v8 = CFDataFromCFPropertyList;
      APSLogErrorAt();
      CFRelease(v6);
    }
    else
    {
      CFDictionarySetValue(v6, @"data", 0);
      if (a2) {
        CFDictionarySetValue(v6, @"PerformSync", (const void *)*MEMORY[0x263EFFB40]);
      }
      uint64_t v8 = 0;
      *a3 = v6;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895346;
  }
  return v8;
}

uint64_t APReceiverUIControllerControlVideoPlayback(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  CFMutableDictionaryRef v6 = *(uint64_t (**)(uint64_t, uint64_t, void))(v5 + 64);
  if (!v6) {
    return 4294954514;
  }

  return v6(a1, a2, 0);
}

uint64_t mcProcessor_insertPlayQueueItemV2(uint64_t a1, const __CFDictionary *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFMutableDictionaryRef v10 = Mutable;
  CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, a2);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    CFRelease(v10);
    return 4294960568;
  }
  CFMutableDictionaryRef v12 = MutableCopy;
  if (a4 || CFDictionaryGetValue(a2, @"Start-Position"))
  {
    CFDictionaryRef v13 = 0;
  }
  else if (CFDictionaryGetValue(a2, @"Start-Date") || CFDictionaryGetValue(a2, @"Start-Estimated-Date"))
  {
    CFDictionaryRef v13 = 0;
  }
  else
  {
    uint64_t Int64 = CFDictionaryGetInt64();
    memset(&v25, 0, sizeof(v25));
    CMTimeMakeWithSeconds(&v25, (double)(unint64_t)Int64, 10000);
    CMTime v24 = v25;
    CFDictionaryRef v13 = CMTimeCopyAsDictionary(&v24, v8);
  }
  CFDictionaryGetValue(a2, @"uuid");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"Content-Location");
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"HLS-Content-Location");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"textMarkupArray");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"referenceRestrictions");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"outOfBandAlternateTracks");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"inheritURIQueryComponentFromReferencingURI");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"audioOnly");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"tlsPSKEnabled");
  FigCFDictionarySetValue();
  uint64_t v14 = (const void *)*MEMORY[0x263F01328];
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F01328]);
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"buyParams");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"dsid");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"itemID");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"itemType");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"PD-Info");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"Play-Info");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"fpSessionID");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"mz_at");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"purchasedMediaKind");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"userAgent");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, @"audioMode");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F012E8]);
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F012F0]);
  FigCFDictionarySetValue();
  CFDictionarySetValue(v10, @"type", @"insertPlayQueueItem");
  FigCFDictionarySetValue();
  if (a3) {
    FigCFDictionarySetValue();
  }
  CFDictionaryGetValue(a2, @"tlsPSKEnabled");
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, v14);
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F01308]);
  FigCFDictionarySetValue();
  uint64_t v15 = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v10, 0, (CFMutableDictionaryRef *)&cf);
  if (v15)
  {
    uint64_t v21 = v15;
    APSLogErrorAt();
  }
  else
  {
    uint64_t v16 = *(void *)(DerivedStorage + 392);
    CFTypeRef v17 = cf;
    uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    uint64_t v20 = *(uint64_t (**)(uint64_t, CFTypeRef, void))(v19 + 64);
    if (v20) {
      uint64_t v21 = v20(v16, v17, 0);
    }
    else {
      uint64_t v21 = 4294954514;
    }
  }
  CFRelease(v10);
  if (v13) {
    CFRelease(v13);
  }
  CFRelease(v12);
  if (cf) {
    CFRelease(cf);
  }
  return v21;
}

uint64_t APReceiverRequestProcessorPreparePlistResponse(const void *a1, CFMutableDictionaryRef *a2)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895345;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895346;
  }
  CFMutableDictionaryRef v5 = Mutable;
  CFDataRef Data = CFPropertyListCreateData(0, a1, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  if (!Data)
  {
    uint64_t v9 = 4294895344;
    APSLogErrorAt();
LABEL_14:
    CFDataRef v10 = v5;
    goto LABEL_7;
  }
  CFDataRef v7 = Data;
  CFDataGetBytePtr(Data);
  CFDataGetLength(v7);
  uint64_t v8 = CFDictionarySetData();
  if (v8)
  {
    uint64_t v9 = v8;
    goto LABEL_13;
  }
  uint64_t v9 = CFDictionarySetCString();
  if (v9)
  {
LABEL_13:
    APSLogErrorAt();
    CFRelease(v7);
    goto LABEL_14;
  }
  *a2 = v5;
  CFDataRef v10 = v7;
LABEL_7:
  CFRelease(v10);
  return v9;
}

uint64_t mcProcessor_startVideoPlaybackV2(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 384)) {
    return 0;
  }
  uint64_t v3 = DerivedStorage;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFMutableDictionaryRef v5 = Mutable;
  do
    unsigned int add_explicit = atomic_fetch_add_explicit(mcProcessor_getUniqueSessionID_sessionID, 1u, memory_order_relaxed);
  while (add_explicit == -1);
  *(_DWORD *)(v3 + 376) = add_explicit + 1;
  CFDictionarySetInt64();
  CFDictionarySetNumber();
  FigCFDictionarySetValue();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v7 = *(void *)(v3 + 392);
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  CFDataRef v10 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, const void *, const __CFDictionary *), uint64_t (*)(uint64_t, uint64_t, CFMutableDictionaryRef *), uint64_t, CFMutableDictionaryRef))(v9 + 48);
  if (!v10)
  {
    uint64_t v11 = 4294954514;
    goto LABEL_16;
  }
  uint64_t v11 = v10(v7, mcProcessor_UIControllerVideoPlaybackCallback, mcProcessor_UIControllerCopyTLSInfoCallback, a1, v5);
  if (v11)
  {
LABEL_16:
    APSLogErrorAt();
    goto LABEL_17;
  }
  *(unsigned char *)(v3 + 384) = 1;
LABEL_17:
  CFRelease(v5);
  return v11;
}

uint64_t APReceiverRequestProcessorPrepareBinaryDataResponse(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895346;
  }
  CFMutableDictionaryRef v5 = Mutable;
  uint64_t v6 = CFDictionarySetData();
  if (v6)
  {
    uint64_t v7 = v6;
    goto LABEL_8;
  }
  uint64_t v7 = CFDictionarySetCString();
  if (v7)
  {
LABEL_8:
    APSLogErrorAt();
    CFRelease(v5);
    return v7;
  }
  *a3 = v5;
  return v7;
}

void mcProcessor_qualifierToRendererParameters(uint64_t a1, __CFDictionary *a2)
{
  uint64_t Value = FigCFDictionaryGetValue();
  if (Value)
  {
    uint64_t v4 = (const void *)Value;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionarySetValue(Mutable, @"uuid", v4);
    CFDictionarySetValue(a2, @"item", Mutable);
    if (Mutable)
    {
      CFRelease(Mutable);
    }
  }
}

uint64_t APReceiverUIControllerStartVideoPlaybackV1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  CFDataRef v10 = *(uint64_t (**)(uint64_t, uint64_t (*)(dispatch_queue_t *, const void *), uint64_t, uint64_t, uint64_t))(v9 + 88);
  if (!v10) {
    return 4294954514;
  }

  return v10(a1, mcProcessor_handleMediaControlEvent, a2, a3, a4);
}

void mcProcessor_addTrafficRegistration()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  __int16 v13 = 0;
  int v12 = 0;
  CFTypeRef cf = 0;
  APTransportGetSharedTransport();
  uint64_t CMBaseObject = FigTransportGetCMBaseObject();
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, void, CFTypeRef *))(v3 + 48);
  if (!v4)
  {
    int PeerMACAddress = -12782;
    goto LABEL_14;
  }
  int PeerMACAddress = v4(CMBaseObject, *MEMORY[0x263F20DD0], *MEMORY[0x263EFFB08], &cf);
  if (PeerMACAddress)
  {
LABEL_14:
    APSLogErrorAt();
    goto LABEL_24;
  }
  int v5 = *(_DWORD *)(DerivedStorage + 24);
  if (v5 != 4 && v5 != 128 && v5 != 64)
  {
LABEL_21:
    CFDataRef v10 = *(const void **)(DerivedStorage + 168);
    uint64_t v9 = (void *)(DerivedStorage + 168);
    uint64_t v8 = v10;
    if (v10)
    {
      CFRelease(v8);
      *uint64_t v9 = 0;
    }
    int PeerMACAddress = APTransportTrafficRegistrarInfraTransactionCreate();
    if (!PeerMACAddress) {
      goto LABEL_24;
    }
    goto LABEL_14;
  }
  CFDictionaryGetHardwareAddress();
  if (!PeerMACAddress) {
    goto LABEL_17;
  }
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 40
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int PeerMACAddress = GetPeerMACAddress();
  if (!PeerMACAddress)
  {
LABEL_17:
    uint64_t Int64 = CFDictionaryGetInt64();
    uint64_t v7 = *(const void **)(DerivedStorage + 160);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(DerivedStorage + 160) = 0;
    }
    int PeerMACAddress = APTransportTrafficRegistrarAWDLTrafficRegistrationCreate();
    if (PeerMACAddress) {
      goto LABEL_14;
    }
    if ((Int64 & 0xFFFFFFFFFFFFFFFDLL) != 1) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_24:
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t mcProcessor_logVideoStarted(double a1, uint64_t a2, const __CFDictionary *a3)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (*(double *)(result + 200) == 0.0)
  {
    uint64_t v6 = (_DWORD *)result;
    *(void *)(result + 244) = 0;
    uint64_t v7 = (_DWORD *)(result + 244);
    *(double *)(result + 200) = a1;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(void *)(result + 252) = 0;
    UUIDGet();
    CFDictionaryGetInt64();
    if (!CFDictionaryGetValue(a3, @"Start-Position") && !CFDictionaryGetValue(a3, @"Start-Date")) {
      CFDictionaryGetValue(a3, @"Start-Estimated-Date");
    }
    uint64_t result = CFDictionaryGetInt64();
    switch((int)result)
    {
      case 0:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (uint64_t result = _LogCategory_Initialize(), result))
          {
            CFDictionaryGetValue(a3, @"uuid");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            CFDictionaryGetValue(a3, @"path");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            uint64_t result = LogPrintF();
          }
        }
        ++*v7;
        break;
      case 1:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (uint64_t result = _LogCategory_Initialize(), result))
          {
            CFDictionaryGetValue(a3, @"uuid");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            CFDictionaryGetValue(a3, @"Content-Location");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            uint64_t result = LogPrintF();
          }
        }
        ++v6[63];
        break;
      case 2:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (uint64_t result = _LogCategory_Initialize(), result))
          {
            CFDictionaryGetValue(a3, @"uuid");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            CFDictionaryGetValue(a3, @"path");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            uint64_t result = LogPrintF();
          }
        }
        ++v6[62];
        break;
      case 3:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (uint64_t result = _LogCategory_Initialize(), result))
          {
            CFDictionaryGetValue(a3, @"uuid");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            CFDictionaryGetValue(a3, @"Content-Location");
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1) {
              _LogCategory_Initialize();
            }
            uint64_t result = LogPrintF();
          }
        }
        ++v6[64];
        break;
      default:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (uint64_t result = _LogCategory_Initialize(), result))
          {
            uint64_t result = LogPrintF();
          }
        }
        break;
    }
  }
  return result;
}

void _mcProcessor_StartKeepAliveTimer(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  uint64_t v4 = *(NSObject **)(DerivedStorage + 264);
  if (v4)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 264));
    dispatch_release(v4);
    *(void *)(v3 + 264) = 0;
  }
  int v5 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(v3 + 152));
  *(void *)(v3 + 264) = v5;
  if (v5)
  {
    dispatch_set_context(v5, a1);
    dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v3 + 264), (dispatch_function_t)_mcProcessor_KeepAliveTimer);
    uint64_t v6 = *(NSObject **)(v3 + 264);
    dispatch_time_t v7 = dispatch_time(0, 10000000000);
    dispatch_source_set_timer(v6, v7, 0x2540BE400uLL, 0x5F5E100uLL);
    uint64_t v8 = *(NSObject **)(v3 + 264);
    dispatch_resume(v8);
  }
  else
  {
    APSLogErrorAt();
  }
}

void mcProcessor_replaceV2RangeKeysWithV1(__CFDictionary *a1, const void *a2)
{
  CFArrayGetTypeID();
  Typeduint64_t Value = (const __CFArray *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    uint64_t Count = CFArrayGetCount(TypedValue);
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], Count, MEMORY[0x263EFFF70]);
    if (Mutable)
    {
      CFMutableArrayRef v8 = Mutable;
      uint64_t v18 = a1;
      if (Count < 1)
      {
LABEL_12:
        CFDictionarySetValue(v18, a2, v8);
      }
      else
      {
        uint64_t v9 = 0;
        CFDataRef v10 = (const void *)*MEMORY[0x263F01498];
        uint64_t v11 = (const void *)*MEMORY[0x263F01490];
        while (1)
        {
          CFDictionaryGetTypeID();
          TypedCFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetTypedValueAtIndex();
          if (!TypedValueAtIndex) {
            break;
          }
          CFDictionaryRef v13 = TypedValueAtIndex;
          CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v6, 0, TypedValueAtIndex);
          if (!MutableCopy) {
            break;
          }
          uint64_t v15 = MutableCopy;
          uint64_t Value = CFDictionaryGetValue(v13, v10);
          if (Value)
          {
            CFDictionarySetValue(v15, @"startCMTime", Value);
            CFDictionaryRemoveValue(v15, v10);
          }
          CFTypeRef v17 = CFDictionaryGetValue(v13, v11);
          if (v17)
          {
            CFDictionarySetValue(v15, @"durationCMTime", v17);
            CFDictionaryRemoveValue(v15, v11);
          }
          CFArrayAppendValue(v8, v15);
          CFRelease(v15);
          if (Count == ++v9) {
            goto LABEL_12;
          }
        }
        APSLogErrorAt();
      }
      CFRelease(v8);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t APReceiverRequestProcessorPrepareXMLPlistResponse(const void *a1, CFMutableDictionaryRef *a2)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895345;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    uint64_t v9 = 4294895346;
    APSLogErrorAt();
    return v9;
  }
  CFMutableDictionaryRef v5 = Mutable;
  CFDataRef Data = CFPropertyListCreateData(0, a1, kCFPropertyListXMLFormat_v1_0, 0, 0);
  if (!Data)
  {
    uint64_t v9 = 4294895346;
    APSLogErrorAt();
LABEL_14:
    CFDataRef v10 = v5;
    goto LABEL_7;
  }
  CFDataRef v7 = Data;
  CFDataGetBytePtr(Data);
  CFDataGetLength(v7);
  uint64_t v8 = CFDictionarySetData();
  if (v8)
  {
    uint64_t v9 = v8;
    goto LABEL_13;
  }
  uint64_t v9 = CFDictionarySetCString();
  if (v9)
  {
LABEL_13:
    APSLogErrorAt();
    CFRelease(v7);
    goto LABEL_14;
  }
  *a2 = v5;
  CFDataRef v10 = v7;
LABEL_7:
  CFRelease(v10);
  return v9;
}

uint64_t mcProcessor_processSetRateInternal(void *a1, const __CFDictionary *a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  float valuePtr = 0.0;
  CFMutableDictionaryRef v24 = 0;
  CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(a2, @"rate");
  if (!Value)
  {
    uint64_t v22 = 4294895362;
LABEL_39:
    APSLogErrorAt();
    return v22;
  }
  CFNumberRef v8 = Value;
  CFNumberGetValue(Value, kCFNumberFloatType, &valuePtr);
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(void *)(DerivedStorage + 392))
  {
    uint64_t v22 = 4294895362;
    goto LABEL_39;
  }
  uint64_t v9 = *(NSObject **)(DerivedStorage + 264);
  if (valuePtr == 0.0)
  {
    if (v9)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 264));
      dispatch_release(v9);
      *(void *)(DerivedStorage + 264) = 0;
    }
  }
  else if (!v9)
  {
    _mcProcessor_StartKeepAliveTimer(a1);
  }
  if (*(unsigned char *)(DerivedStorage + 408))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (!Mutable)
    {
      APSLogErrorAt();
      return 4294895350;
    }
    uint64_t v11 = Mutable;
    CFDictionarySetValue(Mutable, @"type", @"setRate");
    FigCFDictionarySetFloat32();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    if (mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v11, 0, &v24))
    {
      uint64_t v22 = 4294895362;
      APSLogErrorAt();
      goto LABEL_33;
    }
    uint64_t v12 = *(void *)(DerivedStorage + 392);
    CFMutableDictionaryRef v13 = v24;
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v19 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, void))(v15 + 64);
    if (!v19) {
      goto LABEL_29;
    }
    int v20 = v19(v12, v13, 0);
  }
  else
  {
    uint64_t v16 = *(void *)(DerivedStorage + 392);
    uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v17) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v21 = *(uint64_t (**)(uint64_t, __CFString *, const __CFDictionary *, const __CFNumber *))(v18 + 120);
    if (!v21)
    {
      CFMutableDictionaryRef v13 = 0;
      uint64_t v11 = 0;
      goto LABEL_29;
    }
    int v20 = v21(v16, @"rate", a2, v8);
    CFMutableDictionaryRef v13 = 0;
    uint64_t v11 = 0;
  }
  if (v20 == -6745)
  {
    uint64_t v22 = 4294895362;
    if (!v11) {
      goto LABEL_34;
    }
LABEL_33:
    CFRelease(v11);
    CFMutableDictionaryRef v13 = v24;
    goto LABEL_34;
  }
  if (!v20)
  {
    uint64_t v22 = 0;
    *a3 = 0;
    if (!v11) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_29:
  uint64_t v22 = 4294895362;
  APSLogErrorAt();
  if (v11) {
    goto LABEL_33;
  }
LABEL_34:
  if (v13) {
    CFRelease(v13);
  }
  return v22;
}

uint64_t mcProcessor_handleStop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = CMBaseObjectGetDerivedStorage();
  uint64_t v2 = *(NSObject **)(v1 + 264);
  if (v2)
  {
    uint64_t v3 = v1;
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 264));
    dispatch_release(v2);
    *(void *)(v3 + 264) = 0;
  }
  if (!*(unsigned char *)(DerivedStorage + 384)) {
    return 0;
  }
  uint64_t v4 = CMBaseObjectGetDerivedStorage();
  if (*(double *)(v4 + 200) != 0.0) {
    *(void *)(v4 + 200) = 0;
  }
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 392))
  {
    if (*(unsigned char *)(DerivedStorage + 408))
    {
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!Mutable)
      {
        APSLogErrorAt();
        return 4294960568;
      }
      CFMutableDictionaryRef v7 = Mutable;
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      uint64_t v8 = *(void *)(DerivedStorage + 392);
      uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v9) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v15 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef))(v10 + 56);
      if (v15)
      {
        uint64_t v5 = v15(v8, v7);
        CFMutableDictionaryRef v11 = 0;
      }
      else
      {
        CFMutableDictionaryRef v11 = 0;
        uint64_t v5 = 4294954514;
      }
    }
    else
    {
      CFMutableDictionaryRef v11 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      uint64_t v12 = *(void *)(DerivedStorage + 392);
      uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v13) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = 0;
      }
      uint64_t v16 = *(void (**)(uint64_t, CFMutableDictionaryRef))(v14 + 96);
      if (v16) {
        v16(v12, v11);
      }
      uint64_t v5 = 0;
      CFMutableDictionaryRef v7 = 0;
    }
    uint64_t v17 = *(void *)(DerivedStorage + 128);
    int v18 = *(_DWORD *)(v17 + 204) - 1;
    *(_DWORD *)(v17 + 204) = v18;
    if (!v18)
    {
      IOPMAssertionID v23 = *(_DWORD *)(v17 + 208);
      if (v23)
      {
        IOPMAssertionRelease(v23);
        *(_DWORD *)(v17 + 208) = 0;
        if (gLogCategory_AirPlayReceiverServer <= 40
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    uint64_t v19 = CMBaseObjectGetDerivedStorage();
    int v20 = *(const void **)(v19 + 160);
    if (v20)
    {
      CFRelease(v20);
      *(void *)(v19 + 160) = 0;
    }
    uint64_t v21 = *(const void **)(v19 + 168);
    if (v21)
    {
      CFRelease(v21);
      *(void *)(v19 + 168) = 0;
    }
    *(unsigned char *)(DerivedStorage + 384) = 0;
    if (v7) {
      CFRelease(v7);
    }
    if (v11) {
      CFRelease(v11);
    }
  }
  else
  {
    uint64_t v5 = 4294960534;
    APSLogErrorAt();
  }
  return v5;
}

void _mcProcessor_KeepAliveTimer()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = mach_absolute_time() - *(void *)(DerivedStorage + 272);
  if (v1 <= SecondsToUpTicks())
  {
    if (v1 > SecondsToUpTicks()
      && gLogCategory_APReceiverRequestProcessorMediaControl <= 50
      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
    {
      UpTicksToSeconds();
      LogPrintF();
    }
  }
  else
  {
    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
    {
      UpTicksToSeconds();
      LogPrintF();
    }
    uint64_t v2 = *(NSObject **)(DerivedStorage + 264);
    if (v2)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 264));
      dispatch_release(v2);
      *(void *)(DerivedStorage + 264) = 0;
    }
  }
}

uint64_t mcProcessor_handleMediaControlEvent(dispatch_queue_t *a1, const void *a2)
{
  uint64_t result = AirPlayReceiverServerPostMediaControlEvent(a1, a2);
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30)
  {
    if (gLogCategory_APReceiverRequestProcessorMediaControl != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t mcProcessor_UIControllerCopyTLSInfoCallback(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    return a1;
  }
  a1 = *(void *)(DerivedStorage + 120);
  if (a1)
  {
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    uint64_t v8 = *(uint64_t (**)(uint64_t, const char *, uint64_t, void, void, uint64_t, char *))(v7 + 24);
    if (v8)
    {
      uint64_t v9 = v8(a1, "Pair-TLS-PSK", 12, 0, 0, 16, v14);
      if (!v9)
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (Mutable)
        {
          CFMutableDictionaryRef v11 = Mutable;
          CFDictionarySetData();
          __s[0] = 0;
          SockAddrToString();
          strlen(__s);
          CFDictionarySetData();
          a1 = 0;
          *a3 = v11;
          return a1;
        }
        APSLogErrorAt();
        a1 = 4294960568;
        goto LABEL_16;
      }
      a1 = v9;
    }
    else
    {
      a1 = 4294954514;
    }
    APSLogErrorAt();
LABEL_16:
    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 90
      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return a1;
}

void mcProcessor_UIControllerVideoPlaybackCallback(uint64_t a1, const void *a2, const __CFDictionary *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1
    || !a3
    || (CFDataRef Value = (const __CFData *)CFDictionaryGetValue(a3, @"data")) == 0
    || (CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08],
        (CFDictionaryRef v9 = (const __CFDictionary *)CFPropertyListCreateWithData((CFAllocatorRef)*MEMORY[0x263EFFB08], Value, 0, 0, 0)) == 0))
  {
    APSLogErrorAt();
    return;
  }
  CFDictionaryRef v10 = v9;
  CFDictionaryGetValue(v9, @"kind");
  CFDictionaryGetValue(v10, @"type");
  if (!FigCFEqual())
  {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, v10);
    uint64_t v14 = CFDictionaryGetValue(v10, @"name");
    CFDictionarySetValue(MutableCopy, @"sessionID", a2);
    CFDictionaryGetValue(MutableCopy, @"type");
    if (FigCFEqual())
    {
      CFDictionaryRef v15 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, @"item");
      if (v15) {
        uint64_t v16 = CFDictionaryGetValue(v15, @"uuid");
      }
      else {
        uint64_t v16 = 0;
      }
      CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x263F01268], v14);
      CFDictionaryRemoveValue(MutableCopy, @"kind");
      CFDictionaryRemoveValue(MutableCopy, @"name");
      if (v16) {
        CFDictionarySetValue(MutableCopy, @"uuid", v16);
      }
      CFDictionaryRef v23 = (const __CFDictionary *)CFDictionaryGetValue(v10, @"params");
      if (v23)
      {
        CFMutableDictionaryRef v24 = CFDictionaryCreateMutableCopy(v8, 0, v23);
        uint64_t v21 = v24;
        if (v24)
        {
          mcProcessor_replaceV2RangeKeysWithV1(v24, (const void *)*MEMORY[0x263F01400]);
          mcProcessor_replaceV2RangeKeysWithV1(v21, (const void *)*MEMORY[0x263F013C8]);
          CFDictionarySetValue(MutableCopy, @"params", v21);
        }
        goto LABEL_54;
      }
LABEL_53:
      uint64_t v21 = 0;
LABEL_54:
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      AirPlayReceiverServerPostMediaControlEvent(*(dispatch_queue_t **)(DerivedStorage + 128), MutableCopy);
      CFMutableDictionaryRef Mutable = 0;
      int v20 = 0;
      goto LABEL_62;
    }
    CFDictionaryGetValue(MutableCopy, @"type");
    if (!FigCFEqual())
    {
      CFDictionaryGetValue(MutableCopy, @"type");
      if (FigCFEqual())
      {
        CFDictionaryRemoveValue(MutableCopy, @"type");
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x263F01270], (const void *)*MEMORY[0x263F012C0]);
      }
      goto LABEL_53;
    }
    if (FigCFEqual()
      || FigCFEqual()
      || FigCFEqual()
      || FigCFEqual()
      || FigCFEqual())
    {
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFMutableDictionaryRef Mutable = 0;
      int v20 = 0;
      uint64_t v21 = 0;
LABEL_62:
      CFRelease(v10);
      if (MutableCopy) {
        CFRelease(MutableCopy);
      }
      if (v20) {
        CFRelease(v20);
      }
      if (Mutable) {
        CFRelease(Mutable);
      }
      if (v21)
      {
        CMTime v25 = v21;
LABEL_70:
        CFRelease(v25);
        return;
      }
      return;
    }
    CFDictionaryRef v27 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, @"item");
    if (v27 || (CFDictionaryRef v27 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, @"itemCurrent")) != 0)
    {
      long long v28 = CFDictionaryGetValue(v27, @"uuid");
      CFDictionarySetValue(MutableCopy, @"type", v14);
      if (!v28)
      {
LABEL_87:
        CFDictionaryRemoveValue(MutableCopy, @"kind");
        CFDictionaryRemoveValue(MutableCopy, @"name");
        goto LABEL_53;
      }
      long long v29 = @"uuid";
      long long v30 = MutableCopy;
      uint64_t v31 = v28;
    }
    else
    {
      long long v29 = @"type";
      long long v30 = MutableCopy;
      uint64_t v31 = v14;
    }
    CFDictionarySetValue(v30, v29, v31);
    goto LABEL_87;
  }
  CFMutableDictionaryRef v11 = CFDictionaryGetValue(v10, @"messageID");
  if (!v11
    || (uint64_t v12 = v11, !FigCFEqual())
    && (pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 432)),
        uint64_t v17 = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 416), v12),
        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 416), v12),
        pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 432)),
        !v17))
  {
    APSLogErrorAt();
    CMTime v25 = v10;
    goto LABEL_70;
  }
  if (FigCFEqual())
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (!Mutable)
    {
      CFMutableDictionaryRef MutableCopy = 0;
      int v20 = 0;
      uint64_t v21 = 0;
      goto LABEL_38;
    }
    uint64_t v19 = CFDictionaryGetValue(v10, @"key");
    if (v19)
    {
      int v20 = (const void *)[objc_alloc(MEMORY[0x263EFF8F8]) initWithBase64EncodedString:v19 options:0];
      FigCFDictionarySetValue();
    }
    else
    {
      int v20 = 0;
    }
    CFDictionaryGetValue(v10, @"error");
    FigCFDictionarySetValue();
    uint64_t v22 = (pthread_mutex_t **)(DerivedStorage + 448);
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 448));
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 440), v12, Mutable);
    CFMutableDictionaryRef MutableCopy = 0;
    goto LABEL_36;
  }
  if (FigCFEqual())
  {
    CFDictionaryGetValue(v10, @"info");
    uint64_t v21 = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
    if (!v21)
    {
      CFMutableDictionaryRef MutableCopy = 0;
      CFMutableDictionaryRef Mutable = 0;
      int v20 = 0;
LABEL_38:
      if (FigSemaphoreSignal()) {
        APSLogErrorAt();
      }
      goto LABEL_62;
    }
    CFDictionaryGetValue(v10, @"error");
    FigCFDictionarySetValue();
    uint64_t v22 = (pthread_mutex_t **)(DerivedStorage + 448);
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 448));
    FigCFDictionarySetValue();
    CFMutableDictionaryRef MutableCopy = 0;
    CFMutableDictionaryRef Mutable = 0;
    int v20 = 0;
LABEL_37:
    pthread_mutex_unlock(*v22);
    goto LABEL_38;
  }
  if (!FigCFEqual())
  {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, v10);
    CFDictionaryRemoveValue(MutableCopy, @"type");
    CFDictionaryRemoveValue(MutableCopy, @"kind");
    uint64_t v22 = (pthread_mutex_t **)(DerivedStorage + 448);
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 448));
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 440), v12, MutableCopy);
    CFMutableDictionaryRef Mutable = 0;
    int v20 = 0;
LABEL_36:
    uint64_t v21 = 0;
    goto LABEL_37;
  }
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionaryRef v26 = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  CFDictionarySetValue(v26, @"sessionID", a2);
  AirPlayReceiverServerPostMediaControlEvent(*(dispatch_queue_t **)(DerivedStorage + 128), v26);
  CFRelease(v10);
  if (v26)
  {
    CMTime v25 = v26;
    goto LABEL_70;
  }
}

uint64_t mcProcessor_Start()
{
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

CFStringRef mcProcessor_CopyDebugDescription(const void *a1)
{
  CFAllocatorRef v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, @"<APReceiverRequestProcessorMediaControl %p>", a1);
}

uint64_t mcProcessor_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(v1 + 176) = 0;
  APReceiverFairPlayHelperRemoveAllFPSessions(*(void *)(v1 + 400));
  *(void *)(v1 + 185) = 0;
  *(void *)(v1 + 177) = 0;
  long long v2 = 0uLL;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 225) = 0u;
  *(void *)(v1 + 252) = 0;
  *(void *)(v1 + 244) = 0;
  *(_DWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 20) = 0;
  *(void *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  uint64_t v3 = *(const void **)(v1 + 152);
  if (v3)
  {
    CFRelease(v3);
    long long v2 = 0uLL;
  }
  *(unsigned char *)(v1 + 176) = 0;
  *(_WORD *)(v1 + 260) = 0;
  *(unsigned char *)(v1 + 360) = 0;
  *(_OWORD *)(v1 + 272) = v2;
  *(_OWORD *)(v1 + 288) = v2;
  *(_OWORD *)(v1 + 299) = v2;
  uint64_t v4 = *(const void **)(v1 + 368);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(v1 + 368) = 0;
  }
  *(_WORD *)(v1 + 384) = 0;
  *(void *)(v1 + 376) = 0;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 120);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 392);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 392) = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 400);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 400) = 0;
  }
  CFAllocatorRef v8 = *(const void **)(DerivedStorage + 128);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 128) = 0;
  }
  CFDictionaryRef v9 = *(const void **)(DerivedStorage + 136);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 136) = 0;
  }
  CFDictionaryRef v10 = *(const void **)(DerivedStorage + 416);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 416) = 0;
  }
  CFMutableDictionaryRef v11 = *(const void **)(DerivedStorage + 440);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 440) = 0;
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 160);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(DerivedStorage + 160) = 0;
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 168);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(DerivedStorage + 168) = 0;
  }
  FigSimpleMutexDestroy();
  uint64_t result = FigSimpleMutexDestroy();
  if (*(unsigned char *)(DerivedStorage + 360))
  {
    CFDictionaryRef v15 = *(uint64_t (**)(void))(DerivedStorage + 336);
    if (v15) {
      uint64_t result = v15(*(void *)(DerivedStorage + 320));
    }
  }
  *(unsigned char *)(DerivedStorage + 360) = 0;
  return result;
}

uint64_t mcProcessor_initOnce()
{
  uint64_t result = APSSettingsGetInt64();
  gMediaControlVideoDisabled = result != 0;
  return result;
}

uint64_t _APReceiverAudioSessionGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPReceiverAudioSessionTypeID = result;
  return result;
}

void _APReceiverAudioSessionFinalize(uint64_t a1)
{
  long long v2 = *(const void **)(a1 + 32);
  if (v2) {
    CFTypeRef v3 = CFRetain(v2);
  }
  else {
    CFTypeRef v3 = 0;
  }
  APReceiverAudioSessionInvalidate(a1);
  uint64_t v4 = *(NSObject **)(a1 + 296);
  if (v4) {
    dispatch_release(v4);
  }
  uint64_t v5 = *(NSObject **)(a1 + 288);
  if (v5) {
    dispatch_release(v5);
  }
  uint64_t v6 = *(const void **)(a1 + 320);
  if (v6) {
    CFRelease(v6);
  }
  uint64_t v7 = *(const void **)(a1 + 32);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 32) = 0;
  }
  CFAllocatorRef v8 = *(void **)(a1 + 216);
  if (v8)
  {
    APReceiverAudioSessionPlatformFinalize(v8);
    *(void *)(a1 + 216) = 0;
  }
  CFDictionaryRef v9 = *(void (**)(void))(a1 + 48);
  if (v9) {
    v9(*(void *)(a1 + 40));
  }
  if (*(_DWORD *)(a1 + 24))
  {
    *(_DWORD *)(a1 + 24) = 0;
    if (gLogCategory_APReceiverAudioSession > 50) {
      goto LABEL_25;
    }
    if (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
  }
  if (gLogCategory_APReceiverAudioSession <= 50
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_25:
  if (v3)
  {
    CFRelease(v3);
  }
}

void APReceiverAudioSessionInvalidate(uint64_t a1)
{
  if (a1 && !atomic_exchange((atomic_uint *volatile)(a1 + 16), 1u))
  {
    long long v2 = *(const void **)(a1 + 280);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(a1 + 280) = 0;
    }
    if (*(void *)(a1 + 272))
    {
      FigPKDStopAirPlayReceiverSession();
      *(void *)(a1 + 272) = 0;
    }
    CFTypeRef v3 = *(NSObject **)(a1 + 296);
    if (v3)
    {
      dispatch_source_cancel(v3);
      dispatch_sync_f(*(dispatch_queue_t *)(a1 + 288), 0, (dispatch_function_t)audioSession_sinkFlush);
    }
    if (*(void *)(a1 + 216))
    {
      APReceiverAudioSessionPlatformControl((void *)a1, @"RASP::FlushAudio");
      APReceiverAudioSessionPlatformControl((void *)a1, @"RASP::StopAudioIO");
    }
    uint64_t v4 = *(void (**)(void))(a1 + 56);
    if (v4) {
      v4(*(void *)(a1 + 40));
    }
    if (gLogCategory_APReceiverAudioSession <= 50
      && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

uint64_t APReceiverAudioSessionCreate(int a1, char *a2, const void *a3, uint64_t *a4)
{
  uint64_t v232 = *MEMORY[0x263EF8340];
  unsigned int mSampleRate_low = 0;
  CFNumberRef cf = 0;
  value = 0;
  if (gLogCategory_APReceiverAudioSession <= 30
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v7 = &unk_268402000;
  if (gAPReceiverAudioSessionInitOnce != -1) {
    dispatch_once_f(&gAPReceiverAudioSessionInitOnce, 0, (dispatch_function_t)_APReceiverAudioSessionGetTypeID);
  }
  CFAllocatorRef v8 = &unk_268402000;
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v10 = Instance;
  if (!Instance)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
LABEL_494:
    unsigned int mSampleRate_low = -6728;
    goto LABEL_281;
  }
  *(void *)(Instance + 320) = 0;
  *(_OWORD *)(Instance + 288) = 0u;
  *(_OWORD *)(Instance + 304) = 0u;
  *(_OWORD *)(Instance + 256) = 0u;
  *(_OWORD *)(Instance + 272) = 0u;
  *(_OWORD *)(Instance + 224) = 0u;
  *(_OWORD *)(Instance + 240) = 0u;
  *(_OWORD *)(Instance + 192) = 0u;
  *(_OWORD *)(Instance + 208) = 0u;
  *(_OWORD *)(Instance + 160) = 0u;
  *(_OWORD *)(Instance + 176) = 0u;
  *(_OWORD *)(Instance + 128) = 0u;
  *(_OWORD *)(Instance + 144) = 0u;
  *(_OWORD *)(Instance + 96) = 0u;
  *(_OWORD *)(Instance + 112) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 80) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 16) = 0u;
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t v13 = CFDictionaryGetInt64();
  *(unsigned char *)(v10 + 20) = v13 != 0;
  *(_DWORD *)(v10 + 24) = a1;
  *(void *)(v10 + 216) = 0;
  CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
LABEL_493:
    APSLogErrorAt();
    goto LABEL_494;
  }
  if (Int64)
  {
    uint64_t v204 = (__CFDictionary *)v10;
    uint64_t v16 = (const void *)CFStringCreateF();
    *(void *)(v10 + 32) = v16;
    if (mSampleRate_low) {
      goto LABEL_483;
    }
  }
  else if (v13)
  {
    uint64_t v204 = (__CFDictionary *)v10;
    uint64_t v16 = (const void *)CFStringCreateF();
    *(void *)(v10 + 32) = v16;
    if (mSampleRate_low) {
      goto LABEL_483;
    }
  }
  else
  {
    uint64_t v204 = (__CFDictionary *)v10;
    uint64_t v16 = (const void *)CFStringCreateF();
    *(void *)(v10 + 32) = v16;
    if (mSampleRate_low) {
      goto LABEL_483;
    }
  }
  CFDictionarySetValue(Mutable, @"RASP::LogPrefix", v16);
  int v17 = APSIsATVInHTGroup();
  if (Int64) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = v17 == 0;
  }
  int v19 = !v18;
  int v208 = v19;
  if (v18)
  {
    if (Int64Ranged) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if (gLogCategory_APReceiverAudioSession <= 50)
  {
    if (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize())
    {
      uint64_t v204 = *(__CFDictionary **)(v10 + 32);
      LogPrintF();
    }
LABEL_29:
    if (gLogCategory_APReceiverAudioSession <= 50
      && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
    {
      uint64_t v204 = *(__CFDictionary **)(v10 + 32);
      LogPrintF();
    }
  }
  CFDictionarySetValue(Mutable, @"RASP::DisablePlatformRendering", (const void *)*MEMORY[0x263EFFB40]);
LABEL_34:
  int v20 = *(_DWORD *)(v10 + 24);
  if (v20 == 103)
  {
    if (!Int64Ranged)
    {
      *(_OWORD *)&inSourceFormat.Float64 mSampleRate = *(_OWORD *)a2;
      *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)(a2 + 12);
      unsigned int mSampleRate_low = audioSession_setupGhostAudio(v10, &inSourceFormat, a3);
      if (mSampleRate_low) {
        goto LABEL_483;
      }
      goto LABEL_170;
    }
    if ((v208 & 1) == 0 && APSSettingsGetIntWithDefault())
    {
      if (gLogCategory_APReceiverAudioSession <= 50
        && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
      {
        uint64_t v204 = *(__CFDictionary **)(v10 + 32);
        LogPrintF();
      }
      if (CFDictionaryGetValue((CFDictionaryRef)a3, @"PKDDeviceContext"))
      {
        unsigned int mSampleRate_low = FigPKDStartAirPlayReceiverSession();
        if (mSampleRate_low) {
          goto LABEL_483;
        }
        *(void *)(v10 + 272) = 0;
        *(void *)(v10 + 280) = CFRetain(0);
      }
      char v35 = *a2;
      char v206 = a2[1];
      *(_OWORD *)&inDestinationFormat.Float64 mSampleRate = *(_OWORD *)(a2 + 2);
      *(_OWORD *)((char *)&inDestinationFormat.mFormatID + 2) = *(_OWORD *)(a2 + 12);
      CFTypeID v36 = *(__CFDictionary **)(v10 + 32);
      inPropertyCFDataRef Data = 0;
      v228[0] = 0;
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 30
        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
      {
        uint64_t v204 = v36;
        LogPrintF();
      }
      uint64_t v37 = malloc_type_calloc(1uLL, 0x140uLL, 0x1060040BB7E36B6uLL);
      if (!v37)
      {
        APSLogErrorAt();
        CFTypeRef v49 = 0;
        CFDictionaryRef v48 = 0;
        CFDataRef v47 = 0;
        uint64_t v46 = 0;
        inPropertyCFDataRef Data = -72150;
        goto LABEL_117;
      }
      double v38 = v37;
      *uint64_t v37 = v10;
      v37[3] = CFRetain(v36);
      *((_DWORD *)v38 + 4) = 103;
      uint64_t v39 = CFDictionaryGetValue((CFDictionaryRef)a3, @"ClientID");
      if (v39) {
        uint64_t v39 = CFRetain(v39);
      }
      *((_DWORD *)v38 + 16) = -1;
      v38[4] = v39;
      *((_DWORD *)v38 + 20) = -1;
      CFDataRef v40 = CFDictionaryGetValue((CFDictionaryRef)a3, @"NetworkClock");
      if (v40)
      {
        CFTypeRef v41 = CFRetain(v40);
        v38[21] = v41;
        if (v41)
        {
          CFTypeID v42 = CFGetTypeID(v41);
          if (v42 == APSNetworkClockGetTypeID())
          {
            uint64_t v43 = CFDictionaryGetValue((CFDictionaryRef)a3, @"AudioFormat");
            if (v43)
            {
              CFTypeRef v44 = CFRetain(v43);
              v38[19] = v44;
              if (v44)
              {
                *((unsigned char *)v38 + 116) = CFDictionaryGetInt64() != 0;
                if (inPropertyData) {
                  goto LABEL_574;
                }
                uint64_t v45 = CFDictionaryGetValue((CFDictionaryRef)a3, @"ReceiverSession");
                if (!v45)
                {
                  APSLogErrorAt();
                  uint64_t v46 = 0;
                  CFDataRef v47 = 0;
                  CFDictionaryRef v48 = 0;
                  CFTypeRef v49 = 0;
                  inPropertyCFDataRef Data = APSSignalErrorAt();
                  goto LABEL_116;
                }
                *((_DWORD *)v38 + 59) = v45[124];
                APSCopyClusterInfo();
                if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                  && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                {
                  uint64_t v204 = (__CFDictionary *)v38[3];
                  LogPrintF();
                }
                uint64_t v124 = FigCFWeakReferenceHolderCreateWithReferencedObject();
                v38[1] = v124;
                if (!v124)
                {
LABEL_567:
                  APSLogErrorAt();
                  uint64_t v46 = 0;
                  CFDataRef v47 = 0;
LABEL_568:
                  CFDictionaryRef v48 = 0;
                  CFTypeRef v49 = 0;
                  int v50 = -6728;
                  goto LABEL_115;
                }
                int v125 = CFDictionaryGetInt64Ranged();
                *((_DWORD *)v38 + 10) = v125;
                if (v125 == 1095778640 || v125 == 1381257248)
                {
                  uint64_t v126 = FigSimpleMutexCreate();
                  v38[24] = v126;
                  if (v126)
                  {
                    v38[27] = 0;
                    v38[25] = 0;
                    CFMutableDictionaryRef v127 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                    v38[26] = v127;
                    if (v127)
                    {
                      *((unsigned char *)v38 + 160) = 1;
                      if (!CFDictionaryContainsKey((CFDictionaryRef)a3, @"MediaDataControl"))
                      {
                        CFDataRef v47 = 0;
                        goto LABEL_419;
                      }
                      CFArrayGetTypeID();
                      TypedCFDataRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
                      if (!inPropertyData)
                      {
                        CFIndex Count = CFArrayGetCount(TypedValue);
                        switch(Count)
                        {
                          case 0:
LABEL_415:
                            uint64_t v157 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                            CFDataRef v47 = v157;
                            if (v157)
                            {
                              long long v158 = (const void **)MEMORY[0x263EFFB40];
                              if (!*((unsigned char *)v38 + 116)) {
                                long long v158 = (const void **)MEMORY[0x263EFFB38];
                              }
                              CFDictionarySetValue(v157, @"MDC::AllowP2P", *v158);
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              CFDictionarySetValue(v47, @"MDC::Label", @"BUF");
                              CFDictionarySetInt64();
                              FigCFDictionarySetInt32();
                              *(void *)&long long v229 = v10;
                              *((void *)&v229 + 1) = audioSessionBufferedHose_handleMediaDataControlRequest;
                              uint64_t v230 = 0;
                              LOBYTE(inSourceFormat.mSampleRate) = v35;
                              BYTE1(inSourceFormat.mSampleRate) = v206;
                              *(_OWORD *)((char *)&inSourceFormat.mSampleRate + 2) = *(_OWORD *)&inDestinationFormat.mSampleRate;
                              *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)((char *)&inDestinationFormat.mFormatID
                                                                                  + 2);
                              inPropertyCFDataRef Data = APMediaDataControlServerCreate((uint64_t)&inSourceFormat, v47, &v229, v38 + 6);
                              if (!inPropertyData)
                              {
LABEL_419:
                                CFTypeRef v205 = v47;
                                if (APSSettingsIsFeatureEnabled())
                                {
                                  uint64_t v159 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                                  CFDictionaryRef v48 = v159;
                                  if (!v159)
                                  {
                                    APSLogErrorAt();
                                    uint64_t v46 = 0;
                                    CFTypeRef v49 = 0;
LABEL_938:
                                    inPropertyCFDataRef Data = -6728;
                                    goto LABEL_438;
                                  }
                                  CFDictionarySetValue(v159, (const void *)*MEMORY[0x263F20D48], (const void *)*MEMORY[0x263EFFB40]);
                                  CFDictionarySetInt64();
                                  FigCFDictionaryGetValue();
                                  FigCFDictionarySetValue();
                                  CFMutableDictionaryRef v160 = v38 + 7;
                                  inPropertyCFDataRef Data = APTransportConnectionTCPUnbufferedNWCreate();
                                  if (!inPropertyData)
                                  {
                                    if (*((_DWORD *)v38 + 10) == 1095778640) {
                                      CFTypeID v161 = (void *)MEMORY[0x263F20D60];
                                    }
                                    else {
                                      CFTypeID v161 = (void *)MEMORY[0x263F20D70];
                                    }
                                    uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
                                    uint64_t v163 = *(void *)(CMBaseObjectGetVTable() + 8);
                                    if (v163) {
                                      uint64_t v164 = v163;
                                    }
                                    else {
                                      uint64_t v164 = 0;
                                    }
                                    uint64_t v166 = *(uint64_t (**)(uint64_t, void, void))(v164 + 56);
                                    if (v166)
                                    {
                                      inPropertyCFDataRef Data = v166(CMBaseObject, *MEMORY[0x263F20D98], *v161);
                                      if (!inPropertyData)
                                      {
                                        uint64_t DefaultAirPlayMallocZoneCFAllocator = APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator();
                                        uint64_t v168 = APTransportConnectionGetCMBaseObject();
                                        uint64_t v169 = *(void *)(CMBaseObjectGetVTable() + 8);
                                        if (v169) {
                                          uint64_t v170 = v169;
                                        }
                                        else {
                                          uint64_t v170 = 0;
                                        }
                                        uint64_t v7 = (void *)&unk_268402000;
                                        uint64_t v171 = *(uint64_t (**)(uint64_t, void, uint64_t))(v170 + 56);
                                        if (v171)
                                        {
                                          inPropertyCFDataRef Data = v171(v168, *MEMORY[0x263F20D78], DefaultAirPlayMallocZoneCFAllocator);
                                          if (!inPropertyData)
                                          {
                                            uint64_t v172 = APTransportConnectionGetCMBaseObject();
                                            uint64_t v173 = *(void *)(CMBaseObjectGetVTable() + 8);
                                            if (v173) {
                                              uint64_t v174 = v173;
                                            }
                                            else {
                                              uint64_t v174 = 0;
                                            }
                                            double v177 = *(uint64_t (**)(uint64_t, void, void))(v174 + 56);
                                            if (v177)
                                            {
                                              inPropertyCFDataRef Data = v177(v172, *MEMORY[0x263F20DB0], *MEMORY[0x263EFFB38]);
                                              if (!inPropertyData)
                                              {
                                                uint64_t v178 = *v160;
                                                uint64_t v179 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                if (v179) {
                                                  uint64_t v180 = v179;
                                                }
                                                else {
                                                  uint64_t v180 = 0;
                                                }
                                                uint64_t v182 = *(uint64_t (**)(uint64_t, void *, uint64_t (*)(int, uint64_t, uint64_t), void, void))(v180 + 16);
                                                if (v182)
                                                {
                                                  inPropertyCFDataRef Data = v182(v178, v38, audioSessionBufferedHose_handleAudioDataConnectionEvent, 0, 0);
                                                  if (!inPropertyData)
                                                  {
                                                    uint64_t v183 = *v160;
                                                    uint64_t v184 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                    if (v184) {
                                                      uint64_t v185 = v184;
                                                    }
                                                    else {
                                                      uint64_t v185 = 0;
                                                    }
                                                    int v187 = *(uint64_t (**)(uint64_t))(v185 + 8);
                                                    if (v187)
                                                    {
                                                      inPropertyCFDataRef Data = v187(v183);
                                                      if (!inPropertyData)
                                                      {
                                                        *((_DWORD *)v38 + 27) = APSGetFBOPropertyInt64();
                                                        if (!inPropertyData) {
                                                          goto LABEL_906;
                                                        }
                                                      }
                                                    }
                                                    else
                                                    {
                                                      inPropertyCFDataRef Data = -12782;
                                                    }
                                                  }
                                                }
                                                else
                                                {
                                                  inPropertyCFDataRef Data = -12782;
                                                }
                                              }
                                            }
                                            else
                                            {
                                              inPropertyCFDataRef Data = -12782;
                                            }
                                          }
                                        }
                                        else
                                        {
                                          inPropertyCFDataRef Data = -12782;
                                        }
LABEL_520:
                                        APSLogErrorAt();
                                        uint64_t v46 = 0;
LABEL_521:
                                        CFTypeRef v49 = 0;
                                        goto LABEL_522;
                                      }
                                    }
                                    else
                                    {
                                      inPropertyCFDataRef Data = -12782;
                                    }
                                  }
                                  APSLogErrorAt();
                                  uint64_t v46 = 0;
                                  CFTypeRef v49 = 0;
                                  goto LABEL_438;
                                }
                                *((_DWORD *)v38 + 30) = FigGetCFPreferenceNumberWithDefault();
                                *((unsigned char *)v38 + 124) = 0;
                                if (FigGetCFPreferenceNumberWithDefault())
                                {
                                  unsigned int v165 = ServerSocketOpen();
                                  inPropertyCFDataRef Data = v165;
                                  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50)
                                  {
                                    if (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                                      || _LogCategory_Initialize())
                                    {
                                      uint64_t v204 = (__CFDictionary *)v38[3];
                                      LogPrintF();
                                    }
                                    unsigned int v165 = inPropertyData;
                                  }
                                }
                                else
                                {
                                  unsigned int v165 = ServerSocketOpen();
                                  inPropertyCFDataRef Data = v165;
                                }
                                if (v165) {
                                  goto LABEL_939;
                                }
                                inPropertyCFDataRef Data = SocketSetP2P();
                                if (inPropertyData) {
                                  goto LABEL_939;
                                }
                                *((_DWORD *)v38 + 28) = 0;
                                uint64_t v175 = CFDictionaryGetInt64();
                                *((unsigned char *)v38 + 117) = v175 != 0;
                                if (inPropertyData) {
                                  goto LABEL_939;
                                }
                                if (!v175) {
                                  SocketSetQoS();
                                }
                                if (gLogCategory_APReceiverAudioSessionBufferedHose <= 30
                                  && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                                   || _LogCategory_Initialize()))
                                {
                                  double v176 = (__CFDictionary *)v38[3];
                                  if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 2
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 3
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 5
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 7
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 91
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
                                    && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
                                  {
                                    APSAudioFormatDescriptionGetAudioFormatIndex();
                                  }
                                  uint64_t v204 = v176;
                                  LogPrintF();
                                }
                                inPropertyCFDataRef Data = OpenSelfConnectedLoopbackSocket();
                                if (inPropertyData)
                                {
LABEL_939:
                                  APSLogErrorAt();
                                  uint64_t v46 = 0;
                                  CFDictionaryRef v48 = 0;
                                  goto LABEL_521;
                                }
                                uint64_t v190 = FigSimpleMutexCreate();
                                v38[11] = v190;
                                if (!v190)
                                {
                                  APSLogErrorAt();
                                  uint64_t v46 = 0;
                                  CFDictionaryRef v48 = 0;
                                  goto LABEL_941;
                                }
                                CFDictionaryRef v48 = 0;
                                *((_DWORD *)v38 + 26) = 36;
LABEL_906:
                                uint64_t v191 = FigSimpleMutexCreate();
                                v38[17] = v191;
                                if (v191)
                                {
                                  CFDictionaryGetValue((CFDictionaryRef)a3, @"EncryptionKey");
                                  inPropertyCFDataRef Data = APSCryptorChaCha20Poly1305Create();
                                  if (!inPropertyData)
                                  {
                                    unint64_t v192 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                                    CFTypeRef v49 = v192;
                                    if (v192)
                                    {
                                      CFDictionarySetValue(v192, (const void *)*MEMORY[0x263F249D0], (const void *)*MEMORY[0x263EFFB40]);
                                      uint64_t v204 = v49;
                                      inPropertyCFDataRef Data = APSEndpointStreamAudioHoseSBARCreate();
                                      if (!inPropertyData)
                                      {
                                        uint64_t v46 = (const void *)FigCFWeakReferenceHolderCreateWithReferencedObject();
                                        if (v46)
                                        {
                                          uint64_t v193 = v38[16];
                                          APSEndpointStreamAudioHoseProtocolGetProtocolID();
                                          Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
                                          if (ProtocolVTable)
                                          {
                                            uint64_t v195 = *(void *)(ProtocolVTable + 16);
                                            uint64_t v7 = (void *)&unk_268402000;
                                            if (v195)
                                            {
                                              unint64_t v196 = *(uint64_t (**)(uint64_t, void *, const void *))(v195 + 56);
                                              if (v196)
                                              {
                                                inPropertyCFDataRef Data = v196(v193, &gHoseRegistrarCallbacks, v46);
                                                if (!inPropertyData)
                                                {
                                                  if (!v38[7]
                                                    && (CMNotificationCenterGetDefaultLocalCenter(),
                                                        (inPropertyCFDataRef Data = FigNotificationCenterAddWeakListener()) != 0)
                                                    || (CMNotificationCenterGetDefaultLocalCenter(),
                                                        (inPropertyCFDataRef Data = FigNotificationCenterAddWeakListener()) != 0)
                                                    || (CMNotificationCenterGetDefaultLocalCenter(),
                                                        (inPropertyCFDataRef Data = FigNotificationCenterAddWeakListener()) != 0)
                                                    || !v38[7]
                                                    && (inPropertyCFDataRef Data = audioSessionBufferedHose_updateNetworkThreadPriority((uint64_t)v38)) != 0)
                                                  {
                                                    APSLogErrorAt();
                                                    goto LABEL_522;
                                                  }
                                                  uint64_t v204 = (__CFDictionary *)*v38;
                                                  SNPrintF();
                                                  int v197 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
                                                  unint64_t v198 = dispatch_queue_create((const char *)&inSourceFormat, v197);
                                                  v38[30] = v198;
                                                  if (v198)
                                                  {
                                                    int v199 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, v198);
                                                    v38[31] = v199;
                                                    if (v199)
                                                    {
                                                      dispatch_source_set_timer(v199, 0, 0x3B9ACA00uLL, 0x5F5E100uLL);
                                                      uint64_t v200 = v38[31];
                                                      CFAllocatorRef v201 = (void *)CFRetain(v46);
                                                      dispatch_set_context(v200, v201);
                                                      dispatch_source_set_event_handler_f((dispatch_source_t)v38[31], (dispatch_function_t)audioSessionBufferedHose_glitchMonitorTimerFire);
                                                      dispatch_source_set_cancel_handler_f((dispatch_source_t)v38[31], MEMORY[0x263EFF3B0]);
                                                      dispatch_resume((dispatch_object_t)v38[31]);
                                                      CMNotificationCenterGetDefaultLocalCenter();
                                                      FigNotificationCenterAddWeakListener();
                                                      CMNotificationCenterGetDefaultLocalCenter();
                                                      FigNotificationCenterAddWeakListener();
                                                      APSRTCReportingAgentCreate();
                                                      inPropertyCFDataRef Data = 0;
                                                      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                                                        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                                                         || _LogCategory_Initialize()))
                                                      {
                                                        unint64_t v202 = (__CFDictionary *)v38[3];
                                                        APSAudioFormatDescriptionGetSampleRate();
                                                        uint64_t v204 = v202;
                                                        uint64_t v7 = (void *)&unk_268402000;
                                                        LogPrintF();
                                                      }
                                                      *(void *)(v10 + 40) = v38;
                                                      CFDataRef v47 = v205;
                                                      goto LABEL_117;
                                                    }
                                                  }
                                                  APSLogErrorAt();
                                                  goto LABEL_942;
                                                }
LABEL_930:
                                                CFDataRef v47 = v205;
                                                APSLogErrorAt();
                                                goto LABEL_116;
                                              }
                                              int v203 = -12782;
                                            }
                                            else
                                            {
                                              int v203 = -12788;
                                            }
                                          }
                                          else
                                          {
                                            int v203 = -12788;
                                            uint64_t v7 = (void *)&unk_268402000;
                                          }
                                          inPropertyCFDataRef Data = v203;
                                          goto LABEL_930;
                                        }
                                        APSLogErrorAt();
                                        goto LABEL_938;
                                      }
                                      APSLogErrorAt();
                                      uint64_t v46 = 0;
LABEL_438:
                                      uint64_t v7 = (void *)&unk_268402000;
LABEL_522:
                                      CFDataRef v47 = v205;
                                      goto LABEL_116;
                                    }
                                    APSLogErrorAt();
                                    uint64_t v46 = 0;
LABEL_942:
                                    inPropertyCFDataRef Data = -6728;
                                    goto LABEL_522;
                                  }
                                  goto LABEL_520;
                                }
                                APSLogErrorAt();
                                uint64_t v46 = 0;
LABEL_941:
                                CFTypeRef v49 = 0;
                                goto LABEL_942;
                              }
                              APSLogErrorAt();
                              uint64_t v46 = 0;
LABEL_575:
                              CFDictionaryRef v48 = 0;
                              CFTypeRef v49 = 0;
                              goto LABEL_116;
                            }
                            APSLogErrorAt();
                            uint64_t v46 = 0;
                            goto LABEL_568;
                          case 1:
LABEL_339:
                            CFDataGetTypeID();
                            CFArrayGetTypedValueAtIndex();
                            goto LABEL_415;
                          case 2:
                            CFDataGetTypeID();
                            CFArrayGetTypedValueAtIndex();
                            goto LABEL_339;
                        }
                        goto LABEL_114;
                      }
LABEL_574:
                      APSLogErrorAt();
                      uint64_t v46 = 0;
                      CFDataRef v47 = 0;
                      goto LABEL_575;
                    }
                  }
                  goto LABEL_567;
                }
                if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
                  && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                {
                  uint64_t v204 = (__CFDictionary *)v38[3];
                  LogPrintF();
                }
LABEL_111:
                uint64_t v46 = 0;
                CFDataRef v47 = 0;
                CFDictionaryRef v48 = 0;
                CFTypeRef v49 = 0;
                int v50 = -72151;
LABEL_115:
                inPropertyCFDataRef Data = v50;
LABEL_116:
                free(v38);
LABEL_117:
                if (v228[0]) {
                  CFRelease(v228[0]);
                }
                if (v46) {
                  CFRelease(v46);
                }
                if (v48) {
                  CFRelease(v48);
                }
                CFAllocatorRef v8 = (void *)&unk_268402000;
                if (v47) {
                  CFRelease(v47);
                }
                if (v49) {
                  CFRelease(v49);
                }
                if (inPropertyData)
                {
                  APSLogErrorAt();
                  unsigned int mSampleRate_low = inPropertyData;
                  goto LABEL_483;
                }
                *(void *)(v10 + 56) = APReceiverAudioSessionBufferedHoseInvalidate;
                *(void *)(v10 + 64) = 0;
                *(void *)(v10 + 72) = APReceiverAudioSessionBufferedHoseStartPacketProcesser;
                *(void *)(v10 + 80) = APReceiverAudioSessionBufferedHoseStopPacketProcesser;
                *(void *)(v10 + 88) = APReceiverAudioSessionBufferedHoseFlushAudio;
                *(void *)(v10 + 96) = APReceiverAudioSessionBufferedHoseGetAnchor;
                *(void *)(v10 + 104) = APReceiverAudioSessionBufferedHoseSetRate;
                *(void *)(v10 + 112) = APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime;
                *(void *)(v10 + 128) = 0;
                *(void *)(v10 + 136) = 0;
                *(void *)(v10 + 120) = APReceiverAudioSessionBufferedHoseConvertProgressRTPTimeToSecond;
                *(void *)(v10 + 144) = APReceiverAudioSessionBufferedHoseCopyProperty;
                *(void *)(v10 + 152) = APReceiverAudioSessionBufferedHoseSetProperty;
                *(void *)(v10 + 160) = APReceiverAudioSessionBufferedHoseCopyMetrics;
                *(void *)(v10 + 168) = APReceiverAudioSessionBufferedHoseLogEnded;
                *(void *)(v10 + 176) = 0;
                *(void *)(v10 + 48) = APReceiverAudioSessionBufferedHoseFinalize;
                *(void *)(v10 + 184) = APReceiverAudioSessionBufferedHoseApplyVolumeFade;
                *(void *)(v10 + 192) = 0;
                *(void *)(v10 + 200) = 0;
                *(void *)(v10 + 208) = 0;
                if (gLogCategory_APReceiverAudioSession <= 50
                  && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
                {
                  uint64_t v204 = *(__CFDictionary **)(v10 + 32);
                  LogPrintF();
                }
                unsigned int mSampleRate_low = 0;
                CFDictionarySetValue(Mutable, @"RASP::DisablePlatformRendering", (const void *)*MEMORY[0x263EFFB40]);
                goto LABEL_170;
              }
            }
            else
            {
              v38[19] = 0;
            }
            APSLogErrorAt();
LABEL_114:
            uint64_t v46 = 0;
            CFDataRef v47 = 0;
            CFDictionaryRef v48 = 0;
            CFTypeRef v49 = 0;
            int v50 = -6705;
            goto LABEL_115;
          }
        }
      }
      else
      {
        v38[21] = 0;
      }
      APSLogErrorAt();
      goto LABEL_111;
    }
    char v22 = *a2;
    char v23 = a2[1];
    *(_OWORD *)uint64_t v228 = *(_OWORD *)(a2 + 2);
    *(_OWORD *)((char *)&v228[1] + 2) = *(_OWORD *)(a2 + 12);
    CFMutableDictionaryRef v24 = *(__CFDictionary **)(v10 + 32);
    uint64_t AudioFormatIndex = 0;
    uint64_t v215 = 0;
    if (gLogCategory_APReceiverAudioSessionBuffered <= 30
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      uint64_t v204 = v24;
      LogPrintF();
    }
    CMTime v25 = malloc_type_calloc(1uLL, 0x508uLL, 0x10F0040D1BE82D6uLL);
    if (!v25)
    {
      int v66 = -72150;
      APSLogErrorAt();
      goto LABEL_524;
    }
    CFDictionaryRef v26 = v25;
    *CMTime v25 = v10;
    v25[3] = CFRetain(v24);
    *((_DWORD *)v26 + 4) = 103;
    CFDictionaryRef v27 = CFDictionaryGetValue((CFDictionaryRef)a3, @"ClientID");
    if (v27) {
      CFDictionaryRef v27 = CFRetain(v27);
    }
    v26[4] = v27;
    int v216 = APSRTCReportingAgentCreate();
    if (v216)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 90
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        uint64_t v204 = (__CFDictionary *)v26[3];
        LogPrintF();
      }
      int v216 = 0;
    }
    else if (gLogCategory_APReceiverAudioSessionBuffered <= 40 {
           && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    }
    {
      uint64_t v204 = (__CFDictionary *)v26[3];
      LogPrintF();
    }
    uint64_t v28 = FigSimpleMutexCreate();
    v26[141] = v28;
    if (!v28)
    {
      APSLogErrorAt();
      CFDataRef v33 = 0;
LABEL_551:
      int v34 = -72150;
      goto LABEL_86;
    }
    dispatch_queue_t v29 = dispatch_queue_create("APReceiverAudioSessionQueue", 0);
    v26[149] = v29;
    if (!v29 || (dispatch_queue_t v30 = dispatch_queue_create("APReceiverAudioSessionLogQueue", 0), (v26[155] = v30) == 0))
    {
      APSLogErrorAt();
      CFDataRef v33 = 0;
      int v216 = APSSignalErrorAt();
      goto LABEL_87;
    }
    *((unsigned char *)v26 + 1225) = CFDictionaryGetInt64() != 0;
    if (v216)
    {
      APSLogErrorAt();
      CFDataRef v33 = 0;
      goto LABEL_87;
    }
    if (CFDictionaryGetInt64Ranged() != 1381257248)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 90
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        uint64_t v204 = (__CFDictionary *)v26[3];
        LogPrintF();
      }
      CFDataRef v33 = 0;
      int v34 = -72151;
      goto LABEL_86;
    }
    if (CFDictionaryContainsKey((CFDictionaryRef)a3, @"MediaDataControl"))
    {
      CFArrayGetTypeID();
      CFArrayRef v31 = (const __CFArray *)CFDictionaryGetTypedValue();
      CFIndex v32 = CFArrayGetCount(v31);
      if (v32)
      {
        if (v32 != 1)
        {
          if (v32 != 2)
          {
            CFDataRef v33 = 0;
            int v34 = -6705;
            goto LABEL_86;
          }
          CFDataGetTypeID();
          CFArrayGetTypedValueAtIndex();
        }
        CFDataGetTypeID();
        CFArrayGetTypedValueAtIndex();
      }
      uint64_t v51 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFDataRef v33 = v51;
      if (!v51)
      {
        APSLogErrorAt();
        int v34 = -6728;
        goto LABEL_86;
      }
      CFDictionaryRef v52 = (const void **)MEMORY[0x263EFFB40];
      if (!*((unsigned char *)v26 + 1225)) {
        CFDictionaryRef v52 = (const void **)MEMORY[0x263EFFB38];
      }
      CFDictionarySetValue(v51, @"MDC::AllowP2P", *v52);
      FigCFDictionarySetValue();
      FigCFDictionarySetValue();
      CFDictionarySetValue(v33, @"MDC::Label", @"BUF");
      CFDictionarySetInt64();
      FigCFDictionarySetInt32();
      *(void *)&long long v212 = v10;
      *((void *)&v212 + 1) = audioSession_handleMediaDataControlRequest_5805;
      uint64_t v213 = 0;
      LOBYTE(inSourceFormat.mSampleRate) = v22;
      BYTE1(inSourceFormat.mSampleRate) = v23;
      *(_OWORD *)((char *)&inSourceFormat.mSampleRate + 2) = *(_OWORD *)v228;
      *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)((char *)&v228[1] + 2);
      int v216 = APMediaDataControlServerCreate((uint64_t)&inSourceFormat, v33, &v212, v26 + 5);
      if (v216)
      {
        APSLogErrorAt();
        goto LABEL_87;
      }
    }
    else
    {
      CFDataRef v33 = 0;
    }
    CFAllocatorRef v8 = &unk_268402000;
    *((_DWORD *)v26 + 22) = CFDictionaryGetInt64();
    if (v216) {
      goto LABEL_569;
    }
    int v53 = CFDictionaryGetValue((CFDictionaryRef)a3, @"AudioFormat");
    if (v53)
    {
      CFTypeRef v54 = CFRetain(v53);
      v26[142] = v54;
      if (v54)
      {
        uint64_t v55 = (CFTypeRef *)(v26 + 142);
        uint64_t AudioFormatIndex = APSAudioFormatDescriptionGetAudioFormatIndex();
        if (!AudioFormatIndex)
        {
          int v216 = APCompressionTypeToAPAudioFormatIndex();
          if (v216) {
            goto LABEL_569;
          }
          if (*v55)
          {
            CFRelease(*v55);
            *uint64_t v55 = 0;
          }
          int v216 = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
          if (v216) {
            goto LABEL_569;
          }
        }
        uint64_t ASBD = APSAudioFormatDescriptionGetASBD();
        if (v216) {
          goto LABEL_569;
        }
        *((_DWORD *)v26 + 27) = APAudioFormatIndexGetBitsPerChannel();
        if (!*((_DWORD *)v26 + 22)) {
          *((_DWORD *)v26 + 22) = APAudioFormatIDToAPCompressionType();
        }
        *((_DWORD *)v26 + 23) = *(double *)ASBD;
        int v57 = *(_DWORD *)(ASBD + 28);
        *((_DWORD *)v26 + 24) = v57;
        int v58 = *(_DWORD *)(ASBD + 24);
        *((_DWORD *)v26 + 25) = v58;
        if (!v58) {
          *((_DWORD *)v26 + 25) = (((*((_DWORD *)v26 + 27) + 7) & 0xFFFFFFF8) * v57) >> 3;
        }
        CMTimeValue v59 = CFDictionaryGetValue((CFDictionaryRef)a3, @"NetworkClock");
        v26[143] = v59;
        if (v59)
        {
          CFTypeID v60 = CFGetTypeID(v59);
          if (v60 != APSNetworkClockGetTypeID())
          {
LABEL_564:
            APSLogErrorAt();
            int v65 = -72151;
            goto LABEL_161;
          }
          uint64_t v61 = (const void *)v26[143];
          if (v61) {
            CFRetain(v61);
          }
        }
        *((unsigned char *)v26 + 1152) = CFDictionaryGetInt64() != 0;
        if (v216) {
          goto LABEL_569;
        }
        uint64_t v62 = CFDictionaryGetValue((CFDictionaryRef)a3, @"StatsCollector");
        v26[148] = v62;
        if (v62) {
          CFRetain(v62);
        }
        APTTrafficMetricsCreate();
        int v63 = CFDictionaryGetInt64();
        if (v63)
        {
          int v64 = *((_DWORD *)v26 + 23) * v63 / 0x3E8u;
          *((_DWORD *)v26 + 116) = v64;
        }
        else
        {
          *((_DWORD *)v26 + 116) = CFDictionaryGetInt64();
          int v64 = CFDictionaryGetInt64();
        }
        *((_DWORD *)v26 + 117) = v64;
        *((_DWORD *)v26 + 118) = 0;
        *((_DWORD *)v26 + 26) = CFDictionaryGetInt64();
        CFDictionaryGetData();
        if (v216 == -6727)
        {
          int v216 = 0;
LABEL_298:
          uint64_t v112 = UpTicksPerSecond();
          uint64_t v113 = mach_absolute_time();
          v26[86] = SecondsToUpTicks();
          v26[87] = v113;
          v26[100] = 60 * v112;
          v26[99] = v113 + 60 * v112;
          int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
          *((_DWORD *)v26 + 216) = CFPreferenceNumberWithDefault;
          v26[102] = v113;
          v26[103] = v112 * CFPreferenceNumberWithDefault;
          v26[104] = v112;
          v26[105] = 0;
          v26[106] = v113;
          v26[107] = 10 * v112;
          inSourceFormat.Float64 mSampleRate = 0.0;
          uint64_t v115 = APSNetworkClockGetCMBaseObject();
          uint64_t v116 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v116) {
            uint64_t v117 = v116;
          }
          else {
            uint64_t v117 = 0;
          }
          int v118 = *(void (**)(uint64_t, void, const __CFAllocator *, AudioStreamBasicDescription *))(v117 + 48);
          if (v118)
          {
            v118(v115, *MEMORY[0x263F24A60], v14, &inSourceFormat);
            Float64 mSampleRate = inSourceFormat.mSampleRate;
          }
          else
          {
            Float64 mSampleRate = 0.0;
          }
          CFTypeID v120 = (const void *)*MEMORY[0x263F24A70];
          if (*(void *)&mSampleRate == *MEMORY[0x263F24A70])
          {
            BOOL v121 = 1;
          }
          else
          {
            BOOL v121 = 0;
            if (mSampleRate != 0.0 && v120)
            {
              BOOL v121 = CFEqual(*(CFTypeRef *)&mSampleRate, v120) != 0;
              Float64 mSampleRate = inSourceFormat.mSampleRate;
            }
          }
          if (mSampleRate != 0.0) {
            CFRelease(*(CFTypeRef *)&mSampleRate);
          }
          if (v121) {
            int v122 = -1;
          }
          else {
            int v122 = 4410;
          }
          *((_DWORD *)v26 + 219) = v122;
          *((_DWORD *)v26 + 219) = FigGetCFPreferenceNumberWithDefault();
          uint64_t v7 = (void *)&unk_268402000;
          if (gLogCategory_APReceiverAudioSessionBuffered <= 50
            && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
          {
            uint64_t v204 = (__CFDictionary *)v26[3];
            LogPrintF();
          }
          *((unsigned char *)v26 + 1224) = 1;
          if (!v216)
          {
            if (FigGetCFPreferenceNumberWithDefault())
            {
              int v123 = ServerSocketOpen();
              int v216 = v123;
              if (gLogCategory_APReceiverAudioSessionBuffered <= 50)
              {
                if (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize())
                {
                  uint64_t v204 = (__CFDictionary *)v26[3];
                  LogPrintF();
                }
                int v123 = v216;
              }
            }
            else
            {
              int v123 = ServerSocketOpen();
              int v216 = v123;
            }
            if (!v123)
            {
              if (*((unsigned char *)v26 + 1225)) {
                SocketSetP2P();
              }
              uint64_t v130 = CFDictionaryGetInt64();
              *((unsigned char *)v26 + 1226) = v130 != 0;
              if (!v216)
              {
                if (!v130) {
                  SocketSetQoS();
                }
                int v216 = OpenSelfConnectedLoopbackSocket();
                if (!v216)
                {
                  int v131 = FigGetCFPreferenceNumberWithDefault();
                  if (v131)
                  {
                    *((_DWORD *)v26 + 119) = v131;
                    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
                    {
                      uint64_t v204 = (__CFDictionary *)v26[3];
                      LogPrintF();
                    }
                  }
                  else
                  {
                    int v132 = *((_DWORD *)v26 + 22);
                    if (v132 == 8 || v132 == 4) {
                      int v133 = 5200;
                    }
                    else {
                      int v133 = 15034;
                    }
                    *((_DWORD *)v26 + 119) = v133;
                  }
                  int v134 = FigGetCFPreferenceNumberWithDefault();
                  if (v134)
                  {
                    v26[60] = v134;
                    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
                    {
                      uint64_t v204 = (__CFDictionary *)v26[3];
                      LogPrintF();
                    }
                  }
                  else
                  {
                    v26[60] = 0xFFFFLL;
                  }
                  unint64_t v135 = malloc_type_calloc(1uLL, v26[60], 0x94EA02F4uLL);
                  v26[61] = v135;
                  if (!v135) {
                    goto LABEL_898;
                  }
                  int v136 = FigGetCFPreferenceNumberWithDefault();
                  if (v136)
                  {
                    v26[62] = v136;
                    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
                    {
                      uint64_t v204 = (__CFDictionary *)v26[3];
                      LogPrintF();
                    }
                  }
                  else
                  {
                    int v137 = *((_DWORD *)v26 + 22);
                    if (v137 == 8 || v137 == 4) {
                      uint64_t v138 = 5000000;
                    }
                    else {
                      uint64_t v138 = 21168000;
                    }
                    v26[62] = v138;
                  }
                  v26[63] = 12;
                  APSAllocatorGetDefaultAirPlayMallocZone();
                  int v216 = APSContiguousAllocatorCreate();
                  if (!v216)
                  {
                    int v139 = malloc_type_malloc((unint64_t)*((unsigned int *)v26 + 119) << 6, 0x10700404D6600FEuLL);
                    v26[64] = v139;
                    if (v139)
                    {
                      uint64_t v140 = (*((_DWORD *)v26 + 119) - 1);
                      if (*((_DWORD *)v26 + 119) != 1)
                      {
                        uint64_t v141 = (char *)(v139 + 8);
                        uint64_t v142 = (*((_DWORD *)v26 + 119) - 1);
                        do
                        {
                          *((void *)v141 - 8) = v141;
                          v141 += 64;
                          --v142;
                        }
                        while (v142);
                      }
                      v139[8 * v140] = 0;
                      v26[74] = v139;
                      *((_DWORD *)v26 + 150) = 0;
                      v26[66] = v26 + 65;
                      v26[65] = v26 + 65;
                      v26[73] = v26 + 65;
                      int v143 = FigGetCFPreferenceNumberWithDefault();
                      if (v143)
                      {
                        Buffersocklen_t Size = v143;
                        if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                          && (gLogCategory_APReceiverAudioSessionBuffered != -1
                           || _LogCategory_Initialize()))
                        {
                          uint64_t v204 = (__CFDictionary *)v26[3];
                          LogPrintF();
                        }
LABEL_392:
                        if (*((_DWORD *)v26 + 22) == 1) {
                          goto LABEL_398;
                        }
                        memset(&inSourceFormat, 0, sizeof(inSourceFormat));
                        OSStatus v145 = APCompressionTypeFillStreamDescription();
                        if (v145)
                        {
                          OSStatus v188 = v145;
                        }
                        else
                        {
                          LODWORD(v146) = *((_DWORD *)v26 + 23);
                          inDestinationFormat.Float64 mSampleRate = (double)v146;
                          *(void *)&inDestinationFormat.mFormatID = 0xC6C70636DLL;
                          UInt32 v147 = *((_DWORD *)v26 + 24);
                          unsigned int v148 = *((_DWORD *)v26 + 27);
                          inDestinationFormat.mBytesPerPacket = (v148 >> 3) * v147;
                          inDestinationFormat.mFramesPerPacket = 1;
                          inDestinationFormat.mBytesPerFrame = inDestinationFormat.mBytesPerPacket;
                          inDestinationFormat.mChannelsPerFrame = v147;
                          *(void *)&inDestinationFormat.mBitsPerChannel = v148;
                          OSStatus v149 = AudioConverterNew(&inSourceFormat, &inDestinationFormat, (AudioConverterRef *)v26 + 91);
                          if (v149)
                          {
                            OSStatus v188 = v149;
                          }
                          else
                          {
                            if (inSourceFormat.mFormatID != 1634492771) {
                              goto LABEL_397;
                            }
                            inPropertyCFDataRef Data = bswap32(inSourceFormat.mFramesPerPacket);
                            char v219 = *((_DWORD *)v26 + 27);
                            __int16 v220 = 2600;
                            char v221 = 14;
                            unsigned int v150 = *((_DWORD *)v26 + 23);
                            char v222 = *((_DWORD *)v26 + 24);
                            __int16 v223 = -256;
                            char v218 = 0;
                            int v224 = 0;
                            int v225 = 0;
                            unsigned int v226 = bswap32(v150);
                            OSStatus v151 = AudioConverterSetProperty((AudioConverterRef)v26[91], 0x646D6763u, 0x18u, &inPropertyData);
                            if (!v151)
                            {
LABEL_397:
                              int v216 = 0;
LABEL_398:
                              v26[77] = BufferSize;
                              uint64_t v152 = malloc_type_malloc(BufferSize, 0x96C36513uLL);
                              v26[76] = v152;
                              if (v152)
                              {
                                uint64_t v153 = malloc_type_malloc(v26[77], 0xD3634418uLL);
                                v26[80] = v153;
                                if (v153)
                                {
                                  v26[79] = BufferSize;
                                  uint64_t v154 = malloc_type_malloc(BufferSize, 0xB3D0097AuLL);
                                  v26[78] = v154;
                                  if (v154)
                                  {
                                    gAirPlayAudioStats = xmmword_22B497780;
                                    byte_268402E10 = 0;
                                    qword_268402E18 = 0;
                                    dword_268402E20 = 0;
                                    uint64_t v155 = CFDictionaryGetValue((CFDictionaryRef)a3, @"ReceiverSession");
                                    CFAllocatorRef v8 = (void *)&unk_268402000;
                                    if (v155)
                                    {
                                      *((_DWORD *)v26 + 319) = v155[124];
                                      APSCopyClusterInfo();
                                      if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                                        && (gLogCategory_APReceiverAudioSessionBuffered != -1
                                         || _LogCategory_Initialize()))
                                      {
                                        uint64_t v204 = (__CFDictionary *)v26[3];
                                        LogPrintF();
                                      }
                                      v26[1] = FigCFWeakReferenceHolderCreateWithReferencedObject();
                                      PIDInit();
                                      *((unsigned char *)v26 + 1036) = CFDictionaryGetInt64() != 0;
                                      if (gLogCategory_APReceiverAudioSessionBuffered <= 30
                                        && (gLogCategory_APReceiverAudioSessionBuffered != -1
                                         || _LogCategory_Initialize()))
                                      {
                                        uint64_t v156 = (__CFDictionary *)v26[3];
                                        if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 2)
                                        {
                                          if (APSAudioFormatDescriptionGetAudioFormatIndex() != 3
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 5
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 7
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 91
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
                                            && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
                                          {
                                            APSAudioFormatDescriptionGetAudioFormatIndex();
                                          }
                                          uint64_t v7 = (void *)&unk_268402000;
                                        }
                                        uint64_t v204 = v156;
                                        LogPrintF();
                                      }
                                      v26[83] = 8;
                                      uint64_t v189 = malloc_type_calloc(1uLL, 8uLL, 0x103FD484uLL);
                                      v26[82] = v189;
                                      if (v189)
                                      {
                                        *((unsigned char *)v26 + 1228) = CFPrefs_GetInt64() != 0;
                                        *((unsigned char *)v26 + 1124) = 0;
                                        if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                                          && (gLogCategory_APReceiverAudioSessionBuffered != -1
                                           || _LogCategory_Initialize()))
                                        {
                                          uint64_t v204 = (__CFDictionary *)v26[3];
                                          LogPrintF();
                                        }
                                        APTTrafficMetricsConnectionFormed();
                                        *(void *)(v10 + 40) = v26;
                                        if (!v33)
                                        {
LABEL_164:
                                          int v66 = v216;
                                          if (!v216)
                                          {
                                            *(void *)(v10 + 56) = 0;
                                            *(void *)(v10 + 64) = APReceiverAudioSessionBufferedSetSecurityInfo;
                                            *(void *)(v10 + 72) = APReceiverAudioSessionBufferedStartPacketProcesser;
                                            *(void *)(v10 + 80) = APReceiverAudioSessionBufferedStopPacketProcesser;
                                            *(void *)(v10 + 96) = 0;
                                            *(void *)(v10 + 104) = 0;
                                            *(void *)(v10 + 88) = APReceiverAudioSessionBufferedFlushAudio;
                                            *(void *)(v10 + 112) = APReceiverAudioSessionBufferedSetRateAndAnchorTime;
                                            *(void *)(v10 + 120) = APReceiverAudioSessionBufferedConvertProgressRTPTimeToSecond;
                                            *(void *)(v10 + 128) = APReceiverAudioSessionBufferedReadAudio;
                                            *(void *)(v10 + 136) = APReceiverAudioSessionBufferedUpdateLatency;
                                            *(void *)(v10 + 144) = APReceiverAudioSessionBufferedCopyProperty;
                                            *(void *)(v10 + 152) = APReceiverAudioSessionBufferedSetProperty;
                                            *(void *)(v10 + 160) = APReceiverAudioSessionBufferedCopyMetrics;
                                            *(void *)(v10 + 168) = APReceiverAudioSessionBufferedLogEnded;
                                            *(void *)(v10 + 48) = APReceiverAudioSessionBufferedFinalize;
                                            *(void *)(v10 + 176) = APReceiverAudioSessionBufferedCopyAudioBufferInfo;
                                            *(_OWORD *)(v10 + 184) = 0u;
                                            *(_OWORD *)(v10 + 200) = 0u;
                                            if (gLogCategory_APReceiverAudioSession > 50
                                              || gLogCategory_APReceiverAudioSession == -1
                                              && !_LogCategory_Initialize())
                                            {
                                              goto LABEL_169;
                                            }
                                            uint64_t v204 = *(__CFDictionary **)(v10 + 32);
LABEL_168:
                                            LogPrintF();
LABEL_169:
                                            unsigned int mSampleRate_low = 0;
                                            goto LABEL_170;
                                          }
LABEL_524:
                                          APSLogErrorAt();
                                          unsigned int mSampleRate_low = v66;
                                          goto LABEL_483;
                                        }
LABEL_163:
                                        CFRelease(v33);
                                        goto LABEL_164;
                                      }
                                      goto LABEL_898;
                                    }
                                    APSLogErrorAt();
                                    int v216 = APSSignalErrorAt();
LABEL_162:
                                    free(v26);
                                    if (!v33) {
                                      goto LABEL_164;
                                    }
                                    goto LABEL_163;
                                  }
                                }
                              }
                              APSLogErrorAt();
                              goto LABEL_551;
                            }
                            OSStatus v188 = v151;
                          }
                        }
                        APSLogErrorAt();
                        int v216 = v188;
                        APSLogErrorAt();
                        uint64_t v7 = (void *)&unk_268402000;
                        goto LABEL_87;
                      }
                      Buffersocklen_t Size = APCompressionTypeGetBufferSize();
                      if (BufferSize) {
                        goto LABEL_392;
                      }
                      APSLogErrorAt();
                      int v34 = -6735;
LABEL_86:
                      int v216 = v34;
LABEL_87:
                      CFAllocatorRef v8 = (void *)&unk_268402000;
                      goto LABEL_162;
                    }
LABEL_898:
                    APSLogErrorAt();
                    int v65 = -6728;
                    goto LABEL_161;
                  }
                }
              }
            }
          }
LABEL_569:
          APSLogErrorAt();
          goto LABEL_162;
        }
        if (v216) {
          goto LABEL_569;
        }
        if (v215 == 32)
        {
          for (uint64_t i = 112; i != 416; ++i)
            *((unsigned char *)v26 + i) = 0;
          __memcpy_chk();
          *((unsigned char *)v26 + 112) = 1;
          goto LABEL_298;
        }
        goto LABEL_564;
      }
    }
    else
    {
      v26[142] = 0;
    }
    APSLogErrorAt();
    int v65 = -6705;
LABEL_161:
    int v216 = v65;
    goto LABEL_162;
  }
  if (v20 == 96)
  {
    if (Int64Ranged)
    {
      *(_OWORD *)&inSourceFormat.Float64 mSampleRate = *(_OWORD *)a2;
      *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)(a2 + 12);
      unsigned int v21 = APReceiverAudioSessionRealTimeCreate(v10, *(const void **)(v10 + 32), &inSourceFormat, (const __CFDictionary *)a3, (uint64_t *)(v10 + 40));
      if (v21)
      {
        unsigned int v186 = v21;
        APSLogErrorAt();
        unsigned int mSampleRate_low = v186;
        goto LABEL_483;
      }
      *(void *)(v10 + 56) = APReceiverAudioSessionRealTimeInvalidate;
      *(void *)(v10 + 64) = APReceiverAudioSessionRealTimeSetSecurityInfo;
      *(void *)(v10 + 72) = APReceiverAudioSessionRealTimeStartPacketProcesser;
      *(void *)(v10 + 80) = APReceiverAudioSessionRealTimeStopPacketProcesser;
      *(void *)(v10 + 88) = APReceiverAudioSessionRealTimeFlushAudio;
      *(void *)(v10 + 96) = 0;
      *(void *)(v10 + 104) = 0;
      *(void *)(v10 + 112) = 0;
      *(void *)(v10 + 120) = APReceiverAudioSessionRealTimeConvertProgressRTPTimeToSecond;
      *(void *)(v10 + 128) = APReceiverAudioSessionRealTimeReadAudio;
      *(void *)(v10 + 136) = APReceiverAudioSessionRealTimeUpdateLatency;
      *(void *)(v10 + 144) = APReceiverAudioSessionRealTimeCopyProperty;
      *(void *)(v10 + 152) = APReceiverAudioSessionRealTimeSetProperty;
      *(void *)(v10 + 160) = APReceiverAudioSessionRealTimeCopyMetrics;
      *(void *)(v10 + 168) = APReceiverAudioSessionRealTimeLogEnded;
      *(void *)(v10 + 48) = APReceiverAudioSessionRealTimeFinalize;
      *(void *)(v10 + 176) = APReceiverAudioSessionRealTimeCopyAudioBufferInfo;
      *(_OWORD *)(v10 + 184) = 0u;
      *(_OWORD *)(v10 + 200) = 0u;
      if (gLogCategory_APReceiverAudioSession > 50
        || gLogCategory_APReceiverAudioSession == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_169;
      }
      uint64_t v204 = *(__CFDictionary **)(v10 + 32);
      goto LABEL_168;
    }
    *(_OWORD *)&inSourceFormat.Float64 mSampleRate = *(_OWORD *)a2;
    *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)(a2 + 12);
    unsigned int mSampleRate_low = audioSession_setupGhostAudio(v10, &inSourceFormat, a3);
    if (mSampleRate_low) {
      goto LABEL_483;
    }
  }
LABEL_170:
  if (gLogCategory_APReceiverAudioSession <= 50
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    uint64_t v204 = *(__CFDictionary **)(v10 + 32);
    LogPrintF();
  }
  CFDictionaryGetTypeID();
  CFDictionaryRef v67 = (const __CFDictionary *)CFDictionaryGetTypedValue();
  CFDictionarySetInt64();
  CFNumberRef v70 = APReceiverAudioSessionCopyProperty((const __CFNumber *)v10, v68, @"AudioFormat", v69, &mSampleRate_low);
  CFNumberRef cf = v70;
  if (mSampleRate_low) {
    goto LABEL_483;
  }
  CFDictionarySetValue(Mutable, @"RASP::AudioFormat", v70);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, @"ReceiverSession", (const void **)&value)) {
    CFDictionarySetValue(Mutable, @"RASP::ReceiverSession", value);
  }
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, @"IsMedia", (const void **)&value)) {
    CFDictionarySetValue(Mutable, @"RASP::IsMedia", value);
  }
  if (!CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, @"NetworkClock", (const void **)&value))
  {
    CFDataRef v71 = 0;
    goto LABEL_200;
  }
  CFDataRef v71 = value;
  uint64_t v72 = APSNetworkClockGetCMBaseObject();
  uint64_t v73 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v73) {
    uint64_t v74 = v73;
  }
  else {
    uint64_t v74 = 0;
  }
  CFNumberRef v75 = *(void (**)(uint64_t, void, const __CFAllocator *, void **))(v74 + 48);
  if (v75) {
    v75(v72, *MEMORY[0x263F24A60], v14, &value);
  }
  CFNumberRef v76 = value;
  uint64_t v77 = (const void *)*MEMORY[0x263F24A68];
  if (value == (void *)*MEMORY[0x263F24A68]) {
    goto LABEL_190;
  }
  if (value && v77)
  {
    if (CFEqual(value, v77))
    {
LABEL_190:
      CFStringRef v78 = @"NTP";
LABEL_197:
      CFDictionarySetValue(Mutable, @"RASP::TimingProtocol", v78);
      goto LABEL_198;
    }
    CFNumberRef v76 = value;
  }
  CFAllocatorRef v79 = (const void *)*MEMORY[0x263F24A70];
  if (v76 == (void *)*MEMORY[0x263F24A70] || v76 && v79 && CFEqual(v76, v79))
  {
    CFStringRef v78 = @"PTP";
    goto LABEL_197;
  }
LABEL_198:
  if (value) {
    CFRelease(value);
  }
LABEL_200:
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, @"UsingScreen", (const void **)&value)) {
    CFDictionarySetValue(Mutable, @"RASP::UsingScreen", value);
  }
  if (CFDictionaryGetValueIfPresent(v67, @"audioLoopback", (const void **)&value)) {
    CFDictionarySetValue(Mutable, @"RASP::AudioLookback", value);
  }
  if (CFDictionaryGetValueIfPresent(v67, @"audioType", (const void **)&value)) {
    CFDictionarySetValue(Mutable, @"RASP::AudioType", value);
  }
  if (CFDictionaryGetValueIfPresent(v67, @"audioMode", (const void **)&value)) {
    CFDictionarySetValue(Mutable, @"RASP::AudioMode", value);
  }
  if (!APSAudioFormatDescriptionGetAudioFormatIndex())
  {
    if (v70)
    {
      CFRelease(v70);
      CFNumberRef cf = 0;
    }
    unsigned int mSampleRate_low = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
    if (mSampleRate_low) {
      goto LABEL_483;
    }
  }
  APSAudioFormatDescriptionGetAudioFormatIndex();
  unsigned int mSampleRate_low = APAudioFormatIndexToPCMASBD();
  if (mSampleRate_low) {
    goto LABEL_483;
  }
  LODWORD(inSourceFormat.mSampleRate) = 0;
  unint64_t v80 = (__CFDictionary *)CFDictionaryGetValue(Mutable, @"RASP::LogPrefix");
  CFTypeID v81 = CFGetTypeID((CFTypeRef)v10);
  if (v7[372] != -1) {
    dispatch_once_f(&gAPReceiverAudioSessionInitOnce, 0, (dispatch_function_t)_APReceiverAudioSessionGetTypeID);
  }
  if (v81 != v8[373])
  {
    int v181 = -6705;
LABEL_482:
    APSLogErrorAt();
    unsigned int mSampleRate_low = v181;
LABEL_483:
    APSLogErrorAt();
    goto LABEL_281;
  }
  CFTypeID v82 = CFGetTypeID(Mutable);
  if (v82 != CFDictionaryGetTypeID())
  {
    int v181 = -6705;
    goto LABEL_482;
  }
  if (gLogCategory_APReceiverAudioSessionPlatform <= 50
    && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
  {
    uint64_t v204 = v80;
    LogPrintF();
  }
  if (gAPReceiverAudioSessionPlatformInitOnce != -1) {
    dispatch_once_f(&gAPReceiverAudioSessionPlatformInitOnce, 0, (dispatch_function_t)_APReceiverAudioSessionPlatformGetTypeID);
  }
  uint64_t v83 = _CFRuntimeCreateInstance();
  if (!v83)
  {
    int v181 = -6728;
    goto LABEL_482;
  }
  uint64_t v84 = v83;
  *(_OWORD *)(v83 + 16) = 0u;
  uint64_t v85 = (uint64_t *)(v83 + 16);
  *(void *)(v83 + 256) = 0;
  *(_OWORD *)(v83 + 224) = 0u;
  *(_OWORD *)(v83 + 240) = 0u;
  *(_OWORD *)(v83 + 192) = 0u;
  *(_OWORD *)(v83 + 208) = 0u;
  *(_OWORD *)(v83 + 160) = 0u;
  *(_OWORD *)(v83 + 176) = 0u;
  *(_OWORD *)(v83 + 128) = 0u;
  *(_OWORD *)(v83 + 144) = 0u;
  *(_OWORD *)(v83 + 96) = 0u;
  *(_OWORD *)(v83 + 112) = 0u;
  *(_OWORD *)(v83 + 64) = 0u;
  *(_OWORD *)(v83 + 80) = 0u;
  *(_OWORD *)(v83 + 32) = 0u;
  *(_OWORD *)(v83 + 48) = 0u;
  uint64_t v86 = APSSettingsGetInt64();
  uint64_t v87 = APSSettingsGetInt64();
  int v88 = (const void *)v85[3];
  if (v80) {
    CFRetain(v80);
  }
  *(void *)(v84 + 40) = v80;
  if (v88) {
    CFRelease(v88);
  }
  *(void *)(v84 + 24) = v10;
  if (gAirPlayReceiverSessionInitOnce != -1) {
    dispatch_once_f(&gAirPlayReceiverSessionInitOnce, 0, (dispatch_function_t)_GetTypeID_6083);
  }
  *uint64_t v85 = CFDictionaryGetTypedValue();
  if (LODWORD(inSourceFormat.mSampleRate)) {
    goto LABEL_505;
  }
  *(_DWORD *)(v84 + 48) = CFDictionaryGetInt64();
  if (LODWORD(inSourceFormat.mSampleRate)) {
    goto LABEL_505;
  }
  size_t v89 = CFDictionaryGetValue(Mutable, @"RASP::AudioFormat");
  if (v89) {
    size_t v89 = CFRetain(v89);
  }
  *(void *)(v84 + 56) = v89;
  uint64_t v90 = (CFTypeRef *)(v84 + 56);
  if (!APSAudioFormatDescriptionGetAudioFormatIndex())
  {
    if (*v90)
    {
      CFRelease(*v90);
      *uint64_t v90 = 0;
    }
    LODWORD(inSourceFormat.mSampleRate) = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
    if (LODWORD(inSourceFormat.mSampleRate)) {
      goto LABEL_505;
    }
  }
  APSAudioFormatDescriptionGetAudioFormatIndex();
  LODWORD(inSourceFormat.mSampleRate) = APAudioFormatIndexToPCMASBD();
  if (LODWORD(inSourceFormat.mSampleRate)) {
    goto LABEL_505;
  }
  *(unsigned char *)(v84 + 64) = CFDictionaryGetInt64() != 0;
  *(unsigned char *)(v84 + 69) = CFDictionaryGetInt64() != 0;
  CFStringGetTypeID();
  CFTypeRef v91 = (const void *)CFDictionaryGetTypedValue();
  if (v91 && !CFEqual(v91, @"NTP"))
  {
    BOOL v94 = 0;
  }
  else
  {
    int v92 = *(_DWORD *)(v84 + 48);
    BOOL v94 = v92 == 96 || v92 == 103;
  }
  *(unsigned char *)(v84 + 65) = v94;
  CFObjectGetPropertyDoubleSync();
  APSVolumeConvertDBToLinearGain();
  *(_DWORD *)(v84 + 236) = v95;
  int v96 = *(_DWORD *)(v84 + 48);
  BOOL v98 = v96 == 96 || v96 == 103;
  *(unsigned char *)(v84 + 68) = v98;
  *(unsigned char *)(v84 + 66) = 0;
  CFStringGetTypeID();
  float v99 = (const void *)CFDictionaryGetTypedValue();
  if (v99)
  {
    if ((double v100 = v99, v86) && CFEqual(v99, @"speechRecognition") || v87 && CFEqual(v100, @"telephony")) {
      *(unsigned char *)(v84 + 66) = 1;
    }
  }
  *(unsigned char *)(v84 + 67) = 0;
  CFStringGetTypeID();
  float v101 = (const void *)CFDictionaryGetTypedValue();
  if (v101 && CFEqual(v101, @"moviePlayback")) {
    *(unsigned char *)(v84 + 67) = 1;
  }
  uint64_t v102 = CFDictionaryGetInt64();
  if (LODWORD(inSourceFormat.mSampleRate) {
    || (!v102
  }
      ? (uint64_t v103 = +[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager", v204)): (uint64_t v103 = +[APAVAudioSessionManager mediaSessionManager]? (v104 = @"moviePlayback"): (v104 = @"default"), _UpdateAVAudioSessionAudioMode_5199(v84, (uint64_t)v104), (LODWORD(inSourceFormat.mSampleRate) = _MainAudioEnsureSetup(v84, (uint64_t)Mutable)) != 0))
  {
LABEL_505:
    APSLogErrorAt();
    APReceiverAudioSessionPlatformFinalize((void *)v84);
    unsigned int mSampleRate_low = LODWORD(inSourceFormat.mSampleRate);
    if (LODWORD(inSourceFormat.mSampleRate)) {
      goto LABEL_483;
    }
  }
  else
  {
    *(void *)(v10 + 216) = v84;
    unsigned int mSampleRate_low = 0;
  }
  if (!v208) {
    goto LABEL_279;
  }
  if (v71) {
    CFTypeRef v105 = CFRetain(v71);
  }
  else {
    CFTypeRef v105 = 0;
  }
  *(void *)(v10 + 320) = v105;
  double v106 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
  uint64_t v107 = dispatch_queue_create("APReceiverAudioSessionSink", v106);
  *(void *)(v10 + 288) = v107;
  if (!v107) {
    goto LABEL_493;
  }
  int v108 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, v107);
  *(void *)(v10 + 296) = v108;
  if (!v108) {
    goto LABEL_493;
  }
  dispatch_set_context(v108, (void *)v10);
  dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v10 + 296), (dispatch_function_t)audioSession_sinkTimer);
  dispatch_source_set_timer(*(dispatch_source_t *)(v10 + 296), 0, 0x1312D00uLL, 0);
  double v109 = audioSession_getCurrentNetworkTime(v10, 0) * *(double *)(v10 + 224);
  *(void *)(v10 + 304) = (unint64_t)v109;
  *(void *)(v10 + 312) = (unint64_t)v109;
  dispatch_resume(*(dispatch_object_t *)(v10 + 296));
LABEL_279:
  if (a4)
  {
    *a4 = v10;
    uint64_t v10 = 0;
  }
LABEL_281:
  if (cf) {
    CFRelease(cf);
  }
  if (v10) {
    CFRelease((CFTypeRef)v10);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return mSampleRate_low;
}