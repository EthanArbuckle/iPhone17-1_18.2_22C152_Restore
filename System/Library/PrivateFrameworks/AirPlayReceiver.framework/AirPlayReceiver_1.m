uint64_t audioSession_setupGhostAudio(uint64_t a1, _OWORD *a2, CFTypeRef cf)
{
  const void *v3;
  CFTypeID v6;
  void *v7;
  void *v8;
  const void *Value;
  uint64_t Int64;
  CFArrayRef TypedValue;
  CFIndex Count;
  __CFDictionary *v13;
  __CFDictionary *Mutable;
  const void **v15;
  uint64_t v16;
  int v18;
  unsigned char v19[28];
  _OWORD v20[2];
  long long v21;
  uint64_t v22;
  unsigned int v23;

  v3 = *(const void **)(a1 + 32);
  *(_OWORD *)v19 = *a2;
  *(_OWORD *)&v19[12] = *(_OWORD *)((char *)a2 + 12);
  v23 = 0;
  if (!v3)
  {
    v16 = 4294960591;
LABEL_31:
    APSLogErrorAt();
    goto LABEL_32;
  }
  v6 = CFGetTypeID(cf);
  if (v6 != CFDictionaryGetTypeID())
  {
    v16 = 4294960591;
    goto LABEL_31;
  }
  v7 = malloc_type_calloc(1uLL, 0x30uLL, 0x1060040987D7E9EuLL);
  if (!v7)
  {
    v16 = 4294895146;
    goto LABEL_31;
  }
  v8 = v7;
  *((unsigned char *)v7 + 32) = 0;
  *(_DWORD *)v7 = CFDictionaryGetInt64Ranged();
  if (v23) {
    goto LABEL_47;
  }
  v8[1] = a1;
  v8[2] = CFRetain(v3);
  Value = CFDictionaryGetValue((CFDictionaryRef)cf, @"AudioFormat");
  if (!Value)
  {
    APSLogErrorAt();
    goto LABEL_35;
  }
  v8[3] = CFRetain(Value);
  if (CFDictionaryGetInt64Ranged())
  {
    APSLogErrorAt();
    v23 = -72151;
    if (gLogCategory_APReceiverAudioSessionGhost <= 90
      && (gLogCategory_APReceiverAudioSessionGhost != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_48;
  }
  if (!CFDictionaryContainsKey((CFDictionaryRef)cf, @"MediaDataControl"))
  {
    v13 = 0;
    goto LABEL_19;
  }
  Int64 = CFDictionaryGetInt64();
  CFArrayGetTypeID();
  TypedValue = (const __CFArray *)CFDictionaryGetTypedValue();
  if (v23)
  {
LABEL_47:
    APSLogErrorAt();
LABEL_48:
    v13 = 0;
    goto LABEL_37;
  }
  Count = CFArrayGetCount(TypedValue);
  if (!Count) {
    goto LABEL_15;
  }
  if (Count != 1)
  {
    if (Count == 2)
    {
      CFDataGetTypeID();
      CFArrayGetTypedValueAtIndex();
      goto LABEL_13;
    }
LABEL_35:
    v13 = 0;
    v18 = -6705;
LABEL_36:
    v23 = v18;
    goto LABEL_37;
  }
LABEL_13:
  CFDataGetTypeID();
  CFArrayGetTypedValueAtIndex();
LABEL_15:
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  v13 = Mutable;
  if (!Mutable)
  {
    APSLogErrorAt();
    v18 = -6728;
    goto LABEL_36;
  }
  v15 = (const void **)MEMORY[0x263EFFB40];
  if (!Int64) {
    v15 = (const void **)MEMORY[0x263EFFB38];
  }
  CFDictionarySetValue(Mutable, @"MDC::AllowP2P", *v15);
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  CFDictionarySetValue(v13, @"MDC::Label", @"GHOST");
  CFDictionarySetInt64();
  FigCFDictionarySetInt32();
  *(void *)&v21 = a1;
  *((void *)&v21 + 1) = audioSession_handleMediaDataControlRequest_3618;
  v22 = 0;
  v20[0] = *(_OWORD *)v19;
  *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)&v19[12];
  v23 = APMediaDataControlServerCreate((uint64_t)v20, v13, &v21, v8 + 5);
  if (!v23)
  {
LABEL_19:
    *(void *)(a1 + 40) = v8;
    if (!v13) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  APSLogErrorAt();
LABEL_37:
  APReceiverAudioSessionGhostFinalize(v8);
  if (v13) {
LABEL_20:
  }
    CFRelease(v13);
LABEL_21:
  v16 = v23;
  if (v23)
  {
LABEL_32:
    APSLogErrorAt();
    return v16;
  }
  *(void *)(a1 + 48) = APReceiverAudioSessionGhostFinalize;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = APReceiverAudioSessionGhostSetSecurityInfo;
  *(void *)(a1 + 72) = APReceiverAudioSessionGhostStartPacketProcesser;
  *(void *)(a1 + 80) = APReceiverAudioSessionGhostStopPacketProcesser;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 88) = APReceiverAudioSessionGhostFlushAudio;
  *(void *)(a1 + 112) = APReceiverAudioSessionGhostSetRateAndAnchorTime;
  *(void *)(a1 + 120) = APReceiverAudioSessionGhostConvertProgressRTPTimeToSecond;
  *(void *)(a1 + 128) = APReceiverAudioSessionGhostReadAudio;
  *(void *)(a1 + 136) = APReceiverAudioSessionGhostUpdateLatency;
  *(void *)(a1 + 144) = APReceiverAudioSessionGhostCopyProperty;
  *(void *)(a1 + 152) = APReceiverAudioSessionGhostSetProperty;
  *(void *)(a1 + 160) = APReceiverAudioSessionGhostCopyMetrics;
  *(void *)(a1 + 168) = APReceiverAudioSessionGhostLogEnded;
  *(void *)(a1 + 176) = APReceiverAudioSessionGhostCopyAudioBufferInfo;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  if (gLogCategory_APReceiverAudioSession <= 50
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

CFNumberRef APReceiverAudioSessionCopyProperty(const __CFNumber *a1, int a2, __CFString *cf1, uint64_t a4, _DWORD *a5)
{
  CFNumberRef v6 = a1;
  int v18 = 0;
  if (a1)
  {
    if (cf1)
    {
      if (cf1 == @"AirPlayArrivalToRenderLatencyMs" || CFEqual(cf1, @"AirPlayArrivalToRenderLatencyMs"))
      {
        unsigned int valuePtr = 0;
        int v18 = audioSession_airPlayArrivalToRenderLatencyMs((uint64_t)v6, &valuePtr);
        if (!v18)
        {
          CFNumberRef v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
          if (v6) {
            goto LABEL_7;
          }
LABEL_38:
          APSLogErrorAt();
          int v14 = -6728;
          goto LABEL_39;
        }
LABEL_36:
        APSLogErrorAt();
LABEL_37:
        CFNumberRef v6 = 0;
        goto LABEL_7;
      }
      if (cf1 == @"WifiArrivalToRenderLatencyMs" || CFEqual(cf1, @"WifiArrivalToRenderLatencyMs"))
      {
        unsigned int valuePtr = 0;
        int IntWithDefault = APSSettingsGetIntWithDefault();
        int v18 = audioSession_airPlayArrivalToRenderLatencyMs((uint64_t)v6, &valuePtr);
        if (!v18)
        {
          int v16 = valuePtr + IntWithDefault;
          CFNumberRef v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &v16);
          if (v6) {
            goto LABEL_7;
          }
          goto LABEL_38;
        }
        goto LABEL_36;
      }
      if (cf1 == @"IsMedia" || CFEqual(cf1, @"IsMedia"))
      {
        v10 = (const void **)MEMORY[0x263EFFB40];
        if (!*((unsigned char *)v6 + 20)) {
          v10 = (const void **)MEMORY[0x263EFFB38];
        }
        v11 = *v10;
      }
      else
      {
        if (cf1 == @"PlatformIOBufferSize" || CFEqual(cf1, @"PlatformIOBufferSize"))
        {
          unsigned int valuePtr = 0;
          unsigned int v13 = atomic_load((unsigned int *)v6 + 66);
          unsigned int valuePtr = v13;
          CFNumberRef v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
          if (v6) {
            goto LABEL_7;
          }
          goto LABEL_38;
        }
        if (cf1 == @"StreamType" || CFEqual(cf1, @"StreamType"))
        {
          CFNumberRef v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, (char *)v6 + 24);
          if (v6) {
            goto LABEL_7;
          }
          goto LABEL_38;
        }
        if (cf1 != @"PKDReceiverContext" && !CFEqual(cf1, @"PKDReceiverContext"))
        {
          v15 = (uint64_t (*)(void, __CFString *, int *))*((void *)v6 + 18);
          if (!v15)
          {
            APSLogErrorAt();
            CFNumberRef v6 = 0;
            int v14 = -12782;
            goto LABEL_39;
          }
          CFNumberRef v12 = (const __CFNumber *)v15(*((void *)v6 + 5), cf1, &v18);
LABEL_21:
          CFNumberRef v6 = v12;
          goto LABEL_7;
        }
        v11 = (const void *)*((void *)v6 + 35);
        if (!v11) {
          goto LABEL_37;
        }
      }
      CFNumberRef v12 = (const __CFNumber *)CFRetain(v11);
      goto LABEL_21;
    }
    APSLogErrorAt();
    CFNumberRef v6 = 0;
    int v14 = -72151;
  }
  else
  {
    APSLogErrorAt();
    int v14 = -72152;
  }
LABEL_39:
  int v18 = v14;
LABEL_7:
  if (a5) {
    *a5 = v18;
  }
  return v6;
}

double audioSession_getCurrentNetworkTime(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = mach_absolute_time();
  long long v12 = *MEMORY[0x263F24A78];
  uint64_t v13 = *(void *)(MEMORY[0x263F24A78] + 16);
  UpTicksToSecondsF();
  double v6 = v5;
  uint64_t v7 = *(void *)(a1 + 320);
  if (v7)
  {
    uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0;
    }
    v10 = *(unsigned int (**)(uint64_t, uint64_t, long long *))(v9 + 16);
    if (!v10 || v10(v7, v4, &v12))
    {
      APSLogErrorAt();
      if (!a2) {
        return v6;
      }
      goto LABEL_9;
    }
    double v6 = (double)(int)v13 + (double)*((unint64_t *)&v12 + 1) * 5.42101086e-20;
  }
  if (a2) {
LABEL_9:
  }
    *a2 = v4;
  return v6;
}

void audioSession_sinkTimer(uint64_t a1)
{
  uint64_t v12 = 0;
  double CurrentNetworkTime = audioSession_getCurrentNetworkTime(a1, &v12);
  double v3 = *(double *)(a1 + 224);
  uint64_t v4 = *(void *)(a1 + 312);
  int v5 = *(_DWORD *)(a1 + 304);
  uint64_t v6 = *(unsigned int *)(a1 + 248);
  if (dispatch_source_get_data(*(dispatch_source_t *)(a1 + 296)))
  {
    unint64_t v7 = (unint64_t)(CurrentNetworkTime * v3);
    size_t v8 = (v7 - v4) * v6;
    uint64_t v9 = malloc_type_malloc(v8, 0xE205A16FuLL);
    if (v9)
    {
      v10 = v9;
      v11 = *(unsigned int (**)(void, void, uint64_t, void *, size_t))(a1 + 128);
      if (!v11 || v11(*(void *)(a1 + 40), (v4 - v5), v12, v9, v8)) {
        APSLogErrorAt();
      }
      else {
        *(void *)(a1 + 312) = v7;
      }
      free(v10);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t APReceiverAudioSessionReadAudio(uint64_t a1)
{
  if (a1)
  {
    v1 = *(uint64_t (**)(uint64_t))(a1 + 128);
    if (v1)
    {
      uint64_t v2 = *(void *)(a1 + 40);
      return v1(v2);
    }
    else
    {
      return 4294954514;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895144;
  }
}

uint64_t audioSession_airPlayArrivalToRenderLatencyMs(uint64_t a1, _DWORD *a2)
{
  int PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  *a2 = ((*(double *)(a1 + 224) * 0.5
                      + (double)(1000 * (CFObjectGetPropertyInt64Sync() + PropertyInt64Sync)))
                     / *(double *)(a1 + 224));
  return 0;
}

uint64_t APReceiverAudioSessionApplyVolumeFade(uint64_t a1, uint64_t a2, CMTime *a3)
{
  if (a1)
  {
    CMTime time1 = *a3;
    CMTime v10 = *(CMTime *)*(void *)&MEMORY[0x263F010E0];
    uint64_t result = CMTimeCompare(&time1, &v10);
    if ((int)result <= 0)
    {
      return APSLogErrorAt();
    }
    else
    {
      size_t v8 = *(uint64_t (**)(uint64_t, uint64_t, CMTime *))(a1 + 184);
      if (v8)
      {
        uint64_t v9 = *(void *)(a1 + 40);
        CMTime time1 = *a3;
        return v8(v9, a2, &time1);
      }
    }
  }
  else
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t APReceiverAudioSessionSetProperty(uint64_t a1, __CFString *cf1, uint64_t a3)
{
  if (!a1)
  {
    uint64_t v6 = 4294895144;
    APSLogErrorAt();
    return v6;
  }
  if (!cf1)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  if (cf1 == @"PlatformIOBufferSize" || CFEqual(cf1, @"PlatformIOBufferSize"))
  {
    uint64_t v6 = 0;
    atomic_store(CFGetInt64Ranged(), (unsigned int *)(a1 + 264));
    return v6;
  }
  size_t v8 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(a1 + 152);
  if (!v8)
  {
    APSLogErrorAt();
    return 4294954514;
  }
  uint64_t v9 = *(void *)(a1 + 40);

  return v8(v9, cf1, a3);
}

void _NotifyIsPlayingAmbientAudio(int a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  int v8 = 0;
  uint64_t v1 = a1 != 0;
  if (APSIsAPMSpeaker())
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ___NotifyIsPlayingAmbientAudio_block_invoke;
    block[3] = &unk_2648953A8;
    block[4] = &v5;
    if (_NotifyIsPlayingAmbientAudio_sTokenOnce != -1) {
      dispatch_once(&_NotifyIsPlayingAmbientAudio_sTokenOnce, block);
    }
    if (*((_DWORD *)v6 + 6))
    {
      APSLogErrorAt();
      if (gLogCategory_AirPlayReceiverPlatform <= 90
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_9;
      }
    }
    else
    {
      uint32_t v2 = notify_set_state(_NotifyIsPlayingAmbientAudio_sToken, v1);
      *((_DWORD *)v6 + 6) = v2;
      if (v2)
      {
        APSLogErrorAt();
        if (gLogCategory_AirPlayReceiverPlatform <= 90
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_9;
        }
      }
      else
      {
        uint32_t v3 = notify_post("com.apple.airplay.isPlayingAmbientAudioChanged");
        *((_DWORD *)v6 + 6) = v3;
        if (!v3)
        {
          if (gLogCategory_AirPlayReceiverPlatform > 50
            || gLogCategory_AirPlayReceiverPlatform == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_11;
          }
LABEL_9:
          LogPrintF();
          goto LABEL_11;
        }
        APSLogErrorAt();
        if (gLogCategory_AirPlayReceiverPlatform <= 90
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_9;
        }
      }
    }
  }
LABEL_11:
  _Block_object_dispose(&v5, 8);
}

void sub_22B3F6430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

float _GetHWVolumeSliderValue()
{
  float v1 = 0.0;
  if (objc_msgSend((id)objc_msgSend(MEMORY[0x263F318F8], "sharedAVSystemController"), "getVolume:forCategory:", &v1, @"Audio/Video"))
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      APSVolumeConvertSliderValueToDB();
LABEL_7:
      LogPrintF();
    }
  }
  else if (gLogCategory_AirPlayReceiverPlatform <= 90 {
         && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  }
  {
    goto LABEL_7;
  }
  return v1;
}

void __AirPlayReceiverServerPlatformInitialize_block_invoke_2(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 52))
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverServerSendMediaRemoteCommand(*(void *)(*(void *)(a1 + 40) + 216), 1885495660);
    *(unsigned char *)(*(void *)(a1 + 32) + 52) = 0;
  }
}

void __AirPlayReceiverServerPlatformInitialize_block_invoke_3(uint64_t a1)
{
  if (CFObjectGetPropertyInt64Sync())
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverServerSendMediaRemoteCommand(*(void *)(*(void *)(a1 + 40) + 216), 1885499506);
    *(unsigned char *)(*(void *)(a1 + 32) + 52) = 1;
  }
}

uint64_t __AirPlayReceiverServerPlatformInitialize_block_invoke_4()
{
  return CFObjectControlAsync();
}

uint64_t __AirPlayReceiverServerPlatformInitialize_block_invoke_5(uint64_t a1, const void *a2, const void *a3, const void *a4, CFTypeRef *a5)
{
  if ((const void *)[MEMORY[0x263EFF9D0] null] == a4 || a4 == 0)
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = a2;
    int v14 = a3;
    v15 = 0;
  }
  else
  {
    CFTypeID v16 = CFGetTypeID(a4);
    CFTypeID TypeID = CFDictionaryGetTypeID();
    if (v16 != TypeID) {
      return 4294960582;
    }
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = a2;
    int v14 = a3;
    v15 = a4;
  }

  return AirPlayReceiverServerControl(v12, v10, v13, v14, v15, a5);
}

CFTypeRef __AirPlayReceiverServerPlatformInitialize_block_invoke_6(uint64_t a1, CFTypeRef cf1, uint64_t a3, _DWORD *a4)
{
  return AirPlayReceiverServerCopyProperty(*(void *)(a1 + 32), (int)cf1, cf1, a3, a4);
}

uint64_t __AirPlayReceiverServerPlatformInitialize_block_invoke_7(uint64_t a1, CFTypeRef cf1, uint64_t a3, uint64_t a4)
{
  return AirPlayReceiverServerSetProperty(*(void *)(a1 + 32), (int)cf1, cf1, a4, a4);
}

void AirPlayReceiverServerPlatformFinalize(uint64_t a1)
{
  if (a1)
  {
    float v1 = (void *)[MEMORY[0x263F08A00] defaultCenter];
    [v1 removeObserver:a1 name:*MEMORY[0x263EF90A0] object:0];
    uint32_t v2 = (void *)[MEMORY[0x263F08A00] defaultCenter];
    [v2 removeObserver:a1 name:*MEMORY[0x263EF90F8] object:0];
    uint32_t v3 = (void *)[MEMORY[0x263F08A00] defaultCenter];
    [v3 removeObserver:a1 name:*MEMORY[0x263EF90E8] object:0];
    objc_msgSend((id)objc_msgSend(MEMORY[0x263F08A00], "defaultCenter"), "removeObserver:name:object:", a1, @"APReceiverMediaRemoteHelperNowPlayingAppStartedPlayingNotification", 0);
    uint64_t v4 = *(const void **)(a1 + 16);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(a1 + 16) = 0;
    }
    uint64_t v5 = *(const void **)(a1 + 24);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(a1 + 24) = 0;
    }
    uint64_t v6 = *(const void **)(a1 + 32);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 32) = 0;
    }
    uint64_t v7 = *(const void **)(a1 + 40);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 40) = 0;
    }
    [(id)a1 _unregisterAVSystemControllerNotifications];
    [*(id *)(a1 + 144) invalidate];

    *(void *)(a1 + 144) = 0;
    int v8 = *(_DWORD *)(a1 + 120);
    if (v8 != -1)
    {
      notify_cancel(v8);
      *(_DWORD *)(a1 + 120) = -1;
    }
    int v9 = *(_DWORD *)(a1 + 124);
    if (v9 != -1)
    {
      notify_cancel(v9);
      *(_DWORD *)(a1 + 124) = -1;
    }
    int v10 = *(_DWORD *)(a1 + 128);
    if (v10 != -1)
    {
      notify_cancel(v10);
      *(_DWORD *)(a1 + 128) = -1;
    }
    int v11 = *(_DWORD *)(a1 + 132);
    if (v11 != -1)
    {
      notify_cancel(v11);
      *(_DWORD *)(a1 + 132) = -1;
    }
    int v12 = *(_DWORD *)(a1 + 136);
    if (v12 != -1)
    {
      notify_cancel(v12);
      *(_DWORD *)(a1 + 136) = -1;
    }
    [*(id *)(a1 + 160) setDelegate:0];
    uint64_t v13 = *(const void **)(a1 + 112);
    if (v13)
    {
      CFRelease(v13);
      *(void *)(a1 + 112) = 0;
    }

    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 64) = 0;

    *(void *)(a1 + 56) = 0;
  }
}

uint64_t AirPlayReceiverServerPlatformControl(uint64_t a1, CFTypeRef cf1, const void *a3, const __CFDictionary *a4)
{
  int v8 = *(int **)(a1 + 16);
  if (CFEqual(cf1, @"dacpStatus"))
  {
    if (*(unsigned char *)(a1 + 250))
    {
      int Int64 = CFDictionaryGetInt64();
      if (Int64)
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        notify_set_state(v8[30], Int64);
        notify_post("com.apple.airplay.dacp.error");
      }
    }
    return 0;
  }
  if (!CFEqual(cf1, @"updatePrefs"))
  {
    if (CFEqual(cf1, @"updateActiveSessionRegistration"))
    {
      Value = CFDictionaryGetValue(a4, @"session");
      if (Value)
      {
        int v11 = Value;
        uint64_t v12 = CFDictionaryGetInt64();
        [v8 updateActiveSessionRegistration:v11 regType:v12 regOp:CFDictionaryGetInt64()];
        return 0;
      }
    }
    else if (CFEqual(cf1, @"updateHijackID"))
    {
      if (CFDictionaryGetValue(a4, @"hijackID")) {
        return 0;
      }
    }
    else
    {
      if (CFEqual(cf1, @"reportSessionStall"))
      {
        _TriggerWiFiDECaptureIfNeeded((void *)a1);
        return 0;
      }
      if (!CFEqual(cf1, @"triggerStackShot")) {
        return -6714;
      }
      if (!a3 || (CFTypeID v14 = CFGetTypeID(a3), v14 == CFStringGetTypeID()))
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        WriteStackshotReport_async();
        return 0;
      }
    }
    APSLogErrorAt();
    return -6705;
  }
  return 0;
}

void _TriggerWiFiDECaptureIfNeeded(void *a1)
{
  int v6 = 0;
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  uint32_t v3 = a1[11];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = ___TriggerWiFiDECaptureIfNeeded_block_invoke;
  block[3] = &__block_descriptor_44_e5_v8__0l;
  int v5 = Int64Ranged;
  block[4] = a1;
  dispatch_async(v3, block);
}

__CFString *AirPlayReceiverServerPlatformCopyProperty(int a1, int a2, CFTypeRef cf1, uint64_t a4, int *a5)
{
  if (CFEqual(cf1, @"audioJackStatus"))
  {
    uint64_t v7 = @"connected";
  }
  else
  {
    if (!CFEqual(cf1, @"skewCompensation"))
    {
      uint64_t v7 = 0;
      int v8 = -6714;
      if (!a5) {
        return v7;
      }
      goto LABEL_6;
    }
    uint64_t v7 = (__CFString *)*MEMORY[0x263EFFB40];
  }
  CFRetain(v7);
  int v8 = 0;
  if (a5) {
LABEL_6:
  }
    *a5 = v8;
  return v7;
}

uint64_t AirPlayReceiverServerPlatformSetProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, const void *a5)
{
  if (!cf1) {
    goto LABEL_21;
  }
  uint64_t v7 = *(void **)(a1 + 16);
  if (CFEqual(cf1, @"receiverSessionCount"))
  {
    if (a5)
    {
      CFTypeID v8 = CFGetTypeID(a5);
      if (v8 == CFNumberGetTypeID())
      {
        [v7 setReceiverSessionCountAndUpdateStateIfNeeded:CFGetInt64()];
        return 0;
      }
    }
LABEL_21:
    APSLogErrorAt();
    return 4294960591;
  }
  if (CFEqual(cf1, @"mainMediaReceiverSession"))
  {
    if (!APSMultiPrimariesEnabled()) {
      goto LABEL_24;
    }
    if (a5)
    {
      CFTypeID v9 = CFGetTypeID(a5);
      if (APReceiverRequestProcessorGetClassID_once != -1) {
        dispatch_once(&APReceiverRequestProcessorGetClassID_once, &__block_literal_global_224);
      }
      if (v9 != CMBaseClassGetCFTypeID())
      {
LABEL_24:
        APSLogErrorAt();
        return 4294960561;
      }
    }
    [v7 setMainMediaReceiverSession:a5];
    return 0;
  }
  if (!CFEqual(cf1, @"isMuted")) {
    return 4294960582;
  }
  if (!a5) {
    goto LABEL_21;
  }
  CFTypeID v11 = CFGetTypeID(a5);
  if (v11 != CFBooleanGetTypeID()) {
    goto LABEL_21;
  }
  uint64_t result = APSIsAPMSpeaker();
  if (result)
  {
    int Value = CFBooleanGetValue((CFBooleanRef)a5);
    _SetHWIsMuted((uint64_t)v7, 0, Value);
    return 0;
  }
  return result;
}

uint64_t _SetHWIsMuted(uint64_t a1, uint64_t a2, int a3)
{
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    int v6 = "yes";
    if (*(unsigned char *)(a1 + 88)) {
      uint64_t v7 = "yes";
    }
    else {
      uint64_t v7 = "no";
    }
    if (!a3) {
      int v6 = "no";
    }
    CFTypeID v14 = v7;
    v15 = v6;
    LogPrintF();
  }
  if (*(unsigned __int8 *)(a1 + 88) != a3)
  {
    *(unsigned char *)(a1 + 88) = a3;
    if (a2)
    {
      uint64_t v8 = AirPlayReceiverSessionAddMuteRequest(a2, a3);
      if (v8)
      {
        uint64_t v12 = v8;
        APSLogErrorAt();
        return v12;
      }
    }
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      if (*(unsigned char *)(a1 + 88)) {
        CFTypeID v9 = "yes";
      }
      else {
        CFTypeID v9 = "no";
      }
      CFTypeID v14 = v9;
      LogPrintF();
    }
    int v10 = objc_msgSend(MEMORY[0x263F318F8], "sharedAVSystemController", v14, v15);
    uint64_t v11 = [NSNumber numberWithBool:*(unsigned char *)(a1 + 88) != 0];
    [v10 setAttribute:v11 forKey:*MEMORY[0x263F318D0] error:0];
  }
  return 0;
}

void _AirPlayReceiverSessionPlatformInvalidate(void *a1)
{
  uint32_t v2 = (unsigned char *)a1[6];
  if (v2)
  {
    id v22 = v2;
    uint64_t v3 = a1[3];
    uint64_t v4 = *(void *)(v3 + 16);
    if (*(unsigned char *)(v3 + 249) && v2[24])
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterRemoveListener();
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFDictionarySetNumber();
      *((unsigned char *)v22 + 24) = 0;
      *((_DWORD *)v22 + 7) = 0;
      uint64_t v6 = a1[75];
      uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      CFTypeID v9 = *(void (**)(uint64_t, CFMutableDictionaryRef))(v8 + 80);
      if (v9) {
        v9(v6, Mutable);
      }
      if (Mutable) {
        CFRelease(Mutable);
      }
    }
    uint64_t v10 = a1[6];
    uint64_t Empty = CFDictionaryGetEmpty();
    if (v10)
    {
      uint64_t v12 = Empty;
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
        objc_msgSend(*(id *)(v10 + 48), "setMRNowPlayingInfo:withMergePolicy:", v12, 1, a1);
      }
      else
      {
        objc_msgSend(*(id *)(v10 + 48), "setMRNowPlayingInfo:withMergePolicy:", v12, 1, v21);
      }
    }
    uint64_t v13 = (id *)v22;
    if (*(unsigned char *)(v4 + 152))
    {
      [*((id *)v22 + 6) setDelegate:0];
      uint64_t v13 = (id *)v22;
    }

    CFTypeID v14 = v22;
    *((void *)v22 + 6) = 0;
    IOPMAssertionID v15 = *((_DWORD *)v22 + 11);
    if (v15)
    {
      IOPMAssertionRelease(v15);
      CFTypeID v14 = v22;
      *((_DWORD *)v22 + 11) = 0;
      if (gLogCategory_AirPlayReceiverPlatform <= 40)
      {
        if (gLogCategory_AirPlayReceiverPlatform != -1 || (v16 = _LogCategory_Initialize(), CFTypeID v14 = v22, v16))
        {
          LogPrintF();
          CFTypeID v14 = v22;
        }
      }
    }
    uint64_t v17 = v14[1];
    if (v17)
    {
      uint64_t v18 = *(void *)(v17 + 32);
      uint64_t v19 = *(void *)(*(void *)(a1[3] + 216) + 48);
      BOOL v20 = v19 && v19 == v18;
      if (v20 && APSIsMemberOfHTGroup()) {
        [+[APAVAudioSessionManager ambientSessionManager] setDuckOthers:0 error:0];
      }
    }
    a1[6] = 0;
    *((void *)v22 + 1) = 0;
  }
}

void _HandleReceiverUINotification(int a1, void *a2, CFTypeRef cf1, uint64_t a4, uint64_t a5)
{
  if (CFEqual(cf1, @"stopAudio"))
  {
    if (a5)
    {
      int Int64 = CFDictionaryGetInt64();
      uint64_t v9 = a2[6];
      if (v9)
      {
        if (*(_DWORD *)(v9 + 28) == Int64)
        {
          CFRetain(a2);
          uint64_t v10 = a2[2];
          block[0] = MEMORY[0x263EF8330];
          block[1] = 3221225472;
          block[2] = ___HandleReceiverUINotification_block_invoke;
          block[3] = &__block_descriptor_40_e5_v8__0l;
          block[4] = a2;
          dispatch_async(v10, block);
          return;
        }
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_10;
        }
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
  else if (CFEqual(cf1, @"startPlayingOverP2P") || CFEqual(cf1, @"stopPlayingOverP2P"))
  {
    CFObjectControlAsync();
  }
  else if (CFEqual(cf1, @"startingVideo") || CFEqual(cf1, @"updateAudioMode"))
  {
    CFStringGetTypeID();
    Typedint Value = CFDictionaryGetTypedValue();
    _UpdateAVAudioSessionAudioMode(TypedValue);
  }
  else if (CFEqual(cf1, @"MakeNowPlayingSession"))
  {
    uint64_t v12 = a2[6];
    if (v12)
    {
      [*(id *)(v12 + 48) makeNowPlayingPlayer];
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
LABEL_10:
        LogPrintF();
      }
    }
  }
}

uint64_t _UpdateAVAudioSessionAudioMode(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t result = [+[APAVAudioSessionManager mediaSessionManager] setAudioMode:a1 isLongForm:1 error:&v2];
  if (result)
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 50)
    {
      if (gLogCategory_AirPlayReceiverPlatform != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  else if (gLogCategory_AirPlayReceiverPlatform <= 60)
  {
    if (gLogCategory_AirPlayReceiverPlatform != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t AirPlayReceiverSessionPlatformControl(void *a1, CFTypeRef cf1)
{
  if (CFEqual(cf1, @"duckAudio"))
  {
    uint64_t v15 = 0;
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a1)
    {
      uint64_t v7 = *(void *)(*(void *)(a1[3] + 216) + 48);
      BOOL v8 = v7 && v7 == a1[4];
      if (v8 && APSIsMemberOfHTGroup())
      {
        [+[APAVAudioSessionManager ambientSessionManager] setDuckOthers:1 error:&v15];
        uint64_t v9 = NSErrorToOSStatus();
        if (v9)
        {
          APSLogErrorAt();
          if (gLogCategory_AirPlayReceiverPlatform <= 90
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        return v9;
      }
    }
LABEL_67:
    APSLogErrorAt();
    return 4294960587;
  }
  if (!CFEqual(cf1, @"unduckAudio"))
  {
    if (CFEqual(cf1, @"handleMediaAudioStartingForSession"))
    {
      uint64_t v4 = a1[6];
      if (v4)
      {
        uint64_t v5 = a1[3];
        if (*(unsigned char *)(v5 + 249))
        {
          uint64_t v6 = *(void *)(v5 + 16);
          if (gLogCategory_AirPlayReceiverPlatform <= 50
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (*(unsigned char *)(v6 + 152)) {
            [*(id *)(v4 + 48) setDelegate:v4];
          }
        }
        if (a1[6] && !APSIsAPMSpeaker())
        {
          if (gLogCategory_AirPlayReceiverPlatform <= 50
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          _SetSessionSoftwareVolumeSliderValue((uint64_t)a1);
        }
      }
    }
    else if (CFEqual(cf1, @"handleMediaAudioStoppingForSession"))
    {
      if (a1[6]
        && gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else if (!CFEqual(cf1, @"startSession"))
    {
      if (!CFEqual(cf1, @"stopSession"))
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 90
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 4294960582;
      }
      _AirPlayReceiverSessionPlatformInvalidate(a1);
    }
    return 0;
  }
  uint64_t v15 = 0;
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1) {
    goto LABEL_67;
  }
  uint64_t v10 = *(void *)(*(void *)(a1[3] + 216) + 48);
  BOOL v11 = v10 && v10 == a1[4];
  if (!v11 || !APSIsMemberOfHTGroup()) {
    goto LABEL_67;
  }
  [+[APAVAudioSessionManager ambientSessionManager] setDuckOthers:0 error:&v15];
  uint64_t v12 = NSErrorToOSStatus();
  uint64_t v9 = 0;
  if (v12)
  {
    uint64_t v13 = v12;
    APSLogErrorAt();
    if (gLogCategory_AirPlayReceiverPlatform <= 90
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v13;
  }
  return v9;
}

uint64_t _SetSessionSoftwareVolumeSliderValue(uint64_t a1)
{
  APSVolumeConvertSliderValueToLinearGain();
  int valuePtr = v2;
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFNumberRef v4 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberFloat32Type, &valuePtr);
  if (!v4)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFNumberRef v5 = v4;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v3, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    CFRelease(v5);
    return 4294960568;
  }
  uint64_t v7 = Mutable;
  CFDictionarySetValue(Mutable, @"volumeLinear", v5);
  AirPlayReceiverSessionControl(a1, v8, @"volumeChanged");
  uint64_t v9 = *(void *)(a1 + 600);
  if (v9)
  {
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = *(void (**)(uint64_t, __CFString *, CFNumberRef))(v11 + 56);
    if (v12) {
      v12(v9, @"Volume", v5);
    }
  }
  CFRelease(v5);
  CFRelease(v7);
  return 0;
}

CFNumberRef AirPlayReceiverSessionPlatformCopyProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, int *a5)
{
  if (CFEqual(cf1, @"volume"))
  {
    if (a1)
    {
      if (APSIsAPMSpeaker()) {
        _GetHWVolumeSliderValue();
      }
      else {
        _GetSWVolumeSliderValue(*(float *)(*(void *)(a1 + 48) + 32));
      }
      APSVolumeConvertSliderValueToDB();
      double valuePtr = v9;
      CFNumberRef result = CFNumberCreate(0, kCFNumberDoubleType, &valuePtr);
      if (result)
      {
        int v8 = 0;
        if (!a5) {
          return result;
        }
        goto LABEL_10;
      }
      APSLogErrorAt();
      int v8 = -6728;
    }
    else
    {
      APSLogErrorAt();
      int v8 = -6705;
      APSLogErrorAt();
    }
    CFNumberRef result = 0;
    if (!a5) {
      return result;
    }
  }
  else
  {
    CFNumberRef result = 0;
    int v8 = -6714;
    if (!a5) {
      return result;
    }
  }
LABEL_10:
  *a5 = v8;
  return result;
}

float _GetSWVolumeSliderValue(float a1)
{
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return a1;
}

uint64_t AirPlayReceiverSessionPlatformSetProperty(void *a1, int a2, CFTypeRef cf1, __CFString *a4, const __CFArray *a5)
{
  uint64_t v5 = a1[6];
  if (!v5) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1[3] + 16);
  if (CFEqual(cf1, @"mrNowPlayingInfo"))
  {
    if (a4 != @"replace")
    {
      if (a4)
      {
        if (CFEqual(a4, @"replace")) {
          goto LABEL_6;
        }
        a4 = 0;
      }
      uint64_t v11 = "Update";
LABEL_19:
      int v18 = gLogCategory_AirPlayReceiverPlatform;
      if (*(unsigned char *)(v10 + 50))
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50)
        {
          if (gLogCategory_AirPlayReceiverPlatform != -1) {
            goto LABEL_22;
          }
          if (_LogCategory_Initialize())
          {
            int v18 = gLogCategory_AirPlayReceiverPlatform;
LABEL_22:
            if (v18 == -1) {
              _LogCategory_Initialize();
            }
LABEL_42:
            LogPrintF();
          }
        }
        return 0;
      }
      if (gLogCategory_AirPlayReceiverPlatform <= 50)
      {
        if (gLogCategory_AirPlayReceiverPlatform != -1)
        {
LABEL_26:
          if (v18 > 30) {
            BOOL v19 = 1;
          }
          else {
            BOOL v19 = v18 == -1 && _LogCategory_Initialize() == 0;
          }
          BOOL v32 = v19;
          CFArrayRef v33 = a5;
          v30 = a1;
          uint64_t v31 = (uint64_t)v11;
          LogPrintF();
          goto LABEL_45;
        }
        if (_LogCategory_Initialize())
        {
          int v18 = gLogCategory_AirPlayReceiverPlatform;
          goto LABEL_26;
        }
      }
LABEL_45:
      objc_msgSend(*(id *)(v5 + 48), "setMRNowPlayingInfo:withMergePolicy:", a5, a4, v30, v31, v32, v33);
      return 0;
    }
LABEL_6:
    a4 = (__CFString *)1;
    uint64_t v11 = "Replace";
    goto LABEL_19;
  }
  if (CFEqual(cf1, @"metaData"))
  {
    if (*(unsigned char *)(a1[3] + 249))
    {
      [*(id *)(v5 + 48) setAPNowPlayingInfo:a5];
      if (*(unsigned char *)(v5 + 24))
      {
        uint64_t v12 = a1[75];
        uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v14 = v13 ? v13 : 0;
        BOOL v20 = *(void (**)(uint64_t, __CFString *, const __CFArray *))(v14 + 56);
        if (v20) {
          v20(v12, @"AudioMetadata", a5);
        }
      }
    }
    return 0;
  }
  if (CFEqual(cf1, @"progress"))
  {
    if (!*(unsigned char *)(a1[3] + 249) || !*(unsigned char *)(v5 + 24)) {
      return 0;
    }
    uint64_t v15 = a1[75];
    uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v16) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    v24 = *(void (**)(uint64_t, __CFString *, const __CFArray *))(v17 + 56);
    if (v24) {
      v24(v15, @"AudioProgress", a5);
    }
    [*(id *)(v5 + 48) setAPNowPlayingInfo:a5];
    if (gLogCategory_AirPlayReceiverPlatform > 10
      || gLogCategory_AirPlayReceiverPlatform == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
    goto LABEL_42;
  }
  if (CFEqual(cf1, @"timingProtocol")) {
    return 0;
  }
  if (CFEqual(cf1, @"volume"))
  {
    CFGetDouble();
    APSVolumeConvertDBToClampedSliderValue();
    uint64_t IsMuted = _SetVolumeSliderValue((uint64_t)a1, v21);
    if (IsMuted) {
      goto LABEL_74;
    }
  }
  else
  {
    if (!CFEqual(cf1, @"isMuted"))
    {
      if (CFEqual(cf1, @"mrPlaybackState"))
      {
        uint64_t v27 = CFGetInt64Ranged();
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          v30 = a1;
          uint64_t v31 = v27;
          LogPrintF();
        }
        objc_msgSend(*(id *)(v5 + 48), "setMRPlaybackState:", v27, v30, v31);
      }
      else if (CFEqual(cf1, @"mrSupportedCommandsFromSender"))
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          if (a5) {
            CFIndex Count = CFArrayGetCount(a5);
          }
          else {
            CFIndex Count = 0;
          }
          v30 = a1;
          uint64_t v31 = Count;
          LogPrintF();
        }
        objc_msgSend(*(id *)(v5 + 48), "setMRSupportedCommandsFromSerializedArray:", a5, v30, v31);
      }
      else
      {
        if (!CFEqual(cf1, @"mrNowPlayingClient")) {
          return 4294960582;
        }
        if (a5 && (CFTypeID v29 = CFGetTypeID(a5), v29 == CFDataGetTypeID())) {
          [*(id *)(v5 + 48) setMRNowPlayingClient:a5];
        }
        else {
          APSLogErrorAt();
        }
      }
      return 0;
    }
    uint64_t v25 = CFGetInt64();
    if (a4)
    {
      CFTypeID v26 = CFGetTypeID(a4);
      if (v26 == CFDictionaryGetTypeID()) {
        FigCFDictionaryGetBooleanIfPresent();
      }
    }
    if (gLogCategory_AirPlayReceiverPlatform <= 40
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t IsMuted = _SetIsMuted((uint64_t)a1, v25 != 0);
    if (IsMuted) {
LABEL_74:
    }
      APSLogErrorAt();
  }
  return IsMuted;
}

uint64_t _SetVolumeSliderValue(uint64_t a1, float a2)
{
  if (!a1) {
    goto LABEL_28;
  }
  if (APSIsAPMSpeaker())
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 24) + 16);
    if (v4)
    {
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        APSVolumeConvertSliderValueToDB();
        double v14 = v5;
        double v15 = a2;
        LogPrintF();
      }
      if (!APSVolumeSliderValuesAreNoticeablyDifferent() && *(unsigned char *)(v4 + 88) == (a2 == 0.0)) {
        return 0;
      }
      float valuePtr = a2;
      CFNumberRef v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberFloatType, &valuePtr);
      if (v7)
      {
        CFNumberRef v8 = v7;
        uint64_t v9 = _AddVolumeOrMuteRequest(a1, v7);
        if (v9)
        {
          uint64_t v13 = v9;
          APSLogErrorAt();
          CFRelease(v8);
        }
        else
        {
          *(float *)(a1 + 688) = valuePtr;
          CFRelease(v8);
          if (!*(unsigned char *)(v4 + 88)
            || (*(unsigned char *)(v4 + 88) = 0, uint64_t v10 = AirPlayReceiverSessionAddMuteRequest(a1, 0), !v10))
          {
            *(float *)(v4 + 84) = a2;
            if (gLogCategory_AirPlayReceiverPlatform <= 40)
            {
              if (gLogCategory_AirPlayReceiverPlatform == -1)
              {
                if (!_LogCategory_Initialize()) {
                  goto LABEL_21;
                }
                a2 = *(float *)(v4 + 84);
              }
              double v14 = a2;
              LogPrintF();
            }
LABEL_21:
            uint64_t v11 = objc_msgSend(MEMORY[0x263F318F8], "sharedAVSystemController", *(void *)&v14, *(void *)&v15);
            LODWORD(v12) = *(_DWORD *)(v4 + 84);
            if (([v11 setVolumeTo:@"Audio/Video" forCategory:v12] & 1) == 0
              && gLogCategory_AirPlayReceiverPlatform <= 90
              && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            return 0;
          }
          uint64_t v13 = v10;
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v13 = 4294960568;
      }
      APSLogErrorAt();
      return v13;
    }
LABEL_28:
    APSLogErrorAt();
    return 4294960591;
  }

  return _SetSWVolumeSliderValue(a1, 0, a2);
}

uint64_t _SetIsMuted(uint64_t a1, int a2)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (!APSIsAPMSpeaker())
  {
    APSVolumeConvertDBToSliderValue();
    APSVolumeConvertDBToSliderValue();
    uint64_t v6 = *(void *)(a1 + 48);
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      APSVolumeConvertSliderValueToDB();
      LogPrintF();
    }
    if (*(unsigned __int8 *)(v6 + 36) == a2) {
      return 0;
    }
    float v7 = *(float *)(*(void *)(a1 + 48) + 32);
    _GetSWVolumeSliderValue(v7);
    float v8 = *(float *)(v6 + 40);
    if (v8 <= 0.0)
    {
      *(_DWORD *)(v6 + 40) = 1045220557;
      float v8 = 0.2;
    }
    APSVolumeConvertDBToSliderValue();
    if (a2 == 1) {
      float v8 = v9;
    }
    else {
      float v7 = v9;
    }
    *(float *)(v6 + 40) = v7;
    *(unsigned char *)(v6 + 36) = a2;
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v10 = _SetSWVolumeSliderValue(a1, 1, v8);
    if (v10) {
      APSLogErrorAt();
    }
    return v10;
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 24) + 16);

  return _SetHWIsMuted(v4, a1, a2);
}

uint64_t _SetSWVolumeSliderValue(uint64_t a1, int a2, float a3)
{
  uint64_t v6 = *(void *)(a1 + 48);
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertSliderValueToDB();
    LogPrintF();
  }
  uint64_t result = APSVolumeSliderValuesAreNoticeablyDifferent();
  if (result)
  {
    *(float *)(v6 + 32) = a3;
    if (!a2)
    {
      *(unsigned char *)(v6 + 36) = 0;
      APSVolumeConvertSliderValueToDB();
      CFObjectSetPropertyDouble();
    }
    return _SetSessionSoftwareVolumeSliderValue(a1);
  }
  return result;
}

void sysInfo_updateAdvertiserInfoAndNotify(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 56);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v5 = *MEMORY[0x263EFFB08];
  v68 = 0;
  int v6 = APAdvertiserInfoCreate(v5, &v68);
  if (v6)
  {
    int v52 = v6;
    APSLogErrorAt();
    float v7 = v68;
    goto LABEL_86;
  }
  float v7 = v68;
  int v8 = CFObjectSetPropertyInt64();
  if (v8)
  {
    int v52 = v8;
LABEL_124:
    APSLogErrorAt();
    goto LABEL_86;
  }
  int v9 = CFObjectSetPropertyInt64();
  if (v9)
  {
    int v52 = v9;
    goto LABEL_124;
  }
  __str[0] = 0;
  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    CFDataRef v10 = *(const __CFData **)(a1 + 720);
    if (v10)
    {
      CFDataGetBytePtr(v10);
      HardwareAddressToCString();
      int v11 = CFObjectSetPropertyCString();
      if (v11)
      {
        int v52 = v11;
        goto LABEL_124;
      }
    }
  }
  int DeviceNameInternal = sysInfo_getDeviceNameInternal(a1, __str, 0x401uLL);
  if (DeviceNameInternal)
  {
    int v52 = DeviceNameInternal;
    goto LABEL_124;
  }
  int v13 = CFObjectSetPropertyCString();
  if (v13)
  {
    int v52 = v13;
    goto LABEL_124;
  }
  HardwareAddressToCString();
  int v14 = CFObjectSetPropertyCString();
  if (v14)
  {
    int v52 = v14;
    goto LABEL_124;
  }
  uint64_t v17 = *(const void **)(a1 + 120);
  if (v17) {
    APAdvertiserInfoSetProperty((uint64_t)v7, v15, @"deviceEnclosureColor", v16, v17);
  }
  FeaturesInternal = (const void *)sysInfo_createFeaturesInternal(a1);
  if (FeaturesInternal)
  {
    float v21 = FeaturesInternal;
    int v22 = APAdvertiserInfoSetProperty((uint64_t)v7, v19, @"featuresEx", v20, FeaturesInternal);
    if (v22)
    {
      int v52 = v22;
      goto LABEL_116;
    }
    sysInfo_getStatusFlags((unsigned char *)a1);
    int v23 = CFObjectSetPropertyInt64();
    if (v23)
    {
      int v52 = v23;
      goto LABEL_116;
    }
    CFTypeID v26 = *(const void **)(a1 + 144);
    if (!v26)
    {
LABEL_29:
      CFArrayRef v33 = *(const void **)(a1 + 160);
      if (v33)
      {
        int v34 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, @"parentGroupID", v25, v33);
        if (v34)
        {
          int v52 = v34;
          goto LABEL_116;
        }
        int v35 = CFObjectSetProperty();
        if (v35)
        {
          int v52 = v35;
          goto LABEL_116;
        }
      }
      v36 = *(const void **)(a1 + 256);
      if (v36)
      {
        int v37 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, @"persistentGroupUUID", v25, v36);
        if (v37)
        {
          int v52 = v37;
          goto LABEL_116;
        }
        if (*(uint64_t *)(a1 + 240) >= 1) {
          CFObjectSetPropertyInt64();
        }
        CFObjectSetPropertyInt64();
        APAdvertiserInfoSetProperty((uint64_t)v7, v38, @"persistentGroupModel", v39, *(const void **)(a1 + 296));
        v40 = *(const void **)(a1 + 280);
        if (v40) {
          APAdvertiserInfoSetProperty((uint64_t)v7, v24, @"persistentGroupMemberID", v25, v40);
        }
      }
      v41 = *(const void **)(a1 + 176);
      if (v41)
      {
        int v42 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, @"tightSyncUUID", v25, v41);
        if (v42)
        {
          int v52 = v42;
          goto LABEL_116;
        }
        APAdvertiserInfoSetProperty((uint64_t)v7, v43, @"tightSyncGroupModel", v44, *(const void **)(a1 + 200));
      }
      __str[0] = 0;
      sysInfo_getDeviceModel((uint64_t)__str);
      if (__str[0])
      {
        int v45 = CFObjectSetPropertyCString();
        if (v45)
        {
          int v52 = v45;
          goto LABEL_116;
        }
      }
      int v46 = CFObjectSetPropertyInt64();
      if (v46)
      {
        int v52 = v46;
        goto LABEL_116;
      }
      int v47 = CFObjectSetPropertyCString();
      if (v47)
      {
        int v52 = v47;
        goto LABEL_116;
      }
      v50 = *(const void **)(a1 + 464);
      if (v50)
      {
        int v51 = APAdvertiserInfoSetProperty((uint64_t)v7, v48, @"publicCUAirPlayPairingIdentity", v49, v50);
        if (v51)
        {
          int v52 = v51;
          goto LABEL_116;
        }
      }
      else if (gLogCategory_APReceiverSystemInfo <= 50 {
             && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      }
      {
        LogPrintF();
      }
      v53 = *(const void **)(a1 + 456);
      if (v53)
      {
        int v54 = APAdvertiserInfoSetProperty((uint64_t)v7, v48, @"publicCUSystemPairingIdentity", v49, v53);
        if (v54)
        {
          int v52 = v54;
          goto LABEL_116;
        }
      }
      else if (gLogCategory_APReceiverSystemInfo <= 50 {
             && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      }
      {
        LogPrintF();
      }
      if (sysInfo_getPairingPublicKeyID())
      {
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        DataToHexCStringEx();
        int v55 = CFObjectSetPropertyCString();
        if (v55)
        {
          int v52 = v55;
          goto LABEL_116;
        }
      }
      APSVersionUtilsGetShortVersionLength();
      int v56 = CFObjectSetPropertyCString();
      if (v56)
      {
        int v52 = v56;
      }
      else
      {
        int v69 = 0;
        long long v71 = 0u;
        long long v72 = 0u;
        GestaltGetCString();
        if (!v69 && (v69 = CFObjectSetPropertyCString()) == 0 || (APSLogErrorAt(), (int v52 = v69) == 0))
        {
          VONlh32NYbFTEnv();
          int v57 = CFObjectSetPropertyInt64();
          if (v57)
          {
            int v52 = v57;
          }
          else
          {
            snprintf(__str, 0x401uLL, "%u", 65537);
            int v58 = CFObjectSetPropertyCString();
            if (v58)
            {
              int v52 = v58;
            }
            else
            {
              int v59 = CFObjectSetPropertyInt64();
              if (v59)
              {
                int v52 = v59;
              }
              else
              {
                int v60 = CFObjectSetPropertyInt64();
                if (v60)
                {
                  int v52 = v60;
                }
                else
                {
                  BOOL v61 = APSFeaturesHasFeature() != 0;
                  if (APSFeaturesHasFeature()) {
                    int v62 = (2 * v61) | 4;
                  }
                  else {
                    int v62 = 2 * v61;
                  }
                  if (v62 | (APSFeaturesHasFeature() != 0) && (int v63 = CFObjectSetPropertyInt64()) != 0)
                  {
                    int v52 = v63;
                  }
                  else
                  {
                    int v64 = CFObjectSetProperty();
                    if (v64)
                    {
                      int v52 = v64;
                    }
                    else
                    {
                      int v65 = CFObjectSetPropertyCString();
                      if (v65)
                      {
                        int v52 = v65;
                      }
                      else
                      {
                        int v66 = *(_DWORD *)(a1 + 316);
                        if (v66 != 2 && !*(unsigned char *)(a1 + 424) || (int v67 = CFObjectSetPropertyInt64()) == 0)
                        {
                          int v52 = 0;
                          *(void *)(a1 + 56) = v7;
                          v68 = 0;
                          float v7 = 0;
LABEL_85:
                          CFRelease(v21);
                          goto LABEL_86;
                        }
                        int v52 = v67;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_116:
      APSLogErrorAt();
      goto LABEL_85;
    }
    if (*(void *)(a1 + 256))
    {
      uint64_t v27 = (const void **)(a1 + 288);
    }
    else
    {
      if (!*(void *)(a1 + 176))
      {
        v28 = 0;
        goto LABEL_24;
      }
      uint64_t v27 = (const void **)(a1 + 208);
    }
    v28 = *v27;
LABEL_24:
    int v29 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, @"groupID", v25, v26);
    if (v29)
    {
      int v52 = v29;
      goto LABEL_116;
    }
    int v30 = CFObjectSetProperty();
    if (v30)
    {
      int v52 = v30;
      goto LABEL_116;
    }
    int v31 = CFObjectSetProperty();
    if (v31)
    {
      int v52 = v31;
      goto LABEL_116;
    }
    if (v28)
    {
      int v32 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, @"groupPublicName", v25, v28);
      if (v32)
      {
        int v52 = v32;
        goto LABEL_116;
      }
    }
    goto LABEL_29;
  }
  APSLogErrorAt();
  int v52 = -6728;
LABEL_86:
  if (v7) {
    CFRelease(v7);
  }
  if (v52)
  {
    APSLogErrorAt();
  }
  else
  {
    if (a2)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
    }
    sysInfo_handleInfoDictUpdate(a1);
  }
}

uint64_t sysInfo_getDeviceNameInternal(uint64_t a1, char *__dst, size_t __size)
{
  if (__size)
  {
    uint64_t v5 = *(const char **)(a1 + 400);
    if (v5)
    {
LABEL_3:
      strlcpy(__dst, v5, __size);
      return 0;
    }
    *__dst = 0;
    strlcpy(__dst, (const char *)(a1 + 336), __size);
    uint64_t result = 0;
    if (!*__dst)
    {
      uint64_t v5 = "AirPlay";
      goto LABEL_3;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895275;
  }
  return result;
}

uint64_t sysInfo_createFeaturesInternal(uint64_t a1)
{
  uint64_t Mutable = APSFeaturesCreateMutable();
  if (Mutable)
  {
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (!*(_DWORD *)(a1 + 568))
    {
      APSFeaturesSetFeature();
      if (!APSIsAPMSpeaker() && !APSSettingsGetInt64() && !*(unsigned char *)(a1 + 682))
      {
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        if (!APSSettingsGetIntWithDefault()) {
          APSFeaturesSetFeature();
        }
        if (APSSettingsGetIntWithDefault()) {
          APSFeaturesSetFeature();
        }
        if (APSSettingsGetIntWithDefault()) {
          APSFeaturesSetFeature();
        }
        if (APSSettingsGetIntWithDefault()) {
          APSFeaturesSetFeature();
        }
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
      }
    }
    if (!APSIsAPMSpeaker())
    {
      APSFeaturesSetFeature();
      APSFeaturesSetFeature();
      APSFeaturesSetFeature();
    }
    if (APSIsAPValeriaScreenSender()) {
      APSFeaturesSetFeature();
    }
    if (!APSIsAPMSpeaker()) {
      APSFeaturesSetFeature();
    }
    if (!APSIsAPMSpeaker() && GestaltGetBoolean()) {
      APSFeaturesSetFeature();
    }
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (!*(_DWORD *)(a1 + 568)) {
      APSFeaturesSetFeature();
    }
    APSFeaturesSetFeature();
    if (APSSettingsGetInt64()) {
      APSFeaturesSetFeature();
    }
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (*(unsigned char *)(a1 + 311))
    {
      APSFeaturesSetFeature();
      if (*(unsigned char *)(a1 + 311))
      {
        if (GestaltGetBoolean()) {
          APSFeaturesSetFeature();
        }
      }
    }
    if (!*(unsigned char *)(a1 + 312)) {
      APSFeaturesSetFeature();
    }
    APSFeaturesSetFeature();
    if (APSSettingsIsFeatureEnabled()) {
      APSFeaturesSetFeature();
    }
    if (APSIsAPMSpeaker()) {
      APSFeaturesSetFeature();
    }
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (IsAppleTV() || APSIsAPMSpeaker()) {
      APSFeaturesSetFeature();
    }
    if (IsAppleTV()) {
      APSFeaturesSetFeature();
    }
    if (*(unsigned char *)(a1 + 128)) {
      APSFeaturesSetFeature();
    }
    if (APSIsProximityReceiverEnabled()) {
      APSFeaturesSetFeature();
    }
    if (APSSettingsGetInt64() && APSHasNANSupport()) {
      APSFeaturesSetFeature();
    }
    if (APSShouldClusterEngageOnActivation()) {
      APSFeaturesSetFeature();
    }
    if (!APSFeaturesIsEmpty()) {
      APSFeaturesClearAllFeatures();
    }
    if (APSIsSetMRInfoCommandEnabled()) {
      APSFeaturesSetFeature();
    }
    if (APSIsAPMSpeaker() && APSSettingsIsFeatureEnabled()) {
      APSFeaturesSetFeature();
    }
    if (APSSettingsGetIntWithDefault()) {
      APSFeaturesSetFeature();
    }
    if (APSSettingsIsFeatureEnabled() && FVDUtilsEncryptedDecodeSupported()) {
      APSFeaturesSetFeature();
    }
  }
  else
  {
    APSLogErrorAt();
  }
  return Mutable;
}

uint64_t sysInfo_getStatusFlags(unsigned char *a1)
{
  if (a1[480]) {
    int v2 = 8;
  }
  else {
    int v2 = (a1[481] != 0) << 7;
  }
  if (a1[433]) {
    v2 |= 0x200u;
  }
  if (a1[129]) {
    int v3 = 524292;
  }
  else {
    int v3 = 4;
  }
  int v4 = v3 | v2;
  if (APSSettingsGetInt64() && a1[307]) {
    v4 |= 0x40u;
  }
  if (a1[682]) {
    int v5 = v4 | 0x40000;
  }
  else {
    int v5 = v4;
  }
  if (a1[309]) {
    v5 |= 0x100u;
  }
  if (a1[310]) {
    int v6 = v5 | 0x400;
  }
  else {
    int v6 = v5;
  }
  if (a1[169] && APSMultiPrimariesEnabled()) {
    v6 |= 0x800u;
  }
  if (a1[225]) {
    unsigned int v7 = v6 | 0x20000;
  }
  else {
    unsigned int v7 = v6;
  }
  if (a1[226]) {
    uint64_t v8 = v7 | 0x100000;
  }
  else {
    uint64_t v8 = v7;
  }
  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    if (a1[305]) {
      unsigned int v9 = v8 | 0x1000;
    }
    else {
      unsigned int v9 = v8;
    }
    if (a1[304]) {
      v9 |= 0x8000u;
    }
    if (a1[308]) {
      uint64_t v8 = v9 | 0x10000;
    }
    else {
      uint64_t v8 = v9;
    }
  }
  if (APSIsAPMSpeaker())
  {
    if (a1[184]) {
      uint64_t v8 = v8 | 0x2000;
    }
    else {
      uint64_t v8 = v8;
    }
    if (a1[306])
    {
      if (APSSettingsIsFeatureEnabled()) {
        return v8 | 0x200000;
      }
      else {
        return v8;
      }
    }
  }
  return v8;
}

__n128 sysInfo_getDeviceModel(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  GetDeviceModelString();
  if (!*(unsigned char *)a1)
  {
    if (APSIsAPMSpeaker())
    {
      *(_WORD *)(a1 + 16) = 49;
      int v3 = (__n128 *)"AudioAccessory1,1";
LABEL_4:
      __n128 result = *v3;
      *(__n128 *)a1 = *v3;
      return result;
    }
    if (!*(unsigned char *)a1)
    {
      *(_WORD *)(a1 + 16) = 49;
      int v3 = (__n128 *)"AirPlayGeneric1,1";
      goto LABEL_4;
    }
  }
  return result;
}

uint64_t sysInfo_getPairingPublicKeyID()
{
  uint64_t v0 = gQblcfSzZBQsYCCV();
  if (v0)
  {
    uint64_t v1 = v0;
    goto LABEL_5;
  }
  uint64_t v1 = KUY675K4ryxHGzD5GVD();
  CFRelease(0);
  if (v1) {
LABEL_5:
  }
    APSLogErrorAt();
  return v1;
}

void sysInfo_handleInfoDictUpdate(uint64_t a1)
{
  int v6 = 0;
  CFTypeRef cf = 0;
  if (!IsAppleTV() && !APSIsAPMSpeaker())
  {
    int v3 = 0;
    goto LABEL_23;
  }
  if (CFArrayEnsureCreatedAndAppend())
  {
    APSLogErrorAt();
    int v3 = 0;
    int v5 = 0;
    goto LABEL_17;
  }
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  sysInfo_copyInfoDictInternal(a1, (const __CFArray *)cf, (CFAllocatorRef)*MEMORY[0x263EFFB08], &v6);
  int v3 = v6;
  if (!v6)
  {
    APSLogErrorAt();
LABEL_23:
    int v5 = 0;
    goto LABEL_7;
  }
  uint64_t Mutable = CFDictionaryCreateMutable(v2, 1, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  int v5 = Mutable;
  if (Mutable)
  {
    CFDictionarySetValue(Mutable, @"InfoDict", v3);
    if (!APSXPCClientSendCommandCreatingReply()) {
      goto LABEL_7;
    }
  }
  APSLogErrorAt();
LABEL_17:
  if (gLogCategory_APReceiverSystemInfo <= 90
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_7:
  if (cf) {
    CFRelease(cf);
  }
  if (v3) {
    CFRelease(v3);
  }
  if (v5) {
    CFRelease(v5);
  }
}

uint64_t sysInfo_copyInfoDictInternal(uint64_t a1, const __CFArray *a2, CFAllocatorRef allocator, __CFDictionary **a4)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    uint64_t v31 = 4294895276;
    APSLogErrorAt();
    return v31;
  }
  uint64_t v8 = Mutable;
  HardwareAddressToCString();
  CFDictionarySetCString();
  FeaturesInternal = (const void *)sysInfo_createFeaturesInternal(a1);
  if (!APSFeaturesIsEmpty())
  {
    int v35 = 0;
    uint64_t v10 = APSFeaturesCopyStringRepresentation();
    if (v10)
    {
      uint64_t v31 = v10;
      goto LABEL_98;
    }
    CFDictionarySetValue(v8, @"featuresEx", v35);
    CFRelease(v35);
    APSFeaturesGetLegacyFlags();
    CFDictionarySetInt64();
  }
  int v11 = (const void *)*MEMORY[0x263EFFB40];
  CFDictionarySetValue(v8, @"keepAliveSendStatsAsBody", (const void *)*MEMORY[0x263EFFB40]);
  double v12 = (const void *)*MEMORY[0x263EFFB38];
  if (*(unsigned char *)(a1 + 681)) {
    int v13 = v11;
  }
  else {
    int v13 = (const void *)*MEMORY[0x263EFFB38];
  }
  CFDictionarySetValue(v8, @"canRecordScreenStream", v13);
  if (*(unsigned char *)(a1 + 682)) {
    int v14 = v11;
  }
  else {
    int v14 = v12;
  }
  CFDictionarySetValue(v8, @"screenDemoMode", v14);
  if (sysInfo_getReceiverHDRCapability_sCheckOnce != -1) {
    dispatch_once(&sysInfo_getReceiverHDRCapability_sCheckOnce, &__block_literal_global_517);
  }
  CFDictionarySetValue(v8, @"receiverHDRCapability", (const void *)sysInfo_getReceiverHDRCapability_capability);
  if (*(unsigned char *)(a1 + 683)) {
    CFDictionarySetValue(v8, @"supportsSenderUIEvents", v11);
  }
  __dst[0] = 0;
  sysInfo_getDeviceModel((uint64_t)__dst);
  CFDictionarySetCString();
  uint64_t v15 = *(const void **)(a1 + 120);
  if (v15) {
    CFDictionarySetValue(v8, @"deviceEnclosureColor", v15);
  }
  __dst[0] = 0;
  sysInfo_getDeviceNameInternal(a1, __dst, 0x401uLL);
  CFDictionarySetCString();
  __dst[0] = 0;
  GetSystemBuildVersionString();
  CFDictionarySetCString();
  CFDictionarySetCString();
  if (sysInfo_getPairingPublicKeyID())
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    CFDictionarySetData();
  }
  uint64_t v16 = *(const void **)(a1 + 464);
  if (v16) {
    CFDictionarySetValue(v8, @"pi", v16);
  }
  uint64_t v17 = *(const void **)(a1 + 456);
  if (v17) {
    CFDictionarySetValue(v8, @"psi", v17);
  }
  APSVersionUtilsGetShortVersionLength();
  CFDictionarySetCString();
  sysInfo_getStatusFlags((unsigned char *)a1);
  CFDictionarySetInt64();
  if (a2)
  {
    CFArrayGetCount(a2);
    CFArrayApplyBlock();
  }
  VONlh32NYbFTEnv();
  CFDictionarySetInt64();
  CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef v19 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (v19)
  {
    uint64_t v20 = v19;
    CFArrayRef v33 = a4;
    if (APSFeaturesHasFeature() || APSFeaturesHasFeature())
    {
      CFDictionarySetValue(v20, @"supportsUIForAudioOnlyContent", v11);
      CFDictionarySetValue(v20, @"supportsFPSSecureStop", v11);
      if (APSSettingsGetIntWithDefault()) {
        float v21 = v11;
      }
      else {
        float v21 = v12;
      }
      CFDictionarySetValue(v20, @"supportsStopAtEndOfQueue", v21);
      BOOL v22 = APSSettingsIsFeatureEnabled() != 0;
    }
    else
    {
      CFDictionarySetValue(v20, @"supportsUIForAudioOnlyContent", v12);
      CFDictionarySetValue(v20, @"supportsFPSSecureStop", v12);
      if (APSSettingsGetIntWithDefault()) {
        CFTypeID v26 = v11;
      }
      else {
        CFTypeID v26 = v12;
      }
      CFDictionarySetValue(v20, @"supportsStopAtEndOfQueue", v26);
      BOOL v22 = 0;
    }
    if (gLogCategory_APReceiverSystemInfo <= 30
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v22) {
      int v23 = v11;
    }
    else {
      int v23 = v12;
    }
    CFDictionarySetValue(v20, @"supportsOfflineHLS", v23);
    if (APSSettingsIsFeatureEnabled()) {
      CFDictionarySetValue(v20, @"supportsAirPlayVideoWithSharePlay", v11);
    }
    CFDictionarySetValue(v8, @"playbackCapabilities", v20);
    CFRelease(v20);
    CFMutableDictionaryRef v24 = CFDictionaryCreateMutable(v18, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (v24)
    {
      CFMutableDictionaryRef v25 = v24;
      APAudioFormatGetSupportedTransportAudioFormatsForRealTimeReceiver();
      CFDictionarySetInt64();
      APAudioFormatGetSupportedTransportAudioFormatsForBufferedReceiver();
      CFDictionarySetInt64();
      APAudioFormatGetSupportedTransportAudioFormatsForScreenReceiver();
      CFDictionarySetInt64();
      APAudioFormatGetSupportedTransportAudioFormatsLowLatencyReceiver();
      CFDictionarySetInt64();
      CFDictionarySetValue(v8, @"supportedFormats", v25);
      CFRelease(v25);
    }
    else if (gLogCategory_APReceiverSystemInfo <= 90 {
           && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
    uint64_t v27 = CFDictionaryCreateMutable(v18, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (v27)
    {
      if (IsAppleTV() && !*(unsigned char *)(a1 + 306))
      {
        FigCFDictionaryGetValue();
        FigCFDictionaryGetValue();
      }
      v28 = (const void *)APSAudioFormatDescriptionListCreateForBufferedReceiverWithAudioCapabilities();
      if (v28)
      {
        if (APSAudioFormatDescriptionListCreateAdvertisementArray())
        {
          if (gLogCategory_APReceiverSystemInfo <= 90
            && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          CFDictionarySetValue(v27, @"bufferStream", 0);
          CFDictionarySetValue(v8, @"supportedAudioFormatsExtended", v27);
        }
        goto LABEL_78;
      }
      if (gLogCategory_APReceiverSystemInfo > 90
        || gLogCategory_APReceiverSystemInfo == -1 && !_LogCategory_Initialize())
      {
LABEL_77:
        v28 = 0;
LABEL_78:
        int v29 = *(const void **)(a1 + 696);
        if (v29) {
          CFDictionarySetValue(v8, @"volumeControlType", v29);
        }
        CFDictionarySetDouble();
        if (APSSettingsIsFeatureEnabled())
        {
          CFDictionarySetInt64();
          if (*(unsigned char *)(a1 + 713)) {
            int v30 = v11;
          }
          else {
            int v30 = v12;
          }
          CFDictionarySetValue(v8, @"isMuted", v30);
        }
        *CFArrayRef v33 = v8;
        if (v28) {
          CFRelease(v28);
        }
        if (v27) {
          CFRelease(v27);
        }
        uint64_t v8 = 0;
        uint64_t v31 = 0;
        goto LABEL_90;
      }
    }
    else if (gLogCategory_APReceiverSystemInfo > 90 {
           || gLogCategory_APReceiverSystemInfo == -1 && !_LogCategory_Initialize())
    }
    {
      goto LABEL_77;
    }
    LogPrintF();
    goto LABEL_77;
  }
  uint64_t v31 = 4294895276;
LABEL_98:
  APSLogErrorAt();
LABEL_90:
  if (v8) {
    CFRelease(v8);
  }
  if (FeaturesInternal) {
    CFRelease(FeaturesInternal);
  }
  return v31;
}

void __sysInfo_copyInfoDictInternal_block_invoke(uint64_t a1, CFTypeRef cf1)
{
  CFTypeRef cf = 0;
  if (CFEqual(cf1, @"txtAirPlay"))
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 56);
    if (!v4) {
      return;
    }
    APAdvertiserInfoCopyAirPlayDataWithNANServiceType(v4, 0, (CFDataRef *)&cf);
  }
  else if (CFEqual(cf1, @"txtRAOP"))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 56);
    if (!v5) {
      return;
    }
    APAdvertiserInfoCopyRAOPData(v5, (CFDataRef *)&cf);
  }
  else if (CFEqual(cf1, @"displayCapabilities"))
  {
    if (!APSSettingsIsFeatureEnabled()) {
      return;
    }
    objc_msgSend((id)objc_msgSend(MEMORY[0x263F15778], "mainDisplay"), "displayId");
    APSDisplayUtilsCopyDisplayCapabilities();
  }
  FigCFDictionarySetValue();
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t __sysInfo_getReceiverHDRCapability_block_invoke()
{
  uint64_t result = GetDeviceModelString();
  if (*(void *)v3 == 0x355654656C707041 && *(void *)&v3[3] == 0x332C355654656CLL)
  {
    CFAllocatorRef v2 = @"1080p60";
  }
  else if (*(void *)v3 ^ 0x365654656C707041 | *(void *)&v3[3] ^ 0x322C365654656CLL)
  {
    CFAllocatorRef v2 = @"4k60";
  }
  else
  {
    CFAllocatorRef v2 = @"4k30";
  }
  sysInfo_getReceiverHDRCapability_capability = (uint64_t)v2;
  return result;
}

uint64_t __APReceiverSystemInfoGetTypeID_block_invoke()
{
  uint64_t result = _CFRuntimeRegisterClass();
  APReceiverSystemInfoGetTypeID_typeID = result;
  return result;
}

void sysInfo_Finalize(uint64_t a1)
{
  [*(id *)(a1 + 728) invalidate];

  *(void *)(a1 + 728) = 0;
  CFAllocatorRef v2 = *(void **)(a1 + 328);
  if (v2)
  {
    [v2 invalidate];

    *(void *)(a1 + 328) = 0;
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 != -1)
  {
    notify_cancel(v3);
    *(_DWORD *)(a1 + 36) = -1;
  }
  int v4 = *(_DWORD *)(a1 + 24);
  if (v4 != -1)
  {
    notify_cancel(v4);
    *(_DWORD *)(a1 + 24) = -1;
  }
  int v5 = *(_DWORD *)(a1 + 28);
  if (v5 != -1)
  {
    notify_cancel(v5);
    *(_DWORD *)(a1 + 28) = -1;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6 != -1)
  {
    notify_cancel(v6);
    *(_DWORD *)(a1 + 40) = -1;
  }
  int v7 = *(_DWORD *)(a1 + 44);
  if (v7 != -1)
  {
    notify_cancel(v7);
    *(_DWORD *)(a1 + 44) = -1;
  }
  int v8 = *(_DWORD *)(a1 + 48);
  if (v8 != -1)
  {
    notify_cancel(v8);
    *(_DWORD *)(a1 + 48) = -1;
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9 != -1)
  {
    notify_cancel(v9);
    *(_DWORD *)(a1 + 32) = -1;
  }
  uint64_t v10 = *(void **)(a1 + 400);
  if (v10)
  {
    free(v10);
    *(void *)(a1 + 400) = 0;
  }
  int v11 = *(const void **)(a1 + 120);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(a1 + 120) = 0;
  }
  double v12 = *(const void **)(a1 + 752);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(a1 + 752) = 0;
  }
  int v13 = *(const void **)(a1 + 464);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(a1 + 464) = 0;
  }
  int v14 = *(const void **)(a1 + 456);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(a1 + 456) = 0;
  }
  uint64_t v15 = *(const void **)(a1 + 56);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v16 = *(const void **)(a1 + 720);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(a1 + 720) = 0;
  }
  uint64_t v17 = *(const void **)(a1 + 736);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(a1 + 736) = 0;
  }
  CFAllocatorRef v18 = *(const void **)(a1 + 72);
  if (v18)
  {
    CFRelease(v18);
    *(void *)(a1 + 72) = 0;
  }
  *(unsigned char *)(a1 + 744) = 0;
  CFMutableDictionaryRef v19 = *(const void **)(a1 + 416);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(a1 + 416) = 0;
  }
  uint64_t v20 = *(const void **)(a1 + 144);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(a1 + 144) = 0;
  }
  float v21 = *(const void **)(a1 + 160);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(a1 + 160) = 0;
  }
  BOOL v22 = *(const void **)(a1 + 176);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 176) = 0;
  }
  int v23 = *(const void **)(a1 + 200);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(a1 + 200) = 0;
  }
  CFMutableDictionaryRef v24 = *(const void **)(a1 + 192);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(a1 + 192) = 0;
  }
  CFMutableDictionaryRef v25 = *(const void **)(a1 + 208);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(a1 + 208) = 0;
  }
  CFTypeID v26 = *(const void **)(a1 + 216);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(a1 + 216) = 0;
  }
  uint64_t v27 = *(const void **)(a1 + 232);
  if (v27)
  {
    CFRelease(v27);
    *(void *)(a1 + 232) = 0;
  }
  v28 = *(const void **)(a1 + 256);
  if (v28)
  {
    CFRelease(v28);
    *(void *)(a1 + 256) = 0;
  }
  int v29 = *(const void **)(a1 + 264);
  if (v29)
  {
    CFRelease(v29);
    *(void *)(a1 + 264) = 0;
  }
  int v30 = *(const void **)(a1 + 280);
  if (v30)
  {
    CFRelease(v30);
    *(void *)(a1 + 280) = 0;
  }
  uint64_t v31 = *(const void **)(a1 + 296);
  if (v31)
  {
    CFRelease(v31);
    *(void *)(a1 + 296) = 0;
  }
  int v32 = *(const void **)(a1 + 288);
  if (v32)
  {
    CFRelease(v32);
    *(void *)(a1 + 288) = 0;
  }
  CFArrayRef v33 = *(const void **)(a1 + 696);
  if (v33)
  {
    CFRelease(v33);
    *(void *)(a1 + 696) = 0;
  }
  int v34 = *(const void **)(a1 + 704);
  if (v34)
  {
    CFRelease(v34);
    *(void *)(a1 + 704) = 0;
  }
  int v35 = *(NSObject **)(a1 + 552);
  if (v35)
  {
    dispatch_release(v35);
    *(void *)(a1 + 552) = 0;
  }
  uint64_t v36 = *(const void **)(a1 + 584);
  if (v36)
  {
    CFRelease(v36);
    *(void *)(a1 + 584) = 0;
  }
  int v37 = *(const void **)(a1 + 640);
  if (v37)
  {
    CFRelease(v37);
    *(void *)(a1 + 640) = 0;
  }
  uint64_t v38 = *(const void **)(a1 + 648);
  if (v38)
  {
    CFRelease(v38);
    *(void *)(a1 + 648) = 0;
  }
  uint64_t v39 = *(const void **)(a1 + 656);
  if (v39)
  {
    CFRelease(v39);
    *(void *)(a1 + 656) = 0;
  }
  v40 = *(const void **)(a1 + 664);
  if (v40)
  {
    CFRelease(v40);
    *(void *)(a1 + 664) = 0;
  }
  v41 = *(NSObject **)(a1 + 576);
  if (v41)
  {
    dispatch_release(v41);
    *(void *)(a1 + 576) = 0;
  }
  int v42 = *(NSObject **)(a1 + 16);
  if (v42)
  {
    dispatch_release(v42);
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v43 = *(const void **)(a1 + 88);
  if (v43)
  {
    CFRelease(v43);
    *(void *)(a1 + 88) = 0;
  }
}

uint64_t sysInfo_copyPairingIdentity(int a1)
{
  uint64_t v2 = PairingSessionCreate();
  if (v2)
  {
    uint64_t v3 = v2;
LABEL_7:
    APSLogErrorAt();
    return v3;
  }
  if (a1) {
    PairingSessionSetFlags();
  }
  PairingSessionSetKeychainInfo();
  PairingSessionSetLogging();
  uint64_t v3 = PairingSessionCopyIdentity();
  CFRelease(0);
  if (v3) {
    goto LABEL_7;
  }
  return v3;
}

uint64_t __sysInfo_registerForNotificationsAsNeeded_block_invoke(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (!*(unsigned char *)(v1 + 153))
  {
    uint64_t result = *(void *)(v1 + 144);
    if (result)
    {
      uint64_t v2 = *(const void **)(v1 + 160);
      if (v2)
      {
        uint64_t result = CFEqual((CFTypeRef)result, v2);
        if (result)
        {
          if (gLogCategory_APReceiverSystemInfo <= 50
            && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CMNotificationCenterGetDefaultLocalCenter();
          return CMNotificationCenterPostNotification();
        }
      }
    }
  }
  return result;
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_2(uint64_t a1, int a2)
{
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_3(uint64_t a1, int a2)
{
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_4(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(a1 + 40);

  sysInfo_updatePrefs(v2, 0, v3);
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_5(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(a1 + 32);

  sysInfo_updatePrefs(v2, 0, 1);
}

uint64_t __sysInfo_registerForNotificationsAsNeeded_block_invoke_6(uint64_t result)
{
  if (*(void *)(*(void *)(result + 32) + 176))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    return CMNotificationCenterPostNotification();
  }
  return result;
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_7(uint64_t a1)
{
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_8(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(a1 + 32);

  sysInfo_updatePrefs(v2, 0, 0);
}

void __sysInfo_deviceNameChangeListenerStart_block_invoke(uint64_t a1)
{
}

void __APReceiverSystemInfoCreate_block_invoke(uint64_t a1)
{
  sysInfo_updateAPGroupInfo(*(void *)(a1 + 32));
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(_DWORD *)(v2 + 568))
  {
    sysInfo_handleCloudConnectivityChange(v2, *(_DWORD *)(v2 + 24), 1);
    sysInfo_handleConferenceRoomModeChange(*(void *)(a1 + 32), *(_DWORD *)(*(void *)(a1 + 32) + 28), 1);
    sysInfo_updatePrefs(*(void *)(a1 + 32), 1, 1);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  sysInfo_updateAdvertiserInfoAndNotify(v2, 0);
  sysInfo_updatePowerAssertionState(*(void *)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 32);

  sysInfo_handleDeviceNameChanged(v3);
}

void sysInfo_updateAPGroupInfo(uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 144);
  if (v2) {
    CFRetain(*(CFTypeRef *)(a1 + 144));
  }
  if (!*(unsigned char *)(a1 + 224))
  {
    int v4 = *(const void **)(a1 + 160);
    if (v4)
    {
      if (gLogCategory_APReceiverSystemInfo >= 51)
      {
        int v6 = *(const void **)(a1 + 144);
      }
      else
      {
        if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        int v4 = *(const void **)(a1 + 160);
        int v6 = *(const void **)(a1 + 144);
        if (!v4) {
          goto LABEL_40;
        }
      }
      CFRetain(v4);
LABEL_40:
      *(void *)(a1 + 144) = v4;
      if (v6) {
        CFRelease(v6);
      }
      *(_WORD *)(a1 + 152) = *(unsigned __int8 *)(a1 + 168);
      goto LABEL_43;
    }
  }
  if (APSIsAPMSpeaker()) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = IsAppleTV() != 0;
  }
  if (APSIsMemberOfHTGroup()) {
    BOOL v5 = APSIsAPMSpeaker() != 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (*(unsigned char *)(a1 + 129))
  {
    if (!*(unsigned char *)(a1 + 225) && !*(unsigned char *)(a1 + 130))
    {
      CFStringGetTypeID();
      CFDictionaryGetTypedValue();
    }
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  int v7 = *(const void **)(a1 + 144);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 144) = 0;
  }
  if (IsAppleTV() || APSIsAPMSpeaker()) {
    APSCopyClusterInfo();
  }
  CFTypeRef v8 = *(CFTypeRef *)(a1 + 216);
  if (v8) {
    CFTypeRef v8 = CFRetain(v8);
  }
  CFTypeRef cf = v8;
  *(void *)(a1 + 144) = APSCreateGroupID();
  BOOL v9 = v3 && *(unsigned char *)(a1 + 480) == 0;
  *(unsigned char *)(a1 + 152) = v9;
  *(unsigned char *)(a1 + 153) = v3 && !v5;
  CFRelease(cf);
LABEL_43:
  if (gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APReceiverSystemInfo <= 50)
    {
      if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  if (v2) {
    CFRelease(v2);
  }
}

void sysInfo_handleCloudConnectivityChange(uint64_t a1, int token, int a3)
{
  uint64_t state64 = 0;
  notify_get_state(token, &state64);
  int v5 = state64 != 0;
  if (*(unsigned __int8 *)(a1 + 307) != v5)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 307) = v5;
    if (!a3) {
      sysInfo_updateAdvertiserInfoAndNotify(a1, @"AdvertisingParameterChanged");
    }
  }
}

void sysInfo_handleConferenceRoomModeChange(uint64_t a1, int token, int a3)
{
  uint64_t state64 = 0;
  notify_get_state(token, &state64);
  int v5 = state64 != 0;
  if (*(unsigned __int8 *)(a1 + 309) != v5)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 309) = v5;
    if (!a3) {
      sysInfo_updateAdvertiserInfoAndNotify(a1, @"AdvertisingParameterChanged");
    }
  }
}

void sysInfo_updatePrefs(uint64_t a1, int a2, int a3)
{
  cf1[8] = *(CFTypeRef *)MEMORY[0x263EF8340];
  int v49 = 0;
  if (*(_DWORD *)(a1 + 568)) {
    return;
  }
  APSSettingsSynchronize();
  BOOL v6 = APSSettingsGetInt64() != 0;
  [MEMORY[0x263F53C50] sharedConnection];
  int v7 = objc_opt_respondsToSelector() ^ 1;
  int v8 = v7 & v6;
  if ((v7 & 1) == 0 && v6) {
    int v8 = objc_msgSend((id)objc_msgSend(MEMORY[0x263F53C50], "sharedConnection"), "isAirPlayIncomingRequestsAllowed");
  }
  if (*(unsigned __int8 *)(a1 + 64) != v8)
  {
    *(unsigned char *)(a1 + 64) = v8;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  int v9 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 80) != v9)
  {
    *(unsigned char *)(a1 + 80) = v9;
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  int v10 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 310) == v10)
  {
    int v11 = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 310) = v10;
    int v11 = 1;
  }
  int v50 = APSGetAccessControlConfig();
  if (v50)
  {
    int v49 = *(_DWORD *)(a1 + 320);
    int v50 = 0;
  }
  else if (*(_DWORD *)(a1 + 316))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_DWORD *)(a1 + 316) = 0;
    int v11 = 1;
  }
  int v12 = v49;
  if (v49 != *(_DWORD *)(a1 + 320))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50)
    {
      if (gLogCategory_APReceiverSystemInfo != -1 || (v13 = _LogCategory_Initialize(), int v12 = v49, v13))
      {
        LogPrintF();
        int v12 = v49;
      }
    }
    *(_DWORD *)(a1 + 320) = v12;
    int v11 = 1;
  }
  if (a3)
  {
    cf1[0] = 0;
    APSCopyPersistentGroupInfo();
    int v14 = 0;
    if (*(void *)(a1 + 240))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(void *)(a1 + 240) = 0;
      int v11 = 1;
      int v14 = 1;
    }
    if (*(_DWORD *)(a1 + 248))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_DWORD *)(a1 + 248) = 0;
      int v11 = 1;
      int v14 = 1;
      int v15 = 1;
    }
    else
    {
      int v15 = 0;
    }
    CFTypeRef v17 = *(CFTypeRef *)(a1 + 256);
    if (cf1[0] == v17)
    {
      int v16 = v15;
    }
    else if (!cf1[0] || !v17 || (int v16 = v15, !CFEqual(cf1[0], v17)))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFAllocatorRef v18 = *(const void **)(a1 + 256);
      CFTypeRef v19 = cf1[0];
      *(CFTypeRef *)(a1 + 256) = cf1[0];
      if (v19) {
        CFRetain(v19);
      }
      if (v18) {
        CFRelease(v18);
      }
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      int v11 = 1;
      int v14 = 1;
      int v16 = 1;
    }
    if (*(void *)(a1 + 264))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v20 = *(const void **)(a1 + 264);
      *(void *)(a1 + 264) = 0;
      if (v20) {
        CFRelease(v20);
      }
    }
    if (*(void *)(a1 + 280))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      float v21 = *(const void **)(a1 + 280);
      *(void *)(a1 + 280) = 0;
      if (v21) {
        CFRelease(v21);
      }
      int v11 = 1;
      int v14 = 1;
    }
    if (*(unsigned char *)(a1 + 272))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(a1 + 272) = 0;
    }
    if (*(void *)(a1 + 296))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      BOOL v22 = *(const void **)(a1 + 296);
      *(void *)(a1 + 296) = 0;
      if (v22) {
        CFRelease(v22);
      }
      int v11 = 1;
    }
    if (*(void *)(a1 + 288))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v23 = *(const void **)(a1 + 288);
      *(void *)(a1 + 288) = 0;
      if (v23) {
        CFRelease(v23);
      }
      int v11 = 1;
    }
    if (cf1[0])
    {
      CFRelease(cf1[0]);
      cf1[0] = 0;
    }
  }
  else
  {
    int v14 = 0;
    int v15 = 0;
    int v16 = 0;
  }
  cf1[0] = 0;
  APSCopyTightSyncInfo();
  if (*(void *)(a1 + 176))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFMutableDictionaryRef v24 = *(const void **)(a1 + 176);
    *(CFTypeRef *)(a1 + 176) = cf1[0];
    if (v24) {
      CFRelease(v24);
    }
    if (!a2)
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      if (*(unsigned char *)(a1 + 305) && *(void *)(a1 + 176) && !*(unsigned char *)(a1 + 129))
      {
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        notify_post("kAirPlayWHANotification_InterruptedByPreWHASender");
      }
    }
    int v11 = 1;
    int v14 = 1;
  }
  if (*(void *)(a1 + 192))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFMutableDictionaryRef v25 = *(const void **)(a1 + 192);
    *(void *)(a1 + 192) = 0;
    if (v25) {
      CFRelease(v25);
    }
  }
  if (*(unsigned char *)(a1 + 184))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 184) = 0;
    int v11 = 1;
    int v14 = 1;
  }
  if (*(void *)(a1 + 200))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeID v26 = *(const void **)(a1 + 200);
    *(void *)(a1 + 200) = 0;
    if (v26) {
      CFRelease(v26);
    }
    int v11 = 1;
  }
  if (*(void *)(a1 + 208))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v27 = *(const void **)(a1 + 208);
    *(void *)(a1 + 208) = 0;
    if (v27) {
      CFRelease(v27);
    }
    int v11 = 1;
  }
  if (cf1[0])
  {
    CFRelease(cf1[0]);
    cf1[0] = 0;
  }
  uint64_t v28 = *(void *)(a1 + 256);
  if (v28 && *(_DWORD *)(a1 + 248) == 1)
  {
    int v29 = IsAppleTV();
    APSSettingsSetValue();
  }
  else if (*(void *)(a1 + 176) && !*(_DWORD *)(a1 + 248) || v28 && *(_DWORD *)(a1 + 248) <= 1u)
  {
    int v29 = APSSettingsGetInt64() != 0;
  }
  else
  {
    APSSettingsRemoveValue();
    int v29 = 0;
  }
  if (v29 != *(unsigned __int8 *)(a1 + 306))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 306) = v29;
    int v11 = 1;
  }
  int v30 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 304) != v30)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 304) = v30;
    int v11 = 1;
  }
  int v31 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 308) != v31)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 308) = v31;
    int v11 = 1;
  }
  int v32 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 311) != v32)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 311) = v32;
    int v11 = 1;
  }
  int Int64 = APSSettingsGetInt64();
  if (Int64 != *(_DWORD *)(a1 + 676)) {
    *(_DWORD *)(a1 + 676) = Int64;
  }
  int v34 = APSGetP2PAllow();
  if (v34 != *(unsigned __int8 *)(a1 + 408))
  {
    *(unsigned char *)(a1 + 408) = v34;
    int v16 = 1;
  }
  unsigned __int8 IntWithDefault = APSSettingsGetIntWithDefault();
  if (*(unsigned __int8 *)(a1 + 409) != IntWithDefault)
  {
    unsigned __int8 v36 = IntWithDefault;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 409) = v36;
    int v16 = 1;
  }
  int v37 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 410) != v37) {
    *(unsigned char *)(a1 + 410) = v37;
  }
  uint64_t v38 = (const void *)APSSettingsCopyValue();
  uint64_t v39 = *(const void **)(a1 + 416);
  if (v38 == v39)
  {
LABEL_195:
    if (!v38) {
      goto LABEL_197;
    }
    goto LABEL_196;
  }
  if (!v39 || !v38)
  {
    if (!v38) {
      goto LABEL_193;
    }
    goto LABEL_192;
  }
  if (!CFEqual(v38, *(CFTypeRef *)(a1 + 416)))
  {
    uint64_t v39 = *(const void **)(a1 + 416);
LABEL_192:
    CFRetain(v38);
LABEL_193:
    *(void *)(a1 + 416) = v38;
    if (v39) {
      CFRelease(v39);
    }
    goto LABEL_195;
  }
LABEL_196:
  CFRelease(v38);
LABEL_197:
  int v40 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 432) != v40)
  {
    *(unsigned char *)(a1 + 432) = v40;
    int v11 = 1;
  }
  int v41 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 433) != v41)
  {
    *(unsigned char *)(a1 + 433) = v41;
    int v11 = 1;
  }
  int v42 = APSSettingsGetInt64() != 0;
  int v43 = *(unsigned __int8 *)(a1 + 480);
  if (v43 != v42)
  {
    sysInfo_deleteLegacyPairingPeers();
    *(unsigned char *)(a1 + 480) = v42;
    sysInfo_updatePINInternal(a1, v42);
    int v43 = *(unsigned __int8 *)(a1 + 480);
    int v11 = 1;
    int v14 = 1;
  }
  *(unsigned char *)(a1 + 472) = 0;
  if (v43)
  {
    APSSettingsGetCString();
    if (*(unsigned char *)(a1 + 472)) {
      sysInfo_handleAuthStringUpdate((unsigned char *)(a1 + 472));
    }
  }
  if (*(unsigned char *)(a1 + 480)) {
    goto LABEL_210;
  }
  LOBYTE(cf1[0]) = 0;
  APSSettingsGetCString();
  if (strcmp((const char *)cf1, (const char *)(a1 + 481)))
  {
    __strlcpy_chk();
    sysInfo_handleAuthStringUpdate((unsigned char *)(a1 + 481));
    sysInfo_deleteLegacyPairingPeers();
    int v11 = 1;
  }
  if (*(unsigned char *)(a1 + 480))
  {
LABEL_210:
    int v44 = 3;
  }
  else if (*(unsigned char *)(a1 + 481))
  {
    int v44 = 2;
  }
  else
  {
    if (!*(unsigned char *)(a1 + 433))
    {
      *(_DWORD *)(a1 + 428) = 0;
      goto LABEL_212;
    }
    int v44 = 1;
  }
  *(_DWORD *)(a1 + 428) = v44;
LABEL_212:
  int v45 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 560) != v45) {
    *(unsigned char *)(a1 + 560) = v45;
  }
  int v46 = APSSettingsGetInt64();
  if (v46 >= 1 && v50 == 0) {
    int v48 = v46;
  }
  else {
    int v48 = 30;
  }
  *(_DWORD *)(a1 + 564) = v48;
  if (v14) {
    sysInfo_updateAPGroupInfo(a1);
  }
  if (v16) {
    sysInfo_updateAdvertiserInfoAndNotify(a1, @"P2PSettingChanged");
  }
  if (v11) {
    sysInfo_updateAdvertiserInfoAndNotify(a1, @"AdvertisingParameterChanged");
  }
  if (v15) {
    sysInfo_updatePowerAssertionState(a1);
  }
}

uint64_t sysInfo_updatePowerAssertionState(uint64_t a1)
{
  uint64_t result = IsAppleTV();
  if (result) {
    int v3 = *(_DWORD *)(a1 + 248) == 1;
  }
  else {
    int v3 = 0;
  }
  if (*(void *)(a1 + 736) && *(unsigned __int8 *)(a1 + 744) != v3)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v3) {
      uint64_t result = APSPowerAssertionRaise();
    }
    else {
      uint64_t result = APSPowerAssertionRelease();
    }
    *(unsigned char *)(a1 + 744) = v3;
  }
  return result;
}

void sysInfo_handleDeviceNameChanged(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  __s1[0] = 0;
  GetDeviceName();
  if (strcmp(__s1, (const char *)(a1 + 336))) {
    sysInfo_setDeviceName(a1);
  }
}

void sysInfo_setDeviceName(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  __strlcpy_chk();

  sysInfo_updateAdvertiserInfoAndNotify(a1, @"AdvertisingDeviceSettingChanged");
}

void sysInfo_deleteLegacyPairingPeers()
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!gQblcfSzZBQsYCCV())
  {
    PHDcW8();
    CFRelease(0);
  }
  if (!PairingSessionCreate())
  {
    PairingSessionSetKeychainInfo();
    PairingSessionDeletePeer();
    CFRelease(0);
  }
}

void sysInfo_updatePINInternal(uint64_t a1, int a2)
{
  int v4 = *(NSObject **)(a1 + 552);
  if (v4)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 552));
    dispatch_release(v4);
    *(void *)(a1 + 552) = 0;
  }
  if (*(unsigned char *)(a1 + 480) && (a2 || !*(unsigned char *)(a1 + 225)))
  {
    if (*(unsigned char *)(a1 + 472)) {
      __strlcpy_chk();
    }
    else {
      RandomString();
    }
    sysInfo_handleAuthStringUpdate((unsigned char *)(a1 + 481));
  }
}

void sysInfo_handleAuthStringUpdate(unsigned char *a1)
{
  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 1, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable
      && (!*a1 || !CFDictionarySetCString())
      && !APSXPCClientSendCommandCreatingReply())
    {
      goto LABEL_7;
    }
    APSLogErrorAt();
    if (gLogCategory_APReceiverSystemInfo <= 90
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Mutable)
    {
LABEL_7:
      CFRelease(Mutable);
    }
  }
}

void sysInfo_updateCurrentDisplayInfo(uint64_t a1)
{
  if (!IsAppleTV())
  {
    id v3 = 0;
LABEL_36:
    id v19 = 0;
    goto LABEL_32;
  }
  uint64_t v2 = (void *)[MEMORY[0x263F15778] mainDisplay];
  id v19 = (id)[v2 currentMode];
  id v3 = (id)[v2 uniqueId];
  if (v3)
  {
    *(unsigned char *)(a1 + 680) = [v2 isOverscanned];
    int v4 = *(const void **)(a1 + 584);
    CFRetain(v3);
    *(void *)(a1 + 584) = v3;
    if (v4) {
      CFRelease(v4);
    }
  }
  if (!v19) {
    goto LABEL_36;
  }
  int v5 = [v19 width];
  int v6 = [v19 height];
  [v19 refreshRate];
  double v8 = v7;
  if (v5 >= 1920 && v6 >= 1080)
  {
    *(double *)(a1 + 592) = (double)v5;
    *(double *)(a1 + 600) = (double)v6;
    int v9 = *(const void **)(a1 + 648);
    int v10 = (const void *)[v19 hdrMode];
    int v11 = v10;
    if (v10) {
      CFRetain(v10);
    }
    *(void *)(a1 + 648) = v11;
    if (v9) {
      CFRelease(v9);
    }
    int v12 = *(const void **)(a1 + 664);
    int v13 = (const void *)[v19 colorMode];
    int v14 = v13;
    if (v13) {
      CFRetain(v13);
    }
    *(void *)(a1 + 664) = v14;
    if (v12) {
      CFRelease(v12);
    }
    int v15 = *(const void **)(a1 + 656);
    int v16 = (const void *)[v19 colorGamut];
    CFTypeRef v17 = v16;
    if (v16) {
      CFRetain(v16);
    }
    *(void *)(a1 + 656) = v17;
    if (v15) {
      CFRelease(v15);
    }
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (v8 > 0.0)
  {
    int v18 = v8 <= 30.0 ? 30 : 60;
    *(_DWORD *)(a1 + 672) = v18;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
LABEL_32:
}

uint64_t __APReceiverSystemInfoGetDeviceName_block_invoke(uint64_t a1)
{
  uint64_t result = sysInfo_getDeviceNameInternal(*(void *)(a1 + 40), *(char **)(a1 + 48), *(void *)(a1 + 56));
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

uint64_t APReceiverSystemInfoCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  uint64_t v15 = 0;
  int v16 = &v15;
  uint64_t v17 = 0x2020000000;
  int v18 = 0;
  uint64_t v11 = 0;
  int v12 = &v11;
  uint64_t v13 = 0x2020000000;
  uint64_t v14 = 0;
  if (a1 && a3)
  {
    int v6 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APReceiverSystemInfoCopyProperty_block_invoke;
    block[3] = &unk_2648953D0;
    block[6] = a1;
    block[7] = a3;
    block[8] = a4;
    block[4] = &v15;
    void block[5] = &v11;
    dispatch_sync(v6, block);
    int v7 = *((_DWORD *)v16 + 6);
    if (v7 != -72025 && v7) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    *((_DWORD *)v16 + 6) = -72021;
  }
  if (a5) {
    *a5 = *((_DWORD *)v16 + 6);
  }
  uint64_t v8 = v12[3];
  _Block_object_dispose(&v11, 8);
  _Block_object_dispose(&v15, 8);
  return v8;
}

void sub_22B400390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 48), 8);
  _Unwind_Resume(a1);
}

void __APReceiverSystemInfoCopyProperty_block_invoke(void *a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v2 = (const void *)a1[7];
  CFBooleanRef v3 = (const __CFBoolean *)a1[8];
  uint64_t v4 = a1[6];
  uint64_t v5 = *(void *)(a1[5] + 8);
  int v19 = 0;
  if (gLogCategory_APReceiverSystemInfo <= 30
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(v2, @"AirPlayGroupPublicName"))
  {
    if (*(void *)(v4 + 256))
    {
      int v6 = (__CFString **)(v4 + 288);
      goto LABEL_13;
    }
    if (*(void *)(v4 + 176))
    {
      int v6 = (__CFString **)(v4 + 208);
LABEL_13:
      int v7 = *v6;
      if (!*v6) {
        goto LABEL_40;
      }
      goto LABEL_28;
    }
LABEL_40:
    int v8 = -72025;
    goto LABEL_41;
  }
  if (CFEqual(v2, @"AirPlayGroupID"))
  {
    int v7 = *(__CFString **)(v4 + 144);
    if (!v7)
    {
      APSLogErrorAt();
      int v8 = -72023;
LABEL_41:
      int v19 = v8;
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (CFEqual(v2, @"IsAirPlayGroupLeader"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 153);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"GroupContainsDiscoverableLeader"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 152);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"IsSilentPrimary"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 305);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"ReceiverSessionIsActive"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 225);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"ReceiverDeviceIsPlaying"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 226);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"SystemPairingIdentity"))
  {
    int v7 = *(__CFString **)(v4 + 456);
    if (!v7) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  if (CFEqual(v2, @"LocalRouteInfo"))
  {
    int v7 = *(__CFString **)(v4 + 232);
    if (!v7) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  if (CFEqual(v2, @"TightSyncUUID"))
  {
    int v7 = *(__CFString **)(v4 + 176);
    if (!v7) {
      goto LABEL_40;
    }
LABEL_28:
    uint64_t v11 = (__CFString *)CFRetain(v7);
LABEL_29:
    int Int64 = v11;
LABEL_30:
    *(void *)(v5 + 24) = Int64;
    int v19 = 0;
    goto LABEL_31;
  }
  if (CFEqual(v2, @"IsTightSyncGroupLeader"))
  {
    if (!*(void *)(v4 + 176) || !*(unsigned char *)(v4 + 184))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB38];
      goto LABEL_27;
    }
LABEL_45:
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
LABEL_27:
    int v7 = *v9;
    goto LABEL_28;
  }
  if (CFEqual(v2, @"TightSyncGroupLeaderUUID"))
  {
    int v7 = *(__CFString **)(v4 + 192);
    if (!v7) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  if (CFEqual(v2, @"ClusterUUID"))
  {
    uint64_t v13 = *(__CFString **)(v4 + 176);
    uint64_t v14 = *(__CFString **)(v4 + 256);
LABEL_52:
    if (!((unint64_t)v13 | (unint64_t)v14)) {
      goto LABEL_40;
    }
    if (v14) {
      int v7 = v14;
    }
    else {
      int v7 = v13;
    }
    goto LABEL_28;
  }
  if (CFEqual(v2, @"ClusterType"))
  {
    uint64_t v15 = *(void *)(v4 + 256);
    if (*(void *)(v4 + 176))
    {
      if (!v15)
      {
        int v7 = @"ClusterType_StereoPair";
        goto LABEL_28;
      }
    }
    else if (!v15)
    {
      goto LABEL_40;
    }
    if (*(_DWORD *)(v4 + 248) == 1) {
      int v7 = @"ClusterType_HT";
    }
    else {
      int v7 = @"ClusterType_Generic";
    }
    goto LABEL_28;
  }
  CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  if (CFEqual(v2, @"ClusterSize"))
  {
    *(_DWORD *)float valuePtr = 0;
    if (*(void *)(v4 + 256))
    {
      *(_DWORD *)float valuePtr = *(void *)(v4 + 240);
    }
    else if (*(void *)(v4 + 176))
    {
      *(_DWORD *)float valuePtr = 2;
    }
    uint64_t v11 = (__CFString *)CFNumberCreate(v16, kCFNumberSInt32Type, valuePtr);
    goto LABEL_29;
  }
  if (CFEqual(v2, @"IsClusterLeader"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 306);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"ClusterLeaderUUID"))
  {
    uint64_t v13 = *(__CFString **)(v4 + 192);
    uint64_t v14 = *(__CFString **)(v4 + 264);
    goto LABEL_52;
  }
  if (CFEqual(v2, @"ParentGroupID"))
  {
    int v7 = *(__CFString **)(v4 + 160);
    if (!v7) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  if (CFEqual(v2, @"ParentGroupContainsDiscoverableLeader"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 168);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"ParentGroupLeaderSupportsRelay"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 169);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"AccessControlType"))
  {
    int Int64 = (__CFString *)CFNumberCreateInt64();
    if (Int64) {
      goto LABEL_30;
    }
LABEL_86:
    APSLogErrorAt();
    int v8 = -72020;
    goto LABEL_41;
  }
  if (CFEqual(v2, @"AccessControlLevelHK"))
  {
    int Int64 = (__CFString *)CFNumberCreate(v16, kCFNumberIntType, (const void *)(v4 + 320));
    if (Int64) {
      goto LABEL_30;
    }
    goto LABEL_86;
  }
  if (CFEqual(v2, @"EnableHKAccessControl"))
  {
    int v9 = (__CFString **)MEMORY[0x263EFFB40];
    int v10 = *(unsigned __int8 *)(v4 + 310);
    goto LABEL_25;
  }
  if (CFEqual(v2, @"BluetoothAddress"))
  {
    int v7 = *(__CFString **)(v4 + 720);
    if (!v7) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  if (!CFEqual(v2, @"Passcode"))
  {
    if (CFEqual(v2, @"Password"))
    {
      int Int64 = (__CFString *)CFStringCreateWithCString(v16, (const char *)(v4 + 481), 0x8000100u);
      if (Int64) {
        goto LABEL_30;
      }
      goto LABEL_86;
    }
    if (CFEqual(v2, @"SecurityMode"))
    {
      int Int64 = (__CFString *)CFNumberCreate(v16, kCFNumberSInt32Type, (const void *)(v4 + 428));
      if (Int64) {
        goto LABEL_30;
      }
      goto LABEL_86;
    }
    if (CFEqual(v2, @"IsPINRequiredForPairing"))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB40];
      int v10 = *(unsigned __int8 *)(v4 + 433);
      goto LABEL_25;
    }
    if (CFEqual(v2, @"IsPairingRequiredForAllClients"))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB40];
      int v10 = *(unsigned __int8 *)(v4 + 432);
      goto LABEL_25;
    }
    if (CFEqual(v2, @"IsPINRequiredForEverySession"))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB40];
      int v10 = *(unsigned __int8 *)(v4 + 480);
      goto LABEL_25;
    }
    if (CFEqual(v2, @"IsP2PAllowed"))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB40];
      int v10 = *(unsigned __int8 *)(v4 + 408);
      goto LABEL_25;
    }
    if (CFEqual(v2, @"RestrictToInfraAdvertising"))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB40];
      int v10 = *(unsigned __int8 *)(v4 + 409);
      goto LABEL_25;
    }
    if (CFEqual(v2, @"IsPairingRequiredForP2PClients"))
    {
      int v9 = (__CFString **)MEMORY[0x263EFFB40];
      int v10 = *(unsigned __int8 *)(v4 + 410);
      goto LABEL_25;
    }
    if (CFEqual(v2, @"VolumeDB"))
    {
      int Int64 = (__CFString *)CFNumberCreate(v16, kCFNumberFloat32Type, (const void *)(v4 + 688));
      if (Int64) {
        goto LABEL_30;
      }
      goto LABEL_86;
    }
    if (CFEqual(v2, @"VolumeControlType"))
    {
      int v7 = *(__CFString **)(v4 + 696);
      if (v7) {
        goto LABEL_28;
      }
    }
    else
    {
      if (!CFEqual(v2, @"VolumeControlTypeEx"))
      {
        if (CFEqual(v2, @"IsMuted"))
        {
          int v9 = (__CFString **)MEMORY[0x263EFFB40];
          int v10 = *(unsigned __int8 *)(v4 + 713);
        }
        else if (CFEqual(v2, @"SupportRelativeVolumeTesting"))
        {
          int v9 = (__CFString **)MEMORY[0x263EFFB40];
          int v10 = *(unsigned __int8 *)(v4 + 712);
        }
        else
        {
          if (CFEqual(v2, @"audioJackStatus"))
          {
            int v7 = @"connected";
            goto LABEL_28;
          }
          if (CFEqual(v2, @"skewCompensation")) {
            goto LABEL_45;
          }
          if (CFEqual(v2, @"AdvertiserInfo"))
          {
            int v7 = *(__CFString **)(v4 + 56);
            if (v7) {
              goto LABEL_28;
            }
            goto LABEL_126;
          }
          if (CFEqual(v2, @"IsAirPlayEnabled"))
          {
            int v9 = (__CFString **)MEMORY[0x263EFFB40];
            int v10 = *(unsigned __int8 *)(v4 + 64);
          }
          else
          {
            if (CFEqual(v2, @"DenyInterruptions"))
            {
              int v7 = *(__CFString **)(v4 + 88);
              if (v7) {
                goto LABEL_28;
              }
              int v9 = (__CFString **)MEMORY[0x263EFFB40];
              int v10 = *(unsigned __int8 *)(v4 + 80);
              goto LABEL_25;
            }
            if (CFEqual(v2, @"OverscanOverride"))
            {
              int Int64 = (__CFString *)CFNumberCreate(v16, kCFNumberIntType, (const void *)(v4 + 676));
              if (Int64) {
                goto LABEL_30;
              }
              goto LABEL_86;
            }
            if (CFEqual(v2, @"DisplayUUID"))
            {
              int Int64 = @"e5f7a68d-7b0f-4305-984b-974f677a150b";
              CFRetain(@"e5f7a68d-7b0f-4305-984b-974f677a150b");
              int v19 = 0;
              goto LABEL_30;
            }
            if (CFEqual(v2, @"TimeoutDataSeconds"))
            {
              int Int64 = (__CFString *)CFNumberCreate(v16, kCFNumberIntType, (const void *)(v4 + 564));
              if (Int64) {
                goto LABEL_30;
              }
              goto LABEL_86;
            }
            if (!CFEqual(v2, @"QoSDisabled"))
            {
              if (CFEqual(v2, @"DeviceID"))
              {
                HardwareAddressToCString();
                uint64_t v11 = (__CFString *)CFStringCreateWithCString(v16, valuePtr, 0x8000100u);
                goto LABEL_29;
              }
              if (gLogCategory_APReceiverSystemInfo <= 50
                && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              goto LABEL_126;
            }
            int v9 = (__CFString **)MEMORY[0x263EFFB40];
            int v10 = *(unsigned __int8 *)(v4 + 560);
          }
        }
LABEL_25:
        if (!v10) {
          int v9 = (__CFString **)MEMORY[0x263EFFB38];
        }
        goto LABEL_27;
      }
      int v7 = *(__CFString **)(v4 + 704);
      if (v7) {
        goto LABEL_28;
      }
    }
LABEL_126:
    int Int64 = 0;
    goto LABEL_30;
  }
  if (v3 && (CFTypeID v17 = CFGetTypeID(v3), v17 == CFBooleanGetTypeID())) {
    int Value = CFBooleanGetValue(v3);
  }
  else {
    int Value = 1;
  }
  int Int64 = (__CFString *)sysInfo_copyPasscodeString(v4, Value, v16, &v19);
  if (!v19) {
    goto LABEL_30;
  }
  APSLogErrorAt();
  if (Int64) {
    CFRelease(Int64);
  }
LABEL_31:
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = v19;
}

CFStringRef sysInfo_copyPasscodeString(uint64_t a1, int a2, CFAllocatorRef alloc, int *a4)
{
  if (a2 && *(unsigned char *)(a1 + 481))
  {
    int v7 = (const char *)(a1 + 481);
  }
  else
  {
    sysInfo_updatePairPINIfNeeded(a1);
    int v7 = (const char *)(a1 + 434);
  }
  CFStringRef v8 = CFStringCreateWithCString(alloc, v7, 0x8000100u);
  if (!v8)
  {
    APSLogErrorAt();
    int v9 = -72020;
    if (!a4) {
      return v8;
    }
    goto LABEL_7;
  }
  int v9 = 0;
  if (a4) {
LABEL_7:
  }
    *a4 = v9;
  return v8;
}

void sysInfo_updatePairPINIfNeeded(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 434) || (mach_absolute_time(), (unint64_t)UpTicksToSeconds() >= 0x1F))
  {
    if (*(unsigned char *)(a1 + 472)) {
      __strlcpy_chk();
    }
    else {
      RandomString();
    }
    __strlcpy_chk();
    *(void *)(a1 + 448) = mach_absolute_time();
    if (*(unsigned char *)(a1 + 480)) {
      __strlcpy_chk();
    }
    sysInfo_handleAuthStringUpdate(v2);
  }
}

uint64_t APReceiverSystemInfoSetProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = 0;
  int v10 = &v9;
  uint64_t v11 = 0x2020000000;
  int v12 = 0;
  if (a1 && a3)
  {
    uint64_t v5 = *(NSObject **)(a1 + 16);
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __APReceiverSystemInfoSetProperty_block_invoke;
    v8[3] = &unk_264895E68;
    v8[4] = &v9;
    v8[5] = a1;
    v8[6] = a3;
    v8[7] = a5;
    dispatch_sync(v5, v8);
    uint64_t v6 = *((unsigned int *)v10 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v6 = 4294895275;
    *((_DWORD *)v10 + 6) = -72021;
  }
  _Block_object_dispose(&v9, 8);
  return v6;
}

void sub_22B40103C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void __APReceiverSystemInfoSetProperty_block_invoke(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = (__CFString *)a1[6];
  CFStringRef v4 = (const __CFString *)a1[7];
  if (gLogCategory_APReceiverSystemInfo <= 30
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(v3, @"Passcode"))
  {
    if (!v4)
    {
      LODWORD(v5) = 0;
      *(unsigned char *)(v2 + 434) = 0;
      goto LABEL_28;
    }
    LODWORD(v5) = -72021;
LABEL_110:
    APSLogErrorAt();
    goto LABEL_28;
  }
  if (!CFEqual(v3, @"Password"))
  {
    if (CFEqual(v3, @"DeviceName"))
    {
      if (v4)
      {
        size.width = 0.0;
        LODWORD(v5) = CFStringCopyUTF8CString();
        if (!v5)
        {
          CUSetSystemName();
          sysInfo_setDeviceName(v2);
          free(*(void **)&size.width);
          goto LABEL_28;
        }
        goto LABEL_110;
      }
      goto LABEL_101;
    }
    if (CFEqual(v3, @"VolumeDB"))
    {
      if (!v4 || (CFTypeID v7 = CFGetTypeID(v4), v7 != CFNumberGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      if (gLogCategory_APReceiverSystemInfo <= 40
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFGetDouble();
      LODWORD(v5) = 0;
      *(float *)&double v11 = v11;
      *(_DWORD *)(v2 + 688) = LODWORD(v11);
      goto LABEL_28;
    }
    if (CFEqual(v3, @"IsMuted"))
    {
      if (!v4 || (CFTypeID v8 = CFGetTypeID(v4), v8 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      if (gLogCategory_APReceiverSystemInfo <= 40
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      LODWORD(v5) = 0;
      *(unsigned char *)(v2 + 713) = *MEMORY[0x263EFFB40] == (void)v4;
      goto LABEL_28;
    }
    if (CFEqual(v3, @"DenyInterruptions"))
    {
      if (v4)
      {
        CFTypeID v9 = CFGetTypeID(v4);
        if (v9 != CFBooleanGetTypeID())
        {
          LODWORD(v5) = -72021;
          goto LABEL_110;
        }
      }
      if (!FigCFEqual())
      {
        int v10 = *(const void **)(v2 + 88);
        *(void *)(v2 + 88) = v4;
        if (v4) {
          CFRetain(v4);
        }
        if (v10) {
          CFRelease(v10);
        }
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterPostNotification();
      }
      goto LABEL_101;
    }
    if (CFEqual(v3, @"SupportsSenderUIEvents"))
    {
      if (!v4 || (CFTypeID v12 = CFGetTypeID(v4), v12 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int Value = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 683) != Value)
      {
        char v14 = Value;
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        LODWORD(v5) = 0;
        *(unsigned char *)(v2 + 683) = v14;
        goto LABEL_28;
      }
      goto LABEL_101;
    }
    if (v3 == @"VolumeControlTypeEx" || v3 && CFEqual(v3, @"VolumeControlTypeEx"))
    {
      if (!v4 || (CFTypeID v15 = CFGetTypeID(v4), v15 != CFNumberGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      CFStringRef v16 = *(const __CFString **)(v2 + 704);
      if (v16 == v4 || v16 && CFEqual(v16, v4)) {
        goto LABEL_101;
      }
      FigCFNumberGetSInt32();
      APSVolumeControlTypeFromEx();
      SInt32 = (const void *)FigCFNumberCreateSInt32();
      if (!SInt32)
      {
        APSLogErrorAt();
        LODWORD(v5) = -6728;
        goto LABEL_28;
      }
      int v18 = SInt32;
      int v19 = *(const void **)(v2 + 696);
      *(void *)(v2 + 696) = SInt32;
      CFRetain(SInt32);
      if (v19) {
        CFRelease(v19);
      }
      uint64_t v20 = *(const void **)(v2 + 704);
      *(void *)(v2 + 704) = v4;
      CFRetain(v4);
      if (v20) {
        CFRelease(v20);
      }
LABEL_69:
      CFRelease(v18);
      goto LABEL_100;
    }
    if (CFEqual(v3, @"ReceiverDeviceIsPlaying"))
    {
      if (!v4 || (CFTypeID v21 = CFGetTypeID(v4), v21 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int v22 = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 226) == v22) {
        goto LABEL_101;
      }
      char v23 = v22;
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v2 + 226) = v23;
LABEL_100:
      sysInfo_updateAdvertiserInfoAndNotify(v2, @"AdvertisingParameterChanged");
      goto LABEL_101;
    }
    if (CFEqual(v3, @"ReceiverSessionIsActive"))
    {
      if (!v4 || (CFTypeID v24 = CFGetTypeID(v4), v24 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int v25 = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 225) == v25) {
        goto LABEL_101;
      }
      int v26 = v25;
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v2 + 225) = v26;
      if (!*(unsigned char *)(v2 + 130)) {
        sysInfo_updateNonMRSourcedSilentPrimaryStatusIfNeeded(v2);
      }
      sysInfo_updateAPGroupInfo(v2);
      if (*(unsigned char *)(v2 + 480))
      {
        CFArrayRef v33 = *(NSObject **)(v2 + 552);
        if (v26)
        {
          if (v33)
          {
            dispatch_source_cancel(*(dispatch_source_t *)(v2 + 552));
            dispatch_release(v33);
            *(void *)(v2 + 552) = 0;
          }
        }
        else
        {
          if (v33)
          {
            dispatch_source_cancel(*(dispatch_source_t *)(v2 + 552));
            dispatch_release(v33);
            *(void *)(v2 + 552) = 0;
          }
          dispatch_source_t v34 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(v2 + 16));
          *(void *)(v2 + 552) = v34;
          if (v34)
          {
            CFRetain((CFTypeRef)v2);
            dispatch_set_context(*(dispatch_object_t *)(v2 + 552), (void *)v2);
            dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v2 + 552), (dispatch_function_t)sysInfo_updatePINTimerFired);
            dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(v2 + 552), (dispatch_function_t)sysInfo_updatePINTimerCanceled);
            int v35 = *(NSObject **)(v2 + 552);
            dispatch_time_t v36 = dispatch_time(0, 30000000000);
            dispatch_source_set_timer(v35, v36, 0x7FFFFFFFFFFFFFFFuLL, 0x3B9ACA00uLL);
            dispatch_resume(*(dispatch_object_t *)(v2 + 552));
          }
          else
          {
            APSLogErrorAt();
          }
        }
      }
      goto LABEL_100;
    }
    if (CFEqual(v3, @"SecondHopEligibleSenderSessionIsActive"))
    {
      if (!v4 || (CFTypeID v27 = CFGetTypeID(v4), v27 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int v28 = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 224) == v28) {
        goto LABEL_101;
      }
      char v29 = v28;
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v2 + 224) = v29;
      goto LABEL_131;
    }
    if (CFEqual(v3, @"UsePTPClock"))
    {
      if (!v4 || (CFTypeID v30 = CFGetTypeID(v4), v30 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int v31 = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 311) == v31) {
        goto LABEL_101;
      }
      char v32 = v31;
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v2 + 311) = v32;
      goto LABEL_100;
    }
    if (CFEqual(v3, @"CanRecordScreenStream"))
    {
      if (!v4 || (CFTypeID v37 = CFGetTypeID(v4), v37 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int v38 = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 681) != v38)
      {
        char v39 = v38;
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        LODWORD(v5) = 0;
        *(unsigned char *)(v2 + 681) = v39;
        goto LABEL_28;
      }
      goto LABEL_101;
    }
    if (CFEqual(v3, @"ScreenDemoMode"))
    {
      if (!v4 || (CFTypeID v40 = CFGetTypeID(v4), v40 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      int v41 = CFBooleanGetValue((CFBooleanRef)v4);
      if (*(unsigned __int8 *)(v2 + 682) == v41) {
        goto LABEL_101;
      }
      char v42 = v41;
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v2 + 682) = v42;
      goto LABEL_100;
    }
    if (CFEqual(v3, @"DisplaySizeOverride"))
    {
      CGSize size = (CGSize)*MEMORY[0x263F001B0];
      if (v4)
      {
        CFTypeID v43 = CFGetTypeID(v4);
        if (v43 == CFDictionaryGetTypeID() && CGSizeMakeWithDictionaryRepresentation((CFDictionaryRef)v4, &size))
        {
          if (size.width == *(double *)(v2 + 608) && size.height == *(double *)(v2 + 616)) {
            goto LABEL_101;
          }
          int v44 = (CGSize *)(v2 + 608);
          if (gLogCategory_APReceiverSystemInfo > 50
            || gLogCategory_APReceiverSystemInfo == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_189;
          }
LABEL_163:
          LogPrintF();
LABEL_189:
          *int v44 = size;
          goto LABEL_101;
        }
      }
      goto LABEL_249;
    }
    if (CFEqual(v3, @"DisplaySizeMaxOverride"))
    {
      CGSize size = (CGSize)*MEMORY[0x263F001B0];
      if (v4)
      {
        CFTypeID v45 = CFGetTypeID(v4);
        if (v45 == CFDictionaryGetTypeID() && CGSizeMakeWithDictionaryRepresentation((CFDictionaryRef)v4, &size))
        {
          if (size.width == *(double *)(v2 + 624) && size.height == *(double *)(v2 + 632)) {
            goto LABEL_101;
          }
          int v44 = (CGSize *)(v2 + 624);
          if (gLogCategory_APReceiverSystemInfo > 50
            || gLogCategory_APReceiverSystemInfo == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_189;
          }
          goto LABEL_163;
        }
      }
LABEL_249:
      APSLogErrorAt();
      LODWORD(v5) = -72021;
      goto LABEL_28;
    }
    if (CFEqual(v3, @"DisplayHDRModeOverride"))
    {
      if (v4)
      {
        CFTypeID v46 = CFGetTypeID(v4);
        if (v46 != CFStringGetTypeID())
        {
          LODWORD(v5) = -72021;
          goto LABEL_110;
        }
      }
      if (!FigCFEqual())
      {
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v5 = *(const void **)(v2 + 640);
        *(void *)(v2 + 640) = v4;
        if (v4) {
          CFRetain(v4);
        }
        if (!v5) {
          goto LABEL_28;
        }
        CFRelease(v5);
      }
      goto LABEL_101;
    }
    if (CFEqual(v3, @"RoutingContextID"))
    {
      if (!v4 || (CFTypeID v47 = CFGetTypeID(v4), v47 != CFStringGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      if (*(unsigned char *)(v2 + 130))
      {
        if (FigCFEqual()) {
          goto LABEL_101;
        }
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        int v56 = *(const void **)(v2 + 136);
        *(void *)(v2 + 136) = v4;
        CFRetain(v4);
        if (v56) {
          CFRelease(v56);
        }
LABEL_131:
        sysInfo_updateAPGroupInfo(v2);
        goto LABEL_100;
      }
LABEL_256:
      APSLogErrorAt();
      LODWORD(v5) = -72023;
      goto LABEL_28;
    }
    if (CFEqual(v3, @"IsSilentPrimary"))
    {
      if (!v4 || (CFTypeID v48 = CFGetTypeID(v4), v48 != CFBooleanGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      if (*(unsigned char *)(v2 + 130))
      {
        int v49 = CFBooleanGetValue((CFBooleanRef)v4);
        if (v49 == *(unsigned __int8 *)(v2 + 305)) {
          goto LABEL_101;
        }
        char v50 = v49;
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(unsigned char *)(v2 + 305) = v50;
        goto LABEL_100;
      }
      goto LABEL_256;
    }
    if (!CFEqual(v3, @"IsClusterLeader"))
    {
      if (!CFEqual(v3, @"audioCapabilities"))
      {
        LODWORD(v5) = -72022;
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_28;
      }
      if (!v4 || (CFTypeID v55 = CFGetTypeID(v4), v55 != CFDictionaryGetTypeID()))
      {
        LODWORD(v5) = -72021;
        goto LABEL_110;
      }
      if (!FigCFEqual())
      {
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        int v18 = *(const void **)(v2 + 72);
        *(void *)(v2 + 72) = v4;
        CFRetain(v4);
        if (!v18) {
          goto LABEL_100;
        }
        goto LABEL_69;
      }
LABEL_101:
      LODWORD(v5) = 0;
      goto LABEL_28;
    }
    if (!v4 || (CFTypeID v51 = CFGetTypeID(v4), v51 != CFBooleanGetTypeID()))
    {
      LODWORD(v5) = -72021;
      goto LABEL_110;
    }
    if (!*(void *)(v2 + 176) || *(_DWORD *)(v2 + 248))
    {
      if (*(void *)(v2 + 256))
      {
        int v52 = *(_DWORD *)(v2 + 248);
        if (!v52) {
          goto LABEL_207;
        }
        if (v52 == 1)
        {
          LODWORD(v5) = -72021;
          goto LABEL_110;
        }
      }
      APSLogErrorAt();
      LODWORD(v5) = -72025;
      goto LABEL_28;
    }
LABEL_207:
    int v53 = CFBooleanGetValue((CFBooleanRef)v4);
    if (v53 == *(unsigned __int8 *)(v2 + 306)) {
      goto LABEL_101;
    }
    int v54 = v53;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(v2 + 306) = v54;
    APSSettingsSetValue();
    if (v54)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
    }
    goto LABEL_100;
  }
  if (!v4)
  {
    LODWORD(v5) = -72021;
    goto LABEL_110;
  }
  if (!CFStringGetCString(v4, (char *)(v2 + 481), 64, 0x8000100u))
  {
    LODWORD(v5) = -72021;
    goto LABEL_110;
  }
  if (*(unsigned char *)(v2 + 480))
  {
    LODWORD(v5) = 0;
    int v6 = 3;
  }
  else if (*(unsigned char *)(v2 + 481))
  {
    LODWORD(v5) = 0;
    int v6 = 2;
  }
  else
  {
    if (!*(unsigned char *)(v2 + 433))
    {
      LODWORD(v5) = 0;
      *(_DWORD *)(v2 + 428) = 0;
      goto LABEL_28;
    }
    LODWORD(v5) = 0;
    int v6 = 1;
  }
  *(_DWORD *)(v2 + 428) = v6;
LABEL_28:
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = v5;
}

void sysInfo_updateNonMRSourcedSilentPrimaryStatusIfNeeded(uint64_t a1)
{
  int v5 = *(void *)(a1 + 232)
    && ((Int64 = CFDictionaryGetInt64(), v3 = CFDictionaryGetInt64(), !Int64) ? (BOOL v4 = v3 == 0) : (BOOL v4 = 1), !v4)
    && *(unsigned char *)(a1 + 225) == 0;
  if (*(unsigned __int8 *)(a1 + 305) != v5)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 305) = v5;
    sysInfo_updateAdvertiserInfoAndNotify(a1, @"AdvertisingParameterChanged");
    if (*(unsigned char *)(a1 + 305) && *(void *)(a1 + 176) && !*(unsigned char *)(a1 + 129))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      notify_post("kAirPlayWHANotification_InterruptedByPreWHASender");
    }
  }
}

void sysInfo_updatePINTimerFired(uint64_t a1)
{
}

uint64_t APReceiverSystemInfoCopyInfoDict(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = 0;
  CFTypeID v9 = &v8;
  uint64_t v10 = 0x2020000000;
  int v11 = 0;
  if (a1 && a4)
  {
    BOOL v4 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APReceiverSystemInfoCopyInfoDict_block_invoke;
    block[3] = &unk_2648953F8;
    block[4] = &v8;
    void block[5] = a1;
    block[6] = a2;
    block[7] = a3;
    block[8] = a4;
    dispatch_sync(v4, block);
    uint64_t v5 = *((unsigned int *)v9 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v5 = 4294895275;
    *((_DWORD *)v9 + 6) = -72021;
  }
  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_22B402740(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t __APReceiverSystemInfoCopyInfoDict_block_invoke(uint64_t a1)
{
  uint64_t result = sysInfo_copyInfoDictInternal(*(void *)(a1 + 40), *(const __CFArray **)(a1 + 48), *(CFAllocatorRef *)(a1 + 56), *(__CFDictionary ***)(a1 + 64));
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

uint64_t APReceiverSystemInfoAllowsP2PConnectionFromMACAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  CFTypeID v7 = &v6;
  uint64_t v8 = 0x2020000000;
  char v9 = 1;
  uint64_t v2 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APReceiverSystemInfoAllowsP2PConnectionFromMACAddress_block_invoke;
  block[3] = &unk_264895EB8;
  block[4] = &v6;
  void block[5] = a1;
  block[6] = a2;
  dispatch_sync(v2, block);
  uint64_t v3 = *((unsigned __int8 *)v7 + 24);
  _Block_object_dispose(&v6, 8);
  return v3;
}

void __APReceiverSystemInfoAllowsP2PConnectionFromMACAddress_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 40);
  long long v7 = 0u;
  long long v8 = 0u;
  *(_OWORD *)cStr = 0u;
  long long v6 = 0u;
  if (*(void *)(v2 + 416))
  {
    HardwareAddressToCString();
    CFStringRef v3 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], cStr, 0x8000100u);
    cStr[0] = 0;
    char v4 = 1;
    if (CFStringCompare(*(CFStringRef *)(v2 + 416), v3, 1uLL))
    {
      if (gLogCategory_APReceiverSystemInfo <= 90
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      char v4 = 0;
    }
    if (v3) {
      CFRelease(v3);
    }
  }
  else
  {
    char v4 = 1;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v4;
}

uint64_t __APReceiverSystemInfoCopyFeatures_block_invoke(uint64_t a1)
{
  uint64_t result = sysInfo_createFeaturesInternal(*(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void APReceiverSystemInfoEnsurePIN(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APReceiverSystemInfoEnsurePIN_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v1, block);
}

void __APReceiverSystemInfoEnsurePIN_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 481)) {
    sysInfo_updatePairPINIfNeeded(v1);
  }
}

uint64_t __APReceiverSystemInfoGetDisplaySizeForUserVersion_block_invoke(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 48);
  if (v1 < 1)
  {
    double v2 = 1280.0;
    double v3 = 720.0;
  }
  else if (v1 == 1)
  {
    double v2 = 1920.0;
    double v3 = 1080.0;
  }
  else
  {
    uint64_t v4 = *(void *)(result + 40);
    double v2 = *(double *)(v4 + 592);
    double v3 = *(double *)(v4 + 600);
    if (v2 == *MEMORY[0x263F001B0] && v3 == *(double *)(MEMORY[0x263F001B0] + 8))
    {
      double v3 = 1080.0;
      double v2 = 1920.0;
    }
  }
  uint64_t v5 = *(void *)(*(void *)(result + 32) + 8);
  *(double *)(v5 + 32) = v2;
  *(double *)(v5 + 40) = v3;
  return result;
}

uint64_t APReceiverSystemInfoCopyDisplaysInfoForUserVersion(uint64_t a1, const __CFAllocator *a2, int a3, __CFArray **a4)
{
  if (!a4)
  {
    uint64_t v24 = 4294895275;
    APSLogErrorAt();
    return v24;
  }
  CFMutableArrayRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895276;
  }
  uint64_t v9 = Mutable;
  uint64_t v52 = 0;
  int v53 = &v52;
  uint64_t v54 = 0x2020000000;
  uint64_t v55 = 0;
  uint64_t v48 = 0;
  int v49 = &v48;
  uint64_t v50 = 0x2020000000;
  uint64_t v51 = 0;
  uint64_t v42 = 0;
  CFTypeID v43 = (float64x2_t *)&v42;
  uint64_t v44 = 0x3010000000;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  CFTypeID v45 = &unk_22B4C7D61;
  uint64_t v36 = 0;
  CFTypeID v37 = (float64x2_t *)&v36;
  uint64_t v38 = 0x3010000000;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  char v39 = &unk_22B4C7D61;
  v34[0] = 0;
  v34[1] = v34;
  v34[2] = 0x2020000000;
  int v35 = 60;
  uint64_t v30 = 0;
  int v31 = &v30;
  uint64_t v32 = 0x2020000000;
  int v33 = 0;
  uint64_t v10 = *(NSObject **)(a1 + 576);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __sysInfo_copyMainDisplayInfo_block_invoke;
  block[3] = &unk_2648954C8;
  void block[9] = &v30;
  block[10] = a1;
  int v29 = a3;
  block[4] = &v42;
  void block[5] = &v36;
  block[6] = &v52;
  void block[7] = &v48;
  block[8] = v34;
  dispatch_sync(v10, block);
  double v12 = *MEMORY[0x263F001B0];
  double v11 = *(double *)(MEMORY[0x263F001B0] + 8);
  if (v37[2].f64[0] == *MEMORY[0x263F001B0] && v37[2].f64[1] == v11) {
    v37[2] = v43[2];
  }
  uint64_t v13 = CFDictionaryCreateMutable(a2, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (v13)
  {
    if (*(double *)(a1 + 608) != v12 || *(double *)(a1 + 616) != v11)
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v43[2] = *(float64x2_t *)(a1 + 608);
    }
    if (*(double *)(a1 + 624) == v12 && *(double *)(a1 + 632) == v11)
    {
      char v14 = v37;
    }
    else
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      char v14 = v37;
      v37[2] = *(float64x2_t *)(a1 + 624);
    }
    v43[2] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v14[2], v43[2]), (int8x16_t)v43[2], (int8x16_t)v14[2]);
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (v53[3])
    {
      CFTypeID v15 = (const void *)CopyEDIDbyUUID();
      if (v15)
      {
        CFDictionarySetValue(v13, @"edid", v15);
        CFRelease(v15);
      }
    }
    CFStringRef v16 = (const void *)v53[3];
    if (v16) {
      CFRelease(v16);
    }
    CFRetain(@"e5f7a68d-7b0f-4305-984b-974f677a150b");
    v53[3] = @"e5f7a68d-7b0f-4305-984b-974f677a150b";
    CFDictionarySetValue(v13, @"uuid", @"e5f7a68d-7b0f-4305-984b-974f677a150b");
    int v17 = *(_DWORD *)(a1 + 676);
    if (v17 < 0) {
      int v17 = *((_DWORD *)v31 + 6);
    }
    *((_DWORD *)v31 + 6) = v17;
    int v18 = (const void *)*MEMORY[0x263EFFB40];
    int v19 = (const void *)*MEMORY[0x263EFFB38];
    if (v17) {
      uint64_t v20 = (const void *)*MEMORY[0x263EFFB40];
    }
    else {
      uint64_t v20 = (const void *)*MEMORY[0x263EFFB38];
    }
    CFDictionarySetValue(v13, @"overscanned", v20);
    CFDictionarySetInt64();
    CFDictionarySetValue(v13, @"rotation", v18);
    if (APSSettingsGetIntWithDefault()) {
      CFTypeID v21 = v18;
    }
    else {
      CFTypeID v21 = v19;
    }
    CFDictionarySetValue(v13, @"receiverSupports444", v21);
    uint64_t v22 = *(void *)(a1 + 640);
    if (v22)
    {
      v49[3] = v22;
    }
    else if (!v49[3])
    {
      goto LABEL_47;
    }
    char v23 = CFDictionaryCreateMutable(a2, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionarySetValue(v23, (const void *)*MEMORY[0x263F12530], (const void *)v49[3]);
    CFDictionarySetValue(v13, @"HDRInfo", v23);
    CFRelease(v23);
LABEL_47:
    if (gLogCategory_APReceiverSystemInfo <= 30
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v24 = 0;
    goto LABEL_52;
  }
  APSLogErrorAt();
  uint64_t v24 = 4294960568;
LABEL_52:
  int v25 = (const void *)v53[3];
  if (v25) {
    CFRelease(v25);
  }
  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(v34, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&v42, 8);
  _Block_object_dispose(&v48, 8);
  _Block_object_dispose(&v52, 8);
  if (v13)
  {
    CFArrayAppendValue(v9, v13);
    *a4 = v9;
    int v26 = v13;
  }
  else
  {
    APSLogErrorAt();
    int v26 = v9;
  }
  CFRelease(v26);
  return v24;
}

void sub_22B4031FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 208), 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

CFTypeRef __sysInfo_copyMainDisplayInfo_block_invoke(uint64_t a1)
{
  sysInfo_updateCurrentDisplayInfo(*(void *)(a1 + 80));
  uint64_t v2 = *(void *)(a1 + 80);
  int v3 = *(_DWORD *)(a1 + 88);
  if (v3 < 1)
  {
    double v4 = 1280.0;
    double v5 = 720.0;
  }
  else if (v3 == 1)
  {
    double v4 = 1920.0;
    double v5 = 1080.0;
  }
  else
  {
    double v4 = *(double *)(v2 + 592);
    double v5 = *(double *)(v2 + 600);
    if (v4 == *MEMORY[0x263F001B0] && v5 == *(double *)(MEMORY[0x263F001B0] + 8))
    {
      double v5 = 1080.0;
      double v4 = 1920.0;
    }
  }
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  *(double *)(v6 + 32) = v4;
  *(double *)(v6 + 40) = v5;
  *(_OWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = *(_OWORD *)(v2 + 592);
  CFTypeRef result = *(CFTypeRef *)(*(void *)(a1 + 80) + 584);
  if (result) {
    CFTypeRef result = CFRetain(result);
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result;
  long long v8 = *(const void **)(*(void *)(a1 + 80) + 648);
  if (v8)
  {
    CFTypeRef result = (CFTypeRef)CFEqual(v8, (CFTypeRef)*MEMORY[0x263F15A38]);
    if (result)
    {
      uint64_t v9 = *MEMORY[0x263F12520];
    }
    else
    {
      CFTypeRef result = (CFTypeRef)CFEqual(v8, (CFTypeRef)*MEMORY[0x263F15A30]);
      uint64_t v9 = *MEMORY[0x263F12518];
      if (!result) {
        uint64_t v9 = 0;
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v9;
  uint64_t v10 = *(void *)(a1 + 80);
  *(_DWORD *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = *(_DWORD *)(v10 + 672);
  *(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = *(unsigned __int8 *)(v10 + 680);
  return result;
}

void APReceiverSystemInfoClearVideoCache()
{
  memset(&v4, 0, sizeof(v4));
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  if ([(NSArray *)v0 count])
  {
    int v1 = (const char *)objc_msgSend((id)objc_msgSend(-[NSArray objectAtIndex:](v0, "objectAtIndex:", 0), "stringByAppendingPathComponent:", @"AppleTV/Video/LocalAndRental/CachedMedia*"), "UTF8String");
    if (v1)
    {
      if (!glob(v1, 0, 0, &v4))
      {
        if (v4.gl_pathc)
        {
          size_t v3 = 0;
          do
          {
            if (gLogCategory_APReceiverSystemInfo <= 50
              && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (remove((const std::__fs::filesystem::path *)v4.gl_pathv[v3], v2)
              && gLogCategory_APReceiverSystemInfo <= 50
              && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            ++v3;
          }
          while (v3 < v4.gl_pathc);
        }
        globfree(&v4);
      }
    }
  }
}

void __APReceiverSystemInfoSetParentGroupInfo_block_invoke(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  glob_t v4 = *(const void **)(v3 + 160);
  if (v2) {
    CFRetain(*(CFTypeRef *)(a1 + 40));
  }
  *(void *)(v3 + 160) = v2;
  if (v4) {
    CFRelease(v4);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  *(unsigned char *)(v5 + 168) = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(v5 + 169) = *(unsigned char *)(a1 + 49);
  sysInfo_updateAPGroupInfo(v5);
  uint64_t v6 = *(void *)(a1 + 32);

  sysInfo_updateAdvertiserInfoAndNotify(v6, @"AdvertisingParameterChanged");
}

void __APReceiverSystemInfoResetParentGroupInfo_block_invoke(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 160))
  {
    CFRelease(*(CFTypeRef *)(v2 + 160));
    *(void *)(*(void *)(a1 + 32) + 160) = 0;
    uint64_t v2 = *(void *)(a1 + 32);
  }
  *(_WORD *)(v2 + 168) = 0;
  sysInfo_updateAPGroupInfo(v2);
  uint64_t v3 = *(void *)(a1 + 32);

  sysInfo_updateAdvertiserInfoAndNotify(v3, @"AdvertisingParameterChanged");
}

void APReceiverSystemInfoHandleAPServicesReset(void *a1)
{
  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    CFRetain(a1);
    uint64_t v2 = a1[2];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __APReceiverSystemInfoHandleAPServicesReset_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = a1;
    dispatch_async(v2, block);
  }
}

void __APReceiverSystemInfoHandleAPServicesReset_block_invoke(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  CFStringRef v2 = sysInfo_copyPasscodeString(*(void *)(a1 + 32), 1, (CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  CFStringRef v3 = v2;
  if (v2)
  {
    if (CFStringGetCString(v2, buffer, 64, 0x8000100u))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      sysInfo_handleAuthStringUpdate(buffer);
    }
    else if (gLogCategory_APReceiverSystemInfo <= 90 {
           && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  sysInfo_handleInfoDictUpdate(*(void *)(a1 + 32));
  sysInfo_handleLocalSenderStateChanged(*(void *)(a1 + 32), 0);
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APSXPCClientSendCommandCreatingReply()
    && gLogCategory_APReceiverSystemInfo <= 90
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v3) {
    CFRelease(v3);
  }
  CFRelease(*(CFTypeRef *)(a1 + 32));
}

void sysInfo_handleLocalSenderStateChanged(uint64_t a1, const void *a2)
{
  if (a2)
  {
    CFStringGetTypeID();
    Typedint Value = (const void *)CFDictionaryGetTypedValue();
    int v5 = CFDictionaryGetInt64() != 0;
    uint64_t Int64 = CFDictionaryGetInt64();
  }
  else
  {
    int v5 = 0;
    Typedint Value = 0;
    uint64_t Int64 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 232);
  if (v7)
  {
    CFStringGetTypeID();
    long long v8 = (const void *)CFDictionaryGetTypedValue();
    int v9 = CFDictionaryGetInt64() != 0;
    uint64_t v7 = CFDictionaryGetInt64();
  }
  else
  {
    int v9 = 0;
    long long v8 = 0;
  }
  if (v8 == TypedValue)
  {
    BOOL v10 = 0;
  }
  else
  {
    BOOL v10 = 1;
    if (v8 && TypedValue) {
      BOOL v10 = CFEqual(v8, TypedValue) == 0;
    }
  }
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  double v11 = *(const void **)(a1 + 232);
  *(void *)(a1 + 232) = a2;
  if (a2) {
    CFRetain(a2);
  }
  if (v11) {
    CFRelease(v11);
  }
  if (v9 != v5 || v7 != Int64)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  if (!*(unsigned char *)(a1 + 130))
  {
    sysInfo_updateNonMRSourcedSilentPrimaryStatusIfNeeded(a1);
    if (*(unsigned char *)(a1 + 129))
    {
      if (v10)
      {
        sysInfo_updateAPGroupInfo(a1);
        sysInfo_updateAdvertiserInfoAndNotify(a1, @"AdvertisingParameterChanged");
      }
    }
  }
}

void __APReceiverSystemInfoHandleLocalSenderStateChanged_block_invoke(uint64_t a1)
{
  sysInfo_handleLocalSenderStateChanged(*(void *)(a1 + 32), *(const void **)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 40));
  CFStringRef v2 = *(const void **)(a1 + 32);

  CFRelease(v2);
}

void rcsMediaRemote_handleMediaDataControlFailure(uint64_t a1, int a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a3);
  uint64_t v6 = *(NSObject **)(DerivedStorage + 80);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __rcsMediaRemote_handleMediaDataControlFailure_block_invoke;
  block[3] = &__block_descriptor_tmp_35;
  block[4] = a3;
  int v8 = a2;
  dispatch_async(v6, block);
}

void __rcsMediaRemote_handleMediaDataControlFailure_block_invoke(uint64_t a1)
{
  rcsMediaRemote_callDelegateHandleFailed(*(void *)(a1 + 32), *(unsigned int *)(a1 + 40));
  CFStringRef v2 = *(const void **)(a1 + 32);

  CFRelease(v2);
}

void rcsMediaRemote_callDelegateHandleFailed(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 56)) {
    return;
  }
  uint64_t v5 = DerivedStorage;
  if (*(void *)(DerivedStorage + 64))
  {
    uint64_t v6 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (!v6)
    {
      if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
        && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  (*(void (**)(const void *, uint64_t, uint64_t))(v5 + 56))(v6, a1, a2);
  if (v6)
  {
    CFRelease(v6);
  }
}

uint64_t rcsMediaRemote_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 30
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  if (v13)
  {
    int v14 = v13(a6, a5);
    if (!v14) {
      goto LABEL_16;
    }
  }
  else
  {
    int v14 = -12782;
  }
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_16:

  return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v14);
}

uint64_t rcsMediaRemote_sendDataCallback(uint64_t a1, const __CFData *a2, uint64_t a3)
{
  if (!a2) {
    return 0;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFMutableDictionaryRef v7 = Mutable;
  CFMutableDictionaryRef v8 = CFDictionaryCreateMutable(v5, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!v8)
  {
    APSLogErrorAt();
    CFRelease(v7);
    return 4294960568;
  }
  int v9 = v8;
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(a2);
    LogPrintF();
  }
  CFDictionarySetValue(v9, @"data", a2);
  CFDictionarySetValue(v7, @"params", v9);
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef))(v11 + 24);
  if (!v12)
  {
    uint64_t v13 = 4294954514;
LABEL_15:
    APSLogErrorAt();
    goto LABEL_16;
  }
  uint64_t v13 = v12(a3, v7);
  if (v13) {
    goto LABEL_15;
  }
LABEL_16:
  CFRelease(v7);
  CFRelease(v9);
  return v13;
}

uint64_t rcsMediaRemote_HandleOutgoingMessage(const void *a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (!*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v12 = 4294960587;
    goto LABEL_12;
  }
  uint64_t v5 = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(v5 + 96))
  {
    APSLogErrorAt();
    goto LABEL_17;
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 + 48);
  if (v7)
  {
    if (!*(void *)(v5 + 64))
    {
      int v9 = 0;
LABEL_9:
      CFRetain(a1);
      CFRetain(a2);
      uint64_t v11 = *(NSObject **)(v6 + 80);
      v15[0] = MEMORY[0x263EF8330];
      v15[1] = 0x40000000;
      v15[2] = __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke;
      v15[3] = &__block_descriptor_tmp_27;
      v15[4] = a1;
      v15[5] = a2;
      v15[6] = v7;
      v15[7] = v9;
      dispatch_async(v11, v15);
      if (v9) {
        CFRelease(v9);
      }
      goto LABEL_11;
    }
    CFMutableDictionaryRef v8 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (v8)
    {
      int v9 = v8;
      CFRetain(v8);
      goto LABEL_9;
    }
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
      && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_17:
    uint64_t v12 = 4294960587;
    APSLogErrorAt();
    goto LABEL_12;
  }
  CFRetain(a1);
  CFRetain(a2);
  uint64_t v10 = *(NSObject **)(v6 + 80);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke_2;
  block[3] = &__block_descriptor_tmp_28;
  block[4] = a1;
  void block[5] = a2;
  dispatch_async(v10, block);
LABEL_11:
  uint64_t v12 = 0;
LABEL_12:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return v12;
}

void __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke_2(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 40
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v5 = *(void **)(DerivedStorage + 88);
  dispatch_time_t v6 = dispatch_time(0, 10000000000);
  uint64_t v7 = APMediaDataControlServerSendRequestSync(v5, v3, v6);
  if (v7)
  {
    uint64_t v9 = v7;
    APSLogErrorAt();
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
      && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    rcsMediaRemote_callDelegateHandleFailed(v2, v9);
  }
  CFRelease(*(CFTypeRef *)(a1 + 32));
  CFMutableDictionaryRef v8 = *(const void **)(a1 + 40);

  CFRelease(v8);
}

void __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke(uint64_t a1)
{
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 40
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  (*(void (**)(void, void, void))(a1 + 48))(*(void *)(a1 + 56), *(void *)(a1 + 32), *(void *)(a1 + 40));
  uint64_t v2 = *(const void **)(a1 + 56);
  if (v2) {
    CFRelease(v2);
  }
  CFRelease(*(CFTypeRef *)(a1 + 32));
  uint64_t v3 = *(const void **)(a1 + 40);

  CFRelease(v3);
}

uint64_t rcsMediaRemote_HandleIncomingMessage(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (!*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v10 = 4294960587;
    goto LABEL_10;
  }
  if (!a2)
  {
    APSLogErrorAt();
LABEL_22:
    uint64_t v10 = 4294960591;
    goto LABEL_10;
  }
  CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(a2, @"params");
  if (!Value)
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote > 90
      || gLogCategory_APReceiverRemoteControlSessionMediaRemote == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_22;
    }
LABEL_18:
    LogPrintF();
    goto LABEL_22;
  }
  CFDataRef v5 = (const __CFData *)CFDictionaryGetValue(Value, @"data");
  if (!v5)
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote > 90
      || gLogCategory_APReceiverRemoteControlSessionMediaRemote == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  CFDataRef v6 = v5;
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(v6);
    LogPrintF();
  }
  CFTypeRef v7 = CFRetain(*(CFTypeRef *)(DerivedStorage + 32));
  CFTypeRef v8 = CFRetain(*(CFTypeRef *)(DerivedStorage + 24));
  CFRetain(v6);
  uint64_t v9 = *(NSObject **)(DerivedStorage + 72);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __rcsMediaRemote_HandleIncomingMessage_block_invoke;
  block[3] = &__block_descriptor_tmp_2301;
  block[4] = v7;
  void block[5] = v6;
  void block[6] = v8;
  dispatch_async(v9, block);
  uint64_t v10 = 0;
LABEL_10:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return v10;
}

uint64_t rcsMediaRemote_Start()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (*(unsigned char *)(DerivedStorage + 97) || *(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v2 = 4294960587;
LABEL_9:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
    rcsMediaRemote_stop();
    return v2;
  }
  uint64_t v1 = *(void *)(DerivedStorage + 88);
  if (v1)
  {
    uint64_t v4 = *(void *)(DerivedStorage + 88);
    uint64_t v5 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v4, (dispatch_function_t)controlServer_startInternal);
    uint64_t v2 = v5;
    if (v5)
    {
      APSLogErrorAt();
      goto LABEL_9;
    }
  }
  *(unsigned char *)(DerivedStorage + 96) = 1;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return 0;
}

void rcsMediaRemote_stop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(void *)(DerivedStorage + 88);
  if (v1)
  {
    v2[0] = *(void *)(DerivedStorage + 88);
    v2[1] = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), v2, (dispatch_function_t)controlServer_stopInternal);
  }
}

uint64_t CMBaseObjectNotificationBarrier(uint64_t a1)
{
  uint64_t v2 = *(void **)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (*v3 < 2uLL) {
    return 4294954514;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t))v3[8];
  if (!v4) {
    return 4294954514;
  }

  return v4(a1);
}

uint64_t rcsMediaRemote_SetProperty(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 0;
  }
  APSLogErrorAt();
  return 4294960591;
}

uint64_t rcsMediaRemote_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (!a2 || !a4)
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960591;
    goto LABEL_7;
  }
  if (CFEqual(a2, @"RRCS::Property::SessionID"))
  {
    uint64_t SInt32 = (uint64_t)CFRetain(*(CFTypeRef *)(DerivedStorage + 16));
  }
  else
  {
    if (!CFEqual(a2, @"RRCS::Property::ListenPort"))
    {
      uint64_t v8 = 4294960569;
      goto LABEL_7;
    }
    if (!*(void *)(DerivedStorage + 88))
    {
      uint64_t SInt32 = 0;
      uint64_t v8 = 4294960561;
      goto LABEL_6;
    }
    uint64_t SInt32 = FigCFNumberCreateSInt32();
    if (!SInt32)
    {
      APSLogErrorAt();
      uint64_t v8 = 4294960568;
      goto LABEL_7;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  *a4 = SInt32;
LABEL_7:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return v8;
}

uint64_t rcsMediaRemote_CopyDebugDescription()
{
  return CFStringCreateF();
}

uint64_t rcsMediaRemote_Finalize()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = result;
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50)
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
      || (uint64_t result = _LogCategory_Initialize(), result))
    {
      uint64_t result = LogPrintF();
    }
  }
  if (*(unsigned char *)(v1 + 97))
  {
    uint64_t v2 = *(const void **)(v1 + 16);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(v1 + 16) = 0;
    }
    uint64_t v3 = *(const void **)(v1 + 24);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(v1 + 24) = 0;
    }
    uint64_t v4 = *(const void **)(v1 + 32);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(v1 + 32) = 0;
    }
    uint64_t v5 = *(const void **)(v1 + 64);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(v1 + 64) = 0;
    }
    CFDataRef v6 = *(const void **)(v1 + 88);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(v1 + 88) = 0;
    }
    CFTypeRef v7 = *(NSObject **)(v1 + 72);
    if (v7)
    {
      dispatch_release(v7);
      *(void *)(v1 + 72) = 0;
    }
    uint64_t v8 = *(NSObject **)(v1 + 80);
    if (v8)
    {
      dispatch_release(v8);
      *(void *)(v1 + 80) = 0;
    }
    uint64_t result = FigSimpleMutexDestroy();
    *(void *)(v1 + 104) = 0;
  }
  else
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 100)
    {
      if (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
        || (uint64_t result = _LogCategory_Initialize(), result))
      {
        uint64_t result = LogPrintF();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t rcsMediaRemote_Invalidate()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (*(unsigned char *)(DerivedStorage + 97))
  {
    APSLogErrorAt();
    goto LABEL_19;
  }
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 32);
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
  if (v1
    && gAPReceiverMediaRemoteService_1
    && CFDictionaryContainsKey((CFDictionaryRef)gAPReceiverMediaRemoteService_1, v1)
    && (CFDictionaryRef Value = (CFTypeRef *)CFDictionaryGetValue((CFDictionaryRef)gAPReceiverMediaRemoteService_1, v1)) != 0)
  {
    uint64_t v3 = Value;
    CFRelease(*Value);
    CFTypeRef v4 = v3[2];
    if (v4) {
      CFRelease(v4);
    }
    free(v3);
    CFDictionaryRemoveValue((CFMutableDictionaryRef)gAPReceiverMediaRemoteService_1, v1);
    APReceiverMediaRemoteXPCService_PostEvent(@"didCloseCommChannel", v1, 0);
    if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
      && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
  }
  pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
  if (!*(unsigned char *)(DerivedStorage + 96))
  {
    *(unsigned char *)(DerivedStorage + 97) = 1;
LABEL_19:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
    return 0;
  }
  *(_WORD *)(DerivedStorage + 96) = 256;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  rcsMediaRemote_stop();
  return 0;
}

uint64_t AirPlayReceiverServerGetTypeID()
{
  if (gAirPlayReceiverServerInitOnce != -1) {
    dispatch_once_f(&gAirPlayReceiverServerInitOnce, 0, (dispatch_function_t)_GetTypeID);
  }
  return gAirPlayReceiverServerTypeID;
}

uint64_t _GetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAirPlayReceiverServerCFTypeID TypeID = result;
  return result;
}

void _Finalize(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (IsAppleInternalBuild())
  {
    DebugIPC_EnsureFinalized();
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  int v2 = *(_DWORD *)(a1 + 32);
  if (v2 != -1)
  {
    notify_cancel(v2);
    *(_DWORD *)(a1 + 32) = -1;
  }
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  if (APSIsAPMSpeaker())
  {
    CMNotificationCenterRemoveListener();
    CMNotificationCenterRemoveListener();
  }
  _StopServers(a1);
  AirPlayReceiverServerPlatformFinalize(*(void *)(a1 + 16));
  uint64_t v3 = *(const void **)(a1 + 216);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 216) = 0;
  }
  CFTypeRef v4 = *(const void **)(a1 + 160);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 160) = 0;
  }
  uint64_t v5 = *(const void **)(a1 + 256);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 256) = 0;
  }
  CFDataRef v6 = *(const void **)(a1 + 224);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 224) = 0;
  }
  CFTypeRef v7 = *(NSObject **)(a1 + 56);
  if (v7)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 56));
    dispatch_release(v7);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v8 = *(NSObject **)(a1 + 24);
  if (v8)
  {
    dispatch_release(v8);
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v9 = *(NSObject **)(a1 + 88);
  if (v9)
  {
    dispatch_release(v9);
    *(void *)(a1 + 88) = 0;
  }
  uint64_t v10 = *(const void **)(a1 + 176);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(a1 + 176) = 0;
  }
  uint64_t v11 = *(const void **)(a1 + 184);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(a1 + 184) = 0;
  }
  uint64_t v12 = *(const void **)(a1 + 72);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(a1 + 72) = 0;
  }
  gAirPlayReceiverServer = 0;
}

void _StopServers(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 132))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2)
    {
      uint64_t v3 = *(NSObject **)(v2 + 16);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = __APAdvertiserStop_block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0l;
      block[4] = v2;
      dispatch_sync(v3, block);
      APAdvertiserInvalidate(*(void *)(a1 + 40));
      CFTypeRef v4 = *(const void **)(a1 + 40);
      if (v4)
      {
        CFRelease(v4);
        *(void *)(a1 + 40) = 0;
      }
    }
    if (gAirTunesDACPClient)
    {
      AirTunesDACPClient_Delete((char *)gAirTunesDACPClient);
      gAirTunesDACPClient = 0;
    }
    uint64_t v5 = *(const void **)(a1 + 192);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(a1 + 192) = 0;
    }
    if (*(void *)(a1 + 80))
    {
      CFObjectSetProperty();
      CFRelease(*(CFTypeRef *)(a1 + 80));
      *(void *)(a1 + 80) = 0;
    }
    if (*(void *)(a1 + 96))
    {
      CFObjectSetProperty();
      CFRelease(*(CFTypeRef *)(a1 + 96));
      *(void *)(a1 + 96) = 0;
    }
    CFDataRef v6 = *(const void **)(a1 + 72);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 72) = 0;
    }
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(a1 + 132) = 0;
  }
}

void _HandleSystemInfoNotification(int a1, void *a2, CFTypeRef cf1)
{
  if (CFEqual(cf1, @"AdvertisingDeviceSettingChanged"))
  {
    CFRetain(a2);
    uint64_t v5 = a2[3];
    CFDataRef v6 = (void (__cdecl *)(void *))_HandleAdvertisingDeviceSettingChanged;
  }
  else
  {
    if (CFEqual(cf1, @"AdvertisingParameterChanged"))
    {
      BOOL v7 = CFDictionaryGetInt64() == 0;
      CFRetain(a2);
      uint64_t v8 = a2[3];
      v9[0] = MEMORY[0x263EF8330];
      v9[1] = 3221225472;
      v9[2] = ___HandleSystemInfoNotification_block_invoke;
      v9[3] = &__block_descriptor_41_e5_v8__0l;
      v9[4] = a2;
      BOOL v10 = v7;
      dispatch_async(v8, v9);
      return;
    }
    if (CFEqual(cf1, @"EnableAirPlayStatusChanged"))
    {
      CFRetain(a2);
      uint64_t v5 = a2[3];
      CFDataRef v6 = (void (__cdecl *)(void *))_HandleEnableAirPlayStatusChanged;
    }
    else if (CFEqual(cf1, @"DenyInterruptionsStatusChanged"))
    {
      CFRetain(a2);
      uint64_t v5 = MEMORY[0x263EF83A0];
      CFDataRef v6 = (void (__cdecl *)(void *))_HandleDenyInterruptionsStatusChanged;
    }
    else if (CFEqual(cf1, @"SimulateUserStop"))
    {
      CFRetain(a2);
      uint64_t v5 = a2[3];
      CFDataRef v6 = (void (__cdecl *)(void *))_HandleSimulateUserStop;
    }
    else if (CFEqual(cf1, @"P2PSettingChanged"))
    {
      CFRetain(a2);
      uint64_t v5 = a2[3];
      CFDataRef v6 = (void (__cdecl *)(void *))_HandleP2PSettingChanged;
    }
    else if (CFEqual(cf1, @"TightSyncBuddyBecameReachable"))
    {
      CFRetain(a2);
      uint64_t v5 = a2[11];
      CFDataRef v6 = (void (__cdecl *)(void *))_HandleTightSyncBuddyBecameReachable;
    }
    else
    {
      if (!CFEqual(cf1, @"PersistentConnectionConfigChanged")) {
        return;
      }
      CFRetain(a2);
      uint64_t v5 = a2[11];
      CFDataRef v6 = (void (__cdecl *)(void *))_HandlePersistentConnectionConfigChanged;
    }
  }

  dispatch_async_f(v5, a2, v6);
}

void _HandlePersistentConnectionConfigChanged(void *cf)
{
  uint64_t v2 = cf[27];
  uint64_t v3 = *(const void **)(v2 + 48);
  if (v3)
  {
    CFRetain(*(CFTypeRef *)(v2 + 48));
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverServerCloseConnection((uint64_t)cf, (uint64_t)v3);
    CFRelease(v3);
  }

  CFRelease(cf);
}

void AirPlayReceiverServerCloseConnection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (a1)
  {
    if (a2)
    {
      uint64_t HTTPConnectionForSession = _FindHTTPConnectionForSession(a1, a2, &v4);
      if (HTTPConnectionForSession)
      {
        uint64_t v3 = HTTPConnectionForSession;
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _DestroyHTTPConnection(v4, v3);
      }
    }
  }
}

uint64_t _FindHTTPConnectionForSession(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 80);
  if (v4)
  {
    uint64_t result = *(void *)(v4 + 56);
    if (result)
    {
      while (*(void *)(*(void *)(result + 40) + 280) != a2)
      {
        uint64_t result = *(void *)(result + 16);
        if (!result) {
          goto LABEL_5;
        }
      }
      goto LABEL_10;
    }
  }
LABEL_5:
  uint64_t v4 = *(void *)(a1 + 96);
  if (!v4) {
    return 0;
  }
  uint64_t result = *(void *)(v4 + 56);
  if (result)
  {
    while (*(void *)(*(void *)(result + 40) + 280) != a2)
    {
      uint64_t result = *(void *)(result + 16);
      if (!result) {
        return result;
      }
    }
LABEL_10:
    if (a3) {
      *a3 = v4;
    }
  }
  return result;
}

void _DestroyHTTPConnection(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = (uint64_t *)(a1 + 56);
    uint64_t v2 = *(void *)(a1 + 56);
    if (v2)
    {
      do
      {
        if (v2 == a2)
        {
          *uint64_t v3 = *(void *)(a2 + 16);
          _DestroyConnection((unsigned char *)a2);
        }
        else
        {
          uint64_t v3 = (uint64_t *)(v2 + 16);
        }
        uint64_t v2 = *v3;
      }
      while (*v3);
    }
  }
}

void _DestroyConnection(unsigned char *a1)
{
  HTTPConnectionStop();
  if (a1[229]
    && gLogCategory_AirPlayReceiverServer <= 40
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }

  CFRelease(a1);
}

void _HandleTightSyncBuddyBecameReachable(uint64_t *a1)
{
  CFTypeRef cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1[27], 0, 0, &cf);
  CFTypeRef v2 = cf;
  if (!cf) {
    goto LABEL_13;
  }
  if (!*((unsigned char *)cf + 659) && !*((unsigned char *)cf + 658))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v4 = Mutable;
      CFDictionarySetValue(Mutable, @"type", @"regroupTightSyncBuddy");
      if (gLogCategory_AirPlayReceiverCore <= 50
        && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (!AirPlayReceiverSessionSendCommandForObject((uint64_t)v2, 0, v4, 0, 0))
      {
        CFRelease(v4);
        goto LABEL_11;
      }
      APSLogErrorAt();
      CFRelease(v4);
    }
    else
    {
      APSLogErrorAt();
    }
    APSLogErrorAt();
  }
LABEL_11:
  if (cf) {
    CFRelease(cf);
  }
LABEL_13:
  CFRelease(a1);
}

void _HandleP2PSettingChanged(const void *a1)
{
  _DetermineP2PSettings((uint64_t)a1);
  _ConfigureServersWithP2PSettings((uint64_t)a1);
  _RestartAdvertising((uint64_t)a1);

  CFRelease(a1);
}

uint64_t _DetermineP2PSettings(uint64_t a1)
{
  uint64_t result = APSIsVirtualMachine();
  if (result || *(void *)(a1 + 256) || (uint64_t result = CFObjectGetPropertyInt64Sync()) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
  }
  else
  {
    int v3 = APSIsMemberOfHTGroup();
    if (APSSettingsIsFeatureEnabled()) {
      BOOL v4 = APSIsMemberOfStereoPair() != 0;
    }
    else {
      BOOL v4 = 0;
    }
    *(unsigned char *)(a1 + 48) = CFObjectGetPropertyInt64Sync() != 0;
    *(unsigned char *)(a1 + 49) = (IsAppleTV() | v3) != 0;
    int v5 = APSIsAPMSpeaker();
    BOOL v6 = (v3 | v4) != 0;
    if (!v5) {
      BOOL v6 = 0;
    }
    *(unsigned char *)(a1 + 50) = v6;
    uint64_t result = IsAppleInternalBuild();
    if (result)
    {
      uint64_t result = APSSettingsGetInt64();
      *(unsigned char *)(a1 + 51) = result != 0;
      if (result)
      {
        if (gLogCategory_AirPlayReceiverServer <= 50)
        {
          if (gLogCategory_AirPlayReceiverServer != -1 || (uint64_t result = _LogCategory_Initialize(), result))
          {
            return LogPrintF();
          }
        }
      }
    }
  }
  return result;
}

uint64_t _ConfigureServersWithP2PSettings(uint64_t a1)
{
  if (*(void *)(a1 + 80)) {
    CFObjectSetProperty();
  }
  uint64_t result = *(void *)(a1 + 96);
  if (result)
  {
    return CFObjectSetProperty();
  }
  return result;
}

void _RestartAdvertising(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    if (*(unsigned char *)(a1 + 133))
    {
      if (APAdvertiserFlushBonjourRecords(v2) || _UpdateAdvertiserInfo(a1, v3)) {
        goto LABEL_17;
      }
      if (!*(void *)(a1 + 40)) {
        return;
      }
      P2PConfigDictForAdvertiser = _CreateP2PConfigDictForAdvertiser((unsigned char *)a1);
      if (!P2PConfigDictForAdvertiser)
      {
LABEL_17:
        APSLogErrorAt();
      }
      else
      {
        int v5 = P2PConfigDictForAdvertiser;
        APAdvertiserSetProperty(*(void *)(a1 + 40), @"P2PConfig", (uint64_t)P2PConfigDictForAdvertiser);
        CFRelease(v5);
      }
    }
    else if (gLogCategory_AirPlayReceiverServer <= 50 {
           && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
}

uint64_t _UpdateAdvertiserInfo(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = 0;
  if (*(void *)(a1 + 40))
  {
    uint64_t v3 = (const void *)APReceiverSystemInfoCopyProperty(*(void *)(a1 + 160), a2, @"AdvertiserInfo", 0, &v5);
    if (v5 || (unsigned int v5 = APAdvertiserSetProperty(*(void *)(a1 + 40), @"advertiserInfo", (uint64_t)v3)) != 0)
    {
      APSLogErrorAt();
      if (!v3) {
        return v5;
      }
      goto LABEL_10;
    }
    notify_post("com.apple.airplay.advertisingDidChange");
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
      if (!v3) {
        return v5;
      }
      goto LABEL_10;
    }
    if (v3) {
LABEL_10:
    }
      CFRelease(v3);
  }
  return v5;
}

__CFDictionary *_CreateP2PConfigDictForAdvertiser(unsigned char *a1)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  uint64_t v3 = Mutable;
  BOOL v4 = (const void *)*MEMORY[0x263EFFB40];
  unsigned int v5 = (const void *)*MEMORY[0x263EFFB38];
  if (a1[48]) {
    BOOL v6 = (const void *)*MEMORY[0x263EFFB40];
  }
  else {
    BOOL v6 = (const void *)*MEMORY[0x263EFFB38];
  }
  CFDictionarySetValue(Mutable, @"allowFullBonjourAdvertisingOverAWDL", v6);
  if (a1[49]) {
    BOOL v7 = v4;
  }
  else {
    BOOL v7 = v5;
  }
  CFDictionarySetValue(v3, @"allowPartialBonjourAdvertisingOverAWDL", v7);
  if (a1[51]) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v5;
  }
  CFDictionarySetValue(v3, @"allowFullNANAdvertising", v8);
  if (a1[50]) {
    uint64_t v9 = v4;
  }
  else {
    uint64_t v9 = v5;
  }
  CFDictionarySetValue(v3, @"allowPartialNANAdvertising", v9);
  return v3;
}

void _HandleSimulateUserStop(const void *a1, int a2)
{
  if (AirPlayReceiverServerControl((uint64_t)a1, a2, @"sessionDied", 0, 0, 0))
  {
    APSLogErrorAt();
    if (!a1) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }

  CFRelease(a1);
}

uint64_t AirPlayReceiverServerControl(uint64_t a1, int a2, CFTypeRef cf1, const void *a4, const void *a5, CFTypeRef *a6)
{
  if (CFEqual(cf1, @"sendVolumeUpdate"))
  {
    if (!*(unsigned char *)(a1 + 132)) {
      return 0;
    }
    uint64_t v11 = malloc_type_calloc(1uLL, 0x10uLL, 0x60040FAFB2B2FuLL);
    if (!v11)
    {
      APSLogErrorAt();
      return 4294960568;
    }
    uint64_t v12 = v11;
    void *v11 = a1;
    v11[1] = a5;
    CFRetain((CFTypeRef)a1);
    CFRetain(a5);
    uint64_t v13 = *(NSObject **)(a1 + 88);
    int v14 = (void (__cdecl *)(void *))_HandleVolumeUpdate;
    CFTypeID v15 = v12;
LABEL_5:
    dispatch_async_f(v13, v15, v14);
    return 0;
  }
  if (CFEqual(cf1, @"clearPIN"))
  {
    if (gLogCategory_AirPlayReceiverServer <= 20
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t started = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v17, @"Passcode", v18, 0);
    if (!started) {
      return started;
    }
    goto LABEL_49;
  }
  if (CFEqual(cf1, @"prefsChanged"))
  {
    if (*(unsigned char *)(a1 + 133))
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APSSettingsSynchronize();
      AirPlayReceiverServerPlatformControl(a1, @"updatePrefs", 0, 0);
    }
    return 0;
  }
  if (CFEqual(cf1, @"startServer"))
  {
    *(unsigned char *)(a1 + 133) = 1;
    APSSettingsSynchronize();
    AirPlayReceiverServerPlatformControl(a1, @"updatePrefs", 0, 0);
    _StartOrStopServersIfNeeded(a1);
    return 0;
  }
  if (CFEqual(cf1, @"stopServer"))
  {
    if (*(unsigned char *)(a1 + 133))
    {
      *(unsigned char *)(a1 + 133) = 0;
      _StopServers(a1);
      dispatch_sync(*(dispatch_queue_t *)(a1 + 88), &__block_literal_global_2407);
    }
    return 0;
  }
  if (CFEqual(cf1, @"startAssistedModeAdvertising"))
  {
    if (!*(void *)(a1 + 40)) {
      return 0;
    }
    uint64_t started = _StartAssistedModeAdvertising(a1, (uint64_t)a5, a6);
    if (!started) {
      return started;
    }
LABEL_49:
    APSLogErrorAt();
    return started;
  }
  if (CFEqual(cf1, @"stopAssistedModeAdvertising"))
  {
    if (*(void *)(a1 + 40)) {
      _StopAssistedModeAdvertising(a1);
    }
    return 0;
  }
  if (CFEqual(cf1, @"startedPlayingOverAWDL"))
  {
    ++*(_DWORD *)(a1 + 128);
    uint64_t v20 = *(void *)(a1 + 40);
    if (v20)
    {
      uint64_t v21 = APAdvertiserSetProperty(v20, @"enforceSolo", *MEMORY[0x263EFFB40]);
      if (v21)
      {
        uint64_t started = v21;
        goto LABEL_49;
      }
    }
    if (gLogCategory_AirPlayReceiverServer > 50
      || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
LABEL_38:
    LogPrintF();
    return 0;
  }
  if (CFEqual(cf1, @"stoppedPlayingOverAWDL"))
  {
    int v22 = *(_DWORD *)(a1 + 128) - 1;
    *(_DWORD *)(a1 + 128) = v22;
    if (gLogCategory_AirPlayReceiverServer <= 50)
    {
      if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      int v22 = *(_DWORD *)(a1 + 128);
    }
    if (v22 > 0) {
      return 0;
    }
    *(_DWORD *)(a1 + 128) = 0;
    uint64_t v23 = *(void *)(a1 + 40);
    if (!v23) {
      return 0;
    }
    uint64_t started = APAdvertiserSetProperty(v23, @"enforceSolo", *MEMORY[0x263EFFB38]);
    if (!started) {
      return started;
    }
    goto LABEL_49;
  }
  if (CFEqual(cf1, @"sessionDied"))
  {
    if (a4)
    {
      _RemoveConnectionForSession(a1, (uint64_t)a4);
    }
    else
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _RemoveAllConnectionsOfType(a1);
    }
    return 0;
  }
  if (CFEqual(cf1, @"forceKeyFrame"))
  {
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!IsAppleInternalBuild()) {
      return 0;
    }
    CFRetain((CFTypeRef)a1);
    uint64_t v13 = *(NSObject **)(a1 + 88);
    int v14 = (void (__cdecl *)(void *))_HandleForceKeyFrame;
    CFTypeID v15 = (void *)a1;
    goto LABEL_5;
  }
  if (CFEqual(cf1, @"sendRCSCommand"))
  {
    if (gLogCategory_AirPlayReceiverServer > 50
      || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
    goto LABEL_38;
  }
  if (CFEqual(cf1, @"audioInterruptionBegan")
    || CFEqual(cf1, @"audioInterruptionEnded")
    || CFEqual(cf1, @"otherProcessStartedPlaying")
    || CFEqual(cf1, @"partnerProcessDeath"))
  {
    CFRetain((CFTypeRef)a1);
    CFRetain(cf1);
    if (a4) {
      CFRetain(a4);
    }
    if (a5) {
      CFRetain(a5);
    }
    uint64_t v24 = *(NSObject **)(a1 + 88);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __AirPlayReceiverServerControl_block_invoke_2;
    block[3] = &__block_descriptor_64_e5_v8__0l;
    block[4] = a1;
    void block[5] = cf1;
    void block[6] = a4;
    void block[7] = a5;
    dispatch_async(v24, block);
    return 0;
  }

  return AirPlayReceiverServerPlatformControl(a1, cf1, a4, (const __CFDictionary *)a5);
}

void _StartOrStopServersIfNeeded(uint64_t a1)
{
  if (CFObjectGetPropertyInt64Sync())
  {
    if (*(unsigned char *)(a1 + 132)) {
      return;
    }
    *(void *)(a1 + 80) = _CreateHTTPServerForPort(a1, *(unsigned __int16 *)(a1 + 264));
    if (*(unsigned char *)(a1 + 252)) {
      *(void *)(a1 + 96) = _CreateHTTPServerForPort(a1, 5000);
    }
    if (*(unsigned char *)(a1 + 248)) {
      RemovePath();
    }
    if (!*(unsigned char *)(a1 + 250))
    {
LABEL_16:
      _DetermineP2PSettings(a1);
      _ConfigureServersWithP2PSettings(a1);
      if (!*(void *)(a1 + 72)) {
        APSWiFiTransactionCreate();
      }
      if (*(void *)(a1 + 80))
      {
        CFObjectSetProperty();
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      if (*(unsigned char *)(a1 + 252))
      {
        if (*(void *)(a1 + 96))
        {
          CFObjectSetProperty();
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
      }
      if (*(unsigned char *)(a1 + 253))
      {
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_47;
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFDictionarySetInt64();
      BOOL v6 = *(const void **)(a1 + 256);
      if (v6) {
        CFDictionarySetValue(Mutable, @"interfaceName", v6);
      }
      BOOL v7 = (const void **)MEMORY[0x263EFFB40];
      if (*(unsigned char *)(a1 + 64)) {
        CFDictionarySetValue(Mutable, @"useAltAdvertising", (const void *)*MEMORY[0x263EFFB40]);
      }
      if (*(unsigned char *)(a1 + 52)) {
        CFDictionarySetValue(Mutable, @"useAssistedModeAdvertising", *v7);
      }
      P2PConfigDictForAdvertiser = _CreateP2PConfigDictForAdvertiser((unsigned char *)a1);
      if (!P2PConfigDictForAdvertiser
        || (CFDictionarySetValue(Mutable, @"P2PConfig", P2PConfigDictForAdvertiser),
            CFDictionarySetValue(Mutable, @"systemInfo", *(const void **)(a1 + 160)),
            APAdvertiserCreate(Mutable, (uint64_t *)(a1 + 40)))
        || _UpdateAdvertiserInfo(a1, v9)
        || APAdvertiserStart(*(void *)(a1 + 40)))
      {
        APSLogErrorAt();
        if (!Mutable)
        {
LABEL_45:
          if (P2PConfigDictForAdvertiser) {
            CFRelease(P2PConfigDictForAdvertiser);
          }
LABEL_47:
          APSIntrospectorInit();
          *(unsigned char *)(a1 + 132) = 1;
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return;
        }
      }
      else if (!Mutable)
      {
        goto LABEL_45;
      }
      CFRelease(Mutable);
      goto LABEL_45;
    }
    uint64_t v2 = (char *)malloc_type_calloc(1uLL, 0xA600uLL, 0x10F0040ACF67C9AuLL);
    if (v2)
    {
      uint64_t v3 = v2;
      *(_DWORD *)uint64_t v2 = 1684104048;
      BOOL v4 = v2 + 8;
      if (!pthread_mutex_init((pthread_mutex_t *)(v2 + 8), 0))
      {
        *((void *)v3 + 9) = v4;
        if (!pthread_cond_init((pthread_cond_t *)(v3 + 20), 0))
        {
          *((void *)v3 + 16) = v3 + 20;
          if (!NetSocket_Create()
            && !pthread_create((pthread_t *)v3 + 17, 0, (void *(__cdecl *)(void *))_AirTunesDACPClient_Thread, v3))
          {
            *((void *)v3 + 18) = v3 + 34;
            gAirTunesDACPClient = (uint64_t)v3;
            goto LABEL_14;
          }
        }
      }
      APSLogErrorAt();
      AirTunesDACPClient_Delete((char *)v3);
    }
    else
    {
      APSLogErrorAt();
    }
    uint64_t v3 = (_DWORD *)gAirTunesDACPClient;
    if (!gAirTunesDACPClient)
    {
LABEL_60:
      APSLogErrorAt();
      goto LABEL_16;
    }
LABEL_14:
    if (*v3 == 1684104048)
    {
      *((void *)v3 + 21) = _HandleDACPStatus;
      *((void *)v3 + 22) = a1;
      goto LABEL_16;
    }
    goto LABEL_60;
  }

  _StopServers(a1);
}

uint64_t _StartAssistedModeAdvertising(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!*(unsigned char *)(a1 + 52) || *(void *)(a1 + 56))
  {
    APSLogErrorAt();
    return 4294960587;
  }
  if (!CFDictionaryGetInt64())
  {
    APSLogErrorAt();
    return 4294960591;
  }
  uint64_t v5 = APAdvertiserCopyProperty(*(void *)(a1 + 40), @"assistedModeInfo", a3);
  if (v5)
  {
    uint64_t v13 = v5;
LABEL_16:
    APSLogErrorAt();
    return v13;
  }
  uint64_t v6 = APAdvertiserSetProperty(*(void *)(a1 + 40), @"allowAssistedModeAdvertisingOverAWDL", *MEMORY[0x263EFFB40]);
  if (v6)
  {
    uint64_t v13 = v6;
    goto LABEL_16;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  dispatch_source_t v8 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 24));
  *(void *)(a1 + 56) = v8;
  if (v8)
  {
    CFRetain((CFTypeRef)a1);
    uint64_t v9 = *(NSObject **)(a1 + 56);
    handler[0] = MEMORY[0x263EF8330];
    handler[1] = 3221225472;
    handler[2] = ___StartAssistedModeAdvertising_block_invoke;
    handler[3] = &__block_descriptor_40_e5_v8__0l;
    handler[4] = a1;
    dispatch_source_set_event_handler(v9, handler);
    BOOL v10 = *(NSObject **)(a1 + 56);
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    v15[2] = ___StartAssistedModeAdvertising_block_invoke_2;
    v15[3] = &__block_descriptor_40_e5_v8__0l;
    v15[4] = a1;
    dispatch_source_set_cancel_handler(v10, v15);
    dispatch_resume(*(dispatch_object_t *)(a1 + 56));
    uint64_t v11 = *(NSObject **)(a1 + 56);
    if (Int64) {
      dispatch_time_t v12 = dispatch_time(0, 1000000000 * Int64);
    }
    else {
      dispatch_time_t v12 = -1;
    }
    dispatch_source_set_timer(v11, v12, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

void _StopAssistedModeAdvertising(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    APAdvertiserSetProperty(*(void *)(a1 + 40), @"allowAssistedModeAdvertisingOverAWDL", *MEMORY[0x263EFFB38]);
    uint64_t v2 = *(NSObject **)(a1 + 56);
    if (v2)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 56));
      dispatch_release(v2);
      *(void *)(a1 + 56) = 0;
    }
  }
}

void _RemoveConnectionForSession(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(NSObject **)(a1 + 88);
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = ___RemoveConnectionForSession_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void _RemoveAllConnectionsOfType(uint64_t a1)
{
  _RemoveHTTPServerConnectionsOfType(a1, *(const void **)(a1 + 80));
  uint64_t v2 = *(const void **)(a1 + 96);

  _RemoveHTTPServerConnectionsOfType(a1, v2);
}

void __AirPlayReceiverServerControl_block_invoke_2(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (gLogCategory_AirPlayReceiverServer <= 60
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = APReceiverSessionManagerCopyAllSessions(*(void *)(v2 + 216));
  if (v3)
  {
    BOOL v4 = v3;
    CFArrayGetCount(v3);
    CFArrayApplyBlock();
    CFRelease(v4);
  }
  CFRelease(*(CFTypeRef *)(a1 + 32));
  CFRelease(*(CFTypeRef *)(a1 + 40));
  uint64_t v5 = *(const void **)(a1 + 48);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = *(const void **)(a1 + 56);
  if (v6) {
    CFRelease(v6);
  }
}

void _HandleForceKeyFrame(uint64_t *a1)
{
  CFTypeRef cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1[27], 2, 0, &cf);
  if (!cf) {
    goto LABEL_12;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  CFDictionarySetValue(Mutable, @"type", @"forceKeyFrame");
  if (AirPlayReceiverSessionSendCommandForObject((uint64_t)cf, 0, Mutable, 0, 0))
  {
    APSLogErrorAt();
    if (!Mutable) {
      goto LABEL_10;
    }
LABEL_9:
    CFRelease(Mutable);
    goto LABEL_10;
  }
  if (gLogCategory_AirPlayReceiverServer > 50
    || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
  {
    if (!Mutable) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  LogPrintF();
  if (Mutable) {
    goto LABEL_9;
  }
LABEL_10:
  if (cf) {
    CFRelease(cf);
  }
LABEL_12:
  CFRelease(a1);
}

void _RemoveHTTPServerConnectionsOfType(uint64_t a1, const void *a2)
{
  if (a2)
  {
    BOOL v4 = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
    if (v4)
    {
      uint64_t v5 = v4;
      CFRetain(a2);
      *(void *)uint64_t v5 = a2;
      v5[2] = 1;
      uint64_t v6 = *(NSObject **)(a1 + 88);
      dispatch_sync_f(v6, v5, (dispatch_function_t)_RemoveHTTPServerConnections);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

void _RemoveHTTPServerConnections(_DWORD *a1)
{
  uint64_t v2 = *(uint64_t **)a1;
  if (v2)
  {
    BOOL v4 = v2 + 7;
    uint64_t v3 = v2[7];
    if (v3)
    {
      do
      {
        int v5 = a1[2];
        uint64_t v6 = *(void *)(*(void *)(v3 + 40) + 280);
        if (v6) {
          LODWORD(v6) = CFObjectGetInt64();
        }
        if (v6 == v5)
        {
          *BOOL v4 = *(void *)(v3 + 16);
          _DestroyConnection((unsigned char *)v3);
        }
        else
        {
          BOOL v4 = (uint64_t *)(v3 + 16);
        }
        uint64_t v3 = *v4;
      }
      while (*v4);
      uint64_t v2 = *(uint64_t **)a1;
    }
    CFRelease(v2);
  }

  free(a1);
}

uint64_t APReceiverRequestProcessorCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  dispatch_source_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  if (!v8) {
    return 0;
  }

  return v8(a1, a2, a3);
}

uint64_t _CreateHTTPServerForPort(uint64_t a1, int a2)
{
  if (HTTPServerCreate())
  {
    APSLogErrorAt();
  }
  else
  {
    MEMORY[0xEC] = -a2;
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    HTTPServerSetDispatchQueue();
  }
  return 0;
}

uint64_t _HandleDACPStatus()
{
  return CFObjectControlAsyncF();
}

void _HandleHTTPConnectionCreated(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  *(void *)&v11.sa_len = 0;
  *(void *)&v11.sa_data[6] = 0;
  int v13 = 0;
  uint64_t v12 = 0;
  *(void *)&v8.sa_len = 0;
  *(void *)&v8.sa_data[6] = 0;
  int v10 = 0;
  uint64_t v9 = 0;
  socklen_t v7 = 28;
  getsockname(*(_DWORD *)(a2 + 136), &v11, &v7);
  socklen_t v7 = 28;
  getpeername(*(_DWORD *)(a2 + 136), &v8, &v7);
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *a3 = a4;
  a3[1] = a2;
  a3[2] = 0;
  uint64_t v14 = 0;
  uint64_t v16 = 0;
  uint64_t v20 = 0;
  long long v22 = 0u;
  CFTypeID v15 = a3;
  uint64_t v17 = _HandleHTTPConnectionInitialize;
  uint64_t v18 = _HandleHTTPConnectionFinalize;
  int v19 = _HandleHTTPConnectionClose;
  uint64_t v21 = _HandleHTTPConnectionMessage;
  HTTPConnectionSetDelegate();
  _UpdateIdleTimeoutTimer(a4);
}

void _UpdateIdleTimeoutTimer(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  if (v2 && *(void *)(v2 + 56) || (uint64_t v3 = *(void *)(a1 + 96)) != 0 && *(void *)(v3 + 56))
  {
    if (!*(void *)(a1 + 136))
    {
      dispatch_source_t v4 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 88));
      *(void *)(a1 + 136) = v4;
      if (v4)
      {
        CFRetain((CFTypeRef)a1);
        dispatch_set_context(*(dispatch_object_t *)(a1 + 136), (void *)a1);
        dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 136), (dispatch_function_t)_HandleIdleTimeoutTimerFired);
        dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(a1 + 136), (dispatch_function_t)_HandleIdleTimeoutTimerCanceled);
        int v5 = *(NSObject **)(a1 + 136);
        dispatch_time_t v6 = dispatch_time(0, 90000000000);
        dispatch_source_set_timer(v5, v6, 0x14F46B0400uLL, 0x53D1AC100uLL);
        socklen_t v7 = *(NSObject **)(a1 + 136);
        dispatch_resume(v7);
      }
      else
      {
        APSLogErrorAt();
      }
    }
  }
  else
  {
    sockaddr v8 = *(NSObject **)(a1 + 136);
    if (v8)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
      dispatch_release(v8);
      *(void *)(a1 + 136) = 0;
    }
  }
}

void _HandleIdleTimeoutTimerFired(void *a1)
{
  uint64_t v2 = mach_absolute_time();
  uint64_t v3 = a1[10];
  if (v3) {
    _TimeoutIdleHTTPConnections(v3, a1[19], v2);
  }
  uint64_t v4 = a1[12];
  if (v4)
  {
    unint64_t v5 = a1[19];
    _TimeoutIdleHTTPConnections(v4, v5, v2);
  }
}

void _TimeoutIdleHTTPConnections(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 56);
  while (v3)
  {
    uint64_t v7 = v3;
    uint64_t v3 = *(void *)(v3 + 16);
    if ((!*(void *)(*(void *)(v7 + 40) + 280) || !CFObjectGetInt64()) && a3 - *(void *)(v7 + 408) > a2)
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _DestroyHTTPConnection(a1, v7);
    }
  }
}

uint64_t _HandleHTTPConnectionMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  uint64_t v68 = *(void *)(a1 + 304);
  mach_absolute_time();
  if (!a3)
  {
    APSLogErrorAt();
    return -6705;
  }
  ++*(void *)(a3 + 16);
  int v6 = strnicmp_prefix();
  uint64_t v7 = "RTSP/1.0";
  if (!v6) {
    uint64_t v7 = "HTTP/1.1";
  }
  *(void *)(a1 + 48) = v7;
  sockaddr v8 = &unk_268401000;
  if (strnicmpx() && (strnicmpx() || strnicmp_suffix())
    || gLogCategory_AirPlayReceiverServerHTTP <= 10
    && (gLogCategory_AirPlayReceiverServerHTTP != -1 || _LogCategory_Initialize()))
  {
    LogHTTP();
    char v67 = 0;
  }
  else
  {
    int v9 = IsAppleInternalBuild();
    char v10 = 1;
    char v67 = 1;
    if (!v9) {
      goto LABEL_18;
    }
  }
  if (gLogCategory_AirPlayReceiverServerHTTP <= 50
    && (gLogCategory_AirPlayReceiverServerHTTP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  char v10 = 0;
LABEL_18:
  char v66 = v10;
  HTTPGetHeaderField();
  HTTPScanFHeaderValue();
  uint64_t v11 = *(void *)(a3 + 40);
  if (!v11)
  {
    uint64_t v11 = SockAddrToDeviceID();
    *(void *)(a3 + 40) = v11;
  }
  if (*(void *)(a3 + 280)) {
    goto LABEL_57;
  }
  uint64_t v12 = *(const void **)(a3 + 296);
  uint64_t v14 = *(void *)a3;
  uint64_t v13 = *(void *)(a3 + 8);
  uint64_t v63 = *(void *)(*(void *)a3 + 24);
  int v64 = *(_DWORD *)(v13 + 192);
  uint64_t v15 = *(void *)(*(void *)a3 + 216);
  *(_OWORD *)__s = *(_OWORD *)(v13 + 228);
  *(_OWORD *)&__s[12] = *(_OWORD *)(v13 + 240);
  *(void *)&long long cf = 0;
  uint64_t v65 = v15;
  if (APReceiverRequestProcessorGetClassID_once != -1) {
    dispatch_once(&APReceiverRequestProcessorGetClassID_once, &__block_literal_global_224);
  }
  unsigned int v16 = CMDerivedObjectCreate();
  if (v16)
  {
    APSLogErrorAt();
    sockaddr v8 = (_DWORD *)&unk_268401000;
LABEL_55:
    unsigned int v69 = v16;
    if (v16) {
      goto LABEL_297;
    }
    if (*(void *)(a3 + 280))
    {
LABEL_57:
      if (!*(unsigned char *)(a3 + 48))
      {
        *(void *)&long long cf = 0;
        HTTPGetHeaderField();
      }
      if (!strnicmp_suffix() && IsAppleInternalBuild())
      {
        LODWORD(cf) = 0;
        CFDictionaryGetTypeID();
        CFDictionaryRef v31 = (const __CFDictionary *)CFCreateWithPlistBytes();
        int v32 = gLogCategory_AirPlayReceiverServer;
        uint64_t v30 = v68;
        if (gLogCategory_AirPlayReceiverServer <= 50)
        {
          if (gLogCategory_AirPlayReceiverServer == -1)
          {
            if (!_LogCategory_Initialize()) {
              goto LABEL_166;
            }
            int v32 = gLogCategory_AirPlayReceiverServer;
          }
          if (v32 == -1) {
            _LogCategory_Initialize();
          }
          LogPrintF();
        }
LABEL_166:
        CFDictionaryRef Value = CFDictionaryGetValue(v31, @"controlCommand");
        if (!Value
          || (CFTypeID v45 = CFGetTypeID(Value), v45 != CFStringGetTypeID())
          || (uint64_t v46 = CFDictionaryGetValue(v31, @"controlParams")) != 0
          && (CFTypeID v47 = CFGetTypeID(v46), v47 != CFDictionaryGetTypeID()))
        {
          APSLogErrorAt();
          int v33 = 400;
LABEL_180:
          if (v31) {
            CFRelease(v31);
          }
          if (v33 != 200
            && gLogCategory_AirPlayReceiverServer <= 60
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
LABEL_187:
          CFTypeID v43 = (unsigned __int8 *)(a2 + 24);
          goto LABEL_203;
        }
        if (!*(void *)(a3 + 32) && (LODWORD(cf) = NetPerfCreate(), cf)
          || (LODWORD(cf) = CFObjectControlSync(), cf))
        {
          APSLogErrorAt();
          int v33 = 500;
          goto LABEL_180;
        }
        uint64_t v48 = *(void *)(*(void *)(a3 + 8) + 304);
        if (!*(void *)(v48 + 8216))
        {
          strnicmp_prefix();
          int inited = HTTPHeader_InitResponse();
          if (inited)
          {
            int v50 = inited;
            APSLogErrorAt();
            int v33 = 500;
LABEL_179:
            LODWORD(cf) = v50;
            goto LABEL_180;
          }
          *(void *)(v48 + 8528) = 0;
        }
        int v50 = HTTPMessageSetBody();
        if (v50)
        {
          APSLogErrorAt();
          int v33 = 500;
        }
        else
        {
          int v33 = 200;
        }
        goto LABEL_179;
      }
      if (!strnicmp_suffix() && IsAppleInternalBuild())
      {
        uint64_t v30 = v68;
        unsigned int v69 = HTTPHeader_InitResponse();
        if (v69) {
          goto LABEL_297;
        }
        *(void *)(v68 + 8528) = 0;
        int v33 = _RequestProcessorHandler((void *)a1, a3, a2, a3, v68, 1819240307);
        goto LABEL_187;
      }
      uint64_t Int64 = CFObjectGetInt64();
      if (!Int64)
      {
        BOOL v35 = 1;
        if (!CFObjectGetPropertyInt64Sync()) {
          BOOL v35 = CFObjectGetPropertyInt64Sync() != 0;
        }
        uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
        if (!PropertyInt64Sync || v35)
        {
          if (PropertyInt64Sync) {
            int v39 = 1;
          }
          else {
            int v39 = v35;
          }
          if (v39 != 1) {
            goto LABEL_62;
          }
        }
        else
        {
          int v37 = *(_DWORD *)(*(void *)(a3 + 8) + 192);
          if (v37 != 4 && v37 != 64 && v37 != 128) {
            goto LABEL_62;
          }
        }
        if ((strnicmpx() || strnicmp_suffix())
          && (strnicmpx()
           || strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()))
        {
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *(void *)&long long cf = 0;
          CFTypeID v43 = (unsigned __int8 *)(a2 + 24);
          HTTPGetHeaderField();
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v33 = 403;
          uint64_t v30 = v68;
          goto LABEL_214;
        }
      }
LABEL_62:
      uint64_t v29 = CFObjectGetInt64();
      if (Int64 && v29)
      {
        *(unsigned char *)(a3 + 193) = 1;
        uint64_t v30 = v68;
        goto LABEL_74;
      }
      uint64_t v30 = v68;
      if (*(unsigned char *)(a3 + 193)) {
        goto LABEL_74;
      }
      if (strnicmpx())
      {
        uint64_t v30 = v68;
        if (strnicmpx())
        {
LABEL_129:
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v81 = 0u;
          long long v82 = 0u;
          long long v79 = 0u;
          long long v80 = 0u;
          long long v77 = 0u;
          long long v78 = 0u;
          long long v75 = 0u;
          long long v76 = 0u;
          long long v73 = 0u;
          long long v74 = 0u;
          long long cf = 0u;
          long long v72 = 0u;
          CFObjectGetPropertyCStringSync();
          uint64_t v40 = *(void *)(a3 + 296);
          if (v40)
          {
            uint64_t v41 = *(void *)(CMBaseObjectGetVTable() + 16);
            uint64_t v42 = v41 ? v41 : 0;
            uint64_t v51 = *(void (**)(uint64_t))(v42 + 16);
            if (v51) {
              v51(v40);
            }
          }
          *(unsigned char *)(a3 + 193) = 1;
LABEL_74:
          if (*(unsigned char *)(*(void *)a3 + 250) && CFObjectGetInt64())
          {
            LODWORD(cf) = 0;
            if (HTTPScanFHeaderValue() == 1)
            {
              if (gAirTunesDACPClient && *(_DWORD *)gAirTunesDACPClient == 1684104048) {
                *(void *)(gAirTunesDACPClient + 41456) = 0;
              }
              else {
                APSLogErrorAt();
              }
            }
            if (HTTPScanFHeaderValue() == 1)
            {
              if (gAirTunesDACPClient && *(_DWORD *)gAirTunesDACPClient == 1684104048) {
                *(_DWORD *)(gAirTunesDACPClient + 41464) = cf;
              }
              else {
                APSLogErrorAt();
              }
            }
          }
          unsigned int v69 = HTTPHeader_InitResponse();
          if (v69) {
            goto LABEL_297;
          }
          *(void *)(v30 + 8528) = 0;
          if (strnicmpx())
          {
            if (strnicmpx())
            {
              if (strnicmpx())
              {
                if (strnicmpx())
                {
                  if (strnicmpx())
                  {
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1634624360;
                      goto LABEL_200;
                    }
                    uint64_t v34 = 1937012080;
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1937011316;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1936875892;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1936027749;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1936027768;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1735422573;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1919119972;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1634627171;
                      goto LABEL_200;
                    }
                    if (!strnicmpx())
                    {
                      *(void *)&long long cf = 0;
                      CFTypeID v43 = (unsigned __int8 *)(a2 + 24);
                      HTTPGetHeaderField();
                      uint64_t v30 = v68;
                      if (!strnicmpx() || !strnicmpx()) {
                        goto LABEL_202;
                      }
                      if (URLGetNextPathSegment())
                      {
                        APSLogErrorAt();
                      }
                      else
                      {
                        *(void *)&long long cf = 5;
                        URLGetNextPathSegment();
                        if (!strnicmpx())
                        {
                          uint64_t v34 = 1936942192;
                          goto LABEL_202;
                        }
                      }
                      int v33 = 400;
                      goto LABEL_214;
                    }
                    uint64_t v30 = v68;
                    if (!strnicmpx())
                    {
                      uint64_t v34 = 1952741230;
                      goto LABEL_201;
                    }
                    if (strnicmpx())
                    {
                      if (strnicmpx())
                      {
                        if (!*(unsigned char *)(*(void *)a3 + 248) || strnicmpx())
                        {
                          int v33 = 501;
LABEL_205:
                          CFTypeID v43 = (unsigned __int8 *)(a2 + 24);
                          goto LABEL_214;
                        }
                        if (strnicmp_suffix())
                        {
                          if (strnicmp_suffix())
                          {
                            if (strnicmp_suffix())
                            {
                              if (strnicmp_suffix()) {
                                goto LABEL_310;
                              }
LABEL_326:
                              uint64_t v34 = 1886679924;
                              goto LABEL_200;
                            }
                            uint64_t v34 = 1886611505;
                          }
                          else
                          {
                            uint64_t v34 = 1936748658;
                          }
                        }
                        else
                        {
                          uint64_t v34 = 1886414964;
                        }
                        goto LABEL_200;
                      }
                      if (!strnicmp_suffix())
                      {
                        uint64_t v34 = 1668246893;
                        goto LABEL_201;
                      }
                      if (!strnicmp_suffix())
                      {
                        uint64_t v34 = 1668247142;
                        goto LABEL_200;
                      }
                      if (!strnicmp_suffix())
                      {
                        uint64_t v34 = 1801807216;
                        goto LABEL_200;
                      }
                      if (!strnicmp_suffix())
                      {
                        uint64_t v34 = 1634562925;
                        goto LABEL_200;
                      }
                      if (strnicmp_suffix())
                      {
                        if (!*(unsigned char *)(*(void *)a3 + 248) || strnicmp_suffix())
                        {
                          if (strnicmp_suffix())
                          {
                            if (!strnicmp_suffix())
                            {
                              uint64_t v34 = 1836348024;
                              goto LABEL_200;
                            }
                            if (!strnicmp_suffix())
                            {
                              uint64_t v34 = 1886613612;
                              goto LABEL_200;
                            }
                            if (!strnicmp_suffix())
                            {
                              uint64_t v34 = 1702064240;
                              goto LABEL_200;
                            }
                            if (!strnicmp_suffix())
                            {
                              uint64_t v34 = 1886417780;
                              goto LABEL_200;
                            }
                            if (!strnicmp_suffix())
                            {
                              uint64_t v34 = 1885434725;
                              goto LABEL_200;
                            }
                            if (!strnicmp_suffix())
                            {
                              uint64_t v34 = 1885435493;
                              goto LABEL_200;
                            }
                            if (strnicmp_suffix())
                            {
                              if (strnicmp_suffix())
                              {
                                if (!strnicmp_suffix())
                                {
                                  uint64_t v34 = 1885432944;
                                  goto LABEL_200;
                                }
                                if (!strnicmp_suffix())
                                {
                                  int v33 = 551;
                                  goto LABEL_311;
                                }
                                if (!*(unsigned char *)(*(void *)a3 + 248)) {
                                  goto LABEL_310;
                                }
                                if (!strnicmp_suffix())
                                {
                                  uint64_t v34 = 1633907822;
                                  goto LABEL_200;
                                }
                                if (!strnicmp_suffix())
                                {
                                  uint64_t v34 = 1885435252;
                                  goto LABEL_200;
                                }
                                if (!strnicmp_suffix())
                                {
                                  uint64_t v34 = 1735422066;
                                  goto LABEL_200;
                                }
                                if (!strnicmp_suffix())
                                {
                                  uint64_t v34 = 1886151033;
                                  goto LABEL_200;
                                }
                                if (!strnicmp_suffix())
                                {
                                  uint64_t v34 = 1886545267;
                                  goto LABEL_200;
                                }
                                if (strnicmp_suffix())
                                {
                                  if (strnicmp_suffix())
                                  {
                                    if (!strnicmp_suffix())
                                    {
                                      uint64_t v34 = 1920168547;
                                      goto LABEL_200;
                                    }
                                    if (!strnicmp_suffix())
                                    {
                                      uint64_t v34 = 1920365171;
                                      goto LABEL_200;
                                    }
                                    if (!strnicmp_suffix())
                                    {
                                      uint64_t v34 = 1936941938;
                                      goto LABEL_200;
                                    }
                                    if (!strnicmp_suffix())
                                    {
                                      uint64_t v34 = 1937010544;
                                      goto LABEL_200;
                                    }
                                    if (!strnicmp_suffix()) {
                                      goto LABEL_326;
                                    }
                                    if (!strnicmp_suffix())
                                    {
                                      uint64_t v34 = 1886809964;
                                      goto LABEL_200;
                                    }
                                    goto LABEL_310;
                                  }
                                  unsigned __int16 v62 = 24948;
                                }
                                else
                                {
                                  unsigned __int16 v62 = 29797;
                                }
                                uint64_t v34 = v62 | 0x72610000u;
                                goto LABEL_200;
                              }
                              unsigned __int16 v61 = 29296;
                            }
                            else
                            {
                              unsigned __int16 v61 = 24944;
                            }
                            uint64_t v34 = v61 | 0x70610000u;
                            goto LABEL_200;
                          }
                          goto LABEL_314;
                        }
                        unsigned __int16 v60 = 29490;
                      }
                      else
                      {
                        unsigned __int16 v60 = 12853;
                      }
                      uint64_t v34 = v60 | 0x66700000u;
                      goto LABEL_200;
                    }
                    uint64_t v34 = 1819240307;
                    if (!strnicmp_suffix())
                    {
                      uint64_t v34 = 1819240224;
                      goto LABEL_201;
                    }
                    if (strnicmp_suffix())
                    {
                      if (strnicmp_suffix())
                      {
                        if (*(unsigned char *)(*(void *)a3 + 248))
                        {
                          uint64_t v34 = 1735615346;
                          if (!strnicmp_suffix())
                          {
                            uint64_t v34 = 1735616870;
                            goto LABEL_200;
                          }
                          if (!strnicmp_suffix())
                          {
                            uint64_t v34 = 1735616614;
                            goto LABEL_200;
                          }
                          if (!strnicmp_suffix())
                          {
                            uint64_t v34 = 1735616561;
                            goto LABEL_200;
                          }
                          if (!strnicmp_suffix())
                          {
                            uint64_t v34 = 1886283375;
                            goto LABEL_200;
                          }
                          if (!strnicmp_suffix())
                          {
LABEL_200:
                            uint64_t v30 = v68;
                            goto LABEL_201;
                          }
                          if (!strnicmp_suffix())
                          {
                            uint64_t v34 = 1735222134;
                            goto LABEL_200;
                          }
                          if (!strnicmp_suffix())
                          {
                            uint64_t v34 = 1735684980;
                            goto LABEL_200;
                          }
                        }
LABEL_310:
                        int v33 = 404;
LABEL_311:
                        uint64_t v30 = v68;
                        goto LABEL_205;
                      }
LABEL_314:
                      uint64_t v34 = 1768842863;
                      goto LABEL_200;
                    }
                  }
                  else
                  {
                    uint64_t v34 = 1835100003;
                  }
                }
                else
                {
                  uint64_t v34 = 1718839394;
                }
              }
              else
              {
                uint64_t v34 = 1718383464;
              }
            }
            else
            {
              uint64_t v34 = 1936749165;
            }
          }
          else
          {
            uint64_t v34 = 1869640819;
          }
LABEL_201:
          CFTypeID v43 = (unsigned __int8 *)(a2 + 24);
LABEL_202:
          int v33 = _RequestProcessorHandler((void *)a1, a3, a2, a3, v30, v34);
LABEL_203:
          if (v33 == 200)
          {
            int v33 = 200;
LABEL_216:
            APSVersionUtilsGetShortVersionLength();
            unsigned int v69 = HTTPHeader_SetField();
            if (!v69 && (v33 != 401 || (unsigned int v69 = HTTPMakeTimedNonce()) == 0 && (unsigned int v69 = HTTPHeader_SetField()) == 0))
            {
              mach_absolute_time();
              UpTicksToSecondsF();
              if (v52 > 2.0)
              {
                uint64_t v53 = *(void *)(a2 + 8216);
                if (v53 >= 1)
                {
                  unint64_t v54 = (unint64_t)&v43[v53];
                  uint64_t v55 = v43;
                  do
                  {
                    int v56 = *v55;
                    if (v56 == 10 || v56 == 13) {
                      break;
                    }
                    ++v55;
                  }
                  while ((unint64_t)v55 < v54);
                }
                if (gLogCategory_AirPlayReceiverServer <= 60
                  && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
              }
              if ((v67 & 1) == 0) {
                LogHTTP();
              }
              if ((v66 & 1) == 0)
              {
                int v58 = v8[884];
                if (v58 <= 50 && (v58 != -1 || _LogCategory_Initialize())) {
                  LogPrintF();
                }
              }
              HTTPHeader_SetField();
              UpTicksToMilliseconds();
              HTTPHeader_SetField();
              unsigned int v69 = HTTPConnectionSendResponse();
              if (!v69)
              {
                ++*(void *)(a3 + 24);
                return v69;
              }
            }
LABEL_297:
            APSLogErrorAt();
            return v69;
          }
LABEL_214:
          unsigned int v69 = HTTPHeader_InitResponse();
          if (v69) {
            goto LABEL_297;
          }
          *(void *)(v30 + 8528) = 0;
          unsigned int v69 = HTTPHeader_SetField();
          if (v69) {
            goto LABEL_297;
          }
          goto LABEL_216;
        }
        if (!strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix())
        {
          goto LABEL_74;
        }
      }
      else
      {
        uint64_t v30 = v68;
        if (!strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix()
          || !strnicmp_suffix())
        {
          goto LABEL_74;
        }
      }
      if (!strnicmp_suffix()) {
        goto LABEL_74;
      }
      goto LABEL_129;
    }
    goto LABEL_115;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)(DerivedStorage + 8) = v12;
  *(void *)(DerivedStorage + 16) = a1;
  *(void *)uint64_t DerivedStorage = v14;
  if (v12)
  {
    CFRetain(v12);
    CFStringRef v18 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(a1 + 140), 0x8000100u);
    if (APSIsDirectLinkInterface())
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v19) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 0;
      }
      uint64_t v21 = *(void (**)(const void *, __CFString *, void))(v20 + 56);
      if (v21) {
        v21(v12, @"IsWiredLink", *MEMORY[0x263EFFB40]);
      }
    }
    int v22 = *(_DWORD *)(a1 + 192);
    if (v22 == 4 || v22 == 128 || v22 == 64)
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v23 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v23) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 0;
      }
      int v25 = *(void (**)(const void *, __CFString *, void))(v24 + 56);
      if (v25) {
        v25(v12, @"IsP2PWiFi", *MEMORY[0x263EFFB40]);
      }
    }
  }
  else
  {
    CFStringRef v18 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(a1 + 140), 0x8000100u);
  }
  *(void *)(DerivedStorage + 424) = v63;
  *(_DWORD *)(DerivedStorage + 24) = v64;
  sockaddr v8 = &unk_268401000;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  long long v26 = *(_OWORD *)(a1 + 256);
  *(_OWORD *)(DerivedStorage + 288) = *(_OWORD *)(a1 + 268);
  *(_OWORD *)(DerivedStorage + 304) = *(_OWORD *)__s;
  *(_OWORD *)(DerivedStorage + 276) = v26;
  *(_OWORD *)(DerivedStorage + 316) = *(_OWORD *)&__s[12];
  *(void *)(DerivedStorage + 120) = v11;
  *(void *)(DerivedStorage + 432) = v65;
  uint64_t v27 = cf;
  *(void *)(a3 + 280) = cf;
  *(void *)&long long cf = 0;
  if (v18)
  {
    CFRelease(v18);
    unsigned int v16 = 0;
    goto LABEL_55;
  }
  if (v27) {
    goto LABEL_57;
  }
LABEL_115:
  APSLogErrorAt();
  return -6728;
}

uint64_t _RequestProcessorHandler(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  CFTypeRef cf = 0;
  if (!*(void *)(a2 + 280))
  {
    APSLogErrorAt();
    uint64_t v34 = 400;
    goto LABEL_105;
  }
  int v41 = 0;
  CFDictionaryRef Dictionary = (const __CFDictionary *)HTTPMessageCreateDictionary();
  uint64_t v13 = (const void **)MEMORY[0x263F24AB0];
  MutableCopy = CFDictionaryCreateMutableCopy(0, 0, Dictionary);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    int v19 = -6728;
    int v41 = -6728;
    goto LABEL_45;
  }
  CFDictionarySetData();
  CFDictionarySetCString();
  if ((int)a6 <= 1918989412)
  {
    if (a6 == 1718383464)
    {
      LOWORD(v45) = 0;
      LODWORD(buffer[0]) = 0;
      int v41 = HTTPParseRTPInfo();
      if (!v41)
      {
        CFDictionarySetInt64();
LABEL_43:
        CFDictionarySetInt64();
        goto LABEL_44;
      }
LABEL_142:
      APSLogErrorAt();
      goto LABEL_44;
    }
    if (a6 == 1885435252)
    {
      *(void *)&buffer[0] = 0;
      *(void *)&long long v45 = 0;
      int v41 = HTTPGetHeaderField();
      if (!v41)
      {
        int v41 = CFDictionarySetCString();
        if (!v41) {
          goto LABEL_44;
        }
      }
      goto LABEL_142;
    }
    if (a6 != 1886809964)
    {
LABEL_44:
      int v19 = v41;
      goto LABEL_45;
    }
    _GetFloatValueFromHTTPMessageURL(a3, (uint64_t)"volume", &v41);
    if (v41) {
      goto LABEL_142;
    }
    goto LABEL_41;
  }
  if ((int)a6 > 1936941937)
  {
    if (a6 != 1936941938)
    {
      if (a6 != 1936942192) {
        goto LABEL_44;
      }
      uint64_t v15 = @"SDPSessionType";
      unsigned int v16 = @"audio";
LABEL_34:
      CFDictionarySetValue(MutableCopy, v15, v16);
      goto LABEL_44;
    }
    _GetFloatValueFromHTTPMessageURL(a3, (uint64_t)"position", &v41);
    if (v41) {
      goto LABEL_142;
    }
LABEL_41:
    CFDictionarySetDouble();
    goto LABEL_44;
  }
  if (a6 != 1918989413)
  {
    if (a6 == 1936749165)
    {
      *(void *)&buffer[0] = 0;
      *(void *)&long long v45 = 0;
      HTTPGetHeaderField();
      if (!*(void *)(a3 + 8544))
      {
        int v41 = 0;
        goto LABEL_44;
      }
      if (strnicmp_prefix() && strnicmpx())
      {
        if (strnicmpx() && strnicmpx() && strnicmpx())
        {
          if (gLogCategory_AirPlayReceiverServer <= 90
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v41 = -6705;
        }
        goto LABEL_44;
      }
      LODWORD(v44) = 0;
      int v41 = HTTPParseRTPInfo();
      if (!v41) {
        goto LABEL_43;
      }
      goto LABEL_142;
    }
    goto LABEL_44;
  }
  _GetFloatValueFromHTTPMessageURL(a3, (uint64_t)"value", &v41);
  if (v41) {
    goto LABEL_142;
  }
  CFDictionarySetDouble();
  unint64_t v44 = 0;
  *(void *)&long long v45 = 0;
  size_t __n = 0;
  int inited = 0;
  int v17 = HTTPMessageGetOrCopyFormVariable();
  if (v17)
  {
    int v18 = v17;
    if (v17 != -6727) {
      APSLogErrorAt();
    }
  }
  else if (v44 < 0x40 && (__strlcpy_chk(), sscanf((const char *)buffer, "%d", &inited) == 1))
  {
    int v18 = 0;
  }
  else
  {
    APSLogErrorAt();
    int v18 = -6705;
  }
  int v41 = v18;
  if (__n)
  {
    free((void *)__n);
    int v18 = v41;
  }
  if (!v18 && inited >= 1)
  {
    unsigned int v16 = (__CFString *)*MEMORY[0x263EFFB40];
    uint64_t v15 = @"forInterstitial";
    goto LABEL_34;
  }
  int v19 = 0;
  int v41 = 0;
LABEL_45:
  int v20 = v19;
  if (Dictionary)
  {
    CFRelease(Dictionary);
    int v20 = v41;
  }
  if (MutableCopy && v20)
  {
    CFRelease(MutableCopy);
    MutableCopy = 0;
  }
  if (v19)
  {
    APSLogErrorAt();
    uint64_t v34 = 400;
    goto LABEL_103;
  }
  uint64_t v21 = *(void *)(a2 + 280);
  uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  int v24 = -71934;
  int v25 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, CFTypeRef *))(v23 + 24);
  if (v25) {
    int v24 = v25(v21, a6, MutableCopy, &cf);
  }
  uint64_t v26 = _MapReqProcReturnCodeToHTTPReturnCode(v24);
  if (gLogCategory_AirPlayReceiverServer <= 10
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v26 != 200)
  {
    APSLogErrorAt();
    uint64_t v34 = v26;
    goto LABEL_103;
  }
  CFDictionaryRef v27 = (const __CFDictionary *)cf;
  int inited = 0;
  size_t __n = 0;
  if (!*(void *)(a4 + 280)) {
    goto LABEL_121;
  }
  memset(buffer, 0, sizeof(buffer));
  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  unint64_t v44 = 0;
  if (cf)
  {
    CFStringGetTypeID();
    TypedCFDictionaryRef Value = (const __CFString *)CFDictionaryGetTypedValue();
    CFDictionaryGetData();
    if (TypedValue) {
      CFStringGetCString(TypedValue, (char *)buffer, 128, 0x8000100u);
    }
  }
  time(0);
  HTTPMakeDateString();
  HTTPHeader_SetField();
  if (HTTPMessageSetBody())
  {
    APSLogErrorAt();
    goto LABEL_123;
  }
  if ((int)a6 <= 1885434724)
  {
    if ((int)a6 > 1718839393)
    {
      if (a6 != 1718839394)
      {
        if (a6 == 1869640819)
        {
          int inited = _HTTPSetField((uint64_t)v27, @"Public");
          if (inited) {
            goto LABEL_123;
          }
        }
        goto LABEL_102;
      }
    }
    else if (a6 != 1718383464)
    {
      if (a6 != 1718645554) {
        goto LABEL_102;
      }
      CFDictionaryRef Value = CFDictionaryGetValue(v27, *v13);
      CFRetain(Value);
      CFIndex Length = CFDataGetLength((CFDataRef)Value);
      uint64_t Int64 = CFDictionaryGetInt64();
      if (!inited)
      {
        CFRetain(a1);
        int v32 = (void *)a1[38];
        v32[1209] = a1;
        v32[1210] = Value;
        v32[1211] = Length;
        v32[1212] = Int64;
        v32[1214] = _FPSetup2ResponseCompletionHandler;
        int v33 = CFDictionaryGetInt64();
        if (inited) {
          goto LABEL_123;
        }
        uint64_t v34 = _MapReqProcReturnCodeToHTTPReturnCode(v33);
        int inited = HTTPHeader_InitResponse();
        int inited = HTTPMessageSetBody();
        if (inited) {
          goto LABEL_123;
        }
        if (v34 != 200) {
          goto LABEL_124;
        }
        goto LABEL_102;
      }
LABEL_121:
      APSLogErrorAt();
      goto LABEL_102;
    }
    if (CFDictionaryContainsKey(v27, @"RTP-Info"))
    {
      int inited = _HTTPSetField((uint64_t)v27, @"RTP-Info");
      if (inited) {
        goto LABEL_123;
      }
    }
    goto LABEL_102;
  }
  if ((int)a6 <= 1919119971)
  {
    if ((a6 == 1885434725 || a6 == 1885435493)
      && v27
      && CFDictionaryGetValue(v27, (const void *)*MEMORY[0x263F24AB8]))
    {
      Data = (const void *)CFDictionaryGetData();
      memcpy((void *)(a4 + 209), Data, __n);
      uint64_t v36 = (const void *)CFDictionaryGetData();
      memcpy((void *)(a4 + 241), v36, __n);
      CFRetain(*(CFTypeRef *)(a4 + 8));
      *(void *)(a5 + 9672) = *(void *)(a4 + 8);
      *(void *)(a5 + 9712) = _HandlePairVerifyCoreUtilsCompletion;
    }
    goto LABEL_102;
  }
  if (a6 == 1919119972)
  {
    CFDictionaryGetInt64();
    if (inited) {
      goto LABEL_123;
    }
    int inited = HTTPHeader_SetField();
    if (inited) {
      goto LABEL_123;
    }
    goto LABEL_102;
  }
  if (a6 != 1920365171)
  {
    if (a6 == 1936942192)
    {
      int inited = _HTTPSetField((uint64_t)v27, @"Transport");
      if (inited) {
        goto LABEL_123;
      }
      int inited = _HTTPSetField((uint64_t)v27, @"Session");
      if (inited) {
        goto LABEL_123;
      }
      int inited = _HTTPSetField((uint64_t)v27, @"Audio-Jack-Status");
      if (inited) {
        goto LABEL_123;
      }
    }
LABEL_102:
    uint64_t v34 = 200;
    goto LABEL_103;
  }
  int v37 = CFDictionaryGetInt64();
  if (!inited)
  {
    uint64_t v38 = _MapReqProcReturnCodeToHTTPReturnCode(v37);
    if (v38 != 200)
    {
      uint64_t v34 = v38;
      APSLogErrorAt();
      goto LABEL_124;
    }
    int inited = HTTPHeader_InitResponse();
    if (!inited)
    {
      HTTPHeader_SetField();
      HTTPHeader_SetField();
      goto LABEL_102;
    }
  }
LABEL_123:
  APSLogErrorAt();
  uint64_t v34 = 500;
LABEL_124:
  APSLogErrorAt();
LABEL_103:
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
LABEL_105:
  if (cf) {
    CFRelease(cf);
  }
  if (v34 != 200
    && gLogCategory_AirPlayReceiverServer <= 90
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v34;
}

uint64_t APReceiverUIControllerShowPIN(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
  if (!v10) {
    return 4294954514;
  }

  return v10(a1, a2, a3, a4);
}

BOOL _requestHTTPAuthorization_IsValidNonce()
{
  return HTTPVerifyTimedNonce() == 0;
}

uint64_t _requestHTTPAuthorization_CopyPassword(uint64_t a1, char **a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  *(_OWORD *)__s1 = 0u;
  long long v6 = 0u;
  CFObjectGetPropertyCStringSync();
  uint64_t v3 = strdup(__s1);
  if (v3)
  {
    *a2 = v3;
    return 200;
  }
  else
  {
    APSLogErrorAt();
    return 500;
  }
}

float _GetFloatValueFromHTTPMessageURL(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  long long v8 = 0;
  float v7 = 0.0;
  int v4 = HTTPMessageGetOrCopyFormVariable();
  if (v4)
  {
    int v5 = v4;
    if (v4 != -6727) {
      APSLogErrorAt();
    }
  }
  else
  {
    __strlcpy_chk();
    if (sscanf(v11, "%f", &v7) == 1)
    {
      int v5 = 0;
    }
    else
    {
      APSLogErrorAt();
      int v5 = -6705;
    }
  }
  if (a3) {
    *a3 = v5;
  }
  if (v8) {
    free(v8);
  }
  return v7;
}

uint64_t _MapReqProcReturnCodeToHTTPReturnCode(int a1)
{
  uint64_t result = 400;
  switch(a1)
  {
    case -71954:
    case -71951:
    case -71941:
      uint64_t result = 451;
      break;
    case -71953:
      uint64_t result = 472;
      break;
    case -71952:
    case -71931:
      uint64_t result = 455;
      break;
    case -71950:
    case -71946:
      uint64_t result = 507;
      break;
    case -71949:
    case -71948:
    case -71947:
      return result;
    case -71945:
      uint64_t result = 412;
      break;
    case -71944:
      uint64_t result = 471;
      break;
    case -71943:
      uint64_t result = 466;
      break;
    case -71942:
      uint64_t result = 422;
      break;
    case -71940:
      uint64_t result = 470;
      break;
    case -71939:
      uint64_t result = 520;
      break;
    case -71938:
      uint64_t result = 454;
      break;
    case -71937:
      uint64_t result = 453;
      break;
    case -71936:
      uint64_t result = 406;
      break;
    case -71935:
      uint64_t result = 501;
      break;
    case -71934:
      uint64_t result = 500;
      break;
    case -71933:
      uint64_t result = 403;
      break;
    case -71932:
      uint64_t result = 456;
      break;
    default:
      if (a1) {
        unsigned int v3 = 400;
      }
      else {
        unsigned int v3 = 200;
      }
      if (a1 == 204) {
        uint64_t result = 204;
      }
      else {
        uint64_t result = v3;
      }
      break;
  }
  return result;
}

uint64_t _HTTPSetField(uint64_t a1, const __CFString *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  CFStringGetTypeID();
  TypedCFDictionaryRef Value = (const __CFString *)CFDictionaryGetTypedValue();
  unsigned int v6 = CFStringCopyUTF8CString();
  if (v6) {
    goto LABEL_10;
  }
  if (!CFStringGetLength(TypedValue))
  {
    APSLogErrorAt();
    return -6712;
  }
  if (!CFStringGetCString(a2, buffer, 256, 0x8000100u))
  {
    APSLogErrorAt();
    return -6762;
  }
  unsigned int v6 = HTTPHeader_SetField();
  if (v6) {
LABEL_10:
  }
    APSLogErrorAt();
  return v6;
}

void _HandlePairVerifyCoreUtilsCompletion(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 9672);
  uint64_t v2 = v1[5];
  if (!NetTransportChaCha20Poly1305Configure())
  {
    for (uint64_t i = 209; i != 241; ++i)
      *(unsigned char *)(v2 + i) = 0;
    do
      *(unsigned char *)(v2 + i++) = 0;
    while (i != 273);
    HTTPConnectionSetTransportDelegate();
    if (gLogCategory_AirPlayReceiverServer > 50
      || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_9;
    }
LABEL_7:
    LogPrintF();
    goto LABEL_9;
  }
  APSLogErrorAt();
  if (gLogCategory_AirPlayReceiverServer < 61
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_7;
  }
LABEL_9:
  CFRelease(v1);
}

void _FPSetup2ResponseCompletionHandler(void *a1)
{
  uint64_t v1 = (void *)a1[1209];
  uint64_t v2 = v1[5];
  unsigned int v3 = (const void *)a1[1210];
  uint64_t v4 = a1[1211];
  uint64_t v14 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v11 = 0;
  uint64_t v5 = a1[1212];
  uint64_t v6 = *(void *)(v2 + 280);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t *))(v8 + 32);
  if (!v9 || v9(v6, v5, &v11)) {
    goto LABEL_16;
  }
  if (v11 && (v4 & 0xFFFFFFC0) != 0)
  {
    if (v3)
    {
      CFTypeID v10 = CFGetTypeID(v3);
      if (v10 == CFDataGetTypeID())
      {
        CFDataGetBytePtr((CFDataRef)v3);
        if (!NetTransportGCMConfigure())
        {
          HTTPConnectionSetTransportDelegate();
          CFObjectSetValue();
          CFObjectSetValue();
          if (*(void *)(v2 + 200))
          {
            IPaI1oem5iL();
            *(void *)(v2 + 200) = 0;
          }
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          goto LABEL_18;
        }
        goto LABEL_23;
      }
    }
LABEL_16:
    APSLogErrorAt();
    goto LABEL_17;
  }
LABEL_23:
  APSLogErrorAt();
  if (gLogCategory_AirPlayReceiverServer <= 60
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_17:
  if (v3) {
LABEL_18:
  }
    CFRelease(v3);
  CFRelease(v1);
}

uint64_t APReceiverRequestProcessorSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 72);
  if (!v8) {
    return 4294954514;
  }

  return v8(a1, a2, a3);
}

void _HandleHTTPConnectionClose(uint64_t a1, uint64_t a2)
{
  if (a1 && a2)
  {
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v4 = *(void *)(a2 + 280);
    if (v4)
    {
      uint64_t v8 = a1 + 328;
      uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v5) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = *(unsigned int (**)(uint64_t, __CFString *, uint64_t *))(v6 + 16);
      if (!v7 || v7(v4, @"HTTPConnectionClose", &v8))
      {
        APSLogErrorAt();
      }
      else
      {
        if (*(void *)(a2 + 32))
        {
          CFObjectControlSync();
          CFRelease(*(CFTypeRef *)(a2 + 32));
          *(void *)(a2 + 32) = 0;
        }
        _UpdateIdleTimeoutTimer(*(void *)a2);
      }
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

void _HandleHTTPConnectionFinalize(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 0;
  if (*(void *)(a2 + 200))
  {
    IPaI1oem5iL();
    *(void *)(a2 + 200) = 0;
  }
  *(unsigned char *)(a2 + 208) = 0;
  unsigned int v3 = *(const void **)(a2 + 280);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a2 + 280) = 0;
  }
  uint64_t v4 = *(const void **)(a2 + 296);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a2 + 296) = 0;
  }
}

uint64_t _HandleHTTPConnectionInitialize(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + 196) = 0;
  APSSettingsGetInt64();
  SocketSetKeepAlive();
  if (*(unsigned char *)(*(void *)a2 + 249))
  {
    unsigned int v3 = *(uint64_t (**)(void))(*(void *)a2 + 232);
    if (v3)
    {
      *(void *)(a2 + 296) = v3(0);
    }
    else
    {
      if (APReceiverUIControllerGetShared_once != -1) {
        dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_3190);
      }
      uint64_t v4 = (const void *)APReceiverUIControllerGetShared_ui;
      *(void *)(a2 + 296) = APReceiverUIControllerGetShared_ui;
      if (v4) {
        CFRetain(v4);
      }
    }
  }
  return 0;
}

void _HandleVolumeUpdate(uint64_t a1)
{
  CFTypeRef cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(*(void *)(*(void *)a1 + 216), 0, 0, &cf);
  if (cf) {
    AirPlayReceiverSessionHandleVolumeUpdate((uint64_t)cf);
  }
  if (*(void *)(*(void *)(*(void *)a1 + 216) + 48))
  {
    CFTypeRef v2 = APReceiverRequestProcessorCopyReceiverSession();
    unsigned int v3 = v2;
    BOOL v4 = v2 == 0;
    if (v2) {
      BOOL v5 = v2 == cf;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5) {
      AirPlayReceiverSessionHandleVolumeUpdate((uint64_t)v2);
    }
  }
  else
  {
    unsigned int v3 = 0;
    BOOL v4 = 1;
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v6 = *(const void **)(a1 + 8);
  if (v6) {
    CFRelease(v6);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (!v4) {
    CFRelease(v3);
  }
  free((void *)a1);
}

void _HandleDenyInterruptionsStatusChanged(unsigned char *cf)
{
  if (cf[249] && !*((void *)cf + 29))
  {
    if (APReceiverUIControllerGetShared_once != -1) {
      dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_3190);
    }
    uint64_t v2 = APReceiverUIControllerGetShared_ui;
    if (APReceiverUIControllerGetShared_ui)
    {
      unsigned int v3 = (void *)(CFObjectGetPropertyInt64Sync() ? MEMORY[0x263EFFB40] : MEMORY[0x263EFFB38]);
      uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v5 = v4 ? v4 : 0;
      uint64_t v6 = *(void (**)(uint64_t, __CFString *, void))(v5 + 56);
      if (v6) {
        v6(v2, @"denyInterruptions", *v3);
      }
    }
  }

  CFRelease(cf);
}

void _HandleEnableAirPlayStatusChanged(const void *a1)
{
  _StartOrStopServersIfNeeded((uint64_t)a1);

  CFRelease(a1);
}

void _NotifySessionsSystemInfoChange(uint64_t a1)
{
  CFTypeRef v5 = 0;
  CFTypeRef cf = 0;
  uint64_t v2 = APReceiverSessionManagerCopyAllSessions(*(void *)(a1 + 216));
  if (v2)
  {
    unsigned int v3 = v2;
    if (CFArrayGetCount(v2) >= 1)
    {
      if (CFArrayEnsureCreatedAndAppend()
        || APReceiverSystemInfoCopyInfoDict(*(void *)(a1 + 160), (uint64_t)v5, 0, (uint64_t)&cf))
      {
        APSLogErrorAt();
      }
      else
      {
        CFArrayApplyBlock();
      }
    }
    CFRelease(v3);
    if (v5) {
      CFRelease(v5);
    }
    if (cf) {
      CFRelease(cf);
    }
  }
}

void _HandleAdvertisingDeviceSettingChanged(void *a1)
{
  _RestartAdvertising((uint64_t)a1);
  CFRetain(a1);
  uint64_t v2 = a1[11];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = ___HandleAdvertisingDeviceSettingChanged_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_async(v2, block);
  CFRelease(a1);
}

uint64_t AirPlayReceiverServerCreate(const __CFDictionary *a1, uint64_t *a2)
{
  int v128 = 1;
  if (gAirPlayReceiverInitOnce != -1) {
    dispatch_once_f(&gAirPlayReceiverInitOnce, 0, (dispatch_function_t)_GlobalInitialize);
  }
  if (gAirPlayReceiverServerInitOnce != -1) {
    dispatch_once_f(&gAirPlayReceiverServerInitOnce, 0, (dispatch_function_t)_GetTypeID);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  uint64_t v5 = Instance;
  *(_OWORD *)(Instance + 16) = 0u;
  uint64_t v6 = Instance + 16;
  *(_OWORD *)(Instance + 240) = 0u;
  *(_OWORD *)(Instance + 256) = 0u;
  *(_OWORD *)(Instance + 208) = 0u;
  *(_OWORD *)(Instance + 224) = 0u;
  *(_OWORD *)(Instance + 176) = 0u;
  *(_OWORD *)(Instance + 192) = 0u;
  *(_OWORD *)(Instance + 144) = 0u;
  *(_OWORD *)(Instance + 160) = 0u;
  *(_OWORD *)(Instance + 112) = 0u;
  *(_OWORD *)(Instance + 128) = 0u;
  *(_OWORD *)(Instance + 80) = 0u;
  *(_OWORD *)(Instance + 96) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  uint64_t v7 = (int *)(Instance + 32);
  *(void *)(Instance + 24) = dispatch_queue_create("AirPlayReceiverServerQueue", 0);
  uint64_t v8 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  *(void *)(v6 + 72) = dispatch_queue_create("AirPlayReceiverServerHTTPQueue", v8);
  *uint64_t v7 = -1;
  RandomBytes();
  *(_DWORD *)(v6 + 104) = 0;
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v105 = 4294960568;
LABEL_310:
    CFRelease((CFTypeRef)v5);
    return v105;
  }
  uint64_t v11 = Mutable;
  v121 = (uint64_t *)v6;
  out_token = v7;
  if (a1)
  {
    FigCFDictionaryGetBooleanIfPresent();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    if (CFDictionaryGetInt64()) {
      __int16 v12 = 0;
    }
    else {
      __int16 v12 = 7000;
    }
    *(_WORD *)(v5 + 264) = v12;
    if (APSSettingsGetUInt16IfPresent()
      && gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      uint64_t width = *(unsigned __int16 *)(v5 + 264);
      LogPrintF();
    }
    CFDictionaryRef Value = CFDictionaryGetValue(a1, @"SBufConsumer");
    *(void *)(v5 + 224) = Value;
    if (Value)
    {
      CFRetain(Value);
      int v13 = 1;
    }
    else
    {
      int v13 = 0;
    }
    *(void *)(v5 + 232) = CFDictionaryGetInt64();
    if (*(unsigned char *)(v5 + 52))
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v13 = 2;
    }
    *(unsigned char *)(v5 + 254) = CFDictionaryGetInt64() != 0;
    long long v15 = CFDictionaryGetValue(a1, @"InterfaceName");
    *(void *)(v5 + 256) = v15;
    if (v15) {
      CFRetain(v15);
    }
    FigCFDictionaryGetBooleanIfPresent();
    FigCFDictionaryGetBooleanIfPresent();
  }
  else
  {
    int v13 = 0;
  }
  v123 = a2;
  int BooleanIfPresent = APSSettingsGetBooleanIfPresent();
  if (gLogCategory_AirPlayReceiverServer <= 50)
  {
    int v17 = BooleanIfPresent;
    if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize())
    {
      long long v18 = "yes";
      if (*(unsigned char *)(v5 + 64)) {
        long long v19 = "yes";
      }
      else {
        long long v19 = "no";
      }
      if (!v17) {
        long long v18 = "no";
      }
      uint64_t width = (uint64_t)v19;
      height = v18;
      LogPrintF();
    }
  }
  long long v20 = (const void *)*MEMORY[0x263EFFB40];
  uint64_t v21 = (const void *)*MEMORY[0x263EFFB38];
  if (*(unsigned char *)(v5 + 64)) {
    uint64_t v22 = (const void *)*MEMORY[0x263EFFB40];
  }
  else {
    uint64_t v22 = (const void *)*MEMORY[0x263EFFB38];
  }
  CFDictionarySetValue(v11, @"UseAltAdvertising", v22);
  int v23 = APSSettingsGetBooleanIfPresent();
  if (gLogCategory_AirPlayReceiverServer <= 50)
  {
    int v24 = v23;
    if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize())
    {
      int v25 = "yes";
      if (*(unsigned char *)(v5 + 251)) {
        uint64_t v26 = "yes";
      }
      else {
        uint64_t v26 = "no";
      }
      if (!v24) {
        int v25 = "no";
      }
      uint64_t width = (uint64_t)v26;
      height = v25;
      LogPrintF();
    }
  }
  CFDictionarySetInt64();
  if (IsAppleTV() || APSIsAPMSpeaker() || CFDictionaryGetInt64())
  {
    BOOL v122 = 1;
  }
  else
  {
    uint64_t Int64 = APSSettingsGetInt64();
    BOOL v122 = Int64 != 0;
    if (!Int64) {
      long long v20 = v21;
    }
  }
  CFDictionarySetValue(v11, @"SupportsRemoteControl", v20);
  if (APReceiverSystemInfoGetTypeID_once != -1) {
    dispatch_once(&APReceiverSystemInfoGetTypeID_once, &__block_literal_global_2071);
  }
  uint64_t v27 = _CFRuntimeCreateInstance();
  bzero((void *)(v27 + 16), 0x2E8uLL);
  *(void *)(v27 + 16) = dispatch_queue_create("APReceiverSystemInfoQueue", 0);
  *(void *)(v27 + 576) = dispatch_queue_create("APReceiverSystemInfoDisplayQueue", 0);
  long long v28 = *MEMORY[0x263F001B0];
  *(unsigned char *)(v27 + 680) = 0;
  *(void *)(v27 + 672) = -4294967236;
  *(_OWORD *)(v27 + 592) = v28;
  *(_OWORD *)(v27 + 608) = v28;
  *(_OWORD *)allocator = v28;
  *(_OWORD *)(v27 + 624) = v28;
  *(void *)(v27 + 640) = 0;
  *(void *)(v27 + 120) = 0;
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    uint64_t width = (uint64_t)v11;
    LogPrintF();
  }
  *(_DWORD *)(v27 + 568) = CFDictionaryGetInt64();
  uint64_t v126 = CFDictionaryGetInt64();
  *(unsigned char *)(v27 + 312) = CFDictionaryGetInt64() != 0;
  *(void *)(v27 + 400) = CFDictionaryCopyCString();
  uint64_t v29 = CFDictionaryCopyCString();
  if (v29)
  {
    uint64_t v30 = (void *)v29;
    BOOL v31 = TextToHardwareAddress() == 0;
    free(v30);
  }
  else
  {
    BOOL v31 = 0;
  }
  int v32 = CFDictionaryGetValue(v11, @"FeatureMask");
  if (v32)
  {
    int v33 = v32;
    CFTypeID v34 = CFGetTypeID(v32);
    if (v34 == CFDataGetTypeID()) {
      *(void *)(v27 + 752) = CFRetain(v33);
    }
  }
  CFDictionaryRef v35 = (const __CFDictionary *)CFDictionaryGetValue(v11, @"DisplaySizeOverride");
  if (v35)
  {
    CFDictionaryRef v36 = v35;
    CFTypeID v37 = CFGetTypeID(v35);
    if (v37 == CFDictionaryGetTypeID())
    {
      CGSize size = *(CGSize *)allocator;
      CGSizeMakeWithDictionaryRepresentation(v36, &size);
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        uint64_t width = (int)size.width;
        height = (const char *)(int)size.height;
        LogPrintF();
      }
      *(CGSize *)(v27 + 608) = size;
    }
  }
  CFDictionaryRef v38 = (const __CFDictionary *)CFDictionaryGetValue(v11, @"DisplaySizeMaxOverride");
  if (v38)
  {
    CFDictionaryRef v39 = v38;
    CFTypeID v40 = CFGetTypeID(v38);
    if (v40 == CFDictionaryGetTypeID())
    {
      CGSize size = *(CGSize *)allocator;
      CGSizeMakeWithDictionaryRepresentation(v39, &size);
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        uint64_t width = (int)size.width;
        height = (const char *)(int)size.height;
        LogPrintF();
      }
      *(CGSize *)(v27 + 624) = size;
    }
  }
  int v41 = CFDictionaryGetValue(v11, @"DisplayHDRModeOverride");
  if (v41)
  {
    uint64_t v42 = v41;
    CFTypeID v43 = CFGetTypeID(v41);
    if (v43 == CFStringGetTypeID())
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        uint64_t width = (uint64_t)v42;
        LogPrintF();
      }
      *(void *)(v27 + 640) = CFRetain(v42);
    }
  }
  *(unsigned char *)(v27 + 424) = CFDictionaryGetInt64() != 0;
  if (!v31)
  {
    int v46 = 9;
    while (!APSGetDeviceID())
    {
      sleep(1u);
      if (!--v46)
      {
        if (gLogCategory_APReceiverSystemInfo <= 90
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          uint64_t width = 0;
          LogPrintF();
        }
        break;
      }
    }
  }
  *(_WORD *)(v27 + 110) = 0;
  *(void *)(v27 + 102) = 0;
  *(_DWORD *)(v27 + 112) = *(_DWORD *)(v27 + 96);
  *(_WORD *)(v27 + 116) = *(_WORD *)(v27 + 100);
  *(unsigned char *)(v27 + 128) = APSSettingsIsFeatureEnabledInDomain();
  *(unsigned char *)(v27 + 129) = APSMultiPrimariesEnabled();
  *(unsigned char *)(v27 + 130) = APSNowPlayingSessionDataSourceEnabled();
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    int v44 = APSIsProximityReceiverEnabled();
    long long v45 = "";
    if (!v44) {
      long long v45 = " not";
    }
    uint64_t width = (uint64_t)v45;
    LogPrintF();
  }
  *(void *)(v27 + 120) = MGCopyAnswer();
  if (!APSIsValidDeviceEnclosureColorString())
  {
    if (gLogCategory_APReceiverSystemInfo <= 60
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      uint64_t width = *(void *)(v27 + 120);
      LogPrintF();
    }
    long long v47 = *(const void **)(v27 + 120);
    if (v47)
    {
      CFRelease(v47);
      *(void *)(v27 + 120) = 0;
    }
  }
  uint64_t v48 = sysInfo_copyPairingIdentity(0);
  unsigned int v129 = v48;
  if (v48)
  {
    if (gLogCategory_APReceiverSystemInfo > 50) {
      goto LABEL_113;
    }
    if (gLogCategory_APReceiverSystemInfo != -1) {
      goto LABEL_110;
    }
    if (_LogCategory_Initialize())
    {
      uint64_t v48 = v129;
LABEL_110:
      uint64_t width = v48;
      LogPrintF();
    }
  }
  else
  {
    *(void *)(v27 + 464) = CFStringCreateWithCString(v9, 0, 0x8000100u);
    free(0);
  }
LABEL_113:
  uint64_t v49 = sysInfo_copyPairingIdentity(1);
  unsigned int v130 = v49;
  if (v49)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50)
    {
      if (gLogCategory_APReceiverSystemInfo == -1)
      {
        if (!_LogCategory_Initialize()) {
          goto LABEL_119;
        }
        uint64_t v49 = v130;
      }
      uint64_t width = v49;
      LogPrintF();
    }
  }
  else
  {
    *(void *)(v27 + 456) = CFStringCreateWithCString(v9, 0, 0x8000100u);
    free(0);
  }
LABEL_119:
  uint64_t v50 = APSPowerAssertionCreate();
  *(void *)(v27 + 736) = v50;
  if (!v50
    && gLogCategory_APReceiverSystemInfo <= 90
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v125 = v11;
  if ((*(_DWORD *)(v27 + 568) - 1) <= 1)
  {
    *(unsigned char *)(v27 + 64) = 1;
    *(unsigned char *)(v27 + 80) = 1;
    *(unsigned char *)(v27 + 310) = 0;
    *(void *)(v27 + 316) = 0;
    *(void *)(v27 + 240) = 0;
    *(_DWORD *)(v27 + 248) = 0;
    *(void *)(v27 + 176) = 0;
    *(void *)(v27 + 192) = 0;
    *(unsigned char *)(v27 + 184) = 0;
    *(void *)(v27 + 208) = 0;
    *(unsigned char *)(v27 + 308) = 0;
    *(void *)(v27 + 256) = 0;
    *(void *)(v27 + 264) = 0;
    *(unsigned char *)(v27 + 272) = 0;
    *(void *)(v27 + 288) = 0;
    *(void *)(v27 + 296) = 0;
    *(void *)(v27 + 280) = 0;
    *(unsigned char *)(v27 + 304) = 0;
    *(unsigned char *)(v27 + 311) = 1;
    *(unsigned char *)(v27 + 408) = APSIsAPMSpeaker() == 0;
    *(unsigned char *)(v27 + 410) = 0;
    *(void *)(v27 + 416) = 0;
    *(_WORD *)(v27 + 432) = 256;
    *(_WORD *)(v27 + 480) = 0;
    *(unsigned char *)(v27 + 472) = 0;
    *(_DWORD *)(v27 + 428) = 1;
    *(unsigned char *)(v27 + 560) = 0;
    *(_DWORD *)(v27 + 564) = 30;
    goto LABEL_177;
  }
  APSSettingsSynchronize();
  unsigned __int8 IntWithDefault = APSSettingsGetIntWithDefault();
  *(unsigned char *)(v27 + 64) = IntWithDefault;
  if (gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_134;
      }
      int v52 = *(unsigned __int8 *)(v27 + 64);
    }
    else
    {
      int v52 = IntWithDefault;
    }
    if (v52) {
      uint64_t v53 = "yes";
    }
    else {
      uint64_t v53 = "no";
    }
    uint64_t width = (uint64_t)v53;
    LogPrintF();
  }
LABEL_134:
  LODWORD(size.width) = APSGetAccessControlConfig();
  if (LODWORD(size.width))
  {
    *(void *)(v27 + 316) = 0;
    LODWORD(size.width) = 0;
  }
  *(unsigned char *)(v27 + 80) = APSSettingsGetInt64() != 0;
  *(unsigned char *)(v27 + 310) = APSSettingsGetInt64() != 0;
  uint64_t v54 = (uint64_t *)(v27 + 256);
  uint64_t v55 = (uint64_t *)(v27 + 288);
  APSCopyPersistentGroupInfo();
  if (*(void *)(v27 + 256))
  {
    *(unsigned char *)(v27 + 306) = IsAppleTV();
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      if (*(unsigned char *)(v27 + 272)) {
        int v56 = "yes";
      }
      else {
        int v56 = "no";
      }
      uint64_t v119 = *(void *)(v27 + 280);
      uint64_t v120 = *v55;
      uint64_t v117 = *(void *)(v27 + 296);
      uint64_t v118 = *(void *)(v27 + 264);
      uint64_t v115 = *(void *)(v27 + 240);
      uint64_t v116 = *(unsigned int *)(v27 + 248);
      uint64_t width = *v54;
      height = v56;
      LogPrintF();
    }
  }
  int v57 = (uint64_t *)(v27 + 176);
  APSCopyTightSyncInfo();
  if (!*(void *)(v27 + 176)) {
    goto LABEL_153;
  }
  if (!*v54) {
    *(unsigned char *)(v27 + 306) = APSSettingsGetInt64() != 0;
  }
  if (gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize())
    {
      int v58 = "yes";
      if (!*(unsigned char *)(v27 + 184)) {
        int v58 = "no";
      }
      uint64_t v116 = *(void *)(v27 + 192);
      uint64_t v117 = *(void *)(v27 + 208);
      height = v58;
      uint64_t v115 = *(void *)(v27 + 200);
      uint64_t width = *v57;
      LogPrintF();
    }
LABEL_153:
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      if (*v54 || (v59 = *v57, uint64_t v55 = (uint64_t *)(v27 + 208), *v57)) {
        uint64_t v59 = *v55;
      }
      if (*(unsigned char *)(v27 + 306)) {
        unsigned __int16 v60 = "yes";
      }
      else {
        unsigned __int16 v60 = "no";
      }
      uint64_t width = v59;
      height = v60;
      LogPrintF();
    }
  }
  *(unsigned char *)(v27 + 304) = APSSettingsGetInt64() != 0;
  *(unsigned char *)(v27 + 308) = APSSettingsGetInt64() != 0;
  *(unsigned char *)(v27 + 311) = APSSettingsGetIntWithDefault();
  *(unsigned char *)(v27 + 408) = APSGetP2PAllow();
  *(unsigned char *)(v27 + 409) = APSSettingsGetIntWithDefault();
  *(unsigned char *)(v27 + 410) = APSSettingsGetIntWithDefault();
  *(void *)(v27 + 416) = APSSettingsCopyValue();
  *(unsigned char *)(v27 + 432) = APSSettingsGetInt64() != 0;
  APSIsAPMSpeaker();
  *(unsigned char *)(v27 + 433) = APSSettingsGetIntWithDefault();
  *(unsigned char *)(v27 + 480) = APSSettingsGetInt64() != 0;
  *(unsigned char *)(v27 + 472) = 0;
  *(unsigned char *)(v27 + 481) = 0;
  APSSettingsGetCString();
  if (*(unsigned char *)(v27 + 480))
  {
    int v61 = 3;
  }
  else if (*(unsigned char *)(v27 + 481))
  {
    int v61 = 2;
  }
  else
  {
    if (!*(unsigned char *)(v27 + 433))
    {
      *(_DWORD *)(v27 + 428) = 0;
      goto LABEL_170;
    }
    int v61 = 1;
  }
  *(_DWORD *)(v27 + 428) = v61;
LABEL_170:
  *(unsigned char *)(v27 + 560) = APSSettingsGetInt64() != 0;
  int v62 = APSSettingsGetInt64();
  if (v62 >= 1 && LODWORD(size.width) == 0) {
    int v64 = v62;
  }
  else {
    int v64 = 30;
  }
  *(_DWORD *)(v27 + 564) = v64;
  *(unsigned char *)(v27 + 712) = APSSettingsGetInt64() != 0;
LABEL_177:
  *(void *)(v27 + 88) = 0;
  uint64_t v65 = APSCopyBootUUID();
  unsigned int v131 = v65;
  if (v65 && gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo != -1)
    {
LABEL_180:
      uint64_t width = v65;
      LogPrintF();
      goto LABEL_182;
    }
    if (_LogCategory_Initialize())
    {
      uint64_t v65 = v131;
      goto LABEL_180;
    }
  }
LABEL_182:
  if (IsAppleTV()) {
    *(_DWORD *)(v27 + 684) = 1;
  }
  *(void *)(v27 + 24) = -1;
  *(void *)(v27 + 40) = -1;
  *(_DWORD *)(v27 + 48) = -1;
  *(void *)(v27 + 32) = -1;
  if (!*(_DWORD *)(v27 + 568))
  {
    if (IsAppleTV() || APSIsAPMSpeaker())
    {
      *(void *)(v27 + 728) = [[BluetoothAddressMonitor alloc] initWithSystemInfo:v27 queue:*(void *)(v27 + 16)];
      char v66 = *(NSObject **)(v27 + 16);
      uint64_t handler = MEMORY[0x263EF8330];
      uint64_t v166 = 3221225472;
      v167 = __sysInfo_registerForNotificationsAsNeeded_block_invoke;
      v168 = &__block_descriptor_40_e8_v12__0i8l;
      uint64_t v169 = v27;
      notify_register_dispatch("kAirPlayWHANotification_BreakAwayFromCurrentGroup", (int *)(v27 + 36), v66, &handler);
    }
    char v67 = *(NSObject **)(v27 + 16);
    uint64_t v149 = MEMORY[0x263EF8330];
    uint64_t v150 = 3221225472;
    v151 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_2;
    v152 = &__block_descriptor_40_e8_v12__0i8l;
    uint64_t v153 = v27;
    notify_register_dispatch("com.apple.airplay.cloudConnectivity", (int *)(v27 + 24), v67, &v149);
    uint64_t v68 = *(NSObject **)(v27 + 16);
    uint64_t v144 = MEMORY[0x263EF8330];
    uint64_t v145 = 3221225472;
    v146 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_3;
    v147 = &__block_descriptor_40_e8_v12__0i8l;
    uint64_t v148 = v27;
    notify_register_dispatch("com.apple.airplay.conferenceRoomMode", (int *)(v27 + 28), v68, &v144);
    unsigned int v69 = *(NSObject **)(v27 + 16);
    *(void *)&size.uint64_t width = MEMORY[0x263EF8330];
    *(void *)&size.height = 3221225472;
    v161 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_4;
    v162 = &__block_descriptor_41_e8_v12__0i8l;
    uint64_t v163 = v27;
    LOBYTE(v164) = v126 == 0;
    notify_register_dispatch("com.apple.airplay.prefsChanged", (int *)(v27 + 40), v69, &size);
    v70 = *(NSObject **)(v27 + 16);
    uint64_t v139 = MEMORY[0x263EF8330];
    uint64_t v140 = 3221225472;
    v141 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_5;
    v142 = &__block_descriptor_40_e8_v12__0i8l;
    uint64_t v143 = v27;
    notify_register_dispatch("com.apple.airplay.psgInfoChanged", (int *)(v27 + 44), v70, &v139);
    if (!IsAppleTV() && APSIsAPMSpeaker())
    {
      long long v71 = *(NSObject **)(v27 + 16);
      uint64_t v134 = MEMORY[0x263EF8330];
      uint64_t v135 = 3221225472;
      v136 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_6;
      v137 = &__block_descriptor_40_e8_v12__0i8l;
      uint64_t v138 = v27;
      notify_register_dispatch("kAirPlayWHANotification_GroupMemberInterruptedByPreWHASender", (int *)(v27 + 48), v71, &v134);
    }
    if (IsAppleTV())
    {
      long long v72 = *(NSObject **)(v27 + 576);
      v133[0] = MEMORY[0x263EF8330];
      v133[1] = 3221225472;
      v133[2] = __sysInfo_registerForNotificationsAsNeeded_block_invoke_7;
      v133[3] = &__block_descriptor_40_e8_v12__0i8l;
      v133[4] = v27;
      notify_register_dispatch("com.apple.TVSPowerManager.deviceWillChangeSleepStateNotification", (int *)(v27 + 32), v72, v133);
    }
    long long v73 = (const char *)objc_msgSend((id)*MEMORY[0x263F536E0], "UTF8String", width, height, v115, v116, v117, v118, v119, v120);
    long long v74 = *(NSObject **)(v27 + 16);
    v132[0] = MEMORY[0x263EF8330];
    v132[1] = 3221225472;
    v132[2] = __sysInfo_registerForNotificationsAsNeeded_block_invoke_8;
    v132[3] = &__block_descriptor_40_e8_v12__0i8l;
    v132[4] = v27;
    notify_register_dispatch(v73, (int *)(v27 + 40), v74, v132);
    if (!*(void *)(v27 + 328))
    {
      long long v75 = objc_opt_new();
      if (v75)
      {
        long long v76 = v75;
        [v75 setDispatchQueue:*(void *)(v27 + 16)];
        uint64_t v154 = MEMORY[0x263EF8330];
        uint64_t v155 = 3221225472;
        v156 = __sysInfo_deviceNameChangeListenerStart_block_invoke;
        v157 = &__block_descriptor_40_e5_v8__0l;
        uint64_t v158 = v27;
        [v76 setSystemNameChangedHandler:&v154];
        [v76 activateWithCompletion:0];
        *(void *)(v27 + 328) = v76;
      }
      else
      {
        APSLogErrorAt();
      }
    }
  }
  long long v77 = *(NSObject **)(v27 + 16);
  *(void *)&size.uint64_t width = MEMORY[0x263EF8330];
  *(void *)&size.height = 3221225472;
  v161 = __APReceiverSystemInfoCreate_block_invoke;
  v162 = &__block_descriptor_40_e5_v8__0l;
  uint64_t v163 = v27;
  dispatch_sync(v77, &size);
  *(void *)(v5 + 160) = v27;
  if (*(void *)(v5 + 224))
  {
    *(unsigned char *)(v5 + 253) = 1;
  }
  else
  {
    *(_WORD *)(v5 + 248) = 257;
    if (*(void *)(v5 + 232))
    {
      int v78 = v13;
      if (!IsAppleTV()) {
        APSIsAPMSpeaker();
      }
      int v128 = APSSettingsGetIntWithDefault();
      FigCFDictionaryGetIntIfPresent();
    }
    else
    {
      int v78 = v13;
      if (APReceiverUIControllerGetShared_once != -1) {
        dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_3190);
      }
    }
    if (v78 != 2)
    {
      *(unsigned char *)(v5 + 250) = 1;
      *(unsigned char *)(v5 + 252) = *(unsigned __int16 *)(v5 + 264) == 7000;
    }
  }
  if (APReceiverSessionManagerGetTypeID_once != -1) {
    dispatch_once(&APReceiverSessionManagerGetTypeID_once, &__block_literal_global_7188);
  }
  uint64_t v79 = _CFRuntimeCreateInstance();
  if (v79)
  {
    uint64_t v80 = v79;
    *(_DWORD *)(v79 + 16) = -1;
    uint64_t v81 = v79 + 16;
    *(_OWORD *)(v79 + 68) = 0u;
    *(_DWORD *)(v79 + 148) = 0;
    *(_OWORD *)(v79 + 132) = 0u;
    *(_OWORD *)(v79 + 116) = 0u;
    *(_OWORD *)(v79 + 100) = 0u;
    *(_OWORD *)(v79 + 84) = 0u;
    *(_OWORD *)(v79 + 52) = 0u;
    *(_OWORD *)(v79 + 36) = 0u;
    *(_OWORD *)(v79 + 20) = 0u;
    *(_DWORD *)(v79 + 72) = v128;
    long long v82 = (const CFArrayCallBacks *)MEMORY[0x263EFFF70];
    *(void *)(v79 + 64) = CFArrayCreateMutable(v9, 0, MEMORY[0x263EFFF70]);
    *(void *)(v81 + 64) = CFArrayCreateMutable(0, 0, v82);
    *(void *)(v81 + 8) = v5;
    *(unsigned char *)(v81 + 24) = v122;
    if (pthread_mutex_init((pthread_mutex_t *)(v81 + 72), 0))
    {
      APSLogErrorAt();
      CFRelease((CFTypeRef)v80);
    }
    else
    {
      if (IsAppleTV() || APSIsAPMSpeaker())
      {
        notify_register_check("com.apple.airplay.active", (int *)v81);
        notify_set_state(*(_DWORD *)(v80 + 16), *(void *)(v80 + 32));
        notify_post("com.apple.airplay.active");
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterAddListener();
        sessionManager_handleSenderSessionStateChange(v80, 0);
      }
      if (gLogCategory_APReceiverSessionManager <= 10
        && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
      {
        uint64_t width = v80;
        LogPrintF();
      }
      *(void *)(v5 + 216) = v80;
    }
  }
  else
  {
    APSLogErrorAt();
  }
  long long v83 = objc_alloc_init(AirPlayReceiverPlatform);
  if (!v83)
  {
    v99 = 0;
    goto LABEL_313;
  }
  long long v84 = v83;
  v83->_server = (AirPlayReceiverServerPrivate *)v5;
  *(void *)(v5 + 16) = v83;
  *(void *)&v83->_uiErrorNotifyToken = -1;
  p_uiErrorNotifyToken = &v83->_uiErrorNotifyToken;
  *(void *)&v83->_playbackPreventNotifyToken = -1;
  p_playbackPreventNotifyToken = &v83->_playbackPreventNotifyToken;
  getpid();
  proc_set_wakemon_params();
  CFMutableSetRef v87 = CFSetCreateMutable(v9, 0, MEMORY[0x263EFFFA0]);
  *((void *)p_uiErrorNotifyToken - 13) = v87;
  if (!v87)
  {
    v99 = 0;
    goto LABEL_313;
  }
  CFMutableSetRef v88 = CFSetCreateMutable(v9, 0, MEMORY[0x263EFFFA0]);
  v84->_state.mediaVideoSessions = v88;
  if (!v88)
  {
    v99 = 0;
    goto LABEL_313;
  }
  CFMutableSetRef v89 = CFSetCreateMutable(v9, 0, MEMORY[0x263EFFFA0]);
  v84->_state.screenSessions = v89;
  if (!v89)
  {
    v99 = 0;
    goto LABEL_313;
  }
  CFMutableSetRef v90 = CFSetCreateMutable(v9, 0, MEMORY[0x263EFFFA0]);
  v84->_state.auxAudioSessions = v90;
  if (!v90)
  {
    v99 = 0;
    goto LABEL_313;
  }
  if (*(unsigned char *)(v5 + 250)) {
    notify_register_check("com.apple.airplay.dacp.error", p_uiErrorNotifyToken);
  }
  notify_register_dispatch("com.apple.ManagedConfiguration.profileListChanged", &v84->_managedDefaultsChangedNotificationToken, MEMORY[0x263EF83A0], &__block_literal_global_1574);
  AirPlayManagedDefaultsLogging_HandleReceiverManagedDefaultsLoggingChanged();
  if (*(unsigned char *)(v5 + 250))
  {
    var14 = v84->_server->var14;
    *(void *)&size.uint64_t width = MEMORY[0x263EF8330];
    *(void *)&size.height = 3221225472;
    v161 = __AirPlayReceiverServerPlatformInitialize_block_invoke_2;
    v162 = &unk_264895320;
    uint64_t v163 = (uint64_t)v84;
    uint64_t v164 = v5;
    notify_register_dispatch("com.apple.airplay.playbackAllow", p_uiErrorNotifyToken + 1, var14, &size);
    v92 = v84->_server->var14;
    uint64_t v154 = MEMORY[0x263EF8330];
    uint64_t v155 = 3221225472;
    v156 = __AirPlayReceiverServerPlatformInitialize_block_invoke_3;
    v157 = &unk_264895320;
    uint64_t v158 = (uint64_t)v84;
    uint64_t v159 = v5;
    notify_register_dispatch("com.apple.airplay.playbackPrevent", p_playbackPreventNotifyToken, v92, &v154);
  }
  uint64_t v149 = MEMORY[0x263EF8330];
  uint64_t v150 = 3221225472;
  v151 = __AirPlayReceiverServerPlatformInitialize_block_invoke_4;
  v152 = &__block_descriptor_40_e8_v12__0i8l;
  uint64_t v153 = v5;
  uint64_t v93 = MEMORY[0x263EF83A0];
  notify_register_dispatch("com.apple.airplay.prefsChanged", p_uiErrorNotifyToken + 3, MEMORY[0x263EF83A0], &v149);
  v94 = objc_alloc_init(AirPlayControllerServer);
  v84->_controllerServer = v94;
  [(AirPlayControllerServer *)v94 setDispatchQueue:v93];
  uint64_t v144 = MEMORY[0x263EF8330];
  uint64_t v145 = 3221225472;
  v146 = __AirPlayReceiverServerPlatformInitialize_block_invoke_5;
  v147 = &__block_descriptor_40_e28_i40__0__NSString_8_16_24__32l;
  uint64_t v148 = v5;
  [(AirPlayControllerServer *)v84->_controllerServer setPerformCommandBlock:&v144];
  uint64_t v139 = MEMORY[0x263EF8330];
  uint64_t v140 = 3221225472;
  v141 = __AirPlayReceiverServerPlatformInitialize_block_invoke_6;
  v142 = &__block_descriptor_40_e25__32__0__NSString_8_16_i24l;
  uint64_t v143 = v5;
  [(AirPlayControllerServer *)v84->_controllerServer setCopyPropertyBlock:&v139];
  uint64_t v134 = MEMORY[0x263EF8330];
  uint64_t v135 = 3221225472;
  v136 = __AirPlayReceiverServerPlatformInitialize_block_invoke_7;
  v137 = &__block_descriptor_40_e24_i32__0__NSString_8_16_24l;
  uint64_t v138 = v5;
  [(AirPlayControllerServer *)v84->_controllerServer setSetPropertyBlock:&v134];
  [(AirPlayControllerServer *)v84->_controllerServer startWithXPCName:@"com.apple.airplay.receiver.xpc"];
  -[APAVAudioSessionManager setUpSessionWithIsMixable:](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "setUpSessionWithIsMixable:", v84->_server->var40 != 0, width);
  v95 = (void *)[MEMORY[0x263F08A00] defaultCenter];
  uint64_t v96 = *MEMORY[0x263EF90A0];
  objc_msgSend(v95, "addObserver:selector:name:object:", v84, sel__handleAVAudioSessionInterruption_, *MEMORY[0x263EF90A0], -[APAVAudioSessionManager session](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "session"));
  v97 = (void *)[MEMORY[0x263F08A00] defaultCenter];
  objc_msgSend(v97, "addObserver:selector:name:object:", v84, sel__handleAVAudioSessionServicesReset_, *MEMORY[0x263EF90F8], -[APAVAudioSessionManager session](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "session"));
  v98 = (void *)[MEMORY[0x263F08A00] defaultCenter];
  objc_msgSend(v98, "addObserver:selector:name:object:", v84, sel__handleAVAudioSessionServicesLost_, *MEMORY[0x263EF90E8], -[APAVAudioSessionManager session](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "session"));
  [+[APAVAudioSessionManager ambientSessionManager] setUpSessionWithIsMixable:1];
  objc_msgSend((id)objc_msgSend(MEMORY[0x263F08A00], "defaultCenter"), "addObserver:selector:name:object:", v84, sel__handleAVAudioSessionInterruption_, v96, -[APAVAudioSessionManager session](+[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager"), "session"));
  v99 = CFDictionaryCreateMutable(v9, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  CFDictionarySetValue(v99, (const void *)*MEMORY[0x263F24AE8], @"com.apple.airplay.receiver.mediaremote.services");
  gAPReceiverMediaRemoteService_0 = (uint64_t)CFRetain((CFTypeRef)v5);
  if (APSXPCServerStart()
    || (gAPReceiverMediaRemoteService_1 = (uint64_t)CFDictionaryCreateMutable(v9, 0, MEMORY[0x263EFFF88], 0)) == 0
    || (gAPReceiverMediaRemoteService_2 = FigSimpleMutexCreate()) == 0
    || APSXPCServerAddCommandHandler()
    || APSXPCServerAddCommandHandler()
    || (APSXPCServerAddCommandHandler(), APSXPCServerAddCommandHandler()))
  {
    APSLogErrorAt();
  }
  else
  {
    LocalCenter = CFNotificationCenterGetLocalCenter();
    CFStringRef DisconnectNotificationName = (const __CFString *)APSXPCServerGetDisconnectNotificationName();
    CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)aprmrc_handleClientDeath, DisconnectNotificationName, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  }
  _NotifyIsPlayingAmbientAudio(0);
  [(AirPlayReceiverPlatform *)v84 _registerAVSystemControllerNotifications];
  [(AirPlayReceiverPlatform *)v84 _fetchInitialStates];
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    APSNowPlayingSessionDataSourceEnabled();
    LogPrintF();
  }
  unsigned __int8 v102 = APSSettingsGetIntWithDefault();
  v84->_useMediaRemotePerPlayerAPI = v102;
  if (!v102)
  {
    v103 = -[AirPlayReceiverMediaRemoteHelper initWithPlayerID:withSystemInfo:withReceiverServer:]([AirPlayReceiverMediaRemoteHelper alloc], "initWithPlayerID:withSystemInfo:withReceiverServer:", 0, v84->_server->var25);
    v84->_mediaRemoteHelper = v103;
    if (v103)
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x263F08A00], "defaultCenter"), "addObserver:selector:name:object:", v84, sel__handleNowPlayingAppStartedPlaying_, @"APReceiverMediaRemoteHelperNowPlayingAppStartedPlayingNotification", v84->_mediaRemoteHelper);
      goto LABEL_246;
    }
LABEL_313:
    APSLogErrorAt();
    v107 = v125;
    if (gLogCategory_AirPlayReceiverPlatform <= 90
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverServerPlatformFinalize(*v121);
    int v106 = 0;
    uint64_t v105 = 4294960568;
    if (v99) {
      goto LABEL_249;
    }
    goto LABEL_250;
  }
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_246:
  v104 = dispatch_queue_create("AirPlayReceiverServerWiFiDELoadQueue", 0);
  if (v104)
  {
    CFRetain(v84->_server);
    uint64_t handler = MEMORY[0x263EF8330];
    uint64_t v166 = 3221225472;
    v167 = ___LoadWiFiDEAsync_block_invoke;
    v168 = &unk_264895FB0;
    uint64_t v169 = (uint64_t)v84;
    dispatch_async(v104, &handler);
  }
  dispatch_release(v104);
  uint64_t v105 = 0;
  int v106 = 1;
  v107 = v125;
  if (v99) {
LABEL_249:
  }
    CFRelease(v99);
LABEL_250:
  if (!v106)
  {
    APSLogErrorAt();
    CFRelease(v107);
    goto LABEL_310;
  }
  notify_register_check("com.apple.airplay.advertisingDidChange", out_token);
  gAirPlayReceiverServer = v5;
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  if (APSIsAPMSpeaker())
  {
    CMNotificationCenterAddListener();
    CMNotificationCenterAddListener();
  }
  *(_DWORD *)(v5 + 144) = 90;
  *(void *)(v5 + 152) = SecondsToUpTicks();
  int v108 = MEMORY[0x230F46220]();
  if (!IsAppleTV() && !APSIsAPMSpeaker())
  {
    CFMutableDictionaryRef v109 = 0;
    goto LABEL_274;
  }
  if (v108)
  {
    CFMutableDictionaryRef v109 = CFDictionaryCreateMutable(v9, 1, 0, 0);
    FigCFDictionarySetValue();
    if (APSXPCServerStart()
      && gLogCategory_AirPlayReceiverServer <= 90
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    CFMutableDictionaryRef v109 = 0;
  }
  if (IsAppleTV()) {
    APSXPCClientAddEventHandler();
  }
  APSXPCClientAddEventHandler();
  if (APSXPCClientSendCommandCreatingReply()
    && gLogCategory_AirPlayReceiverServer <= 90
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!v108)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    APSXPCServerGetDisconnectNotificationName();
    CMNotificationCenterAddListener();
    goto LABEL_274;
  }
  if (!APSXPCServerAddCommandHandler())
  {
LABEL_274:
    v110 = v123;
LABEL_275:
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_279;
  }
  v110 = v123;
  if (gLogCategory_AirPlayReceiverServer <= 90)
  {
    if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    goto LABEL_275;
  }
LABEL_279:
  if (v109) {
    CFRelease(v109);
  }
  CFRetain((CFTypeRef)v5);
  dispatch_async_f(MEMORY[0x263EF83A0], (void *)v5, (dispatch_function_t)_HandleDenyInterruptionsStatusChanged);
  if (IsAppleInternalBuild())
  {
    DebugIPC_EnsureInitialized();
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t *v110 = v5;
  CFRelease(v107);
  return 0;
}

uint64_t _HandleDebug(const __CFDictionary *a1, CFMutableDictionaryRef *a2)
{
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  CFTypeRef cf = 0;
  CFMutableDictionaryRef theDict = 0;
  if (gAirPlayReceiverServer && (uint64_t v3 = *(void *)(gAirPlayReceiverServer + 216)) != 0)
  {
    APReceiverSessionManagerCopyAirPlaySessionWithAttribute(v3, 0, 0, &cf);
    if (cf) {
      uint64_t v7 = AirPlayReceiverSessionCopyProperty((uint64_t)cf, v5, @"mediaAudioSession", v6, 0);
    }
    else {
      uint64_t v7 = 0;
    }
    DataBuffer_Init();
    CFDictionaryRef Value = CFDictionaryGetValue(a1, @"command");
    if (Value)
    {
      CFAllocatorRef v9 = Value;
      CFTypeID v10 = CFGetTypeID(Value);
      if (v10 == CFStringGetTypeID())
      {
        CFStringRef v11 = (const __CFString *)CFDictionaryGetValue(a1, @"value");
        if (v11)
        {
          CFStringRef v12 = v11;
          CFIndex v13 = CFStringGetLength(v11) + 1;
          uint64_t v14 = (char *)malloc_type_calloc(1uLL, v13, 0xD8B51AE6uLL);
          if (!v14)
          {
            APSLogErrorAt();
            uint64_t v18 = 4294960568;
            goto LABEL_39;
          }
          long long v15 = v14;
          CFStringGetCString(v12, v14, v13, 0x8000100u);
        }
        else
        {
          long long v15 = 0;
        }
        if (CFEqual(v9, @"show"))
        {
          unsigned int Int64 = CFDictionaryGetInt64();
          context[0] = gAirPlayReceiverServer;
          context[1] = Int64;
          context[2] = v24;
          if (gAirPlayReceiverServer) {
            dispatch_sync_f(*(dispatch_queue_t *)(gAirPlayReceiverServer + 24), context, (dispatch_function_t)_AirPlayReceiverServerDebugShow);
          }
          uint64_t Formatted = CFPropertyListCreateFormatted();
          if (Formatted)
          {
            uint64_t v18 = Formatted;
            APSLogErrorAt();
            goto LABEL_24;
          }
          goto LABEL_20;
        }
        if (!CFEqual(v9, @"control"))
        {
          uint64_t v18 = 4294960582;
          goto LABEL_24;
        }
        if (v15)
        {
          uint64_t v19 = CFPropertyListCreateFormatted();
          if (v19)
          {
            uint64_t v18 = v19;
            APSLogErrorAt();
            DataBuffer_Free();
LABEL_25:
            free(v15);
            goto LABEL_26;
          }
LABEL_20:
          if (theDict)
          {
            CFDictionarySetValue(theDict, @"responseType", v9);
            CFMutableDictionaryRef v20 = theDict;
          }
          else
          {
            CFMutableDictionaryRef v20 = 0;
          }
          uint64_t v18 = 0;
          *a2 = v20;
          CFMutableDictionaryRef theDict = 0;
LABEL_24:
          DataBuffer_Free();
          if (!v15) {
            goto LABEL_26;
          }
          goto LABEL_25;
        }
        APSLogErrorAt();
        uint64_t v18 = 0;
      }
      else
      {
        APSLogErrorAt();
        uint64_t v18 = 4294960540;
      }
    }
    else
    {
      uint64_t v18 = 4294960582;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v7 = 0;
    uint64_t v18 = 4294960587;
  }
LABEL_39:
  DataBuffer_Free();
LABEL_26:
  if (theDict) {
    CFRelease(theDict);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v7) {
    CFRelease(v7);
  }
  return v18;
}

void _AirPlayReceiverServerDebugShow(uint64_t a1)
{
  int v10 = 0;
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  CFObjectGetPropertyInt64Sync();
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  APSMultiPrimariesEnabled();
  DataBuffer_AppendF();
  APSNowPlayingSessionDataSourceEnabled();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  uint64_t v3 = (const void *)APReceiverSystemInfoCopyProperty(*(void *)(*(void *)a1 + 160), v2, @"AdvertiserInfo", 0, &v10);
  uint64_t v6 = APAdvertiserInfoCopyProperty((uint64_t)v3, v4, @"featuresEx", v5, &v10);
  APSFeaturesCopyStringRepresentation();
  DataBuffer_AppendF();
  if (v6) {
    CFRelease(v6);
  }
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  if (v3) {
    CFRelease(v3);
  }
  uint64_t v7 = *(void *)(*(void *)a1 + 40);
  if (v7)
  {
    unsigned int v8 = *(_DWORD *)(a1 + 8);
    uint64_t v9 = *(void *)(a1 + 16);
    void context[3] = 0;
    context[0] = v7;
    context[1] = v8;
    context[2] = v9;
    dispatch_sync_f(*(dispatch_queue_t *)(v7 + 16), context, (dispatch_function_t)_APAdvertiserDebugShow);
  }
}

void _handleSenderProcessDidDisconnect()
{
  if (gAirPlayReceiverServer && (uint64_t v0 = *(void **)(gAirPlayReceiverServer + 160)) != 0) {
    APReceiverSystemInfoHandleAPServicesReset(v0);
  }
  else {
    APSLogErrorAt();
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t _handleSenderProcessDidLaunch()
{
  if (gAirPlayReceiverServer && (uint64_t v0 = *(void **)(gAirPlayReceiverServer + 160)) != 0)
  {
    APReceiverSystemInfoHandleAPServicesReset(v0);
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = 4294960578;
    APSLogErrorAt();
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v1;
}

void _handleAPReceiverServicesEvents(__CFString *cf1, const __CFDictionary *a2)
{
  uint64_t v2 = (void *)gAirPlayReceiverServer;
  if (gAirPlayReceiverServer)
  {
    if (cf1 == @"nonPersistentReceiverSessionStartedOnHTSecondary") {
      goto LABEL_20;
    }
    if (!cf1) {
      return;
    }
    if (CFEqual(cf1, @"nonPersistentReceiverSessionStartedOnHTSecondary"))
    {
LABEL_20:
      if (APSIsATVInHTGroup())
      {
        uint64_t v9 = 0;
        int v10 = 0;
        CFTypeRef v8 = CFRetain(v2);
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (a2)
        {
          CFDictionaryRef Value = (void (*)(uint64_t))CFDictionaryGetValue(a2, @"HijackID");
          int v10 = Value;
          if (Value) {
            CFRetain(Value);
          }
          LODWORD(v9) = CFDictionaryGetInt64();
        }
        APSDispatchAsyncFHelper();
      }
    }
    else if (cf1 == @"LocalSenderStateChanged" || CFEqual(cf1, @"LocalSenderStateChanged"))
    {
      uint64_t v5 = (void *)v2[20];
      CFRetain(a2);
      CFRetain(v5);
      uint64_t v6 = v5[2];
      CFTypeRef v8 = (CFTypeRef)MEMORY[0x263EF8330];
      uint64_t v9 = 3221225472;
      int v10 = __APReceiverSystemInfoHandleLocalSenderStateChanged_block_invoke;
      CFStringRef v11 = &__block_descriptor_48_e5_v8__0l;
      CFStringRef v12 = v5;
      CFDictionaryRef v13 = a2;
      dispatch_async(v6, &v8);
    }
  }
}

void _HandleReceiverSessionStartedOnHTSecondary(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)a1;
  int v2 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = *(const void **)(a1 + 16);
  CFTypeRef v10 = 0;
  CFTypeRef cf = 0;
  uint64_t v4 = 0;
  if (!APSIsATVInHTGroup() || v2 == 2)
  {
LABEL_21:
    CFTypeRef v5 = cf;
    goto LABEL_22;
  }
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(v1[27], 4, &cf, &v10);
  uint64_t v4 = 0;
  CFTypeRef v5 = cf;
  if (cf && v10)
  {
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    CFTypeRef v8 = *(uint64_t (**)(CFTypeRef, __CFString *, void))(v7 + 64);
    if (v8) {
      uint64_t v9 = (const void *)v8(v5, @"hijackID", 0);
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v4 = v3;
    if (v9 != v3)
    {
      if (!v9 || !v3 || !CFEqual(v9, v3))
      {
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        AirPlayReceiverServerCloseConnection((uint64_t)v1, (uint64_t)cf);
      }
      uint64_t v4 = v9;
    }
    goto LABEL_21;
  }
LABEL_22:
  if (v5) {
    CFRelease(v5);
  }
  if (v10) {
    CFRelease(v10);
  }
  if (v4) {
    CFRelease(v4);
  }
  if (v3) {
    CFRelease(v3);
  }
  CFRelease(v1);
}

uint64_t _GlobalInitialize()
{
  gAirPlayTransaction = os_transaction_create();
  signal(13, (void (__cdecl *)(int))1);
  LogSetAppID();
  if (IsAppleInternalBuild()) {
    LogControl();
  }

  return LogControl();
}

uint64_t AirPlayReceiverServerGetDispatchQueue(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

CFTypeRef AirPlayReceiverServerCopyProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, _DWORD *a5)
{
  int v23 = 0;
  CFTypeRef cf = 0;
  CFTypeRef Int64 = 0;
  if (CFEqual(cf1, @"audioBufferInfo"))
  {
    APReceiverSessionManagerCopyAirPlaySessionWithAttribute(*(void *)(a1 + 216), 0, 0, &cf);
    if (cf)
    {
      CFTypeRef v10 = AirPlayReceiverSessionCopyProperty((uint64_t)cf, v8, cf1, v9, &v23);
LABEL_4:
      CFTypeRef Int64 = v10;
      goto LABEL_34;
    }
    APSLogErrorAt();
    int v14 = -6709;
    goto LABEL_41;
  }
  if (CFEqual(cf1, @"playing"))
  {
    if (*(unsigned char *)(a1 + 124)) {
      CFStringRef v11 = (CFTypeRef *)MEMORY[0x263EFFB40];
    }
    else {
      CFStringRef v11 = (CFTypeRef *)MEMORY[0x263EFFB38];
    }
    CFTypeRef Int64 = *v11;
    CFRetain(Int64);
    goto LABEL_33;
  }
  if (!CFEqual(cf1, @"sourceVersion"))
  {
    if (!CFEqual(cf1, @"deviceInfo"))
    {
      if (CFEqual(cf1, @"listeningPort"))
      {
        CFTypeRef Int64 = (CFTypeRef)CFNumberCreateInt64();
      }
      else
      {
        if (!CFEqual(cf1, @"assistedModeAdvertisingInfo"))
        {
          CFTypeRef v10 = AirPlayReceiverServerPlatformCopyProperty(0, v17, cf1, v18, &v23);
          goto LABEL_4;
        }
        uint64_t v19 = *(void *)(a1 + 40);
        if (v19)
        {
          int v23 = APAdvertiserCopyProperty(v19, @"assistedModeInfo", &Int64);
          if (v23)
          {
            APSLogErrorAt();
            goto LABEL_34;
          }
        }
      }
      goto LABEL_33;
    }
    int v26 = 0;
    CFPropertyListFormat format = 0;
    CFDataRef data = 0;
    long long v16 = (const void *)APReceiverSystemInfoCopyProperty(*(void *)(a1 + 160), v15, @"AdvertiserInfo", 0, &v26);
    if (!v26)
    {
      int v26 = APAdvertiserInfoCreateData((uint64_t)v16, &data);
      if (!v26)
      {
        CFTypeRef Int64 = CFPropertyListCreateWithData((CFAllocatorRef)*MEMORY[0x263EFFB08], data, 0, &format, 0);
        if (Int64)
        {
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
            if (!v16) {
              goto LABEL_30;
            }
          }
          else if (!v16)
          {
LABEL_30:
            if (data) {
              CFRelease(data);
            }
            int v23 = v26;
            goto LABEL_33;
          }
LABEL_29:
          CFRelease(v16);
          goto LABEL_30;
        }
        int v26 = -6762;
      }
    }
    APSLogErrorAt();
    if (!v16) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  ShortVersionCFIndex Length = APSVersionUtilsGetShortVersionLength();
  CFTypeRef Int64 = CFStringCreateWithBytesNoCopy(v12, (const UInt8 *)"835.19.1.1", ShortVersionLength, 0x600u, 0, (CFAllocatorRef)*MEMORY[0x263EFFB28]);
  if (Int64)
  {
LABEL_33:
    int v23 = 0;
    goto LABEL_34;
  }
  APSLogErrorAt();
  int v14 = -6762;
LABEL_41:
  int v23 = v14;
LABEL_34:
  if (cf) {
    CFRelease(cf);
  }
  if (a5) {
    *a5 = v23;
  }
  return Int64;
}

uint64_t AirPlayReceiverServerSetProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, uint64_t a5)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960587;
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, @"playing"))
  {
    uint64_t v8 = CFGetInt64();
    uint64_t result = 0;
    *(unsigned char *)(a1 + 124) = v8 != 0;
    return result;
  }
  if (CFEqual(cf1, @"playPassword"))
  {
    APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v10, @"Password", v11, a5);
    return 0;
  }
  if (CFEqual(cf1, @"canRecordScreen"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v12, @"CanRecordScreenStream", v13, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
LABEL_32:
    APSLogErrorAt();
    return v14;
  }
  if (CFEqual(cf1, @"screenDemoMode"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v15, @"ScreenDemoMode", v16, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, @"displayHDRMode"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v17, @"DisplayHDRModeOverride", v18, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, @"displaySizeMax"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v19, @"DisplaySizeMaxOverride", v20, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, @"usePTPClock"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v21, @"UsePTPClock", v22, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, @"denyInterruptions"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v23, @"DenyInterruptions", v24, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, @"supportsSenderUIEvents"))
  {
    uint64_t result = APReceiverSystemInfoSetProperty(*(void *)(a1 + 160), v25, @"SupportsSenderUIEvents", v26, a5);
    if (!result) {
      return result;
    }
    uint64_t v14 = result;
    goto LABEL_32;
  }
  if (!CFEqual(cf1, @"forcePermissionDialog")) {
    return 4294960582;
  }
  uint64_t result = 0;
  *(unsigned char *)(a1 + 255) = *MEMORY[0x263EFFB40] == a5;
  return result;
}

void AirPlayReceiverServerUpdateStatus(void *a1, CFTypeRef cf)
{
  CFRetain(cf);
  CFRetain(a1);
  uint64_t v4 = a1[3];
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 3221225472;
  v5[2] = __AirPlayReceiverServerUpdateStatus_block_invoke;
  v5[3] = &__block_descriptor_48_e5_v8__0l;
  v5[4] = a1;
  v5[5] = cf;
  dispatch_async(v4, v5);
}

void __AirPlayReceiverServerUpdateStatus_block_invoke(uint64_t a1)
{
  if (gLogCategory_AirPlayReceiverServer <= 30
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 40), @"StartingPlaying"))
  {
    if (!*(unsigned char *)(*(void *)(a1 + 32) + 250)) {
      goto LABEL_17;
    }
    uint64_t v2 = gAirTunesDACPClient;
    if (gAirTunesDACPClient && *(_DWORD *)gAirTunesDACPClient == 1684104048)
    {
      pthread_mutex_lock((pthread_mutex_t *)(gAirTunesDACPClient + 8));
      *(unsigned char *)(v2 + 161) = 1;
      pthread_mutex_unlock((pthread_mutex_t *)(v2 + 8));
      goto LABEL_17;
    }
    goto LABEL_26;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 40), @"StoppedPlaying"))
  {
    if (!*(unsigned char *)(*(void *)(a1 + 32) + 250))
    {
LABEL_17:
      CFObjectSetProperty();
      goto LABEL_18;
    }
    uint64_t v3 = gAirTunesDACPClient;
    if (gAirTunesDACPClient && *(_DWORD *)gAirTunesDACPClient == 1684104048)
    {
      pthread_mutex_lock((pthread_mutex_t *)(gAirTunesDACPClient + 8));
      int v4 = *(unsigned __int8 *)(v3 + 161);
      *(unsigned char *)(v3 + 161) = 0;
      pthread_mutex_unlock((pthread_mutex_t *)(v3 + 8));
      if (v4) {
        _AirTunesDACPClient_ScheduleCommandInternal(v3, "stopSession", 1);
      }
      goto LABEL_17;
    }
LABEL_26:
    APSLogErrorAt();
    goto LABEL_17;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 40), @"StartedPlayingOverAWDL"))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = @"startedPlayingOverAWDL";
  }
  else
  {
    if (!CFEqual(*(CFTypeRef *)(a1 + 40), @"StoppedPlayingOverAWDL")) {
      goto LABEL_18;
    }
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = @"stoppedPlayingOverAWDL";
  }
  AirPlayReceiverServerControl(v7, v6, v8, 0, 0, 0);
LABEL_18:
  CFRelease(*(CFTypeRef *)(a1 + 40));
  CFTypeRef v5 = *(const void **)(a1 + 32);

  CFRelease(v5);
}

void AirPlayReceiverServerHijackConnection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = 0;
  if (a1 && a2 && a3)
  {
    uint64_t HTTPConnectionForSession = _FindHTTPConnectionForSession(a1, a2, &v7);
    uint64_t v6 = _FindHTTPConnectionForSession(a1, a3, 0);
    if (gLogCategory_AirPlayReceiverServer <= 30
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (HTTPConnectionForSession && v6 && HTTPConnectionForSession != v6)
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _DestroyHTTPConnection(v7, HTTPConnectionForSession);
    }
  }
}

uint64_t AirPlayReceiverServerStoreReverseConnectionContext(uint64_t a1, uint64_t a2, const void *a3)
{
  if (!*(void *)(a1 + 192))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    *(void *)(a1 + 192) = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      return 4294960568;
    }
  }
  uint64_t v6 = (const char *)UUIDtoCString();
  CFStringRef v7 = CFStringCreateWithCString(0, v6, 0x8000100u);
  CFDictionaryRef Value = (__CFArray *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 192), v7);
  if (Value)
  {
    uint64_t v9 = Value;
    CFRetain(Value);
  }
  else
  {
    uint64_t v9 = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
    if (!v9)
    {
      APSLogErrorAt();
      uint64_t v10 = 4294960568;
      if (!v7) {
        return v10;
      }
      goto LABEL_7;
    }
  }
  CFArrayAppendValue(v9, a3);
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 192), v7, v9);
  CFRelease(v9);
  uint64_t v10 = 0;
  if (v7) {
LABEL_7:
  }
    CFRelease(v7);
  return v10;
}

void _HandleConnectionDetached(uint64_t a1, const void *a2, const void *a3, NSObject *a4)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  int v23 = 0;
  v22[0] = 0;
  v22[1] = 0;
  uint64_t Int64 = CFObjectGetInt64();
  BOOL v8 = CFObjectGetInt64() != 0;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  CString = (_OWORD *)CFObjectGetCString();
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  Bytes = (_OWORD *)CFObjectGetBytes();
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(const void *, void *))(v12 + 56);
  if (!v13)
  {
    int v23 = -71934;
    goto LABEL_19;
  }
  int v23 = v13(a3, v22);
  if (v23)
  {
LABEL_19:
    APSLogErrorAt();
    uint64_t v16 = 0;
    goto LABEL_27;
  }
  uint64_t v14 = v22[0];
  CFTypeRef cf = 0;
  if (gAirPlayReceiverReverseConnectionInitOnce != -1) {
    dispatch_once_f(&gAirPlayReceiverReverseConnectionInitOnce, 0, (dispatch_function_t)_AirPlayReceiverReverseConnectionGetTypeID);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    int v21 = -6728;
LABEL_38:
    int v23 = v21;
    goto LABEL_19;
  }
  uint64_t v16 = Instance;
  if (!Bytes || !CString || !v14)
  {
    APSLogErrorAt();
    int v21 = -6705;
LABEL_37:
    CFRelease((CFTypeRef)v16);
    goto LABEL_38;
  }
  *(void *)(Instance + 80) = 0;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 16) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  dispatch_retain(a4);
  *(void *)(v16 + 72) = a4;
  int v17 = HTTPClientCreateWithSocket();
  int v30 = v17;
  if (v17)
  {
    int v21 = v17;
    APSLogErrorAt();
    if (cf)
    {
      HTTPClientInvalidate();
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    goto LABEL_37;
  }
  HTTPClientSetDispatchQueue();
  APSLogUtilsGetHTTPClientCoreLogCategory();
  HTTPClientSetLogging();
  APSLogUtilsGetAsyncCnxLogCategory();
  HTTPClientSetConnectionLogging();
  APSSettingsGetInt64();
  HTTPClientSetTimeout();
  if (Int64) {
    HTTPClientSetTransportDelegate();
  }
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  CFRetain((CFTypeRef)v16);
  uint64_t v24 = v16;
  uint64_t v25 = _HandleReverseConnectionInvalidated;
  HTTPClientSetDelegate();
  HTTPClientSetFlags();
  *(void *)(v16 + 64) = cf;
  *(unsigned char *)(v16 + 80) = 0;
  *(unsigned char *)(v16 + 20) = v8;
  *(_OWORD *)(v16 + 38) = *Bytes;
  *(_OWORD *)(v16 + 22) = *CString;
  int v23 = 0;
  if (!Int64) {
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  uint64_t v20 = *(uint64_t (**)(const void *, void))(v19 + 48);
  if (!v20)
  {
    int v23 = -71934;
    goto LABEL_26;
  }
  int v23 = v20(a3, 0);
  if (!v23)
  {
LABEL_23:
    int v23 = AirPlayReceiverServerStoreReverseConnectionContext((uint64_t)a2, (uint64_t)Bytes, (const void *)v16);
    if (!v23)
    {
      int v23 = 0;
      goto LABEL_27;
    }
  }
LABEL_26:
  APSLogErrorAt();
LABEL_27:
  CFRelease(a2);
  CFRelease(a3);
  dispatch_release(a4);
  if (v16) {
    CFRelease((CFTypeRef)v16);
  }
  if (v23
    && gLogCategory_AirPlayReceiverServer <= 60
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void _HandleReverseConnectionInvalidated(uint64_t a1, const void *a2)
{
  if (a2)
  {
    if (*(void *)(gAirPlayReceiverServer + 192))
    {
      CFArrayRef ReverseConnectionsForSession = (const __CFArray *)_GetReverseConnectionsForSession(gAirPlayReceiverServer);
      if (ReverseConnectionsForSession)
      {
        CFIndex v4 = 0;
        do
        {
          CFIndex v5 = v4;
          if (v4 >= CFArrayGetCount(ReverseConnectionsForSession)) {
            break;
          }
          ValueAtIndex = CFArrayGetValueAtIndex(ReverseConnectionsForSession, v5);
          CFIndex v4 = v5 + 1;
        }
        while (ValueAtIndex != a2);
        if (v5 < CFArrayGetCount(ReverseConnectionsForSession)) {
          CFArrayRemoveValueAtIndex(ReverseConnectionsForSession, v5);
        }
      }
    }
    else
    {
      APSLogErrorAt();
    }
    if (gLogCategory_AirPlayReceiverServer <= 30
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(a2);
  }
  else if (gLogCategory_AirPlayReceiverServer <= 50 {
         && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
}

const void *_GetReverseConnectionsForSession(uint64_t a1)
{
  if (!*(void *)(a1 + 192)) {
    return 0;
  }
  uint64_t v2 = (const char *)UUIDtoCString();
  CFStringRef v3 = CFStringCreateWithCString(0, v2, 0x8000100u);
  CFDictionaryRef Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 192), v3);
  if (v3) {
    CFRelease(v3);
  }
  return Value;
}

uint64_t _AirPlayReceiverReverseConnectionGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAirPlayReceiverReverseConnectionCFTypeID TypeID = result;
  return result;
}

void _AirPlayReceiverReverseConnectionFinalize(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 80);
  CFStringRef v3 = *(const void **)(a1 + 64);
  if (!v2)
  {
    if (!v3) {
      goto LABEL_7;
    }
    HTTPClientInvalidate();
    CFStringRef v3 = *(const void **)(a1 + 64);
    goto LABEL_6;
  }
  if (v3)
  {
LABEL_6:
    CFRelease(v3);
    *(void *)(a1 + 64) = 0;
  }
LABEL_7:
  CFIndex v4 = *(NSObject **)(a1 + 72);
  if (v4)
  {
    dispatch_release(v4);
    *(void *)(a1 + 72) = 0;
  }
}

uint64_t AirPlayReceiverServerHoldPowerAssertion(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 204);
  *(_DWORD *)(result + 204) = v1 + 1;
  if (!v1 && !*(_DWORD *)(result + 208))
  {
    uint64_t result = IOPMAssertionCreateWithName(@"PreventUserIdleSystemSleep", 0xFFu, @"com.apple.airplay.mediacontrol", (IOPMAssertionID *)(result + 208));
    if (gLogCategory_AirPlayReceiverServer <= 40)
    {
      if (gLogCategory_AirPlayReceiverServer != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        return LogPrintF();
      }
    }
  }
  return result;
}

uint64_t AirPlayReceiverServerPostMediaControlEvent(dispatch_queue_t *a1, const void *a2)
{
  if (gLogCategory_AirPlayReceiverServer <= 10
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFIndex v4 = malloc_type_calloc(1uLL, 0x20uLL, 0x1060040FB77E0C5uLL);
  if (v4)
  {
    CFIndex v5 = v4;
    *CFIndex v4 = CFDictionaryGetInt64();
    CFDataRef Data = CFPropertyListCreateData(0, a2, kCFPropertyListXMLFormat_v1_0, 0, 0);
    v5[1] = Data;
    if (Data)
    {
      CFRetain(a2);
      v5[2] = a2;
      CFRetain(a1);
      v5[3] = a1;
      dispatch_async_f(a1[11], v5, (dispatch_function_t)_AirPlayReceiverServerPostMediaControlEvent);
      return 0;
    }
    else
    {
      APSLogErrorAt();
      free(v5);
      return 4294960596;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

void _AirPlayReceiverServerPostMediaControlEvent(unsigned int *a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  CFTypeRef cf = (CFTypeRef)*((void *)a1 + 1);
  uint64_t v1 = *a1;
  uint64_t v2 = *((void *)a1 + 3);
  int v24 = 0;
  v23[1] = 0;
  int v3 = *(_DWORD *)(v2 + 200) + 1;
  *(_DWORD *)(v2 + 200) = v3;
  uint64_t v4 = *(void *)(*(void *)(v2 + 80) + 56);
  if (v4)
  {
    int v5 = 0;
    do
    {
      v23[0] = 0;
      uint64_t v6 = *(void *)(*(void *)(v4 + 40) + 280);
      if (v6)
      {
        uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v7) {
          uint64_t v8 = v7;
        }
        else {
          uint64_t v8 = 0;
        }
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, void *))(v8 + 40);
        if (!v9)
        {
          int v24 = -12782;
LABEL_31:
          APSLogErrorAt();
          goto LABEL_33;
        }
        int v24 = v9(v6, v1, v23);
        if (v24) {
          goto LABEL_31;
        }
        if (v23[0])
        {
          CFObjectGetBytes();
          if (v24) {
            goto LABEL_31;
          }
          CFArrayRef ReverseConnectionsForSession = (const __CFArray *)_GetReverseConnectionsForSession(v2);
          if (ReverseConnectionsForSession)
          {
            CFArrayRef v11 = ReverseConnectionsForSession;
            if (CFArrayGetCount(ReverseConnectionsForSession))
            {
              CFIndex Count = CFArrayGetCount(v11);
              if (Count >= 1)
              {
                CFIndex v13 = Count;
                for (CFIndex i = 0; i != v13; ++i)
                {
                  ValueAtIndex = CFArrayGetValueAtIndex(v11, i);
                  uint64_t v16 = *((void *)ValueAtIndex + 8);
                  memset(&block[6], 0, 24);
                  int v22 = 0;
                  if (v16)
                  {
                    int v17 = ValueAtIndex;
                    if (*((_DWORD *)ValueAtIndex + 4) != v3 && !strcmp((const char *)ValueAtIndex + 22, "event"))
                    {
                      CFObjectGetInt64();
                      if (v24) {
                        goto LABEL_31;
                      }
                      HTTPClientGetPeerAddress();
                      if (gLogCategory_AirPlayReceiverServer <= 50
                        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      *((_DWORD *)v17 + 4) = v3;
                      CFRetain(cf);
                      CFRetain(v17);
                      uint64_t v18 = *((void *)v17 + 9);
                      block[0] = MEMORY[0x263EF8330];
                      block[1] = 3221225472;
                      block[2] = ___AirPlayReceiverServerPostMediaControlEvent_block_invoke;
                      block[3] = &__block_descriptor_48_e5_v8__0l;
                      block[4] = v17;
                      void block[5] = cf;
                      dispatch_async(v18, block);
                      int v5 = 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
      uint64_t v4 = *(void *)(v4 + 16);
    }
    while (v4);
    if (v5) {
      goto LABEL_33;
    }
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_33:
  CFRelease(cf);
  CFRelease(*((CFTypeRef *)a1 + 2));
  CFRelease(*((CFTypeRef *)a1 + 3));
  free(a1);
}

uint64_t _DoEventTransactionCompletion(uint64_t result)
{
  if (*(_DWORD *)(result + 9648)
    || ((v1 = *(_DWORD *)(result + 8456), (v1 - 300) <= 0xFFFFFF9B) ? (BOOL v2 = v1 == -200000) : (BOOL v2 = 1), !v2))
  {
    if (gLogCategory_AirPlayReceiverServer <= 60)
    {
      if (gLogCategory_AirPlayReceiverServer != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

void AirPlayReceiverServerSendMediaRemoteCommand(uint64_t a1, int a2)
{
  CFTypeRef cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1, 0, 0, &cf);
  if (cf)
  {
    if (AirPlayReceiverSessionSendMediaRemoteCommand(cf, -1, a2, 0)) {
      APSLogErrorAt();
    }
    if (cf) {
      CFRelease(cf);
    }
  }
}

uint64_t AirPlayReceiverServerSendDACPCommands()
{
  return 4294960568;
}

void _AirPlayReceiverUI_HandleServerReset(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = 0;
  dispatch_retain(*(dispatch_object_t *)a1);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = ___AirPlayReceiverUI_HandleServerReset_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_async(MEMORY[0x263EF83A0], block);
}

void _AirPlayReceiverUI_CleanupPresentation(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 && *(unsigned char *)(a1 + 40))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    xpc_object_t v5 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v5, "function", "stopPresentation");
    if (a3) {
      xpc_dictionary_set_cf_object();
    }
    _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v5, 0);
    xpc_release(v5);
  }
  objc_msgSend((id)objc_msgSend(*(id *)(a1 + 136), "layer"), "setContents:", 0);
  [*(id *)(a1 + 136) invalidate];

  *(void *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 143) = 0;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t _AirPlayReceiverUI_ActiveSessionsStopped(uint64_t a1)
{
  uint64_t result = mach_absolute_time();
  *(void *)(a1 + 88) = result;
  for (CFIndex i = *(uint64_t ***)(a1 + 48); i; CFIndex i = (uint64_t **)*i)
    uint64_t result = ((uint64_t (*)(const char *, void, uint64_t *))i[2])("sessionsStopped", 0, i[3]);
  return result;
}

uint64_t _AirPlayReceiverUI_SendMessageWithReplySync(NSObject **a1, uint64_t a2, void *a3)
{
  uint64_t v21 = 0;
  int v22 = &v21;
  uint64_t v23 = 0x2020000000;
  int v24 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x3052000000;
  uint64_t v18 = __Block_byref_object_copy__2845;
  uint64_t v19 = __Block_byref_object_dispose__2846;
  uint64_t v20 = 0;
  dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
  if (v6)
  {
    uint64_t v7 = v6;
    *((_DWORD *)v22 + 6) = -6700;
    uint64_t v8 = *a1;
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ___AirPlayReceiverUI_SendMessageWithReplySync_block_invoke;
    block[3] = &unk_264895750;
    void block[7] = &v15;
    void block[8] = a1;
    void block[5] = v7;
    void block[6] = &v21;
    block[4] = a2;
    dispatch_async(v8, block);
    dispatch_semaphore_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v7);
    if (*((_DWORD *)v22 + 6))
    {
      APSLogErrorAt();
    }
    else if (MEMORY[0x230F49300](v16[5]) == MEMORY[0x263EF8720])
    {
      APSLogErrorAt();
      *((_DWORD *)v22 + 6) = -6753;
      if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
        && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      int int64 = xpc_dictionary_get_int64((xpc_object_t)v16[5], "error");
      *((_DWORD *)v22 + 6) = int64;
      if (a3 && !int64)
      {
        uint64_t v10 = v16;
        *a3 = v16[5];
        v10[5] = 0;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    *((_DWORD *)v22 + 6) = -6728;
  }
  CFArrayRef v11 = (void *)v16[5];
  if (v11) {
    xpc_release(v11);
  }
  uint64_t v12 = *((unsigned int *)v22 + 6);
  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);
  return v12;
}

void sub_22B413EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy__2845(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_dispose__2846(uint64_t a1)
{
}

void _AirPlayReceiverUI_HandleStateEvent(void *a1)
{
  if (AirPlayReceiverUI_GetShared_once != -1) {
    dispatch_once(&AirPlayReceiverUI_GetShared_once, &__block_literal_global_2818);
  }
  uint64_t v2 = AirPlayReceiverUI_GetShared_ui;
  int v3 = (void *)[MEMORY[0x263EFF9A0] dictionary];
  [v3 setObject:@"video" forKey:@"category"];
  string = xpc_dictionary_get_string(a1, "eventType");
  if (string
    && ((xpc_object_t v5 = string, !strcmp(string, "ended"))
      ? ([v3 setObject:@"stopped" forKey:@"state"],
         dispatch_semaphore_t v6 = @"ended",
         uint64_t v7 = @"reason")
      : (dispatch_semaphore_t v6 = (__CFString *)[NSString stringWithUTF8String:v5], v7 = @"state"),
        [v3 setObject:v6 forKey:v7],
        (CFDictionaryRef v8 = (const __CFDictionary *)xpc_dictionary_copy_cf_object()) != 0))
  {
    CFDictionaryRef v9 = v8;
    CFTypeID v10 = CFGetTypeID(v8);
    if (v10 == CFDictionaryGetTypeID())
    {
      MutableCopy = CFDictionaryCreateMutableCopy(0, 0, v9);
      if (MutableCopy)
      {
        CFDictionaryRef v12 = MutableCopy;
        CFDictionaryRemoveValue(MutableCopy, @"sessionID");
        if (CFDictionaryGetCount(v12) >= 1) {
          [v3 setObject:v12 forKey:@"params"];
        }
        CFRelease(v12);
      }
      CFDictionaryRef Value = CFDictionaryGetValue(v9, @"sessionID");
      if (Value) {
        [v3 setObject:Value forKey:@"sessionID"];
      }
      v14[0] = MEMORY[0x263EF8330];
      v14[1] = 3221225472;
      v14[2] = ___AirPlayReceiverUI_HandleStateEvent_block_invoke;
      v14[3] = &unk_264896140;
      v14[4] = v3;
      v14[5] = v2;
      dispatch_async(MEMORY[0x263EF83A0], v14);
    }
    else
    {
      APSLogErrorAt();
    }
    CFRelease(v9);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _AirPlayReceiverUI_HandlePlaylistEvent(void *a1)
{
  if (AirPlayReceiverUI_GetShared_once != -1) {
    dispatch_once(&AirPlayReceiverUI_GetShared_once, &__block_literal_global_2818);
  }
  uint64_t v2 = AirPlayReceiverUI_GetShared_ui;
  int v3 = (void *)[MEMORY[0x263EFF9A0] dictionary];
  [v3 setObject:@"video" forKey:@"category"];
  string = xpc_dictionary_get_string(a1, "eventType");
  if (string
    && (objc_msgSend(v3, "setObject:forKey:", objc_msgSend(NSString, "stringWithUTF8String:", string), @"type"), (CFDictionaryRef v5 = (const __CFDictionary *)xpc_dictionary_copy_cf_object()) != 0))
  {
    CFDictionaryRef v6 = v5;
    CFTypeID v7 = CFGetTypeID(v5);
    if (v7 == CFDictionaryGetTypeID())
    {
      CFDictionaryRef Value = CFDictionaryGetValue(v6, @"item");
      if (Value) {
        [v3 setObject:Value forKey:@"item"];
      }
      CFDictionaryRef v9 = CFDictionaryGetValue(v6, @"sessionID");
      if (v9) {
        [v3 setObject:v9 forKey:@"sessionID"];
      }
      CFTypeID v10 = CFDictionaryGetValue(v6, @"uuid");
      if (v10) {
        [v3 setObject:v10 forKey:@"uuid"];
      }
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 3221225472;
      v11[2] = ___AirPlayReceiverUI_HandlePlaylistEvent_block_invoke;
      v11[3] = &unk_264896140;
      v11[4] = v3;
      v11[5] = v2;
      dispatch_async(MEMORY[0x263EF83A0], v11);
    }
    else
    {
      APSLogErrorAt();
    }
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _AirPlayReceiverUI_NotifyObserversF(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 && CFPropertyListCreateFormattedVAList())
  {
    APSLogErrorAt();
  }
  else
  {
    for (CFIndex i = *(uint64_t ***)(a1 + 48); i; CFIndex i = (uint64_t **)*i)
      ((void (*)(uint64_t, void, uint64_t *))i[2])(a2, 0, i[3]);
  }
}

NSObject **AirPlayReceiverUI_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  CFDictionaryRef v5 = (NSObject **)a1;
  if (!a1)
  {
    APSLogErrorAt();
    int v11 = -6745;
LABEL_15:
    int v13 = v11;
    goto LABEL_9;
  }
  if (!*(unsigned char *)(a1 + 40))
  {
    CFDictionaryRef v5 = 0;
    int v13 = 0;
    goto LABEL_9;
  }
  xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
  if (!v7)
  {
    APSLogErrorAt();
    CFDictionaryRef v5 = 0;
    int v11 = -6728;
    goto LABEL_15;
  }
  CFDictionaryRef v8 = v7;
  xpc_dictionary_set_string(v7, "function", "getProperty");
  xpc_dictionary_set_cf_object();
  if (a3) {
    xpc_dictionary_set_cf_object();
  }
  xpc_object_t object = 0;
  int v9 = _AirPlayReceiverUI_SendMessageWithReplySync(v5, (uint64_t)v8, &object);
  int v13 = v9;
  xpc_release(v8);
  if (v9)
  {
    CFDictionaryRef v5 = 0;
  }
  else
  {
    CFDictionaryRef v5 = (NSObject **)xpc_dictionary_copy_cf_object();
    xpc_release(object);
    if (v13) {
      APSLogErrorAt();
    }
  }
LABEL_9:
  if (a4) {
    *a4 = v13;
  }
  return v5;
}

uint64_t AirPlayReceiverUI_SetProperty(uint64_t a1, CFStringRef theString1, uint64_t a3, const void *a4)
{
  if (a1)
  {
    if (!*(unsigned char *)(a1 + 40)) {
      return 0;
    }
    if (CFEqual(theString1, @"denyInterruptions"))
    {
      uint64_t v9 = CFGetInt64();
      uint64_t result = 0;
      *(unsigned char *)(a1 + 56) = v9 != 0;
      return result;
    }
    if (CFStringCompare(theString1, @"rate", 0))
    {
      if (CFEqual(theString1, @"audioMode"))
      {
        if (*(_DWORD *)(a1 + 160))
        {
          CFDictionaryRef v8 = *(const void **)(a1 + 168);
          if (a4) {
            CFRetain(a4);
          }
          *(void *)(a1 + 168) = a4;
          if (v8)
          {
            CFRelease(v8);
            a4 = *(const void **)(a1 + 168);
          }
          if (a4)
          {
            if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
              && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"updateAudioMode", (uint64_t)"{%kO=%O}");
          }
        }
        return 0;
      }
    }
    else
    {
      CFGetDouble();
      *(float *)&double v11 = v11;
      if (*(float *)&v11 == 1.0 && *(void *)(a1 + 168))
      {
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"updateAudioMode", (uint64_t)"{%kO=%O}");
      }
    }
    xpc_object_t v12 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v12, "function", "setProperty");
    xpc_dictionary_set_cf_object();
    if (a3) {
      xpc_dictionary_set_cf_object();
    }
    if (a4) {
      xpc_dictionary_set_cf_object();
    }
    uint64_t v13 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v12, 0);
    xpc_release(v12);
    return v13;
  }
  else
  {
    APSLogErrorAt();
    return 4294960551;
  }
}

uint64_t AirPlayReceiverUI_Perform(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960551;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v7, "function", "perform");
  xpc_dictionary_set_cf_object();
  if (a3) {
    xpc_dictionary_set_cf_object();
  }
  xpc_object_t object = 0;
  uint64_t v8 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v7, &object);
  xpc_release(v7);
  if (!v8)
  {
    if (a4) {
      *a4 = xpc_dictionary_copy_cf_object();
    }
    xpc_release(object);
    return 0;
  }
  return v8;
}

uint64_t AirPlayReceiverUI_StartPresentation(uint64_t a1, CFDictionaryRef theDict, __CFDictionary **a3)
{
  uint64_t v41 = 0;
  uint64_t v39 = 0;
  CFDictionaryRef v6 = &unk_268401000;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v38 = 0;
  xpc_object_t xdict = 0;
  if (!a1)
  {
    APSLogErrorAt();
    CFDictionaryRef v8 = 0;
    uint64_t v9 = 0;
    CFDictionaryRef v10 = 0;
    int v11 = -6745;
    goto LABEL_36;
  }
  if (!*(unsigned char *)(a1 + 40))
  {
    APSLogErrorAt();
    CFDictionaryRef v8 = 0;
    uint64_t v9 = 0;
    CFDictionaryRef v10 = 0;
    int v11 = -6700;
LABEL_36:
    HIDWORD(v41) = v11;
LABEL_37:
    int v19 = v6[956];
    if (v19 <= 60 && (v19 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    goto LABEL_103;
  }
  if (theDict) {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(0, 0, theDict);
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  }
  CFDictionaryRef v8 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    uint64_t v9 = 0;
    CFDictionaryRef v10 = 0;
    int v11 = -6728;
    goto LABEL_36;
  }
  long long v37 = a3;
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t v13 = CFDictionaryGetInt64();
  uint64_t v14 = CFDictionaryGetInt64();
  CFDictionaryRef Value = (__CFString *)CFDictionaryGetValue(v8, @"presentationType");
  if (Value) {
    uint64_t v16 = Value;
  }
  else {
    uint64_t v16 = @"photo";
  }
  CFTypeID v17 = CFGetTypeID(v16);
  if (v17 != CFStringGetTypeID())
  {
    APSLogErrorAt();
    uint64_t v9 = 0;
    CFDictionaryRef v10 = 0;
    int v11 = -6756;
    goto LABEL_36;
  }
  if (CFStringCompare(v16, @"mirror", 0))
  {
    if (CFStringCompare(v16, @"photo", 0))
    {
      if (CFStringCompare(v16, @"slideshow", 0))
      {
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v9 = 0;
        CFDictionaryRef v10 = 0;
        int v11 = -6705;
        goto LABEL_36;
      }
      uint64_t v18 = (unsigned char *)(a1 + 146);
    }
    else
    {
      uint64_t v18 = (unsigned char *)(a1 + 145);
    }
  }
  else
  {
    uint64_t v18 = (unsigned char *)(a1 + 144);
  }
  if (*(_DWORD *)(a1 + 128) && *(void *)(a1 + 120) != Int64)
  {
    if (*(unsigned char *)(a1 + 56))
    {
      if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
        || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopPresentation", (uint64_t)"{%kO=%i%kO=%O}");
    _AirPlayReceiverUI_CleanupPresentation(a1, 1, 0);
  }
  if (*(_DWORD *)(a1 + 160) && !*(unsigned char *)(a1 + 164) && (!v14 || *(void *)(a1 + 152) != Int64))
  {
    if (*(unsigned char *)(a1 + 56))
    {
      if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
        || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_69;
      }
LABEL_68:
      LogPrintF();
LABEL_69:
      CFDictionaryRef v10 = 0;
      uint64_t v9 = 0;
      HIDWORD(v41) = 200453;
      goto LABEL_103;
    }
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopVideo", (uint64_t)"{%kO=%i%kO=%O}");
  }
  if (v13)
  {
    int v20 = *(_DWORD *)(a1 + 112);
    if (v20 && *(void *)(a1 + 104) != Int64)
    {
      if (!*(unsigned char *)(a1 + 56)) {
        goto LABEL_70;
      }
      goto LABEL_66;
    }
    if (*(_DWORD *)(a1 + 160) && *(void *)(a1 + 152) != Int64 && *(unsigned char *)(a1 + 164))
    {
      if (!*(unsigned char *)(a1 + 56))
      {
        if (!v20)
        {
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v21 = "stopVideo";
LABEL_82:
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)v21, (uint64_t)"{%kO=%i%kO=%O}");
          goto LABEL_83;
        }
LABEL_70:
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v21 = "stopAudio";
        goto LABEL_82;
      }
LABEL_66:
      if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
        || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_69;
      }
      goto LABEL_68;
    }
  }
LABEL_83:
  long long v36 = v18;
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v23 = Int64;
  if (v22)
  {
    uint64_t v9 = 0;
    goto LABEL_85;
  }
  int v25 = *(_DWORD *)(a1 + 96);
  *(_DWORD *)(a1 + 96) = v25 + 1;
  LODWORD(v41) = v25 + 1;
  if (v25 == -1)
  {
    *(_DWORD *)(a1 + 96) = 1;
    LODWORD(v41) = 1;
  }
  CFDictionarySetNumber();
  CAContextForRemoteHosting = (void *)CreateCAContextForRemoteHosting();
  uint64_t v9 = CAContextForRemoteHosting;
  if (!CAContextForRemoteHosting)
  {
    APSLogErrorAt();
    CFDictionaryRef v10 = 0;
    goto LABEL_119;
  }
  objc_msgSend((id)objc_msgSend(CAContextForRemoteHosting, "layer"), "setName:", @"AirPlayReceiverUI_ClientLayer");
  objc_msgSend((id)objc_msgSend(v9, "layer"), "setEdgeAntialiasingMask:", 0);
  [MEMORY[0x263F158F8] flush];
  [MEMORY[0x263F158F8] synchronize];
  xpc_object_t v27 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v27, "function", "startPresentation");
  xpc_dictionary_set_cf_object();
  xpc_dictionary_set_uint64(v27, "presentationContextID", [v9 contextId]);
  int v28 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v27, &xdict);
  HIDWORD(v41) = v28;
  xpc_release(v27);
  if (v28)
  {
    APSLogErrorAt();
    CFDictionaryRef v10 = 0;
LABEL_124:
    CFDictionaryRef v6 = (_DWORD *)&unk_268401000;
    goto LABEL_37;
  }
  CFDictionaryRef v10 = (const __CFDictionary *)xpc_dictionary_copy_cf_object();
  if (HIDWORD(v41))
  {
    APSLogErrorAt();
    CFDictionaryRef v6 = (_DWORD *)&unk_268401000;
    if (!HIDWORD(v41)) {
      goto LABEL_103;
    }
    goto LABEL_37;
  }
  string = xpc_dictionary_get_string(xdict, "presentationFrame");
  if (!string)
  {
    APSLogErrorAt();
    HIDWORD(v41) = -6712;
    goto LABEL_124;
  }
  sscanf(string, "%f,%f,%f,%f", (char *)&v39 + 4, &v39, (char *)&v38 + 4, &v38);
  double v30 = *((float *)&v39 + 1);
  double v31 = *(float *)&v39;
  double v32 = *((float *)&v38 + 1);
  double v33 = *(float *)&v38;
  [MEMORY[0x263F158F8] begin];
  [MEMORY[0x263F158F8] setDisableActions:1];
  objc_msgSend((id)objc_msgSend(v9, "layer"), "setFrame:", v30, v31, v32, v33);
  [MEMORY[0x263F158F8] commit];
  *(void *)(a1 + 136) = v9;
  *(void *)(a1 + 120) = v23;
  *(_DWORD *)(a1 + 128) = v41;
  if (v10)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutableCopy(0, 0, v10);
    CFDictionaryRef v6 = (_DWORD *)&unk_268401000;
    if (Mutable) {
      goto LABEL_86;
    }
    goto LABEL_96;
  }
  CFDictionaryRef v6 = (_DWORD *)&unk_268401000;
LABEL_85:
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  CFDictionaryRef v10 = 0;
  if (!Mutable)
  {
LABEL_96:
    APSLogErrorAt();
LABEL_119:
    HIDWORD(v41) = -6700;
    goto LABEL_37;
  }
LABEL_86:
  CFDictionarySetValue(Mutable, @"presentationContext", *(const void **)(a1 + 136));
  CFDictionarySetNumber();
  if (v37) {
    *long long v37 = Mutable;
  }
  else {
    CFRelease(Mutable);
  }
  unsigned char *v36 = 1;
  int v34 = v6[956];
  if (v34 <= 50 && (v34 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  HIDWORD(v41) = 0;
LABEL_103:

  if (xdict) {
    xpc_release(xdict);
  }
  if (v8) {
    CFRelease(v8);
  }
  if (v10) {
    CFRelease(v10);
  }
  return HIDWORD(v41);
}

uint64_t AirPlayReceiverUI_StopPresentation(uint64_t a1, const __CFDictionary *a2)
{
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    uint64_t v11 = 4294960551;
    goto LABEL_49;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  if (a2)
  {
    CFDictionaryGetInt64();
    int Int64 = CFDictionaryGetInt64();
    CFDictionaryRef Value = (__CFString *)CFDictionaryGetValue(a2, @"presentationType");
    int v6 = Int64;
  }
  else
  {
    int v6 = 0;
    CFDictionaryRef Value = 0;
  }
  if (Value) {
    xpc_object_t v7 = Value;
  }
  else {
    xpc_object_t v7 = @"photo";
  }
  CFTypeID v8 = CFGetTypeID(v7);
  if (v8 != CFStringGetTypeID())
  {
    APSLogErrorAt();
    uint64_t v11 = 4294960540;
    goto LABEL_49;
  }
  if (CFEqual(v7, @"mirror"))
  {
    uint64_t v9 = (unsigned char *)(a1 + 144);
    if (v6) {
      goto LABEL_25;
    }
    goto LABEL_26;
  }
  if (CFEqual(v7, @"photo"))
  {
    uint64_t v9 = (unsigned char *)(a1 + 145);
    if (v6) {
      goto LABEL_25;
    }
    goto LABEL_26;
  }
  if (CFEqual(v7, @"slideshow"))
  {
    uint64_t v9 = (unsigned char *)(a1 + 146);
    if (v6)
    {
LABEL_25:
      if (v6 != *(_DWORD *)(a1 + 128))
      {
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
    }
LABEL_26:
    BOOL v10 = !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128) && *(_DWORD *)(a1 + 160) == 0;
    *uint64_t v9 = 0;
    if (!*(unsigned char *)(a1 + 144) && !*(unsigned char *)(a1 + 145) && !*(unsigned char *)(a1 + 146)) {
      _AirPlayReceiverUI_CleanupPresentation(a1, 1, (uint64_t)a2);
    }
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!v10 && !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128) && !*(_DWORD *)(a1 + 160)) {
      _AirPlayReceiverUI_ActiveSessionsStopped(a1);
    }
    return 0;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore > 60) {
    return 4294960591;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()) {
    LogPrintF();
  }
  uint64_t v11 = 4294960591;
LABEL_49:
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v11;
}

uint64_t AirPlayReceiverUI_StartAudio(uint64_t a1, CFDictionaryRef theDict, CFMutableDictionaryRef *a3)
{
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v21 = 0;
  xpc_object_t object = 0;
  if (!a1)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef v7 = 0;
    uint64_t v10 = 4294960551;
    goto LABEL_89;
  }
  if (!*(unsigned char *)(a1 + 40))
  {
    uint64_t v10 = 0;
    CFMutableDictionaryRef v7 = 0;
    goto LABEL_73;
  }
  if (theDict) {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(0, 0, theDict);
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  }
  CFMutableDictionaryRef v7 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    uint64_t v10 = 4294960568;
    goto LABEL_89;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t v9 = Int64;
  if (!*(unsigned char *)(a1 + 144) || !*(_DWORD *)(a1 + 128) || *(void *)(a1 + 120) == Int64)
  {
LABEL_25:
    if (*(_DWORD *)(a1 + 160) && *(void *)(a1 + 152) != v9 && !*(unsigned char *)(a1 + 164))
    {
      if (*(unsigned char *)(a1 + 56))
      {
        uint64_t v10 = 200453;
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_54;
        }
        goto LABEL_73;
      }
      if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
        && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopVideo", (uint64_t)"{%kO=%i%kO=%O}");
    }
    int v11 = *(_DWORD *)(a1 + 112);
    if (v11 && *(void *)(a1 + 104) != v9)
    {
      if (!*(unsigned char *)(a1 + 56)) {
        goto LABEL_42;
      }
    }
    else
    {
      if (!*(_DWORD *)(a1 + 160) || *(void *)(a1 + 152) == v9 || !*(unsigned char *)(a1 + 164)) {
        goto LABEL_58;
      }
      if (!*(unsigned char *)(a1 + 56))
      {
        if (!v11)
        {
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          xpc_object_t v12 = "stopVideo";
LABEL_57:
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)v12, (uint64_t)"{%kO=%i%kO=%O}");
LABEL_58:
          *(void *)(a1 + 104) = v9;
          int v13 = *(_DWORD *)(a1 + 96);
          int v14 = v13 + 1;
          *(_DWORD *)(a1 + 96) = v13 + 1;
          int v21 = v13 + 1;
          if (v13 == -1)
          {
            *(_DWORD *)(a1 + 96) = 1;
            int v21 = 1;
            int v14 = 1;
          }
          *(_DWORD *)(a1 + 112) = v14;
          CFDictionarySetNumber();
          xpc_object_t v15 = xpc_dictionary_create(0, 0, 0);
          xpc_dictionary_set_string(v15, "function", "startAudio");
          xpc_dictionary_set_cf_object();
          uint64_t v10 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v15, &object);
          xpc_release(v15);
          if (!v10)
          {
            CFDictionaryRef v16 = (const __CFDictionary *)xpc_dictionary_copy_cf_object();
            if (v16)
            {
              CFDictionaryRef v17 = v16;
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutableCopy(0, 0, v16);
              CFRelease(v17);
              if (!Mutable) {
                goto LABEL_88;
              }
            }
            else
            {
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!Mutable)
              {
LABEL_88:
                APSLogErrorAt();
                uint64_t v10 = 4294960596;
                goto LABEL_89;
              }
            }
            CFDictionarySetNumber();
            if (a3) {
              *a3 = Mutable;
            }
            else {
              CFRelease(Mutable);
            }
            if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
              && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            uint64_t v10 = 0;
            goto LABEL_73;
          }
          APSLogErrorAt();
LABEL_89:
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            goto LABEL_54;
          }
          goto LABEL_73;
        }
LABEL_42:
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        xpc_object_t v12 = "stopAudio";
        goto LABEL_57;
      }
    }
    uint64_t v10 = 200453;
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_54;
    }
    goto LABEL_73;
  }
  if (!*(unsigned char *)(a1 + 56))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopPresentation", (uint64_t)"{%kO=%i%kO=%O}");
    goto LABEL_25;
  }
  uint64_t v10 = 200453;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
LABEL_54:
    LogPrintF();
  }
LABEL_73:
  if (object) {
    xpc_release(object);
  }
  if (v7) {
    CFRelease(v7);
  }
  return v10;
}

uint64_t AirPlayReceiverUI_StopAudio(uint64_t a1, uint64_t a2)
{
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960551;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  if (!a2)
  {
    if (!*(_DWORD *)(a1 + 112)) {
      goto LABEL_15;
    }
LABEL_12:
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  CFDictionaryGetInt64();
  int Int64 = CFDictionaryGetInt64();
  if (*(_DWORD *)(a1 + 112) != Int64) {
    goto LABEL_12;
  }
  if (Int64)
  {
LABEL_16:
    BOOL v5 = 0;
    goto LABEL_20;
  }
LABEL_15:
  if (*(_DWORD *)(a1 + 128)) {
    goto LABEL_16;
  }
  BOOL v5 = *(_DWORD *)(a1 + 160) == 0;
LABEL_20:
  xpc_object_t v6 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v6, "function", "stopAudio");
  if (a2) {
    xpc_dictionary_set_cf_object();
  }
  uint64_t v7 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v6, 0);
  xpc_release(v6);
  if (v7)
  {
    APSLogErrorAt();
    return v7;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  if (!v5)
  {
    if (!*(_DWORD *)(a1 + 128) && !*(_DWORD *)(a1 + 160)) {
      _AirPlayReceiverUI_ActiveSessionsStopped(a1);
    }
    return 0;
  }
  return v7;
}

uint64_t AirPlayReceiverUI_UpdateAudioMetaData(uint64_t a1)
{
  if (a1)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_string(v2, "function", "updateAudioMetaData");
      xpc_dictionary_set_cf_object();
      uint64_t v3 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v2, 0);
      xpc_release(v2);
      if (v3) {
        APSLogErrorAt();
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960551;
  }
  return v3;
}

uint64_t AirPlayReceiverUI_UpdateAudioProgress(uint64_t a1, double a2, double a3)
{
  if (a1)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      xpc_object_t v6 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_string(v6, "function", "updateAudioProgress");
      xpc_dictionary_set_double(v6, "position", a2);
      xpc_dictionary_set_double(v6, "duration", a3);
      uint64_t v7 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v6, 0);
      xpc_release(v6);
      if (v7) {
        APSLogErrorAt();
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960551;
  }
  return v7;
}

uint64_t AirPlayReceiverUI_StartVideo(uint64_t a1, uint64_t a2, uint64_t a3, CFDictionaryRef theDict, CFMutableDictionaryRef *a5)
{
  int v33 = 0;
  xpc_object_t object = 0;
  if (!a1)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef v10 = 0;
    uint64_t v15 = 4294960551;
    goto LABEL_118;
  }
  if (!*(unsigned char *)(a1 + 40))
  {
    uint64_t v15 = 0;
    CFMutableDictionaryRef v10 = 0;
    goto LABEL_104;
  }
  if (theDict) {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(0, 0, theDict);
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  }
  CFMutableDictionaryRef v10 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    uint64_t v15 = 4294960568;
    goto LABEL_118;
  }
  uint64_t v30 = a3;
  uint64_t Int64 = CFDictionaryGetInt64();
  CFStringGetTypeID();
  TypedCFDictionaryRef Value = (__CFString *)CFDictionaryGetTypedValue();
  CFStringGetTypeID();
  int v13 = (__CFString *)CFDictionaryGetTypedValue();
  double v31 = a5;
  if (CFDictionaryGetInt64() || v13 == @"music")
  {
    BOOL v14 = 1;
  }
  else if (v13)
  {
    BOOL v14 = CFEqual(v13, @"music") != 0;
  }
  else
  {
    BOOL v14 = 0;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!TypedValue || !CFEqual(@"default", TypedValue) && !CFEqual(@"moviePlayback", TypedValue))
  {
    if (!v14
      && (!v13
       || v13 == @"movie"
       || CFEqual(v13, @"movie")
       || v13 == @"tvshow"
       || CFEqual(v13, @"tvshow")))
    {
      TypedCFDictionaryRef Value = @"moviePlayback";
    }
    else
    {
      TypedCFDictionaryRef Value = @"default";
    }
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_DWORD *)(a1 + 128) || *(void *)(a1 + 120) == Int64 || v14)
  {
LABEL_46:
    if (*(_DWORD *)(a1 + 160) && !*(unsigned char *)(a1 + 164))
    {
      if (*(unsigned char *)(a1 + 56))
      {
        uint64_t v15 = 200453;
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_65;
        }
        goto LABEL_104;
      }
      if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
        && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopVideo", (uint64_t)"{%kO=%i%kO=%O}");
    }
    int v16 = *(_DWORD *)(a1 + 112);
    if (v16 && *(void *)(a1 + 104) != Int64)
    {
      int v17 = gLogCategory_AirPlayReceiverUIXPCServerCore;
      if (!*(unsigned char *)(a1 + 56)) {
        goto LABEL_66;
      }
    }
    else
    {
      if (!*(_DWORD *)(a1 + 160) || *(void *)(a1 + 152) == Int64 || !*(unsigned char *)(a1 + 164)) {
        goto LABEL_79;
      }
      int v17 = gLogCategory_AirPlayReceiverUIXPCServerCore;
      if (!*(unsigned char *)(a1 + 56))
      {
        if (!v16)
        {
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v18 = "stopVideo";
LABEL_78:
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)v18, (uint64_t)"{%kO=%i%kO=%O}");
LABEL_79:
          *(void *)(a1 + 184) = a2;
          *(void *)(a1 + 192) = v30;
          *(void *)(a1 + 152) = Int64;
          int v19 = *(_DWORD *)(a1 + 96);
          int v20 = v19 + 1;
          *(_DWORD *)(a1 + 96) = v19 + 1;
          int v33 = v19 + 1;
          if (v19 == -1)
          {
            *(_DWORD *)(a1 + 96) = 1;
            int v33 = 1;
            int v20 = 1;
          }
          *(_DWORD *)(a1 + 160) = v20;
          *(unsigned char *)(a1 + 164) = v14;
          int v21 = *(const void **)(a1 + 168);
          CFRetain(TypedValue);
          *(void *)(a1 + 168) = TypedValue;
          if (v21) {
            CFRelease(v21);
          }
          CFDictionarySetNumber();
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"startingVideo", (uint64_t)"{%kO=%O}");
          xpc_object_t v22 = xpc_dictionary_create(0, 0, 0);
          xpc_dictionary_set_string(v22, "function", "startVideo");
          xpc_dictionary_set_cf_object();
          uint64_t v15 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v22, &object);
          xpc_release(v22);
          if (!v15)
          {
            CFDictionaryRef v23 = (const __CFDictionary *)xpc_dictionary_copy_cf_object();
            if (v23)
            {
              CFDictionaryRef v24 = v23;
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutableCopy(0, 0, v23);
              CFRelease(v24);
              if (!Mutable) {
                goto LABEL_117;
              }
            }
            else
            {
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!Mutable)
              {
LABEL_117:
                APSLogErrorAt();
                uint64_t v15 = 4294960596;
                goto LABEL_118;
              }
            }
            CFDictionarySetNumber();
            if (v31) {
              *double v31 = Mutable;
            }
            else {
              CFRelease(Mutable);
            }
            if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
              && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            uint64_t v26 = CFDictionaryGetInt64();
            int v27 = v26 != 0;
            if (*(unsigned __int8 *)(a1 + 176) == v27)
            {
              uint64_t v15 = 0;
            }
            else
            {
              int v28 = *(uint64_t ***)(a1 + 48);
              if (v26)
              {
                for (; v28; int v28 = (uint64_t **)*v28)
                  ((void (*)(const char *, void, uint64_t *))v28[2])("startPlayingOverP2P", 0, v28[3]);
              }
              else
              {
                for (; v28; int v28 = (uint64_t **)*v28)
                  ((void (*)(const char *, void, uint64_t *))v28[2])("stopPlayingOverP2P", 0, v28[3]);
              }
              uint64_t v15 = 0;
              *(unsigned char *)(a1 + 176) = v27;
            }
            goto LABEL_104;
          }
          APSLogErrorAt();
LABEL_118:
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            goto LABEL_65;
          }
          goto LABEL_104;
        }
LABEL_66:
        if (v17 <= 50 && (v17 != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        uint64_t v18 = "stopAudio";
        goto LABEL_78;
      }
    }
    uint64_t v15 = 200453;
    if (v17 <= 50 && (v17 != -1 || _LogCategory_Initialize())) {
      goto LABEL_65;
    }
    goto LABEL_104;
  }
  if (!*(unsigned char *)(a1 + 56))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopPresentation", (uint64_t)"{%kO=%i%kO=%O}");
    goto LABEL_46;
  }
  uint64_t v15 = 200453;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
LABEL_65:
    LogPrintF();
  }
LABEL_104:
  if (object) {
    xpc_release(object);
  }
  if (v10) {
    CFRelease(v10);
  }
  return v15;
}

uint64_t AirPlayReceiverUI_StopVideo(uint64_t a1, const __CFDictionary *a2)
{
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960551;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  if (a2)
  {
    CFDictionaryGetInt64();
    int Int64 = CFDictionaryGetInt64();
  }
  else
  {
    int Int64 = 0;
  }
  if (Int64 != *(_DWORD *)(a1 + 160))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  for (CFIndex i = *(uint64_t ***)(a1 + 48); i; CFIndex i = (uint64_t **)*i)
    ((void (*)(const char *, void, uint64_t *))i[2])("stoppingVideo", 0, i[3]);
  BOOL v6 = !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128) && *(_DWORD *)(a1 + 160) == 0;
  if (*(unsigned char *)(a1 + 144))
  {
    if (a2) {
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(0, 0, a2);
    }
    else {
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    }
    a2 = MutableCopy;
    if (!MutableCopy)
    {
      APSLogErrorAt();
      return 4294960568;
    }
    CFDictionarySetValue(MutableCopy, @"closeAll", (const void *)*MEMORY[0x263EFFB40]);
    CFDictionaryRef v8 = a2;
  }
  else
  {
    CFDictionaryRef v8 = 0;
  }
  xpc_object_t v9 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v9, "function", "stopVideo");
  if (a2) {
    xpc_dictionary_set_cf_object();
  }
  uint64_t v10 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v9, 0);
  xpc_release(v9);
  if (v10)
  {
    APSLogErrorAt();
    if (!v8) {
      return v10;
    }
    goto LABEL_44;
  }
  if (*(unsigned char *)(a1 + 176))
  {
    for (j = *(uint64_t ***)(a1 + 48); j; j = (uint64_t **)*j)
      ((void (*)(const char *, void, uint64_t *))j[2])("stopPlayingOverP2P", 0, j[3]);
    *(unsigned char *)(a1 + 176) = 0;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 164) = 0;
  if (!v6 && !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128)) {
    _AirPlayReceiverUI_ActiveSessionsStopped(a1);
  }
  if (v8) {
LABEL_44:
  }
    CFRelease(v8);
  return v10;
}

uint64_t AirPlayReceiverUI_EnsurePINVisible(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 56)) {
    goto LABEL_13;
  }
  if (*(_DWORD *)(a1 + 112))
  {
    if (*(void *)(a1 + 104) != a3) {
      goto LABEL_24;
    }
    if (!*(_DWORD *)(a1 + 128)) {
      goto LABEL_11;
    }
LABEL_8:
    if (*(void *)(a1 + 120) != a3) {
      goto LABEL_24;
    }
    goto LABEL_11;
  }
  if (*(_DWORD *)(a1 + 128)) {
    goto LABEL_8;
  }
  if (!*(_DWORD *)(a1 + 160)) {
    goto LABEL_13;
  }
LABEL_11:
  if (!*(_DWORD *)(a1 + 160) || *(void *)(a1 + 152) == a3)
  {
LABEL_13:
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      CFMutableDictionaryRef v5 = Mutable;
      CFDictionarySetCString();
      CFDictionarySetCString();
      uint64_t v6 = mach_absolute_time();
      uint64_t v7 = *(void *)(a1 + 88);
      unint64_t v8 = SecondsToUpTicks();
      xpc_object_t v9 = *(const void **)(a1 + 72);
      CFRetain(v5);
      *(void *)(a1 + 72) = v5;
      if (v9) {
        CFRelease(v9);
      }
      uint64_t v10 = *(NSObject **)(a1 + 64);
      if (v10)
      {
        dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
        dispatch_release(v10);
        *(void *)(a1 + 64) = 0;
      }
      int v11 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, MEMORY[0x263EF83A0]);
      *(void *)(a1 + 64) = v11;
      if (v11)
      {
        unint64_t v12 = v6 - v7;
        dispatch_set_context(v11, (void *)a1);
        dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 64), (dispatch_function_t)_ShowPINTimerFired);
        int v13 = *(NSObject **)(a1 + 64);
        if (v12 >= v8) {
          int64_t v14 = 1000000000;
        }
        else {
          int64_t v14 = 3000000000;
        }
        dispatch_time_t v15 = dispatch_time(0, v14);
        dispatch_source_set_timer(v13, v15, 0x7FFFFFFFFFFFFFFFuLL, 0x3B9ACA00uLL);
        dispatch_resume(*(dispatch_object_t *)(a1 + 64));
        uint64_t v16 = 0;
      }
      else
      {
        APSLogErrorAt();
        uint64_t v16 = 4294960596;
      }
      CFRelease(v5);
    }
    else
    {
      APSLogErrorAt();
      return 4294960568;
    }
    return v16;
  }
LABEL_24:
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294960575;
}

void _ShowPINTimerFired(uint64_t a1)
{
  xpc_object_t v2 = *(NSObject **)(a1 + 64);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
    dispatch_release(v2);
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3)
  {
    if (!AirPlayReceiverUI_Perform(a1, @"showPIN", v3, 0))
    {
      *(unsigned char *)(a1 + 80) = 1;
      *(void *)(a1 + 88) = mach_absolute_time();
    }
    CFRelease(*(CFTypeRef *)(a1 + 72));
    *(void *)(a1 + 72) = 0;
  }
}

uint64_t AirPlayReceiverUI_EnsurePINHidden(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  xpc_object_t v2 = *(NSObject **)(a1 + 64);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
    dispatch_release(v2);
    *(void *)(a1 + 64) = 0;
  }
  if (!*(unsigned char *)(a1 + 80)) {
    return 0;
  }
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = mach_absolute_time();

  return AirPlayReceiverUI_Perform(a1, @"hidePIN", 0, 0);
}

uint64_t AirPlayReceiverUI_UpdateStatus(uint64_t a1, unsigned __int8 a2)
{
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  if (a2 < gLogCategory_AirPlayReceiverUIVisualStatus
    || gLogCategory_AirPlayReceiverUIVisualStatus == -1 && !_LogCategory_Initialize())
  {
    return 0;
  }
  VASPrintF();
  APSLogErrorAt();
  return 4294960596;
}

uint64_t APReceiverUIControllerGetShared()
{
  if (APReceiverUIControllerGetShared_once != -1) {
    dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_3190);
  }
  return APReceiverUIControllerGetShared_ui;
}

void __APReceiverUIControllerGetShared_block_invoke()
{
  if (AirPlayReceiverUI_GetShared_once != -1) {
    dispatch_once(&AirPlayReceiverUI_GetShared_once, &__block_literal_global_2818);
  }
  uint64_t v0 = AirPlayReceiverUI_GetShared_ui;
  if (!AirPlayReceiverUI_GetShared_ui)
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
      || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_14;
    }
LABEL_12:
    LogPrintF();
    goto LABEL_14;
  }
  if (APReceiverUIControllerGetClassID_once != -1) {
    dispatch_once(&APReceiverUIControllerGetClassID_once, &__block_literal_global_3604);
  }
  if (CMDerivedObjectCreate())
  {
    APSLogErrorAt();
    goto LABEL_14;
  }
  *(void *)CMBaseObjectGetDerivedStorage() = v0;
  int v1 = malloc_type_calloc(1uLL, 0x20uLL, 0xB004060A01B80uLL);
  if (v1)
  {
    xpc_object_t v2 = v1;
    uint64_t v3 = strdup("APReceiverUIControllerShared");
    v2[1] = v3;
    if (v3)
    {
      void v2[2] = sharedUI_HandleUIEvent;
      v2[3] = 0;
      *xpc_object_t v2 = *(void *)(v0 + 48);
      *(void *)(v0 + 48) = v2;
    }
    else
    {
      APSLogErrorAt();
      free(v2);
    }
  }
  else
  {
    APSLogErrorAt();
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_12;
  }
LABEL_14:
  APReceiverUIControllerGetShared_uCFIndex i = 0;
}

uint64_t sharedUI_HandleUIEvent(char *cStr)
{
  CFStringRef v1 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], cStr, 0x8000100u);
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (v1) {
    CFRelease(v1);
  }
  return 0;
}

uint64_t sharedUI_SetPropertyWithQualifier(uint64_t a1, const __CFString *a2, uint64_t a3, const void *a4)
{
  uint64_t v11 = 0;
  unint64_t v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    uint64_t v8 = AirPlayReceiverUI_SetProperty(*DerivedStorage, a2, a3, a4);
    *((_DWORD *)v12 + 6) = v8;
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_SetPropertyWithQualifier_block_invoke;
    block[3] = &unk_264895A10;
    block[4] = &v11;
    void block[5] = DerivedStorage;
    void block[6] = a2;
    void block[7] = a3;
    void block[8] = a4;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    uint64_t v8 = *((unsigned int *)v12 + 6);
  }
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_CopyPropertyForQualifier(uint64_t a1, uint64_t a2, uint64_t a3, NSObject ***a4)
{
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  uint64_t v11 = 0;
  unint64_t v12 = (int *)&v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  if (pthread_main_np())
  {
    *a4 = AirPlayReceiverUI_CopyProperty(*DerivedStorage, a2, a3, v12 + 6);
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_CopyPropertyForQualifier_block_invoke;
    block[3] = &unk_2648959E8;
    void block[6] = DerivedStorage;
    void block[7] = a2;
    void block[8] = a3;
    block[4] = &v11;
    void block[5] = a4;
    dispatch_sync(MEMORY[0x263EF83A0], block);
  }
  uint64_t v8 = v12[6];
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_ControlVideoPlaybackV1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v11 = 0;
  unint64_t v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    uint64_t v8 = AirPlayReceiverUI_Perform(*DerivedStorage, a2, a3, a4);
    *((_DWORD *)v12 + 6) = v8;
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_ControlVideoPlaybackV1_block_invoke;
    block[3] = &unk_2648959C0;
    block[4] = &v11;
    void block[5] = DerivedStorage;
    void block[6] = a2;
    void block[7] = a3;
    void block[8] = a4;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    uint64_t v8 = *((unsigned int *)v12 + 6);
  }
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_StopVideoPlaybackV1(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2000000000;
  int v10 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    uint64_t v4 = AirPlayReceiverUI_StopVideo(*DerivedStorage, a2);
    *((_DWORD *)v8 + 6) = v4;
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_StopVideoPlaybackV1_block_invoke;
    block[3] = &unk_264895998;
    block[4] = &v7;
    void block[5] = DerivedStorage;
    void block[6] = a2;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    uint64_t v4 = *((unsigned int *)v8 + 6);
  }
  _Block_object_dispose(&v7, 8);
  return v4;
}

uint64_t sharedUI_StartVideoPlaybackV1(uint64_t a1, uint64_t a2, uint64_t a3, const __CFDictionary *a4, CFMutableDictionaryRef *a5)
{
  uint64_t v13 = 0;
  int v14 = &v13;
  uint64_t v15 = 0x2000000000;
  int v16 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    uint64_t started = AirPlayReceiverUI_StartVideo(*DerivedStorage, a2, a3, a4, a5);
    *((_DWORD *)v14 + 6) = started;
  }
  else
  {
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 0x40000000;
    v12[2] = __sharedUI_StartVideoPlaybackV1_block_invoke;
    v12[3] = &unk_264895970;
    v12[4] = &v13;
    v12[5] = DerivedStorage;
    v12[6] = a2;
    v12[7] = a3;
    v12[8] = a4;
    v12[9] = a5;
    dispatch_sync(MEMORY[0x263EF83A0], v12);
    uint64_t started = *((unsigned int *)v14 + 6);
  }
  _Block_object_dispose(&v13, 8);
  return started;
}

uint64_t sharedUI_StopSession(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = 0;
  int v10 = &v9;
  uint64_t v11 = 0x2000000000;
  int v12 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    uint64_t v4 = (uint64_t *)DerivedStorage;
    if (pthread_main_np())
    {
      int v5 = AirPlayReceiverUI_StopAudio(*v4, a2);
      *((_DWORD *)v10 + 6) = v5;
    }
    else
    {
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = __sharedUI_StopSession_block_invoke;
      block[3] = &unk_264895948;
      block[4] = &v9;
      void block[5] = v4;
      void block[6] = a2;
      dispatch_sync(MEMORY[0x263EF83A0], block);
    }
  }
  uint64_t v6 = *((unsigned int *)v10 + 6);
  _Block_object_dispose(&v9, 8);
  return v6;
}

uint64_t sharedUI_StartSession(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t v11 = 0;
  int v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    uint64_t v6 = (uint64_t *)DerivedStorage;
    if (pthread_main_np())
    {
      int started = AirPlayReceiverUI_StartAudio(*v6, a2, a3);
      *((_DWORD *)v12 + 6) = started;
    }
    else
    {
      v10[0] = MEMORY[0x263EF8330];
      v10[1] = 0x40000000;
      v10[2] = __sharedUI_StartSession_block_invoke;
      v10[3] = &unk_264895920;
      v10[4] = &v11;
      v10[5] = v6;
      v10[6] = a2;
      v10[7] = a3;
      dispatch_sync(MEMORY[0x263EF83A0], v10);
    }
  }
  uint64_t v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_StopScreenPresentation(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v11 = 0;
  int v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  if (a2) {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v4, 0, a2);
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(v4, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  }
  CFDictionaryRef v6 = MutableCopy;
  CFDictionarySetValue(MutableCopy, @"presentationType", @"mirror");
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!pthread_main_np())
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_StopScreenPresentation_block_invoke;
    block[3] = &unk_2648958F8;
    block[4] = &v11;
    void block[5] = DerivedStorage;
    void block[6] = v6;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    if (!v6) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  int v7 = AirPlayReceiverUI_StopPresentation(*DerivedStorage, v6);
  *((_DWORD *)v12 + 6) = v7;
  if (v6) {
LABEL_10:
  }
    CFRelease(v6);
LABEL_11:
  uint64_t v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_StartScreenPresentation(uint64_t a1, const __CFDictionary *a2, __CFDictionary **a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2000000000;
  int v17 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  if (a2) {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v6, 0, a2);
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(v6, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  }
  uint64_t v8 = MutableCopy;
  uint64_t v9 = (const void *)*MEMORY[0x263EFFB40];
  CFDictionarySetValue(MutableCopy, @"hasAudio", (const void *)*MEMORY[0x263EFFB40]);
  CFDictionarySetValue(v8, @"presentationType", @"mirror");
  CFDictionarySetValue(v8, @"hijackAware", v9);
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!pthread_main_np())
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_StartScreenPresentation_block_invoke;
    block[3] = &unk_2648958D0;
    block[4] = &v14;
    void block[5] = DerivedStorage;
    void block[6] = v8;
    void block[7] = a3;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    if (!v8) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  int started = AirPlayReceiverUI_StartPresentation(*DerivedStorage, v8, a3);
  *((_DWORD *)v15 + 6) = started;
  if (v8) {
LABEL_10:
  }
    CFRelease(v8);
LABEL_11:
  uint64_t v11 = *((unsigned int *)v15 + 6);
  _Block_object_dispose(&v14, 8);
  return v11;
}

uint64_t sharedUI_ShowMessage(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2000000000;
  int v13 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= a2
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (pthread_main_np())
  {
    uint64_t updated = AirPlayReceiverUI_UpdateStatus(*DerivedStorage, a2);
    *((_DWORD *)v11 + 6) = updated;
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_ShowMessage_block_invoke;
    block[3] = &unk_2648958A8;
    block[4] = &v10;
    void block[5] = DerivedStorage;
    int v9 = a2;
    void block[6] = a3;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    uint64_t updated = *((unsigned int *)v11 + 6);
  }
  _Block_object_dispose(&v10, 8);
  return updated;
}

uint64_t sharedUI_HidePIN()
{
  uint64_t v4 = 0;
  int v5 = &v4;
  uint64_t v6 = 0x2000000000;
  int v7 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (pthread_main_np())
  {
    uint64_t v1 = AirPlayReceiverUI_EnsurePINHidden(*DerivedStorage);
    *((_DWORD *)v5 + 6) = v1;
  }
  else
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 0x40000000;
    v3[2] = __sharedUI_HidePIN_block_invoke;
    v3[3] = &unk_264895880;
    v3[4] = &v4;
    v3[5] = DerivedStorage;
    dispatch_sync(MEMORY[0x263EF83A0], v3);
    uint64_t v1 = *((unsigned int *)v5 + 6);
  }
  _Block_object_dispose(&v4, 8);
  return v1;
}

uint64_t sharedUI_ShowPIN(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (pthread_main_np())
  {
    uint64_t v8 = AirPlayReceiverUI_EnsurePINVisible(*DerivedStorage, a2, a3);
    *((_DWORD *)v12 + 6) = v8;
  }
  else
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __sharedUI_ShowPIN_block_invoke;
    block[3] = &unk_264895858;
    block[4] = &v11;
    void block[5] = DerivedStorage;
    void block[6] = a2;
    void block[7] = a3;
    void block[8] = a4;
    dispatch_sync(MEMORY[0x263EF83A0], block);
    uint64_t v8 = *((unsigned int *)v12 + 6);
  }
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_SetProperty(uint64_t a1, const __CFString *a2, const void *a3)
{
  uint64_t v18 = 0;
  int v19 = &v18;
  uint64_t v20 = 0x2000000000;
  int v21 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(a2, @"ClientName")
    && !CFEqual(a2, @"IsWiredLink")
    && !CFEqual(a2, @"IsP2PWiFi")
    && !CFEqual(a2, @"SessionReceiverAddress"))
  {
    if (CFEqual(a2, @"AudioMetadata"))
    {
      if (pthread_main_np())
      {
        int updated = AirPlayReceiverUI_UpdateAudioMetaData(*DerivedStorage);
LABEL_23:
        *((_DWORD *)v19 + 6) = updated;
        goto LABEL_13;
      }
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 0x40000000;
      v17[2] = __sharedUI_SetProperty_block_invoke;
      v17[3] = &unk_2648957E0;
      v17[4] = &v18;
      v17[5] = DerivedStorage;
      v17[6] = a3;
      uint64_t v13 = MEMORY[0x263EF83A0];
      int v14 = v17;
    }
    else if (CFEqual(a2, @"AudioProgress"))
    {
      CFDictionaryGetDouble();
      double v10 = v9;
      CFDictionaryGetDouble();
      double v12 = v11;
      if (pthread_main_np())
      {
        int updated = AirPlayReceiverUI_UpdateAudioProgress(*DerivedStorage, v10, v12);
        goto LABEL_23;
      }
      v16[0] = MEMORY[0x263EF8330];
      v16[1] = 0x40000000;
      v16[2] = __sharedUI_SetProperty_block_invoke_2;
      v16[3] = &unk_264895808;
      v16[4] = &v18;
      v16[5] = DerivedStorage;
      *(double *)&v16[6] = v10;
      *(double *)&v16[7] = v12;
      uint64_t v13 = MEMORY[0x263EF83A0];
      int v14 = v16;
    }
    else
    {
      if (pthread_main_np())
      {
        int updated = AirPlayReceiverUI_SetProperty(*DerivedStorage, a2, 0, a3);
        goto LABEL_23;
      }
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = __sharedUI_SetProperty_block_invoke_3;
      block[3] = &unk_264895830;
      block[4] = &v18;
      void block[5] = DerivedStorage;
      void block[6] = a2;
      void block[7] = a3;
      uint64_t v13 = MEMORY[0x263EF83A0];
      int v14 = block;
    }
    dispatch_sync(v13, v14);
    goto LABEL_13;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_13:
  uint64_t v6 = *((unsigned int *)v19 + 6);
  _Block_object_dispose(&v18, 8);
  return v6;
}

uint64_t sharedUI_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  uint64_t v13 = 0;
  int v14 = &v13;
  uint64_t v15 = 0x2000000000;
  int v16 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"SBufConsumer"))
  {
    *((_DWORD *)v14 + 6) = -12784;
  }
  else
  {
    if (CFEqual(a2, @"HasActiveSession"))
    {
      uint64_t v7 = *DerivedStorage;
      if (*(_DWORD *)(*DerivedStorage + 112))
      {
        uint64_t v8 = (CFTypeRef *)MEMORY[0x263EFFB40];
      }
      else
      {
        uint64_t v8 = (CFTypeRef *)MEMORY[0x263EFFB40];
        if (!*(_DWORD *)(v7 + 128) && !*(_DWORD *)(v7 + 160)) {
          uint64_t v8 = (CFTypeRef *)MEMORY[0x263EFFB38];
        }
      }
      double v9 = (void *)CFRetain(*v8);
    }
    else
    {
      if (!pthread_main_np())
      {
        block[0] = MEMORY[0x263EF8330];
        block[1] = 0x40000000;
        block[2] = __sharedUI_CopyProperty_block_invoke;
        block[3] = &unk_2648957B8;
        void block[6] = DerivedStorage;
        void block[7] = a2;
        block[4] = &v13;
        void block[5] = a4;
        dispatch_sync(MEMORY[0x263EF83A0], block);
        goto LABEL_17;
      }
      double v9 = AirPlayReceiverUI_CopyProperty(*DerivedStorage, (uint64_t)a2, 0, (int *)v14 + 6);
    }
    *a4 = v9;
  }
LABEL_17:
  uint64_t v10 = *((unsigned int *)v14 + 6);
  _Block_object_dispose(&v13, 8);
  return v10;
}

CFStringRef sharedUI_CopyDebugDescription(const void *a1)
{
  CFAllocatorRef v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, @"<APReceiverUIControllerShared %p>", a1);
}

void sharedUI_Finalize()
{
  if (gLogCategory_AirPlayReceiverUIXPCServerCore > 100
    || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
  {
    __break(1u);
  }
  LogPrintF();
  __break(1u);
}

void rcsSenderUIEventsChannel_handleMediaDataControlFailure(uint64_t a1, int a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a3);
  uint64_t v6 = *(NSObject **)(DerivedStorage + 64);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __rcsSenderUIEventsChannel_handleMediaDataControlFailure_block_invoke;
  block[3] = &__block_descriptor_tmp_29;
  block[4] = a3;
  int v8 = a2;
  dispatch_async(v6, block);
}

void __rcsSenderUIEventsChannel_handleMediaDataControlFailure_block_invoke(uint64_t a1)
{
  rcsSenderUIEventsChannel_callDelegateHandleFailed(*(void *)(a1 + 32), *(unsigned int *)(a1 + 40));
  CFAllocatorRef v2 = *(const void **)(a1 + 32);

  CFRelease(v2);
}

void rcsSenderUIEventsChannel_callDelegateHandleFailed(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 40)) {
    return;
  }
  uint64_t v5 = DerivedStorage;
  if (*(void *)(DerivedStorage + 48))
  {
    uint64_t v6 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (!v6)
    {
      if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90
        && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
         || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  (*(void (**)(const void *, uint64_t, uint64_t))(v5 + 40))(v6, a1, a2);
  if (v6)
  {
    CFRelease(v6);
  }
}

uint64_t rcsSenderUIEventsChannel_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 30
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  if (v13)
  {
    int v14 = v13(a6, a5);
    if (!v14) {
      goto LABEL_16;
    }
  }
  else
  {
    int v14 = -12782;
  }
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_16:

  return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v14);
}

uint64_t rcsSenderUIEventsChannel_SendOutgoingMessage(const void *a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (!*(unsigned char *)(DerivedStorage + 88))
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960587;
    goto LABEL_4;
  }
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t v5 = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(v5 + 88))
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960587;
    *((_DWORD *)v12 + 6) = -6709;
    _Block_object_dispose(&v11, 8);
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  CFRetain(a1);
  CFRetain(a2);
  uint64_t v7 = *(NSObject **)(v6 + 64);
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 0x40000000;
  v10[2] = __rcsSenderUIEventsChannel_sendOutgoingMessageInternal_block_invoke;
  v10[3] = &unk_264895A58;
  v10[6] = v6;
  v10[7] = a2;
  v10[4] = &v11;
  v10[5] = a1;
  dispatch_async(v7, v10);
  uint64_t v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  if (v8) {
LABEL_7:
  }
    APSLogErrorAt();
LABEL_4:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return v8;
}

void __rcsSenderUIEventsChannel_sendOutgoingMessageInternal_block_invoke(void *a1)
{
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 40
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = a1[7];
  uint64_t v3 = *(void **)(a1[6] + 72);
  dispatch_time_t v4 = dispatch_time(0, 3000000000);
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = APMediaDataControlServerSendRequestSync(v3, v2, v4);
  if (*(_DWORD *)(*(void *)(a1[4] + 8) + 24))
  {
    APSLogErrorAt();
    uint64_t v6 = a1[4];
    if (*(_DWORD *)(*(void *)(v6 + 8) + 24))
    {
      if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90)
      {
        if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
          || (v7 = _LogCategory_Initialize(), uint64_t v6 = a1[4], v7))
        {
          LogPrintF();
          uint64_t v6 = a1[4];
        }
      }
      rcsSenderUIEventsChannel_callDelegateHandleFailed(a1[5], *(unsigned int *)(*(void *)(v6 + 8) + 24));
    }
  }
  CFRelease((CFTypeRef)a1[5]);
  uint64_t v5 = (const void *)a1[7];

  CFRelease(v5);
}

uint64_t rcsSenderUIEventsChannel_HandleIncomingMessage(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (!*(unsigned char *)(DerivedStorage + 88))
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960587;
    goto LABEL_10;
  }
  if (!a2)
  {
    APSLogErrorAt();
LABEL_22:
    uint64_t v8 = 4294960591;
    goto LABEL_10;
  }
  CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(a2, @"params");
  if (!Value)
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel > 90
      || gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel == -1
      && !_LogCategory_Initialize())
    {
      goto LABEL_22;
    }
LABEL_18:
    LogPrintF();
    goto LABEL_22;
  }
  CFDataRef v5 = (const __CFData *)CFDictionaryGetValue(Value, @"data");
  if (!v5)
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel > 90
      || gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel == -1
      && !_LogCategory_Initialize())
    {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  CFDataRef v6 = v5;
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 30
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(v6);
    LogPrintF();
  }
  CFRetain(v6);
  int v7 = *(NSObject **)(DerivedStorage + 56);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __rcsSenderUIEventsChannel_HandleIncomingMessage_block_invoke;
  block[3] = &__block_descriptor_tmp_3256;
  block[4] = DerivedStorage;
  void block[5] = v6;
  dispatch_async(v7, block);
  uint64_t v8 = 0;
LABEL_10:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return v8;
}

uint64_t rcsSenderUIEventsChannel_Start()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (*(unsigned char *)(DerivedStorage + 89) || *(unsigned char *)(DerivedStorage + 88))
  {
    APSLogErrorAt();
    uint64_t v2 = 4294960587;
LABEL_9:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
    rcsSenderUIEventsChannel_stop();
    return v2;
  }
  uint64_t v1 = *(void *)(DerivedStorage + 72);
  if (v1)
  {
    uint64_t v4 = *(void *)(DerivedStorage + 72);
    uint64_t v5 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v4, (dispatch_function_t)controlServer_startInternal);
    uint64_t v2 = v5;
    if (v5)
    {
      APSLogErrorAt();
      goto LABEL_9;
    }
  }
  *(unsigned char *)(DerivedStorage + 88) = 1;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return 0;
}

void rcsSenderUIEventsChannel_stop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(void *)(DerivedStorage + 72);
  if (v1)
  {
    v2[0] = *(void *)(DerivedStorage + 72);
    v2[1] = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), v2, (dispatch_function_t)controlServer_stopInternal);
  }
}

uint64_t CMBaseObjectNotificationBarrier_3263(uint64_t a1)
{
  uint64_t v2 = *(void **)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (*v3 < 2uLL) {
    return 4294954514;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t))v3[8];
  if (!v4) {
    return 4294954514;
  }

  return v4(a1);
}

uint64_t rcsSenderUIEventsChannel_SetProperty(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 0;
  }
  APSLogErrorAt();
  return 4294960591;
}

uint64_t rcsSenderUIEventsChannel_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (!a2 || !a4)
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960591;
    goto LABEL_7;
  }
  if (CFEqual(a2, @"RRCS::Property::SessionID"))
  {
    uint64_t SInt32 = (uint64_t)CFRetain(*(CFTypeRef *)(DerivedStorage + 16));
  }
  else
  {
    if (!CFEqual(a2, @"RRCS::Property::ListenPort"))
    {
      uint64_t v8 = 4294960569;
      goto LABEL_7;
    }
    if (!*(void *)(DerivedStorage + 72))
    {
      uint64_t SInt32 = 0;
      uint64_t v8 = 4294960561;
      goto LABEL_6;
    }
    uint64_t SInt32 = FigCFNumberCreateSInt32();
    if (!SInt32)
    {
      APSLogErrorAt();
      uint64_t v8 = 4294960568;
      goto LABEL_7;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  *a4 = SInt32;
LABEL_7:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return v8;
}

uint64_t rcsSenderUIEventsChannel_CopyDebugDescription()
{
  return CFStringCreateF();
}

uint64_t rcsSenderUIEventsChannel_Finalize()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = result;
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50)
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
      || (uint64_t result = _LogCategory_Initialize(), result))
    {
      uint64_t result = LogPrintF();
    }
  }
  if (*(unsigned char *)(v1 + 89))
  {
    uint64_t v2 = *(const void **)(v1 + 16);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(v1 + 16) = 0;
    }
    uint64_t v3 = *(const void **)(v1 + 48);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(v1 + 48) = 0;
    }
    uint64_t v4 = *(const void **)(v1 + 72);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(v1 + 72) = 0;
    }
    uint64_t v5 = *(const void **)(v1 + 80);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(v1 + 80) = 0;
    }
    CFDataRef v6 = *(NSObject **)(v1 + 56);
    if (v6)
    {
      dispatch_release(v6);
      *(void *)(v1 + 56) = 0;
    }
    int v7 = *(NSObject **)(v1 + 64);
    if (v7)
    {
      dispatch_release(v7);
      *(void *)(v1 + 64) = 0;
    }
    uint64_t result = FigSimpleMutexDestroy();
    *(void *)(v1 + 96) = 0;
  }
  else
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 100)
    {
      if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
        || (uint64_t result = _LogCategory_Initialize(), result))
      {
        uint64_t result = LogPrintF();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t rcsSenderUIEventsChannel_Invalidate()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (*(unsigned char *)(DerivedStorage + 89))
  {
    APSLogErrorAt();
    goto LABEL_9;
  }
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 88))
  {
    *(unsigned char *)(DerivedStorage + 89) = 1;
LABEL_9:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
    return 0;
  }
  *(_WORD *)(DerivedStorage + 88) = 256;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  rcsSenderUIEventsChannel_stop();
  return 0;
}

uint64_t APReceiverScreenSinkCreateAirPlay(uint64_t a1, void *a2)
{
  if (APReceiverScreenSinkCreateAirPlay_initOnce == -1)
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_17:
    APSLogErrorAt();
    return 4294895165;
  }
  dispatch_once(&APReceiverScreenSinkCreateAirPlay_initOnce, &__block_literal_global_3275);
  if (!a2) {
    goto LABEL_17;
  }
LABEL_3:
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APReceiverScreenSinkGetClassID_once != -1) {
    dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_5652);
  }
  uint64_t v3 = CMDerivedObjectCreate();
  if (v3)
  {
    uint64_t v5 = v3;
    APSLogErrorAt();
  }
  else
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    *(unsigned char *)(DerivedStorage + 179) = FigSupportsIOSurfaceTimingInfo();
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v5 = 0;
    *a2 = 0;
  }
  return v5;
}

uint64_t apsink_updateStats(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 176))
  {
    if (atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed) == *(_DWORD *)(DerivedStorage + 168))
    {
      uint64_t v4 = *(void **)DerivedStorage;
      if (*(void *)DerivedStorage)
      {
        uint64_t v5 = v4[2];
        block[0] = (CFTypeRef)MEMORY[0x263EF8330];
        block[1] = (CFTypeRef)3221225472;
        block[2] = __APReceiverStatsCollectorUpdateSenderStats_block_invoke;
        block[3] = &__block_descriptor_48_e5_v8__0l;
        block[4] = v4;
        void block[5] = a2;
        dispatch_sync(v5, block);
        if (*(_DWORD *)(DerivedStorage + 164))
        {
          block[0] = 0;
          uint64_t CMBaseObject = FigVideoQueueGetCMBaseObject();
          uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v7) {
            uint64_t v8 = v7;
          }
          else {
            uint64_t v8 = 0;
          }
          double v9 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v8 + 48);
          if (v9)
          {
            v9(CMBaseObject, *MEMORY[0x263F12500], *MEMORY[0x263EFFB08], block);
            CFTypeRef v10 = block[0];
          }
          else
          {
            CFTypeRef v10 = 0;
          }
          APReceiverStatsCollectorUpdateVideoPerformanceStats(*(void *)DerivedStorage, (uint64_t)v10);
          if (block[0]) {
            CFRelease(block[0]);
          }
        }
        APReceiverStatsCollectorShowStats(*(void *)DerivedStorage);
      }
      return 0;
    }
    else
    {
      uint64_t v11 = 4294895163;
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895164;
  }
  return v11;
}

uint64_t apsink_clearScreen(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMSampleBufferRef v15 = 0;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  if (*(unsigned char *)(DerivedStorage + 176))
  {
    if (atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed) == *(_DWORD *)(DerivedStorage + 168))
    {
      if (*(void *)(DerivedStorage + 56) <= mach_absolute_time()) {
        int64_t v3 = UpTicksToNanoseconds();
      }
      else {
        int64_t v3 = UpTicksToNanoseconds() + 10000000;
      }
      *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x263F010E0];
      sampleTimingArray.duration.epoch = *(void *)(MEMORY[0x263F010E0] + 16);
      CMTimeMake(&sampleTimingArray.presentationTimeStamp, v3, 1000000000);
      sampleTimingArray.decodeTimeStamp = *(CMTime *)*(void *)&MEMORY[0x263F01090];
      uint64_t v4 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, &v15);
      if (v4)
      {
        uint64_t v12 = v4;
      }
      else
      {
        uint64_t v5 = (const void *)*MEMORY[0x263EFFB40];
        CMSetAttachment(v15, (CFStringRef)*MEMORY[0x263F01048], (CFTypeRef)*MEMORY[0x263EFFB40], 1u);
        CMSetAttachment(v15, (CFStringRef)*MEMORY[0x263F01038], v5, 1u);
        uint64_t v6 = *(void *)(DerivedStorage + 32);
        CMSampleBufferRef v7 = v15;
        uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v8) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        CFTypeRef v10 = *(uint64_t (**)(uint64_t, CMSampleBufferRef, void, double, double, double, double, double, double, double, double))(v9 + 16);
        if (v10) {
          uint64_t v11 = v10(v6, v7, 0, *MEMORY[0x263F001A8], *(double *)(MEMORY[0x263F001A8] + 8), *(double *)(MEMORY[0x263F001A8] + 16), *(double *)(MEMORY[0x263F001A8] + 24), *MEMORY[0x263F001A8], *(double *)(MEMORY[0x263F001A8] + 8), *(double *)(MEMORY[0x263F001A8] + 16), *(double *)(MEMORY[0x263F001A8] + 24));
        }
        else {
          uint64_t v11 = 4294954514;
        }
        uint64_t v12 = apsink_remapEnqueueError(a1, v11);
        if (!v12) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      uint64_t v12 = 4294895163;
    }
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v12 = 4294895164;
  }
LABEL_18:
  if (v15) {
    CFRelease(v15);
  }
  return v12;
}

uint64_t apsink_remapEnqueueError(uint64_t a1, uint64_t a2)
{
  if (a2 == -12083)
  {
    uint64_t v2 = 4294895163;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 90
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    uint64_t v2 = a2;
    if (a2)
    {
      if (gLogCategory_APReceiverScreenSinkAirPlay <= 60
        && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return 0;
    }
  }
  return v2;
}

uint64_t apsink_updateVideoConfig(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 176))
  {
    APSLogErrorAt();
    return 4294895164;
  }
  if (!a2)
  {
    uint64_t v36 = 4294895165;
LABEL_24:
    APSLogErrorAt();
    return v36;
  }
  if (atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed) != *(_DWORD *)(DerivedStorage + 168))
  {
    APSLogErrorAt();
    return 4294895163;
  }
  int v28 = *(_DWORD *)(DerivedStorage + 172);
  if (v28)
  {
    if (v28 != 2)
    {
      uint64_t v36 = 4294895165;
      goto LABEL_24;
    }
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 172) = 2;
  }
  double v31 = *(const void **)(DerivedStorage + 40);
  uint64_t v30 = (CMFormatDescriptionRef *)(DerivedStorage + 40);
  uint64_t v29 = v31;
  if (v31)
  {
    CFRelease(v29);
    CMFormatDescriptionRef *v30 = 0;
  }
  uint64_t v32 = APSVideoFormatDescriptionCreateFromBlockBuffer();
  if (v32)
  {
    uint64_t v36 = v32;
    goto LABEL_24;
  }
  if (*v30) {
    FourCharCode MediaSubType = CMFormatDescriptionGetMediaSubType(*v30);
  }
  else {
    FourCharCode MediaSubType = 0;
  }
  apsink_updateVideoConfigCommon(a4, a5, a6, a7, a8, a9, a1, a3, MediaSubType, v33, v34, a12, a13, a14, a15);
  return 0;
}

void apsink_updateVideoConfigCommon(double a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, int a8, int a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(double *)(DerivedStorage + 80) = a1;
  *(double *)(DerivedStorage + 88) = a2;
  *(_DWORD *)(DerivedStorage + 160) = a8;
  *(double *)(DerivedStorage + 96) = a3;
  *(double *)(DerivedStorage + 104) = a4;
  *(double *)(DerivedStorage + 112) = a5;
  *(double *)(DerivedStorage + 120) = a6;
  [*(id *)(DerivedStorage + 24) bounds];
  double v28 = v27 / *(double *)(DerivedStorage + 64);
  double v30 = v29 / *(double *)(DerivedStorage + 72);
  *(double *)(DerivedStorage + 128) = a12 * v28;
  *(double *)(DerivedStorage + 136) = a13 * v30;
  double v31 = a14 * v28;
  double v32 = a15 * v30;
  *(double *)(DerivedStorage + 144) = a14 * v28;
  *(double *)(DerivedStorage + 152) = a15 * v30;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 50)
  {
    if (gLogCategory_APReceiverScreenSinkAirPlay != -1
      || (int v33 = _LogCategory_Initialize(),
          double v31 = *(double *)(DerivedStorage + 144),
          double v32 = *(double *)(DerivedStorage + 152),
          v33))
    {
      LogPrintF();
      double v31 = *(double *)(DerivedStorage + 144);
      double v32 = *(double *)(DerivedStorage + 152);
    }
  }
  APReceiverStatsCollectorUpdateVideoSizes(*(void *)DerivedStorage, *(double *)(DerivedStorage + 112), *(double *)(DerivedStorage + 120), v31, v32, *(double *)(DerivedStorage + 128), *(double *)(DerivedStorage + 136));
  uint64_t v34 = *(void *)DerivedStorage;

  APReceiverStatsCollectorUpdateVideoCodec(v34, a9);
}

uint64_t apsink_updateH264VideoConfig(uint64_t a1, const void *a2, int a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 176))
  {
    APSLogErrorAt();
    return 4294895164;
  }
  if (!a2)
  {
    uint64_t v32 = 4294895165;
    goto LABEL_19;
  }
  if (atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed) != *(_DWORD *)(DerivedStorage + 168))
  {
    APSLogErrorAt();
    return 4294895163;
  }
  int v28 = *(_DWORD *)(DerivedStorage + 172);
  if (v28)
  {
    if (v28 == 1) {
      goto LABEL_11;
    }
    uint64_t v32 = 4294895165;
LABEL_19:
    APSLogErrorAt();
    return v32;
  }
  *(_DWORD *)(DerivedStorage + 172) = 1;
LABEL_11:
  double v29 = *(const void **)(DerivedStorage + 48);
  *(void *)(DerivedStorage + 48) = a2;
  CFRetain(a2);
  if (v29) {
    CFRelease(v29);
  }
  apsink_updateVideoConfigCommon(a4, a5, a6, a7, a8, a9, a1, a3, 1635148593, v30, v31, a12, a13, a14, a15);
  return 0;
}

uint64_t apsink_enqueueFrame(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    uint64_t v11 = "";
    if (!a5) {
      uint64_t v11 = "non-";
    }
    CMSampleTimingInfo sampleTimingArray = (CMSampleTimingInfo *)a1;
    uint64_t v48 = a3;
    sampleSizeArray = (size_t *)v11;
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 176))
  {
    uint64_t v45 = 4294895164;
LABEL_43:
    APSLogErrorAt();
    return v45;
  }
  int v12 = *(_DWORD *)(DerivedStorage + 172);
  if (!v12)
  {
    uint64_t v45 = 4294895164;
    goto LABEL_43;
  }
  if (atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed) != *(_DWORD *)(DerivedStorage + 168))
  {
    APSLogErrorAt();
    return 4294895163;
  }
  if (*(unsigned char *)(DerivedStorage + 179))
  {
    apsink_enableImageInfoCollection(a1, a4 != 0);
    int v12 = *(_DWORD *)(DerivedStorage + 172);
    uint64_t v13 = a4;
  }
  else
  {
    uint64_t v13 = 0;
  }
  if (v12 == 1)
  {
    uint64_t v14 = *(void *)(DerivedStorage + 32);
    double v15 = *(double *)(DerivedStorage + 80);
    double v16 = *(double *)(DerivedStorage + 88);
    uint64_t v17 = *(void *)(DerivedStorage + 48);
    uint64_t v18 = *(unsigned int *)(DerivedStorage + 160);
    double v19 = *(double *)(DerivedStorage + 112);
    double v50 = *(double *)(DerivedStorage + 104);
    double v51 = *(double *)(DerivedStorage + 96);
    double v20 = *(double *)(DerivedStorage + 120);
    double v21 = *(double *)(DerivedStorage + 128);
    double v22 = *(double *)(DerivedStorage + 136);
    double v23 = *(double *)(DerivedStorage + 144);
    double v24 = *(double *)(DerivedStorage + 152);
    uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v25) {
      uint64_t v26 = v25;
    }
    else {
      uint64_t v26 = 0;
    }
    if (*(void *)(v26 + 24)) {
      uint64_t v43 = (*(uint64_t (**)(uint64_t, void, void, uint64_t, OpaqueCMBlockBuffer *, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double, CMSampleTimingInfo *, uint64_t, size_t *))(v26 + 32))(v14, (int)v15, (int)v16, v17, a2, a3, v18, v13, v51, v50, v19, v20, v21, v22, v23, v24, sampleTimingArray, v48, sampleSizeArray);
    }
    else {
      uint64_t v43 = 4294954514;
    }
    goto LABEL_32;
  }
  memset(&v54.presentationTimeStamp, 0, sizeof(v54.presentationTimeStamp));
  CMSampleBufferRef sbuf = 0;
  if (!*(void *)(DerivedStorage + 40))
  {
    uint64_t v45 = 4294895164;
    goto LABEL_43;
  }
  *(_OWORD *)&v54.duration.value = *MEMORY[0x263F01090];
  v54.duration.epoch = *(void *)(MEMORY[0x263F01090] + 16);
  v54.decodeTimeStamp = v54.duration;
  CMClockMakeHostTimeFromSystemUnits(&v54.presentationTimeStamp, a3);
  DataCFIndex Length = CMBlockBufferGetDataLength(a2);
  uint64_t v27 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, 1u, 0, 0, *(CMFormatDescriptionRef *)(DerivedStorage + 40), 1, 1, &v54, 1, &DataLength, &sbuf);
  if (v27)
  {
    uint64_t v45 = v27;
    goto LABEL_43;
  }
  if (!a5)
  {
    CFArrayRef SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(sbuf, 1u);
    ValueAtIndex = (__CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0);
    CFDictionarySetValue(ValueAtIndex, (const void *)*MEMORY[0x263F01018], (const void *)*MEMORY[0x263EFFB40]);
  }
  uint64_t v30 = *(void *)(DerivedStorage + 32);
  CMSampleBufferRef v31 = sbuf;
  uint64_t v32 = *(unsigned int *)(DerivedStorage + 160);
  double v33 = *(double *)(DerivedStorage + 96);
  double v34 = *(double *)(DerivedStorage + 104);
  double v35 = *(double *)(DerivedStorage + 112);
  double v36 = *(double *)(DerivedStorage + 120);
  double v37 = *(double *)(DerivedStorage + 128);
  double v38 = *(double *)(DerivedStorage + 136);
  double v40 = *(double *)(DerivedStorage + 144);
  double v39 = *(double *)(DerivedStorage + 152);
  uint64_t v41 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v41) {
    uint64_t v42 = v41;
  }
  else {
    uint64_t v42 = 0;
  }
  long long v44 = *(uint64_t (**)(uint64_t, CMSampleBufferRef, uint64_t, double, double, double, double, double, double, double, double))(v42 + 16);
  if (v44) {
    uint64_t v43 = v44(v30, v31, v32, v33, v34, v35, v36, v37, v38, v40, v39);
  }
  else {
    uint64_t v43 = 4294954514;
  }
  if (sbuf) {
    CFRelease(sbuf);
  }
LABEL_32:
  uint64_t v45 = apsink_remapEnqueueError(a1, v43);
  if (v45) {
    goto LABEL_43;
  }
  *(void *)(DerivedStorage + 56) = a3;
  ++*(_DWORD *)(DerivedStorage + 164);
  if (a4 && !*(unsigned char *)(DerivedStorage + 179))
  {
    APReceiverStatsCollectorLogFrameStats(a4, 0);
    return 0;
  }
  return v45;
}

uint64_t apsink_enableImageInfoCollection(uint64_t a1, int a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = result;
  if (a2)
  {
    if (*(unsigned char *)(result + 180)) {
      return result;
    }
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t result = CMNotificationCenterAddListener();
    char v5 = 1;
  }
  else
  {
    if (!*(unsigned char *)(result + 180)) {
      return result;
    }
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t result = CMNotificationCenterRemoveListener();
    char v5 = 0;
  }
  *(unsigned char *)(v4 + 180) = v5;
  return result;
}

void apsink_handleImageRelease(int a1, int a2, int a3, int a4, CFTypeRef cf)
{
  if (cf)
  {
    CFTypeID v6 = CFGetTypeID(cf);
    if (v6 == CFDictionaryGetTypeID())
    {
      CFDictionaryRef Value = CFDictionaryGetValue((CFDictionaryRef)cf, (const void *)*MEMORY[0x263F12430]);
      APReceiverStatsCollectorLogFrameStats((uint64_t)Value, (const __CFDictionary *)cf);
    }
  }
}

uint64_t apsink_Stop(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 176))
  {
    uint64_t v3 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    apsink_enableHUD(a1, 0);
    apsink_enableImageInfoCollection(a1, 0);
    if (*(void *)(v3 + 24) && *(unsigned char *)(v3 + 178))
    {
      uint64_t v4 = dispatch_semaphore_create(0);
      FigGetCFPreferenceDoubleWithDefault();
      FigGetCFPreferenceDoubleWithDefault();
      FigGetCFPreferenceDoubleWithDefault();
      dispatch_get_global_queue(0, 0);
      FadeOutLayerThruBlack();
      dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(v4);
    }
    if (*(void *)(v3 + 32))
    {
      uint64_t CMBaseObject = FigVideoQueueGetCMBaseObject();
      if (CMBaseObject)
      {
        uint64_t v6 = CMBaseObject;
        uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v8 = v7 ? v7 : 0;
        uint64_t v9 = *(void (**)(uint64_t))(v8 + 24);
        if (v9) {
          v9(v6);
        }
      }
      CFTypeRef v10 = *(const void **)(v3 + 32);
      if (v10)
      {
        CFRelease(v10);
        *(void *)(v3 + 32) = 0;
      }
    }
    uint64_t v11 = (id *)CMBaseObjectGetDerivedStorage();
    id v12 = v11[3];
    if (v12) {
      [v12 removeFromSuperlayer];
    }

    v11[1] = 0;
    v11[2] = 0;

    v11[3] = 0;
    [MEMORY[0x263F158F8] flush];
    *(unsigned char *)(v3 + 176) = 0;
  }
  return 0;
}

void apsink_enableHUD(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = DerivedStorage;
  if (a2)
  {
    if (*(unsigned char *)(DerivedStorage + 177)) {
      return;
    }
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionarySetValue(Mutable, @"PresentationLayer", *(const void **)(v4 + 16));
    [*(id *)(v4 + 24) zPosition];
    FigCFDictionarySetInt32();
    APReceiverStatsCollectorEnableHUD(*(void *)v4, (uint64_t)Mutable);
    CFRelease(Mutable);
    char v6 = 1;
  }
  else
  {
    if (!*(unsigned char *)(DerivedStorage + 177)) {
      return;
    }
    APReceiverStatsCollectorDisableHUD(*(void *)DerivedStorage);
    char v6 = 0;
  }
  *(unsigned char *)(v4 + 177) = v6;
}

uint64_t apsink_Start(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v27 = 4294895165;
    goto LABEL_36;
  }
  uint64_t v5 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    uint64_t v58 = a1;
    uint64_t v59 = (uint64_t)a2;
    LogPrintF();
  }
  if (*(unsigned char *)(v5 + 176))
  {
    APSLogErrorAt();
    uint64_t v27 = 4294895164;
LABEL_37:
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 90
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v38 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v38) {
      uint64_t v39 = v38;
    }
    else {
      uint64_t v39 = 0;
    }
    double v40 = *(void (**)(uint64_t))(v39 + 16);
    if (v40) {
      v40(a1);
    }
    return v27;
  }
  *(unsigned char *)(v5 + 176) = 1;
  *(_DWORD *)(v5 + 164) = 0;
  FigCFDictionaryGetCGSizeIfPresent();
  if (*(double *)(v5 + 64) <= 1.0 || *(double *)(v5 + 72) <= 1.0)
  {
    uint64_t v27 = APSSignalErrorAt();
    if (!v27) {
      return v27;
    }
    goto LABEL_37;
  }
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  id v7 = objc_alloc_init(MEMORY[0x263F086B0]);
  CFDictionaryRef Value = (void *)CFDictionaryGetValue(a2, @"PresentationLayer");
  if (!Value)
  {
    uint64_t v9 = (void *)CFDictionaryGetValue(a2, @"PresentationContext");
    if (!v9 || (CFTypeRef v10 = v9, objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      uint64_t v27 = 4294895165;
      APSLogErrorAt();
      [v7 drain];
      goto LABEL_36;
    }
    id v11 = v10;
    *(void *)(v6 + 8) = v11;
    CFDictionaryRef Value = (void *)[v11 layer];
  }
  id v12 = Value;
  *(void *)(v6 + 16) = v12;
  if (v12)
  {
    [v12 frame];
    double v16 = v15;
    double v18 = v17;
    *(double *)(v6 + 80) = v15;
    *(double *)(v6 + 88) = v17;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30)
    {
      uint64_t v19 = v13;
      uint64_t v20 = v14;
      if (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize())
      {
        double v60 = v16;
        double v61 = v18;
        uint64_t v58 = v19;
        uint64_t v59 = v20;
        LogPrintF();
      }
    }
    objc_msgSend(MEMORY[0x263F158F8], "begin", v58, v59, *(void *)&v60, *(void *)&v61);
    [MEMORY[0x263F158F8] setDisableActions:1];
    id v21 = objc_alloc_init(MEMORY[0x263F157E8]);
    *(void *)(v6 + 24) = v21;
    [v21 setName:@"VideoLayer"];
    objc_msgSend(*(id *)(v6 + 24), "setFrame:", 0.0, 0.0, v16, v18);
    [*(id *)(v6 + 24) setBackgroundColor:CGColorGetBlack()];
    [*(id *)(v6 + 24) setEdgeAntialiasingMask:0];
    [*(id *)(v6 + 16) addSublayer:*(void *)(v6 + 24)];
    [MEMORY[0x263F158F8] commit];
    [v7 drain];
  }
  else
  {
    uint64_t v27 = APSSignalErrorAt();
    [v7 drain];
    if (v27) {
      goto LABEL_36;
    }
  }
  uint64_t v22 = CMBaseObjectGetDerivedStorage();
  double v23 = (uint64_t *)(v22 + 32);
  uint64_t v24 = *MEMORY[0x263EFFB08];
  uint64_t v25 = 1;
  while (1)
  {
    uint64_t v26 = MEMORY[0x230F47E70](v24, v23);
    if (!v26) {
      break;
    }
    uint64_t v27 = v26;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 60
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      uint64_t v59 = 100;
      double v60 = *(double *)&v27;
      uint64_t v58 = v25;
      LogPrintF();
    }
    usleep(0x186A0u);
    uint64_t v25 = (v25 + 1);
    if (v25 == 101)
    {
      *(_DWORD *)(v22 + 168) = atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed);
      APSLogErrorAt();
      goto LABEL_36;
    }
  }
  *(_DWORD *)(v22 + 168) = atomic_fetch_add_explicit(sServerDisconnectCount, 0, memory_order_relaxed);
  uint64_t v28 = *(void *)(v22 + 24);
  uint64_t CMBaseObject = FigVideoQueueGetCMBaseObject();
  uint64_t v30 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v30) {
    uint64_t v31 = v30;
  }
  else {
    uint64_t v31 = 0;
  }
  uint64_t v32 = *(uint64_t (**)(uint64_t, void, uint64_t))(v31 + 56);
  if (!v32)
  {
    uint64_t v27 = 4294954514;
LABEL_35:
    APSLogErrorAt();
LABEL_36:
    APSLogErrorAt();
    goto LABEL_37;
  }
  uint64_t v33 = v32(CMBaseObject, *MEMORY[0x263F124F0], v28);
  if (v33)
  {
    uint64_t v27 = v33;
    goto LABEL_35;
  }
  uint64_t SInt32 = (const void *)FigCFNumberCreateSInt32();
  uint64_t v35 = FigVideoQueueGetCMBaseObject();
  uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v36) {
    uint64_t v37 = v36;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v41 = *(void (**)(uint64_t, void, const void *))(v37 + 56);
  if (v41) {
    v41(v35, *MEMORY[0x263F124E0], SInt32);
  }
  objc_msgSend(*(id *)(v22 + 24), "frame", v58, v59, *(void *)&v60);
  CFDictionaryRef DictionaryRepresentation = CGRectCreateDictionaryRepresentation(v62);
  uint64_t v43 = FigVideoQueueGetCMBaseObject();
  uint64_t v44 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v44) {
    uint64_t v45 = v44;
  }
  else {
    uint64_t v45 = 0;
  }
  long long v46 = *(uint64_t (**)(uint64_t, void, CFDictionaryRef))(v45 + 56);
  if (!v46)
  {
    uint64_t v27 = 4294954514;
    goto LABEL_69;
  }
  uint64_t v47 = v46(v43, *MEMORY[0x263F124E8], DictionaryRepresentation);
  if (v47)
  {
    uint64_t v27 = v47;
    goto LABEL_69;
  }
  uint64_t v48 = FigVideoQueueGetCMBaseObject();
  uint64_t v49 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v49) {
    uint64_t v50 = v49;
  }
  else {
    uint64_t v50 = 0;
  }
  double v51 = *(void (**)(uint64_t, void, void))(v50 + 56);
  if (v51) {
    v51(v48, *MEMORY[0x263F124F8], *MEMORY[0x263EFFB40]);
  }
  uint64_t v52 = *v23;
  uint64_t v53 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v53) {
    uint64_t v54 = v53;
  }
  else {
    uint64_t v54 = 0;
  }
  uint64_t v55 = *(uint64_t (**)(uint64_t, void))(v54 + 8);
  if (!v55)
  {
    uint64_t v27 = 4294954514;
    goto LABEL_69;
  }
  uint64_t v56 = v55(v52, 0);
  if (v56)
  {
    uint64_t v27 = v56;
LABEL_69:
    APSLogErrorAt();
    if (!DictionaryRepresentation) {
      goto LABEL_71;
    }
    goto LABEL_70;
  }
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v27 = 0;
  if (DictionaryRepresentation) {
LABEL_70:
  }
    CFRelease(DictionaryRepresentation);
LABEL_71:
  if (SInt32) {
    CFRelease(SInt32);
  }
  if (v27) {
    goto LABEL_36;
  }
  return v27;
}

uint64_t apsink_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2) {
    goto LABEL_28;
  }
  uint64_t v7 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"StatsDisplayEnabled"))
  {
    if (*(unsigned char *)(v7 + 176))
    {
      apsink_enableHUD(a1, *MEMORY[0x263EFFB40] == (void)a3);
      return 0;
    }
    uint64_t v8 = 4294895164;
LABEL_31:
    APSLogErrorAt();
    return v8;
  }
  if (CFEqual(a2, @"StatsCollector"))
  {
    if (*(unsigned char *)(v7 + 176))
    {
      uint64_t v8 = 4294895164;
      goto LABEL_31;
    }
    if (!a3)
    {
      uint64_t v8 = *(void *)v7;
      *(void *)uint64_t v7 = 0;
      if (!v8) {
        return v8;
      }
      goto LABEL_22;
    }
    CFTypeID v10 = CFGetTypeID(a3);
    if (APReceiverStatsCollectorGetTypeID_once != -1) {
      dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_446);
    }
    if (v10 == APReceiverStatsCollectorGetTypeID_typeID)
    {
      uint64_t v8 = *(void *)v7;
      *(void *)uint64_t v7 = a3;
      CFRetain(a3);
      if (!v8) {
        return v8;
      }
LABEL_22:
      CFRelease((CFTypeRef)v8);
      return 0;
    }
LABEL_28:
    APSLogErrorAt();
    return 4294895165;
  }
  if (CFEqual(a2, @"ScreenFadeOutOnStop"))
  {
    uint64_t v8 = 0;
    *(unsigned char *)(v7 + 178) = *MEMORY[0x263EFFB40] == (void)a3;
  }
  else
  {
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
  return v8;
}

uint64_t apsink_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t v4 = 4294895165;
LABEL_11:
    APSLogErrorAt();
    return v4;
  }
  if (!a4)
  {
    uint64_t v4 = 4294895165;
    goto LABEL_11;
  }
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

CFStringRef apsink_CopyDebugDescription(const void *a1)
{
  ASPrintF();
  CFAllocatorRef v2 = CFGetAllocator(a1);
  CFStringRef v3 = CFStringCreateWithFormat(v2, 0, @"<APReceiverScreenSinkAirPlay %p %s>", a1, 0);
  free(0);
  return v3;
}

void apsink_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
  if (v5) {
    v5(a1);
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 48);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 48) = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 40);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 40) = 0;
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
}

uint64_t __APReceiverScreenSinkCreateAirPlay_block_invoke()
{
  CMNotificationCenterGetDefaultLocalCenter();

  return CMNotificationCenterAddListener();
}

void apsink_handleServerDisconnect()
{
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 60
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  atomic_fetch_add_explicit(sServerDisconnectCount, 1u, memory_order_relaxed);
}

void AirTunesDACPClient_Delete(char *a1)
{
  if (*(_DWORD *)a1 == 1684104048)
  {
    CFAllocatorRef v2 = (pthread_mutex_t *)*((void *)a1 + 9);
    if (v2)
    {
      pthread_mutex_lock(v2);
      a1[160] = 1;
      pthread_mutex_unlock(*((pthread_mutex_t **)a1 + 9));
    }
    if (*((void *)a1 + 19)) {
      NetSocket_Cancel();
    }
    if (*((void *)a1 + 18))
    {
      pthread_cond_signal((pthread_cond_t *)(a1 + 80));
      pthread_join(*((pthread_t *)a1 + 17), 0);
      *((void *)a1 + 18) = 0;
    }
    *(_DWORD *)a1 = 1145127760;
    if (*((void *)a1 + 19))
    {
      NetSocket_Delete();
      *((void *)a1 + 19) = 0;
    }
    uint64_t v3 = (pthread_cond_t *)*((void *)a1 + 16);
    if (v3)
    {
      pthread_cond_destroy(v3);
      *((void *)a1 + 16) = 0;
    }
    uint64_t v4 = (pthread_mutex_t *)*((void *)a1 + 9);
    if (v4)
    {
      pthread_mutex_destroy(v4);
      *((void *)a1 + 9) = 0;
    }
    while (1)
    {
      uint64_t v5 = (void *)*((void *)a1 + 23);
      if (!v5) {
        break;
      }
      *((void *)a1 + 23) = *v5;
      _AirTunesDACPClient_FreeRequest(v5);
    }
    uint64_t v6 = (void *)*((void *)a1 + 5311);
    if (v6) {
      free(v6);
    }
    free(a1);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _AirTunesDACPClient_FreeRequest(void *a1)
{
  CFAllocatorRef v2 = (void *)a1[2];
  if (v2) {
    free(v2);
  }

  free(a1);
}

uint64_t _AirTunesDACPClient_Thread(uint64_t a1)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v2 = a1 + 41448;
  pthread_setname_np("AirPlayDACP");
  uint64_t v3 = "User-Agent";
  uint64_t v4 = a1 + 8680;
LABEL_2:
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 8));
  while (!*(unsigned char *)(a1 + 160))
  {
    uint64_t v5 = *(void *)(a1 + 184);
    if (v5)
    {
      *(void *)(a1 + 184) = *(void *)v5;
      --*(_DWORD *)(a1 + 192);
      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 8));
      uint64_t v6 = *(const char **)(v5 + 16);
      if (*(unsigned char *)(v5 + 8))
      {
        if (!strcmp(*(const char **)(v5 + 16), "stopSession"))
        {
          if (*(unsigned char *)(a1 + 162))
          {
            NetSocket_Disconnect();
            *(unsigned char *)(a1 + 162) = 0;
          }
        }
        goto LABEL_68;
      }
      uint64_t v33 = v4;
      if (*(unsigned char *)(a1 + 162))
      {
        if ((*(unsigned int (**)(void, uint64_t))(*(void *)(a1 + 152) + 24))(*(void *)(a1 + 152), 1) == -6753)
        {
          NetSocket_Disconnect();
          *(unsigned char *)(a1 + 162) = 0;
          goto LABEL_15;
        }
        if (*(unsigned char *)(a1 + 162))
        {
          uint64_t v7 = v3;
          char v32 = 1;
          goto LABEL_36;
        }
      }
LABEL_15:
      DNSServiceRef sdRef = 0;
      *(unsigned char *)(v2 + 20) = 0;
      SNPrintF();
      uint64_t v8 = DNSServiceResolve(&sdRef, 0, 0, name, "_dacp._tcp", "local.", (DNSServiceResolveReply)_AirTunesDACPClient_ResolveControllerCallBack, (void *)a1);
      if (v8)
      {
        uint64_t v13 = v8;
        APSLogErrorAt();
      }
      else if (DNSServiceRefSockFD(sdRef) < 0)
      {
        uint64_t v11 = mach_absolute_time();
        uint64_t v12 = UpTicksPerSecond();
        if (*(unsigned char *)(v2 + 20))
        {
LABEL_22:
          uint64_t v13 = 0;
          goto LABEL_23;
        }
        uint64_t v14 = 5 * v12 + v11;
        uint64_t v3 = "User-Agent";
        while (mach_absolute_time() < v14)
        {
          usleep(0xC350u);
          if (*(unsigned char *)(v2 + 20))
          {
            uint64_t v13 = 0;
            goto LABEL_24;
          }
        }
        uint64_t v13 = 4294960574;
      }
      else
      {
        while (1)
        {
          uint64_t v9 = NetSocket_Wait();
          if (v9)
          {
            uint64_t v13 = v9;
            goto LABEL_23;
          }
          uint64_t v10 = DNSServiceProcessResult(sdRef);
          if (v10) {
            break;
          }
          if (*(unsigned char *)(v2 + 20)) {
            goto LABEL_22;
          }
        }
        uint64_t v13 = v10;
        APSLogErrorAt();
LABEL_23:
        uint64_t v3 = "User-Agent";
      }
LABEL_24:
      if (sdRef) {
        DNSServiceRefDeallocate(sdRef);
      }
      if (v13 || (uint64_t v13 = NetSocket_TCPConnect(), v13))
      {
LABEL_64:
        if (*(unsigned char *)(a1 + 162))
        {
          NetSocket_Disconnect();
          *(unsigned char *)(a1 + 162) = 0;
        }
      }
      else
      {
        uint64_t v7 = v3;
        if (*(unsigned char *)(a1 + 161))
        {
          char v32 = 1;
          *(unsigned char *)(a1 + 162) = 1;
        }
        else
        {
          char v32 = 0;
        }
LABEL_36:
        int v15 = *(_DWORD *)(v2 + 16);
        ShortVersionCFIndex Length = APSVersionUtilsGetShortVersionLength();
        uint64_t v3 = v7;
        if ((snprintf(__str, 0x800uLL, "GET /ctrl-int/1/%s HTTP/1.1\r\nHost: %s\r\nActive-Remote: %u\r\n%s: AirPlay/%.*s\r\n\r\n", v6, (const char *)(a1 + 41469), v15, v7, ShortVersionLength, "835.19.1.1")- 2048) <= 0xFFFFF800)
        {
          APSLogErrorAt();
          uint64_t v13 = 4294960534;
          uint64_t v4 = v33;
        }
        else
        {
          int Native = NetSocket_GetNative();
          uint64_t v4 = v33;
          while (1)
          {
            uint64_t v18 = SocketWriteData();
            if (!v18) {
              break;
            }
            uint64_t v13 = v18;
            if (v18 == 35)
            {
              uint64_t v19 = NetSocket_Wait();
              uint64_t v13 = v19;
              if (v19 == -6723) {
                goto LABEL_62;
              }
              if (!v19) {
                continue;
              }
            }
            goto LABEL_75;
          }
          *(void *)(a1 + 8392) = 0;
          uint64_t v20 = Native;
          while (1)
          {
            uint64_t v21 = v20;
            uint64_t v22 = HTTPReadHeader();
            if (!v22) {
              break;
            }
            uint64_t v13 = v22;
            if (v22 != 35) {
              goto LABEL_78;
            }
            uint64_t v23 = NetSocket_Wait();
            uint64_t v13 = v23;
            if (v23 == -6723) {
              goto LABEL_79;
            }
            uint64_t v20 = v21;
            if (v23) {
              goto LABEL_78;
            }
          }
          uint64_t v24 = HTTPHeader_Parse();
          if (v24)
          {
            uint64_t v13 = v24;
LABEL_78:
            APSLogErrorAt();
LABEL_79:
            uint64_t v3 = "User-Agent";
            if (v32) {
              goto LABEL_63;
            }
            goto LABEL_80;
          }
          int v25 = *(_DWORD *)(a1 + 8632);
          uint64_t v3 = "User-Agent";
          if (!v25)
          {
            APSLogErrorAt();
            uint64_t v13 = 4294960584;
            goto LABEL_62;
          }
          if ((v25 - 300) <= 0xFFFFFF9B)
          {
            APSLogErrorAt();
            uint64_t v13 = *(unsigned int *)(a1 + 8632);
            goto LABEL_62;
          }
          unint64_t v26 = *(void *)(a1 + 8664);
          if (v26 >= 0x8000)
          {
            APSLogErrorAt();
            uint64_t v13 = 4294960553;
            goto LABEL_62;
          }
          *(void *)uint64_t v2 = 0;
          if (!v26)
          {
            if ((v32 & 1) == 0) {
              NetSocket_Disconnect();
            }
            goto LABEL_68;
          }
          uint64_t v27 = (*(uint64_t (**)(void))(*(void *)(a1 + 152) + 24))();
          uint64_t v13 = v27;
          if (v27 == -6753 || v27 == -6723 || v27 == 0) {
            goto LABEL_62;
          }
LABEL_75:
          APSLogErrorAt();
        }
LABEL_62:
        if (v32)
        {
LABEL_63:
          if (v13) {
            goto LABEL_64;
          }
LABEL_68:
          _AirTunesDACPClient_FreeRequest((void *)v5);
          goto LABEL_2;
        }
LABEL_80:
        NetSocket_Disconnect();
        if (!v13) {
          goto LABEL_68;
        }
      }
      uint64_t v30 = *(void (**)(uint64_t, void))(a1 + 168);
      if (v30) {
        v30(v13, *(void *)(a1 + 176));
      }
      goto LABEL_68;
    }
    pthread_cond_wait((pthread_cond_t *)(a1 + 80), (pthread_mutex_t *)(a1 + 8));
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 8));
  return 0;
}

uint64_t _AirTunesDACPClient_ResolveControllerCallBack(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a4 != -65791)
  {
    if (a4)
    {
      return APSLogErrorAt();
    }
    else
    {
      uint64_t result = __strlcpy_chk();
      *(_WORD *)(a10 + 42478) = __rev16(a7);
      *(unsigned char *)(a10 + 41468) = 1;
    }
  }
  return result;
}

uint64_t _AirTunesDACPClient_ScheduleCommandInternal(uint64_t a1, const char *a2, int a3)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (*(_DWORD *)a1 != 1684104048)
  {
    APSLogErrorAt();
    return 4294960556;
  }
  uint64_t v6 = (pthread_mutex_t *)(a1 + 8);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 8));
  if (!a3)
  {
    if (*(int *)(a1 + 192) <= 9)
    {
      if (*(void *)(a1 + 41456) && *(_DWORD *)(a1 + 41464)) {
        goto LABEL_4;
      }
      uint64_t v12 = 4294960574;
    }
    else
    {
      uint64_t v12 = 4294960567;
    }
LABEL_14:
    pthread_mutex_unlock(v6);
    return v12;
  }
LABEL_4:
  uint64_t v7 = malloc_type_calloc(1uLL, 0x18uLL, 0x1030040B4FB57C1uLL);
  if (!v7)
  {
    APSLogErrorAt();
LABEL_20:
    uint64_t v12 = 4294960568;
    goto LABEL_14;
  }
  uint64_t v8 = v7;
  *((unsigned char *)v7 + 8) = a3;
  uint64_t v9 = strdup(a2);
  v8[2] = v9;
  if (!v9)
  {
    APSLogErrorAt();
    _AirTunesDACPClient_FreeRequest(v8);
    goto LABEL_20;
  }
  uint64_t v10 = (void *)(a1 + 184);
  do
  {
    uint64_t v11 = v10;
    uint64_t v10 = (void *)*v10;
  }
  while (v10);
  void *v11 = v8;
  ++*(_DWORD *)(a1 + 192);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 8));
  pthread_cond_signal((pthread_cond_t *)(a1 + 80));
  return 0;
}

uint64_t pairingServices_registerBaseClass(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();

  return MEMORY[0x270EE8008](&pairingServices_registerBaseClass_sClassDesc, ClassID, 1, a1);
}

CFStringRef pairingServices_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"[APPairingServices %p]", a1);
}

uint64_t aprmrc_handleClientDeath(uint64_t a1, int a2)
{
  if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    getprogname();
    LogPrintF();
  }
  uint64_t v2 = gAPReceiverMediaRemoteService_0;

  return AirPlayReceiverServerControl(v2, a2, @"partnerProcessDeath", @"MediaRemoteServices", 0, 0);
}

uint64_t APReceiverMediaRemoteXPCService_CommandHandler(CFTypeRef cf1, const __CFDictionary *a2, __CFDictionary **a3)
{
  if (gLogCategory_APReceiverMediaRemoteXPCService <= 40
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, @"sendData"))
  {
    if (a2)
    {
      CFDictionaryRef Value = CFDictionaryGetValue(a2, @"objectID");
      if (Value)
      {
        uint64_t v7 = Value;
        CFDataRef v8 = (const __CFData *)CFDictionaryGetValue(a2, @"data");
        if (v8)
        {
          CFDataRef v9 = v8;
          if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
            && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
          {
            CFDataGetLength(v9);
            LogPrintF();
          }
          FigSimpleMutexCheckIsNotLockedOnThisThread();
          pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
          if (gAPReceiverMediaRemoteService_1)
          {
            uint64_t v20 = CFDictionaryGetValue((CFDictionaryRef)gAPReceiverMediaRemoteService_1, v7);
            if (v20)
            {
              uint64_t v21 = v20;
              uint64_t v22 = (uint64_t (*)(const void *, const __CFData *, const void *))v20[1];
              if (v22)
              {
                if (!v20[2])
                {
                  pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
                  uint64_t v24 = 0;
                  goto LABEL_35;
                }
                uint64_t v23 = FigCFWeakReferenceHolderCopyReferencedObject();
                if (v23)
                {
                  uint64_t v24 = (const void *)v23;
                  uint64_t v22 = (uint64_t (*)(const void *, const __CFData *, const void *))v21[1];
                  pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
                  if (!v22)
                  {
                    uint64_t v10 = 0;
                    goto LABEL_42;
                  }
LABEL_35:
                  if (gLogCategory_APReceiverMediaRemoteXPCService <= 30
                    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
                  {
                    CFDataGetLength(v9);
                    LogPrintF();
                  }
                  uint64_t v10 = v22(v7, v9, v24);
                  if (v10) {
                    APSLogErrorAt();
                  }
                  if (!v24)
                  {
LABEL_43:
                    if (!v10)
                    {
                      *a3 = 0;
                      return v10;
                    }
LABEL_72:
                    APSLogErrorAt();
                    return v10;
                  }
LABEL_42:
                  CFRelease(v24);
                  goto LABEL_43;
                }
              }
            }
          }
          APSLogErrorAt();
          pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
          uint64_t v10 = 4294960587;
          goto LABEL_72;
        }
      }
    }
LABEL_81:
    APSLogErrorAt();
    return 4294960591;
  }
  if (CFEqual(cf1, @"connect")) {
    return 0;
  }
  if (CFEqual(cf1, @"copyProperty"))
  {
    if (!a2) {
      goto LABEL_81;
    }
    uint64_t v11 = CFDictionaryGetValue(a2, @"propertyKey");
    if (!v11) {
      goto LABEL_81;
    }
    uint64_t v12 = v11;
    uint64_t v48 = 0;
    uint64_t v49 = &v48;
    uint64_t v50 = 0x2000000000;
    int v51 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = &v44;
    uint64_t v46 = 0x2000000000;
    uint64_t v47 = 0;
    if (CFEqual(v11, @"AirPlaySecuritySetting"))
    {
      uint64_t v13 = v45;
      int v52 = 0;
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!Mutable)
      {
        APSLogErrorAt();
        int v52 = -6728;
LABEL_25:
        *((_DWORD *)v49 + 6) = v52;
LABEL_64:
        uint64_t v10 = *((unsigned int *)v49 + 6);
        if (v10 == -72025)
        {
          uint64_t v10 = 4294960569;
          *((_DWORD *)v49 + 6) = -6727;
          _Block_object_dispose(&v44, 8);
          _Block_object_dispose(&v48, 8);
          return v10;
        }
        uint64_t v38 = (const void *)v45[3];
        _Block_object_dispose(&v44, 8);
        _Block_object_dispose(&v48, 8);
        if (v10)
        {
          if (v10 == -6727) {
            return v10;
          }
          goto LABEL_72;
        }
        uint64_t v39 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (v39)
        {
          double v40 = v39;
          if (v38)
          {
            CFDictionarySetValue(v39, @"propertyValue", v38);
            CFRelease(v38);
          }
          uint64_t v10 = 0;
          *a3 = v40;
        }
        else
        {
          APSLogErrorAt();
          return 4294960568;
        }
        return v10;
      }
      double v16 = Mutable;
      uint64_t v18 = (const void *)APReceiverSystemInfoCopyProperty(*(void *)(gAPReceiverMediaRemoteService_0 + 160), v15, @"Password", 0, &v52);
      if (v52)
      {
        APSLogErrorAt();
        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = (const void *)APReceiverSystemInfoCopyProperty(*(void *)(gAPReceiverMediaRemoteService_0 + 160), v17, @"SecurityMode", 0, &v52);
        if (!v52)
        {
          CFDictionaryAddValue(v16, @"password", v18);
          CFDictionaryAddValue(v16, @"securityMode", v19);
          v13[3] = (uint64_t)v16;
          if (!v18) {
            goto LABEL_23;
          }
          goto LABEL_22;
        }
        APSLogErrorAt();
      }
      CFRelease(v16);
      if (!v18)
      {
LABEL_23:
        if (v19) {
          CFRelease(v19);
        }
        goto LABEL_25;
      }
LABEL_22:
      CFRelease(v18);
      goto LABEL_23;
    }
    if (CFEqual(v12, @"AirPlayGroupPublicName"))
    {
      uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
      double v34 = v49 + 3;
      uint64_t v35 = @"AirPlayGroupPublicName";
    }
    else if (CFEqual(v12, @"AirPlayGroupUUID") || CFEqual(v12, @"AirPlayGroupID"))
    {
      uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
      double v34 = v49 + 3;
      uint64_t v35 = @"AirPlayGroupID";
    }
    else
    {
      if (CFEqual(v12, @"AirPlayedFromGroupLeader"))
      {
        if (CFObjectGetPropertyInt64Sync() && !CFObjectGetPropertyInt64Sync()) {
          uint64_t v41 = (CFTypeRef *)MEMORY[0x263EFFB40];
        }
        else {
          uint64_t v41 = (CFTypeRef *)MEMORY[0x263EFFB38];
        }
        uint64_t v37 = (uint64_t)CFRetain(*v41);
        goto LABEL_63;
      }
      if (CFEqual(v12, @"AuthorizationString"))
      {
        APReceiverSystemInfoEnsurePIN(*(void *)(gAPReceiverMediaRemoteService_0 + 160));
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        uint64_t v36 = *MEMORY[0x263EFFB40];
        uint64_t v35 = @"Passcode";
        double v34 = 0;
        goto LABEL_62;
      }
      if (CFEqual(v12, @"GroupContainsDiscoverableLeader"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"GroupContainsDiscoverableLeader";
      }
      else if (CFEqual(v12, @"IsAirPlayGroupLeader"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"IsAirPlayGroupLeader";
      }
      else if (CFEqual(v12, @"IsSilentPrimary"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"IsSilentPrimary";
      }
      else if (CFEqual(v12, @"ReceiverSessionIsActive"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ReceiverSessionIsActive";
      }
      else if (CFEqual(v12, @"SystemPairingIdentity"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"SystemPairingIdentity";
      }
      else if (CFEqual(v12, @"TightSyncUUID"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"TightSyncUUID";
      }
      else if (CFEqual(v12, @"IsTightSyncGroupLeader"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"IsTightSyncGroupLeader";
      }
      else if (CFEqual(v12, @"ParentGroupUUID") || CFEqual(v12, @"ParentGroupID"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ParentGroupID";
      }
      else if (CFEqual(v12, @"ParentGroupContainsDiscoverableLeader"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ParentGroupContainsDiscoverableLeader";
      }
      else if (CFEqual(v12, @"ParentGroupLeaderSupportsRelay"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ParentGroupLeaderSupportsRelay";
      }
      else if (CFEqual(v12, @"ClusterUUID"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ClusterUUID";
      }
      else if (CFEqual(v12, @"ClusterType"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ClusterType";
      }
      else if (CFEqual(v12, @"ClusterSize"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ClusterSize";
      }
      else if (CFEqual(v12, @"IsClusterLeader"))
      {
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"IsClusterLeader";
      }
      else
      {
        if (!CFEqual(v12, @"ClusterLeaderUUID"))
        {
          if (CFEqual(v12, @"MRInfo"))
          {
            uint64_t v42 = *(NSObject **)(gAPReceiverMediaRemoteService_0 + 88);
            block[0] = MEMORY[0x263EF8330];
            block[1] = 0x40000000;
            block[2] = __APReceiverMediaRemoteXPCService_copyProperty_block_invoke;
            block[3] = &unk_264895AB0;
            block[4] = &v48;
            void block[5] = &v44;
            dispatch_sync(v42, block);
          }
          else
          {
            *((_DWORD *)v49 + 6) = -6705;
          }
          goto LABEL_64;
        }
        uint64_t v33 = *(void *)(gAPReceiverMediaRemoteService_0 + 160);
        double v34 = v49 + 3;
        uint64_t v35 = @"ClusterLeaderUUID";
      }
    }
    uint64_t v36 = 0;
LABEL_62:
    uint64_t v37 = APReceiverSystemInfoCopyProperty(v33, v32, (uint64_t)v35, v36, v34);
LABEL_63:
    v45[3] = v37;
    goto LABEL_64;
  }
  if (CFEqual(cf1, @"setProperty"))
  {
    *a3 = 0;
    if (a2)
    {
      unint64_t v26 = CFDictionaryGetValue(a2, @"propertyKey");
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = CFDictionaryGetValue(a2, @"propertyValue");
        if (v28)
        {
          uint64_t v29 = (uint64_t)v28;
          if (CFEqual(v27, @"IsClusterLeader"))
          {
            uint64_t v10 = APReceiverSystemInfoSetProperty(*(void *)(gAPReceiverMediaRemoteService_0 + 160), v30, @"IsClusterLeader", v31, v29);
            if (!v10) {
              return v10;
            }
          }
          else
          {
            uint64_t v10 = 4294960591;
          }
          goto LABEL_72;
        }
      }
    }
    goto LABEL_81;
  }
  if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294960561;
}

void APReceiverMediaRemoteXPCService_PostEvent(const void *a1, const void *a2, const __CFData *a3)
{
  if (gLogCategory_APReceiverMediaRemoteXPCService <= 40
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    uint64_t v7 = Mutable;
    if (CFEqual(a1, @"didReceiveMediaRemoteData"))
    {
      if (a3 && a2)
      {
        FigSimpleMutexCheckIsNotLockedOnThisThread();
        pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
        CFDictionaryRef Value = (CFTypeRef *)CFDictionaryGetValue((CFDictionaryRef)gAPReceiverMediaRemoteService_1, a2);
        if (Value)
        {
          CFTypeRef v9 = CFRetain(*Value);
          pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
          if (v9)
          {
            if (gLogCategory_APReceiverMediaRemoteXPCService <= 40
              && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
            {
              CFDataGetLength(a3);
              LogPrintF();
            }
            CFDictionarySetValue(v7, @"objectID", a2);
            CFDictionarySetValue(v7, @"clientUUID", v9);
            CFDictionarySetValue(v7, @"data", a3);
            APSXPCServerPostEvent();
            CFRelease(v9);
            goto LABEL_28;
          }
        }
        else
        {
          pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
        }
      }
    }
    else
    {
      if (!CFEqual(a1, @"didCloseCommChannel"))
      {
        if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
          && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_28;
      }
      if (a2)
      {
        CFDictionarySetValue(v7, @"objectID", a2);
        if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
          && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APSXPCServerPostEvent();
        goto LABEL_28;
      }
    }
    APSLogErrorAt();
LABEL_28:
    CFRelease(v7);
    return;
  }

  APSLogErrorAt();
}

uint64_t APReceiverUIControllerGetClassID()
{
  if (APReceiverUIControllerGetClassID_once != -1) {
    dispatch_once(&APReceiverUIControllerGetClassID_once, &__block_literal_global_3604);
  }
  return APReceiverUIControllerGetClassID_classID;
}

uint64_t __APReceiverUIControllerGetClassID_block_invoke()
{
  uint64_t ClassID = CMBaseGetClassID();

  return MEMORY[0x270EE8008](&APReceiverUIControllerGetClassID_classDesc, ClassID, 1, &APReceiverUIControllerGetClassID_classID);
}

uint64_t APReceiverUIControllerGetTypeID()
{
  if (APReceiverUIControllerGetClassID_once != -1) {
    dispatch_once(&APReceiverUIControllerGetClassID_once, &__block_literal_global_3604);
  }

  return CMBaseClassGetCFTypeID();
}

void APReceiverAudioSessionGhostFinalize(void *a1)
{
  uint64_t v2 = (const void *)a1[3];
  if (v2)
  {
    CFRelease(v2);
    a1[3] = 0;
  }
  uint64_t v3 = (const void *)a1[5];
  if (v3)
  {
    CFRelease(v3);
    a1[5] = 0;
  }
  uint64_t v4 = (const void *)a1[2];
  if (v4) {
    CFRelease(v4);
  }

  free(a1);
}

void audioSession_handleMediaDataControlRequest_3618(uint64_t a1, uint64_t a2, int a3, uint64_t a4, const void *a5, uint64_t a6)
{
  int v19 = 0;
  uint64_t v11 = *(void *)(a6 + 40);
  if (gLogCategory_APReceiverAudioSessionGhost <= 50
    && (gLogCategory_APReceiverAudioSessionGhost != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v13 = Mutable;
    if (a3 <= 1718839393)
    {
      if (a3 == 1634562925)
      {
        CFStringGetTypeID();
        CFDictionaryGetTypedValue();
LABEL_48:
        APMediaDataControlServerSendResponse(a1, a2, a4, (uint64_t)v13, v19);
        goto LABEL_49;
      }
      if (a3 == 1718383464)
      {
        if (a5)
        {
          CFTypeID v14 = CFGetTypeID(a5);
          if (v14 == CFDictionaryGetTypeID())
          {
            int v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
            if (!v19)
            {
              if (APSAudioTransportTimeIsValid()) {
                goto LABEL_33;
              }
              goto LABEL_54;
            }
            goto LABEL_55;
          }
        }
        goto LABEL_42;
      }
LABEL_46:
      int v18 = -6714;
      goto LABEL_47;
    }
    if (a3 == 1718839394)
    {
      if (*(_DWORD *)v11 == 103)
      {
        if (a5)
        {
          CFTypeID v17 = CFGetTypeID(a5);
          if (v17 == CFDictionaryGetTypeID())
          {
            if (CFDictionaryContainsKey((CFDictionaryRef)a5, @"flushFromSeq"))
            {
              CFDictionaryGetInt64Ranged();
              int v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
              if (v19) {
                goto LABEL_55;
              }
              APSAudioTransportTimeIsValid();
            }
            int v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
            if (!v19)
            {
              if (APSAudioTransportTimeIsValid())
              {
LABEL_33:
                CFDictionaryGetInt64Ranged();
                goto LABEL_34;
              }
              goto LABEL_54;
            }
LABEL_55:
            APSLogErrorAt();
            goto LABEL_48;
          }
        }
LABEL_42:
        APSLogErrorAt();
        int v18 = -6756;
LABEL_47:
        int v19 = v18;
        goto LABEL_48;
      }
    }
    else
    {
      if (a3 != 1936875892) {
        goto LABEL_46;
      }
      if (*(_DWORD *)v11 == 103)
      {
        if (a5)
        {
          CFTypeID v15 = CFGetTypeID(a5);
          if (v15 == CFDictionaryGetTypeID())
          {
            int Int64Ranged = CFDictionaryGetInt64Ranged();
            if (Int64Ranged != 1)
            {
              *(unsigned char *)(v11 + 32) = Int64Ranged != 0;
              int v19 = 0;
              if (!Int64Ranged && APSAudioTransportTimeIsValid()) {
                APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
              }
              goto LABEL_48;
            }
            int v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
            if (!v19)
            {
              if (!APSAudioTransportTimeIsValid())
              {
LABEL_54:
                APSLogErrorAt();
                int v18 = -72151;
                goto LABEL_47;
              }
              int v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
              if (!v19)
              {
                CFDictionaryGetInt64Ranged();
                CFDictionaryGetInt64();
                CFDictionaryGetInt64();
                CFDictionaryGetInt64Ranged();
                *(unsigned char *)(v11 + 32) = 1;
LABEL_34:
                APMediaDataControlServerSendResponse(a1, a2, a4, (uint64_t)v13, 0);
LABEL_49:
                CFRelease(v13);
                return;
              }
            }
            goto LABEL_55;
          }
        }
        goto LABEL_42;
      }
    }
    APSLogErrorAt();
    goto LABEL_46;
  }
  APSLogErrorAt();

  APMediaDataControlServerSendResponse(a1, a2, a4, 0, -6728);
}

uint64_t APReceiverAudioSessionGhostSetSecurityInfo()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostStartPacketProcesser(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v3, (dispatch_function_t)controlServer_startInternal);
    if (v4) {
      APSLogErrorAt();
    }
  }
  return 0;
}

uint64_t APReceiverAudioSessionGhostStopPacketProcesser(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (!v1) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = 0;
  dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v4, (dispatch_function_t)controlServer_stopInternal);
  uint64_t v2 = v5;
  if (v5) {
    APSLogErrorAt();
  }
  return v2;
}

uint64_t APReceiverAudioSessionGhostFlushAudio(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  if (a7)
  {
    uint64_t v7 = MEMORY[0x263F249C0];
    *a7 = *MEMORY[0x263F249C0];
    *(_OWORD *)((char *)a7 + 12) = *(_OWORD *)(v7 + 12);
  }
  return 0;
}

uint64_t APReceiverAudioSessionGhostSetRateAndAnchorTime(uint64_t a1, int a2, uint64_t a3, long long *a4, uint64_t a5, _OWORD *a6)
{
  if (a1)
  {
    *(unsigned char *)(a1 + 32) = a2 != 0;
    uint64_t result = 0;
    if (a6)
    {
      long long v7 = *a4;
      *(_OWORD *)((char *)a6 + 12) = *(long long *)((char *)a4 + 12);
      *a6 = v7;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APReceiverAudioSessionGhostConvertProgressRTPTimeToSecond(uint64_t a1, int a2, int a3, int a4, double *a5, double *a6)
{
  if (a1)
  {
    APSAudioFormatDescriptionGetSampleRate();
    double v12 = v11;
    APSAudioFormatDescriptionGetSampleRate();
    if (a5) {
      *a5 = (double)(a3 - a2) / v12;
    }
    uint64_t result = 0;
    if (a6) {
      *a6 = (double)(a4 - a2) / v13;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APReceiverAudioSessionGhostReadAudio(int a1, int a2, int a3, void *a4, size_t a5)
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostUpdateLatency()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostCopyProperty(uint64_t a1, CFTypeRef cf1, int *a3)
{
  if (a1)
  {
    if (CFEqual(cf1, @"MediaDataControlPort"))
    {
      uint64_t result = CFNumberCreateInt64();
      if (result) {
        goto LABEL_10;
      }
      goto LABEL_20;
    }
    if (CFEqual(cf1, @"IsPlayingBufferedAudio"))
    {
      if (*(_DWORD *)a1 == 103)
      {
        uint64_t v6 = (CFTypeRef *)MEMORY[0x263EFFB40];
        if (!*(unsigned char *)(a1 + 32)) {
          uint64_t v6 = (CFTypeRef *)MEMORY[0x263EFFB38];
        }
        uint64_t result = (uint64_t)CFRetain(*v6);
        goto LABEL_10;
      }
      APSLogErrorAt();
    }
    else
    {
      if (CFEqual(cf1, @"PlatformAudioLatency"))
      {
        Object = (const void *)CFNumberGetObject();
        uint64_t result = (uint64_t)CFRetain(Object);
        if (result)
        {
LABEL_10:
          int v8 = 0;
          goto LABEL_11;
        }
        goto LABEL_20;
      }
      if (CFEqual(cf1, @"AudioFormat"))
      {
        uint64_t v10 = *(const void **)(a1 + 24);
        if (v10)
        {
          uint64_t result = (uint64_t)CFRetain(v10);
          if (result) {
            goto LABEL_10;
          }
        }
LABEL_20:
        APSLogErrorAt();
        uint64_t result = 0;
        int v8 = -6728;
        goto LABEL_11;
      }
      if (gLogCategory_APReceiverAudioSessionGhost <= 50
        && (gLogCategory_APReceiverAudioSessionGhost != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    uint64_t result = 0;
    int v8 = -72154;
  }
  else
  {
    APSLogErrorAt();
    uint64_t result = 0;
    int v8 = -6705;
  }
LABEL_11:
  if (a3) {
    *a3 = v8;
  }
  return result;
}

uint64_t APReceiverAudioSessionGhostSetProperty()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostCopyMetrics()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostLogEnded()
{
  return 0;
}

CFTypeRef APReceiverAudioSessionGhostCopyAudioBufferInfo(uint64_t a1, _DWORD *a2)
{
  if (a2) {
    *a2 = 0;
  }
  uint64_t Empty = (const void *)CFDictionaryGetEmpty();

  return CFRetain(Empty);
}

uint64_t APValeriaHelperGetTypeID()
{
  if (APValeriaHelperGetTypeID_once != -1) {
    dispatch_once(&APValeriaHelperGetTypeID_once, &__block_literal_global_3722);
  }
  return APValeriaHelperGetTypeID_typeID;
}

uint64_t __APValeriaHelperGetTypeID_block_invoke()
{
  APValeriaHelperGetTypeID_valeriaHelperClass = 0;
  unk_268402CA0 = "APValeriaHelper";
  qword_268402CA8 = 0;
  unk_268402CB0 = 0;
  qword_268402CB8 = (uint64_t)vhelper_finalize;
  unk_268402CC0 = 0u;
  unk_268402CD0 = 0u;
  uint64_t result = _CFRuntimeRegisterClass();
  APValeriaHelperGetTypeID_typeID = result;
  return result;
}

void *vhelper_finalize(void *result)
{
  uint64_t v1 = result;
  if (result[4])
  {
    if (gLogCategory_APValeriaHelper > 100) {
      goto LABEL_23;
    }
    if (gLogCategory_APValeriaHelper == -1)
    {
      uint64_t result = (void *)_LogCategory_Initialize();
      if (!result) {
        goto LABEL_23;
      }
    }
LABEL_22:
    uint64_t result = (void *)LogPrintF();
LABEL_23:
    __break(1u);
    return result;
  }
  if (result[13])
  {
    if (gLogCategory_APValeriaHelper > 100) {
      goto LABEL_23;
    }
    if (gLogCategory_APValeriaHelper == -1)
    {
      uint64_t result = (void *)_LogCategory_Initialize();
      if (!result) {
        goto LABEL_23;
      }
    }
    goto LABEL_22;
  }
  if (result[18])
  {
    if (gLogCategory_APValeriaHelper > 100) {
      goto LABEL_23;
    }
    if (gLogCategory_APValeriaHelper == -1)
    {
      uint64_t result = (void *)_LogCategory_Initialize();
      if (!result) {
        goto LABEL_23;
      }
    }
    goto LABEL_22;
  }
  uint64_t v2 = (const void *)result[2];
  if (v2)
  {
    CFRelease(v2);
    v1[2] = 0;
  }
  FigSimpleMutexDestroy();
  v1[3] = 0;
  FigSimpleMutexDestroy();
  v1[12] = 0;
  uint64_t result = (void *)FigSimpleMutexDestroy();
  v1[17] = 0;
  if (gLogCategory_APValeriaHelper <= 50)
  {
    if (gLogCategory_APValeriaHelper != -1) {
      return (void *)LogPrintF();
    }
    uint64_t result = (void *)_LogCategory_Initialize();
    if (result) {
      return (void *)LogPrintF();
    }
  }
  return result;
}

uint64_t APValeriaHelperCreate(uint64_t a1, uint64_t *a2)
{
  LogSetAppID();
  if (APValeriaHelperGetTypeID_once != -1) {
    dispatch_once(&APValeriaHelperGetTypeID_once, &__block_literal_global_3722);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    uint64_t v4 = Instance;
    *(_OWORD *)(Instance + 128) = 0u;
    *(_OWORD *)(Instance + 144) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 112) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    *(void *)(Instance + 24) = FigSimpleMutexCreate();
    *(void *)(v4 + 96) = FigSimpleMutexCreate();
    *(void *)(v4 + 136) = FigSimpleMutexCreate();
    *(unsigned char *)(v4 + 88) = FigGetCFPreferenceNumberWithDefault() != 0;
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t result = 0;
    *a2 = v4;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
  return result;
}

uint64_t APValeriaHelperDiscoveryStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
  if (!a2)
  {
    uint64_t v13 = 4294960591;
LABEL_19:
    APSLogErrorAt();
    goto LABEL_16;
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v13 = 4294960587;
    goto LABEL_19;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  FigCFDictionarySetInt32();
  uint64_t v7 = FigRouteDiscovererXPCRemoteCreate();
  if (v7)
  {
    uint64_t v13 = v7;
    goto LABEL_22;
  }
  uint64_t active = vhelper_registerActiveHelper();
  *(void *)(a1 + 56) = active;
  if (!active)
  {
    uint64_t v13 = 4294960588;
LABEL_22:
    APSLogErrorAt();
    if (!Mutable) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 32) = 0;
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  double v12 = *(void (**)(uint64_t, void, void))(v11 + 56);
  if (v12) {
    v12(v9, *MEMORY[0x263F54528], *MEMORY[0x263F54508]);
  }
  if (gLogCategory_APValeriaHelper <= 50
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v13 = 0;
  if (Mutable) {
LABEL_15:
  }
    CFRelease(Mutable);
LABEL_16:
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
  return v13;
}

uint64_t vhelper_registerActiveHelper()
{
  if (vhelper_getActiveHelpers_once != -1) {
    dispatch_once(&vhelper_getActiveHelpers_once, &__block_literal_global_41);
  }
  if (FigCFWeakReferenceTableAddValueAndGetKey()) {
    APSLogErrorAt();
  }
  return 0;
}

void vhelper_handleAvailableEndpointsChanged(uint64_t a1, uint64_t a2)
{
  uint64_t active = vhelper_lookupAndRetainActiveHelperWithID(a2);
  if (active)
  {
    uint64_t v4 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 24));
    if (!*(void *)(v4 + 32) || *(void *)(v4 + 56) != a2 || !*(void *)(v4 + 40))
    {
      pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 24));
LABEL_5:
      CFRelease((CFTypeRef)v4);
      return;
    }
    uint64_t v5 = &unk_268402000;
    if (gLogCategory_APValeriaHelper <= 30
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v7 = *(void (**)(__CFArray *, uint64_t))(v4 + 40);
    uint64_t v6 = *(void *)(v4 + 48);
    CFArrayRef theArray = 0;
    uint64_t v8 = *(void *)(v4 + 32);
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v11 = *(uint64_t (**)(uint64_t, void, void, CFArrayRef *))(v10 + 48);
    if (v11)
    {
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      int v13 = v11(v8, *MEMORY[0x263F54520], *MEMORY[0x263EFFB08], &theArray);
      if (!v13)
      {
        CFMutableDictionaryRef Mutable = theArray;
        if (!*(unsigned char *)(v4 + 88) || !theArray)
        {
          pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 24));
          if (!v7) {
            goto LABEL_51;
          }
          goto LABEL_40;
        }
        CFIndex Count = CFArrayGetCount(theArray);
        if (Count < 1)
        {
          CFMutableDictionaryRef Mutable = 0;
          int v24 = 0;
        }
        else
        {
          CFIndex v16 = Count;
          CFIndex v17 = 0;
          CFMutableDictionaryRef Mutable = 0;
          do
          {
            ValueAtIndex = CFArrayGetValueAtIndex(theArray, v17);
            CFTypeRef cf = 0;
            CFAllocatorRef v19 = CFGetAllocator(ValueAtIndex);
            uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
            uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v21) {
              uint64_t v22 = v21;
            }
            else {
              uint64_t v22 = 0;
            }
            uint64_t v23 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v22 + 48);
            if (v23) {
              v23(CMBaseObject, @"Features", v19, &cf);
            }
            if (APSFeaturesHasFeature())
            {
              if (!Mutable) {
                CFMutableDictionaryRef Mutable = CFArrayCreateMutable(v12, 0, MEMORY[0x263EFFF70]);
              }
              CFArrayAppendValue(Mutable, ValueAtIndex);
            }
            if (cf) {
              CFRelease(cf);
            }
            ++v17;
          }
          while (v16 != v17);
          int v24 = 0;
          uint64_t v5 = (_DWORD *)&unk_268402000;
        }
LABEL_36:
        if (theArray) {
          CFRelease(theArray);
        }
        pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 24));
        if (v24)
        {
          APSLogErrorAt();
          goto LABEL_51;
        }
        if (!v7) {
          goto LABEL_51;
        }
LABEL_40:
        if (Mutable)
        {
          int v25 = v5[72];
          if (v25 <= 30 && (v25 != -1 || _LogCategory_Initialize()))
          {
            CFArrayGetCount(Mutable);
            LogPrintF();
          }
          v7(Mutable, v6);
LABEL_48:
          CFRelease(Mutable);
          goto LABEL_5;
        }
LABEL_51:
        if (!Mutable) {
          goto LABEL_5;
        }
        goto LABEL_48;
      }
      int v24 = v13;
    }
    else
    {
      int v24 = -12782;
    }
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_36;
  }
}

uint64_t vhelper_lookupAndRetainActiveHelperWithID(uint64_t a1)
{
  if (vhelper_getActiveHelpers_once != -1) {
    dispatch_once(&vhelper_getActiveHelpers_once, &__block_literal_global_41);
  }
  uint64_t v2 = vhelper_getActiveHelpers_table;

  return MEMORY[0x270EE8140](v2, a1);
}

uint64_t __vhelper_getActiveHelpers_block_invoke()
{
  uint64_t result = FigCFWeakReferenceTableCreate();
  if (result)
  {
    if (gLogCategory_APValeriaHelper <= 100)
    {
      if (gLogCategory_APValeriaHelper != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t APValeriaHelperDiscoveryStartAndCopyMatchingEndpoint(uint64_t a1, const void *a2, unsigned int a3, void *a4)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
  if (*(void *)(a1 + 32))
  {
    uint64_t v18 = 4294960587;
    APSLogErrorAt();
    uint64_t v11 = 0;
    int v13 = 0;
  }
  else
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    FigCFDictionarySetInt32();
    uint64_t v9 = FigRouteDiscovererXPCRemoteCreate();
    if (v9)
    {
      uint64_t v18 = v9;
      APSLogErrorAt();
      int v13 = 0;
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t active = vhelper_registerActiveHelper();
      uint64_t v11 = active;
      *(void *)(a1 + 56) = active;
      if (active)
      {
        *(void *)(a1 + 40) = vhelper_findMatchingEndpoint;
        *(void *)(a1 + 48) = active;
        if (a2) {
          CFTypeRef v12 = CFRetain(a2);
        }
        else {
          CFTypeRef v12 = 0;
        }
        *(void *)(a1 + 72) = v12;
        int v13 = dispatch_semaphore_create(0);
        *(void *)(a1 + 64) = v13;
        dispatch_retain(v13);
        *(void *)(a1 + 32) = 0;
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterAddListener();
        uint64_t v14 = *(void *)(a1 + 32);
        uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v15) {
          uint64_t v16 = v15;
        }
        else {
          uint64_t v16 = 0;
        }
        CFIndex v17 = *(void (**)(uint64_t, void, void))(v16 + 56);
        if (v17) {
          v17(v14, *MEMORY[0x263F54528], *MEMORY[0x263F54508]);
        }
        if (gLogCategory_APValeriaHelper <= 50
          && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v18 = 0;
      }
      else
      {
        uint64_t v18 = 4294960588;
        APSLogErrorAt();
        int v13 = 0;
      }
    }
    if (Mutable) {
      CFRelease(Mutable);
    }
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
  if (v18)
  {
LABEL_31:
    if (!v13) {
      return v18;
    }
LABEL_32:
    dispatch_release(v13);
    return v18;
  }
  if ((a3 & 0x80000000) != 0) {
    dispatch_time_t v19 = -1;
  }
  else {
    dispatch_time_t v19 = dispatch_time(0, 1000000000 * a3);
  }
  if (!dispatch_semaphore_wait(v13, v19))
  {
    pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
    if (*(void *)(a1 + 32) && *(void *)(a1 + 56) == v11)
    {
      if (a4)
      {
        CFTypeRef v21 = *(CFTypeRef *)(a1 + 80);
        if (v21) {
          CFTypeRef v21 = CFRetain(v21);
        }
        *a4 = v21;
      }
      uint64_t v22 = *(const void **)(a1 + 80);
      if (v22)
      {
        CFRelease(v22);
        uint64_t v18 = 0;
        *(void *)(a1 + 80) = 0;
      }
      else
      {
        uint64_t v18 = 0;
      }
    }
    else
    {
      uint64_t v18 = 4294960573;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
    goto LABEL_31;
  }
  if (gLogCategory_APValeriaHelper <= 90
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APValeriaHelperDiscoveryStop(a1);
  uint64_t v18 = 4294960574;
  if (v13) {
    goto LABEL_32;
  }
  return v18;
}

uint64_t APValeriaHelperDiscoveryStop(uint64_t a1)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
  if (*(void *)(a1 + 32))
  {
    vhelper_unregisterActiveHelperWithID();
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(uint64_t, void, void))(v4 + 56);
    if (v5) {
      v5(v2, *MEMORY[0x263F54528], *MEMORY[0x263F54510]);
    }
    uint64_t v6 = *(const void **)(a1 + 32);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 32) = 0;
    }
    uint64_t v7 = *(const void **)(a1 + 80);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 80) = 0;
    }
    uint64_t v8 = *(const void **)(a1 + 72);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(a1 + 72) = 0;
    }
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    uint64_t v9 = *(NSObject **)(a1 + 64);
    if (v9)
    {
      dispatch_semaphore_signal(v9);
      uint64_t v10 = *(NSObject **)(a1 + 64);
      if (v10)
      {
        dispatch_release(v10);
        *(void *)(a1 + 64) = 0;
      }
    }
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v11 = *(pthread_mutex_t **)(a1 + 24);

  return pthread_mutex_unlock(v11);
}

uint64_t vhelper_unregisterActiveHelperWithID()
{
  if (vhelper_getActiveHelpers_once != -1) {
    dispatch_once(&vhelper_getActiveHelpers_once, &__block_literal_global_41);
  }

  return FigCFWeakReferenceTableRemoveValue();
}

void vhelper_findMatchingEndpoint(const __CFArray *a1, uint64_t a2)
{
  uint64_t active = vhelper_lookupAndRetainActiveHelperWithID(a2);
  if (active)
  {
    uint64_t v5 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 24));
    if (*(void *)(v5 + 32) && *(void *)(v5 + 56) == a2 && *(void *)(v5 + 40))
    {
      CFIndex Count = CFArrayGetCount(a1);
      uint64_t v7 = *(const void **)(v5 + 80);
      if (v7)
      {
        CFRelease(v7);
        *(void *)(v5 + 80) = 0;
      }
      if (Count >= 1)
      {
        CFIndex v8 = 0;
        while (1)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(a1, v8);
          uint64_t v12 = 0;
          int v13 = &v12;
          uint64_t v14 = 0x2000000000;
          char v15 = 1;
          if (!*(void *)(v5 + 72)) {
            break;
          }
          CFDictionaryApplyBlock();
          if (*((unsigned char *)v13 + 24)) {
            break;
          }
          _Block_object_dispose(&v12, 8);
          if (Count == ++v8) {
            goto LABEL_16;
          }
        }
        *(void *)(v5 + 80) = CFRetain(ValueAtIndex);
        _Block_object_dispose(&v12, 8);
      }
LABEL_16:
      if (*(void *)(v5 + 80))
      {
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterRemoveListener();
        *(void *)(v5 + 40) = 0;
        uint64_t v10 = *(NSObject **)(v5 + 64);
        if (v10)
        {
          dispatch_semaphore_signal(v10);
          uint64_t v11 = *(NSObject **)(v5 + 64);
          if (v11)
          {
            dispatch_release(v11);
            *(void *)(v5 + 64) = 0;
          }
        }
      }
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v5 + 24));
    CFRelease((CFTypeRef)v5);
  }
}

void __vhelper_findMatchingEndpoint_block_invoke(uint64_t a1, uint64_t a2)
{
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, void, CFTypeRef *))(v6 + 48);
  if (!v7 || v7(CMBaseObject, a2, *MEMORY[0x263EFFB08], &cf) || !FigCFEqual()) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  }
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t APValeriaHelperReceiverStart(uint64_t a1, const void *a2, int a3)
{
  CFTypeRef cf = 0;
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  if (!a2)
  {
    unsigned int v15 = -6705;
LABEL_22:
    APSLogErrorAt();
    goto LABEL_17;
  }
  if (*(void *)(a1 + 104))
  {
    unsigned int v15 = -6709;
    goto LABEL_22;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  uint64_t v7 = Mutable;
  CFIndex v8 = (const void **)MEMORY[0x263EFFB40];
  if (!a3) {
    CFIndex v8 = (const void **)MEMORY[0x263EFFB38];
  }
  CFDictionarySetValue(Mutable, @"UseDynamicPort", *v8);
  CFDictionarySetValue(v7, @"SBufConsumer", a2);
  unsigned int v15 = AirPlayReceiverServerCreate(v7, (uint64_t *)&cf);
  if (v15) {
    goto LABEL_23;
  }
  uint64_t v10 = *(const void **)(a1 + 16);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(a1 + 16) = 0;
  }
  CFTypeRef v11 = cf;
  *(void *)(a1 + 16) = AirPlayReceiverServerCopyProperty((uint64_t)cf, v9, @"deviceInfo", 0, &v15);
  if (v15 || (unsigned int v15 = CFObjectControlSync()) != 0)
  {
LABEL_23:
    APSLogErrorAt();
  }
  else
  {
    uint64_t active = vhelper_registerActiveHelper();
    *(void *)(a1 + 112) = active;
    if (active)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterAddListener();
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterAddListener();
      *(void *)(a1 + 104) = v11;
      CFTypeRef cf = 0;
      if (gLogCategory_APValeriaHelper <= 50
        && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      APSLogErrorAt();
      unsigned int v15 = -6708;
      CFObjectControlSync();
    }
  }
  if (v7) {
    CFRelease(v7);
  }
LABEL_17:
  if (cf) {
    CFRelease(cf);
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
  return v15;
}

void vhelper_handleClientDisconnected(uint64_t a1, uint64_t a2)
{
  uint64_t active = vhelper_lookupAndRetainActiveHelperWithID(a2);
  if (active)
  {
    uint64_t v4 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 96));
    if (*(void *)(v4 + 104) && *(void *)(v4 + 112) == a2)
    {
      if (gLogCategory_APValeriaHelper <= 50
        && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v4 + 128) = 0;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 96));
    CFRelease((CFTypeRef)v4);
  }
}

void vhelper_handleClientConnected(uint64_t a1, uint64_t a2)
{
  uint64_t active = vhelper_lookupAndRetainActiveHelperWithID(a2);
  if (active)
  {
    uint64_t v4 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 96));
    if (*(void *)(v4 + 104) && *(void *)(v4 + 112) == a2)
    {
      if (gLogCategory_APValeriaHelper <= 50
        && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v4 + 128) = 1;
      uint64_t v5 = *(NSObject **)(v4 + 120);
      if (v5)
      {
        dispatch_semaphore_signal(v5);
        uint64_t v6 = *(NSObject **)(v4 + 120);
        if (v6)
        {
          dispatch_release(v6);
          *(void *)(v4 + 120) = 0;
        }
      }
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 96));
    CFRelease((CFTypeRef)v4);
  }
}

uint64_t APValeriaHelperReceiverStop(uint64_t a1)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  if (*(void *)(a1 + 104))
  {
    vhelper_unregisterActiveHelperWithID();
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
    CFObjectControlSync();
    uint64_t v2 = *(const void **)(a1 + 104);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(a1 + 104) = 0;
    }
    *(void *)(a1 + 112) = 0;
    *(unsigned char *)(a1 + 128) = 0;
    uint64_t v3 = *(NSObject **)(a1 + 120);
    if (v3)
    {
      dispatch_semaphore_signal(v3);
      uint64_t v4 = *(NSObject **)(a1 + 120);
      if (v4)
      {
        dispatch_release(v4);
        *(void *)(a1 + 120) = 0;
      }
    }
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v5 = *(pthread_mutex_t **)(a1 + 96);

  return pthread_mutex_unlock(v5);
}

uint64_t APValeriaHelperReceiverGetListeningPort(uint64_t a1)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  uint64_t v3 = *(void *)(a1 + 104);
  if (!v3)
  {
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
    return 0;
  }
  CFTypeRef v4 = AirPlayReceiverServerCopyProperty(v3, v2, @"listeningPort", 0, 0);
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
  if (!v4) {
    return 0;
  }
  uint64_t v5 = (unsigned __int16)CFGetInt64Ranged();
  CFRelease(v4);
  return v5;
}

uint64_t APValeriaHelperReceiverWaitForConnection(uint64_t a1, unsigned int a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  if (!*(void *)(a1 + 104))
  {
    uint64_t v6 = 4294960587;
LABEL_21:
    APSLogErrorAt();
    goto LABEL_22;
  }
  if (*(unsigned char *)(a1 + 128))
  {
    uint64_t v6 = 0;
LABEL_22:
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
    return v6;
  }
  if (*(void *)(a1 + 120))
  {
    uint64_t v6 = 4294960575;
    goto LABEL_21;
  }
  CFTypeRef v4 = dispatch_semaphore_create(0);
  *(void *)(a1 + 120) = v4;
  dispatch_retain(v4);
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
  if (!v4) {
    return 0;
  }
  if ((a2 & 0x80000000) != 0) {
    dispatch_time_t v5 = -1;
  }
  else {
    dispatch_time_t v5 = dispatch_time(0, 1000000000 * a2);
  }
  if (dispatch_semaphore_wait(v4, v5))
  {
    if (gLogCategory_APValeriaHelper <= 90
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v6 = 4294960574;
  }
  else
  {
    uint64_t v6 = 0;
  }
  dispatch_release(v4);
  return v6;
}

uint64_t APValeriaHelperActivationStart(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 136));
  if (!a2)
  {
    uint64_t v13 = 4294960591;
LABEL_28:
    APSLogErrorAt();
    goto LABEL_23;
  }
  if (*(void *)(a1 + 144))
  {
    uint64_t v13 = 4294960587;
    goto LABEL_28;
  }
  if (gLogCategory_APValeriaHelper <= 50
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t ControlChannelOnlyContext = FigRoutingContextRemoteCreateControlChannelOnlyContext();
  if (ControlChannelOnlyContext)
  {
    uint64_t v13 = ControlChannelOnlyContext;
    goto LABEL_28;
  }
  uint64_t active = vhelper_registerActiveHelper();
  *(void *)(a1 + 152) = active;
  if (!active)
  {
    uint64_t v13 = 4294960588;
    goto LABEL_28;
  }
  *(void *)(a1 + 144) = 0;
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v4, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x263F54538], (const void *)*MEMORY[0x263EFFB40]);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  CFTypeRef v11 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *))(v10 + 8);
  if (!v11)
  {
    uint64_t v13 = 4294954514;
    goto LABEL_18;
  }
  uint64_t v12 = v11(v8, a2, Mutable);
  if (v12)
  {
    uint64_t v13 = v12;
LABEL_18:
    APSLogErrorAt();
    vhelper_stopActivation(a1);
    if (!Mutable) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (gLogCategory_APValeriaHelper <= 50
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v13 = 0;
  if (Mutable) {
LABEL_22:
  }
    CFRelease(Mutable);
LABEL_23:
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 136));
  return v13;
}

void vhelper_stopActivation(uint64_t a1)
{
  if (*(void *)(a1 + 144))
  {
    vhelper_unregisterActiveHelperWithID();
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
    uint64_t v2 = *(void *)(a1 + 144);
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    dispatch_time_t v5 = *(void (**)(uint64_t, void, void))(v4 + 8);
    if (v5) {
      v5(v2, 0, 0);
    }
    uint64_t v6 = *(const void **)(a1 + 144);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 144) = 0;
    }
    *(void *)(a1 + 152) = 0;
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

void vhelper_handleCurrentEndpointChanged(uint64_t a1, uint64_t a2)
{
  uint64_t active = vhelper_lookupAndRetainActiveHelperWithID(a2);
  CFTypeRef cf = 0;
  if (!active) {
    return;
  }
  uint64_t v4 = active;
  pthread_mutex_lock(*(pthread_mutex_t **)(active + 136));
  uint64_t v5 = *(void *)(v4 + 144);
  if (v5 && *(void *)(v4 + 152) == a2)
  {
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    uint64_t v8 = *(unsigned int (**)(uint64_t, CFTypeRef *))(v7 + 24);
    if (!v8 || v8(v5, &cf))
    {
      pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 136));
      APSLogErrorAt();
      goto LABEL_19;
    }
    CFTypeRef v9 = cf;
    CFTypeRef v21 = 0;
    if (cf)
    {
      if (*(void *)(v4 + 16) && APValeriaHelperReceiverGetListeningPort(v4))
      {
        FigEndpointExtendedGetClassID();
        if (CMBaseObjectIsMemberOfClass()) {
          CFTypeRef v10 = v9;
        }
        else {
          CFTypeRef v10 = 0;
        }
        uint64_t v11 = *MEMORY[0x263EFFB08];
        CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, *(CFDictionaryRef *)(v4 + 16));
        CFDictionarySetInt64();
        CFDictionarySetValue(MutableCopy, @"IsValeria", (const void *)*MEMORY[0x263EFFB40]);
        uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 24);
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 0;
        }
        unsigned int v15 = *(unsigned int (**)(CFTypeRef, __CFString *, __CFDictionary *, void, void))(v14 + 72);
        if (!v15 || v15(v10, @"APValeria", MutableCopy, 0, 0))
        {
          APSLogErrorAt();
        }
        else
        {
          CMNotificationCenterGetDefaultLocalCenter();
          CMNotificationCenterRemoveListener();
          uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
          uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v17) {
            uint64_t v18 = v17;
          }
          else {
            uint64_t v18 = 0;
          }
          dispatch_time_t v19 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v18 + 48);
          if (v19) {
            v19(CMBaseObject, *MEMORY[0x263F01510], v11, &v21);
          }
          if (gLogCategory_APValeriaHelper <= 50
            && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        if (MutableCopy) {
          CFRelease(MutableCopy);
        }
      }
      else
      {
        APSLogErrorAt();
      }
      if (v21) {
        CFRelease(v21);
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 136));
LABEL_19:
  if (cf) {
    CFRelease(cf);
  }
  CFRelease((CFTypeRef)v4);
}

uint64_t APValeriaHelperActivationStop(uint64_t a1)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 136));
  vhelper_stopActivation(a1);
  uint64_t v2 = *(pthread_mutex_t **)(a1 + 136);

  return pthread_mutex_unlock(v2);
}

uint64_t apProcessor_SetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v7 = 4294895345;
    goto LABEL_24;
  }
  uint64_t v6 = (unsigned char *)DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"pairingRequired"))
  {
    if (a3)
    {
      uint64_t v7 = 0;
      v6[410] = CFGetInt64() != 0;
      return v7;
    }
    uint64_t v7 = 4294895345;
LABEL_24:
    APSLogErrorAt();
    return v7;
  }
  if (CFEqual(a2, @"didSetup"))
  {
    if (a3)
    {
      uint64_t v7 = 0;
      v6[45] = CFGetInt64() != 0;
      return v7;
    }
    uint64_t v7 = 4294895345;
    goto LABEL_24;
  }
  if (CFEqual(a2, @"didRecord"))
  {
    if (a3)
    {
      uint64_t v7 = 0;
      v6[46] = CFGetInt64() != 0;
      return v7;
    }
    uint64_t v7 = 4294895345;
    goto LABEL_24;
  }
  uint64_t v7 = 4294895342;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v7;
}

void *apProcessor_CopyProperty(uint64_t a1, const void *a2, int *a3)
{
  uint64_t v20 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    int v13 = -71951;
    goto LABEL_15;
  }
  uint64_t v7 = DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"pairingVerified"))
  {
    uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    int v9 = *(unsigned __int8 *)(v7 + 408);
LABEL_10:
    CFTypeRef v10 = (const void **)MEMORY[0x263EFFB38];
    BOOL v11 = v9 == 0;
    goto LABEL_11;
  }
  if (CFEqual(a2, @"pairingPerformedIsSufficientForAuth"))
  {
    uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    int v9 = *(unsigned __int8 *)(v7 + 409);
    goto LABEL_10;
  }
  if (CFEqual(a2, @"pairingRequired"))
  {
    BOOL v15 = 1;
    if (!CFObjectGetPropertyInt64Sync()) {
      BOOL v15 = CFObjectGetPropertyInt64Sync() != 0;
    }
    *(unsigned char *)(v7 + 410) = v15;
    uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
    int v17 = *(unsigned __int8 *)(v7 + 410);
    if (PropertyInt64Sync)
    {
      if (*(unsigned char *)(v7 + 410))
      {
        int v17 = 1;
      }
      else
      {
        int v18 = *(_DWORD *)(v7 + 24);
        int v17 = 1;
        if (v18 != 4 && v18 != 64) {
          int v17 = v18 == 128;
        }
      }
      *(unsigned char *)(v7 + 410) = v17;
    }
    if (v17) {
      uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    }
    else {
      uint64_t v8 = (const void **)MEMORY[0x263EFFB38];
    }
    goto LABEL_13;
  }
  if (CFEqual(a2, @"MCActive"))
  {
    uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    CFTypeRef v10 = (const void **)MEMORY[0x263EFFB38];
    BOOL v11 = *(void *)(v7 + 104) == 0;
LABEL_11:
    if (v11) {
      uint64_t v8 = v10;
    }
LABEL_13:
    uint64_t v12 = *v8;
LABEL_14:
    int v13 = 0;
    uint64_t v20 = (void *)CFRetain(v12);
    goto LABEL_15;
  }
  if (CFEqual(a2, @"RemoteControl"))
  {
    uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    int v9 = *(unsigned __int8 *)(v7 + 440);
    goto LABEL_10;
  }
  if (CFEqual(a2, @"didSetup"))
  {
    uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    int v9 = *(unsigned __int8 *)(v7 + 45);
    goto LABEL_10;
  }
  if (CFEqual(a2, @"didRecord"))
  {
    uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
    int v9 = *(unsigned __int8 *)(v7 + 46);
    goto LABEL_10;
  }
  if (CFEqual(a2, @"hijackID"))
  {
    uint64_t v12 = *(const void **)(v7 + 456);
    if (v12) {
      goto LABEL_14;
    }
LABEL_41:
    APSLogErrorAt();
    int v13 = -71955;
    goto LABEL_15;
  }
  if (CFEqual(a2, @"ClientVersion"))
  {
    uint64_t v20 = CFNumberCreate(0, kCFNumberSInt32Type, (const void *)(v7 + 272));
    if (v20)
    {
LABEL_45:
      int v13 = 0;
      goto LABEL_15;
    }
    APSLogErrorAt();
    int v13 = -71950;
  }
  else
  {
    if (CFEqual(a2, @"parentGroupInfo"))
    {
      dispatch_time_t v19 = *(void **)(v7 + 448);
      uint64_t v20 = v19;
      if (v19) {
        CFRetain(v19);
      }
      goto LABEL_45;
    }
    if (CFEqual(a2, @"senderSupportsMultiHop"))
    {
      uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
      int v9 = *(unsigned __int8 *)(v7 + 441);
      goto LABEL_10;
    }
    if (CFEqual(a2, @"type"))
    {
      airplayReqProcessor_copyType(a1, &v20);
      goto LABEL_45;
    }
    if (CFEqual(a2, @"isMediaSession"))
    {
      if (!*(unsigned char *)(v7 + 440))
      {
        uint64_t v8 = (const void **)MEMORY[0x263EFFB40];
        int v9 = *(unsigned __int8 *)(v7 + 47);
        goto LABEL_10;
      }
      goto LABEL_41;
    }
    int v13 = -71954;
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
LABEL_15:
  if (a3) {
    *a3 = v13;
  }
  return v20;
}

void airplayReqProcessor_copyType(uint64_t a1, void *a2)
{
  CMBaseObjectGetDerivedStorage();
  int Int64 = (const void *)CFNumberCreateInt64();
  if (a2)
  {
    *a2 = Int64;
  }
  else if (Int64)
  {
    CFRelease(Int64);
  }
}

uint64_t airplayReqProcessor_GetMCRPForTargetSessionID(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v8 = 0;
  int v9 = &v8;
  uint64_t v10 = 0x2000000000;
  uint64_t v11 = 0;
  v6[0] = 0;
  v6[1] = v6;
  v6[2] = 0x2000000000;
  int v7 = 0;
  CFDictionaryRef v4 = *(const __CFDictionary **)(CMBaseObjectGetDerivedStorage() + 104);
  if (v4)
  {
    if (CFDictionaryGetCount(v4))
    {
      CFDictionaryApplyBlock();
      if (a3) {
        *a3 = v9[3];
      }
    }
  }
  _Block_object_dispose(v6, 8);
  _Block_object_dispose(&v8, 8);
  return 0;
}

uint64_t APReceiverRequestProcessorCopyProperty_3853(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  if (!v8) {
    return 0;
  }

  return v8(a1, a2, a3);
}

uint64_t airplayReqProcessor_GetMCRPForMCSession(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 104))
  {
    CFDictionaryRef Value = 0;
    if (!a3) {
      return 0;
    }
    goto LABEL_5;
  }
  uint64_t v5 = DerivedStorage;
  int Int64 = (const void *)CFNumberCreateInt64();
  CFDictionaryRef Value = CFDictionaryGetValue(*(CFDictionaryRef *)(v5 + 104), Int64);
  if (Int64) {
    CFRelease(Int64);
  }
  if (a3) {
LABEL_5:
  }
    *a3 = Value;
  return 0;
}

uint64_t airplayReqProcessor_HandleRequest(const void *a1, uint64_t a2, const __CFDictionary *a3, CFMutableDictionaryRef *a4)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = DerivedStorage;
  uint64_t v10 = *(void *)(DerivedStorage + 32);
  if (v10) {
    ++*(_DWORD *)(v10 + 500);
  }
  if (!*(void *)(DerivedStorage + 120)) {
    *(void *)(DerivedStorage + 120) = CFDictionaryGetHardwareAddress();
  }
  if (!*(unsigned char *)(v9 + 134))
  {
    CFDictionaryGetCString();
    airplayReqProcessor_updateUIClientName((uint64_t)a1, (const char *)(v9 + 134));
  }
  if (!*(unsigned char *)(v9 + 408) && *(unsigned char *)(v9 + 410))
  {
    if ((int)a2 <= 1885435492)
    {
      if (a2 == 1702064240 || a2 == 1768842863) {
        goto LABEL_8;
      }
      int v13 = 1885434725;
    }
    else if ((int)a2 > 1886613611)
    {
      if (a2 == 1886613612) {
        goto LABEL_8;
      }
      int v13 = 1886614892;
    }
    else
    {
      if (a2 == 1885435493) {
        goto LABEL_8;
      }
      int v13 = 1886417780;
    }
    if (a2 != v13)
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v36 = (const char *)CFDictionaryCopyCString();
      uint64_t v37 = (char *)v36;
      if (v36)
      {
        size_t v38 = strlen(v36);
        if (v38)
        {
          if (memchr(v37, 47, v38) && TextToSourceVersion() > 0x1E9037) {
            goto LABEL_177;
          }
        }
      }
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (v37) {
LABEL_177:
      }
        free(v37);
      return 4294895363;
    }
  }
LABEL_8:
  *a4 = 0;
  uint64_t v11 = 4294895361;
  if ((int)a2 > 1886283374)
  {
    if ((int)a2 <= 1920365170)
    {
      if ((int)a2 <= 1886614891)
      {
        if ((int)a2 > 1886545266)
        {
          if (a2 == 1886545267 || a2 == 1886611505) {
            goto LABEL_107;
          }
          if (a2 != 1886613612) {
            return v11;
          }
          return airplayReqProcessor_requestProcessPairSetupPINLegacy(a1, a3, a4);
        }
        else
        {
          if (a2 == 1886283375 || a2 == 1886414964) {
            goto LABEL_107;
          }
          if (a2 != 1886417780) {
            return v11;
          }
          return airplayReqProcessor_requestProcessPairSetupPINStart(a1);
        }
      }
      if ((int)a2 <= 1918984563)
      {
        if (a2 != 1886614892)
        {
          if (a2 == 1886679924) {
            goto LABEL_107;
          }
          int v12 = 1886809964;
          goto LABEL_106;
        }
        return airplayReqProcessor_requestProcessPairSetupUnauthenticatedLegacy((uint64_t)a1, a3, a4);
      }
      if ((int)a2 <= 1919119971)
      {
        if (a2 == 1918984564) {
          goto LABEL_107;
        }
        int v12 = 1918989413;
        goto LABEL_106;
      }
      if (a2 == 1919119972) {
        return airplayReqProcessor_requestProcessRecord((uint64_t)a1, (uint64_t)a3, a4);
      }
      int v12 = 1920168547;
LABEL_106:
      if (a2 != v12) {
        return v11;
      }
LABEL_107:
      unsigned int v50 = 0;
      BOOL v15 = (void *)CMBaseObjectGetDerivedStorage();
      int v49 = 0;
      uint64_t v48 = 0;
      if (APSIsAPMSpeaker())
      {
        APSLogErrorAt();
        return -71931;
      }
      uint64_t Int64 = CFDictionaryGetInt64();
      airplayReqProcessor_GetMCRPForMCSession((uint64_t)a1, Int64, &v48);
      int v49 = 0;
      uint64_t v17 = v48;
      if (v48) {
        goto LABEL_121;
      }
      if (!airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v50))
      {
LABEL_197:
        APSLogErrorAt();
        return v50;
      }
      if (Int64)
      {
        *(void *)&long long v51 = 0;
        HIBYTE(v51) = 0;
        *(void *)((char *)&v51 + 7) = Int64;
        int v49 = airplayReqProcessor_createAndStoreMediaControlRequestProcessorForMCSession((uint64_t)a1, Int64, &v51);
        if (!v49)
        {
          int v18 = *(NSObject **)(*v15 + 88);
          uint64_t v19 = CMBaseObjectGetDerivedStorage();
          uint64_t v20 = *(void *)(v19 + 32);
          if (v20 && *(void *)(v20 + 464))
          {
            CFTypeRef v21 = (uint64_t *)v19;
            if (gAirPlayReceiverReverseConnectionInitOnce != -1) {
              dispatch_once_f(&gAirPlayReceiverReverseConnectionInitOnce, 0, (dispatch_function_t)_AirPlayReceiverReverseConnectionGetTypeID);
            }
            uint64_t Instance = _CFRuntimeCreateInstance();
            if (Instance)
            {
              uint64_t v23 = Instance;
              *(void *)(Instance + 80) = 0;
              *(_OWORD *)(Instance + 48) = 0u;
              *(_OWORD *)(Instance + 64) = 0u;
              *(_OWORD *)(Instance + 16) = 0u;
              *(_OWORD *)(Instance + 32) = 0u;
              dispatch_retain(v18);
              *(void *)(v23 + 72) = v18;
              __strlcpy_chk();
              *(_OWORD *)(v23 + 38) = v51;
              *(void *)(v23 + 56) = Int64;
              int v24 = *(const void **)(v21[4] + 464);
              *(void *)(v23 + 64) = v24;
              CFRetain(v24);
              *(unsigned char *)(v23 + 80) = 1;
              int v25 = AirPlayReceiverServerStoreReverseConnectionContext(*v21, v23 + 38, (const void *)v23);
              if (!v25)
              {
                CFRelease((CFTypeRef)v23);
                int v49 = 0;
                uint64_t v26 = Int64;
LABEL_120:
                airplayReqProcessor_GetMCRPForMCSession((uint64_t)a1, v26, &v48);
                int v49 = 0;
                uint64_t v17 = v48;
                if (v48)
                {
LABEL_121:
                  if (a2 != 1886151033 || Int64)
                  {
LABEL_125:
                    uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 16);
                    if (v28) {
                      uint64_t v29 = v28;
                    }
                    else {
                      uint64_t v29 = 0;
                    }
                    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, const __CFDictionary *, CFMutableDictionaryRef *))(v29 + 24);
                    unsigned int v31 = -71934;
                    if (v30) {
                      unsigned int v31 = v30(v17, a2, a3, a4);
                    }
                    unsigned int v50 = v31;
                    if (!Int64)
                    {
                      if (a2 != 1886151033 || v31)
                      {
                        if (a2 == 1937010544)
                        {
                          airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 0);
                          airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(a1);
                        }
                      }
                      else
                      {
                        uint64_t v32 = (const void *)v15[57];
                        if (v32)
                        {
                          CFRelease(v32);
                          v15[57] = 0;
                        }
                        CMBaseObjectGetDerivedStorage();
                        v15[57] = CFStringCreateF();
                        airplayReqProcessor_handleNewSessionFromHTUnawareSender();
                        int v49 = airplayReqProcessor_registerReqProcWithSessionManager(a1, 0);
                        if (v49)
                        {
                          APSLogErrorAt();
                          return -71934;
                        }
                        else
                        {
                          airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 1);
                        }
                      }
                    }
                    return v50;
                  }
                  unsigned int v50 = airplayReqProcessor_hijackCurrentSessionIfNeeded(a1);
                  if (!v50)
                  {
                    uint64_t v17 = v48;
                    goto LABEL_125;
                  }
                  goto LABEL_197;
                }
                goto LABEL_203;
              }
              int v47 = v25;
              APSLogErrorAt();
              CFRelease((CFTypeRef)v23);
            }
            else
            {
              APSLogErrorAt();
              int v47 = -6728;
            }
          }
          else
          {
            APSLogErrorAt();
            int v47 = -6705;
          }
          int v49 = v47;
        }
LABEL_203:
        APSLogErrorAt();
        return -71946;
      }
      int v27 = airplayReqProcessor_createAndStoreMediaControlRequestProcessorForMCSession((uint64_t)a1, 0, 0);
      uint64_t v26 = 0;
      int v49 = v27;
      if (v27)
      {
        APSLogErrorAt();
        return -71930;
      }
      goto LABEL_120;
    }
    if ((int)a2 <= 1936941937)
    {
      if ((int)a2 <= 1936027767)
      {
        if (a2 == 1920365171 || a2 == 1936024939) {
          goto LABEL_107;
        }
        if (a2 != 1936027749) {
          return v11;
        }
      }
      else
      {
        if ((int)a2 > 1936749164)
        {
          if (a2 == 1936749165) {
            return airplayReqProcessor_requestProcessSetParameter((uint64_t)a1, a3);
          }
          if (a2 != 1936875892) {
            return v11;
          }
          return airplayReqProcessor_requestProcessSetRateAndAnchorTime((uint64_t)a1, (uint64_t)a3, a4);
        }
        if (a2 != 1936027768)
        {
          int v12 = 1936748658;
          goto LABEL_106;
        }
      }
      return airplayReqProcessor_requestProcessSetPeers();
    }
    if ((int)a2 <= 1937011315)
    {
      if (a2 == 1936941938) {
        goto LABEL_107;
      }
      if (a2 == 1936942192) {
        return airplayReqProcessor_requestProcessSetupSDP(a1, a3, a4);
      }
      int v12 = 1937010544;
      goto LABEL_106;
    }
    if ((int)a2 <= 1952741229)
    {
      if (a2 == 1937011316) {
        return airplayReqProcessor_requestProcessSetRate((uint64_t)a1, (uint64_t)a3, a4);
      }
      if (a2 != 1937012080) {
        return v11;
      }
      return airplayReqProcessor_requestProcessSetupPlist(a1, (uint64_t)a3, a4);
    }
    if (a2 != 1952741230 && a2 != 1953719408) {
      return v11;
    }
    uint64_t v33 = CMBaseObjectGetDerivedStorage();
    LOBYTE(v48) = 1;
    LODWORD(v51) = 0;
    int v34 = gLogCategory_APReceiverRequestProcessorAirPlay;
    if (gLogCategory_APReceiverRequestProcessorAirPlay > 50) {
      goto LABEL_181;
    }
    if (gLogCategory_APReceiverRequestProcessorAirPlay == -1)
    {
      if (!_LogCategory_Initialize())
      {
LABEL_181:
        CFDataGetTypeID();
        TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
        CFDataRef v40 = TypedValue;
        if (TypedValue)
        {
          CFDataGetBytePtr(TypedValue);
          CFDataGetLength(v40);
          CFDictionaryGetTypeID();
          CFDataRef v40 = (const __CFData *)CFCreateWithPlistBytes();
        }
        uint64_t v41 = *(void *)(v33 + 32);
        if (v41) {
          AirPlayReceiverSessionTearDown(v41, (uint64_t)v40, 0, (BOOL *)&v48);
        }
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (Mutable)
        {
          uint64_t v43 = Mutable;
          if ((_BYTE)v48)
          {
            uint64_t v44 = *(const void **)(v33 + 32);
            if (v44)
            {
              CFRelease(v44);
              *(void *)(v33 + 32) = 0;
            }
            uint64_t v45 = *(const void **)(v33 + 448);
            if (v45)
            {
              CFRelease(v45);
              *(void *)(v33 + 448) = 0;
            }
            *(_WORD *)(v33 + 44) = 0;
            *(unsigned char *)(v33 + 46) = 0;
            airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 0);
            airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(a1);
          }
          uint64_t v11 = 0;
          *a4 = v43;
        }
        else
        {
          APSLogErrorAt();
          uint64_t v11 = 4294895362;
        }
        if (v40) {
          CFRelease(v40);
        }
        return v11;
      }
      int v34 = gLogCategory_APReceiverRequestProcessorAirPlay;
    }
    if (v34 == -1) {
      _LogCategory_Initialize();
    }
    LogPrintF();
    goto LABEL_181;
  }
  if ((int)a2 > 1735615345)
  {
    if ((int)a2 <= 1819240223)
    {
      if ((int)a2 <= 1735616869)
      {
        if (a2 == 1735615346 || a2 == 1735616561) {
          goto LABEL_107;
        }
        int v12 = 1735616614;
        goto LABEL_106;
      }
      if ((int)a2 <= 1768842862)
      {
        if (a2 == 1735616870) {
          goto LABEL_107;
        }
        int v12 = 1735684980;
        goto LABEL_106;
      }
      if (a2 == 1768842863) {
        return airplayReqProcessor_requestProcessGetInfo((uint64_t)a1, (uint64_t)a3, a4);
      }
      if (a2 != 1801807216) {
        return v11;
      }
      return airplayReqProcessor_requestProcessFeedback((uint64_t)a1, a3, a4);
    }
    if ((int)a2 <= 1885434724)
    {
      if (a2 == 1819240224) {
        return airplayReqProcessor_requestProcessGetLog((uint64_t)a1, a4);
      }
      if (a2 == 1836348024) {
        return airplayReqProcessor_requestProcessMetrics((uint64_t)a1, (uint64_t)a3, a4);
      }
      if (a2 != 1869640819) {
        return v11;
      }
      return airplayReqProcessor_requestProcessOptions(a4);
    }
    if ((int)a2 > 1885435492)
    {
      if (a2 == 1885435493) {
        return airplayReqProcessor_requestProcessPairVerify((uint64_t)a1, a3, a4);
      }
      int v12 = 1886151033;
    }
    else
    {
      if (a2 == 1885434725) {
        return airplayReqProcessor_requestProcessPairSetup(a1, a3, a4);
      }
      int v12 = 1885435252;
    }
    goto LABEL_106;
  }
  if ((int)a2 > 1718383463)
  {
    if ((int)a2 <= 1718839393)
    {
      if (a2 == 1718383464) {
        return airplayReqProcessor_requestProcessFlush((uint64_t)a1, (uint64_t)a3, a4);
      }
      if (a2 == 1718628917) {
        return airplayReqProcessor_requestProcessFPSetup();
      }
      if (a2 != 1718645554) {
        return v11;
      }
      return airplayReqProcessor_requestProcessFPSetup2();
    }
    if ((int)a2 > 1735422065)
    {
      if (a2 == 1735422066) {
        goto LABEL_107;
      }
      if (a2 != 1735422573) {
        return v11;
      }
      return airplayReqProcessor_requestProcessGetParameter();
    }
    if (a2 == 1718839394) {
      return airplayReqProcessor_requestProcessFlushBuffered((uint64_t)a1, (uint64_t)a3, a4);
    }
    int v12 = 1735222134;
    goto LABEL_106;
  }
  if ((int)a2 <= 1634627170)
  {
    if (a2 == 1633907822) {
      goto LABEL_107;
    }
    if (a2 == 1634562925) {
      return airplayReqProcessor_requestProcessSetAudioMode();
    }
    if (a2 != 1634624360) {
      return v11;
    }
    return airplayReqProcessor_requestProcessGetAnchor((uint64_t)a1, (uint64_t)a3, a4);
  }
  switch(a2)
  {
    case 0x616E6E63:
      return airplayReqProcessor_requestProcessAnnounce(a1);
    case 0x636F6D6D:
      return airplayReqProcessor_requestProcessCommand(a1, (uint64_t)a3, a4);
    case 0x65737070:
      airplayReqProcessor_requestProcessEnsurePairPin();
      return 0;
  }
  return v11;
}

void airplayReqProcessor_updateUIClientName(uint64_t a1, const char *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 8) && *a2)
  {
    uint64_t v4 = DerivedStorage;
    CFStringRef v5 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, 0x8000100u);
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = *(void (**)(uint64_t, __CFString *, CFStringRef))(v8 + 56);
    if (v9) {
      v9(v6, @"ClientName", v5);
    }
    CFRelease(v5);
  }
}

uint64_t airplayReqProcessor_requestProcessAnnounce(const void *a1)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  unsigned int v32 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    APSLogErrorAt();
    return -71930;
  }
  if (!airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v32)) {
    goto LABEL_113;
  }
  if (*(unsigned char *)(DerivedStorage + 44)) {
    return -71931;
  }
  CFDictionaryGetData();
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
LABEL_114:
    APSLogErrorAt();
    return -71938;
  }
  CFDataRef v5 = (const __CFData *)TypedValue;
  int v6 = *(_DWORD *)(DerivedStorage + 24);
  if ((v6 == 4 || v6 == 128 || v6 == 64)
    && !APReceiverSystemInfoAllowsP2PConnectionFromMACAddress(*(void *)(*(void *)DerivedStorage + 160), DerivedStorage + 128))
  {
    APSLogErrorAt();
    return -71933;
  }
  unsigned int v32 = airplayReqProcessor_hijackCurrentSessionIfNeeded(a1);
  if (v32)
  {
LABEL_113:
    APSLogErrorAt();
    return v32;
  }
  if (SDPFindSessionSection()) {
    goto LABEL_114;
  }
  SDPFindType();
  SNScanF();
  SDPFindType();
  TruncateUTF8();
  if (SDPFindMediaSection()) {
    goto LABEL_109;
  }
  if (strncmp_prefix()) {
    goto LABEL_19;
  }
  uint64_t v50 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  v45[1] = 0;
  uint64_t v46 = 0;
  uint64_t v44 = 0;
  v45[0] = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  unint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  CFIndex Length = CFDataGetLength(v5);
  BytePtr = CFDataGetBytePtr(v5);
  if (SDPFindMediaSection()) {
    goto LABEL_77;
  }
  if (SNScanF() != 1) {
    goto LABEL_77;
  }
  if (SDPFindAttribute()) {
    goto LABEL_77;
  }
  uint64_t v22 = (_OWORD **)v45;
  if (SNScanF() != 2 || v46 != HIDWORD(v46)) {
    goto LABEL_77;
  }
  if (strnicmpx())
  {
    if (strnicmpx())
    {
      if (strnicmpx() && strnicmpx()) {
        goto LABEL_109;
      }
      *(void *)(v9 + 84) = 0x16000000001;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      uint64_t v52 = 0;
      int v34 = 0;
      uint64_t v35 = 0;
      uint64_t v33 = 0;
      if (SDPFindAttribute()) {
        goto LABEL_77;
      }
      uint64_t v22 = &v35;
      if (SNScanF() != 2 || v46 != HIDWORD(v46)) {
        goto LABEL_77;
      }
      uint64_t v33 = 3;
      int v34 = "AAC";
      SDPFindParameter();
      if (strncmpx())
      {
        if (strncmpx())
        {
          if (gLogCategory_APReceiverRequestProcessorAirPlay > 90
            || gLogCategory_APReceiverRequestProcessorAirPlay == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_109;
          }
LABEL_53:
          LogPrintF();
LABEL_109:
          APSLogErrorAt();
          return -71936;
        }
        int v18 = 8;
      }
      else
      {
        int v18 = 4;
      }
      *(_DWORD *)(v9 + 84) = v18;
      uint64_t v33 = 4;
      int v34 = "1024";
      SDPFindParameter();
      if (SNScanF() != 1) {
        goto LABEL_77;
      }
    }
  }
  else
  {
    LODWORD(v52) = 0;
    LODWORD(v35) = 0;
    LODWORD(v34) = 0;
    LODWORD(v33) = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v37 = 0;
    int v36 = 0;
    if (SDPFindAttribute()) {
      goto LABEL_77;
    }
    uint64_t v30 = &v37;
    unsigned int v31 = &v36;
    uint64_t v28 = &v38;
    uint64_t v29 = (char *)&v37 + 4;
    uint64_t v26 = &v39;
    int v27 = (char *)&v38 + 4;
    int v24 = &v33;
    int v25 = (char *)&v39 + 4;
    uint64_t v22 = &v35;
    uint64_t v23 = &v34;
    if (SNScanF() != 12 || v46 != HIDWORD(v46)) {
      goto LABEL_77;
    }
    int v10 = v52;
    *(_DWORD *)(v9 + 84) = 2;
    *(_DWORD *)(v9 + 88) = v10;
  }
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  SDPFindAttribute();
  if (v44)
  {
    uint64_t v35 = 0;
    LODWORD(v34) = 0;
    if (Base64Decode() || v40 >= 0x101 || !*(void *)(v9 + 384)) {
      goto LABEL_77;
    }
    OowSGu();
    if (v19)
    {
      if (*(void *)(v9 + 384))
      {
        IPaI1oem5iL();
        *(void *)(v9 + 384) = 0;
      }
      goto LABEL_77;
    }
    if (v34 != 16)
    {
      jEHf8Xzsv8K((uint64_t)v35);
      goto LABEL_77;
    }
    uint64_t v20 = v35;
    *(_OWORD *)(v9 + 48) = *v35;
    jEHf8Xzsv8K((uint64_t)v20);
    if ((*(_DWORD *)(v9 + 356) & 0xFFFFFFFE) != 2) {
      goto LABEL_109;
    }
  }
  SDPFindAttribute();
  if (v44 && v42)
  {
    if (!Base64Decode() && v40 == 16)
    {
      char v21 = 1;
      goto LABEL_100;
    }
LABEL_77:
    APSLogErrorAt();
    goto LABEL_109;
  }
  if (v44 | v42)
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay > 90
      || gLogCategory_APReceiverRequestProcessorAirPlay == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_109;
    }
    goto LABEL_53;
  }
  char v21 = 0;
LABEL_100:
  *(_DWORD *)(v9 + 92) = 11025;
  *(unsigned char *)(v9 + 80) = v21;
  CFIndex Length = 0;
  uint64_t v50 = 0;
  SDPFindAttribute();
  if (Length && SNScanF() != 1) {
    goto LABEL_77;
  }
  *(_DWORD *)(v9 + 96) = 88200;
  CFIndex Length = 0;
  uint64_t v50 = 0;
  SDPFindAttribute();
  if (Length)
  {
    if (SNScanF() != 1) {
      goto LABEL_77;
    }
  }
LABEL_19:
  if (*(void *)(DerivedStorage + 8))
  {
    int v7 = *(_DWORD *)(DerivedStorage + 24);
    if (v7 <= 31)
    {
      uint64_t v8 = "Enet";
      switch(v7)
      {
        case 1:
          goto LABEL_63;
        case 2:
          uint64_t v8 = "WiFi";
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_56;
        case 4:
          uint64_t v8 = "AWDL";
          break;
        case 8:
          uint64_t v8 = "USB";
          break;
        default:
          if (v7 != 16) {
            goto LABEL_56;
          }
          uint64_t v8 = "Direct";
          break;
      }
      goto LABEL_63;
    }
    if (v7 > 127)
    {
      if (v7 == 128)
      {
        uint64_t v8 = "NAN";
        goto LABEL_63;
      }
      if (v7 == 256)
      {
        uint64_t v8 = "IPsecBT";
        goto LABEL_63;
      }
    }
    else
    {
      if (v7 == 32)
      {
        uint64_t v8 = "BTLE";
        goto LABEL_63;
      }
      if (v7 == 64)
      {
        uint64_t v8 = "WFD";
LABEL_63:
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"AirPlay starting...\n%s\n%s\n", DerivedStorage + 134, v8, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
        uint64_t v12 = *(void *)(DerivedStorage + 8);
        uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 0;
        }
        BOOL v15 = *(void (**)(uint64_t, uint64_t, CFStringRef))(v14 + 24);
        if (v15) {
          v15(v12, 30, v11);
        }
        CFRelease(v11);
        goto LABEL_69;
      }
    }
LABEL_56:
    uint64_t v8 = "?";
    if (v7 == 512) {
      uint64_t v8 = "IPSecWiFi";
    }
    goto LABEL_63;
  }
LABEL_69:
  __strlcpy_chk();
  *(unsigned char *)(DerivedStorage + 44) = 1;
  *(unsigned char *)(DerivedStorage + 440) = 0;
  uint64_t v16 = *(const void **)(DerivedStorage + 456);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(DerivedStorage + 456) = 0;
  }
  CMBaseObjectGetDerivedStorage();
  *(void *)(DerivedStorage + 456) = CFStringCreateF();
  if (!airplayReqProcessor_registerReqProcWithSessionManager(a1, 0)) {
    return 0;
  }
  APSLogErrorAt();
  return -71934;
}

uint64_t airplayReqProcessor_requestProcessOptions(CFMutableDictionaryRef *a1)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v3 = Mutable;
    CFDictionarySetCString();
    uint64_t result = 0;
    *a1 = v3;
  }
  else
  {
    APSLogErrorAt();
    return 4294895362;
  }
  return result;
}

uint64_t airplayReqProcessor_requestProcessSetParameter(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  uint64_t v3 = 4294895366;
  if (!*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 45)) {
    return 4294895365;
  }
  CFStringGetTypeID();
  TypedCFDictionaryRef Value = (const __CFString *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    if (CFStringCopyUTF8CString())
    {
      APSLogErrorAt();
      return 0;
    }
    TypedCFDictionaryRef Value = (const __CFString *)CFStringGetLength(TypedValue);
  }
  CFDataGetTypeID();
  CFDataRef v5 = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue && (!v5 || !CFDataGetLength(v5))) {
    return 0;
  }
  if (!strnicmp_prefix())
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    *(_DWORD *)uint64_t v48 = 0;
    CFDictionaryRef Value = (__CFString *)CFDictionaryGetValue(a2, @"applyTS");
    if (Value)
    {
      unsigned int v32 = Value;
      CFStringGetTypeID();
      uint64_t v33 = (const void *)CFDictionaryGetTypedValue();
      CFDataGetTypeID();
      CFDataRef v34 = (const __CFData *)CFDictionaryGetTypedValue();
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        int v36 = Mutable;
        CFDictionarySetValue(Mutable, @"artworkMIMEType", v33);
        if (v34 && CFDataGetLength(v34) >= 1)
        {
          uint64_t v37 = v36;
          CFDataRef v38 = v34;
        }
        else
        {
          CFDataRef v38 = (const __CFData *)*MEMORY[0x263EFFD08];
          uint64_t v37 = v36;
        }
        CFDictionarySetValue(v37, @"artworkData", v38);
        if (AirPlayReceiverSessionSetProperty(*(void *)(DerivedStorage + 32), v42, @"metaData", v32, v36))
        {
          APSLogErrorAt();
          uint64_t v6 = 4294895362;
        }
        else
        {
          uint64_t v6 = 0;
        }
        CFRelease(v36);
        return v6;
      }
LABEL_81:
      APSLogErrorAt();
      return 4294895362;
    }
LABEL_80:
    APSLogErrorAt();
    return 4294895366;
  }
  if (!strnicmpx())
  {
    CMBaseObjectGetDerivedStorage();
    HIBYTE(v47) = 0;
    if (CFDictionaryGetValue(a2, @"applyTS"))
    {
      *(void *)uint64_t v48 = 0;
      CFStringGetTypeID();
      CFDictionaryGetTypedValue();
      CFDataGetTypeID();
      CFDataRef v39 = (const __CFData *)CFDictionaryGetTypedValue();
      CFMutableDictionaryRef v40 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (v40)
      {
        CFMutableDictionaryRef v41 = v40;
        CFDataGetBytePtr(v39);
        CFDataGetLength(v39);
        CFDataGetBytePtr(v39);
        DMAPContentBlock_GetNextChunk();
        APSLogErrorAt();
        CFRelease(v41);
        return v3;
      }
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  uint64_t v6 = 4294895364;
  if (strnicmpx()) {
    return v6;
  }
  uint64_t v7 = CMBaseObjectGetDerivedStorage();
  CFDataGetTypeID();
  CFDataRef v8 = (const __CFData *)CFDictionaryGetTypedValue();
  BytePtr = CFDataGetBytePtr(v8);
  CFIndex Length = CFDataGetLength(v8);
  if (Length < 1) {
    return 0;
  }
  unint64_t v11 = (unint64_t)&BytePtr[Length];
  uint64_t v12 = &BytePtr[Length];
  uint64_t v13 = 4294895355;
  while (1)
  {
    uint64_t v14 = 0;
    while (1)
    {
      BOOL v15 = &BytePtr[v14];
      if (BytePtr[v14] == 58) {
        break;
      }
      if (v12 - BytePtr == ++v14) {
        return v13;
      }
    }
    if (v15 == BytePtr) {
      return v13;
    }
    uint64_t v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) < v11)
    {
      while (1)
      {
        int v17 = *v16;
        if (v17 != 32 && v17 != 9) {
          break;
        }
        if ((unint64_t)++v16 >= v11)
        {
          uint64_t v16 = (const UInt8 *)v11;
          break;
        }
      }
    }
    int v19 = v16;
    if ((unint64_t)v16 < v11)
    {
      int64_t v20 = v12 - v16;
      int v19 = v16;
      while (1)
      {
        int v21 = *v19;
        if (v21 == 10 || v21 == 13) {
          break;
        }
        ++v19;
        if (!--v20)
        {
          int v19 = (const UInt8 *)v11;
          break;
        }
      }
    }
    uint64_t v44 = v12;
    unsigned int v45 = v13;
    unint64_t v23 = v19 - v16;
    if (strnicmpx())
    {
      if (strnicmpx()) {
        return v45;
      }
      HIBYTE(v47) = 0;
      *(_DWORD *)uint64_t v48 = 0;
      if (SNScanF() != 3)
      {
        uint64_t v3 = 4294895364;
LABEL_84:
        APSLogErrorAt();
        return v3;
      }
      CFMutableDictionaryRef v24 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!v24)
      {
        uint64_t v3 = 4294895362;
        goto LABEL_84;
      }
      CFMutableDictionaryRef v25 = v24;
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      int v46 = AirPlayReceiverSessionSetProperty(*(void *)(v7 + 32), v26, @"progress", 0, v25);
      CFRelease(v25);
      if (v46) {
        return 4294895354;
      }
      goto LABEL_44;
    }
    if (v23 >= 0x100)
    {
      APSLogErrorAt();
      return 4294895364;
    }
    if (*(unsigned char *)(v7 + 440)) {
      break;
    }
    __memcpy_chk();
    v48[v23] = 0;
    strtod(v48, 0);
    if (*(void *)(v7 + 32))
    {
      if (CFObjectSetPropertyDouble()) {
        goto LABEL_89;
      }
    }
    else if (CFObjectSetPropertyDouble())
    {
LABEL_89:
      APSLogErrorAt();
      return 4294895362;
    }
LABEL_44:
    if ((unint64_t)v19 >= v11)
    {
      uint64_t v13 = v45;
      uint64_t v12 = v44;
    }
    else
    {
      uint64_t v12 = v44;
      int64_t v27 = v44 - v19;
      uint64_t v13 = v45;
      while (1)
      {
        int v28 = *v19;
        if (v28 != 13 && v28 != 10) {
          break;
        }
        ++v19;
        if (!--v27)
        {
          int v19 = (const UInt8 *)v11;
          break;
        }
      }
    }
    BytePtr = v19;
    if ((unint64_t)v19 >= v11) {
      return 0;
    }
  }
  APSLogErrorAt();
  uint64_t v3 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay > 50) {
    return v3;
  }
  if (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()) {
    LogPrintF();
  }
  return 0;
}

uint64_t airplayReqProcessor_requestProcessFlush(uint64_t a1, uint64_t a2, __CFDictionary **a3)
{
  int v16 = 0;
  *(_OWORD *)BOOL v15 = *MEMORY[0x263F249C0];
  long long v4 = *(_OWORD *)v15;
  *(_OWORD *)&v15[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  v14[0] = v4;
  *(_OWORD *)((char *)v14 + 12) = *(_OWORD *)&v15[12];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 40
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v6 = 4294895362;
  if (!*(unsigned char *)(DerivedStorage + 46)) {
    return 4294895365;
  }
  CFDictionaryGetInt64Ranged();
  int v16 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
  if (v16
    || (v13[0] = *(_OWORD *)v15,
        *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)&v15[12],
        !APSAudioTransportTimeIsValid()))
  {
    APSLogErrorAt();
    return 4294895366;
  }
  uint64_t v7 = *(void *)(DerivedStorage + 32);
  v13[0] = *(_OWORD *)v15;
  *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)&v15[12];
  int v16 = AirPlayReceiverSessionFlushAudio(v7, 0, MEMORY[0x263F249C0], 0, v13);
  if (v16 || (CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90])) == 0)
  {
    APSLogErrorAt();
    return v6;
  }
  uint64_t v9 = Mutable;
  if (LODWORD(v14[0]) == 2)
  {
    v13[0] = v14[0];
    *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)v14 + 12);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    goto LABEL_16;
  }
  if (LODWORD(v14[0]) != 1)
  {
LABEL_16:
    uint64_t v6 = 0;
    *a3 = v9;
    return v6;
  }
  int v10 = CFStringCreateMutable(0, 0);
  if (v10)
  {
    unint64_t v11 = v10;
    CFStringAppendFormat(v10, 0, @"rtptime=%u", DWORD1(v14[0]));
    CFDictionarySetValue(v9, @"RTP-Info", v11);
    *a3 = v9;
    CFRelease(v11);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    CFRelease(v9);
  }
  return v6;
}

uint64_t airplayReqProcessor_requestProcessFlushBuffered(uint64_t a1, uint64_t a2, __CFDictionary **a3)
{
  int v22 = 0;
  *(_OWORD *)int v21 = *MEMORY[0x263F249C0];
  long long v4 = *(_OWORD *)v21;
  *(_OWORD *)&v21[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  v20[0] = v4;
  *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)&v21[12];
  v19[0] = v4;
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)&v21[12];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v6 = 4294895366;
  if (!*(unsigned char *)(DerivedStorage + 46)) {
    return 4294895365;
  }
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
    APSLogErrorAt();
    return v6;
  }
  CFDataRef v8 = TypedValue;
  CFDataGetBytePtr(TypedValue);
  CFDataGetLength(v8);
  CFDictionaryGetTypeID();
  uint64_t v9 = (const void *)CFCreateWithPlistBytes();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
  int v22 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
  if (v22
    || (v18[0] = *(_OWORD *)v21,
        *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)&v21[12],
        BOOL v11 = APSAudioTransportTimeIsValid() != 0,
        CFDictionaryGetInt64Ranged(),
        (int v22 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary()) != 0))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    BOOL v15 = 0;
    goto LABEL_23;
  }
  uint64_t v12 = *(void *)(DerivedStorage + 32);
  v18[0] = *(_OWORD *)v21;
  *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)&v21[12];
  v17[0] = v20[0];
  *(_OWORD *)((char *)v17 + 12) = *(_OWORD *)((char *)v20 + 12);
  int v22 = AirPlayReceiverSessionFlushAudio(v12, v11, v18, Int64Ranged, v17);
  if (v22)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
LABEL_34:
    BOOL v15 = 0;
LABEL_35:
    uint64_t v6 = 4294895362;
    goto LABEL_23;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    goto LABEL_34;
  }
  if (LODWORD(v19[0]) == 2)
  {
    v18[0] = v19[0];
    *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)((char *)v19 + 12);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    goto LABEL_21;
  }
  if (LODWORD(v19[0]) != 1)
  {
LABEL_21:
    BOOL v15 = 0;
    goto LABEL_22;
  }
  uint64_t v14 = CFStringCreateMutable(0, 0);
  BOOL v15 = v14;
  if (!v14)
  {
    APSLogErrorAt();
    goto LABEL_35;
  }
  CFStringAppendFormat(v14, 0, @"rtptime=%u", DWORD1(v19[0]));
  CFDictionarySetValue(Mutable, @"RTP-Info", v15);
LABEL_22:
  uint64_t v6 = 0;
  *a3 = Mutable;
  CFMutableDictionaryRef Mutable = 0;
LABEL_23:
  if (v9) {
    CFRelease(v9);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v15) {
    CFRelease(v15);
  }
  return v6;
}

uint64_t airplayReqProcessor_requestProcessGetAnchor(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  int v20 = 0;
  *(_OWORD *)int v19 = *MEMORY[0x263F249C0];
  *(_OWORD *)&v19[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  memset(v18, 0, sizeof(v18));
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895362;
  }
  CFDictionaryRef v6 = Mutable;
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    CFDataRef v8 = TypedValue;
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v8);
    CFDictionaryGetTypeID();
    uint64_t v9 = (const void *)CFCreateWithPlistBytes();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
    uint64_t v11 = *(void *)(DerivedStorage + 32);
    if (v11)
    {
      uint64_t v12 = *(void *)(v11 + 576);
      if (v12)
      {
        uint64_t v13 = *(uint64_t (**)(void, uint64_t, unsigned char *, void *))(v12 + 96);
        if (v13)
        {
          int v14 = v13(*(void *)(v12 + 40), Int64Ranged, v19, v18);
          if (!v14)
          {
            int v20 = 0;
            APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            goto LABEL_19;
          }
          int v15 = v14;
        }
        else
        {
          int v15 = -12782;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        int v15 = -6718;
      }
    }
    else
    {
      APSLogErrorAt();
      int v15 = -72152;
    }
    int v20 = v15;
LABEL_19:
    CFDictionarySetInt64();
    if (CFDictionaryGetCount(v6) >= 1 && (int v20 = airplayReqProcessor_preparePlistResponse(v6, a3)) != 0)
    {
      APSLogErrorAt();
      uint64_t v16 = 4294895362;
    }
    else
    {
      uint64_t v16 = 0;
    }
    if (v9) {
      CFRelease(v9);
    }
    goto LABEL_24;
  }
  uint64_t v16 = 4294895366;
  APSLogErrorAt();
LABEL_24:
  CFRelease(v6);
  return v16;
}

uint64_t airplayReqProcessor_requestProcessSetRate(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  int v23 = 0;
  *(_OWORD *)int v22 = *MEMORY[0x263F249C0];
  long long v4 = *(_OWORD *)v22;
  *(_OWORD *)&v22[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  v21[0] = v4;
  *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)&v22[12];
  memset(v20, 0, sizeof(v20));
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895362;
  }
  CFDictionaryRef v7 = Mutable;
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    CFDataRef v9 = TypedValue;
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v9);
    CFDictionaryGetTypeID();
    int v10 = (const void *)CFCreateWithPlistBytes();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
    if (Int64Ranged == 1)
    {
      int v23 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
      if (v23)
      {
        uint64_t v18 = 4294895366;
      }
      else
      {
        v24[0] = *(_OWORD *)v22;
        *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v22[12];
        if (APSAudioTransportTimeIsValid()) {
          goto LABEL_14;
        }
        uint64_t v18 = 4294895366;
      }
      APSLogErrorAt();
LABEL_25:
      if (v10) {
        CFRelease(v10);
      }
      goto LABEL_27;
    }
LABEL_14:
    uint64_t v12 = *(void *)(DerivedStorage + 32);
    if (v12)
    {
      uint64_t v13 = *(void *)(v12 + 576);
      if (v13)
      {
        int v14 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, _OWORD *, void *))(v13 + 104);
        if (v14)
        {
          uint64_t v15 = *(void *)(v13 + 40);
          v24[0] = *(_OWORD *)v22;
          *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v22[12];
          int v16 = v14(v15, Int64Ranged, v24, v21, v20);
          if (!v16)
          {
            int v23 = 0;
            v24[0] = v21[0];
            *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)((char *)v21 + 12);
            APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
LABEL_22:
            CFDictionarySetInt64();
            if (CFDictionaryGetCount(v7) >= 1 && (int v23 = airplayReqProcessor_preparePlistResponse(v7, a3)) != 0)
            {
              APSLogErrorAt();
              uint64_t v18 = 4294895362;
            }
            else
            {
              uint64_t v18 = 0;
            }
            goto LABEL_25;
          }
          int v17 = v16;
        }
        else
        {
          int v17 = -12782;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        int v17 = -6718;
      }
    }
    else
    {
      APSLogErrorAt();
      int v17 = -72152;
    }
    int v23 = v17;
    goto LABEL_22;
  }
  uint64_t v18 = 4294895366;
  APSLogErrorAt();
LABEL_27:
  CFRelease(v7);
  return v18;
}

uint64_t airplayReqProcessor_requestProcessSetRateAndAnchorTime(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  int v27 = 0;
  *(_OWORD *)int v26 = *MEMORY[0x263F249C0];
  long long v4 = *(_OWORD *)v26;
  *(_OWORD *)&v26[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  v25[0] = v4;
  *(_OWORD *)((char *)v25 + 12) = *(_OWORD *)&v26[12];
  v24[0] = v4;
  *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v26[12];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895362;
  }
  CFDictionaryRef v7 = Mutable;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    CFDataRef v9 = TypedValue;
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v9);
    CFDictionaryGetTypeID();
    int v10 = (const void *)CFCreateWithPlistBytes();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
    if (Int64Ranged == 1)
    {
      int v27 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
      if (v27)
      {
        uint64_t v17 = 4294895366;
      }
      else
      {
        v23[0] = *(_OWORD *)v26;
        *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)&v26[12];
        if (APSAudioTransportTimeIsValid())
        {
          int v27 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
          if (!v27)
          {
            int v12 = CFDictionaryGetInt64Ranged();
            uint64_t Int64 = CFDictionaryGetInt64();
            uint64_t v14 = CFDictionaryGetInt64();
            int v15 = CFDictionaryGetInt64Ranged();
LABEL_21:
            uint64_t v16 = *(void *)(DerivedStorage + 32);
            v23[0] = *(_OWORD *)v26;
            *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)&v26[12];
            v22[0] = v25[0];
            *(_OWORD *)((char *)v22 + 12) = *(_OWORD *)((char *)v25 + 12);
            *(void *)&long long v19 = v14;
            *((void *)&v19 + 1) = Int64;
            int v20 = v12;
            int v21 = v15;
            int v27 = AirPlayReceiverSessionSetRateAndAnchorTime(v16, Int64Ranged, v23, v22, &v19);
            if (v27)
            {
              CFDictionarySetInt64();
            }
            else if (!Int64Ranged)
            {
              v23[0] = v24[0];
              *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)((char *)v24 + 12);
              if (APSAudioTransportTimeIsValid())
              {
                v23[0] = v24[0];
                *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)((char *)v24 + 12);
                APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
              }
            }
            if (CFDictionaryGetCount(v7) >= 1 && (int v27 = airplayReqProcessor_preparePlistResponse(v7, a3)) != 0)
            {
              APSLogErrorAt();
              uint64_t v17 = 4294895362;
            }
            else
            {
              uint64_t v17 = 0;
            }
            goto LABEL_29;
          }
          uint64_t v17 = 4294895366;
        }
        else
        {
          uint64_t v17 = 4294895366;
        }
      }
      APSLogErrorAt();
LABEL_29:
      if (v10) {
        CFRelease(v10);
      }
      goto LABEL_31;
    }
    uint64_t v14 = 0;
    uint64_t Int64 = 0;
    int v12 = 0;
    int v15 = 0;
    goto LABEL_21;
  }
  uint64_t v17 = 4294895366;
  APSLogErrorAt();
LABEL_31:
  CFRelease(v7);
  return v17;
}

uint64_t airplayReqProcessor_requestProcessSetPeers()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v1 = DerivedStorage;
    CFDataGetTypeID();
    TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
    if (TypedValue)
    {
      CFDataRef v3 = TypedValue;
      CFDataGetBytePtr(TypedValue);
      CFDataGetLength(v3);
      CFArrayGetTypeID();
      long long v4 = (const void *)CFCreateWithPlistBytes();
      uint64_t v5 = *(void *)(v1 + 32);
      if (!CFEqual(*(CFTypeRef *)(v5 + 648), @"PTP")) {
        goto LABEL_24;
      }
      CFStringRef v6 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(v5 + 152), 0x8000100u);
      int v7 = APSNetworkClockSetPeersFromSetPeersMessagePayload();
      if (v7) {
        APSLogErrorAt();
      }
      if (v6) {
        CFRelease(v6);
      }
      if (v7)
      {
        uint64_t v8 = 4294895362;
        APSLogErrorAt();
      }
      else
      {
LABEL_24:
        if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
          && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v8 = 0;
      }
      if (v4) {
        CFRelease(v4);
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294895366;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895358;
  }
  return v8;
}

uint64_t airplayReqProcessor_requestProcessGetParameter()
{
  if (!*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 45)) {
    return 4294895365;
  }
  CFStringGetTypeID();
  TypedCFDictionaryRef Value = (const __CFString *)CFDictionaryGetTypedValue();
  if (CFStringCompare(TypedValue, @"text/parameters", 0)) {
    return 4294895364;
  }
  CFDictionaryGetData();
  APSLogErrorAt();
  return 4294895366;
}

uint64_t airplayReqProcessor_requestProcessRecord(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t v101 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v79 = 0;
  uint64_t v77 = 0;
  int v78 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  long long v73 = 0;
  uint64_t v74 = 0;
  CFTypeRef v71 = 0;
  CFTypeRef cf = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v6 = 4294895359;
  if (!*(unsigned char *)(DerivedStorage + 45))
  {
    uint64_t v6 = 4294895365;
    goto LABEL_170;
  }
  CFStringGetTypeID();
  TypedCFDictionaryRef Value = CFDictionaryGetTypedValue();
  unsigned int v69 = a3;
  uint64_t v70 = a1;
  if (TypedValue)
  {
    CFStringRef v8 = (const __CFString *)TypedValue;
    int v79 = CFStringCopyUTF8CString();
    if (!v79)
    {
      CFStringGetLength(v8);
      int v78 = v73;
      while (1)
      {
        if (HTTPParseParameter()) {
          goto LABEL_25;
        }
        if (strnicmpx()
          && strnicmpx()
          && strnicmpx()
          && strnicmpx())
        {
          if (strnicmpx())
          {
            if (!strnicmpx()) {
              goto LABEL_16;
            }
          }
          else
          {
            TextToInt32();
          }
        }
        else
        {
LABEL_16:
          TextToInt32();
        }
      }
    }
    goto LABEL_183;
  }
LABEL_25:
  uint64_t v9 = *(void *)(DerivedStorage + 32);
  CFArrayRef theArray = 0;
  *(void *)(v9 + 352) = mach_absolute_time();
  if (*(unsigned char *)(v9 + 659)) {
    goto LABEL_59;
  }
  *(void *)&long long block = 0;
  if (*(_DWORD *)(v9 + 192) != 128)
  {
    uint64_t v10 = DerivedStorage;
    _AirPlayReceiverSessionRemoveTrafficRegistration(v9);
    int v11 = *(_DWORD *)(v9 + 192);
    APTransportGetSharedTransport();
    uint64_t CMBaseObject = FigTransportGetCMBaseObject();
    uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    int v15 = *(unsigned int (**)(uint64_t, void, void, long long *))(v14 + 48);
    if (!v15 || v15(CMBaseObject, *MEMORY[0x263F20DD0], *MEMORY[0x263EFFB08], &block)) {
      goto LABEL_34;
    }
    if (v11 == 4)
    {
      if (APTransportTrafficRegistrarAWDLTrafficRegistrationCreate())
      {
LABEL_34:
        APSLogErrorAt();
LABEL_40:
        uint64_t DerivedStorage = v10;
        if ((void)block) {
          CFRelease((CFTypeRef)block);
        }
        goto LABEL_42;
      }
    }
    else if (APTransportTrafficRegistrarInfraTransactionCreate())
    {
      goto LABEL_34;
    }
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_40;
  }
LABEL_42:
  uint64_t v16 = *(void *)(v9 + 592);
  if (v16)
  {
    *(void *)&long long v87 = 0;
    *((void *)&v87 + 1) = &v87;
    *(void *)&long long v88 = 0x2000000000;
    DWORD2(v88) = 0;
    uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v18 = v17 ? v17 : 0;
    long long v19 = *(uint64_t (**)(uint64_t))(v18 + 8);
    int v20 = (v19 ? v19(v16) : MEMORY[0x263EF83A0]);
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    if (v20)
    {
      *(void *)&long long block = MEMORY[0x263EF8330];
      *((void *)&block + 1) = 0x40000000;
      *(void *)&long long v98 = __APReceiverSBufConsumerStart_block_invoke;
      *((void *)&v98 + 1) = &unk_264896388;
      *(void *)&long long v99 = &v87;
      *((void *)&v99 + 1) = v16;
      dispatch_sync(v20, &block);
      int v21 = *(_DWORD *)(*((void *)&v87 + 1) + 24);
    }
    else
    {
      uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v23 = v22 ? v22 : 0;
      CFMutableDictionaryRef v24 = *(uint64_t (**)(uint64_t))(v23 + 16);
      int v21 = v24 ? v24(v16) : -12782;
      *(_DWORD *)(*((void *)&v87 + 1) + 24) = v21;
    }
    _Block_object_dispose(&v87, 8);
    if (v21) {
      goto LABEL_139;
    }
  }
LABEL_59:
  if ((*(_DWORD *)(v9 + 476) & 0x80000000) != 0) {
    goto LABEL_109;
  }
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  int v94 = 0;
  uint64_t v93 = 0;
  int v90 = -1;
  uint64_t v89 = 0;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v99 = 0u;
  long long v100 = 0u;
  long long block = 0u;
  long long v98 = 0u;
  uint64_t v85 = 0;
  *(void *)long long v86 = 0;
  *(void *)&v84.sa_len = 0;
  *(void *)&v84.sa_data[6] = 0;
  int v25 = SocketAccept();
  if (v25)
  {
    int v21 = v25;
    goto LABEL_142;
  }
  int v26 = *(_DWORD *)(v9 + 476);
  if ((v26 & 0x80000000) == 0)
  {
    if (close(v26) && *__error()) {
      __error();
    }
    *(_DWORD *)(v9 + 476) = -1;
  }
  v86[1] = 28;
  getsockname(v90, &v84, &v86[1]);
  int v27 = HTTPClientCreateWithSocket();
  if (v27)
  {
    int v21 = v27;
    goto LABEL_142;
  }
  int v90 = -1;
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    HTTPClientGetClientID();
    LogPrintF();
  }
  SNPrintF();
  int v28 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v29 = dispatch_queue_create((const char *)&block, v28);
  if (!v29)
  {
    APSLogErrorAt();
    int v21 = -1;
    goto LABEL_100;
  }
  uint64_t v30 = v29;
  HTTPClientSetDispatchQueue();
  dispatch_release(v30);
  APSLogUtilsGetHTTPClientCoreLogCategory();
  HTTPClientSetLogging();
  APSLogUtilsGetAsyncCnxLogCategory();
  HTTPClientSetConnectionLogging();
  uint64_t v89 = 0;
  long long v87 = 0u;
  long long v88 = 0u;
  CFRetain((CFTypeRef)v9);
  *(void *)&long long v87 = v9;
  *((void *)&v87 + 1) = _HandleEventConnectionInvalidated;
  HTTPClientSetDelegate();
  HTTPClientSetFlags();
  uint64_t v31 = *(void *)(v9 + 488);
  if (v31)
  {
    uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v33 = v32 ? v32 : 0;
    CFDataRef v34 = *(unsigned int (**)(uint64_t))(v33 + 32);
    if (v34)
    {
      if (v34(v31))
      {
        uint64_t v83 = 0;
        long long v81 = 0u;
        long long v82 = 0u;
        uint64_t v35 = *(void *)(v9 + 488);
        uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v36) {
          uint64_t v37 = v36;
        }
        else {
          uint64_t v37 = 0;
        }
        CFDataRef v38 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, unsigned char *))(v37 + 24);
        if (v38)
        {
          int v39 = v38(v35, "Events-Salt", 11, "Events-Read-Encryption-Key", 26, 32, v96);
          if (v39)
          {
            int v21 = v39;
          }
          else
          {
            uint64_t v40 = *(void *)(v9 + 488);
            uint64_t v41 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v41) {
              uint64_t v42 = v41;
            }
            else {
              uint64_t v42 = 0;
            }
            uint64_t v43 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, unsigned char *))(v42 + 24);
            if (v43)
            {
              int v44 = v43(v40, "Events-Salt", 11, "Events-Write-Encryption-Key", 27, 32, v95);
              if (v44)
              {
                int v21 = v44;
              }
              else
              {
                int v45 = NetTransportChaCha20Poly1305Configure();
                if (!v45)
                {
                  for (uint64_t i = 0; i != 32; ++i)
                    v96[i] = 0;
                  for (uint64_t j = 0; j != 32; ++j)
                    v95[j] = 0;
                  HTTPClientSetTransportDelegate();
                  goto LABEL_95;
                }
                int v21 = v45;
              }
            }
            else
            {
              int v21 = -12782;
            }
          }
        }
        else
        {
          int v21 = -12782;
        }
LABEL_142:
        APSLogErrorAt();
        goto LABEL_100;
      }
    }
  }
LABEL_95:
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v21 = 0;
LABEL_100:
  if ((v90 & 0x80000000) == 0)
  {
    if (close(v90) && *__error()) {
      __error();
    }
    int v90 = -1;
  }
  if (v21)
  {
    if (gLogCategory_AirPlayReceiverCore <= 60
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_139;
  }
LABEL_109:
  if (*(unsigned char *)(v9 + 659)) {
    goto LABEL_110;
  }
  uint64_t v55 = *(void *)(v9 + 576);
  if (v55)
  {
    uint64_t v56 = *(uint64_t (**)(void))(v55 + 72);
    if (!v56)
    {
      int v21 = -12782;
      goto LABEL_139;
    }
    int v57 = v56(*(void *)(v55 + 40));
    if (v57)
    {
      int v21 = v57;
      goto LABEL_139;
    }
  }
  if (*(void *)(v9 + 616))
  {
    int v58 = _ScreenStart(v9);
    if (v58)
    {
      int v21 = v58;
      goto LABEL_139;
    }
  }
  int v59 = AirPlayReceiverSessionPlatformControl((void *)v9, @"startSession");
  if (v59)
  {
    int v21 = v59;
    goto LABEL_147;
  }
  CFDictionaryRef v60 = *(const __CFDictionary **)(v9 + 568);
  if (v60 && !*(unsigned char *)(v9 + 729))
  {
    CFIndex Count = CFDictionaryGetCount(v60);
    int v62 = _cfDictionaryCopyKeysAndValues(*(const __CFDictionary **)(v9 + 568), 0, (CFTypeRef *)&theArray);
    if (!v62)
    {
      if (Count >= 1)
      {
        CFIndex v63 = 0;
        while (1)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(theArray, v63);
          int v65 = APReceiverAudioSessionPlatformControl(ValueAtIndex, @"RASP::StartSession");
          if (v65) {
            break;
          }
          if (Count == ++v63) {
            goto LABEL_110;
          }
        }
        int v21 = v65;
        goto LABEL_139;
      }
      goto LABEL_110;
    }
    int v21 = v62;
LABEL_139:
    APSLogErrorAt();
    goto LABEL_147;
  }
LABEL_110:
  *(unsigned char *)(v9 + 458) = 1;
  uint64_t v48 = *(void (**)(uint64_t, void))(v9 + 88);
  if (v48) {
    v48(v9, *(void *)(v9 + 56));
  }
  if (!*(unsigned char *)(v9 + 659))
  {
    *(void *)(v9 + 528) = *(void *)(v9 + 352);
    uint64_t v49 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(v9 + 16));
    *(void *)(v9 + 184) = v49;
    if (!v49)
    {
      APSLogErrorAt();
      int v21 = -6700;
      goto LABEL_147;
    }
    uint64_t v50 = v49;
    dispatch_set_context(v49, (void *)v9);
    dispatch_source_set_event_handler_f(v50, (dispatch_function_t)_PerformPeriodTasks);
    dispatch_time_t v51 = dispatch_time(0, 250000000);
    dispatch_source_set_timer(v50, v51, 0xEE6B280uLL, 0xEE6B280uLL);
    dispatch_resume(v50);
  }
  if (APSIsAPMSpeaker())
  {
    uint64_t v53 = APReceiverSystemInfoCopyProperty(*(void *)(*(void *)(v9 + 24) + 160), v52, @"TightSyncUUID", 0, 0);
    if (v53)
    {
      uint64_t v54 = (const void *)v53;
      if (!*(unsigned char *)(v9 + 659)
        && !*(unsigned char *)(v9 + 656)
        && !*(_DWORD *)(v9 + 496)
        && !APSMultiPrimariesEnabled())
      {
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        notify_post("kAirPlayWHANotification_InterruptedByPreWHASender");
      }
      CFRelease(v54);
    }
  }
  int v21 = 0;
LABEL_147:
  if (theArray) {
    CFRelease(theArray);
  }
  *(_DWORD *)(v9 + 268) = v21;
  mach_absolute_time();
  UpTicksToMilliseconds();
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    SourceVersionToCString();
    if (*(unsigned char *)(v9 + 657)) {
      APSIsMemberOfHTGroup();
    }
    LogPrintF();
    uint64_t v6 = 4294895359;
  }
  int v79 = v21;
  if (v21 <= 452)
  {
    if (v21 == -6721) {
      goto LABEL_170;
    }
    if (!v21)
    {
      int v79 = CFArrayEnsureCreatedAndAppend();
      if (v79)
      {
LABEL_183:
        APSLogErrorAt();
        uint64_t v6 = 0;
        goto LABEL_170;
      }
      APReceiverSystemInfoCopyInfoDict(*(void *)(*(void *)DerivedStorage + 160), (uint64_t)cf, *MEMORY[0x263EFFB08], (uint64_t)&v71);
      if (v71)
      {
        if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
          && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APReceiverRequestProcessorSendSystemInfoUpdate(v70, (const __CFDictionary *)v71);
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        CFMutableDictionaryRef v67 = Mutable;
        CFObjectGetPropertyInt64Sync();
        CFDictionarySetInt64();
        uint64_t v6 = 0;
        *(unsigned char *)(DerivedStorage + 46) = 1;
        *unsigned int v69 = v67;
        goto LABEL_170;
      }
    }
    goto LABEL_184;
  }
  if (v21 != 453 && v21 != 200453)
  {
LABEL_184:
    APSLogErrorAt();
    uint64_t v6 = 4294895362;
  }
LABEL_170:
  if (v73) {
    free(v73);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v71) {
    CFRelease(v71);
  }
  return v6;
}

uint64_t airplayReqProcessor_requestProcessSetupPlist(const void *a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  unsigned int v50 = -71934;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int Session = 0;
  uint64_t v47 = 0;
  CFTypeRef v48 = 0;
  unint64_t v55 = 0;
  uint64_t v56 = 0;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  uint64_t v6 = &unk_268402000;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
    APSLogErrorAt();
    dispatch_queue_t v29 = 0;
    unsigned int v50 = -71930;
    goto LABEL_112;
  }
  CFDataRef v8 = TypedValue;
  CFDataGetBytePtr(TypedValue);
  CFDataGetLength(v8);
  CFDictionaryGetTypeID();
  CFDictionaryRef v9 = (const __CFDictionary *)CFCreateWithPlistBytes();
  int v45 = a3;
  *(void *)(DerivedStorage + 120) = CFDictionaryGetHardwareAddress();
  strncpy((char *)(DerivedStorage + 332), (const char *)(*(void *)(DerivedStorage + 16) + 140), 0x11uLL);
  CFDictionaryGetHardwareAddress();
  CFDictionaryGetCString();
  airplayReqProcessor_updateUIClientName((uint64_t)a1, (const char *)(DerivedStorage + 134));
  CFDictionaryGetData();
  if (!Session)
  {
    if (v47 != 16)
    {
      APSLogErrorAt();
      dispatch_queue_t v29 = 0;
      int Session = -6743;
      unsigned int v30 = -71930;
      goto LABEL_69;
    }
    *(void *)(DerivedStorage + 264) = bswap64(v55);
  }
  LOBYTE(v51) = 0;
  CFDictionaryGetCString();
  if (!*(void *)(DerivedStorage + 32))
  {
    uint64_t Int64 = CFDictionaryGetInt64();
    uint64_t v14 = CFDictionaryGetInt64() | Int64;
    uint64_t v15 = CFDictionaryGetInt64();
    char v16 = v15 != 0;
    char v44 = CFDictionaryGetInt64() != 0;
    BOOL v42 = CFDictionaryGetInt64() == 0;
    char v43 = CFDictionaryGetInt64() != 0;
    CFStringGetTypeID();
    uint64_t v17 = CFDictionaryGetTypedValue();
    if (v14 && v15)
    {
      APSLogErrorAt();
      uint64_t v6 = &unk_268402000;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      dispatch_queue_t v29 = 0;
      int Session = -71951;
      unsigned int v50 = -71933;
      goto LABEL_110;
    }
    if (airplayReqProcessor_isAllowedToConnectBasedOnACL())
    {
      if (v15 || v14)
      {
        if (v15)
        {
          int v19 = 1;
LABEL_38:
          int Session = airplayReqProcessor_requestCreateSession((uint64_t)a1, 1, v16, v44, v14 != 0, v43, v17);
          if (!Session)
          {
            __strlcpy_chk();
            *(unsigned char *)(DerivedStorage + 440) = v16;
            *(_DWORD *)(DerivedStorage + 40) = v19;
            uint64_t v23 = CMBaseObjectGetDerivedStorage();
            uint64_t v6 = &unk_268402000;
            if (v9 && *(_DWORD *)(v23 + 40) != 1 && IsAppleTV())
            {
              CFDictionaryRef Value = CFDictionaryGetValue(v9, @"model");
              int v25 = MEMORY[0x230F46140](Value);
              BOOL v26 = (v25 - 1) < 3 || v25 == 100;
              if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
                && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
            else
            {
              BOOL v26 = 0;
            }
            *(unsigned char *)(DerivedStorage + 441) = v26;
            int Session = airplayReqProcessor_registerReqProcWithSessionManager(a1, v19);
            if (Session) {
              goto LABEL_108;
            }
            goto LABEL_66;
          }
          APSLogErrorAt();
          dispatch_queue_t v29 = 0;
          unsigned int v50 = -71934;
          goto LABEL_128;
        }
        int v19 = 2;
        goto LABEL_31;
      }
      if (!airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v50))
      {
LABEL_124:
        APSLogErrorAt();
        dispatch_queue_t v29 = 0;
        goto LABEL_128;
      }
      int v18 = *(_DWORD *)(DerivedStorage + 24);
      if (v18 != 4 && v18 != 128 && v18 != 64
        || APReceiverSystemInfoAllowsP2PConnectionFromMACAddress(*(void *)(*(void *)DerivedStorage + 160), DerivedStorage + 128))
      {
        unsigned int v50 = airplayReqProcessor_hijackCurrentSessionIfNeeded(a1);
        if (!v50)
        {
          int v19 = 0;
LABEL_31:
          int v20 = *(const void **)(DerivedStorage + 456);
          if (v20)
          {
            CFRelease(v20);
            *(void *)(DerivedStorage + 456) = 0;
          }
          CFStringGetTypeID();
          int v21 = (const void *)CFDictionaryGetTypedValue();
          *(void *)(DerivedStorage + 456) = v21;
          if (v21)
          {
            CFRetain(v21);
            if (*(void *)(DerivedStorage + 456)) {
              goto LABEL_37;
            }
          }
          CFDictionaryGetInt64();
          CFDictionaryGetInt64();
          CMBaseObjectGetDerivedStorage();
          uint64_t v22 = CFStringCreateF();
          *(void *)(DerivedStorage + 456) = v22;
          if (v22)
          {
            airplayReqProcessor_handleNewSessionFromHTUnawareSender();
LABEL_37:
            airplayReqProcessor_copyParentGroupInfoFromSetupRequest((uint64_t)a1, (uint64_t)v9, (__CFDictionary **)(DerivedStorage + 448));
            *(unsigned char *)(DerivedStorage + 47) = v42;
            goto LABEL_38;
          }
          APSLogErrorAt();
          dispatch_queue_t v29 = 0;
          int Session = -71934;
LABEL_128:
          uint64_t v6 = (_DWORD *)&unk_268402000;
          goto LABEL_110;
        }
        goto LABEL_124;
      }
      APSLogErrorAt();
      dispatch_queue_t v29 = 0;
      int Session = -71951;
      unsigned int v39 = -71933;
    }
    else
    {
      APSLogErrorAt();
      dispatch_queue_t v29 = 0;
      unsigned int v39 = -71930;
    }
    unsigned int v50 = v39;
    goto LABEL_128;
  }
  if (*(unsigned char *)(DerivedStorage + 440))
  {
LABEL_66:
    int v28 = AirPlayReceiverSessionSetSecurityInfo(*(void *)(DerivedStorage + 32), v9, *(CFTypeRef *)(DerivedStorage + 400), *(void *)(DerivedStorage + 384), *(unsigned int *)(DerivedStorage + 420), 0, 0);
    int Session = v28;
    switch(v28)
    {
      case -6762:
LABEL_109:
        dispatch_queue_t v29 = 0;
        unsigned int v50 = -71934;
        goto LABEL_110;
      case -6754:
        dispatch_queue_t v29 = 0;
        unsigned int v30 = -71943;
LABEL_69:
        unsigned int v50 = v30;
        goto LABEL_110;
      case 0:
        LODWORD(cf) = 0;
        if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 40) == 2
          && APSIsMemberOfHTGroup()
          && (CFArrayGetTypeID(), (CFArrayRef v31 = (const __CFArray *)CFDictionaryGetTypedValue()) != 0)
          && (CFIndex Count = CFArrayGetCount(v31), Count >= 1))
        {
          CFIndex v33 = Count;
          uint64_t v34 = 0;
          while (1)
          {
            CFDictionaryGetTypeID();
            CFDictionaryRef TypedValueAtIndex = (const __CFDictionary *)CFArrayGetTypedValueAtIndex();
            if (cf)
            {
              APSLogErrorAt();
              goto LABEL_82;
            }
            int v36 = CFDictionaryGetInt64();
            if ((!CFDictionaryContainsKey(TypedValueAtIndex, @"isMedia") || CFDictionaryGetInt64())
              && (v36 == 103 || v36 == 96))
            {
              break;
            }
            if (v33 == ++v34) {
              goto LABEL_82;
            }
          }
          uint64_t v37 = (__CFString *)CFDictionaryGetValue(TypedValueAtIndex, @"clientID");
          dispatch_queue_t v29 = v37;
          if (v37)
          {
            CFRetain(v37);
            uint64_t v6 = (_DWORD *)&unk_268402000;
            if (v29 == @"com.apple.TVAirPlay")
            {
              dispatch_queue_t v29 = @"com.apple.TVAirPlay";
              goto LABEL_94;
            }
            if (CFEqual(v29, @"com.apple.TVAirPlay")) {
              goto LABEL_94;
            }
          }
          else
          {
            uint64_t v6 = &unk_268402000;
          }
          int v38 = v6[100];
          if (v38 <= 50 && (v38 != -1 || _LogCategory_Initialize())) {
            LogPrintF();
          }
          int Session = APReceiverRequestProcessorHijackAndBecomeMainSession(a1);
          if (Session)
          {
LABEL_123:
            APSLogErrorAt();
            unsigned int v50 = -71934;
            goto LABEL_110;
          }
        }
        else
        {
LABEL_82:
          dispatch_queue_t v29 = 0;
          uint64_t v6 = (_DWORD *)&unk_268402000;
        }
LABEL_94:
        int Session = AirPlayReceiverSessionSetup(*(void *)(DerivedStorage + 32), v9, (__CFDictionary **)&v48);
        if (Session)
        {
          APSLogErrorAt();
          unsigned int v30 = -71930;
          goto LABEL_69;
        }
        int Session = airplayReqProcessor_preparePlistResponse(v48, v45);
        if (!Session)
        {
          if (!*(unsigned char *)(DerivedStorage + 45))
          {
            *(_WORD *)(DerivedStorage + 44) = 257;
            airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 1);
          }
          unsigned int v50 = 0;
          goto LABEL_110;
        }
        goto LABEL_123;
    }
LABEL_108:
    APSLogErrorAt();
    goto LABEL_109;
  }
  CFTypeRef cf = 0;
  uint64_t v10 = CFDictionaryGetInt64();
  int v11 = CFDictionaryGetInt64() == 0;
  airplayReqProcessor_copyParentGroupInfoFromSetupRequest((uint64_t)a1, (uint64_t)v9, (__CFDictionary **)&cf);
  if (v10)
  {
    CFTypeRef v12 = cf;
    if (!FigCFEqual())
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v27 = *(const void **)(DerivedStorage + 448);
      *(void *)(DerivedStorage + 448) = v12;
      if (v12) {
        CFRetain(v12);
      }
      if (v27) {
        CFRelease(v27);
      }
      APReceiverSessionManagerUpdateParentGroupInfo(*(void **)(DerivedStorage + 432));
    }
  }
  if (*(unsigned __int8 *)(DerivedStorage + 47) == v11) {
    goto LABEL_64;
  }
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 47) = v11;
  int Session = APReceiverSessionManagerUpdateAndNotifyReceiverSessionState(*(void *)(DerivedStorage + 432));
  if (!Session)
  {
LABEL_64:
    if (cf) {
      CFRelease(cf);
    }
    goto LABEL_66;
  }
  APSLogErrorAt();
  dispatch_queue_t v29 = 0;
LABEL_110:
  if (v9) {
    CFRelease(v9);
  }
LABEL_112:
  if (v48) {
    CFRelease(v48);
  }
  if (v29) {
    CFRelease(v29);
  }
  if (Session)
  {
    int v40 = v6[100];
    if (v40 <= 90 && (v40 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  return v50;
}

uint64_t airplayReqProcessor_requestProcessSetupSDP(const void *a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 44)) {
    return 4294895365;
  }
  CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(a2, @"SDPSessionType");
  uint64_t v7 = 4294895366;
  if (v6 && CFEqual(v6, @"audio"))
  {
    unsigned int v43 = 0;
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    int Session = 0;
    CFTypeRef cf = 0;
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
    {
      APSLogErrorAt();
      CFDictionaryRef v9 = 0;
      CFMutableDictionaryRef v10 = 0;
      unsigned int v11 = -71930;
      goto LABEL_14;
    }
    if (airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v43))
    {
      if (!*(unsigned char *)(DerivedStorage + 44) || *(unsigned char *)(DerivedStorage + 45))
      {
        CFDictionaryRef v9 = 0;
        CFMutableDictionaryRef v10 = 0;
        unsigned int v11 = -71931;
LABEL_14:
        unsigned int v43 = v11;
        goto LABEL_15;
      }
      CFMutableDictionaryRef theDict = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!theDict)
      {
        APSLogErrorAt();
        CFDictionaryRef v9 = 0;
        CFMutableDictionaryRef v10 = 0;
        unsigned int v43 = -71934;
        goto LABEL_15;
      }
      CFMutableArrayRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
      if (Mutable)
      {
        uint64_t v14 = Mutable;
        CFDictionarySetValue(theDict, @"streams", Mutable);
        CFMutableDictionaryRef v15 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (!v15)
        {
          APSLogErrorAt();
          CFMutableDictionaryRef v10 = 0;
          CFDictionaryRef v9 = 0;
          unsigned int v43 = -71934;
          goto LABEL_93;
        }
        CFArrayAppendValue(v14, v15);
        CFDictionaryRef v9 = (char *)CFDictionaryCopyCString();
        strlen(v9);
        int Session = HTTPParseParameter();
        if (Session)
        {
          APSLogErrorAt();
          goto LABEL_28;
        }
        if (strnicmpx())
        {
LABEL_28:
          CFMutableDictionaryRef v10 = 0;
          unsigned int v43 = -71932;
          goto LABEL_93;
        }
        uint64_t v38 = DerivedStorage;
        unsigned int v39 = v14;
        uint64_t v37 = v9;
        CFDictionarySetInt64();
        uint64_t v16 = 0;
        value = (void *)*MEMORY[0x263EFFB40];
        while (1)
        {
          uint64_t v17 = v16;
          if (HTTPParseParameter())
          {
            unsigned int v23 = *(_DWORD *)(DerivedStorage + 84);
            if (v23 > 8 || ((1 << v23) & 0x116) == 0)
            {
LABEL_91:
              CFMutableDictionaryRef v10 = 0;
              unsigned int v43 = -71932;
            }
            else
            {
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              uint64_t v25 = *(void *)(DerivedStorage + 32);
              if (v25) {
                goto LABEL_58;
              }
              CFStringGetTypeID();
              TypedCFDictionaryRef Value = CFDictionaryGetTypedValue();
              if (!*(void *)(v38 + 456))
              {
                CMBaseObjectGetDerivedStorage();
                uint64_t v27 = CFStringCreateF();
                *(void *)(v38 + 456) = v27;
                if (!v27)
                {
                  APSLogErrorAt();
                  CFMutableDictionaryRef v10 = 0;
                  int Session = -71934;
                  goto LABEL_84;
                }
              }
              airplayReqProcessor_handleNewSessionFromHTUnawareSender();
              int Session = airplayReqProcessor_requestCreateSession((uint64_t)a1, v17, 0, 0, 0, 0, TypedValue);
              if (Session) {
                goto LABEL_111;
              }
              *(unsigned char *)(v38 + 440) = 0;
              int Session = airplayReqProcessor_registerReqProcWithSessionManager(a1, 0);
              if (Session) {
                goto LABEL_111;
              }
              uint64_t v25 = *(void *)(v38 + 32);
LABEL_58:
              if (*(unsigned char *)(v38 + 80))
              {
                int Session = AirPlayReceiverSessionSetSecurityInfo(v25, theDict, *(CFTypeRef *)(v38 + 400), *(void *)(v38 + 384), *(unsigned int *)(v38 + 420), (_OWORD *)(v38 + 48), (_OWORD *)(v38 + 64));
                if (!Session)
                {
                  uint64_t v25 = *(void *)(v38 + 32);
                  goto LABEL_61;
                }
LABEL_111:
                APSLogErrorAt();
                CFMutableDictionaryRef v10 = 0;
LABEL_112:
                unsigned int v43 = -71934;
LABEL_84:
                CFDictionaryRef v9 = v37;
                goto LABEL_93;
              }
LABEL_61:
              int Session = AirPlayReceiverSessionSetup(v25, theDict, (__CFDictionary **)&cf);
              if (Session)
              {
                APSLogErrorAt();
                CFMutableDictionaryRef v10 = 0;
                if (Session == 61) {
                  unsigned int v35 = -71939;
                }
                else {
                  unsigned int v35 = -71934;
                }
                unsigned int v43 = v35;
                goto LABEL_84;
              }
              CFArrayGetTypeID();
              CFArrayRef v28 = (const __CFArray *)CFDictionaryGetTypedValue();
              if (!Session)
              {
                CFIndex Count = CFArrayGetCount(v28);
                if (Count >= 1)
                {
                  CFIndex v30 = Count;
                  for (CFIndex i = 0; v30 != i; ++i)
                  {
                    ValueAtIndex = CFArrayGetValueAtIndex(v28, i);
                    if (!ValueAtIndex) {
                      break;
                    }
                    CFTypeID v33 = CFGetTypeID(ValueAtIndex);
                    if (v33 != CFDictionaryGetTypeID()) {
                      break;
                    }
                    if (CFDictionaryGetInt64() == 96)
                    {
                      if ((int)CFDictionaryGetInt64() <= 0 || (int)CFDictionaryGetInt64() <= 0) {
                        break;
                      }
                      uint64_t v14 = v39;
                      if ((_BYTE)v17)
                      {
                        int Int64 = CFDictionaryGetInt64();
                        if (Int64 <= 0) {
                          goto LABEL_111;
                        }
                      }
                      else
                      {
                        int Int64 = 0;
                      }
                      int Session = snprintf_add();
                      if (!Session && (!Int64 || (int Session = snprintf_add()) == 0))
                      {
                        CFMutableDictionaryRef v10 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                        if (v10)
                        {
                          int Session = CFDictionarySetCString();
                          if (!Session)
                          {
                            int Session = CFDictionarySetCString();
                            if (!Session)
                            {
                              char v44 = 0;
                              __strlcpy_chk();
                              int Session = CFDictionarySetCString();
                              if (!Session)
                              {
                                airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 1);
                                *(unsigned char *)(v38 + 45) = 1;
                                *a3 = v10;
                                unsigned int v43 = 0;
                                CFMutableDictionaryRef v10 = 0;
                                goto LABEL_84;
                              }
                            }
                          }
                        }
                        APSLogErrorAt();
                        goto LABEL_112;
                      }
                      goto LABEL_111;
                    }
                  }
                }
              }
              APSLogErrorAt();
              CFMutableDictionaryRef v10 = 0;
              unsigned int v43 = -71934;
            }
            CFDictionaryRef v9 = v37;
            uint64_t v14 = v39;
LABEL_93:
            CFRelease(theDict);
            CFRelease(v14);
            if (v15) {
              CFRelease(v15);
            }
LABEL_15:
            if (cf) {
              CFRelease(cf);
            }
            if (v10) {
              CFRelease(v10);
            }
            if (v9) {
              free(v9);
            }
            return v43;
          }
          if (!strnicmpx())
          {
            if (SNScanF() != 1) {
              goto LABEL_90;
            }
            goto LABEL_44;
          }
          if (!strnicmpx()) {
            break;
          }
          if (strnicmpx())
          {
            if (strnicmpx())
            {
              int v18 = strnicmpx();
              uint64_t v16 = 1;
              if (v18)
              {
                int v19 = strnicmpx();
                uint64_t v16 = v17;
                if (v19)
                {
                  int v20 = strnicmpx();
                  uint64_t v16 = v17;
                  if (v20)
                  {
                    strnicmpx();
                    uint64_t v16 = v17;
                  }
                }
              }
            }
            else
            {
              int v21 = strnicmpx();
              uint64_t v16 = v17;
              if (v21)
              {
                int v22 = strnicmpx();
                uint64_t v16 = v17;
                if (!v22)
                {
                  CFDictionarySetValue(theDict, @"usingScreen", value);
                  uint64_t v16 = v17;
                }
              }
            }
          }
          else
          {
            if (SNScanF() != 1)
            {
LABEL_90:
              APSLogErrorAt();
              goto LABEL_91;
            }
LABEL_44:
            CFDictionarySetInt64();
            uint64_t v16 = v17;
          }
        }
        if (SNScanF() != 1) {
          goto LABEL_90;
        }
        goto LABEL_44;
      }
      APSLogErrorAt();
      unsigned int v43 = -71934;
      CFRelease(theDict);
    }
    else
    {
      APSLogErrorAt();
    }
    CFDictionaryRef v9 = 0;
    CFMutableDictionaryRef v10 = 0;
    goto LABEL_15;
  }
  return v7;
}

void airplayReqProcessor_registerPlaybackStateWithServerIfNeeded(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 440))
  {
    uint64_t v4 = DerivedStorage;
    if (*(unsigned __int8 *)(DerivedStorage + 351) != a2)
    {
      uint64_t v5 = *(void **)DerivedStorage;
      CFStringRef v6 = a2 ? @"StartingPlaying" : @"StoppedPlaying";
      AirPlayReceiverServerUpdateStatus(v5, v6);
      *(unsigned char *)(v4 + 351) = a2;
      if (*(unsigned __int8 *)(v4 + 350) != a2)
      {
        if (a2)
        {
          if (*(_DWORD *)(v4 + 24) != 4) {
            return;
          }
          uint64_t v7 = @"StartedPlayingOverAWDL";
        }
        else
        {
          uint64_t v7 = @"StoppedPlayingOverAWDL";
        }
        AirPlayReceiverServerUpdateStatus(*(void **)v4, v7);
        *(unsigned char *)(v4 + 350) = a2;
      }
    }
  }
}

void airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 352))
  {
    uint64_t v3 = DerivedStorage;
    APReceiverSessionManagerRemoveSession(*(void *)(DerivedStorage + 432), a1);
    *(unsigned char *)(v3 + 352) = 0;
  }
}

uint64_t airplayReqProcessor_requestProcessGetLog(uint64_t a1, CFMutableDictionaryRef *a2)
{
  CMBaseObjectGetDerivedStorage();
  DataBuffer_Init();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_RunProcessAndAppendOutput();
  DataBuffer_AppendFile();
  if (DataBuffer_Commit())
  {
    uint64_t v3 = 4294895362;
LABEL_7:
    APSLogErrorAt();
    goto LABEL_4;
  }
  if (airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"text/plain", 0, 0, 0, a2))
  {
    uint64_t v3 = 4294895362;
    goto LABEL_7;
  }
  uint64_t v3 = 0;
LABEL_4:
  DataBuffer_Free();
  return v3;
}

uint64_t airplayReqProcessor_requestProcessGetInfo(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  int Variable = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v14 = 0;
  CFTypeRef cf = 0;
  CFDictionaryGetData();
  CFDictionaryGetTypeID();
  CFStringRef v6 = (const void *)CFCreateWithPlistBytes();
  CFArrayGetTypeID();
  TypedCFDictionaryRef Value = (const void *)CFDictionaryGetTypedValue();
  CFTypeRef v16 = TypedValue;
  if (TypedValue) {
    CFRetain(TypedValue);
  }
  CFStringGetTypeID();
  uint64_t v8 = CFDictionaryGetTypedValue();
  if (v8)
  {
    CFStringRef v9 = (const __CFString *)v8;
    int Variable = CFStringCopyUTF8CString();
    if (Variable)
    {
      APSLogErrorAt();
    }
    else
    {
      CFStringGetLength(v9);
      while (1)
      {
        int Variable = URLGetOrCopyNextVariable();
        if (Variable) {
          break;
        }
        int Variable = CFArrayEnsureCreatedAndAppendCString();
        if (Variable)
        {
          uint64_t v10 = 4294895362;
LABEL_9:
          APSLogErrorAt();
          goto LABEL_20;
        }
      }
      int Int64Ranged = CFDictionaryGetInt64Ranged();
      *(_DWORD *)(DerivedStorage + 444) = Int64Ranged;
      uint64_t v12 = *(void *)(DerivedStorage + 32);
      if (v12)
      {
        if (gLogCategory_AirPlayReceiverCore <= 30
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(_DWORD *)(v12 + 608) = Int64Ranged;
      }
      int Variable = APReceiverSystemInfoCopyInfoDict(*(void *)(*(void *)DerivedStorage + 160), (uint64_t)v16, 0, (uint64_t)&v14);
      if (Variable)
      {
        uint64_t v10 = 4294895362;
        goto LABEL_9;
      }
      int Variable = airplayReqProcessor_createSessionInfoDict(a1, (const __CFDictionary *)v14, (__CFDictionary **)&cf);
      if (Variable)
      {
        uint64_t v10 = 4294895362;
        goto LABEL_9;
      }
      int Variable = airplayReqProcessor_preparePlistResponse(cf, a3);
      if (Variable)
      {
        uint64_t v10 = 4294895362;
        goto LABEL_9;
      }
    }
    uint64_t v10 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v10 = 4294895366;
  }
LABEL_20:
  if (cf) {
    CFRelease(cf);
  }
  if (v14) {
    CFRelease(v14);
  }
  if (v6) {
    CFRelease(v6);
  }
  if (v16) {
    CFRelease(v16);
  }
  if (Variable
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v10;
}

uint64_t airplayReqProcessor_requestProcessFPSetup()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  ++*(_DWORD *)(DerivedStorage + 396);
  if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    APSLogErrorAt();
    return 4294895366;
  }
  if (*(void *)(DerivedStorage + 8))
  {
    int v1 = *(_DWORD *)(*(void *)(DerivedStorage + 16) + 192);
    if (v1 <= 31)
    {
      uint64_t v2 = "Enet";
      switch(v1)
      {
        case 1:
          goto LABEL_26;
        case 2:
          uint64_t v2 = "WiFi";
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_19;
        case 4:
          uint64_t v2 = "AWDL";
          break;
        case 8:
          uint64_t v2 = "USB";
          break;
        default:
          if (v1 != 16) {
            goto LABEL_19;
          }
          uint64_t v2 = "Direct";
          break;
      }
      goto LABEL_26;
    }
    if (v1 > 127)
    {
      if (v1 == 128)
      {
        uint64_t v2 = "NAN";
        goto LABEL_26;
      }
      if (v1 == 256)
      {
        uint64_t v2 = "IPsecBT";
        goto LABEL_26;
      }
    }
    else
    {
      if (v1 == 32)
      {
        uint64_t v2 = "BTLE";
        goto LABEL_26;
      }
      if (v1 == 64)
      {
        uint64_t v2 = "WFD";
LABEL_26:
        if (*(unsigned char *)(DerivedStorage + 408)) {
          uint64_t v3 = " (Paired)";
        }
        else {
          uint64_t v3 = "";
        }
        CFStringRef v4 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"AirPlay starting...\n%s\n%s%s\n", DerivedStorage + 134, v2, v3);
        uint64_t v5 = *(void *)(DerivedStorage + 8);
        uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v6) {
          uint64_t v7 = v6;
        }
        else {
          uint64_t v7 = 0;
        }
        uint64_t v8 = *(void (**)(uint64_t, uint64_t, CFStringRef))(v7 + 24);
        if (v8) {
          v8(v5, 30, v4);
        }
        CFRelease(v4);
        goto LABEL_35;
      }
    }
LABEL_19:
    uint64_t v2 = "?";
    if (v1 == 512) {
      uint64_t v2 = "IPSecWiFi";
    }
    goto LABEL_26;
  }
LABEL_35:
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  if (Int64Ranged == 8)
  {
    int v10 = 2;
LABEL_39:
    *(_DWORD *)(DerivedStorage + 356) = v10;
    uint64_t v11 = *(void *)(DerivedStorage + 384);
    if (*(unsigned char *)(DerivedStorage + 392))
    {
      if (v11)
      {
        IPaI1oem5iL();
        *(void *)(DerivedStorage + 384) = 0;
        *(unsigned char *)(DerivedStorage + 392) = 0;
      }
    }
    else if (v11)
    {
LABEL_45:
      CFDictionaryGetData();
      APSLogErrorAt();
      return 4294895366;
    }
    *(void *)(DerivedStorage + 360) = 0;
    *(void *)(DerivedStorage + 368) = 0;
    *(void *)(DerivedStorage + 376) = 0;
    if (GetFairPlayHWInfo())
    {
      uint64_t v13 = 4294895362;
    }
    else
    {
      cp2g1b9ro();
      if (!v12) {
        goto LABEL_45;
      }
      uint64_t v13 = 4294895362;
    }
    APSLogErrorAt();
    return v13;
  }
  if (Int64Ranged == 32)
  {
    int v10 = 3;
    goto LABEL_39;
  }
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 60
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294895364;
}

uint64_t airplayReqProcessor_requestProcessFPSetup2()
{
  unsigned int v7 = 0;
  CMBaseObjectGetDerivedStorage();
  uint64_t v6 = 0;
  memset(length, 0, sizeof(length));
  uint64_t v4 = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v1 = Mutable;
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionaryGetData();
    APSLogErrorAt();
    int v3 = -71930;
    CFRelease(v1);
  }
  else
  {
    APSLogErrorAt();
    int v3 = 0;
    unsigned int v7 = -71950;
  }
  if (*(void *)&length[1]) {
    jEHf8Xzsv8K(*(uint64_t *)&length[1]);
  }
  if (v3
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 60
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v7;
}

void airplayReqProcessor_requestProcessEnsurePairPin()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(void *)(*(void *)DerivedStorage + 160);
  uint64_t v2 = *(NSObject **)(v1 + 16);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APReceiverSystemInfoEnsurePIN_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = v1;
  dispatch_sync(v2, block);
}

uint64_t airplayReqProcessor_requestProcessPairSetupPINStart(const void *a1)
{
  unsigned int v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v13 = 0;
  int v12 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    if (airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v14))
    {
      int PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
      if (Int64Ranged == 5) {
        int v5 = 1;
      }
      else {
        int v5 = PropertyInt64Sync;
      }
      int v13 = airplayReqProcessor_copyPasscodeForPairingType(*(void *)(*(void *)DerivedStorage + 160), Int64Ranged, v5, &v12);
      if (v13)
      {
        APSLogErrorAt();
        unsigned int v14 = -71934;
        uint64_t v6 = v12;
        if (v12) {
LABEL_18:
        }
          CFRelease(v6);
      }
      else
      {
        uint64_t v6 = v12;
        int v7 = airplayReqProcessor_displayPINIfNeeded(a1, v12, v5);
        int v13 = v7;
        BOOL v8 = v7 == -6721 || v7 == 200453;
        if (v8 || v7 == 453) {
          unsigned int v14 = -71937;
        }
        if (v6) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      APSLogErrorAt();
    }
    uint64_t v9 = v14;
    if (!v14) {
      return v9;
    }
    goto LABEL_20;
  }
  uint64_t v9 = 4294895366;
  APSLogErrorAt();
  unsigned int v14 = -71930;
LABEL_20:
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90)
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || (v10 = _LogCategory_Initialize(), uint64_t v9 = v14, v10))
    {
      LogPrintF();
      return v14;
    }
  }
  return v9;
}

uint64_t airplayReqProcessor_requestProcessPairSetupUnauthenticatedLegacy(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  char v23 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  theCFDataRef Data = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  BOOL v6 = 1;
  if (!CFObjectGetPropertyInt64Sync()) {
    BOOL v6 = CFObjectGetPropertyInt64Sync() != 0;
  }
  uint64_t v7 = 4294895356;
  uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  if (APSIsAPMSpeaker()
    || (v15 = *(_DWORD *)(DerivedStorage + 24), int v16 = -6768, v15 != 4) && v15 != 64 && v15 != 128)
  {
    if (v6)
    {
      int v16 = -6768;
      goto LABEL_30;
    }
    if (*(void *)(DerivedStorage + 400)
      || (int v9 = APPairingServicesLegacyCreate(*MEMORY[0x263EFFB08], (void *)(DerivedStorage + 400))) == 0)
    {
      CFDictionaryRef Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F24AB0]);
      if (Value)
      {
        uint64_t v11 = Value;
        uint64_t v12 = *(void *)(DerivedStorage + 400);
        uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 0;
        }
        uint64_t v17 = *(uint64_t (**)(uint64_t, void, uint64_t, const void *, CFDataRef *, char *))(v14 + 8);
        if (v17)
        {
          int v18 = v17(v12, 0, PropertyInt64Sync, v11, &theData, &v23);
          int v16 = v18;
          if (v18 == -72192)
          {
LABEL_21:
            uint64_t v7 = 4294895362;
            goto LABEL_30;
          }
          if (!v18)
          {
            if (theData)
            {
              BytePtr = CFDataGetBytePtr(theData);
              CFIndex Length = CFDataGetLength(theData);
            }
            else
            {
              BytePtr = 0;
              CFIndex Length = 0;
            }
            int v16 = airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"application/x-apple-binary-plist", (uint64_t)BytePtr, Length, 0, a3);
            if (!v16)
            {
              uint64_t v7 = 0;
              goto LABEL_30;
            }
            goto LABEL_41;
          }
        }
        else
        {
          int v16 = -12782;
        }
      }
      else
      {
        APSLogErrorAt();
        int v16 = 0;
      }
      uint64_t v7 = 4294895366;
      goto LABEL_30;
    }
    int v16 = v9;
LABEL_41:
    APSLogErrorAt();
    goto LABEL_21;
  }
LABEL_30:
  if (theData) {
    CFRelease(theData);
  }
  if (v16
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v7;
}

uint64_t airplayReqProcessor_requestProcessPairSetupPINLegacy(const void *a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFArrayRef v31 = 0;
  char v30 = 0;
  CFTypeRef cf = 0;
  uint64_t v7 = &unk_268402000;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v8 = 4294895362;
  uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  int v10 = airplayReqProcessor_copyPasscodeForPairingType(*(void *)(*DerivedStorage + 160), 1001, PropertyInt64Sync, &v31);
  if (v10)
  {
    int v13 = v10;
    APSLogErrorAt();
    uint64_t v11 = v31;
  }
  else
  {
    uint64_t v11 = v31;
    int v12 = airplayReqProcessor_displayPINIfNeeded(a1, v31, PropertyInt64Sync);
    int v13 = v12;
    if (v12 == -6721) {
      goto LABEL_12;
    }
    if (v12 == 453 || v12 == 200453) {
      goto LABEL_12;
    }
    if (!DerivedStorage[50] && (int v13 = APPairingServicesLegacyCreate(*MEMORY[0x263EFFB08], DerivedStorage + 50)) != 0)
    {
      APSLogErrorAt();
    }
    else
    {
      CFDictionaryRef Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F24AB0]);
      if (Value)
      {
        uint64_t v17 = Value;
        uint64_t v18 = DerivedStorage[50];
        uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v19) {
          uint64_t v20 = v19;
        }
        else {
          uint64_t v20 = 0;
        }
        int v22 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, const void *, CFTypeRef *, char *))(v20 + 8);
        uint64_t v7 = (_DWORD *)&unk_268402000;
        if (v22)
        {
          int v23 = v22(v18, v11, PropertyInt64Sync, v17, &cf, &v30);
          int v13 = v23;
          switch(v23)
          {
            case -72192:
              goto LABEL_13;
            case -6760:
              int v13 = -6760;
LABEL_12:
              uint64_t v8 = 4294895359;
              goto LABEL_13;
            case 0:
              if (v30)
              {
                uint64_t v26 = DerivedStorage[1];
                if (v26) {
                  APReceiverUIControllerHidePIN(v26);
                }
                APReceiverSystemInfoSetProperty(*(void *)(*DerivedStorage + 160), v24, @"Passcode", v25, 0);
              }
              if (cf)
              {
                BytePtr = CFDataGetBytePtr((CFDataRef)cf);
                CFIndex Length = CFDataGetLength((CFDataRef)cf);
              }
              else
              {
                BytePtr = 0;
                CFIndex Length = 0;
              }
              int v13 = airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"application/x-apple-binary-plist", (uint64_t)BytePtr, Length, 0, a3);
              if (!v13)
              {
                uint64_t v8 = 0;
                goto LABEL_13;
              }
              break;
          }
        }
        else
        {
          int v13 = -12782;
        }
        APSLogErrorAt();
        goto LABEL_13;
      }
      APSLogErrorAt();
      uint64_t v8 = 4294895366;
    }
    uint64_t v7 = (_DWORD *)&unk_268402000;
  }
LABEL_13:
  if (v11) {
    CFRelease(v11);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v13)
  {
    int v15 = v7[100];
    if (v15 <= 90 && (v15 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  return v8;
}

uint64_t airplayReqProcessor_requestProcessPairSetup(const void *a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
  uint64_t DerivedStorage = (_DWORD *)CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  char v47 = 0;
  CFTypeRef v45 = 0;
  CFTypeRef v46 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v9 = 4294895362;
  uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  BOOL v11 = (PropertyInt64Sync & 0xFFFFFFFD) == 1;
  if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    APSLogErrorAt();
    int v14 = 0;
    PairingParamsDict = 0;
    goto LABEL_88;
  }
  if (!APSIsAPMSpeaker())
  {
    int v12 = DerivedStorage[6];
    if ((v12 == 4 || v12 == 128 || v12 == 64) && !PropertyInt64Sync)
    {
      BOOL v11 = 1;
      uint64_t PropertyInt64Sync = 1;
    }
  }
  if (!Int64Ranged && v11 || Int64Ranged == 4 && PropertyInt64Sync == 1)
  {
    PairingParamsDict = 0;
    int v14 = -6768;
    uint64_t v9 = 4294895356;
LABEL_19:
    CFTypeRef v15 = cf;
    uint64_t v16 = v9;
    goto LABEL_20;
  }
  char v44 = DerivedStorage;
  int v17 = airplayReqProcessor_copyPasscodeForPairingType(*(void *)(*(void *)DerivedStorage + 160), Int64Ranged, PropertyInt64Sync, (__CFString **)&cf);
  if (v17)
  {
    int v14 = v17;
    goto LABEL_90;
  }
  if (Int64Ranged != 1)
  {
    int v14 = 0;
LABEL_39:
    uint64_t v19 = (uint64_t *)(v44 + 100);
    if (*((void *)v44 + 50))
    {
LABEL_48:
      int v21 = Int64Ranged == 5 || Int64Ranged == 3;
      if (Int64Ranged == 5) {
        int v22 = @"com.apple.ScreenCapture";
      }
      else {
        int v22 = 0;
      }
      PairingParamsDict = airplayReqProcessor_createPairingParamsDict(0, 0, v21, Int64Ranged == 4, v22);
      if (!PairingParamsDict) {
        goto LABEL_91;
      }
      uint64_t v23 = *v19;
      uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v24) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = 0;
      }
      uint64_t v26 = *(void (**)(uint64_t, __CFString *, __CFDictionary *))(v25 + 56);
      if (v26) {
        v26(v23, @"pairingParams", PairingParamsDict);
      }
      CFDictionaryRef Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F24AB0]);
      if (Value)
      {
        CFArrayRef v28 = Value;
        uint64_t v29 = *v19;
        CFTypeRef v30 = cf;
        uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v31) {
          uint64_t v32 = v31;
        }
        else {
          uint64_t v32 = 0;
        }
        CFTypeID v33 = *(uint64_t (**)(uint64_t, CFTypeRef, uint64_t, const void *, CFTypeRef *, char *))(v32 + 8);
        if (v33)
        {
          int v34 = v33(v29, v30, PropertyInt64Sync, v28, &v46, &v47);
          int v14 = v34;
          switch(v34)
          {
            case -72192:
              goto LABEL_19;
            case -6760:
              uint64_t v9 = 4294895359;
              int v14 = -6760;
              goto LABEL_19;
            case 0:
              if (v47)
              {
                uint64_t v37 = *((void *)v44 + 1);
                if (v37)
                {
                  uint64_t v38 = *(void *)(CMBaseObjectGetVTable() + 16);
                  uint64_t v39 = v38 ? v38 : 0;
                  int v40 = *(void (**)(uint64_t))(v39 + 16);
                  if (v40) {
                    v40(v37);
                  }
                }
                APReceiverSystemInfoSetProperty(*(void *)(*(void *)v44 + 160), v35, @"Passcode", v36, 0);
                if (Int64Ranged == 4)
                {
                  int EncryptionContext = airplayReqProcessor_createEncryptionContext((uint64_t)a1, (CFMutableDictionaryRef *)&v45);
                  if (EncryptionContext)
                  {
                    int v14 = EncryptionContext;
                    goto LABEL_91;
                  }
                  v44[105] = 1;
                  *((unsigned char *)v44 + 408) = 1;
                  if ((PropertyInt64Sync & 0xFFFFFFFE) == 2) {
                    *((unsigned char *)v44 + 409) = 1;
                  }
                }
              }
              if (v46)
              {
                BytePtr = CFDataGetBytePtr((CFDataRef)v46);
                CFIndex Length = CFDataGetLength((CFDataRef)v46);
              }
              else
              {
                BytePtr = 0;
                CFIndex Length = 0;
              }
              int v14 = airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"application/x-apple-binary-plist", (uint64_t)BytePtr, Length, v45, a3);
              if (!v14)
              {
                uint64_t v9 = 0;
                goto LABEL_19;
              }
LABEL_91:
              APSLogErrorAt();
              goto LABEL_19;
          }
        }
        else
        {
          int v14 = -12782;
        }
        APSLogErrorAt();
        uint64_t v9 = 4294895356;
        goto LABEL_19;
      }
      APSLogErrorAt();
LABEL_88:
      uint64_t v9 = 4294895366;
      goto LABEL_19;
    }
    int v20 = APPairingServicesCoreUtilsCreate(*MEMORY[0x263EFFB08], (void *)v44 + 50);
    if (!v20)
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v14 = 0;
      goto LABEL_48;
    }
    int v14 = v20;
LABEL_90:
    APSLogErrorAt();
    PairingParamsDict = 0;
    goto LABEL_19;
  }
  CFTypeRef v15 = cf;
  int v18 = airplayReqProcessor_displayPINIfNeeded(a1, (const __CFString *)cf, PropertyInt64Sync);
  int v14 = v18;
  PairingParamsDict = 0;
  uint64_t v16 = 4294895359;
  if (v18 != -6721 && v18 != 453 && v18 != 200453) {
    goto LABEL_39;
  }
LABEL_20:
  if (v15) {
    CFRelease(v15);
  }
  if (v45) {
    CFRelease(v45);
  }
  if (v46) {
    CFRelease(v46);
  }
  if (PairingParamsDict) {
    CFRelease(PairingParamsDict);
  }
  if (v14
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v16;
}

uint64_t airplayReqProcessor_requestProcessPairVerify(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int EncryptionContext = 0;
  theCFDataRef Data = 0;
  CFTypeRef cf = 0;
  char v48 = 0;
  ++*(_DWORD *)(DerivedStorage + 416);
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  int v8 = EncryptionContext;
  if (EncryptionContext)
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
LABEL_7:
      LogPrintF();
    }
  }
  else if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50 {
         && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  }
  {
    goto LABEL_7;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  if (!EncryptionContext) {
    *(_DWORD *)(DerivedStorage + 420) = Int64 != 0;
  }
  CFDictionaryRef Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x263F24AB0]);
  if (!Value)
  {
    uint64_t v40 = 4294895362;
LABEL_84:
    APSLogErrorAt();
    int v17 = 0;
    goto LABEL_60;
  }
  BOOL v11 = Value;
  int v12 = (uint64_t *)(DerivedStorage + 400);
  if (*(void *)(DerivedStorage + 400))
  {
    if (!v8) {
      goto LABEL_29;
    }
LABEL_27:
    BOOL v15 = 0;
    BOOL v16 = 0;
    int v17 = 0;
    goto LABEL_47;
  }
  uint64_t v13 = *MEMORY[0x263EFFB08];
  int v14 = (void *)(DerivedStorage + 400);
  if (v8)
  {
    int EncryptionContext = APPairingServicesLegacyCreate(v13, v14);
    if (EncryptionContext)
    {
      uint64_t v40 = 4294895362;
      goto LABEL_84;
    }
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_27;
  }
  int EncryptionContext = APPairingServicesCoreUtilsCreate(v13, v14);
  if (EncryptionContext)
  {
    uint64_t v40 = 4294895362;
    goto LABEL_84;
  }
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_29:
  unsigned int v18 = Int64Ranged & 0xFFFFFFFE;
  uint64_t v19 = @"com.apple.admin";
  if (Int64Ranged != 7) {
    uint64_t v19 = 0;
  }
  BOOL v20 = Int64Ranged == 3;
  int v21 = @"com.apple.ScreenCapture";
  if (Int64Ranged == 5) {
    BOOL v20 = 1;
  }
  else {
    int v21 = 0;
  }
  BOOL v22 = v18 == 6;
  if (v18 == 6) {
    uint64_t v23 = v19;
  }
  else {
    uint64_t v23 = v21;
  }
  int v24 = v18 != 6 && v20;
  PairingParamsDict = airplayReqProcessor_createPairingParamsDict(Int64Ranged == 8, v18 == 6, v24, 0, v23);
  if (!PairingParamsDict)
  {
    uint64_t v40 = 4294895362;
    goto LABEL_84;
  }
  char v47 = v11;
  BOOL v26 = Int64Ranged == 8;
  BOOL v27 = v22;
  int v17 = PairingParamsDict;
  int v28 = Int64Ranged;
  uint64_t v29 = a1;
  CFTypeRef v30 = a3;
  uint64_t v31 = *v12;
  uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v32) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = 0;
  }
  int v34 = *(void (**)(uint64_t, __CFString *, __CFDictionary *))(v33 + 56);
  if (v34) {
    v34(v31, @"pairingParams", v17);
  }
  a3 = v30;
  a1 = v29;
  int Int64Ranged = v28;
  BOOL v16 = v27;
  BOOL v15 = v26;
  BOOL v11 = v47;
LABEL_47:
  uint64_t v35 = *v12;
  uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v36) {
    uint64_t v37 = v36;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = *(uint64_t (**)(uint64_t, const void *, CFDataRef *, char *))(v37 + 16);
  if (!v38)
  {
    int EncryptionContext = -12782;
    goto LABEL_58;
  }
  int EncryptionContext = v38(v35, v11, &theData, &v48);
  if (EncryptionContext)
  {
LABEL_58:
    uint64_t v40 = 4294895362;
LABEL_59:
    APSLogErrorAt();
    goto LABEL_60;
  }
  if (!v48)
  {
LABEL_87:
    if (theData)
    {
      BytePtr = CFDataGetBytePtr(theData);
      CFIndex Length = CFDataGetLength(theData);
    }
    else
    {
      BytePtr = 0;
      CFIndex Length = 0;
    }
    int EncryptionContext = airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"application/octet-stream", (uint64_t)BytePtr, Length, cf, a3);
    if (!EncryptionContext)
    {
      uint64_t v40 = 0;
      goto LABEL_92;
    }
    uint64_t v40 = 4294895362;
    goto LABEL_59;
  }
  int PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  if (!v8)
  {
    int EncryptionContext = airplayReqProcessor_createEncryptionContext(a1, (CFMutableDictionaryRef *)&cf);
    if (EncryptionContext)
    {
      APSLogErrorAt();
      uint64_t v40 = 0;
LABEL_60:
      if (!EncryptionContext) {
        goto LABEL_92;
      }
      goto LABEL_71;
    }
  }
  *(unsigned char *)(DerivedStorage + 408) = 1;
  if (v15)
  {
    *(unsigned char *)(DerivedStorage + 412) = 1;
  }
  else if (v16)
  {
    *(unsigned char *)(DerivedStorage + 411) = 1;
  }
  if (PropertyInt64Sync == 1
    || *(unsigned char *)(DerivedStorage + 412)
    || *(unsigned char *)(DerivedStorage + 411)
    || Int64Ranged == 5)
  {
    *(unsigned char *)(DerivedStorage + 409) = 1;
  }
  if (EncryptionContext == -6745)
  {
    uint64_t v40 = 4294895356;
    goto LABEL_71;
  }
  if (EncryptionContext != -6716)
  {
    if (EncryptionContext)
    {
      uint64_t v40 = 4294895366;
      goto LABEL_71;
    }
    goto LABEL_87;
  }
  uint64_t v40 = 4294895363;
LABEL_71:
  uint64_t v41 = *(void *)(DerivedStorage + 400);
  if (v41)
  {
    uint64_t v42 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v43 = v42 ? v42 : 0;
    if (*(void *)(v43 + 24)) {
      (*(void (**)(uint64_t))(v43 + 40))(v41);
    }
  }
LABEL_92:
  if (theData) {
    CFRelease(theData);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v17) {
    CFRelease(v17);
  }
  return v40;
}

uint64_t airplayReqProcessor_requestProcessFeedback(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  CFDictionaryRef theDict = 0;
  uint64_t v5 = *(void *)(CMBaseObjectGetDerivedStorage() + 32);
  if (!v5) {
    return 0;
  }
  AirPlayReceiverSessionControl(v5, v6, @"updateFeedback", 0, a2, &theDict);
  if (!theDict) {
    return 0;
  }
  if (CFDictionaryGetCount(theDict) >= 1 && airplayReqProcessor_preparePlistResponse(theDict, a3))
  {
    uint64_t v7 = 4294895362;
    APSLogErrorAt();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (theDict) {
    CFRelease(theDict);
  }
  return v7;
}

uint64_t airplayReqProcessor_requestProcessMetrics(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  int v12 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 32))
  {
    CFDataGetTypeID();
    TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
    CFDataRef v6 = TypedValue;
    if (!TypedValue)
    {
      uint64_t v10 = 4294895358;
      APSLogErrorAt();
      CFMutableDictionaryRef Mutable = 0;
      goto LABEL_19;
    }
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v6);
    CFDictionaryGetTypeID();
    CFDataRef v6 = (const __CFData *)CFCreateWithPlistBytes();
    CFMutableDictionaryRef Mutable = AirPlayReceiverSessionCopyProperty(*(void *)(DerivedStorage + 32), v7, @"metrics", v8, 0);
    if (Mutable || (CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90])) != 0)
    {
      int v12 = airplayReqProcessor_preparePlistResponse(Mutable, a3);
      if (!v12)
      {
        uint64_t v10 = 0;
        goto LABEL_11;
      }
      APSLogErrorAt();
      uint64_t v10 = 4294895362;
LABEL_19:
      if (!v12) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
    APSLogErrorAt();
    uint64_t v10 = 4294895362;
  }
  else
  {
    CFMutableDictionaryRef Mutable = 0;
    CFDataRef v6 = 0;
    uint64_t v10 = 4294895358;
  }
LABEL_20:
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_11:
  if (v6) {
    CFRelease(v6);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v10;
}

uint64_t airplayReqProcessor_requestProcessCommand(const void *a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  int updated = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFTypeRef v48 = 0;
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  CFDataRef v7 = TypedValue;
  if (!TypedValue)
  {
    uint64_t v25 = 4294895366;
    APSLogErrorAt();
    uint64_t v9 = 0;
    goto LABEL_77;
  }
  CFDataGetBytePtr(TypedValue);
  CFDataGetLength(v7);
  CFDictionaryGetTypeID();
  CFDataRef v7 = (const __CFData *)CFCreateWithPlistBytes();
  CFStringGetTypeID();
  uint64_t v8 = CFDictionaryGetTypedValue();
  if (!v8)
  {
    CFDictionaryGetInt64();
    CFDictionaryRef Value = CFDictionaryGetValue(v7, @"params");
    if (Value)
    {
      BOOL v11 = Value;
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        CFDictionarySetInt64();
        CFDictionarySetValue(Mutable, @"reqProcRef", a1);
        CFDictionarySetValue(Mutable, @"params", v11);
        uint64_t v14 = *(void *)(DerivedStorage + 32);
        if (!v14)
        {
          APSLogErrorAt();
          int updated = -6709;
          uint64_t v25 = 4294895365;
          goto LABEL_92;
        }
        int updated = AirPlayReceiverSessionControl(v14, v13, @"didReceiveData", 0, Mutable, 0);
        if (!updated)
        {
LABEL_34:
          uint64_t v25 = 0;
          goto LABEL_35;
        }
        APSLogErrorAt();
        uint64_t v9 = 0;
        goto LABEL_100;
      }
      APSLogErrorAt();
      uint64_t v25 = 0;
      int v33 = -71946;
    }
    else
    {
      uint64_t v25 = 4294895366;
      APSLogErrorAt();
      CFMutableDictionaryRef Mutable = 0;
      int v33 = -6705;
    }
    int updated = v33;
    goto LABEL_92;
  }
  uint64_t v9 = (const void *)v8;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(*(void *)(DerivedStorage + 432), 0, 0, &v48);
  if (CFEqual(v9, @"APValeria"))
  {
    CFDictionaryGetTypeID();
    uint64_t v15 = CFDictionaryGetTypedValue();
    if (v15)
    {
      CFDictionaryRef v16 = (const __CFDictionary *)v15;
      uint64_t v17 = CMBaseObjectGetDerivedStorage();
      unsigned int v50 = 0;
      int v18 = *(_DWORD *)(v17 + 24);
      BOOL v19 = v18 == 64;
      if (v18 == 128) {
        BOOL v19 = 1;
      }
      int v20 = v18 == 4 || v19;
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, v16);
      ASPrintF();
      CFDictionarySetCString();
      BOOL v22 = (const void **)MEMORY[0x263EFFB38];
      if (v20) {
        BOOL v22 = (const void **)MEMORY[0x263EFFB40];
      }
      CFDictionarySetValue(MutableCopy, @"IsP2P", *v22);
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v28 = APSXPCClientSendCommandCreatingReply();
      if (v28)
      {
        APSLogErrorAt();
        if (!MutableCopy)
        {
LABEL_48:
          free(v50);
          uint64_t v25 = 0;
          CFMutableDictionaryRef Mutable = 0;
          int updated = v28;
          if (!v28) {
            goto LABEL_35;
          }
          goto LABEL_49;
        }
      }
      else if (!MutableCopy)
      {
        goto LABEL_48;
      }
      CFRelease(MutableCopy);
      goto LABEL_48;
    }
    uint64_t v25 = 4294895366;
LABEL_85:
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    int updated = -6705;
    goto LABEL_50;
  }
  if (CFEqual(v9, @"duckAudio") || CFEqual(v9, @"unduckAudio"))
  {
    if (CFDictionaryContainsKey(v7, @"params"))
    {
      CFDictionaryGetTypeID();
      CFDictionaryRef Empty = (const __CFDictionary *)CFDictionaryGetTypedValue();
      if (!Empty)
      {
        uint64_t v25 = 4294895366;
        goto LABEL_85;
      }
    }
    else
    {
      CFDictionaryRef Empty = (const __CFDictionary *)CFDictionaryGetEmpty();
    }
    uint64_t v26 = *(void *)(DerivedStorage + 32);
    if (v26)
    {
      if (*(_DWORD *)(DerivedStorage + 40) != 2)
      {
        APSLogErrorAt();
        CFMutableDictionaryRef Mutable = 0;
        int updated = -6773;
        uint64_t v25 = 4294895363;
        goto LABEL_50;
      }
      int updated = AirPlayReceiverSessionControl(v26, v23, v9, 0, Empty, 0);
      if (!updated) {
        goto LABEL_33;
      }
      goto LABEL_99;
    }
LABEL_97:
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    int updated = -6709;
    uint64_t v25 = 4294895365;
    goto LABEL_50;
  }
  if (CFEqual(v9, @"mute"))
  {
    if (!v48)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_133;
    }
    CFDictionaryGetTypeID();
    CFDictionaryGetTypedValue();
    int updated = CFObjectSetProperty();
    if (updated)
    {
      uint64_t v25 = 4294895366;
LABEL_133:
      APSLogErrorAt();
      goto LABEL_77;
    }
    goto LABEL_33;
  }
  if (CFEqual(v9, @"unmute"))
  {
    if (!v48)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_133;
    }
    CFDictionaryGetTypeID();
    CFDictionaryGetTypedValue();
    int updated = CFObjectSetProperty();
    if (updated)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_133;
    }
LABEL_33:
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_34;
  }
  if (CFEqual(v9, @"changeRelativeVolume") || CFEqual(v9, @"performPWDKeyExchange"))
  {
    if (!v48)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_133;
    }
    CFDictionaryGetTypeID();
    CFDictionaryRef v29 = (const __CFDictionary *)CFDictionaryGetTypedValue();
    if (!v29)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_85;
    }
    int updated = AirPlayReceiverSessionControl((uint64_t)v48, v30, v9, 0, v29, (__CFDictionary **)&cf);
    if (updated) {
      goto LABEL_99;
    }
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v25 = 0;
    if (a3 && cf)
    {
      int updated = airplayReqProcessor_preparePlistResponse(cf, a3);
      if (!updated) {
        goto LABEL_33;
      }
      goto LABEL_99;
    }
    goto LABEL_78;
  }
  if (CFEqual(v9, @"updateMRNowPlayingInfo"))
  {
    CFDictionaryGetTypeID();
    CFDictionaryRef v31 = (const __CFDictionary *)CFDictionaryGetTypedValue();
    if (!v31)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_85;
    }
    int updated = airplayReqProcessor_processUpdateMRNowPlayingInfo((uint64_t)a1, v31);
    if (!updated) {
      goto LABEL_33;
    }
    uint64_t v25 = 4294895366;
    goto LABEL_133;
  }
  if (CFEqual(v9, @"updateMRSupportedCommands"))
  {
    CFDictionaryGetTypeID();
    CFDictionaryRef v32 = (const __CFDictionary *)CFDictionaryGetTypedValue();
    if (!v32)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_85;
    }
    int updated = airplayReqProcessor_processUpdateMRExtendedMetadata((uint64_t)a1, v32, @"mrSupportedCommandsFromSender", @"mrSupportedCommandsFromSender");
    if (!updated) {
      goto LABEL_33;
    }
    uint64_t v25 = 4294895366;
    goto LABEL_133;
  }
  if (CFEqual(v9, @"setMRInfo"))
  {
    if (!*(void *)(DerivedStorage + 32)) {
      goto LABEL_97;
    }
    uint64_t v34 = DerivedStorage;
    CFDictionaryGetTypeID();
    CFDictionaryRef v35 = (const __CFDictionary *)CFDictionaryGetTypedValue();
    if (!v35)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_85;
    }
    CFDictionaryRef v36 = v35;
    if (!CFDictionaryContainsKey(v35, @"mrInfo"))
    {
      uint64_t v25 = 4294895366;
      goto LABEL_85;
    }
    uint64_t v37 = CFDictionaryGetValue(v36, @"mrInfo");
    AirPlayReceiverSessionSetProperty(*(void *)(v34 + 32), v38, @"MRInfo", 0, v37);
    uint64_t v25 = 0;
LABEL_77:
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_78;
  }
  uint64_t v46 = DerivedStorage;
  if (!CFEqual(v9, @"setSenderDisplayLatencyMs"))
  {
    if (CFEqual(v9, @"updateMRPlaybackState"))
    {
      CFDictionaryGetTypeID();
      CFDictionaryRef v40 = (const __CFDictionary *)CFDictionaryGetTypedValue();
      if (!v40)
      {
        uint64_t v25 = 4294895366;
        goto LABEL_85;
      }
      int updated = airplayReqProcessor_processUpdateMRExtendedMetadata((uint64_t)a1, v40, @"mrPlaybackState", @"mrPlaybackState");
      if (!updated) {
        goto LABEL_33;
      }
      uint64_t v25 = 4294895366;
      goto LABEL_133;
    }
    if (CFEqual(v9, @"updateMRNowPlayingClient"))
    {
      CFDictionaryGetTypeID();
      CFDictionaryRef v41 = (const __CFDictionary *)CFDictionaryGetTypedValue();
      if (!v41)
      {
        uint64_t v25 = 4294895366;
        goto LABEL_85;
      }
      int updated = airplayReqProcessor_processUpdateMRExtendedMetadata((uint64_t)a1, v41, @"mrNowPlayingClient", @"mrNowPlayingClient");
      if (!updated) {
        goto LABEL_33;
      }
      uint64_t v25 = 4294895366;
      goto LABEL_133;
    }
    if (!CFEqual(v9, @"fadeAudio"))
    {
      uint64_t v25 = 4294895366;
      int updated = -6705;
      goto LABEL_133;
    }
    CFDictionaryGetTypeID();
    uint64_t v42 = CFDictionaryGetTypedValue();
    if (!v42)
    {
      uint64_t v25 = 4294895366;
      goto LABEL_85;
    }
    CFDictionaryRef v44 = (const __CFDictionary *)v42;
    uint64_t v45 = *(void *)(DerivedStorage + 32);
    if (!v45) {
      goto LABEL_97;
    }
    int updated = AirPlayReceiverSessionControl(v45, v43, v9, 0, v44, 0);
    if (!updated) {
      goto LABEL_33;
    }
LABEL_99:
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
LABEL_100:
    uint64_t v25 = 4294895362;
    goto LABEL_78;
  }
  CFDictionaryGetTypeID();
  if (!CFDictionaryGetTypedValue())
  {
    uint64_t v25 = 4294895366;
    goto LABEL_85;
  }
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  if (updated)
  {
    uint64_t v25 = 4294895366;
    goto LABEL_133;
  }
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v25 = 0;
  CFMutableDictionaryRef Mutable = 0;
  *(_DWORD *)(*(void *)(v46 + 32) + 696) = Int64Ranged;
LABEL_78:
  if (!updated) {
    goto LABEL_35;
  }
LABEL_49:
  if (!v9)
  {
LABEL_92:
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_94;
    }
    goto LABEL_35;
  }
LABEL_50:
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
LABEL_94:
    LogPrintF();
  }
LABEL_35:
  if (v7) {
    CFRelease(v7);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v48) {
    CFRelease(v48);
  }
  return v25;
}

uint64_t airplayReqProcessor_requestProcessSetAudioMode()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
    uint64_t v9 = 4294895366;
    APSLogErrorAt();
    return v9;
  }
  CFDataRef v2 = TypedValue;
  CFDataGetBytePtr(TypedValue);
  CFDataGetLength(v2);
  CFDictionaryGetTypeID();
  int v3 = (const void *)CFCreateWithPlistBytes();
  CFStringGetTypeID();
  uint64_t v4 = CFDictionaryGetTypedValue();
  if (!v4)
  {
    uint64_t v9 = 4294895366;
    APSLogErrorAt();
    goto LABEL_12;
  }
  uint64_t v7 = v4;
  uint64_t v8 = *(void **)(*(void *)(DerivedStorage + 32) + 576);
  if (!v8)
  {
    APSLogErrorAt();
    uint64_t v9 = 4294895358;
    goto LABEL_12;
  }
  if (APReceiverAudioSessionPlatformSetProperty(v8, v5, @"RASP::AudioMode", v6, v7))
  {
    APSLogErrorAt();
    uint64_t v9 = 4294895362;
LABEL_12:
    unsigned int v11 = v9;
    if (!v3) {
      return v9;
    }
    goto LABEL_6;
  }
  uint64_t v9 = 0;
  unsigned int v11 = 0;
  if (v3)
  {
LABEL_6:
    CFRelease(v3);
    return v11;
  }
  return v9;
}

uint64_t airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(const void *a1, int *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 8)
    || ((uint64_t v5 = DerivedStorage, *(unsigned char *)(DerivedStorage + 412)) || *(unsigned char *)(DerivedStorage + 413))
    && !*(unsigned char *)(*(void *)DerivedStorage + 255))
  {
    int v9 = 0;
    CFStringRef v8 = 0;
    uint64_t v10 = 1;
  }
  else if (APReceiverSessionManagerCanHijack(*(void *)(DerivedStorage + 432), a1))
  {
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    uint64_t v7 = SockAddrToDeviceID();
    CFStringRef v8 = CFStringCreateWithFormat(v6, 0, @"client-%llx", v7);
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v11 = *(void *)(v5 + 8);
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, CFStringRef))(v13 + 144);
    if (v14 && !v14(v11, v5 + 134, v8))
    {
      int v9 = -71930;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = 1;
      *(unsigned char *)(v5 + 413) = 1;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v9 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v10 = 0;
    CFStringRef v8 = 0;
    int v9 = -71937;
  }
  if (a2) {
    *a2 = v9;
  }
  if (v8) {
    CFRelease(v8);
  }
  return v10;
}

uint64_t airplayReqProcessor_createAndStoreMediaControlRequestProcessorForMCSession(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_OWORD *)int v23 = 0u;
  if (*(void *)(DerivedStorage + 104)
    || (CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]),
        (*(void *)(DerivedStorage + 104) = Mutable) != 0))
  {
    uint64_t Int64 = (const void *)CFNumberCreateInt64();
    if (CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 104), Int64))
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v9 = 0;
    }
    else
    {
      int v17 = *(_DWORD *)(DerivedStorage + 128);
      __int16 v18 = *(_WORD *)(DerivedStorage + 132);
      int v20 = *(_DWORD *)(DerivedStorage + 24);
      if (a3) {
        long long v21 = *a3;
      }
      else {
        long long v21 = 0uLL;
      }
      int v24 = *(const void **)DerivedStorage;
      uint64_t v25 = *(void *)(DerivedStorage + 120);
      uint64_t v26 = *(const void **)(*(void *)(DerivedStorage + 16) + 120);
      uint64_t v19 = *(void *)(DerivedStorage + 16);
      cf_8 = *(const void **)(DerivedStorage + 400);
      uint64_t v8 = *(void *)(DerivedStorage + 32);
      if (v8) {
        v23[1] = *(CFTypeRef *)(v8 + 448);
      }
      CFTypeRef v27 = *(CFTypeRef *)(DerivedStorage + 8);
      if (gMediaControlGlobalsInitOnce != -1) {
        dispatch_once_f(&gMediaControlGlobalsInitOnce, 0, (dispatch_function_t)mcProcessor_initOnce);
      }
      if (APReceiverRequestProcessorGetClassID_once != -1) {
        dispatch_once(&APReceiverRequestProcessorGetClassID_once, &__block_literal_global_224);
      }
      uint64_t v9 = CMDerivedObjectCreate();
      if (v9)
      {
        APSLogErrorAt();
      }
      else
      {
        uint64_t v10 = CMBaseObjectGetDerivedStorage();
        *(_DWORD *)(v10 + 16) = v17;
        *(_WORD *)(v10 + 20) = v18;
        *(_DWORD *)(v10 + 24) = v20;
        SockAddrCopy();
        SockAddrCopy();
        *(void *)(v10 + 96) = a2;
        *(_OWORD *)(v10 + 104) = v21;
        CFTypeRef v11 = cf_8;
        if (cf_8) {
          CFTypeRef v11 = CFRetain(cf_8);
        }
        *(void *)(v10 + 120) = v11;
        CFTypeRef v12 = v24;
        if (v24) {
          CFTypeRef v12 = CFRetain(v24);
        }
        *(void *)(v10 + 128) = v12;
        *(void *)(v10 + 144) = v25;
        *(void *)(v10 + 152) = v26;
        CFRetain(v26);
        *(void *)(v10 + 32) = v19;
        __strlcpy_chk();
        UUIDGet();
        CFTypeRef v13 = v27;
        if (v27) {
          CFTypeRef v13 = CFRetain(v27);
        }
        *(void *)(v10 + 392) = v13;
        *(void *)(v10 + 400) = APReceiverFairPlayHelperCreate();
        CFTypeRef v14 = v23[1];
        if (v23[1]) {
          CFTypeRef v14 = CFRetain(v23[1]);
        }
        *(void *)(v10 + 136) = v14;
        *(unsigned char *)(v10 + 408) = 1;
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()) {
            LogPrintF();
          }
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        *(void *)(v10 + 416) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 0, 0);
        *(void *)(v10 + 440) = CFDictionaryCreateMutable(v15, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        *(void *)(v10 + 432) = FigSimpleMutexCreate();
        *(void *)(v10 + 448) = FigSimpleMutexCreate();
        *(void *)(v10 + 424) = 0;
      }
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APSLogErrorAt();
      if (!v9) {
        uint64_t v9 = 4294960568;
      }
    }
    if (Int64) {
      CFRelease(Int64);
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895346;
  }
  return v9;
}

uint64_t airplayReqProcessor_hijackCurrentSessionIfNeeded(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = *(void *)(DerivedStorage + 432);
  if (*(int *)(v3 + 72) < 1) {
    return 0;
  }
  uint64_t v4 = DerivedStorage;
  if (CFArrayGetCount(*(CFArrayRef *)(v3 + 64)) != *(_DWORD *)(v3 + 72)) {
    return 0;
  }
  if (APReceiverSessionManagerCanHijack(*(void *)(v4 + 432), a1))
  {
    APReceiverSessionManagerHijack(*(void *)(v4 + 432), a1);
    return 0;
  }
  APSLogErrorAt();
  return 4294895359;
}

void airplayReqProcessor_handleNewSessionFromHTUnawareSender()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 440))
  {
    uint64_t v1 = DerivedStorage;
    if (APSIsAPMSpeaker())
    {
      if (APSIsMemberOfHTGroup())
      {
        if (*(void *)(*(void *)(v1 + 432) + 48))
        {
          CFDataRef v2 = (__CFDictionary *)APReceiverRequestProcessorCopyReceiverSession();
          if (v2)
          {
            uint64_t v3 = v2;
            if (AirPlayReceiverSessionSendMediaRemoteCommand(v2, -1, 1885435251, 0)) {
              goto LABEL_24;
            }
            if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
              && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
            if (!Mutable)
            {
LABEL_24:
              APSLogErrorAt();
              uint64_t v5 = v3;
            }
            else
            {
              uint64_t v5 = Mutable;
              CFDictionarySetValue(Mutable, @"type", @"htSecondaryNonPersistentSessionStarted");
              CFDictionarySetInt64();
              CFAllocatorRef v6 = *(const void **)(v1 + 456);
              if (v6) {
                CFDictionarySetValue(v5, @"hijackID", v6);
              }
              if (AirPlayReceiverSessionSendCommandForObject((uint64_t)v3, 0, v5, 0, 0))
              {
                APSLogErrorAt();
              }
              else if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50 {
                     && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
              }
              {
                LogPrintF();
              }
              CFRelease(v3);
            }
            CFRelease(v5);
          }
        }
      }
    }
  }
}

uint64_t airplayReqProcessor_registerReqProcWithSessionManager(const void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 352))
  {
    uint64_t v6 = DerivedStorage;
    uint64_t v7 = *(void *)(DerivedStorage + 432);
    if (v7)
    {
      if (a1)
      {
        if (gLogCategory_APReceiverSessionManager <= 50
          && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (a2)
        {
          if (a2 != 2)
          {
            if (a2 == 1)
            {
              if (*(unsigned char *)(v7 + 40))
              {
                if (!cfArrayContainsValue(*(const __CFArray **)(v7 + 80), a1))
                {
                  CFArrayAppendValue(*(CFMutableArrayRef *)(v7 + 80), a1);
                  if (gLogCategory_APReceiverSessionManager <= 50
                    && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                }
                goto LABEL_58;
              }
              uint64_t v5 = 4294960561;
LABEL_38:
              APSLogErrorAt();
              return v5;
            }
            uint64_t v5 = 4294895056;
            if (gLogCategory_APReceiverSessionManager <= 90
              && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
LABEL_37:
            APReceiverSessionManagerRemoveSession(v7, a1);
            goto LABEL_38;
          }
          if (APSIsMemberOfHTGroup()) {
            BOOL v8 = APSIsAPMSpeaker() != 0;
          }
          else {
            BOOL v8 = 0;
          }
          int v9 = APSIsMemberOfStereoPair();
          CFObjectGetInt64();
          if ((v8 || v9) && !cfArrayContainsValue(*(const __CFArray **)(v7 + 64), a1))
          {
            if (!*(void *)(v7 + 48)) {
              goto LABEL_45;
            }
            if (gLogCategory_APReceiverSessionManager <= 50
              && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            AirPlayReceiverServerHijackConnection(*(void *)(v7 + 24), *(void *)(v7 + 48), (uint64_t)a1);
            if (!*(void *)(v7 + 48))
            {
LABEL_45:
              int v10 = *(_DWORD *)(v7 + 72);
              if (v10 >= 1) {
                *(_DWORD *)(v7 + 72) = v10 + 1;
              }
              CFArrayAppendValue(*(CFMutableArrayRef *)(v7 + 64), a1);
              *(void *)(v7 + 48) = CFRetain(a1);
              APReceiverSessionManagerUpdateParentGroupInfo((void *)v7);
              if (gLogCategory_APReceiverSessionManager <= 50
                && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              if (v9)
              {
                if (gLogCategory_APReceiverSessionManager <= 30
                  && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                CFObjectSetProperty();
              }
              goto LABEL_57;
            }
          }
        }
        else
        {
          if (cfArrayContainsValue(*(const __CFArray **)(v7 + 64), a1)) {
            goto LABEL_58;
          }
          if (*(int *)(v7 + 72) < 1 || CFArrayGetCount(*(CFArrayRef *)(v7 + 64)) != *(_DWORD *)(v7 + 72))
          {
            CFArrayAppendValue(*(CFMutableArrayRef *)(v7 + 64), a1);
            if (gLogCategory_APReceiverSessionManager <= 50
              && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            APReceiverSessionManagerSetAsMainAirPlaySession(v7, a1);
LABEL_57:
            uint64_t v11 = APReceiverSessionManagerUpdateAndNotifyReceiverSessionState(v7);
            if (v11)
            {
              uint64_t v5 = v11;
              APSLogErrorAt();
              goto LABEL_37;
            }
LABEL_58:
            uint64_t v5 = 0;
            *(unsigned char *)(v6 + 352) = 1;
            return v5;
          }
        }
        APSLogErrorAt();
        uint64_t v5 = 4294895055;
        goto LABEL_38;
      }
      uint64_t v5 = 4294895056;
    }
    else
    {
      uint64_t v5 = 4294895056;
    }
    APSLogErrorAt();
    goto LABEL_38;
  }
  return 0;
}

uint64_t airplayReqProcessor_processUpdateMRNowPlayingInfo(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 32))
  {
    APSLogErrorAt();
    uint64_t v12 = 4294960551;
    goto LABEL_26;
  }
  uint64_t v4 = DerivedStorage;
  CFDictionaryRef Value = CFDictionaryGetValue(a2, @"params");
  if (!Value)
  {
    APSLogErrorAt();
    uint64_t v12 = 4294895345;
    goto LABEL_26;
  }
  uint64_t v6 = Value;
  uint64_t v7 = (__CFString *)CFDictionaryGetValue(a2, @"mergePolicy");
  if (v7) {
    int v9 = v7;
  }
  else {
    int v9 = @"update";
  }
  int v10 = gLogCategory_APReceiverRequestProcessorAirPlay;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30)
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay != -1)
    {
LABEL_8:
      if (v10 == -1 && !_LogCategory_Initialize()) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }
    int v11 = _LogCategory_Initialize();
    int v10 = gLogCategory_APReceiverRequestProcessorAirPlay;
    if (v11)
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay > 30) {
        goto LABEL_21;
      }
      goto LABEL_8;
    }
  }
  if (v10 > 50) {
    goto LABEL_21;
  }
  if (v10 == -1)
  {
    if (!_LogCategory_Initialize()) {
      goto LABEL_21;
    }
    int v10 = gLogCategory_APReceiverRequestProcessorAirPlay;
    if (gLogCategory_APReceiverRequestProcessorAirPlay > 50) {
      goto LABEL_21;
    }
  }
  if (v10 == -1 && !_LogCategory_Initialize()) {
    goto LABEL_21;
  }
LABEL_14:
  LogPrintF();
LABEL_21:
  uint64_t v12 = AirPlayReceiverSessionSetProperty(*(void *)(v4 + 32), v8, @"mrNowPlayingInfo", v9, v6);
  if (!v12) {
    return v12;
  }
  APSLogErrorAt();
LABEL_26:
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v12;
}

uint64_t airplayReqProcessor_processUpdateMRExtendedMetadata(uint64_t a1, const __CFDictionary *a2, const void *a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    if (a4)
    {
      uint64_t v8 = DerivedStorage;
      CFDictionaryRef Value = CFDictionaryGetValue(a2, a3);
      if (Value)
      {
        uint64_t v11 = AirPlayReceiverSessionSetProperty(*(void *)(v8 + 32), v10, a4, 0, Value);
        if (!v11) {
          return v11;
        }
      }
      else
      {
        uint64_t v11 = 4294895345;
      }
    }
    else
    {
      uint64_t v11 = 4294895345;
    }
  }
  else
  {
    uint64_t v11 = 4294895345;
  }
  APSLogErrorAt();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v11;
}

uint64_t airplayReqProcessor_preparePlistResponse(const void *a1, CFMutableDictionaryRef *a2)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895345;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895346;
  }
  CFMutableDictionaryRef v5 = Mutable;
  CFDataRef Data = CFPropertyListCreateData(0, a1, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  if (!Data)
  {
    uint64_t v9 = 4294895344;
    APSLogErrorAt();
LABEL_14:
    CFDataRef v10 = v5;
    goto LABEL_7;
  }
  CFDataRef v7 = Data;
  CFDataGetBytePtr(Data);
  CFDataGetLength(v7);
  uint64_t v8 = CFDictionarySetData();
  if (v8)
  {
    uint64_t v9 = v8;
    goto LABEL_13;
  }
  uint64_t v9 = CFDictionarySetCString();
  if (v9)
  {
LABEL_13:
    APSLogErrorAt();
    CFRelease(v7);
    goto LABEL_14;
  }
  *a2 = v5;
  CFDataRef v10 = v7;
LABEL_7:
  CFRelease(v10);
  return v9;
}

__CFDictionary *airplayReqProcessor_createPairingParamsDict(int a1, int a2, int a3, int a4, void *a5)
{
  keys[1] = *(void **)MEMORY[0x263EF8340];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  uint64_t v11 = Mutable;
  uint64_t v12 = (void *)*MEMORY[0x263EFFB40];
  CFTypeRef v13 = (const void *)*MEMORY[0x263EFFB38];
  if (a1) {
    CFTypeRef v14 = (const void *)*MEMORY[0x263EFFB40];
  }
  else {
    CFTypeRef v14 = (const void *)*MEMORY[0x263EFFB38];
  }
  CFDictionarySetValue(Mutable, @"useAccountOwnerPairing", v14);
  if (a2) {
    CFAllocatorRef v15 = v12;
  }
  else {
    CFAllocatorRef v15 = v13;
  }
  CFDictionarySetValue(v11, @"useHomeKitPairing", v15);
  if (a3) {
    CFDictionaryRef v16 = v12;
  }
  else {
    CFDictionaryRef v16 = v13;
  }
  CFDictionarySetValue(v11, @"useSystemPairing", v16);
  if (a4) {
    int v17 = v12;
  }
  else {
    int v17 = v13;
  }
  CFDictionarySetValue(v11, @"useTransientPairing", v17);
  if (a5)
  {
    values = v12;
    keys[0] = a5;
    CFDictionaryRef v18 = CFDictionaryCreate(0, (const void **)keys, (const void **)&values, 1, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionarySetValue(v11, @"ACL", v18);
    CFRelease(v18);
  }
  return v11;
}

uint64_t airplayReqProcessor_createEncryptionContext(uint64_t a1, CFMutableDictionaryRef *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = *(void *)(DerivedStorage + 400);
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFDataRef v7 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, unsigned char *))(v6 + 24);
  if (!v7)
  {
    uint64_t v12 = 4294954514;
LABEL_17:
    APSLogErrorAt();
    goto LABEL_18;
  }
  uint64_t v8 = v7(v4, "Control-Salt", 12, "Control-Read-Encryption-Key", 27, 32, v21);
  if (v8)
  {
    uint64_t v12 = v8;
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)(DerivedStorage + 400);
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  CFTypeRef v13 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, unsigned char *))(v11 + 24);
  if (!v13)
  {
    uint64_t v12 = 4294954514;
    goto LABEL_17;
  }
  uint64_t v14 = v13(v9, "Control-Salt", 12, "Control-Write-Encryption-Key", 28, 32, v20);
  if (v14)
  {
    uint64_t v12 = v14;
    goto LABEL_17;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v12 = 4294895346;
    goto LABEL_19;
  }
  uint64_t v16 = CFDictionarySetData();
  if (v16)
  {
    uint64_t v12 = v16;
    goto LABEL_28;
  }
  uint64_t v12 = CFDictionarySetData();
  if (v12)
  {
LABEL_28:
    APSLogErrorAt();
    goto LABEL_19;
  }
  *a2 = Mutable;
LABEL_18:
  CFMutableDictionaryRef Mutable = 0;
LABEL_19:
  for (uint64_t i = 0; i != 32; ++i)
    v21[i] = 0;
  for (uint64_t j = 0; j != 32; ++j)
    v20[j] = 0;
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v12;
}

uint64_t airplayReqProcessor_prepareBinaryDataResponse(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, CFMutableDictionaryRef *a5)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895346;
  }
  CFMutableDictionaryRef v10 = Mutable;
  if (a2)
  {
    if (a3)
    {
      uint64_t v11 = CFDictionarySetData();
      if (v11)
      {
        uint64_t v13 = v11;
        goto LABEL_13;
      }
    }
  }
  uint64_t v12 = CFDictionarySetCString();
  if (v12)
  {
    uint64_t v13 = v12;
LABEL_13:
    APSLogErrorAt();
    CFRelease(v10);
    return v13;
  }
  if (a4) {
    CFDictionarySetValue(v10, (const void *)*MEMORY[0x263F24AB8], a4);
  }
  uint64_t v13 = 0;
  *a5 = v10;
  return v13;
}

uint64_t airplayReqProcessor_isAllowedToConnectBasedOnACL()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  if (CFObjectGetPropertyInt64Sync()) {
    BOOL v2 = PropertyInt64Sync == 1;
  }
  else {
    BOOL v2 = 0;
  }
  int v3 = v2;
  if ((PropertyInt64Sync != 2 || *(unsigned char *)(DerivedStorage + 412)) && (!v3 || *(unsigned char *)(DerivedStorage + 411))) {
    return 1;
  }
  APSLogErrorAt();
  return 0;
}

uint64_t airplayReqProcessor_copyPasscodeForPairingType(uint64_t a1, uint64_t a2, int a3, __CFString **a4)
{
  uint64_t v5 = (uint64_t *)MEMORY[0x263EFFB40];
  uint64_t v6 = @"3939";
  if ((int)a2 > 4)
  {
    if ((a2 - 1001) >= 2)
    {
      if (a2 != 5) {
        goto LABEL_10;
      }
      uint64_t v5 = (uint64_t *)MEMORY[0x263EFFB38];
    }
  }
  else if ((a2 - 1) >= 3)
  {
    if (a2 != 4) {
      goto LABEL_10;
    }
    if ((a3 & 0xFFFFFFFE) != 2)
    {
      uint64_t v6 = @"3939";
      goto LABEL_10;
    }
  }
  unsigned int v8 = 0;
  uint64_t v6 = (__CFString *)APReceiverSystemInfoCopyProperty(a1, a2, @"Passcode", *v5, &v8);
  if (v8)
  {
    APSLogErrorAt();
    return v8;
  }
LABEL_10:
  uint64_t result = 0;
  *a4 = v6;
  return result;
}

uint64_t airplayReqProcessor_displayPINIfNeeded(const void *a1, const __CFString *a2, int a3)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  *(_OWORD *)buffer = 0u;
  long long v16 = 0u;
  if (a3 == 2) {
    return 0;
  }
  uint64_t v7 = DerivedStorage;
  if (!APReceiverSessionManagerCanHijack(*(void *)(DerivedStorage + 432), a1))
  {
    APSLogErrorAt();
    return 4294960575;
  }
  if (!*(void *)(v7 + 8))
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  CFStringGetCString(a2, buffer, 256, 0x8000100u);
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = *(void *)(v7 + 120);
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v11 + 8);
  if (!v12)
  {
    uint64_t v13 = 4294954514;
LABEL_14:
    APSLogErrorAt();
    return v13;
  }
  uint64_t v13 = v12(v8, buffer, v9, v7 + 134);
  if (v13) {
    goto LABEL_14;
  }
  return v13;
}

uint64_t APReceiverUIControllerHidePIN(uint64_t a1)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v5 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v4 = v5;
  if (v5) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 16);
  if (v7)
  {
    return v7(a1);
  }
  return result;
}

uint64_t airplayReqProcessor_createSessionInfoDict(uint64_t a1, const __CFDictionary *a2, __CFDictionary **a3)
{
  value[33] = *(void **)MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value[0] = 0;
  if (a3)
  {
    uint64_t v6 = DerivedStorage;
    CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, a2);
    if (MutableCopy)
    {
      uint64_t v9 = MutableCopy;
      if (!*(void *)(v6 + 32) || APSIsAPMSpeaker() || *(unsigned char *)(v6 + 440)) {
        goto LABEL_8;
      }
      uint64_t v10 = APReceiverSystemInfoCopyDisplaysInfoForUserVersion(*(void *)(*(void *)v6 + 160), v7, *(_DWORD *)(v6 + 444), (__CFArray **)value);
      if (!v10)
      {
        CFDictionarySetValue(v9, @"displays", value[0]);
LABEL_8:
        HardwareAddressToCString();
        CFDictionarySetCString();
        SockAddrToString();
        CFDictionarySetCString();
        uint64_t v11 = 0;
        *a3 = v9;
        goto LABEL_9;
      }
      uint64_t v11 = v10;
      APSLogErrorAt();
      CFRelease(v9);
    }
    else
    {
      APSLogErrorAt();
      uint64_t v11 = 4294895346;
    }
  }
  else
  {
    uint64_t v11 = 4294895345;
    APSLogErrorAt();
  }
LABEL_9:
  if (value[0]) {
    CFRelease(value[0]);
  }
  return v11;
}

uint64_t airplayReqProcessor_requestCreateSession(uint64_t a1, char a2, char a3, char a4, char a5, char a6, uint64_t a7)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 32))
  {
    uint64_t v15 = DerivedStorage;
    long long v78 = 0u;
    long long v77 = 0u;
    long long v75 = 0u;
    *(_OWORD *)CFTypeRef cf = 0u;
    long long v73 = 0u;
    long long v74 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v16 = *(void **)DerivedStorage;
    uint64_t v70 = *(void **)DerivedStorage;
    int v17 = *(_DWORD *)(DerivedStorage + 24);
    *((void *)&v71 + 1) = DerivedStorage + 304;
    *(void *)&long long v72 = DerivedStorage + 276;
    uint64_t v18 = *(void *)(DerivedStorage + 264);
    *((void *)&v72 + 1) = *(void *)(DerivedStorage + 120);
    *((void *)&v73 + 1) = v18;
    LODWORD(v74) = *(_DWORD *)(DerivedStorage + 272);
    *(void *)&long long v77 = *(void *)(DerivedStorage + 424);
    BOOL v19 = 1;
    LODWORD(v71) = v17;
    if (v17 != 4 && v17 != 64) {
      BOOL v19 = v17 == 128;
    }
    BYTE5(v75) = v19;
    BYTE6(v75) = a2;
    long long v20 = *(const void **)(DerivedStorage + 432);
    *((void *)&v75 + 1) = a1;
    cf[0] = v20;
    cf[1] = *(CFTypeRef *)(DerivedStorage + 8);
    *(void *)&long long v78 = a7;
    BYTE9(v77) = a3;
    BYTE8(v77) = a4;
    BYTE10(v77) = a5;
    BYTE11(v77) = a6;
    DWORD2(v78) = *(_DWORD *)(*(void *)(DerivedStorage + 16) + 136);
    LODWORD(v73) = *(_DWORD *)(DerivedStorage + 128);
    WORD2(v73) = *(_WORD *)(DerivedStorage + 132);
    strncpy((char *)&v74 + 4, (const char *)(DerivedStorage + 332), 0x11uLL);
    long long v21 = v16[11];
    uint64_t v22 = mach_absolute_time();
    if (gAirPlayReceiverSessionInitOnce != -1) {
      dispatch_once_f(&gAirPlayReceiverSessionInitOnce, 0, (dispatch_function_t)_GetTypeID_6083);
    }
    uint64_t Instance = _CFRuntimeCreateInstance();
    if (!Instance)
    {
      APSLogErrorAt();
      uint64_t v64 = 4294960568;
      _Cleanup(0, 4294960568);
      goto LABEL_87;
    }
    uint64_t v24 = Instance;
    bzero((void *)(Instance + 24), 0x2D0uLL);
    *(void *)(v24 + 16) = v21;
    dispatch_retain(v21);
    CFRetain(v16);
    *(void *)(v24 + 24) = v16;
    *(void *)(v24 + 32) = *((void *)&v75 + 1);
    *(_DWORD *)(v24 + 192) = v71;
    long long v25 = (long long *)v72;
    long long v26 = *(_OWORD *)(*((void *)&v71 + 1) + 12);
    *(_OWORD *)(v24 + 196) = **((_OWORD **)&v71 + 1);
    *(_OWORD *)(v24 + 208) = v26;
    long long v27 = *v25;
    *(_OWORD *)(v24 + 236) = *(long long *)((char *)v25 + 12);
    *(_OWORD *)(v24 + 224) = v27;
    UUIDGet();
    *(_DWORD *)(v24 + 268) = -6718;
    uint64_t v28 = *((void *)&v73 + 1);
    *(void *)(v24 + 272) = *((void *)&v72 + 1);
    *(void *)(v24 + 328) = v28;
    *(_DWORD *)(v24 + 336) = v74;
    *(CFTypeRef *)(v24 + 40) = cf[0];
    *(_WORD *)(v24 + 658) = WORD4(v77);
    *(unsigned char *)(v24 + 657) = BYTE10(v77);
    *(unsigned char *)(v24 + 660) = BYTE11(v77);
    if ((void)v78) {
      long long v29 = (__CFString *)v78;
    }
    else {
      long long v29 = @"NTP";
    }
    *(void *)(v24 + 648) = CFRetain(v29);
    *(_DWORD *)(v24 + 280) = v73;
    *(_WORD *)(v24 + 284) = WORD2(v73);
    __strlcpy_chk();
    *(unsigned char *)(v24 + 424) = BYTE5(v75);
    *(void *)(v24 + 344) = v22;
    *(unsigned char *)(v24 + 457) = BYTE6(v75);
    *(_DWORD *)(v24 + 476) = -1;
    *(_DWORD *)(v24 + 484) = DWORD2(v78);
    CFAllocatorRef v30 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    *(void *)(v24 + 568) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    uint64_t v31 = (const void *)v16[28];
    *(void *)(v24 + 592) = v31;
    if (v31) {
      CFRetain(v31);
    }
    CFTypeRef v32 = cf[1];
    *(CFTypeRef *)(v24 + 600) = cf[1];
    if (v32)
    {
      CFRetain(v32);
      uint64_t v33 = *(void *)(v24 + 600);
      if (v33)
      {
        if (!*(void *)(v24 + 592))
        {
          uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 8);
          uint64_t v44 = v43 ? v43 : 0;
          long long v51 = *(void (**)(uint64_t, __CFString *, const __CFAllocator *, uint64_t))(v44 + 48);
          if (v51) {
            v51(v33, @"SBufConsumer", v30, v24 + 592);
          }
        }
      }
    }
    int PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
    if (PropertyInt64Sync >= 1) {
      int v35 = PropertyInt64Sync;
    }
    else {
      int v35 = 30;
    }
    *(unsigned char *)(v24 + 560) = CFObjectGetPropertyInt64Sync() != 0;
    *(unsigned char *)(v24 + 730) = APSSettingsIsFeatureEnabled();
    uint64_t v36 = UpTicksPerSecond();
    *(_DWORD *)(v24 + 556) = v35;
    *(_DWORD *)(v24 + 552) = v35;
    *(void *)(v24 + 512) = v22;
    *(void *)(v24 + 520) = v36 * v35;
    *(void *)(v24 + 528) = v22;
    *(void *)(v24 + 544) = 10 * v36;
    if (*(unsigned char *)(v24 + 659))
    {
      APSSettingsGetInt64();
      APSSettingsGetInt64();
      APSSettingsGetInt64();
      SocketSetKeepAliveEx();
      goto LABEL_70;
    }
    unsigned int v69 = 0;
    uint64_t v37 = *(void *)(*(void *)(v24 + 24) + 16);
    int v38 = objc_alloc_init(AirPlayReceiverContext);
    if (v38)
    {
      uint64_t v39 = v38;
      v38->_session = (AirPlayReceiverSessionPrivate *)v24;
      v38->_queue = *(OS_dispatch_queue **)(v24 + 16);
      CFObjectGetPropertyDoubleSync();
      APSVolumeConvertDBToClampedSliderValue();
      v39->_state.outputVolume = v40;
      *(float *)(v24 + 688) = v40;
      *(void *)(v24 + 48) = v39;
      if (*(unsigned char *)(v37 + 152))
      {
        memset(cStr, 0, sizeof(cStr));
        UUIDtoCString();
        CFStringRef v41 = CFStringCreateWithCString(v30, (const char *)cStr, 0x8000100u);
        if (!v41) {
          goto LABEL_94;
        }
        uint64_t v42 = -[AirPlayReceiverMediaRemoteHelper initWithPlayerID:withSystemInfo:withReceiverServer:]([AirPlayReceiverMediaRemoteHelper alloc], "initWithPlayerID:withSystemInfo:withReceiverServer:", v41, *(void *)(*(void *)(v24 + 24) + 160));
        v39->_mediaRemoteHelper = v42;
        if (!v42) {
          goto LABEL_94;
        }
        [(AirPlayReceiverMediaRemoteHelper *)v42 makeNowPlayingPlayer];
LABEL_31:
        if (!*(unsigned char *)(*(void *)(v24 + 24) + 249) || !*(void *)(v24 + 600) || v39->_receiverUIStarted) {
          goto LABEL_56;
        }
        CFTypeRef v68 = 0;
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (Mutable)
        {
          CFMutableDictionaryRef v47 = Mutable;
          CFDictionarySetNumber();
          CFTypeRef v68 = 0;
          uint64_t v48 = *(void *)(v24 + 600);
          uint64_t v49 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v49) {
            uint64_t v50 = v49;
          }
          else {
            uint64_t v50 = 0;
          }
          long long v52 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, CFTypeRef *))(v50 + 72);
          if (v52) {
            int v53 = v52(v48, v47, &v68);
          }
          else {
            int v53 = -12782;
          }
          unsigned int v69 = v53;
          CFRelease(v47);
          if (v69) {
            goto LABEL_66;
          }
          cStr[0] = *(_OWORD *)(v24 + 196);
          *(_OWORD *)((char *)cStr + 12) = *(_OWORD *)(v24 + 208);
          APSNetworkAddressCreateWithSocketAddr();
          uint64_t v54 = *(void *)(v24 + 600);
          uint64_t v55 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v55) {
            uint64_t v56 = v55;
          }
          else {
            uint64_t v56 = 0;
          }
          uint64_t v57 = *(uint64_t (**)(uint64_t, __CFString *, void))(v56 + 56);
          if (v57) {
            int v58 = v57(v54, @"SessionReceiverAddress", 0);
          }
          else {
            int v58 = -12782;
          }
          unsigned int v69 = v58;
          if (v58)
          {
            APSLogErrorAt();
            goto LABEL_66;
          }
          if (v68)
          {
            v39->_receiverUISessionID = CFDictionaryGetInt64();
            CFRelease(v68);
          }
          else
          {
            v39->_receiverUISessionID = 0;
          }
          v39->_receiverUIStarted = 1;
          CMNotificationCenterGetDefaultLocalCenter();
          CMNotificationCenterAddListener();
LABEL_56:
          unsigned int v69 = IOPMAssertionCreateWithName(@"PreventUserIdleSystemSleep", 0xFFu, @"com.apple.airplay.audio", &v39->_powerAssertion);
          if (gLogCategory_AirPlayReceiverPlatform <= 40
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          unsigned int v69 = 0;
          dispatch_time(0, 5000000000);
          unsigned int v69 = APSAudioIOAssertionUntilTime();
          if (v69)
          {
            if (gLogCategory_AirPlayReceiverPlatform <= 50
              && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            unsigned int v69 = 0;
          }
LABEL_66:
          if (v41) {
            CFRelease(v41);
          }
          if (!v69) {
            goto LABEL_70;
          }
          goto LABEL_69;
        }
LABEL_94:
        APSLogErrorAt();
        unsigned int v69 = -6728;
        goto LABEL_66;
      }
      uint64_t v45 = *(void **)(v37 + 160);
      if (v45)
      {
        CFStringRef v41 = 0;
        v39->_mediaRemoteHelper = (AirPlayReceiverMediaRemoteHelper *)v45;
        goto LABEL_31;
      }
      APSLogErrorAt();
      int v66 = -6709;
    }
    else
    {
      APSLogErrorAt();
      int v66 = -6728;
    }
    unsigned int v69 = v66;
LABEL_69:
    _AirPlayReceiverSessionPlatformInvalidate((void *)v24);
    uint64_t v59 = v69;
    unsigned int v67 = v69;
    if (v69)
    {
      APSLogErrorAt();
LABEL_89:
      _Cleanup(v24, v59);
      CFRelease((CFTypeRef)v24);
      uint64_t v64 = v67;
      if (!v67)
      {
LABEL_80:
        if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
          && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
LABEL_87:
      APSLogErrorAt();
      return v64;
    }
LABEL_70:
    CFDictionaryRef v60 = *(uint64_t (**)(uint64_t, void))(v24 + 72);
    if (v60 && (unsigned int v67 = v60(v24, *(void *)(v24 + 56))) != 0)
    {
      APSLogErrorAt();
      uint64_t v59 = v67;
    }
    else
    {
      *(void *)(v24 + 664) = 0;
      CFMutableDictionaryRef v61 = CFDictionaryCreateMutable(v30, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      *(void *)(v24 + 672) = v61;
      if (v61)
      {
        CFMutableDictionaryRef v62 = CFDictionaryCreateMutable(v30, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        *(void *)(v24 + 712) = v62;
        if (v62)
        {
          CFMutableSetRef v63 = CFSetCreateMutable(v30, 0, MEMORY[0x263EFFFA0]);
          *(void *)(v24 + 720) = v63;
          if (v63)
          {
            if (gLogCategory_AirPlayReceiverCore <= 30
              && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            *(void *)(v15 + 32) = v24;
            goto LABEL_80;
          }
        }
      }
      APSLogErrorAt();
      uint64_t v59 = 4294960568;
      unsigned int v67 = -6728;
    }
    goto LABEL_89;
  }
  return 0;
}

void airplayReqProcessor_copyParentGroupInfoFromSetupRequest(uint64_t a1, uint64_t a2, __CFDictionary **a3)
{
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t v5 = CFDictionaryGetInt64();
  CFStringGetTypeID();
  TypedCFDictionaryRef Value = (const void *)CFDictionaryGetTypedValue();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Int64 && v5 && TypedValue)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v8 = Mutable;
      CFDictionarySetValue(Mutable, @"groupUUID", TypedValue);
      FigCFDictionarySetValueFromKeyInDict();
      CFDictionarySetValue(v8, @"senderSupportsRelay", (const void *)*MEMORY[0x263EFFB40]);
      *a3 = v8;
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t APReceiverRequestProcessorHijackAndBecomeMainSession(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 40) == 2)
  {
    uint64_t v3 = DerivedStorage;
    APReceiverSessionManagerSetAsMainAirPlaySession(*(void *)(DerivedStorage + 432), a1);
    APReceiverSessionManagerHijack(*(void *)(v3 + 432), a1);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895346;
  }
}

void APReceiverRequestProcessorSendSystemInfoUpdate(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v4 = *(void *)(CMBaseObjectGetDerivedStorage() + 32);
  value = 0;
  if (v4)
  {
    if (a2)
    {
      if (*(_DWORD *)(v4 + 336) < 0x37C684u)
      {
        uint64_t v6 = 0;
        goto LABEL_9;
      }
      if (!airplayReqProcessor_createSessionInfoDict(a1, a2, (__CFDictionary **)&value))
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (Mutable)
        {
          uint64_t v6 = Mutable;
          CFDictionarySetValue(Mutable, @"type", @"updateInfo");
          CFDictionarySetValue(v6, @"value", value);
          if (AirPlayReceiverSessionSendCommandForObject(v4, 0, v6, 0, 0))
          {
            APSLogErrorAt();
LABEL_14:
            CFRelease(v6);
            goto LABEL_15;
          }
LABEL_9:
          if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
            && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (!v6) {
            goto LABEL_15;
          }
          goto LABEL_14;
        }
      }
    }
    APSLogErrorAt();
LABEL_15:
    if (value) {
      CFRelease(value);
    }
    return;
  }

  APSLogErrorAt();
}

uint64_t airplayReqProcessor_Stop(void *a1, const __CFString *a2, uint64_t *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v29 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    CFStringRef v28 = a2;
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 8) && (*(unsigned char *)(DerivedStorage + 45) || *(unsigned char *)(DerivedStorage + 44)))
  {
    CFStringRef v7 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"AirPlay disconnected\n%s\n", DerivedStorage + 134, v28);
    uint64_t v8 = *(void *)(DerivedStorage + 8);
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, CFStringRef))(v10 + 24);
    if (v11) {
      v11(v8, 30, v7);
    }
    CFRelease(v7);
  }
  if (!a2 || CFStringCompare(a2, @"HTTPConnectionClose", 1uLL)) {
    goto LABEL_16;
  }
  airplayReqProcessor_GetMCRPForMCSession((uint64_t)a1, 0, &v29);
  if (!v29 || !CFObjectGetInt64())
  {
    uint64_t v24 = (const void **)(DerivedStorage + 104);
    CFDictionaryRef v23 = *(const __CFDictionary **)(DerivedStorage + 104);
    if (!v23) {
      goto LABEL_16;
    }
    CFDictionaryApplyFunction(v23, (CFDictionaryApplierFunction)airplayReqProcessor_tearDownMCRPDictionaryEntry, a1);
    long long v25 = *v24;
    if (!*v24) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
  if (CFObjectGetInt64())
  {
    uint64_t v19 = *a3;
    uint64_t v20 = v29;
    uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    uint64_t v17 = 4294895362;
    long long v26 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 48);
    if (v26)
    {
      uint64_t v27 = v26(v20, v19);
      if (!v27)
      {
        *(void *)(v19 + 16) = 0;
        goto LABEL_42;
      }
      uint64_t v17 = v27;
    }
    APSLogErrorAt();
    return v17;
  }
LABEL_42:
  CFObjectSetValue();
  uint64_t v24 = (const void **)(DerivedStorage + 104);
  long long v25 = *(const void **)(DerivedStorage + 104);
  if (v25)
  {
LABEL_43:
    CFRelease(v25);
    *uint64_t v24 = 0;
  }
LABEL_16:
  if (*(void *)(DerivedStorage + 32))
  {
    uint64_t Count = FigCFDictionaryGetCount();
    uint64_t v13 = *(void *)(DerivedStorage + 32);
    uint64_t v14 = 4294960543;
    if (!Count)
    {
      if (*(void *)(v13 + 616)) {
        uint64_t v14 = 4294960543;
      }
      else {
        uint64_t v14 = 0;
      }
    }
    if (!*(unsigned char *)(DerivedStorage + 45) && !*(unsigned char *)(DerivedStorage + 44)) {
      uint64_t v14 = 0;
    }
    AirPlayReceiverSessionTearDown(v13, 0, v14, 0);
    uint64_t v15 = *(const void **)(DerivedStorage + 32);
    if (v15)
    {
      CFRelease(v15);
      *(void *)(DerivedStorage + 32) = 0;
    }
    long long v16 = *(const void **)(DerivedStorage + 448);
    if (v16)
    {
      CFRelease(v16);
      *(void *)(DerivedStorage + 448) = 0;
    }
  }
  airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 0);
  airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(a1);
  return 0;
}

uint64_t airplayReqProcessor_tearDownMCRPDictionaryEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a2 || !a3 || (uint64_t result = airplayReqProcessor_tearDownMediaControlRequestProcessor(a3, a2), result))
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t airplayReqProcessor_tearDownMediaControlRequestProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage)
  {
    APSLogErrorAt();
    return -71951;
  }
  uint64_t v4 = DerivedStorage;
  CFObjectGetBytes();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFStringRef v7 = *(uint64_t (**)(uint64_t, void, void))(v6 + 16);
  if (!v7)
  {
    unsigned int v12 = -12782;
    goto LABEL_11;
  }
  unsigned int v12 = v7(a2, 0, 0);
  if (v12)
  {
LABEL_11:
    APSLogErrorAt();
    return v12;
  }
  uint64_t v8 = *(void *)v4;
  if (*(void *)(*(void *)v4 + 192))
  {
    uint64_t v9 = (const char *)UUIDtoCString();
    CFStringRef v10 = CFStringCreateWithCString(0, v9, 0x8000100u);
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v8 + 192), v10);
    if (v10) {
      CFRelease(v10);
    }
  }
  return v12;
}

uint64_t APReceiverRequestProcessorSetProperty_4333(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 72);
  if (!v8) {
    return 4294954514;
  }

  return v8(a1, a2, a3);
}

uint64_t airplayReqProcessor_Start()
{
  return 0;
}

CFStringRef airplayReqProcessor_CopyDebugDescription(const void *a1)
{
  CFAllocatorRef v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, @"<APReceiverRequestProcessorAirPlay %p>", a1);
}

void airplayReqProcessor_Finalize(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  airplayReqProcessor_Stop(a1, 0, 0);
  uint64_t v3 = *(const void **)(DerivedStorage + 448);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 448) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 456);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 456) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 400);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 400) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 104);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 104) = 0;
  }
  if (*(void *)(DerivedStorage + 384))
  {
    IPaI1oem5iL();
    *(void *)(DerivedStorage + 384) = 0;
  }
  *(unsigned char *)(DerivedStorage + 392) = 0;
  uint64_t v7 = *(const void **)(DerivedStorage + 8);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 8) = 0;
  }
}

const void *APReceiverRequestProcessorCopyReceiverSession()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t result = *(const void **)(DerivedStorage + 32);
  if (result)
  {
    CFRetain(result);
    return *(const void **)(DerivedStorage + 32);
  }
  return result;
}

uint64_t _AirTunesClock_RegisterClass()
{
  gAirTunesClockClass = 0;
  *(void *)algn_268402D28 = "AirTunesClock";
  qword_268402D30 = (uint64_t)_AirTunesClock_Init;
  unk_268402D38 = 0;
  qword_268402D40 = (uint64_t)_AirTunesClock_Finalize;
  unk_268402D48 = 0;
  qword_268402D50 = 0;
  unk_268402D58 = 0;
  qword_268402D60 = (uint64_t)_AirTunesClock_CopyDebugDescription;
  uint64_t result = _CFRuntimeRegisterClass();
  gAirTunesClockCFTypeID TypeID = result;
  return result;
}

CFStringRef _AirTunesClock_CopyDebugDescription(const void *a1)
{
  CFAllocatorRef v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, @"<AirTunesClock %p>", a1);
}

pthread_mutex_t *_AirTunesClock_Finalize(uint64_t a1)
{
  *(unsigned char *)(a1 + 224) = 0;
  if (*(void *)(a1 + 144))
  {
    pthread_join(*(pthread_t *)(a1 + 136), 0);
    *(void *)(a1 + 144) = 0;
  }
  uint64_t result = *(pthread_mutex_t **)(a1 + 216);
  if (result)
  {
    uint64_t result = (pthread_mutex_t *)pthread_mutex_destroy(result);
    *(void *)(a1 + 216) = 0;
  }
  return result;
}

double _AirTunesClock_Init(uint64_t a1)
{
  *(void *)(a1 + 224) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t _AirTunesClock_Thread(uint64_t a1)
{
  while (*(unsigned char *)(a1 + 224))
  {
    _AirTunesClock_Tick(a1);
    usleep(0x2710u);
  }
  return 0;
}

uint64_t _AirTunesClock_Tick(uint64_t a1)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 216));
  int v2 = mach_absolute_time();
  uint64_t v3 = (v2 - *(_DWORD *)(a1 + 80));
  *(_DWORD *)(a1 + 80) = v2;
  uint64_t v4 = *(void *)(a1 + 72) * v3;
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(_DWORD *)(a1 + 32);
  BOOL v7 = __CFADD__(v5, v4);
  uint64_t v8 = v5 + v4;
  *(void *)(a1 + 40) = v8;
  if (v7) {
    *(_DWORD *)(a1 + 32) = ++v6;
  }
  int v9 = *(_DWORD *)(a1 + 36);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = v10 + v8;
  int v12 = v6 + __CFADD__(v10, v8) + *(_DWORD *)(a1 + 16);
  if (v12 > *(_DWORD *)(a1 + 48))
  {
    uint64_t v13 = *(void *)(a1 + 104);
    uint64_t v14 = *(void *)(a1 + 112);
    if (v13 < 0) {
      uint64_t v15 = -(-v13 >> 4);
    }
    else {
      uint64_t v15 = (unint64_t)v13 >> 4;
    }
    *(void *)(a1 + 104) = v13 - v15;
    uint64_t v17 = v14 + v15;
    char v16 = (v14 + v15 < 0) ^ __OFADD__(v14, v15);
    *(void *)(a1 + 120) = v14 + v15;
    *(void *)(a1 + 88) = v14 + v15;
    uint64_t v18 = v14 + v15 + 1023;
    if (v16) {
      uint64_t v17 = v18;
    }
    *(void *)(a1 + 72) = 2 * (((2199 * (v17 >> 10)) ^ 0x8000000000000000) / *(void *)(a1 + 64));
    if (gLogCategory_AirTunesClock <= 10
      && (gLogCategory_AirTunesClock != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  *(_DWORD *)(a1 + 128) = v12;
  *(_DWORD *)(a1 + 48) = v12;
  *(_DWORD *)(a1 + 52) = v9;
  *(void *)(a1 + 56) = v11;
  uint64_t v19 = *(pthread_mutex_t **)(a1 + 216);

  return pthread_mutex_unlock(v19);
}

uint64_t AirTunesClock_Adjust(uint64_t a1, unint64_t a2, int a3)
{
  if (gLogCategory_AirTunesClock <= 10 && (gLogCategory_AirTunesClock != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 216));
  if (!a3 && a2 - 100000001 > 0xFFFFFFFFF4143DFELL)
  {
    int v6 = *(_DWORD *)(a1 + 100);
    int v7 = *(_DWORD *)(a1 + 128);
    if (v6) {
      int v8 = v7 - v6;
    }
    else {
      int v8 = 0;
    }
    unint64_t v9 = (unint64_t)a2 << 20;
    if ((a2 & 0x80000000) != 0) {
      unint64_t v9 = -((uint64_t)(0xFFFFFFFF00000000 * a2) >> 12);
    }
    uint64_t v10 = *(void *)(a1 + 112) + v9 * v8;
    *(void *)(a1 + 104) = a2 << 32;
    *(void *)(a1 + 112) = v10;
    *(_DWORD *)(a1 + 96) = a2;
    *(_DWORD *)(a1 + 100) = v7;
    if (v10 < 0) {
      uint64_t v11 = -(-v10 >> 32);
    }
    else {
      uint64_t v11 = HIDWORD(v10);
    }
    if (v11 <= 500000)
    {
      if (v10 > (uint64_t)0xFFF85EDF00000000)
      {
LABEL_22:
        pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 216));
        return 0;
      }
      unint64_t v12 = 0xFFF85EE000000000;
    }
    else
    {
      unint64_t v12 = 0x7A12000000000;
    }
    *(void *)(a1 + 112) = v12;
    goto LABEL_22;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    unint64_t v17 = -(uint64_t)a2 / 0x3B9ACA00uLL;
    unint64_t v18 = 0x44B82FA09 * (-1000000000 * v17 - a2);
    unint64_t v19 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v19 - v18;
    unsigned int v15 = *(_DWORD *)(a1 + 16) - (v19 < v18) - v17;
  }
  else
  {
    unint64_t v13 = 0x44B82FA09 * (a2 % 0x3B9ACA00);
    uint64_t v14 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v14 + v13;
    unsigned int v15 = *(_DWORD *)(a1 + 16) + __CFADD__(v14, v13) + (a2 / 0x3B9ACA00);
  }
  *(_DWORD *)(a1 + 16) = v15;
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 216));
  _AirTunesClock_Tick(a1);
  return 1;
}

uint64_t AirTunesClock_GetSynchronizedTime(uint64_t a1, int *a2)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 216));
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = v4 * (mach_absolute_time() - *(_DWORD *)(a1 + 80));
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = *a2;
  BOOL v8 = __CFADD__(v5, v6);
  uint64_t v9 = v5 + v6;
  *((void *)a2 + 1) = v9;
  if (v8) {
    *a2 = ++v7;
  }
  uint64_t v10 = *(void *)(a1 + 24);
  *((void *)a2 + 1) = v10 + v9;
  if (__CFADD__(v10, v9)) {
    *a2 = ++v7;
  }
  *a2 = v7 + *(_DWORD *)(a1 + 16);
  uint64_t v11 = *(pthread_mutex_t **)(a1 + 216);

  return pthread_mutex_unlock(v11);
}

uint64_t AirTunesClock_GetSynchronizedTimeNearUpTicks(uint64_t a1, int *a2, unint64_t a3)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 216));
  uint64_t v6 = mach_absolute_time();
  uint64_t v7 = v6;
  if (v6 >= a3) {
    uint64_t v8 = v6 - a3;
  }
  else {
    uint64_t v8 = a3 - v6;
  }
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = v9 * (v6 - *(_DWORD *)(a1 + 80));
  uint64_t v11 = *((void *)a2 + 1);
  int v12 = *a2;
  BOOL v13 = __CFADD__(v10, v11);
  uint64_t v14 = v10 + v11;
  *((void *)a2 + 1) = v14;
  if (v13) {
    *a2 = ++v12;
  }
  uint64_t v15 = *(void *)(a1 + 24);
  *((void *)a2 + 1) = v15 + v14;
  if (__CFADD__(v15, v14)) {
    *a2 = ++v12;
  }
  *a2 = v12 + *(_DWORD *)(a1 + 16);
  uint64_t result = pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 216));
  unint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = v8 / v17;
  uint64_t v19 = v8 % v17 * v9;
  unint64_t v20 = *((void *)a2 + 1);
  uint64_t v21 = v20 - v19;
  int v22 = *a2 - (v20 < v19) - v18;
  BOOL v13 = __CFADD__(v20, v19);
  uint64_t v23 = v20 + v19;
  int v24 = *a2 + v13 + v18;
  if (v7 >= a3)
  {
    uint64_t v23 = v21;
    int v24 = v22;
  }
  *((void *)a2 + 1) = v23;
  *a2 = v24;
  return result;
}

uint64_t APAdvertiserInfoGetTypeID()
{
  if (APAdvertiserInfoGetTypeID_initOnce != -1) {
    dispatch_once_f(&APAdvertiserInfoGetTypeID_initOnce, &APAdvertiserInfoGetTypeID_typeID, (dispatch_function_t)_APAdvertiserInfoClassRegister);
  }
  return APAdvertiserInfoGetTypeID_typeID;
}

uint64_t _APAdvertiserInfoClassRegister(uint64_t *a1)
{
  uint64_t result = _CFRuntimeRegisterClass();
  *a1 = result;
  return result;
}

CFStringRef APAdvertiserInfoCopyDescription(uint64_t a1)
{
  int v2 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  CFStringRef v3 = CFCopyDescription(*(CFTypeRef *)(a1 + 80));
  pthread_mutex_unlock(v2);
  return v3;
}

uint64_t _APAdvertiserInfoCompare(uint64_t a1, uint64_t a2)
{
  if (a1 | a2)
  {
    if (a1 && a2)
    {
      int v2 = *(const void **)(a1 + 80);
      CFStringRef v3 = *(const void **)(a2 + 80);
      return CFEqual(v2, v3);
    }
    else
    {
      APSLogErrorAt();
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 1;
  }
}

uint64_t APAdvertiserInfoFinalize(uint64_t a1)
{
  int v2 = *(const void **)(a1 + 80);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 80) = 0;
  }

  return pthread_mutex_destroy((pthread_mutex_t *)(a1 + 16));
}

uint64_t APAdvertiserInfoCreate(uint64_t a1, void *a2)
{
  if (APAdvertiserInfoGetTypeID_initOnce != -1) {
    dispatch_once_f(&APAdvertiserInfoGetTypeID_initOnce, &APAdvertiserInfoGetTypeID_typeID, (dispatch_function_t)_APAdvertiserInfoClassRegister);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    uint64_t v4 = (const void *)Instance;
    *(_OWORD *)(Instance + 16) = 0u;
    uint64_t v5 = (pthread_mutex_t *)(Instance + 16);
    *(void *)(Instance + 80) = 0;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(void *)(Instance + 80) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    uint64_t v6 = pthread_mutex_init(v5, 0);
    if (v6)
    {
      APSLogErrorAt();
      CFRelease(v4);
    }
    else
    {
      *a2 = v4;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
  return v6;
}

uint64_t APAdvertiserInfoCreateWithData(const __CFAllocator *a1, const __CFData *a2, void *a3)
{
  CFDataRef v3 = a2;
  uint64_t v11 = 0;
  CFTypeRef cf = 0;
  if (!a2)
  {
    APSLogErrorAt();
LABEL_13:
    uint64_t v9 = 4294960591;
    goto LABEL_17;
  }
  if (!a3)
  {
    APSLogErrorAt();
    CFDataRef v3 = 0;
    goto LABEL_13;
  }
  uint64_t v6 = APAdvertiserInfoCreate((uint64_t)a1, &cf);
  if (v6)
  {
    uint64_t v9 = v6;
    APSLogErrorAt();
    CFDataRef v3 = 0;
  }
  else
  {
    CFDataRef v3 = (const __CFData *)CFPropertyListCreateWithData(a1, v3, 2uLL, (CFPropertyListFormat *)&v11, 0);
    if (v3)
    {
      if (v11 == 200)
      {
        uint64_t v7 = cf;
        uint64_t v8 = (const void *)*((void *)cf + 10);
        if (v8) {
          CFRelease(v8);
        }
        uint64_t v9 = 0;
        v7[10] = CFRetain(v3);
        *a3 = v7;
        CFTypeRef cf = 0;
LABEL_9:
        CFRelease(v3);
        return v9;
      }
      APSLogErrorAt();
      uint64_t v9 = 4294960579;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v9 = 4294960534;
    }
  }
LABEL_17:
  if (cf) {
    CFRelease(cf);
  }
  if (v3) {
    goto LABEL_9;
  }
  return v9;
}

const void *APAdvertiserInfoCopyProperty(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, int *a5)
{
  uint64_t v6 = a3;
  if (!a3)
  {
    APSLogErrorAt();
    int v10 = -6705;
    if (!a5) {
      return v6;
    }
    goto LABEL_6;
  }
  uint64_t v8 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  CFDictionaryRef Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), v6);
  uint64_t v6 = Value;
  if (Value)
  {
    CFRetain(Value);
    pthread_mutex_unlock(v8);
    int v10 = 0;
    if (!a5) {
      return v6;
    }
    goto LABEL_6;
  }
  pthread_mutex_unlock(v8);
  int v10 = -6727;
  if (a5) {
LABEL_6:
  }
    *a5 = v10;
  return v6;
}

uint64_t APAdvertiserInfoSetProperty(uint64_t a1, uint64_t a2, __CFString *a3, uint64_t a4, const void *a5)
{
  if (!a3 || !a5)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  uint64_t v8 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  if (CFEqual(a3, @"featuresEx"))
  {
    uint64_t v9 = _APAdvertiserInfoSetFeaturesEx(*(__CFDictionary **)(a1 + 80), a5);
  }
  else
  {
    if (!CFEqual(a3, @"features"))
    {
      if (CFEqual(a3, @"requiredSenderFeatures")) {
        uint64_t v14 = @"requiredSenderFeatures";
      }
      else {
        uint64_t v14 = a3;
      }
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 80), v14, a5);
      uint64_t v12 = 0;
      goto LABEL_9;
    }
    CFDictionaryRef v10 = *(const __CFDictionary **)(a1 + 80);
    uint64_t valuePtr = 0;
    CFTypeID v11 = CFGetTypeID(a5);
    if (v11 != CFNumberGetTypeID())
    {
      APSLogErrorAt();
      uint64_t v12 = 4294960591;
      goto LABEL_9;
    }
    CFNumberGetValue((CFNumberRef)a5, kCFNumberSInt64Type, &valuePtr);
    uint64_t v9 = _APAdvertiserInfoSetLegacyFeatures(v10);
  }
  uint64_t v12 = v9;
LABEL_9:
  pthread_mutex_unlock(v8);
  return v12;
}

uint64_t _APAdvertiserInfoSetFeaturesEx(__CFDictionary *a1, CFTypeRef cf)
{
  unsigned int v6 = 0;
  if (cf && (CFTypeID v4 = CFGetTypeID(cf), v4 == CFDataGetTypeID()))
  {
    CFDictionarySetValue(a1, @"featuresEx", cf);
    APSFeaturesGetLegacyFlags();
    CFDictionarySetInt64();
  }
  else
  {
    APSLogErrorAt();
    return -6705;
  }
  return v6;
}

uint64_t _APAdvertiserInfoSetLegacyFeatures(const __CFDictionary *a1)
{
  CFDictionarySetInt64();
  if (CFDictionaryGetValue(a1, @"featuresEx")) {
    uint64_t MutableCopy = APSFeaturesCreateMutableCopy();
  }
  else {
    uint64_t MutableCopy = APSFeaturesCreateMutable();
  }
  CFDataRef v3 = (const void *)MutableCopy;
  if (MutableCopy)
  {
    APSFeaturesSetLegacyFlags();
    CFDictionarySetValue(a1, @"featuresEx", v3);
    CFRelease(v3);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

uint64_t APAdvertiserInfoCreateData(uint64_t a1, CFDataRef *a2)
{
  CFTypeID v4 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  if (a2)
  {
    CFAllocatorRef v5 = CFGetAllocator((CFTypeRef)a1);
    CFDataRef Data = CFPropertyListCreateData(v5, *(CFPropertyListRef *)(a1 + 80), kCFPropertyListBinaryFormat_v1_0, 0, 0);
    if (Data)
    {
      uint64_t v7 = 0;
      *a2 = Data;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v7 = 4294960534;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v7 = 4294960591;
  }
  pthread_mutex_unlock(v4);
  return v7;
}

uint64_t APAdvertiserInfoCreateWithRAOPAndAirPlayDataAndDeviceName(uint64_t a1, const __CFData *a2, unint64_t a3, const __CFString *a4, CFMutableDictionaryRef **a5)
{
  CFTypeRef cf = 0;
  uint64_t v101 = 0;
  if (!a4)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (!((unint64_t)a2 | a3))
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960591;
    goto LABEL_287;
  }
  APAdvertiserInfoCreate(a1, &v101);
  uint64_t v9 = v101;
  if (!v101)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960568;
    goto LABEL_287;
  }
  _APAdvertiserInfoCopyAndRemoveMDNSLabelSuffix(a4, (__CFString **)&cf);
  if (cf) {
    CFTypeRef v10 = cf;
  }
  else {
    CFTypeRef v10 = a4;
  }
  CFDictionarySetValue(v9[10], @"deviceName", v10);
  if (!a2) {
    goto LABEL_73;
  }
  BOOL v104 = 0;
  value = 0;
  uint64_t v103 = 0;
  LODWORD(v102) = 0;
  uint64_t BitListValueFromTXTRecord = APAdvertiserInfoGetBitListValueFromTXTRecord(@"cn", a2, &v102);
  if (BitListValueFromTXTRecord)
  {
    uint64_t v13 = BitListValueFromTXTRecord;
    APSLogErrorAt();
    if (gLogCategory_APAdvertiserInfo > 40
      || gLogCategory_APAdvertiserInfo == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_70;
    }
LABEL_191:
    LogPrintF();
    goto LABEL_70;
  }
  CFDictionarySetInt64();
  uint64_t BooleanFromTXTRecord = APAdvertiserInfoGetBooleanFromTXTRecord(@"da", a2, &v104);
  if (BooleanFromTXTRecord != -6727)
  {
    uint64_t v13 = BooleanFromTXTRecord;
    if (BooleanFromTXTRecord) {
      goto LABEL_69;
    }
    uint64_t v14 = (const void **)MEMORY[0x263EFFB40];
    if (!v104) {
      uint64_t v14 = (const void **)MEMORY[0x263EFFB38];
    }
    CFDictionarySetValue(v9[10], @"rfc2617DigestAuthKey", *v14);
  }
  uint64_t v15 = APAdvertiserInfoGetBitListValueFromTXTRecord(@"et", a2, &v102);
  if (v15)
  {
    uint64_t v13 = v15;
    APSLogErrorAt();
    if (gLogCategory_APAdvertiserInfo > 40
      || gLogCategory_APAdvertiserInfo == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_70;
    }
    goto LABEL_191;
  }
  CFDictionarySetInt64();
  uint64_t Int64FromTXTRecord = APAdvertiserInfoGetInt64FromTXTRecord(@"ft", a2, &v103);
  if (Int64FromTXTRecord != -6727)
  {
    uint64_t v13 = Int64FromTXTRecord;
    if (Int64FromTXTRecord) {
      goto LABEL_69;
    }
    uint64_t v17 = _APAdvertiserInfoSetLegacyFeatures(v9[10]);
    if (v17)
    {
      uint64_t v13 = v17;
      goto LABEL_69;
    }
  }
  uint64_t v18 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"fv", a2, (CFStringRef *)&value);
  if (v18 != -6727)
  {
    uint64_t v13 = v18;
    if (v18) {
      goto LABEL_69;
    }
    uint64_t v19 = value;
    CFDictionarySetValue(v9[10], @"firmwareVersion", value);
    if (v19)
    {
      CFRelease(v19);
      value = 0;
    }
  }
  uint64_t v20 = APAdvertiserInfoGetInt64FromTXTRecord(@"sf", a2, &v103);
  if (v20 != -6727)
  {
    uint64_t v13 = v20;
    if (v20) {
      goto LABEL_69;
    }
    CFDictionarySetInt64();
  }
  uint64_t v21 = APAdvertiserInfoGetBitListValueFromTXTRecord(@"md", a2, &v102);
  if (v21 != -6727)
  {
    uint64_t v13 = v21;
    if (v21) {
      goto LABEL_69;
    }
    CFDictionarySetInt64();
  }
  uint64_t v22 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"am", a2, (CFStringRef *)&value);
  if (v22 != -6727)
  {
    uint64_t v13 = v22;
    if (v22) {
      goto LABEL_69;
    }
    uint64_t v23 = value;
    CFDictionarySetValue(v9[10], @"deviceModel", value);
    if (v23)
    {
      CFRelease(v23);
      value = 0;
    }
  }
  uint64_t v24 = APAdvertiserInfoGetBooleanFromTXTRecord(@"pw", a2, &v104);
  if (v24 != -6727)
  {
    uint64_t v13 = v24;
    if (v24) {
      goto LABEL_69;
    }
    long long v25 = (const void **)MEMORY[0x263EFFB40];
    if (!v104) {
      long long v25 = (const void **)MEMORY[0x263EFFB38];
    }
    CFDictionarySetValue(v9[10], @"password", *v25);
  }
  uint64_t v26 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"pk", a2, (CFStringRef *)&value);
  if (v26 != -6727)
  {
    uint64_t v13 = v26;
    if (v26) {
      goto LABEL_69;
    }
    uint64_t v27 = value;
    CFDictionarySetValue(v9[10], @"publicKey", value);
    if (v27)
    {
      CFRelease(v27);
      value = 0;
    }
  }
  uint64_t v28 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"tp", a2, (CFStringRef *)&value);
  if (v28)
  {
    uint64_t v13 = v28;
    APSLogErrorAt();
    if (gLogCategory_APAdvertiserInfo > 40
      || gLogCategory_APAdvertiserInfo == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_70;
    }
    goto LABEL_191;
  }
  uint64_t v29 = value;
  CFDictionarySetValue(v9[10], @"transportTypes", value);
  if (v29)
  {
    CFRelease(v29);
    value = 0;
  }
  uint64_t v30 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"vn", a2, (CFStringRef *)&value);
  if (!v30)
  {
    uint64_t v31 = value;
    CFDictionarySetValue(v9[10], @"airTunesProtocolVersion", value);
    if (v31)
    {
      CFRelease(v31);
      value = 0;
    }
    uint64_t v32 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"vs", a2, (CFStringRef *)&value);
    if (v32 != -6727)
    {
      uint64_t v13 = v32;
      if (v32) {
        goto LABEL_69;
      }
      uint64_t v33 = value;
      CFDictionarySetValue(v9[10], @"airPlayVersion", value);
      if (v33)
      {
        CFRelease(v33);
        value = 0;
      }
    }
    uint64_t v34 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"ov", a2, (CFStringRef *)&value);
    if (v34 == -6727)
    {
LABEL_55:
      uint64_t v36 = APAdvertiserInfoGetInt64FromTXTRecord(@"vv", a2, &v103);
      if (v36 == -6727)
      {
        uint64_t v13 = 0;
        goto LABEL_70;
      }
      uint64_t v13 = v36;
      if (!v36)
      {
        CFDictionarySetInt64();
        goto LABEL_70;
      }
      goto LABEL_69;
    }
    uint64_t v13 = v34;
    if (!v34)
    {
      int v35 = value;
      CFDictionarySetValue(v9[10], @"OSVersion", value);
      if (v35)
      {
        CFRelease(v35);
        value = 0;
      }
      goto LABEL_55;
    }
LABEL_69:
    APSLogErrorAt();
    goto LABEL_70;
  }
  uint64_t v13 = v30;
  APSLogErrorAt();
  if (gLogCategory_APAdvertiserInfo <= 40
    && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_191;
  }
LABEL_70:
  if (value) {
    CFRelease(value);
  }
  if (v13)
  {
    APSLogErrorAt();
LABEL_291:
    CFRelease(v9);
    goto LABEL_287;
  }
LABEL_73:
  if (!a3)
  {
LABEL_286:
    uint64_t v13 = 0;
    *a5 = v9;
    goto LABEL_287;
  }
  value = 0;
  BOOL v104 = 0;
  CFTypeRef v102 = 0;
  uint64_t v103 = 0;
  uint64_t v37 = APAdvertiserInfoGetInt64FromTXTRecord(@"act", (const void *)a3, &v103);
  if (v37 != -6727)
  {
    uint64_t v13 = v37;
    if (v37) {
      goto LABEL_281;
    }
    CFDictionarySetInt64();
  }
  uint64_t v38 = APAdvertiserInfoGetInt64FromTXTRecord(@"acl", (const void *)a3, &v103);
  if (v38 != -6727)
  {
    uint64_t v13 = v38;
    if (v38) {
      goto LABEL_281;
    }
    CFDictionarySetInt64();
  }
  uint64_t v39 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"btaddr", (CFDataRef)a3, (CFStringRef *)&value);
  if (v39 == -6727)
  {
    float v40 = value;
    if (!value) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
  uint64_t v13 = v39;
  if (v39) {
    goto LABEL_281;
  }
  float v40 = value;
  CFDictionarySetValue(v9[10], @"bluetoothAddress", value);
  if (v40)
  {
LABEL_87:
    CFRelease(v40);
    value = 0;
  }
LABEL_88:
  uint64_t v41 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"deviceid", (CFDataRef)a3, (CFStringRef *)&value);
  if (!v41)
  {
    uint64_t v42 = value;
    CFDictionarySetValue(v9[10], @"deviceID", value);
    if (v42)
    {
      CFRelease(v42);
      value = 0;
    }
    uint64_t v43 = APAdvertiserInfoCreateAPSFeaturesFromTXTRecordEx((CFDataRef)a3, @"fex", @"features", &v102);
    if (v43 != -6727)
    {
      uint64_t v13 = v43;
      if (v43) {
        goto LABEL_281;
      }
      CFTypeRef v44 = v102;
      _APAdvertiserInfoSetFeaturesEx(v9[10], v102);
      if (v44)
      {
        CFRelease(v44);
        CFTypeRef v102 = 0;
      }
    }
    uint64_t v45 = APAdvertiserInfoGetInt64FromTXTRecord(@"rsf", (const void *)a3, &v103);
    if (v45 != -6727)
    {
      uint64_t v13 = v45;
      if (v45) {
        goto LABEL_281;
      }
      CFDictionarySetInt64();
    }
    uint64_t v46 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"fv", (CFDataRef)a3, (CFStringRef *)&value);
    if (v46 != -6727)
    {
      uint64_t v13 = v46;
      if (v46) {
        goto LABEL_281;
      }
      CFMutableDictionaryRef v47 = value;
      CFDictionarySetValue(v9[10], @"firmwareVersion", value);
      if (v47)
      {
        CFRelease(v47);
        value = 0;
      }
    }
    uint64_t v48 = APAdvertiserInfoGetInt64FromTXTRecord(@"flags", (const void *)a3, &v103);
    if (v48 != -6727)
    {
      uint64_t v13 = v48;
      if (v48) {
        goto LABEL_281;
      }
      CFDictionarySetInt64();
    }
    uint64_t v49 = APAdvertiserInfoGetBooleanFromTXTRecord(@"gcgl", (const void *)a3, &v104);
    if (v49 != -6727)
    {
      uint64_t v13 = v49;
      if (v49) {
        goto LABEL_281;
      }
      uint64_t v50 = (const void **)MEMORY[0x263EFFB40];
      if (!v104) {
        uint64_t v50 = (const void **)MEMORY[0x263EFFB38];
      }
      CFDictionarySetValue(v9[10], @"groupContainsDiscoverableLeader", *v50);
    }
    uint64_t v51 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"gid", (CFDataRef)a3, (CFStringRef *)&value);
    if (v51 != -6727)
    {
      uint64_t v13 = v51;
      if (v51) {
        goto LABEL_281;
      }
      long long v52 = value;
      CFDictionarySetValue(v9[10], @"groupID", value);
      if (v52)
      {
        CFRelease(v52);
        value = 0;
      }
    }
    uint64_t v53 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"gpn", (CFDataRef)a3, (CFStringRef *)&value);
    if (v53 != -6727)
    {
      uint64_t v13 = v53;
      if (v53) {
        goto LABEL_281;
      }
      uint64_t v54 = value;
      CFDictionarySetValue(v9[10], @"groupPublicName", value);
      if (v54)
      {
        CFRelease(v54);
        value = 0;
      }
    }
    uint64_t v55 = APAdvertiserInfoGetBooleanFromTXTRecord(@"igl", (const void *)a3, &v104);
    if (v55 != -6727)
    {
      uint64_t v13 = v55;
      if (v55) {
        goto LABEL_281;
      }
      uint64_t v56 = (const void **)MEMORY[0x263EFFB40];
      if (!v104) {
        uint64_t v56 = (const void **)MEMORY[0x263EFFB38];
      }
      CFDictionarySetValue(v9[10], @"isGroupLeader", *v56);
    }
    uint64_t v57 = APAdvertiserInfoGetInt64FromTXTRecord(@"psgsz", (const void *)a3, &v103);
    if (v57 != -6727)
    {
      uint64_t v13 = v57;
      if (v57) {
        goto LABEL_281;
      }
      CFDictionarySetInt64();
    }
    uint64_t v58 = APAdvertiserInfoGetInt64FromTXTRecord(@"psgtp", (const void *)a3, &v103);
    if (v58 != -6727)
    {
      uint64_t v13 = v58;
      if (v58) {
        goto LABEL_281;
      }
      CFDictionarySetInt64();
    }
    uint64_t v59 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"psgid", (CFDataRef)a3, (CFStringRef *)&value);
    if (v59 != -6727)
    {
      uint64_t v13 = v59;
      if (v59) {
        goto LABEL_281;
      }
      CFDictionaryRef v60 = value;
      CFDictionarySetValue(v9[10], @"persistentGroupUUID", value);
      if (v60)
      {
        CFRelease(v60);
        value = 0;
      }
    }
    uint64_t v61 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"pgm", (CFDataRef)a3, (CFStringRef *)&value);
    if (v61 != -6727)
    {
      uint64_t v13 = v61;
      if (v61) {
        goto LABEL_281;
      }
      CFMutableDictionaryRef v62 = value;
      CFDictionarySetValue(v9[10], @"persistentGroupModel", value);
      if (v62)
      {
        CFRelease(v62);
        value = 0;
      }
    }
    uint64_t v63 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"pgmid", (CFDataRef)a3, (CFStringRef *)&value);
    if (v63 != -6727)
    {
      uint64_t v13 = v63;
      if (v63) {
        goto LABEL_281;
      }
      uint64_t v64 = value;
      CFDictionarySetValue(v9[10], @"persistentGroupMemberID", value);
      if (v64)
      {
        CFRelease(v64);
        value = 0;
      }
    }
    uint64_t v65 = APAdvertiserInfoGetBooleanFromTXTRecord(@"pgcgl", (const void *)a3, &v104);
    if (v65 != -6727)
    {
      uint64_t v13 = v65;
      if (v65) {
        goto LABEL_281;
      }
      int v66 = (const void **)MEMORY[0x263EFFB40];
      if (!v104) {
        int v66 = (const void **)MEMORY[0x263EFFB38];
      }
      CFDictionarySetValue(v9[10], @"parentGroupContainsDiscoverableLeader", *v66);
    }
    uint64_t v67 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"pgid", (CFDataRef)a3, (CFStringRef *)&value);
    if (v67 != -6727)
    {
      uint64_t v13 = v67;
      if (v67) {
        goto LABEL_281;
      }
      CFTypeRef v68 = value;
      CFDictionarySetValue(v9[10], @"parentGroupID", value);
      if (v68)
      {
        CFRelease(v68);
        value = 0;
      }
    }
    uint64_t v69 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"tsid", (CFDataRef)a3, (CFStringRef *)&value);
    if (v69 != -6727)
    {
      uint64_t v13 = v69;
      if (v69) {
        goto LABEL_281;
      }
      uint64_t v70 = value;
      CFDictionarySetValue(v9[10], @"tightSyncUUID", value);
      if (v70)
      {
        CFRelease(v70);
        value = 0;
      }
    }
    uint64_t v71 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"tsm", (CFDataRef)a3, (CFStringRef *)&value);
    if (v71 != -6727)
    {
      uint64_t v13 = v71;
      if (v71) {
        goto LABEL_281;
      }
      long long v72 = value;
      CFDictionarySetValue(v9[10], @"tightSyncGroupModel", value);
      if (v72)
      {
        CFRelease(v72);
        value = 0;
      }
    }
    uint64_t v73 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"model", (CFDataRef)a3, (CFStringRef *)&value);
    if (v73 != -6727)
    {
      uint64_t v13 = v73;
      if (v73) {
        goto LABEL_281;
      }
      long long v74 = value;
      CFDictionarySetValue(v9[10], @"deviceModel", value);
      if (v74)
      {
        CFRelease(v74);
        value = 0;
      }
    }
    uint64_t v75 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"c", (CFDataRef)a3, (CFStringRef *)&value);
    if (v75 != -6727)
    {
      uint64_t v13 = v75;
      if (v75) {
        goto LABEL_281;
      }
      uint64_t v76 = value;
      if (APSIsValidDeviceEnclosureColorString())
      {
        CFDictionarySetValue(v9[10], @"deviceEnclosureColor", v76);
      }
      else if (gLogCategory_APAdvertiserInfo <= 60 {
             && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
      }
      {
        LogPrintF();
      }
      if (v76)
      {
        CFRelease(v76);
        value = 0;
      }
    }
    uint64_t v77 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"manufacturer", (CFDataRef)a3, (CFStringRef *)&value);
    if (v77 != -6727)
    {
      uint64_t v13 = v77;
      if (v77) {
        goto LABEL_281;
      }
      long long v78 = value;
      CFDictionarySetValue(v9[10], @"manufacturer", value);
      if (v78)
      {
        CFRelease(v78);
        value = 0;
      }
    }
    uint64_t v79 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"company", (CFDataRef)a3, (CFStringRef *)&value);
    if (v79 != -6727)
    {
      uint64_t v13 = v79;
      if (v79) {
        goto LABEL_281;
      }
      uint64_t v80 = value;
      CFDictionarySetValue(v9[10], @"company", value);
      if (v80)
      {
        CFRelease(v80);
        value = 0;
      }
    }
    uint64_t v81 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"serialNumber", (CFDataRef)a3, (CFStringRef *)&value);
    if (v81 != -6727)
    {
      uint64_t v13 = v81;
      if (v81) {
        goto LABEL_281;
      }
      long long v82 = value;
      CFDictionarySetValue(v9[10], @"serialNumber", value);
      if (v82)
      {
        CFRelease(v82);
        value = 0;
      }
    }
    uint64_t v83 = APAdvertiserInfoGetInt64FromTXTRecord(@"at", (const void *)a3, &v103);
    if (v83 != -6727)
    {
      uint64_t v13 = v83;
      if (v83) {
        goto LABEL_281;
      }
      CFDictionarySetInt64();
    }
    uint64_t v84 = APAdvertiserInfoGetBooleanFromTXTRecord(@"pw", (const void *)a3, &v104);
    if (v84 != -6727)
    {
      uint64_t v13 = v84;
      if (v84) {
        goto LABEL_281;
      }
      uint64_t v85 = (const void **)MEMORY[0x263EFFB40];
      if (!v104) {
        uint64_t v85 = (const void **)MEMORY[0x263EFFB38];
      }
      CFDictionarySetValue(v9[10], @"password", *v85);
    }
    uint64_t v86 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"protovers", (CFDataRef)a3, (CFStringRef *)&value);
    if (v86 != -6727)
    {
      uint64_t v13 = v86;
      if (v86) {
        goto LABEL_281;
      }
      long long v87 = value;
      CFDictionarySetValue(v9[10], @"protocolVersion", value);
      if (v87)
      {
        CFRelease(v87);
        value = 0;
      }
    }
    uint64_t v88 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"pi", (CFDataRef)a3, (CFStringRef *)&value);
    if (v88 != -6727)
    {
      uint64_t v13 = v88;
      if (v88) {
        goto LABEL_281;
      }
      uint64_t v89 = value;
      CFDictionarySetValue(v9[10], @"publicCUAirPlayPairingIdentity", value);
      if (v89)
      {
        CFRelease(v89);
        value = 0;
      }
    }
    uint64_t v90 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"psi", (CFDataRef)a3, (CFStringRef *)&value);
    if (v90 != -6727)
    {
      uint64_t v13 = v90;
      if (v90) {
        goto LABEL_281;
      }
      uint64_t v91 = value;
      CFDictionarySetValue(v9[10], @"publicCUSystemPairingIdentity", value);
      if (v91)
      {
        CFRelease(v91);
        value = 0;
      }
    }
    uint64_t v92 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"pk", (CFDataRef)a3, (CFStringRef *)&value);
    if (v92 != -6727)
    {
      uint64_t v13 = v92;
      if (v92) {
        goto LABEL_281;
      }
      uint64_t v93 = value;
      CFDictionarySetValue(v9[10], @"publicKey", value);
      if (v93)
      {
        CFRelease(v93);
        value = 0;
      }
    }
    uint64_t v94 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"srcvers", (CFDataRef)a3, (CFStringRef *)&value);
    if (v94 != -6727)
    {
      uint64_t v13 = v94;
      if (v94) {
        goto LABEL_281;
      }
      v95 = value;
      CFDictionarySetValue(v9[10], @"airPlayVersion", value);
      if (v95)
      {
        CFRelease(v95);
        value = 0;
      }
    }
    uint64_t v96 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"osvers", (CFDataRef)a3, (CFStringRef *)&value);
    if (v96 == -6727)
    {
LABEL_262:
      uint64_t v98 = APAdvertiserInfoGetInt64FromTXTRecord(@"vv", (const void *)a3, &v103);
      if (v98 == -6727)
      {
        uint64_t v13 = 0;
        goto LABEL_282;
      }
      uint64_t v13 = v98;
      if (!v98)
      {
        CFDictionarySetInt64();
        goto LABEL_282;
      }
      goto LABEL_281;
    }
    uint64_t v13 = v96;
    if (!v96)
    {
      v97 = value;
      CFDictionarySetValue(v9[10], @"OSVersion", value);
      if (v97)
      {
        CFRelease(v97);
        value = 0;
      }
      goto LABEL_262;
    }
LABEL_281:
    APSLogErrorAt();
    goto LABEL_282;
  }
  uint64_t v13 = v41;
  APSLogErrorAt();
  if (gLogCategory_APAdvertiserInfo <= 40
    && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_282:
  if (value) {
    CFRelease(value);
  }
  if (!v13)
  {
    uint64_t v9 = v101;
    goto LABEL_286;
  }
  APSLogErrorAt();
  uint64_t v9 = v101;
  if (v101) {
    goto LABEL_291;
  }
LABEL_287:
  if (cf) {
    CFRelease(cf);
  }
  return v13;
}

void _APAdvertiserInfoCopyAndRemoveMDNSLabelSuffix(const __CFString *a1, __CFString **a2)
{
  if (CFStringHasSuffix(a1, @"")))
  {
    result.location = 0;
    result.length = 0;
    CFIndex Length = CFStringGetLength(a1);
    v18.location = 0;
    v18.length = Length;
    if (CFStringFindWithOptions(a1, @" ("), v18, 4uLL, &result)
    {
      uint64_t v5 = Length - result.location;
      result.length = Length - result.location;
      if (result.location)
      {
        if (v5 >= 4)
        {
          v19.location = result.location + 2;
          v19.length = v5 - 3;
          CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFStringRef v7 = CFStringCreateWithSubstring((CFAllocatorRef)*MEMORY[0x263EFFB08], a1, v19);
          v16.location = 0;
          v16.length = CFStringGetLength(v7);
          uint64_t v8 = CFNumberFormatterCreate(v6, 0, kCFNumberFormatterNoStyle);
          if (v8)
          {
            CFNumberRef v9 = CFNumberFormatterCreateNumberFromString(v6, v8, v7, &v16, 1uLL);
            if (v9)
            {
              CFIndex v10 = v16.length;
              if (v10 == CFStringGetLength(v7))
              {
                CFStringRef v11 = CFStringCreateWithSubstring(v6, a1, result);
                if (v11)
                {
                  CFStringRef v12 = v11;
                  CFIndex v13 = CFStringGetLength(a1);
                  uint64_t MutableCopy = CFStringCreateMutableCopy(v6, v13, a1);
                  if (MutableCopy)
                  {
                    uint64_t v15 = MutableCopy;
                    CFStringTrim(MutableCopy, v12);
                    *a2 = v15;
                  }
                  else
                  {
                    APSLogErrorAt();
                  }
                  CFRelease(v12);
                }
                else
                {
                  APSLogErrorAt();
                }
              }
            }
          }
          else
          {
            APSLogErrorAt();
            CFNumberRef v9 = 0;
          }
          if (v7) {
            CFRelease(v7);
          }
          if (v8) {
            CFRelease(v8);
          }
          if (v9) {
            CFRelease(v9);
          }
        }
      }
    }
  }
}

uint64_t APAdvertiserInfoGetBitListValueFromTXTRecord(const __CFString *a1, CFDataRef theData, _DWORD *a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (a1)
  {
    CFDataRef v4 = theData;
    int v10 = 0;
    uint8_t valueLen = 0;
    BytePtr = CFDataGetBytePtr(theData);
    LOWORD(v4) = CFDataGetLength(v4);
    buffer[0] = 0;
    CFStringGetCString(a1, buffer, 256, 0x8000100u);
    if (TXTRecordGetValuePtr((uint16_t)v4, BytePtr, buffer, &valueLen))
    {
      uint64_t v7 = BitListString_Parse();
      if (v7) {
        APSLogErrorAt();
      }
      else {
        *a3 = v10;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return v7;
}

uint64_t APAdvertiserInfoGetBooleanFromTXTRecord(const __CFString *a1, const void *a2, BOOL *a3)
{
  uint64_t v7 = 0;
  uint64_t Int64FromTXTRecord = APAdvertiserInfoGetInt64FromTXTRecord(a1, a2, &v7);
  uint64_t v5 = Int64FromTXTRecord;
  if (Int64FromTXTRecord != -6727)
  {
    if (Int64FromTXTRecord) {
      APSLogErrorAt();
    }
    else {
      *a3 = v7 != 0;
    }
  }
  return v5;
}

uint64_t APAdvertiserInfoGetInt64FromTXTRecord(const __CFString *a1, const void *a2, uint64_t *a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (a1)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 1, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v7 = Mutable;
      CFDictionarySetValue(Mutable, @"txt", a2);
      buffer[0] = 0;
      CFStringGetCString(a1, buffer, 256, 0x8000100u);
      *a3 = BonjourDevice_GetInt64();
      CFRelease(v7);
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294960568;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
}

uint64_t APAdvertiserInfoCopyCFStringFromTXTRecord(const __CFString *a1, CFDataRef theData, CFStringRef *a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (a1)
  {
    CFDataRef v4 = theData;
    uint8_t valueLen = 0;
    BytePtr = CFDataGetBytePtr(theData);
    LOWORD(v4) = CFDataGetLength(v4);
    buffer[0] = 0;
    CFStringGetCString(a1, buffer, 256, 0x8000100u);
    ValuePtr = (const char *)TXTRecordGetValuePtr((uint16_t)v4, BytePtr, buffer, &valueLen);
    if (ValuePtr)
    {
      uint64_t v8 = (const UInt8 *)ValuePtr;
      uint8_t valueLen = strnlen(ValuePtr, valueLen);
      CFStringRef v9 = CFStringCreateWithBytes(0, v8, valueLen, 0x8000100u, 0);
      if (v9)
      {
        CFStringRef v10 = v9;
        uint64_t result = 0;
        *a3 = v10;
      }
      else
      {
        APSLogErrorAt();
        return 4294960554;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APAdvertiserInfoCreateAPSFeaturesFromTXTRecordEx(CFDataRef theData, const __CFString *a2, const __CFString *a3, void *a4)
{
  CFTypeRef cf = 0;
  uint64_t v11 = 0;
  unsigned int v7 = APAdvertiserInfoCopyCFStringFromTXTRecord(a2, theData, (CFStringRef *)&cf);
  unsigned int Int64FromTXTRecord = v7;
  if (v7 == -6727)
  {
    if (!a3) {
      goto LABEL_11;
    }
    unsigned int Int64FromTXTRecord = APAdvertiserInfoGetInt64FromTXTRecord(a3, theData, &v11);
    if (!Int64FromTXTRecord)
    {
      uint64_t v8 = (const void *)APSFeaturesCreateFromLegacyFlags();
      if (!v8)
      {
        APSLogErrorAt();
        unsigned int Int64FromTXTRecord = -6728;
        goto LABEL_11;
      }
LABEL_9:
      *a4 = v8;
      goto LABEL_11;
    }
LABEL_10:
    APSLogErrorAt();
    goto LABEL_11;
  }
  if (v7) {
    goto LABEL_10;
  }
  uint64_t v8 = (const void *)APSFeaturesCreateFromStringRepresentation();
  if (!Int64FromTXTRecord) {
    goto LABEL_9;
  }
  APSLogErrorAt();
  if (v8) {
    CFRelease(v8);
  }
LABEL_11:
  if (cf) {
    CFRelease(cf);
  }
  return Int64FromTXTRecord;
}

uint64_t APAdvertiserInfoCreateWithSidePlayDataAndDeviceName(uint64_t a1, const __CFData *a2, const __CFString *a3, CFMutableDictionaryRef **a4)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  if (!a3 || !a2)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  CFStringRef v6 = a3;
  APAdvertiserInfoCreate(a1, &v24);
  unsigned int v7 = v24;
  if (!v24)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  _APAdvertiserInfoCopyAndRemoveMDNSLabelSuffix(v6, &v23);
  uint64_t v8 = v23;
  if (v23) {
    CFStringRef v6 = v23;
  }
  CFDictionarySetValue(v7[10], @"deviceName", v6);
  CFTypeRef cf = 0;
  value = 0;
  uint64_t v9 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"id", a2, (CFStringRef *)&value);
  if (v9)
  {
    uint64_t v12 = v9;
    APSLogErrorAt();
    if (gLogCategory_APAdvertiserInfo <= 40
      && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_37:
    uint64_t v21 = value;
    if (!value) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  CFStringRef v10 = value;
  CFDictionarySetValue(v7[10], @"deviceID", value);
  if (v10)
  {
    CFRelease(v10);
    value = 0;
  }
  uint64_t v11 = APAdvertiserInfoCreateAPSFeaturesFromTXTRecordEx(a2, @"f", 0, &cf);
  if (v11 == -6727)
  {
    CFIndex v13 = (const void *)APSFeaturesCreateFromLegacyFlags();
  }
  else
  {
    uint64_t v12 = v11;
    if (v11) {
      goto LABEL_36;
    }
    CFIndex v13 = cf;
  }
  _APAdvertiserInfoSetFeaturesEx(v7[10], v13);
  if (v13) {
    CFRelease(v13);
  }
  uint64_t v14 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"mfg", a2, (CFStringRef *)&value);
  if (v14 != -6727)
  {
    uint64_t v12 = v14;
    if (v14) {
      goto LABEL_36;
    }
    uint64_t v15 = value;
    CFDictionarySetValue(v7[10], @"manufacturer", value);
    if (v15)
    {
      CFRelease(v15);
      value = 0;
    }
  }
  uint64_t v16 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"mdl", a2, (CFStringRef *)&value);
  if (v16 != -6727)
  {
    uint64_t v12 = v16;
    if (v16) {
      goto LABEL_36;
    }
    uint64_t v17 = value;
    CFDictionarySetValue(v7[10], @"deviceModel", value);
    if (v17)
    {
      CFRelease(v17);
      value = 0;
    }
  }
  uint64_t v18 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"sn", a2, (CFStringRef *)&value);
  if (v18 == -6727) {
    goto LABEL_27;
  }
  uint64_t v12 = v18;
  if (v18)
  {
LABEL_36:
    APSLogErrorAt();
    goto LABEL_37;
  }
  CFRange v19 = value;
  CFDictionarySetValue(v7[10], @"serialNumber", value);
  if (v19)
  {
    CFRelease(v19);
    value = 0;
  }
LABEL_27:
  uint64_t v20 = APAdvertiserInfoCopyCFStringFromTXTRecord(@"v", a2, (CFStringRef *)&value);
  if (v20 == -6727)
  {
    uint64_t v12 = 0;
    goto LABEL_37;
  }
  uint64_t v12 = v20;
  if (v20) {
    goto LABEL_36;
  }
  uint64_t v21 = value;
  CFDictionarySetValue(v7[10], @"airPlayVersion", value);
  if (!v21) {
    goto LABEL_40;
  }
  uint64_t v12 = 0;
LABEL_38:
  CFRelease(v21);
LABEL_39:
  if (v12)
  {
    APSLogErrorAt();
    CFRelease(v7);
    if (!v8) {
      return v12;
    }
    goto LABEL_45;
  }
LABEL_40:
  if (gLogCategory_APAdvertiserInfo <= 30
    && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v12 = 0;
  *a4 = v7;
  if (v8) {
LABEL_45:
  }
    CFRelease(v8);
  return v12;
}

uint64_t APAdvertiserInfoCopy(uint64_t a1, uint64_t a2, void *a3)
{
  CFTypeRef cf = 0;
  if (a2 && *(void *)(a2 + 80) && a3)
  {
    uint64_t v5 = APAdvertiserInfoCreate(a1, &cf);
    if (v5)
    {
      uint64_t v7 = v5;
      APSLogErrorAt();
      if (cf) {
        CFRelease(cf);
      }
    }
    else
    {
      CFStringRef v6 = cf;
      CFRelease(*((CFTypeRef *)cf + 10));
      pthread_mutex_lock((pthread_mutex_t *)(a2 + 16));
      v6[10] = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, *(CFDictionaryRef *)(a2 + 80));
      pthread_mutex_unlock((pthread_mutex_t *)(a2 + 16));
      uint64_t v7 = 0;
      *a3 = v6;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return v7;
}

uint64_t APAdvertiserInfoCopyAirPlayData(uint64_t a1, CFDataRef *a2)
{
  return APAdvertiserInfoCopyAirPlayDataWithNANServiceType(a1, 0, a2);
}

uint64_t APAdvertiserInfoCopyAirPlayDataWithNANServiceType(uint64_t a1, unsigned int a2, CFDataRef *a3)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  TXTRecordRef txtRecord = 0uLL;
  CFStringRef v6 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  TXTRecordCreate(&txtRecord, 0x100u, buffer);
  if (!a3) {
    goto LABEL_104;
  }
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  if (Int64Ranged)
  {
    uint8_t v8 = snprintf(__str, 0x100uLL, "%u", Int64Ranged);
    unsigned int v78 = TXTRecordSetValue(&txtRecord, "act", v8, __str);
    if (v78) {
      goto LABEL_134;
    }
  }
  int v9 = CFDictionaryGetInt64Ranged();
  uint8_t v10 = snprintf(__str, 0x100uLL, "%u", v9);
  unsigned int v78 = TXTRecordSetValue(&txtRecord, "acl", v10, __str);
  if (v78) {
    goto LABEL_134;
  }
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"bluetoothAddress");
  CFStringRef cf = Value;
  if (Value)
  {
    if (CFStringGetLength(Value))
    {
      unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cf, &txtRecord, "btaddr");
      if (v78) {
        goto LABEL_134;
      }
    }
  }
  CFStringRef v12 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceID");
  unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(v12, &txtRecord, "deviceid");
  if (!v78)
  {
    CFStringGetTypeID();
    TypedCFStringRef Value = (const __CFString *)CFDictionaryGetTypedValue();
    CFStringRef cfa = TypedValue;
    if (TypedValue)
    {
      if (CFStringGetLength(TypedValue))
      {
        unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfa, &txtRecord, "c");
        if (v78) {
          goto LABEL_134;
        }
      }
    }
    if (CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"featuresEx"))
    {
      unsigned int v78 = APSFeaturesCopyStringRepresentation();
      if (v78) {
        goto LABEL_134;
      }
      unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfa, &txtRecord, "fex");
      CFRelease(cfa);
      if (v78) {
        goto LABEL_134;
      }
      uint64_t LegacyFlags = APSFeaturesGetLegacyFlags();
      uint8_t TXTRecordNumberCString = _APAdvertiserInfoGetTXTRecordNumberCString(LegacyFlags, __str);
      unsigned int v78 = TXTRecordSetValue(&txtRecord, "features", TXTRecordNumberCString, __str);
      if (v78) {
        goto LABEL_134;
      }
    }
    uint64_t Int64 = CFDictionaryGetInt64();
    if (Int64)
    {
      uint8_t v17 = _APAdvertiserInfoGetTXTRecordNumberCString(Int64, __str);
      unsigned int v78 = TXTRecordSetValue(&txtRecord, "rsf", v17, __str);
      if (v78) {
        goto LABEL_134;
      }
    }
    CFStringRef v18 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"firmwareVersion");
    CFStringRef cfb = v18;
    if (v18)
    {
      if (CFStringGetLength(v18))
      {
        unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfb, &txtRecord, "fv");
        if (v78) {
          goto LABEL_134;
        }
      }
    }
    int v19 = CFDictionaryGetInt64Ranged();
    if (v19)
    {
      uint8_t v20 = snprintf(__str, 0x100uLL, "0x%x", v19);
      unsigned int v78 = TXTRecordSetValue(&txtRecord, "flags", v20, __str);
      if (v78) {
        goto LABEL_134;
      }
    }
    CFStringRef v21 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"groupID");
    CFStringRef cfc = v21;
    if (v21)
    {
      if (CFStringGetLength(v21))
      {
        unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfc, &txtRecord, "gid");
        if (v78) {
          goto LABEL_134;
        }
        uint64_t v22 = CFDictionaryGetInt64();
        uint8_t v23 = snprintf(__str, 0x100uLL, "%u", v22 != 0);
        unsigned int v78 = TXTRecordSetValue(&txtRecord, "igl", v23, __str);
        if (v78) {
          goto LABEL_134;
        }
        uint64_t v24 = CFDictionaryGetInt64();
        uint8_t v25 = snprintf(__str, 0x100uLL, "%u", v24 != 0);
        unsigned int v78 = TXTRecordSetValue(&txtRecord, "gcgl", v25, __str);
        if (v78) {
          goto LABEL_134;
        }
        CFStringRef v26 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"groupPublicName");
        CFStringRef cfd = v26;
        if (v26)
        {
          if (CFStringGetLength(v26))
          {
            unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfd, &txtRecord, "gpn");
            if (v78) {
              goto LABEL_134;
            }
          }
        }
      }
    }
    if (a2 < 2)
    {
LABEL_34:
      int v28 = CFDictionaryGetInt64Ranged();
      uint8_t v29 = snprintf(__str, 0x100uLL, "%u", v28);
      unsigned int v78 = TXTRecordSetValue(&txtRecord, "psgsz", v29, __str);
      if (!v78)
      {
        int v30 = CFDictionaryGetInt64Ranged();
        uint8_t v31 = snprintf(__str, 0x100uLL, "%u", v30);
        unsigned int v78 = TXTRecordSetValue(&txtRecord, "psgtp", v31, __str);
        if (!v78)
        {
          CFStringRef v32 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"persistentGroupUUID");
          CFStringRef cfe = v32;
          if (!v32
            || !CFStringGetLength(v32)
            || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfe, &txtRecord, "psgid")) == 0)
          {
            CFStringRef v33 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"persistentGroupModel");
            CFStringRef cff = v33;
            if (!v33
              || !CFStringGetLength(v33)
              || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cff, &txtRecord, "pgm")) == 0)
            {
              CFStringRef v34 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"persistentGroupMemberID");
              CFStringRef cfg = v34;
              if (!v34
                || !CFStringGetLength(v34)
                || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfg, &txtRecord, "pgmid")) == 0)
              {
                CFStringRef v35 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"parentGroupID");
                CFStringRef cfh = v35;
                if (!v35
                  || !CFStringGetLength(v35)
                  || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfh, &txtRecord, "pgid")) == 0
                  && (uint64_t v36 = CFDictionaryGetInt64(),
                      uint8_t v37 = snprintf(__str, 0x100uLL, "%u", v36 != 0),
                      (unsigned int v78 = TXTRecordSetValue(&txtRecord, "pgcgl", v37, __str)) == 0))
                {
                  CFStringRef v38 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"tightSyncUUID");
                  cfuint64_t i = v38;
                  if (!v38
                    || !CFStringGetLength(v38)
                    || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfi, &txtRecord, "tsid")) == 0)
                  {
                    CFStringRef v39 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"tightSyncGroupModel");
                    cfuint64_t j = v39;
                    if (!v39
                      || !CFStringGetLength(v39)
                      || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfj, &txtRecord, "tsm")) == 0)
                    {
                      CFStringRef v40 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceModel");
                      CFStringRef cfk = v40;
                      if (!v40
                        || !CFStringGetLength(v40)
                        || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfk, &txtRecord, "model")) == 0)
                      {
                        CFStringRef v41 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"manufacturer");
                        CFStringRef cfl = v41;
                        if (!v41
                          || !CFStringGetLength(v41)
                          || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfl, &txtRecord, "manufacturer")) == 0)
                        {
                          CFStringRef v42 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"serialNumber");
                          CFStringRef cfm = v42;
                          if (!v42
                            || !CFStringGetLength(v42)
                            || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfm, &txtRecord, "serialNumber")) == 0)
                          {
                            int v43 = CFDictionaryGetInt64Ranged();
                            uint8_t v44 = snprintf(__str, 0x100uLL, "%u", v43);
                            unsigned int v78 = TXTRecordSetValue(&txtRecord, "at", v44, __str);
                            if (!v78)
                            {
                              unsigned int v78 = 0;
                              if (!CFDictionaryGetInt64() || (unsigned int v78 = TXTRecordSetValue(&txtRecord, "pw", 1u, "1")) == 0)
                              {
                                CFStringRef v45 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"protocolVersion");
                                CFStringRef cfn = v45;
                                if (!v45
                                  || !CFStringGetLength(v45)
                                  || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfn, &txtRecord, "protovers")) == 0)
                                {
                                  CFStringRef v46 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"publicCUAirPlayPairingIdentity");
                                  CFStringRef cfo = v46;
                                  if (!v46
                                    || !CFStringGetLength(v46)
                                    || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfo, &txtRecord, "pi")) == 0)
                                  {
                                    CFStringRef v47 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"publicCUSystemPairingIdentity");
                                    CFStringRef cfp = v47;
                                    if (!v47
                                      || !CFStringGetLength(v47)
                                      || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfp, &txtRecord, "psi")) == 0)
                                    {
                                      CFStringRef v48 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"publicKey");
                                      CFStringRef cfq = v48;
                                      if (!v48
                                        || !CFStringGetLength(v48)
                                        || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfq, &txtRecord, "pk")) == 0)
                                      {
                                        CFStringRef v49 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"airPlayVersion");
                                        CFStringRef cfr = v49;
                                        if (!v49
                                          || !CFStringGetLength(v49)
                                          || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfr, &txtRecord, "srcvers")) == 0)
                                        {
                                          CFStringRef v50 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"OSVersion");
                                          CFStringRef cfs = v50;
                                          if (!v50
                                            || !CFStringGetLength(v50)
                                            || (unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(cfs, &txtRecord, "osvers")) == 0)
                                          {
                                            int v51 = CFDictionaryGetInt64Ranged();
                                            if (!v51
                                              || (uint8_t v52 = snprintf(__str, 0x100uLL, "%u", v51),
                                                  (unsigned int v78 = TXTRecordSetValue(&txtRecord, "vv", v52, __str)) == 0))
                                            {
                                              BytesPtr = (const UInt8 *)TXTRecordGetBytesPtr(&txtRecord);
                                              unsigned int Length = TXTRecordGetLength(&txtRecord);
                                              CFDataRef v55 = CFDataCreate(0, BytesPtr, Length);
                                              if (v55)
                                              {
                                                *a3 = v55;
                                                goto LABEL_89;
                                              }
                                              APSLogErrorAt();
                                              int v57 = -6728;
LABEL_105:
                                              unsigned int v78 = v57;
                                              goto LABEL_89;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_134:
      APSLogErrorAt();
      goto LABEL_89;
    }
    CFStringRef TXTString = (const __CFString *)APSNANServiceTypeGetTXTString();
    if (TXTString)
    {
      unsigned int v78 = _APAdvertiserInfoAddStringToTXTRecord(TXTString, &txtRecord, "nanST");
      if (v78) {
        goto LABEL_134;
      }
      goto LABEL_34;
    }
LABEL_104:
    APSLogErrorAt();
    int v57 = -6705;
    goto LABEL_105;
  }
  APSLogErrorAt();
  if (gLogCategory_APAdvertiserInfo <= 40
    && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_89:
  TXTRecordDeallocate(&txtRecord);
  pthread_mutex_unlock(v6);
  return v78;
}

uint64_t _APAdvertiserInfoAddStringToTXTRecord(const __CFString *a1, TXTRecordRef *a2, const char *a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (a1 && CFStringGetLength(a1))
  {
    buffer[0] = 0;
    if (CFStringGetCString(a1, buffer, 256, 0x8000100u))
    {
      uint8_t v6 = strlen(buffer);
      uint64_t v7 = TXTRecordSetValue(a2, a3, v6, buffer);
      if (v7) {
        APSLogErrorAt();
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294960559;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return v7;
}

uint64_t _APAdvertiserInfoGetTXTRecordNumberCString(uint64_t a1, char *__str)
{
  if (HIDWORD(a1)) {
    return snprintf(__str, 0x100uLL, "0x%X,0x%X");
  }
  else {
    return snprintf(__str, 0x100uLL, "0x%X");
  }
}

uint64_t APAdvertiserInfoCopyClusterCompatibleAirPlayData(uint64_t a1, int a2, CFDataRef *a3)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  TXTRecordRef txtRecord = 0uLL;
  uint8_t v6 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  TXTRecordCreate(&txtRecord, 0x100u, buffer);
  if (!a3)
  {
    APSLogErrorAt();
    int v47 = -6705;
LABEL_75:
    unsigned int v60 = v47;
    goto LABEL_68;
  }
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  uint8_t v8 = snprintf(__str, 0x100uLL, "%u", Int64Ranged);
  unsigned int v60 = TXTRecordSetValue(&txtRecord, "acl", v8, __str);
  if (v60)
  {
    APSLogErrorAt();
    goto LABEL_68;
  }
  if (!CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"featuresEx"))
  {
    uint64_t v10 = 0;
    goto LABEL_12;
  }
  uint64_t MutableCopy = APSFeaturesCreateMutableCopy();
  if (!MutableCopy)
  {
    APSLogErrorAt();
    int v47 = -6728;
    goto LABEL_75;
  }
  uint64_t v10 = (const void *)MutableCopy;
  if (a2 == 2)
  {
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
  }
  unsigned int v60 = APSFeaturesCopyStringRepresentation();
  if (v60
    || (unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(0, &txtRecord, "fex"), CFRelease(0), v60)
    || (uint64_t LegacyFlags = APSFeaturesGetLegacyFlags(),
        uint8_t TXTRecordNumberCString = _APAdvertiserInfoGetTXTRecordNumberCString(LegacyFlags, __str),
        (unsigned int v60 = TXTRecordSetValue(&txtRecord, "features", TXTRecordNumberCString, __str)) != 0))
  {
    APSLogErrorAt();
    goto LABEL_67;
  }
LABEL_12:
  uint64_t Int64 = CFDictionaryGetInt64();
  if (Int64)
  {
    uint8_t v14 = _APAdvertiserInfoGetTXTRecordNumberCString(Int64, __str);
    unsigned int v60 = TXTRecordSetValue(&txtRecord, "rsf", v14, __str);
    if (v60) {
      goto LABEL_77;
    }
  }
  int v15 = CFDictionaryGetInt64Ranged();
  if (CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"tightSyncUUID")
    && !CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"persistentGroupUUID"))
  {
    int v16 = 0x2000;
  }
  else
  {
    int v16 = -8969;
  }
  int v17 = v16 & v15;
  if (v17)
  {
    uint8_t v18 = snprintf(__str, 0x100uLL, "0x%x", v17);
    unsigned int v60 = TXTRecordSetValue(&txtRecord, "flags", v18, __str);
    if (v60) {
      goto LABEL_77;
    }
  }
  CFDictionaryRef v19 = *(const __CFDictionary **)(a1 + 80);
  if (a2 != 1)
  {
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(v19, @"persistentGroupUUID");
    CFStringRef cfb = Value;
    if (Value && CFStringGetLength(Value))
    {
      unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfb, &txtRecord, "psgid");
      if (v60) {
        goto LABEL_77;
      }
      int v23 = CFDictionaryGetInt64Ranged();
      uint8_t v24 = snprintf(__str, 0x100uLL, "%u", v23);
      unsigned int v60 = TXTRecordSetValue(&txtRecord, "psgsz", v24, __str);
      if (v60) {
        goto LABEL_77;
      }
      int v25 = CFDictionaryGetInt64Ranged();
      uint8_t v26 = snprintf(__str, 0x100uLL, "%u", v25);
      unsigned int v60 = TXTRecordSetValue(&txtRecord, "psgtp", v26, __str);
      if (v60) {
        goto LABEL_77;
      }
      CFStringRef v27 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"persistentGroupModel");
      CFStringRef cfc = v27;
      if (v27)
      {
        if (CFStringGetLength(v27))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfc, &txtRecord, "pgm");
          if (v60) {
            goto LABEL_77;
          }
        }
      }
      goto LABEL_38;
    }
LABEL_71:
    APSLogErrorAt();
    int v48 = -6705;
    goto LABEL_73;
  }
  CFStringRef v20 = (const __CFString *)CFDictionaryGetValue(v19, @"tightSyncUUID");
  CFStringRef cf = v20;
  if (!v20 || !CFStringGetLength(v20)) {
    goto LABEL_71;
  }
  unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cf, &txtRecord, "tsid");
  if (!v60)
  {
    CFStringRef v21 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"tightSyncGroupModel");
    CFStringRef cfa = v21;
    if (!v21 || !CFStringGetLength(v21) || (unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfa, &txtRecord, "tsm")) == 0)
    {
LABEL_38:
      CFStringRef v28 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"groupID");
      CFStringRef cfd = v28;
      if (v28)
      {
        if (CFStringGetLength(v28))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfd, &txtRecord, "gid");
          if (v60) {
            goto LABEL_77;
          }
          uint64_t v29 = CFDictionaryGetInt64();
          uint8_t v30 = snprintf(__str, 0x100uLL, "%u", v29 != 0);
          unsigned int v60 = TXTRecordSetValue(&txtRecord, "igl", v30, __str);
          if (v60) {
            goto LABEL_77;
          }
          uint64_t v31 = CFDictionaryGetInt64();
          uint8_t v32 = snprintf(__str, 0x100uLL, "%u", v31 != 0);
          unsigned int v60 = TXTRecordSetValue(&txtRecord, "gcgl", v32, __str);
          if (v60) {
            goto LABEL_77;
          }
          CFStringRef v33 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"groupPublicName");
          CFStringRef cfe = v33;
          if (v33)
          {
            if (CFStringGetLength(v33))
            {
              unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfe, &txtRecord, "gpn");
              if (v60) {
                goto LABEL_77;
              }
            }
          }
        }
      }
      CFStringRef v34 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"parentGroupID");
      CFStringRef cff = v34;
      if (v34)
      {
        if (CFStringGetLength(v34))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cff, &txtRecord, "pgid");
          if (v60) {
            goto LABEL_77;
          }
          uint64_t v35 = CFDictionaryGetInt64();
          uint8_t v36 = snprintf(__str, 0x100uLL, "%u", v35 != 0);
          unsigned int v60 = TXTRecordSetValue(&txtRecord, "pgcgl", v36, __str);
          if (v60) {
            goto LABEL_77;
          }
        }
      }
      CFStringRef v37 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceModel");
      CFStringRef cfg = v37;
      if (v37)
      {
        if (CFStringGetLength(v37))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfg, &txtRecord, "model");
          if (v60) {
            goto LABEL_77;
          }
        }
      }
      CFStringRef v38 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"protocolVersion");
      CFStringRef cfh = v38;
      if (v38)
      {
        if (CFStringGetLength(v38))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfh, &txtRecord, "protovers");
          if (v60) {
            goto LABEL_77;
          }
        }
      }
      CFStringRef v39 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"airPlayVersion");
      cfuint64_t i = v39;
      if (v39)
      {
        if (CFStringGetLength(v39))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfi, &txtRecord, "srcvers");
          if (v60) {
            goto LABEL_77;
          }
        }
      }
      CFStringRef v40 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"OSVersion");
      cfuint64_t j = v40;
      if (v40)
      {
        if (CFStringGetLength(v40))
        {
          unsigned int v60 = _APAdvertiserInfoAddStringToTXTRecord(cfj, &txtRecord, "osvers");
          if (v60) {
            goto LABEL_77;
          }
        }
      }
      int v41 = CFDictionaryGetInt64Ranged();
      if (v41)
      {
        uint8_t v42 = snprintf(__str, 0x100uLL, "%u", v41);
        unsigned int v60 = TXTRecordSetValue(&txtRecord, "vv", v42, __str);
        if (v60) {
          goto LABEL_77;
        }
      }
      BytesPtr = (const UInt8 *)TXTRecordGetBytesPtr(&txtRecord);
      unsigned int Length = TXTRecordGetLength(&txtRecord);
      CFDataRef v45 = CFDataCreate(0, BytesPtr, Length);
      if (v45)
      {
        *a3 = v45;
        goto LABEL_66;
      }
      APSLogErrorAt();
      int v48 = -6728;
LABEL_73:
      unsigned int v60 = v48;
      goto LABEL_66;
    }
  }
LABEL_77:
  APSLogErrorAt();
LABEL_66:
  if (v10) {
LABEL_67:
  }
    CFRelease(v10);
LABEL_68:
  TXTRecordDeallocate(&txtRecord);
  pthread_mutex_unlock(v6);
  return v60;
}

uint64_t APAdvertiserInfoCopyAirPlayP2PData(uint64_t a1, CFDataRef *a2)
{
  return APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(a1, 0, a2);
}

uint64_t APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(uint64_t a1, int a2, CFDataRef *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  TXTRecordRef txtRecord = 0uLL;
  uint8_t v6 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  TXTRecordCreate(&txtRecord, 0x100u, buffer);
  if (!a3) {
    goto LABEL_14;
  }
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceID");
  uint64_t v8 = _APAdvertiserInfoAddStringToTXTRecord(Value, &txtRecord, "deviceid");
  if (!v8)
  {
    if (!a2)
    {
LABEL_6:
      BytesPtr = (const UInt8 *)TXTRecordGetBytesPtr(&txtRecord);
      unsigned int Length = TXTRecordGetLength(&txtRecord);
      CFDataRef v13 = CFDataCreate(0, BytesPtr, Length);
      if (v13)
      {
        uint64_t v14 = 0;
        *a3 = v13;
      }
      else
      {
        APSLogErrorAt();
        uint64_t v14 = 4294960568;
      }
      goto LABEL_8;
    }
    CFStringRef TXTString = (const __CFString *)APSNANServiceTypeGetTXTString();
    if (TXTString)
    {
      uint64_t v10 = _APAdvertiserInfoAddStringToTXTRecord(TXTString, &txtRecord, "nanST");
      if (v10)
      {
        uint64_t v14 = v10;
        APSLogErrorAt();
        goto LABEL_8;
      }
      goto LABEL_6;
    }
LABEL_14:
    APSLogErrorAt();
    uint64_t v14 = 4294960591;
    goto LABEL_8;
  }
  uint64_t v14 = v8;
  APSLogErrorAt();
  if (gLogCategory_APAdvertiserInfo <= 40
    && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_8:
  TXTRecordDeallocate(&txtRecord);
  pthread_mutex_unlock(v6);
  return v14;
}

uint64_t APAdvertiserInfoCreateAirPlayServiceName(uint64_t a1, void *a2)
{
  if (!a2)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (!a1) {
    return 4294960591;
  }
  CFDataRef v4 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  CFStringRef Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceName");
  uint8_t v6 = Value;
  if (Value) {
    CFRetain(Value);
  }
  pthread_mutex_unlock(v4);
  uint64_t result = 0;
  *a2 = v6;
  return result;
}

uint64_t APAdvertiserInfoCopyRAOPData(uint64_t a1, CFDataRef *a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  TXTRecordRef txtRecord = 0uLL;
  CFDataRef v4 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  TXTRecordCreate(&txtRecord, 0x100u, buffer);
  if (!a2)
  {
    APSLogErrorAt();
    int v27 = -6705;
    goto LABEL_46;
  }
  CFDictionaryGetInt64Ranged();
  BitListString_Make();
  unsigned int v28 = TXTRecordSetValue(&txtRecord, "cn", 0, value);
  if (v28) {
    goto LABEL_47;
  }
  if (CFDictionaryGetInt64())
  {
    unsigned int v28 = TXTRecordSetValue(&txtRecord, "da", 4u, "true");
    if (v28) {
      goto LABEL_47;
    }
  }
  CFDictionaryGetInt64Ranged();
  BitListString_Make();
  unsigned int v28 = TXTRecordSetValue(&txtRecord, "et", 0, value);
  if (v28) {
    goto LABEL_47;
  }
  if (CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"featuresEx"))
  {
    uint64_t LegacyFlags = APSFeaturesGetLegacyFlags();
    uint8_t TXTRecordNumberCString = _APAdvertiserInfoGetTXTRecordNumberCString(LegacyFlags, value);
    TXTRecordSetValue(&txtRecord, "ft", TXTRecordNumberCString, value);
  }
  CFStringRef v7 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"firmwareVersion");
  if (v7)
  {
    CFStringRef v8 = v7;
    if (CFStringGetLength(v7))
    {
      unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v8, &txtRecord, "fv");
      if (v28) {
        goto LABEL_47;
      }
    }
  }
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  if (Int64Ranged)
  {
    uint8_t v10 = snprintf(value, 0x100uLL, "0x%x", Int64Ranged);
    unsigned int v28 = TXTRecordSetValue(&txtRecord, "sf", v10, value);
    if (v28) {
      goto LABEL_47;
    }
  }
  if (CFDictionaryGetInt64Ranged())
  {
    BitListString_Make();
    unsigned int v28 = TXTRecordSetValue(&txtRecord, "md", 0, value);
    if (v28) {
      goto LABEL_47;
    }
  }
  if ((CFStringRef v11 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceModel")) != 0
    && (CFStringRef v12 = v11, CFStringGetLength(v11))
    && (unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v12, &txtRecord, "am")) != 0
    || CFDictionaryGetInt64() && (unsigned int v28 = TXTRecordSetValue(&txtRecord, "pw", 4u, "true")) != 0
    || (CFStringRef v13 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"publicKey")) != 0
    && (CFStringRef v14 = v13, CFStringGetLength(v13))
    && (unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v14, &txtRecord, "pk")) != 0)
  {
LABEL_47:
    APSLogErrorAt();
    goto LABEL_34;
  }
  CFStringRef v15 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"transportTypes");
  unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v15, &txtRecord, "tp");
  if (v28)
  {
    APSLogErrorAt();
    if (gLogCategory_APAdvertiserInfo <= 40
      && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_43;
    }
  }
  else
  {
    CFStringRef v16 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"airTunesProtocolVersion");
    unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v16, &txtRecord, "vn");
    if (!v28)
    {
      CFStringRef v17 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"airPlayVersion");
      if (!v17
        || (CFStringRef v18 = v17, !CFStringGetLength(v17))
        || (unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v18, &txtRecord, "vs")) == 0)
      {
        CFStringRef v19 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"OSVersion");
        if (!v19
          || (CFStringRef v20 = v19, !CFStringGetLength(v19))
          || (unsigned int v28 = _APAdvertiserInfoAddStringToTXTRecord(v20, &txtRecord, "ov")) == 0)
        {
          int v21 = CFDictionaryGetInt64Ranged();
          uint8_t v22 = snprintf(value, 0x100uLL, "%u", v21);
          unsigned int v28 = TXTRecordSetValue(&txtRecord, "vv", v22, value);
          if (!v28)
          {
            BytesPtr = (const UInt8 *)TXTRecordGetBytesPtr(&txtRecord);
            unsigned int Length = TXTRecordGetLength(&txtRecord);
            CFDataRef v25 = CFDataCreate(0, BytesPtr, Length);
            if (v25)
            {
              *a2 = v25;
              goto LABEL_34;
            }
            APSLogErrorAt();
            int v27 = -6728;
LABEL_46:
            unsigned int v28 = v27;
            goto LABEL_34;
          }
        }
      }
      goto LABEL_47;
    }
    APSLogErrorAt();
    if (gLogCategory_APAdvertiserInfo <= 40
      && (gLogCategory_APAdvertiserInfo != -1 || _LogCategory_Initialize()))
    {
LABEL_43:
      LogPrintF();
    }
  }
LABEL_34:
  TXTRecordDeallocate(&txtRecord);
  pthread_mutex_unlock(v4);
  return v28;
}

uint64_t APAdvertiserInfoCreateRAOPServiceName(uint64_t a1, __CFString **a2)
{
  CFDataRef v4 = (pthread_mutex_t *)(a1 + 16);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceID");
  CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 80), @"deviceName");
  if (Value) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    APSLogErrorAt();
LABEL_12:
    uint64_t v12 = 4294960534;
    goto LABEL_8;
  }
  CFStringRef v8 = v6;
  CFIndex Length = CFStringGetLength(Value);
  CFStringRef MutableCopy = CFStringCreateMutableCopy(0, Length, Value);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    uint64_t v12 = 4294960568;
    goto LABEL_8;
  }
  CFStringRef v11 = (__CFString *)MutableCopy;
  v14.length = CFStringGetLength(MutableCopy);
  v14.location = 0;
  if (CFStringFindAndReplace(v11, @":", &stru_26DEA1830, v14, 0) != 5)
  {
    APSLogErrorAt();
    CFRelease(v11);
    goto LABEL_12;
  }
  CFStringAppend(v11, @"@");
  CFStringAppend(v11, v8);
  uint64_t v12 = 0;
  *a2 = v11;
LABEL_8:
  pthread_mutex_unlock(v4);
  return v12;
}

uint64_t APAdvertiserInfoDebugShow(uint64_t a1, int a2, uint64_t a3)
{
  if (a3 && a1)
  {
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 16));
    DataBuffer_AppendF();
    uint64_t v5 = *(const void **)(a1 + 80);
    if (a2)
    {
      CFStringRef v6 = CFCopyDescription(v5);
      DataBuffer_AppendF();
      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 16));
      if (v6) {
        CFRelease(v6);
      }
    }
    else
    {
      CFDictionaryGetValue((CFDictionaryRef)v5, @"deviceName");
      DataBuffer_AppendF();
      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 16));
    }
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
}

__CFDictionary *APAdvertiserInfoCreateTestInfoDictionary()
{
  CFAllocatorRef v0 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (IsAppleInternalBuild())
  {
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"bluetoothAddress", @"AA:BB:CC:DD:EE:FF");
    CFDictionarySetValue(Mutable, @"deviceName", @"Name me, please");
    CFDictionarySetValue(Mutable, @"deviceID", @"FF:FF:FF:FF:FF:FF");
    _APAdvertiserInfoSetLegacyFeatures(Mutable);
    CFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"deviceModel", @"AppleTV5,3");
    CFDictionarySetValue(Mutable, @"deviceEnclosureColor", @"1");
    CFDictionarySetValue(Mutable, @"manufacturer", @"Apple");
    CFDictionarySetValue(Mutable, @"serialNumber", @"ABCD7890WXYZ");
    CFDictionarySetValue(Mutable, @"password", (const void *)*MEMORY[0x263EFFB38]);
    APSVersionUtilsGetShortVersionLength();
    CFDictionarySetCString();
    CFDictionarySetValue(Mutable, @"OSVersion", @"7.2");
    CFStringRef v2 = CFStringCreateWithFormat(v0, 0, @"%u", 65537);
    CFDictionarySetValue(Mutable, @"airTunesProtocolVersion", v2);
    CFRelease(v2);
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"rfc2617DigestAuthKey", (const void *)*MEMORY[0x263EFFB40]);
    CFDictionarySetValue(Mutable, @"transportTypes", @"UDP");
  }
  else
  {
    APSLogErrorAt();
  }
  return Mutable;
}

uint64_t audioSessionBufferedHose_updateNetworkThreadPriority(uint64_t a1)
{
  CFTypeRef cf = 0;
  if (*(void *)(a1 + 56))
  {
    APSLogErrorAt();
    unsigned int v9 = -72153;
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, void, CFTypeRef *))(v4 + 48);
  if (!v5)
  {
    unsigned int v9 = -12782;
LABEL_13:
    APSLogErrorAt();
    goto LABEL_19;
  }
  unsigned int v9 = v5(v2, *MEMORY[0x263F24A10], *MEMORY[0x263EFFB08], &cf);
  if (v9) {
    goto LABEL_13;
  }
  int v6 = CFGetInt64Ranged();
  if (v9) {
    goto LABEL_13;
  }
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 88));
  if (*(_DWORD *)(a1 + 104) != v6)
  {
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      FigThreadGetMachThreadPriorityValue();
      FigThreadGetMachThreadPriorityValue();
      LogPrintF();
    }
    if (*(void *)(a1 + 96) && (unsigned int v9 = FigThreadSetProperty()) != 0) {
      APSLogErrorAt();
    }
    else {
      *(_DWORD *)(a1 + 104) = v6;
    }
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 88));
LABEL_19:
  if (cf) {
    CFRelease(cf);
  }
  return v9;
}

unint64_t audioSessionBufferedHose_handleUnderrunNotification(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 40);
  unint64_t result = mach_absolute_time();
  if (v2)
  {
    unint64_t v4 = result;
    unint64_t result = FigCFEqual();
    if (result)
    {
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90)
      {
        if (gLogCategory_APReceiverAudioSessionBufferedHose != -1
          || (unint64_t result = _LogCategory_Initialize(), result))
        {
          unint64_t result = LogPrintF();
        }
      }
      v2[33] = v4;
    }
    else
    {
      unint64_t result = FigCFEqual();
      if (result && v2[33])
      {
        if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
          && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        ++v2[35];
        if (!v2[38]) {
          v2[38] = v2[33];
        }
        v2[33] = 0;
        return audioSessionBufferedHose_updateGlitchyMinutes(v2);
      }
    }
  }
  return result;
}

unint64_t audioSessionBufferedHose_updateGlitchyMinutes(void *a1)
{
  uint64_t v2 = mach_absolute_time();
  uint64_t v3 = v2;
  if (a1[32])
  {
    unint64_t v4 = a1[37];
  }
  else
  {
    unint64_t v4 = a1[22];
    a1[32] = v4;
    a1[36] = 1;
    a1[37] = v4;
  }
  unint64_t result = v2 - v4;
  if (v3 > v4)
  {
    unint64_t result = UpTicksToSeconds();
    if (result >= 0x3C)
    {
      if (a1[38])
      {
        UpTicksToSecondsF();
        unint64_t v7 = vcvtpd_u64_f64(v6 / 60.0);
        uint64_t v8 = a1[36];
        if (v8 - a1[39] < v7) {
          unint64_t v7 = v8 - a1[39];
        }
        a1[34] += v7;
        a1[39] = v8;
      }
      else
      {
        uint64_t v8 = a1[36];
      }
      a1[37] = v3;
      a1[38] = 0;
      a1[36] = v8 + 1;
      unint64_t result = UpTicksToSeconds();
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionBufferedHose != -1) {
          return LogPrintF();
        }
        unint64_t result = _LogCategory_Initialize();
        if (result) {
          return LogPrintF();
        }
      }
    }
  }
  return result;
}

void audioSessionBufferedHose_glitchMonitorTimerFire()
{
  uint64_t v0 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v0)
  {
    uint64_t v1 = (const void *)v0;
    uint64_t v2 = *(void **)(v0 + 40);
    if (v2) {
      audioSessionBufferedHose_updateGlitchyMinutes(v2);
    }
    CFRelease(v1);
  }
}

uint64_t audioSessionBufferedHose_cryptorNoLongerUsedNotification(int a1, uint64_t a2, int a3, int a4, CFTypeRef cf)
{
  uint64_t v5 = *(void *)(a2 + 40);
  value = 0;
  if (cf && (CFTypeID v6 = CFGetTypeID(cf), v6 == CFDictionaryGetTypeID()) && (v7 = FigCFDictionaryGetValue()) != 0)
  {
    uint64_t v8 = (const void *)v7;
    FigCFNumberGetUInt64();
    pthread_mutex_lock(*(pthread_mutex_t **)(v5 + 192));
    if (CFDictionaryGetValueIfPresent(*(CFDictionaryRef *)(v5 + 208), v8, (const void **)&value))
    {
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v5 + 208), v8);
    }
    else if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50 {
           && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
  }
  return pthread_mutex_unlock(*(pthread_mutex_t **)(v5 + 192));
}

uint64_t audioSessionBufferedHose_audioFormatChangedNotification(int a1, uint64_t a2, int a3, int a4, CFTypeRef cf)
{
  uint64_t v5 = *(void **)(a2 + 40);
  if (!cf || (CFTypeID v6 = CFGetTypeID(cf), v6 != CFDictionaryGetTypeID()))
  {
    return APSLogErrorAt();
  }
  if (!FigCFDictionaryGetValueIfPresent()) {
    return APSLogErrorAt();
  }
  uint64_t v7 = (const void *)v5[19];
  v5[19] = 0;
  if (v7) {
    CFRelease(v7);
  }
  Channeluint64_t Count = APSAudioFormatDescriptionGetChannelCount();
  CFStringRef v11 = (void *)*v5;
  if (ChannelCount < 3)
  {
    if (APReceiverAudioSessionPlatformSetProperty(v11, v8, @"RASP::PrefersMultiChannel", v9, *MEMORY[0x263EFFB38]))return APSLogErrorAt(); {
  }
    }
  else if (APReceiverAudioSessionPlatformSetProperty(v11, v8, @"RASP::PrefersMultiChannel", v9, *MEMORY[0x263EFFB40]))
  {
    return APSLogErrorAt();
  }
  uint64_t result = audioSessionBufferedHose_updatePreferredAudioFormat((uint64_t)v5);
  if (result) {
    return APSLogErrorAt();
  }
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || (uint64_t result = _LogCategory_Initialize(), result))
    {
      if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 2
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 3
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 5
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 7
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 91
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
        && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
      {
        APSAudioFormatDescriptionGetAudioFormatIndex();
      }
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioSessionBufferedHose_updatePreferredAudioFormat(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v3 = Mutable;
    APSAudioFormatDescriptionGetChannelLayoutTag();
    if (APSAudioFormatDoesAudioChannelLayoutTagHaveHeights() && *(unsigned char *)(a1 + 160)
      || (FigCFDictionarySetInt64(), APSAudioFormatDescriptionGetChannelCount() > 7)
      || APSAudioFormatDescriptionGetChannelCount() >= 6)
    {
      FigCFDictionarySetInt64();
    }
    uint64_t v6 = APReceiverAudioSessionPlatformSetProperty(*(void **)a1, v4, @"RASP::PreferredAudioFormat", v5, (uint64_t)v3);
    CFRelease(v3);
    return v6;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

uint64_t audioSessionBufferedHose_handleBufferingPriorityChangedNotification(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a2 + 40);
  if (result) {
    return audioSessionBufferedHose_updateNetworkThreadPriority(result);
  }
  return result;
}

uint64_t audioSessionBufferedHose_copyAudioDataBBufsCallback(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v4)
  {
    uint64_t v5 = (const void *)v4;
    uint64_t v6 = *(void *)(v4 + 40);
    pthread_mutex_lock(*(pthread_mutex_t **)(v6 + 136));
    *a3 = *(void *)(v6 + 144);
    *(void *)(v6 + 144) = 0;
    pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 136));
    if (*(void *)(v6 + 56))
    {
      uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
      uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0;
      }
      uint8_t v10 = *(void (**)(uint64_t, void, void))(v9 + 56);
      if (v10) {
        v10(CMBaseObject, *MEMORY[0x263F20DB0], *MEMORY[0x263EFFB40]);
      }
    }
    else
    {
      audioSessionBufferedHose_resumeNetworkReads(v6);
    }
    CFRelease(v5);
  }
  return 0;
}

uint64_t audioSessionBufferedHose_resumeNetworkReads(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 56)) {
      goto LABEL_10;
    }
    if (!*(unsigned char *)(result + 124))
    {
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 20
        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v1 + 124) = 1;
      uint64_t result = SendSelfConnectedLoopbackMessage();
      if (result)
      {
LABEL_10:
        return APSLogErrorAt();
      }
    }
  }
  return result;
}

uint64_t audioSessionBufferedHose_handleAudioDataConnectionEvent(int a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 7) {
    return 0;
  }
  if (a2)
  {
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 8);
    if (v7)
    {
      uint64_t v8 = (OpaqueCMBlockBuffer *)v7(a2);
      if (v8)
      {
        uint64_t v9 = v8;
        if (CMBlockBufferGetDataLength(v8))
        {
          pthread_mutex_lock(*(pthread_mutex_t **)(a3 + 136));
          uint64_t v10 = CFArrayEnsureCreatedAndAppend();
          CFArrayRef v11 = *(const __CFArray **)(a3 + 144);
          if (v11) {
            CFIndex Count = CFArrayGetCount(v11);
          }
          else {
            CFIndex Count = 0;
          }
          pthread_mutex_unlock(*(pthread_mutex_t **)(a3 + 136));
          if (!v10)
          {
            uint64_t v13 = *(void *)(a3 + 128);
            APSEndpointStreamAudioHoseProtocolGetProtocolID();
            Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
            if (ProtocolVTable && (uint64_t v15 = *(void *)(ProtocolVTable + 16)) != 0)
            {
              CFStringRef v16 = *(uint64_t (**)(uint64_t))(v15 + 40);
              if (v16)
              {
                uint64_t v17 = v16(v13);
                if (!v17)
                {
                  if (Count >= 128)
                  {
                    uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
                    uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v19) {
                      uint64_t v20 = v19;
                    }
                    else {
                      uint64_t v20 = 0;
                    }
                    uint8_t v22 = *(void (**)(uint64_t, void, void))(v20 + 56);
                    if (v22) {
                      v22(CMBaseObject, *MEMORY[0x263F20DB0], *MEMORY[0x263EFFB38]);
                    }
                  }
                  goto LABEL_30;
                }
                uint64_t v10 = v17;
              }
              else
              {
                uint64_t v10 = 4294954514;
              }
            }
            else
            {
              uint64_t v10 = 4294954508;
            }
          }
          APSLogErrorAt();
LABEL_24:
          CFRelease(v9);
          return v10;
        }
LABEL_30:
        uint64_t v10 = 0;
        goto LABEL_24;
      }
    }
    uint64_t v10 = 4294895145;
  }
  else
  {
    uint64_t v10 = 4294895145;
  }
  APSLogErrorAt();
  return v10;
}

void audioSessionBufferedHose_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, int a3, uint64_t a4, const void *a5, uint64_t a6)
{
  int Anchor = 0;
  uint64_t v11 = *(void *)(a6 + 40);
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v14 = Mutable;
    if (a3 > 1835103328)
    {
      if (a3 <= 1937011315)
      {
        if (a3 != 1835103329)
        {
          if (a3 != 1936549491)
          {
            if (a3 == 1936875892)
            {
              *(_OWORD *)v123 = *MEMORY[0x263F249C0];
              long long v15 = *(_OWORD *)v123;
              *(_OWORD *)&v123[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
              *(_OWORD *)BOOL v122 = v15;
              *(_OWORD *)&v122[12] = *(_OWORD *)&v123[12];
              *(_OWORD *)v121 = v15;
              *(_OWORD *)&v121[12] = *(_OWORD *)&v123[12];
              if (a5)
              {
                CFTypeID v16 = CFGetTypeID(a5);
                if (v16 == CFDictionaryGetTypeID())
                {
                  uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
                  uint64_t v115 = a1;
                  if (Int64Ranged != 1)
                  {
                    uint64_t v18 = a2;
                    uint64_t v19 = a4;
                    uint64_t v22 = 0;
                    uint64_t Int64 = 0;
                    int v20 = 0;
                    int v23 = 0;
                    goto LABEL_86;
                  }
                  int Anchor = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
                  if (Anchor) {
                    goto LABEL_116;
                  }
                  *(_OWORD *)uint64_t v120 = *(_OWORD *)v123;
                  *(_OWORD *)&v120[12] = *(_OWORD *)&v123[12];
                  if (!APSAudioTransportTimeIsValid())
                  {
                    APSLogErrorAt();
                    int Anchor = -72151;
LABEL_259:
                    a1 = v115;
                    goto LABEL_214;
                  }
                  uint64_t v18 = a2;
                  int Anchor = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
                  if (!Anchor)
                  {
                    uint64_t v19 = a4;
                    int v20 = CFDictionaryGetInt64Ranged();
                    uint64_t Int64 = CFDictionaryGetInt64();
                    uint64_t v22 = CFDictionaryGetInt64();
                    int v23 = CFDictionaryGetInt64Ranged();
LABEL_86:
                    *(_OWORD *)uint64_t v120 = *(_OWORD *)v123;
                    *(_OWORD *)&v120[12] = *(_OWORD *)&v123[12];
                    v119[0] = *(_OWORD *)v122;
                    *(_OWORD *)((char *)v119 + 12) = *(_OWORD *)&v122[12];
                    *(void *)&long long v116 = v22;
                    *((void *)&v116 + 1) = Int64;
                    int v117 = v20;
                    int v118 = v23;
                    int Anchor = APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime(v11, Int64Ranged, v120, v119, &v116, v121);
                    if (Anchor)
                    {
                      CFDictionarySetInt64();
                      a4 = v19;
                      a2 = v18;
                      a1 = v115;
                    }
                    else
                    {
                      a4 = v19;
                      a2 = v18;
                      a1 = v115;
                      if (Int64Ranged) {
                        goto LABEL_214;
                      }
                      *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
                      *(_OWORD *)&v120[12] = *(_OWORD *)&v121[12];
                      if (APSAudioTransportTimeIsValid())
                      {
                        *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
                        *(_OWORD *)&v120[12] = *(_OWORD *)&v121[12];
                        APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
                      }
                    }
                    if (Anchor) {
                      goto LABEL_116;
                    }
LABEL_214:
                    APMediaDataControlServerSendResponse(a1, a2, a4, (uint64_t)v14, Anchor);
                    CFRelease(v14);
                    return;
                  }
LABEL_258:
                  APSLogErrorAt();
                  a2 = v18;
                  goto LABEL_259;
                }
              }
              goto LABEL_220;
            }
LABEL_120:
            int v64 = -6714;
LABEL_121:
            int Anchor = v64;
            goto LABEL_214;
          }
          uint64_t v45 = CFDictionaryGetInt64();
          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
            && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v59 = *(void *)(v11 + 128);
          if (v45) {
            unsigned int v60 = (void *)MEMORY[0x263EFFB40];
          }
          else {
            unsigned int v60 = (void *)MEMORY[0x263EFFB38];
          }
          uint64_t v61 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v61) {
            uint64_t v62 = v61;
          }
          else {
            uint64_t v62 = 0;
          }
          uint64_t v63 = *(uint64_t (**)(uint64_t, void, void))(v62 + 56);
          if (v63)
          {
            int Anchor = v63(v59, *MEMORY[0x263F24A18], *v60);
            if (Anchor) {
              goto LABEL_116;
            }
            goto LABEL_214;
          }
          int Anchor = -12782;
LABEL_116:
          APSLogErrorAt();
          goto LABEL_214;
        }
        if (a5)
        {
          CFTypeID v52 = CFGetTypeID(a5);
          if (v52 == CFDictionaryGetTypeID())
          {
            uint64_t v53 = CFDictionaryGetInt64();
            int v54 = v53 != 0;
            if (!v11) {
              goto LABEL_257;
            }
            if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
              && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (*(unsigned __int8 *)(v11 + 160) != v54)
            {
              *(unsigned char *)(v11 + 160) = v54;
              if (audioSessionBufferedHose_updatePreferredAudioFormat(v11)) {
LABEL_257:
              }
                APSLogErrorAt();
            }
            goto LABEL_120;
          }
        }
        goto LABEL_220;
      }
      if (a3 == 1937011316)
      {
        *(_OWORD *)v123 = *MEMORY[0x263F249C0];
        long long v55 = *(_OWORD *)v123;
        *(_OWORD *)&v123[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
        *(_OWORD *)BOOL v122 = v55;
        *(_OWORD *)&v122[12] = *(_OWORD *)&v123[12];
        memset(v120, 0, 24);
        if (a5)
        {
          CFTypeID v56 = CFGetTypeID(a5);
          if (v56 == CFDictionaryGetTypeID())
          {
            int v57 = CFDictionaryGetInt64Ranged();
            if (v57 == 1)
            {
              int Anchor = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
              if (Anchor) {
                goto LABEL_116;
              }
              *(_OWORD *)v121 = *(_OWORD *)v123;
              *(_OWORD *)&v121[12] = *(_OWORD *)&v123[12];
              if (!APSAudioTransportTimeIsValid())
              {
                APSLogErrorAt();
                int v64 = -72151;
                goto LABEL_121;
              }
              int v57 = 1;
            }
            *(_OWORD *)v121 = *(_OWORD *)v123;
            *(_OWORD *)&v121[12] = *(_OWORD *)&v123[12];
            int Anchor = APReceiverAudioSessionBufferedHoseSetRate(v11, v57, v121, v122, (uint64_t)v120);
            if (!Anchor)
            {
              *(_OWORD *)v121 = *(_OWORD *)v122;
              *(_OWORD *)&v121[12] = *(_OWORD *)&v122[12];
              APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              CFDictionarySetInt64();
            }
            CFDictionarySetInt64();
            if (!Anchor) {
              goto LABEL_214;
            }
            goto LABEL_116;
          }
        }
        goto LABEL_220;
      }
      if (a3 != 1970299755)
      {
        if (a3 != 1970303090) {
          goto LABEL_120;
        }
        if (!a5) {
          goto LABEL_220;
        }
        CFTypeID v29 = CFGetTypeID(a5);
        if (v29 != CFDictionaryGetTypeID()) {
          goto LABEL_220;
        }
        uint64_t v115 = a1;
        uint64_t v18 = a2;
        CFDataGetTypeID();
        TypedCFStringRef Value = (const void *)CFDictionaryGetTypedValue();
        CFStringRef Value = CFDictionaryGetValue((CFDictionaryRef)a5, @"protocolVersionList");
        if (!Value) {
          goto LABEL_258;
        }
        int v32 = -72152;
        if (v11 && *(void *)(v11 + 128))
        {
          if (TypedValue)
          {
            CFStringRef v33 = Value;
            uint64_t v34 = a4;
            if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
              && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            *(void *)v123 = 0;
            long long v74 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
            if (v74)
            {
              uint64_t v75 = v74;
              CFDictionarySetValue(v74, (const void *)*MEMORY[0x263F123D8], (const void *)*MEMORY[0x263EFFB40]);
              CFDictionarySetValue(v75, (const void *)*MEMORY[0x263F123E8], (const void *)*MEMORY[0x263EFFB38]);
              CFDictionarySetValue(v75, (const void *)*MEMORY[0x263F123D0], TypedValue);
              CFDictionarySetValue(v75, (const void *)*MEMORY[0x263F123E0], v33);
              int v76 = FigCPEProtectorRemoteCreateForScheme();
              if (v76)
              {
                APSLogErrorAt();
                uint64_t v77 = 0;
              }
              else
              {
                uint64_t v77 = *(void *)v123;
                *(void *)v123 = 0;
              }
              a2 = v18;
              CFRelease(v75);
              if (!v76)
              {
                a4 = v34;
                unsigned int v78 = *(const void **)(v11 + 200);
                *(void *)(v11 + 200) = v77;
                a1 = v115;
                if (v78) {
                  CFRelease(v78);
                }
                if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                  && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                int v76 = 0;
LABEL_170:
                int Anchor = v76;
                if (!v76) {
                  goto LABEL_214;
                }
                goto LABEL_171;
              }
            }
            else
            {
              APSLogErrorAt();
              int v76 = -72150;
            }
            APSLogErrorAt();
            a4 = v34;
            a2 = v18;
            a1 = v115;
            goto LABEL_170;
          }
          int v32 = -72151;
        }
        APSLogErrorAt();
        int Anchor = v32;
        a1 = v115;
LABEL_171:
        CFDictionarySetInt64();
        if (!Anchor) {
          goto LABEL_214;
        }
        goto LABEL_116;
      }
      if (!a5) {
        goto LABEL_220;
      }
      CFTypeID v46 = CFGetTypeID(a5);
      if (v46 != CFDictionaryGetTypeID()) {
        goto LABEL_220;
      }
      uint64_t v47 = CFDictionaryGetInt64();
      CFDataGetTypeID();
      uint64_t v48 = CFDictionaryGetTypedValue();
      memset(v123, 0, 24);
      uint64_t v114 = a2;
      if (v11)
      {
        if (*(void *)(v11 + 128))
        {
          if (!v48)
          {
            APSLogErrorAt();
            CFTypeRef v81 = 0;
            uint64_t v79 = 0;
            uint64_t v83 = 0;
            int v97 = -72151;
            goto LABEL_204;
          }
          if (!*(void *)(v11 + 216))
          {
            APSLogErrorAt();
            CFTypeRef v81 = 0;
            uint64_t v79 = 0;
            uint64_t v83 = 0;
LABEL_238:
            int v97 = -72153;
            goto LABEL_204;
          }
          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
            && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v113 = v47;
          uint64_t v79 = (const void *)CFNumberCreateInt64();
          if (!v79)
          {
            APSLogErrorAt();
            CFTypeRef v81 = 0;
            uint64_t v83 = 0;
            int v97 = -72150;
            goto LABEL_204;
          }
          pthread_mutex_lock(*(pthread_mutex_t **)(v11 + 192));
          uint64_t v80 = CFDictionaryGetValue(*(CFDictionaryRef *)(v11 + 208), v79);
          uint64_t v111 = v48;
          if (v80)
          {
            CFTypeRef v81 = CFRetain(v80);
            pthread_mutex_unlock(*(pthread_mutex_t **)(v11 + 192));
            if (v81)
            {
              uint64_t v82 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              uint64_t v83 = v82;
              if (!v82) {
                goto LABEL_262;
              }
              CFDictionarySetValue(v82, (const void *)*MEMORY[0x263F015C8], (const void *)*MEMORY[0x263EFFB40]);
LABEL_188:
              uint64_t v99 = *(void *)(v11 + 216);
              long long v100 = *(void **)(CMBaseObjectGetVTable() + 16);
              if (v100) {
                uint64_t v101 = v100;
              }
              else {
                uint64_t v101 = 0;
              }
              if (*v101 < 8uLL
                || (CFTypeRef v102 = (uint64_t (*)(CFTypeRef, uint64_t, uint64_t, __CFDictionary *))v101[28]) == 0)
              {
                int v97 = -12782;
                goto LABEL_203;
              }
              int v103 = v102(v81, v99, v111, v83);
              if (v103)
              {
                int v97 = v103;
                goto LABEL_203;
              }
              dispatch_semaphore_t v104 = dispatch_semaphore_create(0);
              *(void *)&v123[16] = v104;
              if (v104)
              {
                uint64_t v105 = v104;
                uint64_t v106 = *(void *)(v11 + 128);
                APSEndpointStreamAudioHoseProtocolGetProtocolID();
                Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
                if (ProtocolVTable && (uint64_t v108 = *(void *)(ProtocolVTable + 16)) != 0)
                {
                  CFMutableDictionaryRef v109 = *(uint64_t (**)(uint64_t, uint64_t, CFTypeRef, uint64_t (*)(uint64_t, uint64_t, int, uint64_t), unsigned char *))(v108 + 96);
                  if (v109)
                  {
                    int v110 = v109(v106, v113, v81, audioSessionBufferedHose_updatePKDCryptorEncryptionKeyCompletionHandler, v123);
                    if (!v110)
                    {
                      dispatch_semaphore_wait(*(dispatch_semaphore_t *)&v123[16], 0xFFFFFFFFFFFFFFFFLL);
                      if (!*(_DWORD *)v123)
                      {
                        if (*(void *)&v123[8] == v113)
                        {
                          int v97 = 0;
                          goto LABEL_204;
                        }
                        APSLogErrorAt();
                        goto LABEL_238;
                      }
                      APSLogErrorAt();
                      int v97 = *(_DWORD *)v123;
                      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
                        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                         || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
LABEL_204:
                      if (*(void *)&v123[16]) {
                        dispatch_release(*(dispatch_object_t *)&v123[16]);
                      }
                      if (v83) {
                        CFRelease(v83);
                      }
                      if (v79) {
                        CFRelease(v79);
                      }
                      if (v81) {
                        CFRelease(v81);
                      }
                      int Anchor = v97;
                      a2 = v114;
                      if (!v97) {
                        goto LABEL_214;
                      }
                      CFDictionarySetInt64();
                      if (!Anchor) {
                        goto LABEL_214;
                      }
                      goto LABEL_116;
                    }
                    int v97 = v110;
                  }
                  else
                  {
                    int v97 = -12782;
                    *(_DWORD *)v123 = -12782;
                    *(void *)&v123[8] = v113;
                    dispatch_semaphore_signal(v105);
                  }
                }
                else
                {
                  int v97 = -12788;
                }
LABEL_203:
                APSLogErrorAt();
                goto LABEL_204;
              }
LABEL_262:
              APSLogErrorAt();
              int v97 = -6728;
              goto LABEL_204;
            }
          }
          else
          {
            pthread_mutex_unlock(*(pthread_mutex_t **)(v11 + 192));
          }
          key = (void *)v79;
          uint64_t v84 = a4;
          *(void *)BOOL v122 = 0;
          if (*(void *)(v11 + 200))
          {
            uint64_t v85 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
            if (v85)
            {
              uint64_t v86 = v85;
              CFDictionarySetValue(v85, (const void *)*MEMORY[0x263F123C0], (const void *)*MEMORY[0x263F123A0]);
              CFDictionarySetValue(v86, (const void *)*MEMORY[0x263F123A8], @"lGxB4ky");
              CFDictionarySetValue(v86, (const void *)*MEMORY[0x263F123C8], (const void *)*MEMORY[0x263EFFB38]);
              CFDictionarySetValue(v86, (const void *)*MEMORY[0x263F123B8], (const void *)*MEMORY[0x263F12398]);
              CFDictionaryRef Copy = CFDictionaryCreateCopy(v12, v86);
              if (Copy)
              {
                CFDictionaryRef v88 = Copy;
                FigCFDictionarySetValue();
                uint64_t v89 = *(void *)(v11 + 200);
                uint64_t v90 = *(void *)(CMBaseObjectGetVTable() + 16);
                if (v90) {
                  uint64_t v91 = v90;
                }
                else {
                  uint64_t v91 = 0;
                }
                uint64_t v92 = *(uint64_t (**)(uint64_t, const __CFAllocator *, uint64_t, __CFDictionary *, unsigned char *))(v91 + 104);
                if (v92)
                {
                  int v93 = v92(v89, v12, 1, v86, v122);
                  if (v93)
                  {
                    int v97 = v93;
                  }
                  else
                  {
                    uint64_t v94 = *(void *)v122;
                    uint64_t v95 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v95) {
                      uint64_t v96 = v95;
                    }
                    else {
                      uint64_t v96 = 0;
                    }
                    uint64_t v98 = *(uint64_t (**)(uint64_t, void, __CFString *))(v96 + 56);
                    if (v98)
                    {
                      int v97 = v98(v94, *MEMORY[0x263F01160], @"P5h3ZgzLxs");
                      if (!v97)
                      {
                        CFTypeRef v81 = *(CFTypeRef *)v122;
                        *(void *)BOOL v122 = 0;
                        goto LABEL_180;
                      }
                    }
                    else
                    {
                      int v97 = -12782;
                    }
                  }
                }
                else
                {
                  int v97 = -12782;
                }
                APSLogErrorAt();
                CFTypeRef v81 = 0;
LABEL_180:
                CFRelease(v86);
                CFRelease(v88);
                if (*(void *)v122) {
                  CFRelease(*(CFTypeRef *)v122);
                }
                if (!v97)
                {
                  a4 = v84;
                  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  uint64_t v79 = key;
                  CFDictionarySetValue(*(CFMutableDictionaryRef *)(v11 + 208), key, v81);
                  uint64_t v83 = 0;
                  goto LABEL_188;
                }
LABEL_252:
                APSLogErrorAt();
                uint64_t v83 = 0;
                a4 = v84;
                uint64_t v79 = key;
                goto LABEL_204;
              }
              APSLogErrorAt();
              CFRelease(v86);
            }
            else
            {
              APSLogErrorAt();
            }
            int v97 = -72150;
          }
          else
          {
            int v97 = -72152;
            APSLogErrorAt();
          }
          CFTypeRef v81 = 0;
          goto LABEL_252;
        }
        int v97 = -72152;
      }
      else
      {
        int v97 = -72152;
      }
      APSLogErrorAt();
      CFTypeRef v81 = 0;
      uint64_t v79 = 0;
      uint64_t v83 = 0;
      goto LABEL_204;
    }
    if (a3 <= 1634760293)
    {
      if (a3 == 1634562925)
      {
        CFStringGetTypeID();
        uint64_t v37 = CFDictionaryGetTypedValue();
        int Anchor = APReceiverAudioSessionPlatformSetProperty(*(void **)v11, v38, @"RASP::AudioMode", v39, v37);
        if (!Anchor) {
          goto LABEL_214;
        }
        goto LABEL_116;
      }
      if (a3 != 1634624360) {
        goto LABEL_120;
      }
      *(_OWORD *)v123 = *MEMORY[0x263F249C0];
      *(_OWORD *)&v123[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
      memset(v121, 0, 24);
      if (a5)
      {
        CFTypeID v35 = CFGetTypeID(a5);
        if (v35 == CFDictionaryGetTypeID())
        {
          int v36 = CFDictionaryGetInt64Ranged();
          int Anchor = APReceiverAudioSessionBufferedHoseGetAnchor(v11, v36, v123, (uint64_t)v121);
          if (!Anchor)
          {
            *(_OWORD *)BOOL v122 = *(_OWORD *)v123;
            *(_OWORD *)&v122[12] = *(_OWORD *)&v123[12];
            int Anchor = APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
            if (Anchor) {
              goto LABEL_116;
            }
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
          }
          CFDictionarySetInt64();
          if (!Anchor) {
            goto LABEL_214;
          }
          goto LABEL_116;
        }
      }
LABEL_220:
      APSLogErrorAt();
      int v64 = -6756;
      goto LABEL_121;
    }
    if (a3 == 1634760294)
    {
      *(_OWORD *)v123 = *MEMORY[0x263F010E0];
      *(void *)&v123[16] = *(void *)(MEMORY[0x263F010E0] + 16);
      if (a5)
      {
        CFTypeID v49 = CFGetTypeID(a5);
        if (v49 == CFDictionaryGetTypeID())
        {
          uint64_t v50 = CFDictionaryGetInt64();
          CFDictionaryGetDouble();
          CMTimeMakeWithSeconds((CMTime *)v123, v51, 1000);
          *(_OWORD *)BOOL v122 = *(_OWORD *)v123;
          *(void *)&v122[16] = *(void *)&v123[16];
          int Anchor = APReceiverAudioSessionBufferedHoseApplyVolumeFade(v11, v50, (CMTime *)v122);
          if (!Anchor) {
            goto LABEL_214;
          }
          goto LABEL_116;
        }
      }
      goto LABEL_220;
    }
    if (a3 != 1718839394)
    {
      if (a3 != 1835100003) {
        goto LABEL_120;
      }
      if (!a5) {
        goto LABEL_220;
      }
      CFTypeID v24 = CFGetTypeID(a5);
      if (v24 != CFDictionaryGetTypeID()) {
        goto LABEL_220;
      }
      uint64_t v25 = CFDictionaryGetInt64();
      CFDataGetTypeID();
      uint64_t v26 = CFDictionaryGetTypedValue();
      memset(v123, 0, 24);
      if (v11)
      {
        if (*(void *)(v11 + 128))
        {
          uint64_t v27 = a1;
          if (!v26)
          {
            APSLogErrorAt();
            int v73 = -72151;
            goto LABEL_134;
          }
          uint64_t v28 = a2;
          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
            && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v65 = a4;
          dispatch_semaphore_t v66 = dispatch_semaphore_create(0);
          *(void *)&v123[16] = v66;
          if (v66)
          {
            uint64_t v67 = v66;
            uint64_t v68 = *(void *)(v11 + 128);
            APSEndpointStreamAudioHoseProtocolGetProtocolID();
            uint64_t v69 = CMBaseObjectGetProtocolVTable();
            if (v69 && (uint64_t v70 = *(void *)(v69 + 16)) != 0)
            {
              uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, int, uint64_t), unsigned char *))(v70 + 104);
              if (v71)
              {
                int v72 = v71(v68, v25, v26, audioSessionBufferedHose_setMagicCookieCompletionHandler, v123);
                if (!v72)
                {
                  dispatch_semaphore_wait(*(dispatch_semaphore_t *)&v123[16], 0xFFFFFFFFFFFFFFFFLL);
                  if (!*(_DWORD *)v123)
                  {
                    a4 = v65;
                    a2 = v28;
                    if (*(void *)&v123[8] == v25)
                    {
                      int v73 = 0;
                    }
                    else
                    {
                      APSLogErrorAt();
                      int v73 = -72153;
                    }
                    goto LABEL_134;
                  }
                  APSLogErrorAt();
                  int v73 = *(_DWORD *)v123;
                  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
                    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  goto LABEL_133;
                }
                int v73 = v72;
              }
              else
              {
                int v73 = -12782;
                *(_DWORD *)v123 = -12782;
                *(void *)&v123[8] = v25;
                dispatch_semaphore_signal(v67);
              }
            }
            else
            {
              int v73 = -12788;
            }
            APSLogErrorAt();
          }
          else
          {
            APSLogErrorAt();
            int v73 = -6728;
          }
LABEL_133:
          a4 = v65;
          a2 = v28;
LABEL_134:
          a1 = v27;
          goto LABEL_135;
        }
        int v73 = -72152;
      }
      else
      {
        int v73 = -72152;
      }
      APSLogErrorAt();
LABEL_135:
      if (*(void *)&v123[16]) {
        dispatch_release(*(dispatch_object_t *)&v123[16]);
      }
      int Anchor = v73;
      if (!v73) {
        goto LABEL_214;
      }
      CFDictionarySetInt64();
      if (!Anchor) {
        goto LABEL_214;
      }
      goto LABEL_116;
    }
    *(_OWORD *)v123 = *MEMORY[0x263F249C0];
    long long v40 = *(_OWORD *)v123;
    *(_OWORD *)&v123[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
    *(_OWORD *)BOOL v122 = v40;
    *(_OWORD *)&v122[12] = *(_OWORD *)&v123[12];
    if (!a5) {
      goto LABEL_220;
    }
    CFTypeID v41 = CFGetTypeID(a5);
    if (v41 != CFDictionaryGetTypeID()) {
      goto LABEL_220;
    }
    if (CFDictionaryContainsKey((CFDictionaryRef)a5, @"flushFromSeq"))
    {
      uint64_t v42 = CFDictionaryGetInt64Ranged();
      uint64_t v43 = a2;
      int Anchor = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
      if (Anchor) {
        goto LABEL_245;
      }
      *(_OWORD *)v121 = *(_OWORD *)v123;
      *(_OWORD *)&v121[12] = *(_OWORD *)&v123[12];
      int IsValid = APSAudioTransportTimeIsValid();
    }
    else
    {
      uint64_t v43 = a2;
      uint64_t v42 = 0;
      int IsValid = 0;
    }
    int Anchor = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
    if (!Anchor)
    {
      *(_OWORD *)v121 = *(_OWORD *)v122;
      *(_OWORD *)&v121[12] = *(_OWORD *)&v122[12];
      if (APSAudioTransportTimeIsValid())
      {
        uint64_t v58 = CFDictionaryGetInt64Ranged();
        *(_OWORD *)v121 = *(_OWORD *)v123;
        *(_OWORD *)&v121[12] = *(_OWORD *)&v123[12];
        *(_OWORD *)uint64_t v120 = *(_OWORD *)v122;
        *(_OWORD *)&v120[12] = *(_OWORD *)&v122[12];
        int Anchor = APReceiverAudioSessionBufferedHoseFlushAudio(v11, IsValid, v121, v42, v120, v58, 0);
        a2 = v43;
        if (Anchor) {
          goto LABEL_116;
        }
        goto LABEL_214;
      }
      APSLogErrorAt();
      int Anchor = -72151;
LABEL_246:
      a2 = v43;
      goto LABEL_214;
    }
LABEL_245:
    APSLogErrorAt();
    goto LABEL_246;
  }
  APSLogErrorAt();

  APMediaDataControlServerSendResponse(a1, a2, a4, 0, -6728);
}

uint64_t APReceiverAudioSessionBufferedHoseFlushAudio(uint64_t a1, int a2, _OWORD *a3, uint64_t a4, _OWORD *a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v37 = 0;
  CFMutableDictionaryRef v14 = dispatch_semaphore_create(0);
  dispatch_semaphore_t dsema = v14;
  if (!v14)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  if (!a2)
  {
    uint64_t v22 = *(NSObject **)(a1 + 240);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = __APReceiverAudioSessionBufferedHoseFlushAudio_block_invoke;
    block[3] = &__block_descriptor_tmp_5103;
    block[4] = a1;
    dispatch_sync(v22, block);
    uint64_t v23 = *(void *)(a1 + 128);
    v39[0] = *a5;
    *(_OWORD *)((char *)v39 + 12) = *(_OWORD *)((char *)a5 + 12);
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
    if (!ProtocolVTable || (uint64_t v25 = *(void *)(ProtocolVTable + 16)) == 0)
    {
      uint64_t v21 = 4294954508;
      goto LABEL_24;
    }
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, void, uint64_t *))(v25 + 24);
    if (!v26)
    {
      uint64_t v21 = 4294954514;
      LODWORD(v37) = -12782;
      dispatch_semaphore_signal(dsema);
      goto LABEL_24;
    }
    v40[0] = v39[0];
    *(_OWORD *)((char *)v40 + 12) = *(_OWORD *)((char *)v39 + 12);
    uint64_t v27 = v26(v23, a6, v40, audioSessionBufferedHose_flushCompletionHandler, &v37);
    if (v27)
    {
      uint64_t v21 = v27;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  long long v15 = v14;
  uint64_t v16 = *(void *)(a1 + 128);
  v36[0] = *a3;
  *(_OWORD *)((char *)v36 + 12) = *(_OWORD *)((char *)a3 + 12);
  v35[0] = *a5;
  *(_OWORD *)((char *)v35 + 12) = *(_OWORD *)((char *)a5 + 12);
  APSEndpointStreamAudioHoseProtocolGetProtocolID();
  uint64_t v17 = CMBaseObjectGetProtocolVTable();
  if (!v17 || (uint64_t v18 = *(void *)(v17 + 16)) == 0)
  {
    uint64_t v21 = 4294954508;
    goto LABEL_24;
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, _OWORD *, void, uint64_t *))(v18 + 32);
  if (!v19)
  {
    uint64_t v21 = 4294954514;
    LODWORD(v37) = -12782;
    dispatch_semaphore_signal(v15);
    goto LABEL_24;
  }
  v40[0] = v36[0];
  *(_OWORD *)((char *)v40 + 12) = *(_OWORD *)((char *)v36 + 12);
  v39[0] = v35[0];
  *(_OWORD *)((char *)v39 + 12) = *(_OWORD *)((char *)v35 + 12);
  uint64_t v20 = v19(v16, a4, v40, a6, v39, audioSessionBufferedHose_flushWithinSampleRangeCompletionHandler, &v37);
  if (!v20)
  {
LABEL_13:
    dispatch_semaphore_wait(dsema, 0xFFFFFFFFFFFFFFFFLL);
    if (a7)
    {
      uint64_t v28 = MEMORY[0x263F249C0];
      *a7 = *MEMORY[0x263F249C0];
      *(_OWORD *)((char *)a7 + 12) = *(_OWORD *)(v28 + 12);
    }
    if (!a2 && !v37) {
      *(_DWORD *)(a1 + 164) = 0;
    }
    uint64_t v29 = *(void *)(a1 + 128);
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    uint64_t v30 = CMBaseObjectGetProtocolVTable();
    if (v30)
    {
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        int v32 = *(void (**)(uint64_t))(v31 + 40);
        if (v32) {
          v32(v29);
        }
      }
    }
    uint64_t v21 = 0;
    goto LABEL_25;
  }
  uint64_t v21 = v20;
LABEL_24:
  APSLogErrorAt();
LABEL_25:
  if (dsema) {
    dispatch_release(dsema);
  }
  return v21;
}

uint64_t APReceiverAudioSessionBufferedHoseGetAnchor(uint64_t a1, int a2, _OWORD *a3, uint64_t a4)
{
  CFStringRef Value = (unsigned int *)malloc_type_calloc(1uLL, 0x40uLL, 0x1020040D3BB1902uLL);
  if (!a1)
  {
    APSLogErrorAt();
    uint64_t v21 = 4294895144;
    goto LABEL_39;
  }
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2 != 1)
  {
    APSLogErrorAt();
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v21 = 4294960591;
LABEL_39:
    if (!Value) {
      goto LABEL_50;
    }
    goto LABEL_40;
  }
  dispatch_semaphore_t v9 = dispatch_semaphore_create(0);
  *((void *)Value + 7) = v9;
  if (!v9)
  {
    APSLogErrorAt();
    uint64_t v21 = 4294960568;
LABEL_40:
    audioSessionBufferedHose_finalizeContextWrapper(Value);
    goto LABEL_20;
  }
  uint64_t v10 = APSWrapperCreate();
  if (v10)
  {
    uint64_t v21 = v10;
    APSLogErrorAt();
    goto LABEL_40;
  }
  uint64_t v11 = *(void *)(a1 + 128);
  APSEndpointStreamAudioHoseProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (!ProtocolVTable || (v15 = *(void *)(ProtocolVTable + 16), uint64_t v13 = ProtocolVTable + 16, (v14 = v15) == 0))
  {
    uint64_t v21 = 4294954508;
LABEL_19:
    APSLogErrorAt();
LABEL_20:
    uint64_t v20 = 0;
    CFStringRef Value = 0;
    goto LABEL_21;
  }
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t, _OWORD *, long long *, int, const void *), void))(v14 + 88);
  if (!v16)
  {
    uint64_t v21 = 4294954514;
    audioSessionBufferedHose_getAnchorCompletionHandler(v13, MEMORY[0x263F249C0], MEMORY[0x263F24A78], -12782, 0);
    goto LABEL_19;
  }
  uint64_t v17 = v16(v11, 1, audioSessionBufferedHose_getAnchorCompletionHandler, 0);
  if (v17)
  {
    uint64_t v21 = v17;
    goto LABEL_19;
  }
  CFStringRef Value = (unsigned int *)APSWrapperGetValue();
  uint64_t v18 = *((void *)Value + 7);
  dispatch_time_t v19 = dispatch_time(0, 5000000000);
  if (!dispatch_semaphore_wait(v18, v19))
  {
    if (!*Value)
    {
      uint64_t v20 = (const void *)APSAudioTransportTimeCopyDebugDesc();
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v21 = 0;
      goto LABEL_21;
    }
    APSLogErrorAt();
    uint64_t v21 = *Value;
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_50:
    uint64_t v20 = 0;
    goto LABEL_21;
  }
  APSLogErrorAt();
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v20 = 0;
  uint64_t v21 = 4294960574;
LABEL_21:
  if (a3)
  {
    long long v22 = *(_OWORD *)(Value + 1);
    *(_OWORD *)((char *)a3 + 12) = *((_OWORD *)Value + 1);
    *a3 = v22;
  }
  if (a4)
  {
    long long v23 = *((_OWORD *)Value + 2);
    *(void *)(a4 + 16) = *((void *)Value + 6);
    *(_OWORD *)a4 = v23;
  }
  if (v20) {
    CFRelease(v20);
  }
  return v21;
}

uint64_t APReceiverAudioSessionBufferedHoseSetRate(uint64_t a1, int a2, _OWORD *a3, _OWORD *a4, uint64_t a5)
{
  *(void *)uint64_t v27 = 0;
  long long v24 = *MEMORY[0x263F249C0];
  *(_OWORD *)&v27[4] = *MEMORY[0x263F249C0];
  long long v23 = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  *(_OWORD *)&v27[16] = v23;
  long long v28 = 0u;
  *(_OWORD *)dispatch_semaphore_t dsema = 0u;
  v30[0] = *a3;
  *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)((char *)a3 + 12);
  uint64_t v10 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  if (a1)
  {
    if (*(void *)(a1 + 8))
    {
      uint64_t v11 = FigCFWeakReferenceHolderCopyReferencedObject();
      if (v11)
      {
        uint64_t v13 = v11;
        if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
          && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (a2 != 1)
        {
          APSLogErrorAt();
          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
            && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v15 = 0;
          uint64_t v21 = 4294960591;
          goto LABEL_29;
        }
        if (*(unsigned char *)(v13 + 728))
        {
          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
            && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v15 = 0;
          uint64_t v21 = 4294960587;
        }
        else
        {
          if (*(void *)(a1 + 48))
          {
            uint64_t v14 = *(NSObject **)(v13 + 16);
            block[0] = MEMORY[0x263EF8330];
            block[1] = 0x40000000;
            block[2] = __APReceiverAudioSessionBufferedHoseSetRate_block_invoke;
            block[3] = &__block_descriptor_tmp_130;
            block[4] = v13;
            void block[5] = a1;
            dispatch_sync(v14, block);
          }
          else
          {
            AirPlayReceiverSessionControl(v13, v12, @"handleMediaAudioResumedForSession", *(__CFString **)(a1 + 32), 0, 0);
          }
          uint64_t v15 = dispatch_semaphore_create(0);
          dsema[1] = v15;
          if (v15)
          {
            uint64_t v16 = *(void *)(a1 + 128);
            *(_OWORD *)uint64_t v25 = *a3;
            *(_OWORD *)&v25[12] = *(_OWORD *)((char *)a3 + 12);
            APSEndpointStreamAudioHoseProtocolGetProtocolID();
            Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
            if (ProtocolVTable && (uint64_t v18 = *(void *)(ProtocolVTable + 16)) != 0)
            {
              dispatch_time_t v19 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, void, unsigned char *))(v18 + 80);
              if (v19)
              {
                v30[0] = *(_OWORD *)v25;
                *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)&v25[12];
                uint64_t v20 = v19(v16, 1, v30, audioSessionBufferedHose_setRateCompletionHandler, v27);
                if (!v20)
                {
                  dispatch_semaphore_wait(dsema[1], 0xFFFFFFFFFFFFFFFFLL);
                  if (*(_DWORD *)v27)
                  {
                    APSLogErrorAt();
                    uint64_t v21 = *(unsigned int *)v27;
                    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
                      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                       || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    uint64_t v15 = 0;
                  }
                  else
                  {
                    *(_DWORD *)(a1 + 164) = 1;
                    v30[0] = *(_OWORD *)&v27[4];
                    *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)&v27[16];
                    uint64_t v15 = APSAudioTransportTimeCopyDebugDesc();
                    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                       || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    uint64_t v21 = 0;
                  }
                  goto LABEL_29;
                }
                uint64_t v21 = v20;
              }
              else
              {
                uint64_t v21 = 4294954514;
                *(_DWORD *)uint64_t v27 = -12782;
                *(_OWORD *)&v27[4] = v24;
                *(_OWORD *)&v27[16] = v23;
                long long v28 = *MEMORY[0x263F24A78];
                dsema[0] = *(dispatch_semaphore_t *)(MEMORY[0x263F24A78] + 16);
                dispatch_semaphore_signal(v15);
              }
            }
            else
            {
              uint64_t v21 = 4294954508;
            }
            APSLogErrorAt();
            uint64_t v15 = 0;
          }
          else
          {
            APSLogErrorAt();
            uint64_t v21 = 4294960568;
          }
        }
LABEL_29:
        CFRelease((CFTypeRef)v13);
        goto LABEL_30;
      }
      uint64_t v21 = 4294895143;
    }
    else
    {
      uint64_t v21 = 4294895143;
    }
    APSLogErrorAt();
    uint64_t v15 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v15 = 0;
    uint64_t v21 = 4294895144;
  }
LABEL_30:
  if (v10) {
    CFRelease(v10);
  }
  if (v15) {
    CFRelease(v15);
  }
  if (a4)
  {
    *a4 = *(_OWORD *)&v27[4];
    *(_OWORD *)((char *)a4 + 12) = *(_OWORD *)&v27[16];
  }
  if (a5)
  {
    *(_OWORD *)a5 = v28;
    *(dispatch_semaphore_t *)(a5 + 16) = dsema[0];
  }
  if (dsema[1]) {
    dispatch_release(dsema[1]);
  }
  return v21;
}

uint64_t APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime(uint64_t a1, uint64_t a2, _OWORD *a3, _OWORD *a4, long long *a5, _OWORD *a6)
{
  *(_OWORD *)uint8_t v44 = *a3;
  *(_OWORD *)&v44[12] = *(_OWORD *)((char *)a3 + 12);
  int v12 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  *(_OWORD *)uint8_t v44 = *a4;
  *(_OWORD *)&v44[12] = *(_OWORD *)((char *)a4 + 12);
  uint64_t v13 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  *(void *)uint8_t v44 = 0;
  long long v14 = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  *(_OWORD *)&v44[16] = v14;
  long long v15 = *MEMORY[0x263F249C0];
  *(_OWORD *)&v44[4] = *MEMORY[0x263F249C0];
  dispatch_object_t v45 = 0;
  if (a1)
  {
    if (*(void *)(a1 + 8))
    {
      long long v35 = v15;
      long long v36 = v14;
      uint64_t v16 = FigCFWeakReferenceHolderCopyReferencedObject();
      if (v16)
      {
        uint64_t v18 = v16;
        dispatch_time_t v19 = &unk_268402000;
        if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
          && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
        {
          APSGetFBOPropertyInt64();
          dispatch_time_t v19 = (_DWORD *)&unk_268402000;
          LogPrintF();
        }
        if (a2 >= 2)
        {
          APSLogErrorAt();
          int v34 = v19[216];
          if (v34 <= 90 && (v34 != -1 || _LogCategory_Initialize())) {
            LogPrintF();
          }
          uint64_t v31 = 0;
          uint64_t v32 = 4294960591;
          goto LABEL_34;
        }
        if (a2 == 1)
        {
          if (*(unsigned char *)(v18 + 728))
          {
            int v20 = v19[216];
            if (v20 <= 50 && (v20 != -1 || _LogCategory_Initialize())) {
              LogPrintF();
            }
            uint64_t v31 = 0;
            uint64_t v32 = 4294960587;
            goto LABEL_34;
          }
          uint64_t v37 = a6;
          if (!*(void *)(a1 + 48))
          {
            AirPlayReceiverSessionControl(v18, v17, @"handleMediaAudioResumedForSession", *(__CFString **)(a1 + 32), 0, 0);
LABEL_16:
            long long v23 = dispatch_semaphore_create(0);
            dispatch_object_t v45 = v23;
            if (v23)
            {
              long long v24 = v23;
              uint64_t v25 = v12;
              uint64_t v26 = *(void *)(a1 + 128);
              *(_OWORD *)CFTypeID v41 = *a3;
              *(_OWORD *)&v41[12] = *(_OWORD *)((char *)a3 + 12);
              long long v39 = *a5;
              uint64_t v40 = *((void *)a5 + 2);
              *(_OWORD *)uint64_t v38 = *a4;
              *(_OWORD *)&v38[12] = *(_OWORD *)((char *)a4 + 12);
              APSEndpointStreamAudioHoseProtocolGetProtocolID();
              Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
              if (ProtocolVTable && (uint64_t v28 = *(void *)(ProtocolVTable + 16)) != 0)
              {
                uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, long long *, _OWORD *, void, unsigned char *))(v28 + 48);
                if (v29)
                {
                  v49[0] = *(_OWORD *)v41;
                  *(_OWORD *)((char *)v49 + 12) = *(_OWORD *)&v41[12];
                  long long v47 = v39;
                  uint64_t v48 = v40;
                  v46[0] = *(_OWORD *)v38;
                  *(_OWORD *)((char *)v46 + 12) = *(_OWORD *)&v38[12];
                  uint64_t v30 = v29(v26, a2, v49, &v47, v46, audioSessionBufferedHose_setRateAndAnchorCompletionHandler, v44);
                  if (!v30)
                  {
                    dispatch_semaphore_wait(v45, 0xFFFFFFFFFFFFFFFFLL);
                    if (*(_DWORD *)v44)
                    {
                      APSLogErrorAt();
                      uint64_t v32 = *(unsigned int *)v44;
                      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
                        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                         || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      uint64_t v31 = 0;
                      int v12 = v25;
                    }
                    else
                    {
                      int v12 = v25;
                      *(_DWORD *)(a1 + 164) = a2;
                      v49[0] = *(_OWORD *)&v44[4];
                      *(_OWORD *)((char *)v49 + 12) = *(_OWORD *)&v44[16];
                      uint64_t v31 = (const void *)APSAudioTransportTimeCopyDebugDesc();
                      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50)
                      {
                        a6 = v37;
                        if (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                          || _LogCategory_Initialize())
                        {
                          LogPrintF();
                        }
                        uint64_t v32 = 0;
                        goto LABEL_34;
                      }
                      uint64_t v32 = 0;
                    }
                    goto LABEL_27;
                  }
                  uint64_t v32 = v30;
                }
                else
                {
                  uint64_t v32 = 4294954514;
                  *(_DWORD *)uint8_t v44 = -12782;
                  *(_OWORD *)&v44[4] = v35;
                  *(_OWORD *)&v44[16] = v36;
                  dispatch_semaphore_signal(v24);
                }
              }
              else
              {
                uint64_t v32 = 4294954508;
              }
              int v12 = v25;
              APSLogErrorAt();
              uint64_t v31 = 0;
            }
            else
            {
              APSLogErrorAt();
              uint64_t v31 = 0;
              uint64_t v32 = 4294960568;
            }
LABEL_27:
            a6 = v37;
LABEL_34:
            CFRelease((CFTypeRef)v18);
            goto LABEL_35;
          }
          uint64_t v21 = *(NSObject **)(v18 + 16);
          v43[0] = MEMORY[0x263EF8330];
          v43[1] = 0x40000000;
          v43[2] = __APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime_block_invoke;
          v43[3] = &__block_descriptor_tmp_137;
          v43[4] = v18;
          v43[5] = a1;
          long long v22 = v43;
        }
        else
        {
          uint64_t v37 = a6;
          uint64_t v21 = *(NSObject **)(a1 + 240);
          block[0] = MEMORY[0x263EF8330];
          block[1] = 0x40000000;
          block[2] = __APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime_block_invoke_2;
          block[3] = &__block_descriptor_tmp_138_5069;
          block[4] = a1;
          long long v22 = block;
        }
        dispatch_sync(v21, v22);
        goto LABEL_16;
      }
      uint64_t v32 = 4294895143;
    }
    else
    {
      uint64_t v32 = 4294895143;
    }
    APSLogErrorAt();
    uint64_t v31 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v31 = 0;
    uint64_t v32 = 4294895144;
  }
LABEL_35:
  if (v12) {
    CFRelease(v12);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v31) {
    CFRelease(v31);
  }
  if (a6)
  {
    *a6 = *(_OWORD *)&v44[4];
    *(_OWORD *)((char *)a6 + 12) = *(_OWORD *)&v44[16];
  }
  if (v45) {
    dispatch_release(v45);
  }
  return v32;
}

uint64_t APReceiverAudioSessionBufferedHoseApplyVolumeFade(uint64_t a1, uint64_t a2, CMTime *a3)
{
  if (!a1 || !*(void *)(a1 + 128))
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    APSGetVolumeFadeTypeName();
    CMTime time = *a3;
    CMTimeGetSeconds(&time);
    LogPrintF();
  }
  if (a2 == 2)
  {
    if (!*(_DWORD *)(a1 + 164))
    {
      uint64_t v6 = 4294895145;
      APSLogErrorAt();
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_23;
      }
      return v6;
    }
    goto LABEL_14;
  }
  if (a2 != 1)
  {
    uint64_t v6 = 4294895145;
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_23;
    }
    return v6;
  }
  if (!*(_DWORD *)(a1 + 164))
  {
LABEL_14:
    uint64_t v7 = *(void *)(a1 + 128);
    *(_OWORD *)&v12.value = *(_OWORD *)&a3->value;
    v12.epoch = a3->epoch;
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
    if (ProtocolVTable && (uint64_t v9 = *(void *)(ProtocolVTable + 16)) != 0)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, CMTime *))(v9 + 72);
      if (v10)
      {
        CMTime time = v12;
        uint64_t v6 = v10(v7, a2, &time);
        if (!v6) {
          return v6;
        }
      }
      else
      {
        uint64_t v6 = 4294954514;
      }
    }
    else
    {
      uint64_t v6 = 4294954508;
    }
    APSLogErrorAt();
    return v6;
  }
  uint64_t v6 = 4294895145;
  APSLogErrorAt();
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
LABEL_23:
    LogPrintF();
  }
  return v6;
}

uint64_t audioSessionBufferedHose_setMagicCookieCompletionHandler(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(_DWORD *)a4 = a3;
  *(void *)(a4 + 8) = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a4 + 16));
  return 0;
}

uint64_t audioSessionBufferedHose_updatePKDCryptorEncryptionKeyCompletionHandler(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(_DWORD *)a4 = a3;
  *(void *)(a4 + 8) = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a4 + 16));
  return 0;
}

uint64_t __APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime_block_invoke(uint64_t a1, int a2)
{
  return AirPlayReceiverSessionControl(*(void *)(a1 + 32), a2, @"handleMediaAudioResumedForSession", *(__CFString **)(*(void *)(a1 + 40) + 32), 0, 0);
}

uint64_t __APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime_block_invoke_2(uint64_t a1)
{
  return audioSessionBufferedHose_cancelUnderrun(*(void *)(a1 + 32));
}

uint64_t audioSessionBufferedHose_setRateAndAnchorCompletionHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, int a6, uint64_t a7)
{
  *(_DWORD *)a7 = a6;
  long long v7 = *a5;
  *(_OWORD *)(a7 + 16) = *(long long *)((char *)a5 + 12);
  *(_OWORD *)(a7 + 4) = v7;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a7 + 32));
  return 0;
}

uint64_t audioSessionBufferedHose_cancelUnderrun(uint64_t result)
{
  if (*(void *)(result + 264))
  {
    uint64_t v1 = result;
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    *(void *)(v1 + 264) = 0;
  }
  return result;
}

uint64_t __APReceiverAudioSessionBufferedHoseSetRate_block_invoke(uint64_t a1, int a2)
{
  return AirPlayReceiverSessionControl(*(void *)(a1 + 32), a2, @"handleMediaAudioResumedForSession", *(__CFString **)(*(void *)(a1 + 40) + 32), 0, 0);
}

uint64_t audioSessionBufferedHose_setRateCompletionHandler(uint64_t a1, long long *a2, long long *a3, int a4, uint64_t a5)
{
  *(_DWORD *)a5 = a4;
  long long v5 = *a2;
  *(_OWORD *)(a5 + 16) = *(long long *)((char *)a2 + 12);
  *(_OWORD *)(a5 + 4) = v5;
  long long v6 = *a3;
  *(void *)(a5 + 48) = *((void *)a3 + 2);
  *(_OWORD *)(a5 + 32) = v6;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a5 + 56));
  return 0;
}

uint64_t audioSessionBufferedHose_getAnchorCompletionHandler(uint64_t a1, _OWORD *a2, long long *a3, int a4, const void *a5)
{
  uint64_t Value = APSWrapperGetValue();
  *(_DWORD *)uint64_t Value = a4;
  long long v10 = *(_OWORD *)((char *)a2 + 12);
  *(_OWORD *)(Value + 4) = *a2;
  *(_OWORD *)(Value + 16) = v10;
  long long v11 = *a3;
  *(void *)(Value + 48) = *((void *)a3 + 2);
  *(_OWORD *)(Value + 32) = v11;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(Value + 56));
  if (a5) {
    CFRelease(a5);
  }
  return 0;
}

void audioSessionBufferedHose_finalizeContextWrapper(void *a1)
{
  uint64_t v2 = a1[7];
  if (v2) {
    dispatch_release(v2);
  }

  free(a1);
}

uint64_t __APReceiverAudioSessionBufferedHoseFlushAudio_block_invoke(uint64_t a1)
{
  return audioSessionBufferedHose_cancelUnderrun(*(void *)(a1 + 32));
}

uint64_t audioSessionBufferedHose_flushCompletionHandler(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(_DWORD *)a5 = a4;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a5 + 8));
  return 0;
}

uint64_t audioSessionBufferedHose_flushWithinSampleRangeCompletionHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  *(_DWORD *)a7 = a6;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a7 + 8));
  return 0;
}

void APReceiverAudioSessionBufferedHoseFinalize(uint64_t a1)
{
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(a1 + 161))
  {
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(0);
  }
  if (*(void *)(a1 + 96))
  {
    SendSelfConnectedLoopbackMessage();
    FigThreadJoin();
    *(void *)(a1 + 96) = 0;
  }
  int v2 = *(_DWORD *)(a1 + 64);
  if ((v2 & 0x80000000) == 0)
  {
    if (close(v2) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 64) = -1;
  }
  if (*(void *)(a1 + 72))
  {
    NetSocket_Delete();
    *(void *)(a1 + 72) = 0;
  }
  CFMutableDictionaryRef v3 = *(const void **)(a1 + 48);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 56);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 56) = 0;
  }
  long long v5 = *(const void **)(a1 + 168);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 168) = 0;
  }
  long long v6 = *(const void **)(a1 + 8);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 8) = 0;
  }
  long long v7 = *(const void **)(a1 + 32);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 32) = 0;
  }
  *(_DWORD *)(a1 + 108) = 0;
  if (*(_DWORD *)(a1 + 16))
  {
    *(_DWORD *)(a1 + 16) = 0;
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v8 = *(const void **)(a1 + 224);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(a1 + 224) = 0;
  }
  if (*(void *)(a1 + 128))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    uint64_t v9 = *(void *)(a1 + 128);
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
    if (ProtocolVTable)
    {
      uint64_t v11 = *(void *)(ProtocolVTable + 16);
      if (v11)
      {
        CMTime v12 = *(void (**)(uint64_t, void, void))(v11 + 56);
        if (v12) {
          v12(v9, 0, 0);
        }
      }
    }
    uint64_t v13 = *(void *)(a1 + 128);
    if (v13)
    {
      uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v16 = *(void (**)(uint64_t))(v15 + 24);
      if (v16) {
        v16(v13);
      }
      int v17 = *(const void **)(a1 + 128);
      if (v17)
      {
        CFRelease(v17);
        *(void *)(a1 + 128) = 0;
      }
    }
  }
  uint64_t v18 = *(NSObject **)(a1 + 248);
  if (v18)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 248));
    dispatch_release(v18);
    *(void *)(a1 + 248) = 0;
  }
  dispatch_time_t v19 = *(NSObject **)(a1 + 240);
  if (v19)
  {
    dispatch_release(v19);
    *(void *)(a1 + 240) = 0;
  }
  FigSimpleMutexDestroy();
  FigSimpleMutexDestroy();
  int v20 = *(const void **)(a1 + 144);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(a1 + 144) = 0;
  }
  uint64_t v21 = *(const void **)(a1 + 152);
  if (v21) {
    CFRelease(v21);
  }
  CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(a1 + 208));
  long long v22 = *(const void **)(a1 + 208);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 208) = 0;
  }
  long long v23 = *(const void **)(a1 + 200);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(a1 + 200) = 0;
  }
  FigSimpleMutexDestroy();
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  long long v24 = *(const void **)(a1 + 24);
  if (v24) {
    CFRelease(v24);
  }

  free((void *)a1);
}

uint64_t APReceiverAudioSessionBufferedHoseInvalidate(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 128);
  if (result) {
    return MEMORY[0x270F0BC78]();
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedHoseConvertProgressRTPTimeToSecond(uint64_t a1, int a2, int a3, int a4, double *a5, double *a6)
{
  if (a1)
  {
    double v10 = (double)(a3 - a2);
    APSAudioFormatDescriptionGetSampleRate();
    double v12 = v10 / (double)v11;
    APSAudioFormatDescriptionGetSampleRate();
    double v14 = (double)(a4 - a2) / (double)v13;
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 40
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a5) {
      *a5 = v12;
    }
    uint64_t result = 0;
    if (a6) {
      *a6 = v14;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895144;
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedHoseStartPacketProcesser(uint64_t a1)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (*(unsigned char *)(a1 + 161))
  {
    uint64_t v2 = 4294895143;
    goto LABEL_20;
  }
  *(void *)(a1 + 176) = mach_absolute_time();
  if (!*(void *)(a1 + 56))
  {
    pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 88));
    if (*(void *)(a1 + 96))
    {
      pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 88));
      goto LABEL_7;
    }
    uint64_t v2 = FigThreadCreate();
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 88));
    if (!v2) {
      goto LABEL_7;
    }
LABEL_20:
    APSLogErrorAt();
    return v2;
  }
LABEL_7:
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3)
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v3 + 112), &v9, (dispatch_function_t)controlServer_startInternal);
    uint64_t v2 = v10;
    if (v10) {
      goto LABEL_20;
    }
  }
  if (*(void *)(a1 + 56))
  {
    uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    long long v7 = *(void (**)(uint64_t, void, void))(v6 + 56);
    if (v7) {
      v7(CMBaseObject, *MEMORY[0x263F20DB0], *MEMORY[0x263EFFB40]);
    }
  }
  else
  {
    audioSessionBufferedHose_resumeNetworkReads(a1);
  }
  uint64_t v2 = 0;
  *(unsigned char *)(a1 + 161) = 1;
  return v2;
}

uint64_t audioSessionBufferedHose_networkThread(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 80);
  unint64_t v3 = *(int *)(a1 + 64);
  memset(&v40, 0, sizeof(v40));
  pthread_setname_np("AirPlayAudioReceiver");
  if (!*(void *)(a1 + 56))
  {
    if (SocketAccept() || SocketSetP2P()) {
      goto LABEL_107;
    }
    if (!*(unsigned char *)(a1 + 117)) {
      SocketSetQoS();
    }
    int v2 = -1;
    int v4 = *(_DWORD *)(a1 + 80);
    if ((v4 & 0x80000000) == 0)
    {
      if (close(v4) && *__error()) {
        __error();
      }
      *(_DWORD *)(a1 + 80) = -1;
    }
    if (NetSocket_CreateWithNative())
    {
LABEL_107:
      APSLogErrorAt();
      return 0;
    }
  }
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v2 < 0) {
    int v5 = -1;
  }
  else {
    int v5 = v2;
  }
  int v6 = 1 << v2;
  unint64_t v38 = (unint64_t)v2 >> 5;
  int v39 = 1 << v3;
  unint64_t v7 = v3 >> 5;
  CFAllocatorRef structureAllocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  int v36 = v5;
  while (1)
  {
    while (1)
    {
      memset(&v40, 0, sizeof(v40));
      if (*(unsigned char *)(a1 + 124))
      {
        int v8 = __darwin_check_fd_set_overflow(v2, &v40, 0);
        int v9 = v5;
        if (v8)
        {
          v40.fds_bits[v38] |= v6;
          int v9 = v5;
        }
      }
      else
      {
        int v9 = -1;
      }
      if ((int)v3 <= v9) {
        int v10 = v9;
      }
      else {
        int v10 = v3;
      }
      if (__darwin_check_fd_set_overflow(v3, &v40, 0)) {
        v40.fds_bits[v7] |= v39;
      }
      int v11 = select(v10 + 1, &v40, 0, 0, 0);
      if (v11 > 0) {
        break;
      }
      if (v11 && *__error())
      {
        int v30 = *__error();
        if (!v30) {
          break;
        }
        if (v30 == 4) {
          continue;
        }
      }
      usleep(0x186A0u);
    }
    if (__darwin_check_fd_set_overflow(v2, &v40, 0) && (v40.fds_bits[v38] & v6) != 0) {
      break;
    }
LABEL_79:
    if (__darwin_check_fd_set_overflow(v3, &v40, 0) && (v40.fds_bits[v7] & v39) != 0)
    {
      LOBYTE(blockBufferOut) = 0;
      uint64_t v44 = 0;
      int v33 = SocketRecvFrom();
      if (v33 != 35)
      {
        if (v33)
        {
          APSLogErrorAt();
        }
        else if (blockBufferOut == 113)
        {
          goto LABEL_102;
        }
      }
    }
    else
    {
      APSNetworkClockLogCurrentNetworkTime();
    }
  }
  unsigned int v43 = 0;
  unsigned __int16 v42 = 0;
  uint64_t v44 = 0;
  uint64_t DefaultAirPlayMallocZoneCFAllocator = APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator();
  CMBlockBufferRef blockBufferOut = 0;
  CFAllocatorRef blockAllocator = (const __CFAllocator *)DefaultAirPlayMallocZoneCFAllocator;
  if (*(void *)(a1 + 56))
  {
    APSLogErrorAt();
LABEL_70:
    int v20 = 0;
    int v32 = -72153;
    goto LABEL_73;
  }
  CFAllocatorRef v13 = (const __CFAllocator *)DefaultAirPlayMallocZoneCFAllocator;
  int v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 1381257248)
  {
    int v15 = (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 + 72) + 24))(*(void *)(a1 + 72), 2);
    if (!v15)
    {
      unsigned int v31 = bswap32(v42) >> 16;
      if (v31 <= 1) {
        goto LABEL_98;
      }
      unsigned int v18 = v31 - 2;
      size_t v17 = 1;
      if (!v18) {
        goto LABEL_62;
      }
LABEL_38:
      size_t v19 = v18;
      int v20 = CFAllocatorAllocate(v13, v18, 0);
      if (!v20)
      {
        APSLogErrorAt();
        int v32 = -6728;
        goto LABEL_63;
      }
      int v21 = (*(uint64_t (**)(void, size_t))(*(void *)(a1 + 72) + 24))(*(void *)(a1 + 72), v19);
      if (v21)
      {
        int v32 = v21;
      }
      else
      {
        if (v44 != v19)
        {
          APSLogErrorAt();
          int v32 = -72153;
          goto LABEL_63;
        }
        OSStatus v22 = CMBlockBufferCreateWithMemoryBlock(structureAllocator, v20, v19, blockAllocator, 0, v17, v19 - v17, 0, &blockBufferOut);
        if (!v22)
        {
          pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 136));
          CFMutableDictionaryRef Mutable = *(__CFArray **)(a1 + 144);
          if (!Mutable)
          {
            CFMutableDictionaryRef Mutable = CFArrayCreateMutable(structureAllocator, 128, MEMORY[0x263EFFF70]);
            *(void *)(a1 + 144) = Mutable;
          }
          CFArrayAppendValue(Mutable, blockBufferOut);
          CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(a1 + 144));
          pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 136));
          uint64_t v25 = *(void *)(a1 + 128);
          APSEndpointStreamAudioHoseProtocolGetProtocolID();
          Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
          if (ProtocolVTable)
          {
            uint64_t v27 = *(void *)(ProtocolVTable + 16);
            int v5 = v36;
            if (v27)
            {
              uint64_t v28 = *(uint64_t (**)(uint64_t))(v27 + 40);
              if (v28)
              {
                int v29 = v28(v25);
                if (!v29)
                {
                  if (Count >= 128)
                  {
                    if (*(void *)(a1 + 56)) {
                      goto LABEL_100;
                    }
                    if (*(unsigned char *)(a1 + 124))
                    {
                      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 20
                        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                         || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      *(unsigned char *)(a1 + 124) = 0;
                      if (SendSelfConnectedLoopbackMessage()) {
LABEL_100:
                      }
                        APSLogErrorAt();
                    }
                  }
                  int v32 = 0;
                  goto LABEL_89;
                }
                int v32 = v29;
              }
              else
              {
                int v32 = -12782;
              }
            }
            else
            {
              int v32 = -12788;
            }
          }
          else
          {
            int v32 = -12788;
            int v5 = v36;
          }
          APSLogErrorAt();
          int v20 = 0;
          goto LABEL_73;
        }
        int v32 = v22;
      }
      APSLogErrorAt();
      goto LABEL_63;
    }
LABEL_91:
    int v32 = v15;
LABEL_89:
    int v20 = 0;
    goto LABEL_73;
  }
  if (v14 != 1095778640)
  {
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_70;
  }
  int v15 = (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 + 72) + 24))(*(void *)(a1 + 72), 4);
  if (v15) {
    goto LABEL_91;
  }
  unsigned int v16 = bswap32(v43);
  if (v16 <= 3)
  {
LABEL_98:
    APSLogErrorAt();
    int v20 = 0;
    int v32 = -6733;
    goto LABEL_73;
  }
  size_t v17 = 0;
  unsigned int v18 = v16 - 4;
  if (v18) {
    goto LABEL_38;
  }
LABEL_62:
  int v32 = 0;
  int v20 = 0;
LABEL_63:
  int v5 = v36;
LABEL_73:
  if (blockBufferOut) {
    CFRelease(blockBufferOut);
  }
  if (v20) {
    CFAllocatorDeallocate(blockAllocator, v20);
  }
  int v6 = 1 << v2;
  if (v32 != -6753 && v32 != -6723) {
    goto LABEL_79;
  }
LABEL_102:
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 30
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t APReceiverAudioSessionBufferedHoseStopPacketProcesser(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 161))
  {
    uint64_t v2 = *(void *)(a1 + 48);
    if (v2)
    {
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v11 = 0;
      dispatch_sync_f(*(dispatch_queue_t *)(v2 + 112), &v10, (dispatch_function_t)controlServer_stopInternal);
      uint64_t v3 = v11;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if (*(void *)(a1 + 56))
    {
      uint64_t CMBaseObject = APTransportConnectionGetCMBaseObject();
      if (CMBaseObject)
      {
        uint64_t v5 = CMBaseObject;
        uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v6) {
          uint64_t v7 = v6;
        }
        else {
          uint64_t v7 = 0;
        }
        int v8 = *(uint64_t (**)(uint64_t))(v7 + 24);
        if (v8) {
          uint64_t v3 = v8(v5);
        }
        else {
          uint64_t v3 = 4294954514;
        }
      }
      else
      {
        uint64_t v3 = 4294954516;
      }
    }
    if ((*(_DWORD *)(a1 + 64) & 0x80000000) == 0) {
      uint64_t v3 = SendSelfConnectedLoopbackMessage();
    }
    if (*(void *)(a1 + 72)) {
      uint64_t v3 = NetSocket_Cancel();
    }
    if (*(void *)(a1 + 96))
    {
      pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 88));
      uint64_t v3 = FigThreadJoin();
      *(void *)(a1 + 96) = 0;
      pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 88));
    }
    *(void *)(a1 + 184) = mach_absolute_time();
    *(unsigned char *)(a1 + 161) = 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895143;
  }
  return v3;
}

uint64_t APReceiverAudioSessionBufferedHoseCopyMetrics(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2)
    {
      CFDictionarySetInt64();
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895145;
    }
  }
  else
  {
    uint64_t v2 = 4294895144;
    APSLogErrorAt();
  }
  return v2;
}

uint64_t APReceiverAudioSessionBufferedHoseLogEnded(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (a2)
    {
      APSNetworkClockReportRTCMetrics();
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      FigCFDictionarySetInt32();
      UpTicksToSeconds();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt32();
      FigCFDictionarySetInt32();
      CFDictionarySetValue(Mutable, @"sessionType", @"AudioBuffered");
      APSRTCReportingAgentSendMediaEvent();
      APSRTCReportingAgentSendEvent();
      if (Mutable) {
        CFRelease(Mutable);
      }
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895145;
    }
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedHoseCopyProperty(uint64_t a1, CFTypeRef cf1, int *a3)
{
  uint64_t v20 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    int v12 = -72152;
    goto LABEL_27;
  }
  if (!cf1)
  {
    APSLogErrorAt();
    int v12 = -72151;
    goto LABEL_27;
  }
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 30
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(cf1, @"VolumeLinear"))
  {
    if (CFEqual(cf1, @"AudioFormat"))
    {
      int v9 = *(const void **)(a1 + 152);
LABEL_12:
      uint64_t Int64 = (uint64_t)CFRetain(v9);
LABEL_26:
      int v12 = 0;
      uint64_t v20 = Int64;
      goto LABEL_27;
    }
    if (CFEqual(cf1, @"MediaDataControlPort"))
    {
      uint64_t Int64 = CFNumberCreateInt64();
      goto LABEL_26;
    }
    if (CFEqual(cf1, @"MaximumLatency") || CFEqual(cf1, @"PlatformAudioLatency"))
    {
      unsigned int valuePtr = 0;
    }
    else
    {
      if (CFEqual(cf1, @"AudioPort"))
      {
        CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        p_unsigned int valuePtr = (unsigned int *)(a1 + 108);
        CFNumberType v15 = kCFNumberIntType;
        goto LABEL_25;
      }
      if (!CFEqual(cf1, @"SampleRate"))
      {
        if (CFEqual(cf1, @"audioBufferSize"))
        {
          int v12 = APSEndpointStreamAudioHoseCopyProperty(*(void *)(a1 + 128), *MEMORY[0x263F249C8], *MEMORY[0x263EFFB08], (uint64_t)&v20);
          goto LABEL_27;
        }
        if (CFEqual(cf1, @"IsPlayingBufferedAudio"))
        {
          unsigned int v18 = (const void **)MEMORY[0x263EFFB40];
          if (!*(_DWORD *)(a1 + 164)) {
            unsigned int v18 = (const void **)MEMORY[0x263EFFB38];
          }
        }
        else
        {
          if (!CFEqual(cf1, @"IsUsingScreen"))
          {
            if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
              && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int v12 = -72154;
            goto LABEL_27;
          }
          unsigned int v18 = (const void **)MEMORY[0x263EFFB38];
        }
        int v9 = *v18;
        goto LABEL_12;
      }
      APSAudioFormatDescriptionGetSampleRate();
      unsigned int valuePtr = v17;
    }
    CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    p_unsigned int valuePtr = &valuePtr;
    CFNumberType v15 = kCFNumberSInt32Type;
LABEL_25:
    uint64_t Int64 = (uint64_t)CFNumberCreate(v13, v15, p_valuePtr);
    goto LABEL_26;
  }
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, void, void, uint64_t *))(v8 + 48);
  if (v11)
  {
    int v12 = v11(v6, *MEMORY[0x263F24A20], *MEMORY[0x263EFFB08], &v20);
    if (!v12) {
      goto LABEL_27;
    }
  }
  else
  {
    int v12 = -12782;
  }
  APSLogErrorAt();
LABEL_27:
  if (a3) {
    *a3 = v12;
  }
  return v20;
}

uint64_t APSEndpointStreamAudioHoseCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10) {
    return 4294954514;
  }

  return v10(a1, a2, a3, a4);
}

uint64_t APReceiverAudioSessionBufferedHoseSetProperty(uint64_t a1, CFTypeRef cf1, uint64_t a3)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (!cf1 || !a3)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  if (gLogCategory_APReceiverAudioSessionBufferedHose <= 40
    && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, @"VolumeLinear"))
  {
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v7 = *(void *)(a1 + 128);
    uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v10 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(v9 + 56);
    if (!v10)
    {
      uint64_t v6 = 4294954514;
LABEL_25:
      APSLogErrorAt();
      return v6;
    }
    uint64_t v6 = v10(v7, @"VolumeLinear", a3);
    if (v6) {
      goto LABEL_25;
    }
  }
  else if (CFEqual(cf1, @"RTCMetadata"))
  {
    APSRTCReportingAgentSendMediaEvent();
    return 0;
  }
  else
  {
    uint64_t v6 = 4294895142;
    if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
      && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return v6;
}

uint64_t _UpdateAVAudioSessionAudioMode_5199(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  uint64_t result = [*(id *)(a1 + 32) setAudioMode:a2 isLongForm:*(unsigned char *)(a1 + 69) == 0 error:&v3];
  if (result)
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionPlatform != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  else if (gLogCategory_APReceiverAudioSessionPlatform <= 60)
  {
    if (gLogCategory_APReceiverAudioSessionPlatform != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t _MainAudioEnsureSetup(uint64_t a1, uint64_t a2)
{
  memset(&inDescription, 0, sizeof(inDescription));
  inInputCallback.inputProc = 0;
  inInputCallback.inputProcRefCon = 0;
  uint64_t v115 = 0;
  *(void *)ioDataSize = 0;
  memset(outData, 0, sizeof(outData));
  int v113 = 0;
  uint64_t v3 = &unk_268402000;
  if (!*(void *)(a1 + 24))
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960578;
    goto LABEL_413;
  }
  int v4 = (AUGraph *)(a1 + 192);
  if (*(void *)(a1 + 192) || *(void *)(a1 + 128) || *(unsigned char *)(*(void *)(a1 + 16) + 729)) {
    return 0;
  }
  if (gLogCategory_APReceiverAudioSessionPlatform <= 50
    && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (APSAudioFormatDescriptionGetAudioFormatIndex() == 6)
    {
      uint64_t v7 = "PCM/24000/16/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 10)
    {
      uint64_t v7 = "PCM/44100/16/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 11)
    {
      uint64_t v7 = "PCM/44100/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 15)
    {
      uint64_t v7 = "PCM/48000/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 18)
    {
      uint64_t v7 = "ALAC/44100/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 22)
    {
      uint64_t v7 = "AAC-LC/44100/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 24)
    {
      uint64_t v7 = "AAC-ELD/44100/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 2)
    {
      uint64_t v7 = "PCM/8000/16/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 3)
    {
      uint64_t v7 = "PCM/8000/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 4)
    {
      uint64_t v7 = "PCM/16000/16/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 5)
    {
      uint64_t v7 = "PCM/16000/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 7)
    {
      uint64_t v7 = "PCM/24000/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 8)
    {
      uint64_t v7 = "PCM/32000/16/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 9)
    {
      uint64_t v7 = "PCM/32000/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 12)
    {
      uint64_t v7 = "PCM/44100/24/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 13)
    {
      uint64_t v7 = "PCM/44100/24/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 14)
    {
      uint64_t v7 = "PCM/48000/16/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 16)
    {
      uint64_t v7 = "PCM/48000/24/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 17)
    {
      uint64_t v7 = "PCM/48000/24/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 45)
    {
      uint64_t v7 = "PCM/48000/32f/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 46)
    {
      uint64_t v7 = "PCM/48000/32f/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 44)
    {
      uint64_t v7 = "PCM/48000/16/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 38)
    {
      uint64_t v7 = "PCM/48000/16/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 78)
    {
      uint64_t v7 = "PCM/48000/16/7.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 80)
    {
      uint64_t v7 = "PCM/48000/16/5.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 82)
    {
      uint64_t v7 = "PCM/48000/16/7.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 84)
    {
      uint64_t v7 = "PCM/48000/16/7.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 47)
    {
      uint64_t v7 = "PCM/48000/32f/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 48)
    {
      uint64_t v7 = "PCM/48000/32f/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 79)
    {
      uint64_t v7 = "PCM/48000/32f/7.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 81)
    {
      uint64_t v7 = "PCM/48000/32f/5.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 83)
    {
      uint64_t v7 = "PCM/48000/32f/7.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 69)
    {
      uint64_t v7 = "PCM/48000/32f/7.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 85)
    {
      uint64_t v7 = "ALAC/44100/20/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 19)
    {
      uint64_t v7 = "ALAC/44100/24/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 20)
    {
      uint64_t v7 = "ALAC/48000/16/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 86)
    {
      uint64_t v7 = "ALAC/48000/20/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 21)
    {
      uint64_t v7 = "ALAC/48000/24/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 40)
    {
      uint64_t v7 = "AAC_LC/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 39)
    {
      uint64_t v7 = "AAC_LC/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 90)
    {
      uint64_t v7 = "AAC_LC/48000/7.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 23)
    {
      uint64_t v7 = "AAC-LC/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 42)
    {
      uint64_t v7 = "AAC_ELD/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 41)
    {
      uint64_t v7 = "AAC_ELD/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 25)
    {
      uint64_t v7 = "AAC-ELD/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 26)
    {
      uint64_t v7 = "AAC-ELD/16000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 27)
    {
      uint64_t v7 = "AAC-ELD/24000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 28)
    {
      uint64_t v7 = "OPUS/16000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 29)
    {
      uint64_t v7 = "OPUS/24000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 30)
    {
      uint64_t v7 = "OPUS/48000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 31)
    {
      uint64_t v7 = "AAC-ELD/44100/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 32)
    {
      uint64_t v7 = "AAC-ELD/48000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 43)
    {
      uint64_t v7 = "AAC-ELD/32000/1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 49)
    {
      uint64_t v7 = "DDPLUS/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 50)
    {
      uint64_t v7 = "DDPLUS/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 51)
    {
      uint64_t v7 = "DDPLUS/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 52)
    {
      uint64_t v7 = "DDPLUS/48000/7.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 53)
    {
      uint64_t v7 = "DDPLUS/48000/9.1.6";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 54)
    {
      uint64_t v7 = "QAAC/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 55)
    {
      uint64_t v7 = "QAAC/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 56)
    {
      uint64_t v7 = "QAAC/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 57)
    {
      uint64_t v7 = "QAACHE/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 58)
    {
      uint64_t v7 = "QAACHE/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 60)
    {
      uint64_t v7 = "QAACHE/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 89)
    {
      uint64_t v7 = "PAAC/44100/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 61)
    {
      uint64_t v7 = "QLAC/48000/24/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 62)
    {
      uint64_t v7 = "QC3/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 63)
    {
      uint64_t v7 = "QC3/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 33)
    {
      uint64_t v7 = "QC3/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 34)
    {
      uint64_t v7 = "QC3/48000/7.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 35)
    {
      uint64_t v7 = "QC3/48000/9.1.6";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 87)
    {
      uint64_t v7 = "QAC3/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 88)
    {
      uint64_t v7 = "QEC3/48000/7.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 91)
    {
      uint64_t v7 = "EAC3/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 64)
    {
      uint64_t v7 = "APAC/48000/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 65)
    {
      uint64_t v7 = "APAC/48000/5.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 66)
    {
      uint64_t v7 = "APAC/48000/5.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 67)
    {
      uint64_t v7 = "APAC/48000/7.1";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 76)
    {
      uint64_t v7 = "APAC/48000/5.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 77)
    {
      uint64_t v7 = "APAC/48000/7.1.2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 68)
    {
      uint64_t v7 = "APAC/48000/7.1.4";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 70)
    {
      uint64_t v7 = "QAAC/44100/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 71)
    {
      uint64_t v7 = "QAACHE/44100/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 72)
    {
      uint64_t v7 = "QAACHEV2/44100/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 73)
    {
      uint64_t v7 = "QLAC/44100/24/2";
    }
    else if (APSAudioFormatDescriptionGetAudioFormatIndex() == 74)
    {
      uint64_t v7 = "MP3/44100/2";
    }
    else
    {
      uint64_t AudioFormatIndex = APSAudioFormatDescriptionGetAudioFormatIndex();
      uint64_t v7 = "";
      if (AudioFormatIndex == 75) {
        uint64_t v7 = "MP3/48000/2";
      }
    }
    uint64_t v10 = "yes";
    if (*(unsigned char *)(a1 + 64)) {
      uint64_t v11 = "yes";
    }
    else {
      uint64_t v11 = "no";
    }
    if (*(unsigned char *)(a1 + 65)) {
      *(double *)&int v12 = COERCE_DOUBLE("yes");
    }
    else {
      *(double *)&int v12 = COERCE_DOUBLE("no");
    }
    if (*(unsigned char *)(a1 + 66)) {
      *(double *)&CFAllocatorRef v13 = COERCE_DOUBLE("yes");
    }
    else {
      *(double *)&CFAllocatorRef v13 = COERCE_DOUBLE("no");
    }
    if (!*(unsigned char *)(a1 + 68)) {
      uint64_t v10 = "no";
    }
    double v110 = *(double *)&v13;
    uint64_t v111 = v10;
    uint64_t v108 = v11;
    double v109 = *(double *)&v12;
    uint64_t v104 = v6;
    uint64_t v106 = v7;
    LogPrintF();
  }
  if (*(_DWORD *)(a1 + 48) != 103)
  {
    if (*(_DWORD *)(a1 + 108) < 3u)
    {
      if (gLogCategory_APReceiverAudioSessionPlatform > 50
        || gLogCategory_APReceiverAudioSessionPlatform == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_209;
      }
    }
    else if (gLogCategory_APReceiverAudioSessionPlatform > 50 {
           || gLogCategory_APReceiverAudioSessionPlatform == -1 && !_LogCategory_Initialize())
    }
    {
      goto LABEL_209;
    }
    uint64_t v104 = *(void *)(a1 + 40);
    LogPrintF();
LABEL_209:
    _UpdateAVAudioSessionPrefersMultiChannelAudio(a1);
  }
  APSEnsureCanInitiatePlayback();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a1 + 48);
  if (a2 && CFDictionaryGetInt64())
  {
    uint64_t v8 = 0;
    *(unsigned char *)(a1 + 70) = 1;
    return v8;
  }
  if (*(void *)(*(void *)(a1 + 16) + 592) && *(unsigned char *)(a1 + 69) && !APSGetFBOPropertyInt64())
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v77 = *(void *)(*(void *)(a1 + 16) + 592);
    APSAudioFormatDescriptionGetAudioFormatIndex();
    uint64_t v78 = APAudioFormatIndexToPCMASBD();
    if (v78)
    {
      uint64_t v8 = v78;
    }
    else
    {
      uint64_t v79 = *(const void **)(a1 + 120);
      if (v79)
      {
        CFRelease(v79);
        *(void *)(a1 + 120) = 0;
      }
      uint64_t v80 = CMAudioFormatDescriptionCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const AudioStreamBasicDescription *)(a1 + 80), 0, 0, 0, 0, 0, (CMAudioFormatDescriptionRef *)(a1 + 120));
      if (!v80)
      {
        *(void *)(a1 + 128) = v77;
        *(void *)(a1 + 152) = 0;
        *(_DWORD *)(a1 + 168) = (int)(*(double *)(a1 + 80)
                                    * (double)(unint64_t)((int)APSScreenLatencyMs() + 10)
                                    / 1000.0);
        if (APSIsATVInHTGroup() && *(unsigned char *)(a1 + 69))
        {
          objc_msgSend((id)objc_msgSend(*(id *)(a1 + 32), "session"), "outputLatency");
          *(_DWORD *)(a1 + 168) += (int)(v81 * *(double *)(a1 + 80));
        }
        uint64_t v82 = FigDispatchQueueCreateWithPriority();
        *(void *)(a1 + 136) = v82;
        uint64_t v83 = dispatch_source_create(MEMORY[0x263EF8400], 0, 1uLL, v82);
        *(void *)(a1 + 144) = v83;
        inCFDataRef Data = MEMORY[0x263EF8330];
        uint64_t v120 = 3221225472;
        v121 = ___SBufConsumerEnsureSetup_block_invoke;
        BOOL v122 = &__block_descriptor_40_e5_v8__0l;
        uint64_t v123 = a1;
        dispatch_source_set_event_handler(v83, &inData);
        dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 144), 0xFFFFFFFFFFFFFFFFLL, 0, 0);
        dispatch_resume(*(dispatch_object_t *)(a1 + 144));
        if (gLogCategory_APReceiverAudioSessionPlatform <= 50
          && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
      uint64_t v8 = v80;
    }
  }
  else
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v14 = NewAUGraph((AUGraph *)(a1 + 192));
    if (v14)
    {
      uint64_t v8 = v14;
    }
    else
    {
      uint64_t v15 = AUGraphOpen(*v4);
      if (v15)
      {
        uint64_t v8 = v15;
      }
      else
      {
        if (*(unsigned char *)(a1 + 66)) {
          OSType v16 = 1987078511;
        }
        else {
          OSType v16 = 1919512419;
        }
        inDescription.componentType = 1635086197;
        inDescription.componentSubType = v16;
        *(void *)&inDescription.componentManufacturer = 1634758764;
        inDescription.componentFlagsMask = 0;
        uint64_t v17 = AUGraphAddNode(*(AUGraph *)(a1 + 192), &inDescription, (AUNode *)(a1 + 216));
        if (v17)
        {
          uint64_t v8 = v17;
        }
        else
        {
          unsigned int v18 = (AudioUnit *)(a1 + 224);
          uint64_t v19 = AUGraphNodeInfo(*(AUGraph *)(a1 + 192), *(_DWORD *)(a1 + 216), 0, (AudioUnit *)(a1 + 224));
          if (v19)
          {
            uint64_t v8 = v19;
          }
          else
          {
            LODWORD(inData) = 0;
            LODWORD(inData) = objc_msgSend((id)objc_msgSend(*(id *)(a1 + 32), "session"), "opaqueSessionID");
            uint64_t v20 = AudioUnitSetProperty(*(AudioUnit *)(a1 + 224), 0x7E7u, 2u, 0, &inData, 4u);
            if (v20)
            {
              uint64_t v8 = v20;
            }
            else
            {
              uint64_t v21 = AudioUnitInitialize(*v18);
              if (v21)
              {
                uint64_t v8 = v21;
              }
              else
              {
                ioDataSize[0] = 40;
                uint64_t Property = AudioUnitGetProperty(*v18, 8u, 2u, 0, outData, ioDataSize);
                if (Property)
                {
                  uint64_t v8 = Property;
                }
                else
                {
                  if (gLogCategory_APReceiverAudioSessionPlatform <= 50
                    && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
                  {
                    uint64_t v104 = *(void *)(a1 + 40);
                    uint64_t v106 = outData;
                    LogPrintF();
                  }
                  long long v23 = *(OpaqueAudioComponentInstance **)(a1 + 224);
                  double v24 = *(double *)outData;
                  *(_OWORD *)&inDescription.componentType = xmmword_22B4977A0;
                  inDescription.componentFlagsMask = 0;
                  uint64_t v25 = (AUNode *)(a1 + 200);
                  uint64_t v26 = AUGraphAddNode(*(AUGraph *)(a1 + 192), &inDescription, (AUNode *)(a1 + 200));
                  if (v26)
                  {
                    uint64_t v8 = v26;
                  }
                  else
                  {
                    uint64_t v27 = (AudioUnit *)(a1 + 208);
                    uint64_t v28 = AUGraphNodeInfo(*(AUGraph *)(a1 + 192), *(_DWORD *)(a1 + 200), 0, (AudioUnit *)(a1 + 208));
                    if (v28)
                    {
                      uint64_t v8 = v28;
                    }
                    else
                    {
                      ioDataSize[1] = 1;
                      uint64_t v29 = AudioUnitSetProperty(*v27, 0xBu, 1u, 0, &ioDataSize[1], 4u);
                      if (v29)
                      {
                        uint64_t v8 = v29;
                      }
                      else
                      {
                        *(_OWORD *)((char *)outData + 12) = xmmword_22B4977B0;
                        LODWORD(v115) = 32;
                        if (gLogCategory_APReceiverAudioSessionPlatform <= 50
                          && (gLogCategory_APReceiverAudioSessionPlatform != -1
                           || _LogCategory_Initialize()))
                        {
                          uint64_t v104 = *(void *)(a1 + 40);
                          uint64_t v106 = outData;
                          LogPrintF();
                        }
                        uint64_t v30 = AudioUnitSetProperty(*v18, 8u, 1u, 0, outData, 0x28u);
                        if (v30)
                        {
                          uint64_t v8 = v30;
                        }
                        else
                        {
                          uint64_t v31 = AudioUnitSetProperty(*v27, 8u, 2u, 0, outData, 0x28u);
                          if (v31)
                          {
                            uint64_t v8 = v31;
                          }
                          else
                          {
                            float v32 = 1.0;
                            uint64_t v33 = AudioUnitSetParameter(*v27, 0, 1u, 0, 1.0, 0);
                            if (v33)
                            {
                              uint64_t v8 = v33;
                            }
                            else
                            {
                              if (!APSIsAPMSpeaker()) {
                                float v32 = *(float *)(a1 + 236);
                              }
                              if (gLogCategory_APReceiverAudioSessionPlatform <= 40
                                && (gLogCategory_APReceiverAudioSessionPlatform != -1
                                 || _LogCategory_Initialize()))
                              {
                                double v109 = *(float *)(a1 + 236);
                                double v110 = v32;
                                uint64_t v106 = *(_OWORD **)(a1 + 208);
                                uint64_t v108 = (const char *)*(unsigned __int8 *)(a1 + 68);
                                uint64_t v104 = *(void *)(a1 + 40);
                                LogPrintF();
                              }
                              if (*(unsigned char *)(a1 + 68)
                                && (uint64_t v34 = AudioUnitSetParameter(*v27, 0, 2u, 0, v32, 0), v34))
                              {
                                uint64_t v8 = v34;
                              }
                              else
                              {
                                uint64_t v35 = _ConfigureAudioUnitMaxFrames(a1, *(OpaqueAudioComponentInstance **)(a1 + 208), v23, *(double *)outData, v24);
                                if (v35)
                                {
                                  uint64_t v8 = v35;
                                }
                                else
                                {
                                  int v36 = *v27;
                                  double v37 = *(double *)outData;
                                  uint64_t v38 = AUGraphConnectNodeInput(*v4, *v25, 0, *(_DWORD *)(a1 + 216), 0);
                                  if (v38)
                                  {
                                    uint64_t v8 = v38;
                                  }
                                  else
                                  {
                                    if (!*(unsigned char *)(a1 + 65)) {
                                      goto LABEL_261;
                                    }
                                    *(_OWORD *)&inDescription.componentType = xmmword_22B4977C0;
                                    inDescription.componentFlagsMask = 0;
                                    uint64_t v39 = AUGraphAddNode(*(AUGraph *)(a1 + 192), &inDescription, (AUNode *)(a1 + 240));
                                    if (v39)
                                    {
                                      uint64_t v8 = v39;
                                    }
                                    else
                                    {
                                      fd_set v40 = (AudioUnit *)(a1 + 248);
                                      uint64_t v41 = AUGraphNodeInfo(*(AUGraph *)(a1 + 192), *(_DWORD *)(a1 + 240), 0, (AudioUnit *)(a1 + 248));
                                      if (v41)
                                      {
                                        uint64_t v8 = v41;
                                      }
                                      else
                                      {
                                        int v42 = *(_DWORD *)(a1 + 108);
                                        *(void *)&outData[0] = 0x40E7700000000000;
                                        *(_OWORD *)((char *)outData + 8) = xmmword_22B4977D0;
                                        DWORD2(outData[1]) = 4;
                                        HIDWORD(outData[1]) = v42;
                                        uint64_t v115 = 32;
                                        uint64_t v43 = AudioUnitSetProperty(*(AudioUnit *)(a1 + 248), 8u, 2u, 0, outData, 0x28u);
                                        if (v43)
                                        {
                                          uint64_t v8 = v43;
                                        }
                                        else
                                        {
                                          ioDataSize[1] = 127;
                                          uint64_t v44 = AudioUnitSetProperty(*v40, 0x1Au, 0, 0, &ioDataSize[1], 4u);
                                          if (v44)
                                          {
                                            uint64_t v8 = v44;
                                          }
                                          else
                                          {
                                            uint64_t v45 = _ConfigureAudioUnitMaxFrames(a1, *(OpaqueAudioComponentInstance **)(a1 + 248), v36, *(double *)outData, v37);
                                            if (v45)
                                            {
                                              uint64_t v8 = v45;
                                            }
                                            else
                                            {
                                              int v36 = *v40;
                                              double v37 = *(double *)outData;
                                              uint64_t v46 = AUGraphConnectNodeInput(*v4, *(_DWORD *)(a1 + 240), 0, *v25, 0);
                                              if (!v46)
                                              {
LABEL_261:
                                                *(_OWORD *)&inDescription.componentType = xmmword_22B4977E0;
                                                inDescription.componentFlagsMask = 0;
                                                uint64_t v47 = AUGraphAddNode(*(AUGraph *)(a1 + 192), &inDescription, (AUNode *)(a1 + 172));
                                                if (v47)
                                                {
                                                  uint64_t v8 = v47;
                                                }
                                                else
                                                {
                                                  uint64_t v48 = (AudioUnit *)(a1 + 176);
                                                  uint64_t v49 = AUGraphNodeInfo(*(AUGraph *)(a1 + 192), *(_DWORD *)(a1 + 172), 0, (AudioUnit *)(a1 + 176));
                                                  if (v49)
                                                  {
                                                    uint64_t v8 = v49;
                                                  }
                                                  else
                                                  {
                                                    v112 = (void *)(a1 + 80);
                                                    uint64_t v50 = AudioUnitSetProperty(*(AudioUnit *)(a1 + 176), 8u, 1u, 0, (const void *)(a1 + 80), 0x28u);
                                                    if (v50)
                                                    {
                                                      uint64_t v8 = v50;
                                                    }
                                                    else
                                                    {
                                                      *(void *)&outData[0] = 0x40E7700000000000;
                                                      *(_OWORD *)((char *)outData + 8) = xmmword_22B4977D0;
                                                      int v51 = *(_DWORD *)(a1 + 108);
                                                      DWORD2(outData[1]) = 4;
                                                      HIDWORD(outData[1]) = v51;
                                                      uint64_t v115 = 32;
                                                      if (*(unsigned char *)(a1 + 65)) {
                                                        *(void *)&outData[0] = *v112;
                                                      }
                                                      uint64_t v52 = AudioUnitSetProperty(*v48, 8u, 2u, 0, outData, 0x28u);
                                                      if (v52)
                                                      {
                                                        uint64_t v8 = v52;
                                                      }
                                                      else
                                                      {
                                                        inInputCallback.inputProc = (AURenderCallback)_AudioOutputCallBack;
                                                        inInputCallback.inputProcRefCon = (void *)a1;
                                                        uint64_t v53 = AUGraphSetNodeInputCallback(*(AUGraph *)(a1 + 192), *(_DWORD *)(a1 + 172), 0, &inInputCallback);
                                                        if (v53)
                                                        {
                                                          uint64_t v8 = v53;
                                                        }
                                                        else
                                                        {
                                                          uint64_t v54 = _ConfigureAudioUnitMaxFrames(a1, *(OpaqueAudioComponentInstance **)(a1 + 176), v36, *(double *)outData, v37);
                                                          if (v54)
                                                          {
                                                            uint64_t v8 = v54;
                                                          }
                                                          else
                                                          {
                                                            int v113 = 1;
                                                            uint64_t v55 = AudioUnitSetProperty(*v48, 0x762u, 2u, 0, &v113, 4u);
                                                            if (v55)
                                                            {
                                                              uint64_t v8 = v55;
                                                            }
                                                            else
                                                            {
                                                              AUNode v56 = *(_DWORD *)(a1 + 240);
                                                              if (!v56) {
                                                                AUNode v56 = *v25;
                                                              }
                                                              uint64_t v57 = AUGraphConnectNodeInput(*(AUGraph *)(a1 + 192), *(_DWORD *)(a1 + 172), 0, v56, 0);
                                                              if (v57)
                                                              {
                                                                uint64_t v8 = v57;
                                                              }
                                                              else
                                                              {
                                                                uint64_t v58 = AUGraphInitialize(*v4);
                                                                if (!v58)
                                                                {
                                                                  *(void *)outNumberOfNodes = 0;
                                                                  AUNode outNode = 0;
                                                                  inCFDataRef Data = 0;
                                                                  uint64_t v120 = 0;
                                                                  LODWORD(v121) = 0;
                                                                  AudioUnit outAudioUnit = 0;
                                                                  UInt32 outDataSize = 0;
                                                                  double v126 = 0.0;
                                                                  double v127 = 0.0;
                                                                  uint64_t valuePtr = 0;
                                                                  if (AUGraphGetNodeCount(*v4, outNumberOfNodes))
                                                                  {
                                                                    UInt32 v59 = 0;
                                                                    outNumberOfNodes[0] = 0;
                                                                  }
                                                                  else if (outNumberOfNodes[0])
                                                                  {
                                                                    UInt32 v59 = 0;
                                                                    UInt32 v60 = 0;
                                                                    do
                                                                    {
                                                                      if (!AUGraphGetIndNode(*v4, v60, &outNode)
                                                                        && !AUGraphNodeInfo(*v4, outNode, (AudioComponentDescription *)&inData, &outAudioUnit))
                                                                      {
                                                                        UInt32 outDataSize = 8;
                                                                        if (AudioUnitGetProperty(outAudioUnit, 2u, 0, 0, &v127, &outDataSize))
                                                                        {
                                                                          double v127 = 44100.0;
                                                                        }
                                                                        UInt32 outDataSize = 8;
                                                                        if (!AudioUnitGetProperty(outAudioUnit, 0xCu, 0, 0, &v126, &outDataSize)&& HIDWORD(inData) != 1668247158)
                                                                        {
                                                                          v59 += (v126 * v127);
                                                                        }
                                                                        if (inData == 1635086197)
                                                                        {
                                                                          HIDWORD(valuePtr) = 0;
                                                                          UInt32 outDataSize = 4;
                                                                          if (!AudioUnitGetProperty(outAudioUnit, 0x6C746E63u, 2u, 0, (char *)&valuePtr + 4, &outDataSize))
                                                                          {
                                                                            LODWORD(v61) = HIDWORD(valuePtr);
                                                                            v59 += (v127
                                                                                                * (double)v61
                                                                                                / *(double *)v112);
                                                                            outNumberOfNodes[1] = v59;
                                                                          }
                                                                          HIDWORD(valuePtr) = 0;
                                                                          UInt32 outDataSize = 4;
                                                                          if (!AudioUnitGetProperty(outAudioUnit, 0x73616674u, 2u, 0, (char *)&valuePtr + 4, &outDataSize))
                                                                          {
                                                                            LODWORD(v62) = HIDWORD(valuePtr);
                                                                            v59 += (v127
                                                                                                * (double)v62
                                                                                                / *(double *)v112);
                                                                          }
                                                                          UInt32 outDataSize = 0;
                                                                          unsigned int v63 = 0;
                                                                          if (!AudioUnitGetPropertyInfo(outAudioUnit, 0x73746D23u, 2u, 0, &outDataSize, 0)&& outDataSize >= 4)
                                                                          {
                                                                            int v64 = (AudioObjectID *)malloc_type_malloc(outDataSize, 0x1109084uLL);
                                                                            if (v64)
                                                                            {
                                                                              uint64_t v65 = v64;
                                                                              unsigned int v63 = 0;
                                                                              if (!AudioUnitGetProperty(outAudioUnit, 0x73746D23u, 2u, 0, v64, &outDataSize)&& outDataSize >= 4)
                                                                              {
                                                                                unsigned int v63 = 0;
                                                                                if (outDataSize >> 2 <= 1) {
                                                                                  uint64_t v66 = 1;
                                                                                }
                                                                                else {
                                                                                  uint64_t v66 = outDataSize >> 2;
                                                                                }
                                                                                uint64_t v67 = v65;
                                                                                do
                                                                                {
                                                                                  inAddress.mElement = 0;
                                                                                  *(void *)&inAddress.mSelector = *(void *)"cntlbolg";
                                                                                  HIDWORD(valuePtr) = 0;
                                                                                  UInt32 outDataSize = 4;
                                                                                  AudioObjectID v68 = *v67++;
                                                                                  if (!AudioObjectGetPropertyData(v68, &inAddress, 0, 0, &outDataSize, (char *)&valuePtr + 4))
                                                                                  {
                                                                                    LODWORD(v69) = HIDWORD(valuePtr);
                                                                                    unsigned int v70 = (v127 * (double)v69 / *(double *)v112);
                                                                                    HIDWORD(valuePtr) = v70;
                                                                                    if (v63 <= v70) {
                                                                                      unsigned int v63 = v70;
                                                                                    }
                                                                                  }
                                                                                  --v66;
                                                                                }
                                                                                while (v66);
                                                                              }
                                                                              free(v65);
                                                                              uint64_t v3 = (_DWORD *)&unk_268402000;
                                                                            }
                                                                            else
                                                                            {
                                                                              unsigned int v63 = 0;
                                                                              uint64_t v3 = (_DWORD *)&unk_268402000;
                                                                            }
                                                                          }
                                                                          v59 += v63;
                                                                          outNumberOfNodes[1] = v59;
                                                                        }
                                                                      }
                                                                      ++v60;
                                                                    }
                                                                    while (v60 < outNumberOfNodes[0]);
                                                                  }
                                                                  else
                                                                  {
                                                                    UInt32 v59 = 0;
                                                                  }
                                                                  if (APSIsMemberOfHTGroup()
                                                                    && *(unsigned char *)(a1 + 69))
                                                                  {
                                                                    if (APSIsAPMSpeaker())
                                                                    {
                                                                      if (*(void *)(*(void *)(*(void *)(a1 + 16)
                                                                                                 + 40)
                                                                                     + 48))
                                                                      {
                                                                        uint64_t v71 = (unsigned int *)APReceiverRequestProcessorCopyReceiverSession();
                                                                        if (v71)
                                                                        {
                                                                          int v73 = v71;
                                                                          int v74 = v3[244];
                                                                          if (v74 <= 50
                                                                            && (v74 != -1
                                                                             || _LogCategory_Initialize()))
                                                                          {
                                                                            uint64_t v104 = *(void *)(a1 + 40);
                                                                            uint64_t v106 = (_OWORD *)v73[174];
                                                                            LogPrintF();
                                                                          }
                                                                          LODWORD(v72) = v73[174];
                                                                          v59 -= (v127
                                                                                              * (double)v72
                                                                                              / 1000.0);
                                                                          outNumberOfNodes[1] = v59;
                                                                          CFRelease(v73);
                                                                        }
                                                                      }
                                                                    }
                                                                    else if (IsAppleTV())
                                                                    {
                                                                      uint64_t v75 = APSHDMIVideoLatencyMs();
                                                                      int v76 = v3[244];
                                                                      if (v76 <= 50
                                                                        && (v76 != -1
                                                                         || _LogCategory_Initialize()))
                                                                      {
                                                                        uint64_t v104 = *(void *)(a1 + 40);
                                                                        uint64_t v106 = (_OWORD *)v75;
                                                                        LogPrintF();
                                                                      }
                                                                      v59 -= (v127
                                                                                          * (double)v75
                                                                                          / 1000.0);
                                                                    }
                                                                  }
                                                                  uint64_t v84 = objc_msgSend(*(id *)(a1 + 32), "session", v104, v106, v108, *(void *)&v109, *(void *)&v110, v111);
                                                                  int v85 = v3[244];
                                                                  if (v85 <= 50)
                                                                  {
                                                                    if (v85 != -1
                                                                      || _LogCategory_Initialize())
                                                                    {
                                                                      uint64_t v86 = *(void *)(a1 + 40);
                                                                      [v84 inputLatency];
                                                                      uint64_t v107 = v87;
                                                                      uint64_t v105 = v86;
                                                                      LogPrintF();
                                                                    }
                                                                    int v88 = v3[244];
                                                                    if (v88 <= 50)
                                                                    {
                                                                      if (v88 != -1
                                                                        || _LogCategory_Initialize())
                                                                      {
                                                                        uint64_t v89 = *(void *)(a1 + 40);
                                                                        objc_msgSend(v84, "outputLatency", v105, v107);
                                                                        uint64_t v107 = v90;
                                                                        uint64_t v105 = v89;
                                                                        LogPrintF();
                                                                      }
                                                                      int v91 = v3[244];
                                                                      if (v91 <= 50
                                                                        && (v91 != -1
                                                                         || _LogCategory_Initialize()))
                                                                      {
                                                                        uint64_t v92 = *(void *)(a1 + 40);
                                                                        objc_msgSend(v84, "sampleRate", v105, v107);
                                                                        uint64_t v107 = v93;
                                                                        uint64_t v105 = v92;
                                                                        LogPrintF();
                                                                      }
                                                                    }
                                                                  }
                                                                  objc_msgSend(v84, "outputLatency", v105, v107);
                                                                  int v95 = v59 + (v94 * *(double *)v112);
                                                                  outNumberOfNodes[1] = v95;
                                                                  LODWORD(valuePtr) = [v84 IOBufferFrameSize];
                                                                  CFNumberRef v96 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
                                                                  if (v96)
                                                                  {
                                                                    CFNumberRef v97 = v96;
                                                                    int v98 = v3[244];
                                                                    if (v98 <= 50
                                                                      && (v98 != -1
                                                                       || _LogCategory_Initialize()))
                                                                    {
                                                                      LogPrintF();
                                                                    }
                                                                    APReceiverAudioSessionSetProperty(*(void *)(a1 + 24), @"PlatformIOBufferSize", (uint64_t)v97);
                                                                    if (!APSIsAPMSpeaker()
                                                                      && *(unsigned char *)(a1 + 69)
                                                                      && v95 >= 1)
                                                                    {
                                                                      int v99 = v3[244];
                                                                      if (v99 <= 50
                                                                        && (v99 != -1
                                                                         || _LogCategory_Initialize()))
                                                                      {
                                                                        LogPrintF();
                                                                      }
                                                                      outNumberOfNodes[1] = 0;
                                                                    }
                                                                    CFNumberRef v100 = CFNumberCreate(0, kCFNumberSInt32Type, &outNumberOfNodes[1]);
                                                                    if (v100)
                                                                    {
                                                                      CFNumberRef v101 = v100;
                                                                      if (APReceiverAudioSessionSetProperty(*(void *)(a1 + 24), @"PlatformAudioLatency", (uint64_t)v100))
                                                                      {
                                                                        APSLogErrorAt();
                                                                      }
                                                                      else
                                                                      {
                                                                        int v102 = v3[244];
                                                                        if (v102 <= 50
                                                                          && (v102 != -1
                                                                           || _LogCategory_Initialize()))
                                                                        {
                                                                          LogPrintF();
                                                                        }
                                                                      }
                                                                      CFRelease(v101);
                                                                    }
                                                                    else
                                                                    {
                                                                      APSLogErrorAt();
                                                                    }
                                                                    CFRelease(v97);
                                                                  }
                                                                  else
                                                                  {
                                                                    APSLogErrorAt();
                                                                  }
                                                                  return 0;
                                                                }
                                                                uint64_t v8 = v58;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                goto LABEL_412;
                                              }
                                              uint64_t v8 = v46;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_412:
  APSLogErrorAt();
LABEL_413:
  if (gLogCategory_APReceiverAudioSessionPlatform <= 50
    && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  _MainAudioEnsureTornDown(a1);
  return v8;
}

void APReceiverAudioSessionPlatformFinalize(void *a1)
{
  if (gLogCategory_APReceiverAudioSessionPlatform <= 50
    && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  _MainAudioEnsureTornDown((uint64_t)a1);
  uint64_t v2 = (const void *)a1[7];
  if (v2) {
    CFRelease(v2);
  }

  CFRelease(a1);
}

void _MainAudioEnsureTornDown(uint64_t a1)
{
  if (a1)
  {
    if (*(void *)(a1 + 128))
    {
      if (*(void *)(a1 + 144))
      {
        uint64_t v3 = *(NSObject **)(a1 + 136);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = ___SBufConsumerStop_block_invoke;
        block[3] = &__block_descriptor_40_e5_v8__0l;
        block[4] = a1;
        dispatch_sync(v3, block);
        if (gLogCategory_APReceiverAudioSessionPlatform <= 50
          && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        int v4 = *(NSObject **)(a1 + 144);
        if (v4)
        {
          dispatch_source_cancel(*(dispatch_source_t *)(a1 + 144));
          dispatch_release(v4);
          *(void *)(a1 + 144) = 0;
        }
      }
      uint64_t v5 = *(NSObject **)(a1 + 136);
      if (v5)
      {
        dispatch_release(v5);
        *(void *)(a1 + 136) = 0;
      }
      uint64_t v6 = *(const void **)(a1 + 120);
      if (v6)
      {
        CFRelease(v6);
        *(void *)(a1 + 120) = 0;
      }
      *(void *)(a1 + 128) = 0;
      if (gLogCategory_APReceiverAudioSessionPlatform <= 50
        && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    uint64_t v7 = *(OpaqueAUGraph **)(a1 + 192);
    if (v7)
    {
      LOBYTE(block[0]) = 0;
      AUGraphIsRunning(v7, (Boolean *)block);
      if (LOBYTE(block[0])) {
        AUGraphStop(*(AUGraph *)(a1 + 192));
      }
      LOBYTE(block[0]) = 0;
      AUGraphIsInitialized(*(AUGraph *)(a1 + 192), (Boolean *)block);
      if (LOBYTE(block[0])) {
        AUGraphUninitialize(*(AUGraph *)(a1 + 192));
      }
      LOBYTE(block[0]) = 0;
      AUGraphIsOpen(*(AUGraph *)(a1 + 192), (Boolean *)block);
      if (LOBYTE(block[0])) {
        AUGraphClose(*(AUGraph *)(a1 + 192));
      }
      DisposeAUGraph(*(AUGraph *)(a1 + 192));
      *(void *)(a1 + 192) = 0;
    }
    *(_DWORD *)(a1 + 172) = 0;
    *(void *)(a1 + 176) = 0;
    *(_DWORD *)(a1 + 200) = 0;
    *(void *)(a1 + 208) = 0;
    *(_DWORD *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
    *(_DWORD *)(a1 + 216) = 0;
    *(void *)(a1 + 224) = 0;
    *(unsigned char *)(a1 + 232) = 0;
    uint64_t v8 = *(NSObject **)(a1 + 184);
    if (v8)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 184));
      dispatch_release(v8);
      *(void *)(a1 + 184) = 0;
    }
    *(_DWORD *)(a1 + 72) = 0;
    if (v7
      && gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t _UpdateAVAudioSessionPrefersMultiChannelAudio(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t result = [*(id *)(a1 + 32) setPrefersMultichannelAudio:FigCFEqual() error:&v2];
  if (result)
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionPlatform != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  else if (gLogCategory_APReceiverAudioSessionPlatform <= 60)
  {
    if (gLogCategory_APReceiverAudioSessionPlatform != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

void sub_22B442234(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t _ConfigureAudioUnitMaxFrames(int a1, OpaqueAudioComponentInstance *a2, AudioUnit inUnit, double a4, double a5)
{
  outCFDataRef Data = 0;
  if (a4 <= 0.0 && a5 <= 0.0)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  else
  {
    UInt32 ioDataSize = 4;
    uint64_t Property = AudioUnitGetProperty(inUnit, 0xEu, 0, 0, &outData, &ioDataSize);
    if (Property)
    {
      uint64_t v11 = Property;
      APSLogErrorAt();
    }
    else
    {
      unsigned int v9 = outData;
      if (a4 != a5) {
        unsigned int v9 = (vcvtpd_u64_f64((double)outData * a4 / a5) & 0xFFFFFFE0) + 32;
      }
      inCFDataRef Data = v9;
      if (gLogCategory_APReceiverAudioSessionPlatform <= 30
        && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v10 = AudioUnitSetProperty(a2, 0xEu, 0, 0, &inData, 4u);
      uint64_t v11 = 0;
      if (v10)
      {
        uint64_t v13 = v10;
        APSLogErrorAt();
        return v13;
      }
    }
  }
  return v11;
}

uint64_t _AudioOutputCallBack(uint64_t a1, uint64_t a2, long double *a3)
{
  if (!*(unsigned char *)(a1 + 232)) {
    return 4294960587;
  }
  fmod(*a3, 4294967300.0);
  uint64_t Audio = APReceiverAudioSessionReadAudio(*(void *)(a1 + 24));
  if (Audio) {
    APSLogErrorAt();
  }
  return Audio;
}

uint64_t __APReceiverSBufConsumerPushAudioSBuf_block_invoke(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 40);
  if (v6) {
    uint64_t result = v6(v2, v3);
  }
  else {
    uint64_t result = 4294954514;
  }
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = result;
  return result;
}

uint64_t _APReceiverAudioSessionPlatformGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPReceiverAudioSessionPlatformCFTypeID TypeID = result;
  return result;
}

void _APReceiverAudioSessionPlatformFinalize(uint64_t a1)
{
  if (a1)
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    uint64_t v3 = *(const void **)(a1 + 40);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(a1 + 40) = 0;
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t APReceiverAudioSessionPlatformControl(void *a1, const void *a2)
{
  unsigned int v12 = 0;
  if (!a1) {
    goto LABEL_47;
  }
  CFTypeID v4 = CFGetTypeID(a1);
  if (gAPReceiverAudioSessionInitOnce != -1) {
    dispatch_once_f(&gAPReceiverAudioSessionInitOnce, 0, (dispatch_function_t)_APReceiverAudioSessionGetTypeID);
  }
  if (v4 != gAPReceiverAudioSessionTypeID || !a2)
  {
LABEL_47:
    APSLogErrorAt();
    return -6705;
  }
  uint64_t v5 = a1[27];
  if (!v5)
  {
    APSLogErrorAt();
    return -6718;
  }
  if (CFEqual(a2, @"RASP::FlushAudio")) {
    return v12;
  }
  if (CFEqual(a2, @"RASP::StartAudioIO"))
  {
    _StartAudioIO((CFTypeRef *)v5, 0);
    return 0;
  }
  if (CFEqual(a2, @"RASP::StopAudioIO"))
  {
    _StopAudioIO((CFTypeRef *)v5, 0);
    return 0;
  }
  if (CFEqual(a2, @"RASP::DuckAudio"))
  {
    if (!*(void *)(v5 + 208)) {
      return v12;
    }
    CFDictionaryGetDouble();
    CFDictionaryGetDouble();
    float v8 = v7;
    if (v8 > -144.0 && v8 < 0.0) {
      __exp10f(v8 / 20.0);
    }
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unsigned int v9 = *(NSObject **)(v5 + 184);
    if (v9)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v5 + 184));
      dispatch_release(v9);
      *(void *)(v5 + 184) = 0;
    }
LABEL_42:
    CoreAudioRampParameterStart();
    return v12;
  }
  if (CFEqual(a2, @"RASP::UnduckAudio"))
  {
    if (!*(void *)(v5 + 208)) {
      return v12;
    }
    CFDictionaryGetDouble();
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v10 = *(NSObject **)(v5 + 184);
    if (v10)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v5 + 184));
      dispatch_release(v10);
      *(void *)(v5 + 184) = 0;
    }
    goto LABEL_42;
  }
  if (CFEqual(a2, @"RASP::StartSession"))
  {
    unsigned int v12 = _EnsureAudioOutputStarted(v5);
    if (v12) {
      APSLogErrorAt();
    }
    return v12;
  }
  if (CFEqual(a2, @"RASP::HandleAudioInterruptionBegan"))
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _StopAudioIO((CFTypeRef *)v5, 1);
    return v12;
  }
  if (!CFEqual(a2, @"RASP::HandleAudioInterruptionEnded")) {
    return -6714;
  }
  if (gLogCategory_APReceiverAudioSessionPlatform <= 50
    && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  _StartAudioIO((CFTypeRef *)v5, 1);
  return v12;
}

void _StartAudioIO(CFTypeRef *a1, char a2)
{
  CFRetain(a1);
  CFRetain(a1[2]);
  CFRetain(a1[3]);
  CFTypeID v4 = *((void *)a1[2] + 2);
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 3221225472;
  v5[2] = ___StartAudioIO_block_invoke;
  v5[3] = &__block_descriptor_41_e5_v8__0l;
  v5[4] = a1;
  char v6 = a2;
  dispatch_async(v4, v5);
}

void _StopAudioIO(CFTypeRef *a1, char a2)
{
  CFRetain(a1);
  CFRetain(a1[2]);
  CFRetain(a1[3]);
  CFTypeID v4 = *((void *)a1[2] + 2);
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 3221225472;
  v5[2] = ___StopAudioIO_block_invoke;
  v5[3] = &__block_descriptor_41_e5_v8__0l;
  v5[4] = a1;
  char v6 = a2;
  dispatch_async(v4, v5);
}

void __APReceiverAudioSessionPlatformControl_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 184);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 184));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 184) = 0;
  }
}

void __APReceiverAudioSessionPlatformControl_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 184);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 184));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 184) = 0;
  }
}

uint64_t _EnsureAudioOutputStarted(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 16) + 729)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 70))
  {
    if (!*(unsigned char *)(a1 + 232))
    {
LABEL_4:
      uint64_t result = 0;
      *(unsigned char *)(a1 + 232) = 1;
      return result;
    }
    return 0;
  }
  if (!*(void *)(a1 + 128))
  {
    if (!*(void *)(a1 + 192))
    {
      APSLogErrorAt();
      return 4294960587;
    }
    if (!*(unsigned char *)(a1 + 232) && *(_DWORD *)(a1 + 48) != 103) {
      _StartAudioIO(a1, 0);
    }
    return 0;
  }
  if (*(unsigned char *)(a1 + 232)) {
    return 0;
  }
  if (!*(void *)(a1 + 152))
  {
    double v3 = (double)mach_absolute_time();
    double v4 = *(double *)(a1 + 80) * (v3 / (double)(unint64_t)UpTicksPerSecond());
    *(void *)(a1 + 152) = (unint64_t)v4;
    *(void *)(a1 + 160) = (unint64_t)v4;
    uint64_t v5 = *(NSObject **)(a1 + 144);
    dispatch_time_t v6 = dispatch_time(0, 10000000);
    dispatch_source_set_timer(v5, v6, 0x989680uLL, 0x7A120uLL);
    if (gLogCategory_APReceiverAudioSessionPlatform >= 51) {
      goto LABEL_4;
    }
    if (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
  }
  int v7 = gLogCategory_APReceiverAudioSessionPlatform;
  *(unsigned char *)(a1 + 232) = 1;
  if (v7 > 50) {
    return 0;
  }
  if (v7 != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t APReceiverAudioSessionPlatformSetProperty(void *a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5)
{
  unsigned int v21 = 0;
  if (!a1) {
    goto LABEL_77;
  }
  CFTypeID v8 = CFGetTypeID(a1);
  if (gAPReceiverAudioSessionInitOnce != -1) {
    dispatch_once_f(&gAPReceiverAudioSessionInitOnce, 0, (dispatch_function_t)_APReceiverAudioSessionGetTypeID);
  }
  if (v8 != gAPReceiverAudioSessionTypeID || !a3)
  {
LABEL_77:
    APSLogErrorAt();
    return -6705;
  }
  uint64_t v9 = a1[27];
  if (!v9)
  {
    APSLogErrorAt();
    return -6718;
  }
  if (CFEqual(a3, @"RASP::AudioMode"))
  {
    _UpdateAVAudioSessionAudioMode_5199(v9, a5);
    return v21;
  }
  if (CFEqual(a3, @"RASP::PrefersMultiChannel"))
  {
    _UpdateAVAudioSessionPrefersMultiChannelAudio(v9);
    return v21;
  }
  if (!CFEqual(a3, @"RASP::PreferredAudioFormat"))
  {
    if (CFEqual(a3, @"RASP::Skew"))
    {
      if (!*(void *)(v9 + 248)) {
        return v21;
      }
      int v11 = CFGetInt64();
      unsigned int v21 = AudioUnitSetParameter(*(AudioUnit *)(v9 + 248), 0, 0, 0, (float)((float)v11 + (float)*(double *)(v9 + 80))/ (float)*(double *)(v9 + 80), 0);
      int v12 = gLogCategory_APReceiverAudioSessionPlatform;
      if (gLogCategory_APReceiverAudioSessionPlatform > 20)
      {
        BOOL v13 = 0;
      }
      else
      {
        if (gLogCategory_APReceiverAudioSessionPlatform != -1)
        {
LABEL_38:
          if (v12 != -1 || _LogCategory_Initialize()) {
            goto LABEL_58;
          }
          return v21;
        }
        BOOL v13 = _LogCategory_Initialize() != 0;
        int v12 = gLogCategory_APReceiverAudioSessionPlatform;
      }
      if (v11 < -5) {
        BOOL v13 = 1;
      }
      if (v11 > 5) {
        BOOL v13 = 1;
      }
      if (!v13 || v12 > 40) {
        return v21;
      }
      goto LABEL_38;
    }
    if (CFEqual(a3, @"RASP::VolumeLinear"))
    {
      CFGetDouble();
      float v15 = v14;
      if (gLogCategory_APReceiverAudioSessionPlatform <= 50
        && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (!*(unsigned char *)(v9 + 70))
      {
        uint64_t v19 = *(OpaqueAudioComponentInstance **)(v9 + 208);
        if (!v19 || !*(unsigned char *)(v9 + 68)) {
          return v21;
        }
        unsigned int v21 = AudioUnitSetParameter(v19, 0, 2u, 0, v15, 0);
        if (!v21)
        {
          *(float *)(v9 + 236) = v15;
          return v21;
        }
        goto LABEL_81;
      }
      goto LABEL_82;
    }
    if (CFEqual(a3, @"RASP::MuteStream"))
    {
      uint64_t v16 = CFGetInt64();
      AudioUnitParameterValue v17 = 0.0;
      if (!v16) {
        AudioUnitParameterValue v17 = *(float *)(v9 + 236);
      }
      if (gLogCategory_APReceiverAudioSessionPlatform <= 50
        && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (!*(unsigned char *)(v9 + 70))
      {
        uint64_t v20 = *(OpaqueAudioComponentInstance **)(v9 + 208);
        if (!v20) {
          return v21;
        }
        if (!*(unsigned char *)(v9 + 68)) {
          return v21;
        }
        unsigned int v21 = AudioUnitSetParameter(v20, 0, 2u, 0, v17, 0);
        if (!v21) {
          return v21;
        }
LABEL_81:
        APSLogErrorAt();
        return v21;
      }
LABEL_82:
      APSLogErrorAt();
      return APSSignalErrorAt();
    }
    return -6714;
  }
  uint64_t v22 = 0;
  if (!IsAppleTV()) {
    return v21;
  }
  if (FigCFDictionaryGetInt64IfPresent())
  {
    if ([*(id *)(v9 + 32) setPreferredOutputNumberOfChannels:0 error:&v22])
    {
      if (gLogCategory_APReceiverAudioSessionPlatform <= 50
        && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
      {
LABEL_26:
        LogPrintF();
      }
    }
    else if (gLogCategory_APReceiverAudioSessionPlatform <= 60 {
           && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    }
    {
      goto LABEL_26;
    }
  }
  if (!FigCFDictionaryGetInt64IfPresent()) {
    return v21;
  }
  if ([*(id *)(v9 + 32) setPreferredHardwareFormat:0 error:&v22])
  {
    if (gLogCategory_APReceiverAudioSessionPlatform <= 50
      && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
    {
LABEL_58:
      LogPrintF();
    }
  }
  else if (gLogCategory_APReceiverAudioSessionPlatform <= 60 {
         && (gLogCategory_APReceiverAudioSessionPlatform != -1 || _LogCategory_Initialize()))
  }
  {
    goto LABEL_58;
  }
  return v21;
}

uint64_t __APAdvertiserRapportManagerGetTypeID_block_invoke()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPAdvertiserRapportManagerCFTypeID TypeID = result;
  return result;
}

void _APAdvertiserRapportManagerFinalize(void *a1)
{
  if (gLogCategory_APAdvertiserRapportManager <= 50
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = (const void *)a1[6];
  if (v2)
  {
    CFRelease(v2);
    a1[6] = 0;
  }
  double v3 = a1[5];
  if (v3)
  {
    dispatch_release(v3);
    a1[5] = 0;
  }
  double v4 = a1[4];
  if (v4)
  {
    dispatch_release(v4);
    a1[4] = 0;
  }
}

void __APAdvertiserRapportManagerCreate_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(unsigned char *)(v2 + 81) = APSSettingsGetInt64() != 0;
  APAdvertiserRapportManager_update(v2);
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
}

void APAdvertiserRapportManager_update(uint64_t a1)
{
  if (gLogCategory_APAdvertiserRapportManager <= 20
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    if (*(unsigned char *)(a1 + 81)) {
      uint64_t v2 = "yes";
    }
    else {
      uint64_t v2 = "no";
    }
    CFTypeID v8 = v2;
    uint64_t v9 = *(unsigned __int16 *)(a1 + 56);
    LogPrintF();
  }
  if (!*(unsigned char *)(a1 + 81))
  {
LABEL_11:
    if (gLogCategory_APAdvertiserRapportManager <= 40
      && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    objc_msgSend(*(id *)(a1 + 64), "deregisterRequestID:", @"com.apple.airplay.discovery.getinfo", v8, v9);
    [*(id *)(a1 + 64) invalidate];

    *(void *)(a1 + 64) = 0;
    [*(id *)(a1 + 72) invalidate];

    *(void *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 80) = 0;
    return;
  }
  if (*(_WORD *)(a1 + 56) != 1)
  {
    if (*(_WORD *)(a1 + 56)) {
      return;
    }
    goto LABEL_11;
  }
  if (!*(unsigned char *)(a1 + 80))
  {
    if (gLogCategory_APAdvertiserRapportManager <= 40
      && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    id v3 = objc_alloc_init(MEMORY[0x263F62BE0]);
    *(void *)(a1 + 72) = v3;
    objc_msgSend(v3, "setControlFlags:", objc_msgSend(v3, "controlFlags") | 0x1000);
    objc_msgSend(*(id *)(a1 + 72), "setControlFlags:", objc_msgSend(*(id *)(a1 + 72), "controlFlags") | 2);
    [*(id *)(a1 + 72) setServiceType:@"com.apple.airplay.discovery.service"];
    [*(id *)(a1 + 72) activate];
    id v4 = objc_alloc_init(MEMORY[0x263F62B70]);
    *(void *)(a1 + 64) = v4;
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      objc_msgSend(v4, "setControlFlags:", objc_msgSend(v4, "controlFlags") | 0x1000);
      dispatch_time_t v6 = *(void **)(a1 + 64);
      v11[0] = MEMORY[0x263EF8330];
      v11[1] = 3221225472;
      v11[2] = __APAdvertiserRapportManager_startAdvertising_block_invoke;
      v11[3] = &__block_descriptor_40_e88_v32__0__NSDictionary_8__NSDictionary_16___v____NSDictionary___NSDictionary___NSError__24l;
      v11[4] = v5;
      [v6 registerRequestID:@"com.apple.airplay.discovery.getinfo" options:0 handler:v11];
      int v7 = *(void **)(a1 + 64);
      v10[0] = MEMORY[0x263EF8330];
      v10[1] = 3221225472;
      v10[2] = __APAdvertiserRapportManager_startAdvertising_block_invoke_3;
      v10[3] = &__block_descriptor_40_e17_v16__0__NSError_8l;
      v10[4] = v5;
      [v7 activateWithCompletion:v10];
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

void sub_22B4440D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t _APAdvertiserRapportManager_lookupAndRetainActiveManagerWithKey(uint64_t a1)
{
  if (_APAdvertiserRapportManager_getActiveManagers_once != -1) {
    dispatch_once(&_APAdvertiserRapportManager_getActiveManagers_once, &__block_literal_global_10);
  }
  uint64_t v2 = _APAdvertiserRapportManager_getActiveManagers_table;

  return MEMORY[0x270EE8140](v2, a1);
}

void __APAdvertiserRapportManagerInvalidate_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  *(unsigned char *)(v1 + 24) = 1;
  APAdvertiserRapportManager_stop(v1);
  if (*(void *)(v1 + 16))
  {
    if (_APAdvertiserRapportManager_getActiveManagers_once != -1) {
      dispatch_once(&_APAdvertiserRapportManager_getActiveManagers_once, &__block_literal_global_10);
    }
    FigCFWeakReferenceTableRemoveValue();
    *(void *)(v1 + 16) = 0;
  }
}

void APAdvertiserRapportManager_stop(uint64_t a1)
{
  if (gLogCategory_APAdvertiserRapportManager <= 40
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_WORD *)(a1 + 56))
  {
    *(_WORD *)(a1 + 56) = 0;
    APAdvertiserRapportManager_update(a1);
  }
}

void __APAdvertiserRapportManagerSetProperty_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = *(const void **)(a1 + 56);
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"deviceID"))
  {
    if (v3 && (CFTypeID v4 = CFGetTypeID(v3), v4 == CFStringGetTypeID()))
    {
      uint64_t v5 = *(const void **)(v2 + 48);
      *(void *)(v2 + 48) = v3;
      CFRetain(v3);
      if (v5) {
        CFRelease(v5);
      }
      int v6 = 0;
    }
    else
    {
      APSLogErrorAt();
      int v6 = -6705;
    }
  }
  else
  {
    int v6 = -72411;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v6;
}

uint64_t APAdvertiserRapportManagerSetMode(uint64_t a1, __int16 a2)
{
  uint64_t v7 = 0;
  CFTypeID v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v10 = 0;
  uint64_t v2 = *(NSObject **)(a1 + 40);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APAdvertiserRapportManagerSetMode_block_invoke;
  block[3] = &unk_264895E90;
  block[4] = &v7;
  void block[5] = a1;
  __int16 v6 = a2;
  dispatch_sync(v2, block);
  uint64_t v3 = *((unsigned int *)v8 + 6);
  _Block_object_dispose(&v7, 8);
  return v3;
}

void __APAdvertiserRapportManagerSetMode_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  int v3 = *(unsigned __int16 *)(a1 + 48);
  int v4 = *(unsigned __int16 *)(v2 + 56);
  if (v4 == v3) {
    goto LABEL_18;
  }
  if (gLogCategory_APAdvertiserRapportManager > 40) {
    goto LABEL_6;
  }
  if (gLogCategory_APAdvertiserRapportManager != -1) {
    goto LABEL_4;
  }
  if (_LogCategory_Initialize())
  {
    int v4 = *(unsigned __int16 *)(v2 + 56);
LABEL_4:
    APAdvertiserRapportManager_stringForMode(v4);
    APAdvertiserRapportManager_stringForMode(v3);
    LogPrintF();
  }
LABEL_6:
  if (v3 == 1)
  {
    if (gLogCategory_APAdvertiserRapportManager <= 40
      && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(_WORD *)(v2 + 56) == 1)
    {
      APSLogErrorAt();
    }
    else
    {
      *(_WORD *)(v2 + 56) = 1;
      APAdvertiserRapportManager_update(v2);
    }
    goto LABEL_18;
  }
  if (!v3)
  {
    APAdvertiserRapportManager_stop(v2);
LABEL_18:
    int v5 = 0;
    goto LABEL_21;
  }
  if (gLogCategory_APAdvertiserRapportManager <= 90
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v5 = -72413;
LABEL_21:
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v5;
}

const char *APAdvertiserRapportManager_stringForMode(int a1)
{
  if (!a1) {
    return "Disabled";
  }
  if (a1 == 1) {
    return "Enabled";
  }
  if (gLogCategory_APAdvertiserRapportManager <= 60
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return "Unknown ";
}

uint64_t __APAdvertiserRapportManagerGetMode_block_invoke(uint64_t result)
{
  **(_WORD **)(result + 48) = *(_WORD *)(*(void *)(result + 40) + 56);
  *(_DWORD *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

uint64_t __APAdvertiserRapportManagerDebugShow_block_invoke(uint64_t a1)
{
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  uint64_t result = DataBuffer_AppendF();
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  return result;
}

void sub_22B4453E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22B4457F4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22B447FB4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __APAdvertiserBTLEManagerGetTypeID_block_invoke()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPAdvertiserBTLEManagerCFTypeID TypeID = result;
  return result;
}

void _APAdvertiserBTLEManagerFinalize(uint64_t a1)
{
}

uint64_t __APAdvertiserBTLEManagerInvalidate_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

uint64_t APAdvertiserBTLEManagerSetProperty(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = 0;
  int v11 = &v10;
  uint64_t v12 = 0x2020000000;
  int v13 = 0;
  __int16 v6 = [a1 internalQueue];
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = __APAdvertiserBTLEManagerSetProperty_block_invoke;
  v9[3] = &unk_264895FD8;
  v9[4] = a1;
  void v9[5] = &v10;
  v9[6] = a2;
  v9[7] = a3;
  dispatch_sync(v6, v9);
  uint64_t v7 = *((unsigned int *)v11 + 6);
  _Block_object_dispose(&v10, 8);
  return v7;
}

void sub_22B4482CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __APAdvertiserBTLEManagerSetProperty_block_invoke(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) setProperty:*(void *)(a1 + 48) withValue:*(void *)(a1 + 56)];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t APAdvertiserBTLEManagerSetBTLEMode(void *a1, __int16 a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x2020000000;
  int v12 = 0;
  int v4 = [a1 internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APAdvertiserBTLEManagerSetBTLEMode_block_invoke;
  block[3] = &unk_264896000;
  block[4] = a1;
  void block[5] = &v9;
  __int16 v8 = a2;
  dispatch_sync(v4, block);
  uint64_t v5 = *((unsigned int *)v10 + 6);
  _Block_object_dispose(&v9, 8);
  return v5;
}

void sub_22B4483D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __APAdvertiserBTLEManagerSetBTLEMode_block_invoke(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) setBTLEMode:*(unsigned __int16 *)(a1 + 48)];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t __APAdvertiserBTLEManagerGetBTLEMode_block_invoke(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) getBTLEMode:*(void *)(a1 + 48)];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t __APAdvertiserBTLEManagerRestartAdvertising_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) restartAdvertisingIfNecessary];
}

uint64_t __APAdvertiserBTLEManagerDebugShow_block_invoke(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) showDebugWithDataBuffer:*(void *)(a1 + 48) verbose:*(_DWORD *)(a1 + 56) != 0];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t __APAdvertiserBTLEManagerUpdatePreferences_block_invoke(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) updatePreferences];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t APReceiverScreenSinkGetClassID()
{
  if (APReceiverScreenSinkGetClassID_once != -1) {
    dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_5652);
  }
  return APReceiverScreenSinkGetClassID_classID;
}

uint64_t __APReceiverScreenSinkGetClassID_block_invoke()
{
  uint64_t ClassID = CMBaseGetClassID();

  return MEMORY[0x270EE8008](&APReceiverScreenSinkGetClassID_classDesc, ClassID, 1, &APReceiverScreenSinkGetClassID_classID);
}

uint64_t APReceiverScreenSinkGetTypeID()
{
  if (APReceiverScreenSinkGetClassID_once != -1) {
    dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_5652);
  }

  return CMBaseClassGetCFTypeID();
}

void audioSession_handleMediaDataControlRequest_5805(uint64_t a1, uint64_t a2, int a3, uint64_t a4, const void *a5, uint64_t a6)
{
  int v38 = 0;
  uint64_t v11 = *(void ***)(a6 + 40);
  if (gLogCategory_APReceiverAudioSessionBuffered <= 50
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFMutableDictionaryRef v13 = Mutable;
    if (a3 == 1634562925)
    {
      CFStringGetTypeID();
      Typeduint64_t Value = CFDictionaryGetTypedValue();
      int v38 = APReceiverAudioSessionPlatformSetProperty(*v11, v18, @"RASP::AudioMode", v19, TypedValue);
      if (v38) {
        goto LABEL_41;
      }
      goto LABEL_34;
    }
    if (a3 != 1936875892)
    {
      if (a3 != 1718839394)
      {
        int v23 = -6714;
LABEL_21:
        int v38 = v23;
        goto LABEL_34;
      }
      if (a5)
      {
        CFTypeID v14 = CFGetTypeID(a5);
        if (v14 == CFDictionaryGetTypeID())
        {
          if (CFDictionaryContainsKey((CFDictionaryRef)a5, @"flushFromTS")
            && CFDictionaryContainsKey((CFDictionaryRef)a5, @"flushFromSeq"))
          {
            CFDictionaryGetInt64Ranged();
            int Int64Ranged = CFDictionaryGetInt64Ranged();
            int v16 = 1;
          }
          else
          {
            int Int64Ranged = 0;
            int v16 = 0;
          }
          CFDictionaryGetInt64Ranged();
          int v24 = CFDictionaryGetInt64Ranged();
          APSAudioTransportTimeMakeWithRTPTime();
          APSAudioTransportTimeMakeWithRTPTime();
          int v38 = APReceiverAudioSessionBufferedFlushAudio((uint64_t)v11, v16, v37, Int64Ranged, v36, v24, 0);
          if (!v38) {
            goto LABEL_34;
          }
          goto LABEL_41;
        }
      }
LABEL_40:
      APSLogErrorAt();
      int v23 = -6756;
      goto LABEL_21;
    }
    long long v30 = *MEMORY[0x263F249C0];
    *(_OWORD *)uint64_t v35 = *MEMORY[0x263F249C0];
    long long v29 = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
    *(_OWORD *)&v35[12] = v29;
    if (!a5) {
      goto LABEL_40;
    }
    CFTypeID v20 = CFGetTypeID(a5);
    if (v20 != CFDictionaryGetTypeID()) {
      goto LABEL_40;
    }
    unsigned int v21 = CFDictionaryGetInt64Ranged();
    uint64_t v31 = a4;
    if (v21 == 1)
    {
      CFDictionaryGetInt64Ranged();
      int v22 = CFDictionaryContainsKey((CFDictionaryRef)a5, @"firstAudibleRTPTime");
      CFDictionaryGetInt64Ranged();
      int v26 = CFDictionaryGetInt64Ranged();
      uint64_t Int64 = CFDictionaryGetInt64();
      uint64_t v28 = CFDictionaryGetInt64();
      int v25 = CFDictionaryGetInt64Ranged();
      APSAudioTransportTimeMakeWithRTPTime();
      if (v22)
      {
        APSAudioTransportTimeMakeWithRTPTime();
        goto LABEL_29;
      }
    }
    else
    {
      APSAudioTransportTimeMakeWithRTPTime();
      int v25 = 0;
      int v26 = 0;
      uint64_t Int64 = 0;
      uint64_t v28 = 0;
    }
    v33[0] = v30;
    *(_OWORD *)((char *)v33 + 12) = v29;
LABEL_29:
    *(void *)float v32 = v28;
    *(void *)&v32[8] = Int64;
    *(_DWORD *)&v32[16] = v26;
    *(_DWORD *)&v32[20] = v25;
    int v38 = APReceiverAudioSessionBufferedSetRateAndAnchorTime((uint64_t)v11, v21, v34, (uint64_t)v33, (long long *)v32, v35);
    if (v38)
    {
      CFDictionarySetInt64();
      a4 = v31;
    }
    else
    {
      a4 = v31;
      if (v21) {
        goto LABEL_34;
      }
      *(_OWORD *)float v32 = *(_OWORD *)v35;
      *(_OWORD *)&v32[12] = *(_OWORD *)&v35[12];
      if (APSAudioTransportTimeIsValid()) {
        CFDictionarySetInt64();
      }
    }
    if (v38) {
LABEL_41:
    }
      APSLogErrorAt();
LABEL_34:
    APMediaDataControlServerSendResponse(a1, a2, a4, (uint64_t)v13, v38);
    CFRelease(v13);
    return;
  }
  APSLogErrorAt();

  APMediaDataControlServerSendResponse(a1, a2, a4, 0, -6728);
}

uint64_t APReceiverAudioSessionBufferedFlushAudio(uint64_t a1, int a2, _DWORD *a3, int a4, _DWORD *a5, int a6, _OWORD *a7)
{
  uint64_t v11 = 4294895145;
  int v12 = a3[1];
  int v13 = a5[1];
  int v25 = 0;
  *(_OWORD *)int v24 = *MEMORY[0x263F249C0];
  *(_OWORD *)&v24[12] = *(_OWORD *)(MEMORY[0x263F249C0] + 12);
  if (!a1)
  {
    uint64_t v11 = 4294895144;
LABEL_36:
    APSLogErrorAt();
LABEL_28:
    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v11;
  }
  if (*a5 != 1 || a2 && *a3 != 1) {
    goto LABEL_36;
  }
  float v15 = (char *)malloc_type_calloc(1uLL, 0x20uLL, 0x102004002C94847uLL);
  if (!v15)
  {
    uint64_t v11 = 4294895146;
    goto LABEL_36;
  }
  uint64_t v16 = (uint64_t)v15;
  v15[12] = a2;
  *(_WORD *)(v15 + 13) = 0;
  v15[15] = 0;
  *((_DWORD *)v15 + 4) = a4;
  *((_DWORD *)v15 + 5) = v12;
  *((_DWORD *)v15 + 6) = a6;
  *((_DWORD *)v15 + 7) = v13;
  if (gLogCategory_APReceiverAudioSessionBuffered <= 50
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
  AudioUnitParameterValue v17 = *(uint64_t **)(a1 + 680);
  if (a2 && v17)
  {
    int v18 = 0;
    do
    {
      uint64_t v19 = v17;
      AudioUnitParameterValue v17 = (uint64_t *)*v17;
      ++v18;
    }
    while (v17);
    int v20 = 0;
    *uint64_t v19 = v16;
  }
  else
  {
    *(void *)(a1 + 680) = v16;
    uint64_t v21 = audioSession_processFlushQueue(a1, &v25);
    if (v21)
    {
      uint64_t v11 = v21;
      APSLogErrorAt();
      int v20 = 0;
      goto LABEL_19;
    }
    APSAudioTransportTimeMakeWithRTPTime();
    int v20 = 1;
  }
  uint64_t v11 = 0;
  if (a7)
  {
    *a7 = *(_OWORD *)v24;
    *(_OWORD *)((char *)a7 + 12) = *(_OWORD *)&v24[12];
  }
LABEL_19:
  audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(a1 + 1128));
  if (v17)
  {
    do
    {
      int v22 = (uint64_t *)*v17;
      free(v17);
      AudioUnitParameterValue v17 = v22;
    }
    while (v22);
  }
  if (gLogCategory_APReceiverAudioSessionBuffered <= 50
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v20) {
    audioSession_logFlush(a1, v11, v16);
  }
  if (v11) {
    goto LABEL_28;
  }
  return v11;
}

uint64_t APReceiverAudioSessionBufferedSetRateAndAnchorTime(uint64_t a1, unsigned int a2, _DWORD *a3, uint64_t a4, long long *a5, _OWORD *a6)
{
  uint64_t v45 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    BOOL v33 = 0;
    uint64_t v25 = 4294895144;
    goto LABEL_51;
  }
  if (!*(void *)(a1 + 8))
  {
    uint64_t v25 = 4294895143;
LABEL_61:
    APSLogErrorAt();
    BOOL v33 = 0;
    goto LABEL_51;
  }
  if (*a3 == 1)
  {
    if (*(_DWORD *)a4 == 1
      || (*(_OWORD *)uint64_t v44 = *(_OWORD *)a4,
          *(_OWORD *)&v44[12] = *(_OWORD *)(a4 + 12),
          !APSAudioTransportTimeIsValid()))
    {
      uint64_t v12 = FigCFWeakReferenceHolderCopyReferencedObject();
      if (v12)
      {
        uint64_t v14 = v12;
        float v15 = &unk_268402000;
        if (gLogCategory_APReceiverAudioSessionBuffered <= 50
          && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
        {
          *(_OWORD *)uint64_t v44 = *(_OWORD *)a4;
          *(_OWORD *)&v44[12] = *(_OWORD *)(a4 + 12);
          APSAudioTransportTimeIsValid();
          APSGetFBOPropertyInt64();
          float v15 = (_DWORD *)&unk_268402000;
          LogPrintF();
        }
        if (a2 >= 2)
        {
          APSLogErrorAt();
          int v39 = v15[328];
          if (v39 <= 90 && (v39 != -1 || _LogCategory_Initialize())) {
            LogPrintF();
          }
          BOOL v33 = 0;
          uint64_t v25 = 4294960591;
          goto LABEL_50;
        }
        if (a2 != 1)
        {
LABEL_26:
          audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
          *(unsigned char *)(a1 + 712) = 0;
          *(unsigned char *)(a1 + 724) = 0;
          *(_DWORD *)(a1 + 880) = a2;
          int v23 = *(void **)a1;
          if (a2)
          {
            uint64_t v24 = APReceiverAudioSessionPlatformControl(v23, @"RASP::StartAudioIO");
            if (v24)
            {
              uint64_t v25 = v24;
LABEL_68:
              APSLogErrorAt();
              BOOL v33 = 0;
LABEL_45:
              audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(a1 + 1128));
LABEL_50:
              CFRelease((CFTypeRef)v14);
              goto LABEL_51;
            }
          }
          else
          {
            uint64_t v26 = APReceiverAudioSessionPlatformControl(v23, @"RASP::FlushAudio");
            if (v26)
            {
              uint64_t v25 = v26;
              goto LABEL_68;
            }
            uint64_t v27 = APReceiverAudioSessionPlatformControl(*(void **)a1, @"RASP::StopAudioIO");
            if (v27)
            {
              uint64_t v25 = v27;
              goto LABEL_68;
            }
          }
          uint64_t v28 = *(OpaqueAudioConverter **)(a1 + 728);
          if (v28) {
            uint64_t v25 = AudioConverterReset(v28);
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t v29 = v45;
          *(void *)(a1 + 888) = v45;
          uint64_t v30 = *((void *)a5 + 2);
          *(_OWORD *)(a1 + 896) = *a5;
          *(void *)(a1 + 912) = v30;
          *(_DWORD *)(a1 + 920) = a3[1];
          *(void *)(a1 + 928) = 0;
          *(void *)(a1 + 936) = v29;
          *(_DWORD *)(a1 + 944) = 0;
          long long v31 = *a5;
          *(void *)(a1 + 968) = *((void *)a5 + 2);
          *(_OWORD *)(a1 + 952) = v31;
          *(_DWORD *)(a1 + 976) = a3[1];
          *(void *)(a1 + 984) = 0;
          *(_DWORD *)(a1 + 1000) = *(_DWORD *)(a4 + 4);
          *(_OWORD *)uint64_t v44 = *(_OWORD *)a4;
          *(_OWORD *)&v44[12] = *(_OWORD *)(a4 + 12);
          *(unsigned char *)(a1 + 1004) = APSAudioTransportTimeIsValid();
          *(unsigned char *)(a1 + 872) = 1;
          *(_DWORD *)(a1 + 1016) = 0;
          *(void *)(a1 + 992) = 0;
          *(void *)(a1 + 1024) = 0;
          *(_DWORD *)(a1 + 1032) = 0;
          float v32 = *(void **)(a1 + 584);
          if (*v32) {
            BOOL v33 = *v32 != (void)v32;
          }
          else {
            BOOL v33 = 0;
          }
          int v34 = v15[328];
          if (v34 <= 50 && (v34 != -1 || _LogCategory_Initialize())) {
            LogPrintF();
          }
          goto LABEL_45;
        }
        if (*(unsigned char *)(v14 + 728))
        {
          int v16 = v15[328];
          if (v16 <= 50 && (v16 != -1 || _LogCategory_Initialize())) {
            LogPrintF();
          }
          BOOL v33 = 0;
          uint64_t v25 = 4294960587;
          goto LABEL_50;
        }
        if (*(void *)(a1 + 40))
        {
          AudioUnitParameterValue v17 = *(NSObject **)(v14 + 16);
          block[0] = MEMORY[0x263EF8330];
          block[1] = 0x40000000;
          block[2] = __APReceiverAudioSessionBufferedSetRateAndAnchorTime_block_invoke;
          block[3] = &__block_descriptor_tmp_5838;
          block[4] = v14;
          void block[5] = a1;
          dispatch_sync(v17, block);
        }
        else
        {
          AirPlayReceiverSessionControl(v14, v13, @"handleMediaAudioResumedForSession", *(__CFString **)(a1 + 32), 0, 0);
        }
        uint64_t v18 = *(void *)(a1 + 1144);
        long long v41 = *a5;
        uint64_t v42 = *((void *)a5 + 2);
        uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v19) {
          uint64_t v20 = v19;
        }
        else {
          uint64_t v20 = 0;
        }
        uint64_t v21 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t *))(v20 + 24);
        if (v21)
        {
          *(_OWORD *)uint64_t v44 = v41;
          *(void *)&v44[16] = v42;
          uint64_t v22 = v21(v18, v44, &v45);
          if (!v22)
          {
            if (APSGetFBOPropertyInt64()) {
              goto LABEL_26;
            }
            uint64_t v25 = 4294895143;
            APSLogErrorAt();
            int v40 = v15[328];
            if (v40 > 90 || v40 == -1 && !_LogCategory_Initialize())
            {
LABEL_49:
              BOOL v33 = 0;
              goto LABEL_50;
            }
LABEL_43:
            LogPrintF();
            goto LABEL_49;
          }
          uint64_t v25 = v22;
        }
        else
        {
          uint64_t v25 = 4294954514;
        }
        APSLogErrorAt();
        int v35 = v15[328];
        if (v35 > 90 || v35 == -1 && !_LogCategory_Initialize()) {
          goto LABEL_49;
        }
        goto LABEL_43;
      }
      uint64_t v25 = 4294895143;
      goto LABEL_61;
    }
  }
  APSLogErrorAt();
  BOOL v33 = 0;
  uint64_t v25 = 4294895145;
LABEL_51:
  if (a6)
  {
    if (v33)
    {
      APSAudioTransportTimeMakeWithRTPTime();
      *a6 = *(_OWORD *)v44;
      long long v36 = *(_OWORD *)&v44[12];
    }
    else
    {
      uint64_t v37 = MEMORY[0x263F249C0];
      *a6 = *MEMORY[0x263F249C0];
      long long v36 = *(_OWORD *)(v37 + 12);
    }
    *(_OWORD *)((char *)a6 + 12) = v36;
  }
  return v25;
}

uint64_t __APReceiverAudioSessionBufferedSetRateAndAnchorTime_block_invoke(uint64_t a1, int a2)
{
  return AirPlayReceiverSessionControl(*(void *)(a1 + 32), a2, @"handleMediaAudioResumedForSession", *(__CFString **)(*(void *)(a1 + 40) + 32), 0, 0);
}

uint64_t audioSession_sessionLock_5842(pthread_mutex_t *a1)
{
  if (!a1 || (uint64_t result = pthread_mutex_lock(a1), v1 = vars8, result))
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t audioSession_sessionUnlock_5844(pthread_mutex_t *a1)
{
  if (!a1 || (uint64_t result = pthread_mutex_unlock(a1), v1 = vars8, result))
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t audioSession_processFlushQueue(uint64_t a1, _DWORD *a2)
{
  uint64_t v2 = *(void *)(a1 + 680);
  if (v2 && !*(unsigned char *)(v2 + 8) && !*(unsigned char *)(v2 + 9))
  {
    if (*(unsigned char *)(v2 + 12))
    {
      int v7 = *(_DWORD *)(v2 + 16);
      int v8 = *(_DWORD *)(v2 + 20);
      int v9 = *(_DWORD *)(v2 + 24);
      if (gLogCategory_APReceiverAudioSessionBuffered <= 30
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (*(void *)(**(void **)(a1 + 584) + 16)
        && gLogCategory_APReceiverAudioSessionBuffered <= 30
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(void *)(a1 + 696) = mach_absolute_time();
      uint64_t v12 = *(void **)(a1 + 584);
      int v13 = (void *)*v12;
      if ((void *)*v12 != v12)
      {
        int v14 = 0;
        do
        {
          float v15 = (void *)*v13;
          int v16 = *((_DWORD *)v13 + 15);
          if (((v7 - v16) & 0x800000) != 0 || ((v16 ^ v7) & 0xFFFFFF) == 0)
          {
            int v17 = gLogCategory_APReceiverAudioSessionBuffered;
            if (!v14)
            {
              if (gLogCategory_APReceiverAudioSessionBuffered <= 30
                && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              uint64_t v18 = APSContiguousAllocatorRelinquishBlockFromAddress();
              if (v18) {
                goto LABEL_92;
              }
              int v17 = gLogCategory_APReceiverAudioSessionBuffered;
            }
            if (((v9 - v16) & 0x800000) != 0 || ((v16 ^ v9) & 0xFFFFFF) == 0)
            {
              if (v17 <= 40 && (v17 != -1 || _LogCategory_Initialize())) {
                LogPrintF();
              }
              break;
            }
            if (v17 <= 10 && (v17 != -1 || _LogCategory_Initialize())) {
              LogPrintF();
            }
            v13[5] = 0;
            v13[6] = 0;
            v13[4] = 0;
            uint64_t v19 = *v13;
            *(void *)(v19 + 8) = v13[1];
            *(void *)v13[1] = v19;
            *int v13 = *(void *)(a1 + 592);
            *(void *)(a1 + 592) = v13;
            --*(_DWORD *)(a1 + 600);
            if (*(void *)(a1 + 480) <= (unint64_t)APSContiguousAllocatorGetNextAvailableBlockSize()) {
              audioSession_resumeNetworkReads(a1);
            }
            int v14 = 1;
          }
          else if (*(_DWORD *)(v13[2] + 4) - v8 >= 0 {
                 && gLogCategory_APReceiverAudioSessionBuffered <= 30
          }
                 && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v13 = v15;
        }
        while (v15 != v12);
      }
      if (a2) {
        *a2 = *(_DWORD *)(a1 + 716);
      }
      goto LABEL_91;
    }
    int v11 = *(_DWORD *)(v2 + 24);
    int v10 = *(_DWORD *)(v2 + 28);
    if (gLogCategory_APReceiverAudioSessionBuffered <= 30
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(void *)(**(void **)(a1 + 584) + 16)
      && gLogCategory_APReceiverAudioSessionBuffered <= 30
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APReceiverAudioSessionPlatformControl(*(void **)a1, @"RASP::FlushAudio");
    *(unsigned char *)(a1 + 712) = 0;
    *(_DWORD *)(a1 + 808) = 0;
    uint64_t v20 = *(OpaqueAudioConverter **)(a1 + 728);
    if (v20) {
      uint64_t v3 = AudioConverterReset(v20);
    }
    else {
      uint64_t v3 = 0;
    }
    *(_DWORD *)(a1 + 880) = 0;
    *(_DWORD *)(a1 + 1000) = 0;
    *(unsigned char *)(a1 + 1004) = 0;
    *(void *)(a1 + 696) = mach_absolute_time();
    uint64_t v21 = *(void **)(a1 + 584);
    uint64_t v22 = (void *)*v21;
    if ((void *)*v21 != v21)
    {
      int v23 = *((_DWORD *)v22 + 15);
      if (((v11 - v23) & 0x800000) == 0 && ((v23 ^ v11) & 0xFFFFFF) != 0)
      {
        while (1)
        {
          uint64_t v24 = *v22;
          if (gLogCategory_APReceiverAudioSessionBuffered <= 10
            && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (*(_DWORD *)(v22[2] + 4) - v10 >= 0
            && gLogCategory_APReceiverAudioSessionBuffered <= 30
            && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v18 = APSContiguousAllocatorRelinquishBlock();
          if (v18) {
            break;
          }
          v22[5] = 0;
          v22[6] = 0;
          v22[4] = 0;
          uint64_t v25 = *v22;
          *(void *)(v25 + 8) = v22[1];
          *(void *)v22[1] = v25;
          *uint64_t v22 = *(void *)(a1 + 592);
          *(void *)(a1 + 592) = v22;
          --*(_DWORD *)(a1 + 600);
          if (*(void *)(a1 + 480) <= (unint64_t)APSContiguousAllocatorGetNextAvailableBlockSize()) {
            audioSession_resumeNetworkReads(a1);
          }
          if ((void *)v24 == v21)
          {
            uint64_t v3 = 0;
            goto LABEL_84;
          }
          uint64_t v3 = 0;
          int v26 = *(_DWORD *)(v24 + 60);
          if (((v11 - v26) & 0x800000) == 0)
          {
            uint64_t v22 = (void *)v24;
            if (((v26 ^ v11) & 0xFFFFFF) != 0) {
              continue;
            }
          }
          goto LABEL_79;
        }
LABEL_92:
        uint64_t v3 = v18;
        APSLogErrorAt();
        goto LABEL_93;
      }
LABEL_79:
      if (gLogCategory_APReceiverAudioSessionBuffered <= 40
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
LABEL_84:
    if (a2) {
      *a2 = *(_DWORD *)(a1 + 716);
    }
    if (!v3)
    {
LABEL_91:
      uint64_t v3 = 0;
      *(unsigned char *)(*(void *)(a1 + 680) + 8) = 1;
      return v3;
    }
LABEL_93:
    APSLogErrorAt();
    return v3;
  }
  return 0;
}

uint64_t audioSession_logFlush(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 12))
  {
    if (gLogCategory_APReceiverAudioSessionBuffered <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  else if (gLogCategory_APReceiverAudioSessionBuffered <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionBuffered != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioSession_resumeNetworkReads(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (!*(unsigned char *)(result + 1224))
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 20
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v1 + 1224) = 1;
      uint64_t result = SendSelfConnectedLoopbackMessage();
      if (result)
      {
        return APSLogErrorAt();
      }
    }
  }
  return result;
}

void APReceiverAudioSessionBufferedFinalize(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1227))
  {
    if (gLogCategory_APReceiverAudioSessionBuffered <= 90
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(0);
  }
  if (*(void *)(a1 + 80))
  {
    SendSelfConnectedLoopbackMessage();
    pthread_join(*(pthread_t *)(a1 + 72), 0);
    *(void *)(a1 + 80) = 0;
  }
  int v2 = *(_DWORD *)(a1 + 48);
  if ((v2 & 0x80000000) == 0)
  {
    if (close(v2) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 48) = -1;
  }
  if (*(void *)(a1 + 56))
  {
    NetSocket_Delete();
    *(void *)(a1 + 56) = 0;
  }
  if (*(void *)(a1 + 1128))
  {
    FigSimpleMutexDestroy();
    *(void *)(a1 + 1128) = 0;
  }
  uint64_t v3 = *(const void **)(a1 + 32);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 32) = 0;
  }
  int v4 = *(const void **)(a1 + 40);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 40) = 0;
  }
  uint64_t v5 = *(const void **)(a1 + 1280);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 1280) = 0;
  }
  __int16 v6 = *(const void **)(a1 + 1144);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 1144) = 0;
  }
  int v7 = *(const void **)(a1 + 1184);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 1184) = 0;
  }
  int v8 = *(const void **)(a1 + 8);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(a1 + 8) = 0;
  }
  *(_DWORD *)(a1 + 456) = 0;
  int v9 = *(void **)(a1 + 512);
  if (v9)
  {
    free(v9);
    *(void *)(a1 + 512) = 0;
  }
  int v10 = *(void **)(a1 + 608);
  if (v10)
  {
    free(v10);
    *(void *)(a1 + 608) = 0;
  }
  int v11 = *(void **)(a1 + 640);
  if (v11)
  {
    free(v11);
    *(void *)(a1 + 640) = 0;
  }
  uint64_t v12 = *(void **)(a1 + 488);
  if (v12)
  {
    free(v12);
    *(void *)(a1 + 488) = 0;
  }
  int v13 = *(void **)(a1 + 624);
  if (v13)
  {
    free(v13);
    *(void *)(a1 + 624) = 0;
  }
  int v14 = *(OpaqueAudioConverter **)(a1 + 728);
  if (v14)
  {
    AudioConverterDispose(v14);
    *(void *)(a1 + 728) = 0;
  }
  *(_DWORD *)(a1 + 808) = 0;
  float v15 = *(const void **)(a1 + 648);
  if (v15) {
    CFRelease(v15);
  }
  int v16 = *(const void **)(a1 + 1136);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(a1 + 1136) = 0;
  }
  int v17 = *(void **)(a1 + 680);
  if (v17)
  {
    do
    {
      uint64_t v18 = (void *)*v17;
      free(v17);
      *(void *)(a1 + 680) = v18;
      int v17 = v18;
    }
    while (v18);
  }
  if (*(_DWORD *)(a1 + 16))
  {
    *(_DWORD *)(a1 + 16) = 0;
    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  AES_CBCFrame_Final();
  uint64_t v19 = *(NSObject **)(a1 + 1192);
  if (v19)
  {
    dispatch_release(v19);
    *(void *)(a1 + 1192) = 0;
  }
  uint64_t v20 = *(NSObject **)(a1 + 1240);
  if (v20)
  {
    dispatch_release(v20);
    *(void *)(a1 + 1240) = 0;
  }
  uint64_t v21 = *(void **)(a1 + 656);
  if (v21) {
    free(v21);
  }
  uint64_t v22 = *(const void **)(a1 + 1264);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 1264) = 0;
  }
  if (gLogCategory_APReceiverAudioSessionBuffered <= 50
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v23 = *(const void **)(a1 + 24);
  if (v23) {
    CFRelease(v23);
  }

  free((void *)a1);
}

uint64_t APReceiverAudioSessionBufferedReadAudio(uint64_t a1, int a2, uint64_t a3, char *a4, unint64_t a5)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
  if (*(void *)(a1 + 8))
  {
    if (*(_DWORD *)(a1 + 880))
    {
      if (mach_absolute_time() > *(void *)(a1 + 992))
      {
        uint64_t v7 = FigCFWeakReferenceHolderCopyReferencedObject();
        if (v7)
        {
          uint64_t v155 = (const void *)v7;
          int v8 = (void *)(a1 + 896);
          ++*(_DWORD *)(a1 + 1008);
          size_t __y = 0;
          unint64_t v162 = 0;
          uint64_t v163 = 0;
          int v9 = 3;
          while (1)
          {
            long long v159 = 0uLL;
            uint64_t v160 = 0;
            uint64_t v10 = *(void *)(a1 + 1144);
            uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v11) {
              uint64_t v12 = v11;
            }
            else {
              uint64_t v12 = 0;
            }
            int v13 = *(unsigned int (**)(uint64_t, uint64_t, size_t *))(v12 + 16);
            if (!v13 || v13(v10, a3, &__y))
            {
LABEL_25:
              APSLogErrorAt();
              goto LABEL_26;
            }
            size_t v14 = __y;
            if (__y == *v8) {
              break;
            }
            uint64_t v15 = *(void *)(a1 + 1144);
            uint64_t v16 = *(void *)(a1 + 936);
            uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v17) {
              uint64_t v18 = v17;
            }
            else {
              uint64_t v18 = 0;
            }
            uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, long long *))(v18 + 16);
            if (!v19 || v19(v15, v16, &v159)) {
              goto LABEL_25;
            }
            *(_OWORD *)int v8 = v159;
            *(void *)(a1 + 912) = v160;
            *(void *)(a1 + 888) = *(void *)(a1 + 936);
            *(_DWORD *)(a1 + 920) = *(_DWORD *)(a1 + 976);
            *(void *)(a1 + 928) = *(void *)(a1 + 984);
            if (gLogCategory_APReceiverAudioSessionBuffered <= 40
              && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (!--v9)
            {
              if (gLogCategory_APReceiverAudioSessionBuffered <= 40)
              {
                uint64_t v20 = v155;
                if (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()) {
                  LogPrintF();
                }
                goto LABEL_27;
              }
LABEL_26:
              uint64_t v20 = v155;
LABEL_27:
              APSLogErrorAt();
              goto LABEL_28;
            }
          }
          unsigned int v24 = *(_DWORD *)(a1 + 876);
          int v25 = *(unsigned __int8 *)(a1 + 872);
          int v26 = *(_DWORD *)(a1 + 1016);
          int v27 = *(_DWORD *)(a1 + 920);
          unint64_t v28 = *(void *)(a1 + 904);
          uint64_t v152 = v163;
          unint64_t v148 = v162;
          BOOL v29 = v162 >= v28;
          unint64_t v30 = v162 - v28;
          int v31 = !v29;
          double v32 = *(double *)(a1 + 928);
          *(double *)&unint64_t v33 = (double)v30;
          LODWORD(v33) = *(_DWORD *)(a1 + 92);
          double v34 = ((double)((int)v163 - *(_DWORD *)(a1 + 912) - v31) + (double)v30 * 5.42101086e-20) * (double)v33;
          int v35 = v27 + (uint64_t)v34;
          double v36 = v32 + modf(v34, (long double *)&__y);
          int v37 = v35 - 1;
          double v38 = v36 + 1.0;
          if (v36 >= 0.0)
          {
            double v38 = v36;
            int v37 = v27 + (uint64_t)v34;
          }
          if (v36 > 1.0) {
            double v39 = v36 + -1.0;
          }
          else {
            double v39 = v38;
          }
          if (v36 > 1.0) {
            int v40 = v35 + 1;
          }
          else {
            int v40 = v37;
          }
          int v146 = v26;
          int v41 = a2 - v26;
          if (v40 - v41 >= 0) {
            unsigned int v42 = v40 - v41;
          }
          else {
            unsigned int v42 = v41 - v40;
          }
          if (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation <= 30
            && (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation != -1
             || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (v42 >= v24)
          {
            int v127 = a2 - v40;
            if (!v25)
            {
              uint64_t v20 = v155;
              if (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation > 30)
              {
                char v130 = 0;
                char v131 = 1;
                double v129 = 0.0;
                unint64_t v128 = v148;
                goto LABEL_267;
              }
              if (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation != -1
                || _LogCategory_Initialize())
              {
                LogPrintF();
              }
              unint64_t v128 = v148;
              goto LABEL_254;
            }
          }
          else
          {
            if (!v25)
            {
              double v129 = v34 + v32 + (double)v27 - (double)v41;
              unint64_t v128 = v148;
              if (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation > 30)
              {
                char v131 = 0;
                char v130 = 1;
                uint64_t v20 = v155;
                int v127 = v146;
              }
              else
              {
                uint64_t v20 = v155;
                int v127 = v146;
                if (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation != -1
                  || _LogCategory_Initialize())
                {
                  LogPrintF();
                }
                char v131 = 0;
                char v130 = 1;
              }
LABEL_267:
              if (*(unsigned char *)(a1 + 1036))
              {
                *(double *)(a1 + 1104) = v129;
                CFObjectSetPropertyDouble();
              }
              else
              {
                PIDUpdate();
                double v133 = v132 * 1000.0;
                *(double *)(a1 + 1104) = v133;
                if (v133 >= 1.0)
                {
                  unsigned int v134 = *(_DWORD *)(a1 + 92);
                  unsigned int v135 = (int)v133;
                  if ((int)v133 < 0) {
                    unsigned int v135 = -v135;
                  }
                  unsigned int v136 = 1000 * v134 / v135;
                  unsigned int v137 = v134 / 0x3E8;
                  if (v136 > v137) {
                    unsigned int v137 = v136;
                  }
                  *(_DWORD *)(a1 + 1116) = v137;
                  *(unsigned char *)(a1 + 1037) = 1;
                }
                else
                {
                  *(unsigned char *)(a1 + 1037) = 0;
                }
              }
              *(unsigned char *)(a1 + 872) = 0;
              *(void *)(a1 + 936) = a3;
              *(_DWORD *)(a1 + 944) = a2;
              *(void *)(a1 + 952) = v14;
              *(void *)(a1 + 960) = v128;
              *(void *)(a1 + 968) = v152;
              *(_DWORD *)(a1 + 976) = v40;
              *(double *)(a1 + 984) = v39;
              *(_DWORD *)(a1 + 1016) = v127;
              if ((v130 & 1) == 0)
              {
                *(unsigned char *)(a1 + 772) = v131;
                ++*(_DWORD *)(a1 + 1032);
                *(void *)(a1 + 1048) = 0;
                *(void *)(a1 + 1080) = 0;
              }
              double v138 = fabs(v129);
              if (v138 > *(double *)(a1 + 1024)) {
                *(double *)(a1 + 1024) = v138;
              }
              uint64_t v139 = mach_absolute_time();
              *(void *)(a1 + 992) = v139 + (unint64_t)(double)(unint64_t)UpTicksPerSecond();
LABEL_28:
              CFRelease(v20);
              goto LABEL_29;
            }
            int v127 = a2 - v40;
          }
          uint64_t v20 = v155;
          unint64_t v128 = v148;
LABEL_254:
          double v129 = 0.0;
          if (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation <= 30
            && (gLogCategory_APReceiverAudioSessionBufferedSkewCalculation != -1
             || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          char v130 = 0;
          char v131 = 1;
          goto LABEL_267;
        }
      }
    }
  }
LABEL_29:
  unint64_t v21 = *(unsigned int *)(a1 + 100);
  size_t v22 = (a2 - *(_DWORD *)(a1 + 416));
  uint64_t v23 = v22 + (a5 / v21);
  if (!*(unsigned char *)(a1 + 712)
    && gLogCategory_APReceiverAudioSessionBufferedNodes <= 40
    && (gLogCategory_APReceiverAudioSessionBufferedNodes != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_DWORD *)(a1 + 880)) {
    goto LABEL_210;
  }
  if (*(unsigned char *)(a1 + 872))
  {
    if (gLogCategory_APReceiverAudioSessionBuffered <= 30
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_210;
  }
  uint64_t v43 = *(void **)(a1 + 584);
  uint64_t v44 = (void *)*v43;
  uint64_t v153 = v43;
  if ((void *)*v43 == v43)
  {
LABEL_210:
    int v46 = 0;
    LODWORD(v45) = 0;
    goto LABEL_211;
  }
  uint64_t v45 = 0;
  int v46 = 0;
  size_t v147 = 0;
  v141 = &a4[a5];
  unint64_t v145 = v21;
  uint64_t v142 = v22 + (a5 / v21);
  while (1)
  {
    v156 = (void *)*v44;
    int v47 = *((_DWORD *)v44 + 14);
    int v48 = *(_DWORD *)(a1 + 1016);
    int v49 = *(_DWORD *)(a1 + 672);
    int v50 = v49 + v48 + v47;
    int v51 = v49 + v48 + *(_DWORD *)(a1 + 1000);
    if (gLogCategory_APReceiverAudioSessionBuffered <= 10)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered != -1
        || (v53 = v49 + v48 + v47, int v54 = _LogCategory_Initialize(), v50 = v53, v54))
      {
        int v52 = v50;
        LogPrintF();
        int v50 = v52;
      }
    }
    if (v50 - (int)v23 >= 0) {
      goto LABEL_211;
    }
    if (*(unsigned char *)(a1 + 1004) && ((v51 - v23) & 0x80000000) == 0)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 10
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
LABEL_288:
      int v46 = 1;
      goto LABEL_211;
    }
    int v55 = *((_DWORD *)v44 + 15);
    if (*(unsigned char *)(a1 + 712))
    {
      unsigned int v56 = (v55 - *(_DWORD *)(a1 + 720)) & 0xFFFFFF;
      if (v56 >= 2)
      {
        HIDWORD(qword_268402E18) += v56 - 1;
        uint64_t v57 = *(void *)(a1 + 1184);
        if (v57) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v57 + 64), v56 - 1, memory_order_relaxed);
        }
        if (gLogCategory_APReceiverAudioSessionBufferedStats <= 30)
        {
          int v58 = v50;
          if (gLogCategory_APReceiverAudioSessionBufferedStats != -1) {
            goto LABEL_76;
          }
          size_t v149 = v22;
          uint64_t v60 = v23;
          unint64_t v61 = v21;
          uint64_t v62 = v45;
          int v63 = v55;
          int v64 = _LogCategory_Initialize();
          int v55 = v63;
          uint64_t v45 = v62;
          unint64_t v21 = v61;
          uint64_t v23 = v60;
          size_t v22 = v149;
          int v50 = v58;
          if (v64)
          {
LABEL_76:
            int v59 = v55;
            LogPrintF();
            int v55 = v59;
            int v50 = v58;
          }
        }
      }
    }
    *(_DWORD *)(a1 + 716) = v47;
    *(_DWORD *)(a1 + 720) = v55;
    *(unsigned char *)(a1 + 712) = 1;
    uint64_t v66 = v44 + 4;
    size_t v65 = v44[4];
    uint64_t v67 = v44[2];
    if (v44[3] == v67 + 12) {
      break;
    }
LABEL_100:
    int v82 = v50 + v65 / v21;
    if (*(unsigned char *)(a1 + 1004) && v82 - v51 < 0)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 10
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (APSContiguousAllocatorRelinquishBlock()) {
        goto LABEL_297;
      }
      goto LABEL_129;
    }
    if (v82 - (int)v22 > 0)
    {
      if (*(unsigned char *)(a1 + 1004))
      {
        uint64_t v151 = v45;
        int v83 = v50;
        if ((int)v22 - v51 < 0)
        {
          size_t v22 = ((v51 - v22) * v21);
          bzero(a4, v22);
          a4 += v22;
          unint64_t v21 = v145;
          LODWORD(v22) = v51;
        }
        else
        {
          if (gLogCategory_APReceiverAudioSessionBufferedStats <= 10
            && (gLogCategory_APReceiverAudioSessionBufferedStats != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *(unsigned char *)(a1 + 1004) = 0;
        }
        int v50 = v83;
        uint64_t v45 = v151;
        uint64_t v23 = v142;
      }
      if ((int)v22 - v50 < 0)
      {
        int v144 = v50;
        int v89 = v50 - v22;
        if ((*(unsigned char *)(a1 + 724) || *(unsigned char *)(a1 + 1228))
          && gLogCategory_APReceiverAudioSessionBufferedStats <= 40
          && (gLogCategory_APReceiverAudioSessionBufferedStats != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        size_t v22 = (v89 * v21);
        bzero(a4, v22);
        a4 += v22;
        uint64_t v45 = (v45 + 1);
        int v50 = v144;
        LODWORD(v22) = v144;
      }
      if (v50 - (int)v22 < 0)
      {
        ++dword_268402E20;
        uint64_t v91 = *(void *)(a1 + 1184);
        if (v91) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v91 + 68), 1u, memory_order_relaxed);
        }
        if (gLogCategory_APReceiverAudioSessionBufferedStats <= 40)
        {
          if (gLogCategory_APReceiverAudioSessionBufferedStats != -1
            || (v93 = v50, v94 = _LogCategory_Initialize(), int v50 = v93, v94))
          {
            int v92 = v50;
            LogPrintF();
            int v50 = v92;
          }
        }
        uint64_t v95 = ((v22 - v50) * v21);
        uint64_t v96 = v44[4];
        uint64_t v90 = (char *)(v44[3] + v95);
        v44[3] = v90;
        v44[4] = v96 - v95;
        *((_DWORD *)v44 + 14) += v22 - v50;
        uint64_t v45 = (v45 + 1);
        int v50 = v22;
      }
      else
      {
        uint64_t v90 = (char *)v44[3];
      }
      if (*(unsigned char *)(a1 + 1037) && v90 == (char *)(v44[2] + 12))
      {
        double v97 = *(double *)(a1 + 1104);
        if (v97 > 0.0)
        {
          size_t v98 = *v66;
          unint64_t v99 = *(unsigned int *)(a1 + 100);
          uint64_t v100 = *v66 / v99;
          CFNumberRef v101 = v90;
          if (v100 >= 1)
          {
            int v102 = &v90[4 * v100];
            CFNumberRef v101 = v90;
            int v103 = v90;
            do
            {
              unsigned int v104 = *(_DWORD *)(a1 + 1112) + 1;
              *(_DWORD *)(a1 + 1112) = v104;
              if (v104 >= *(_DWORD *)(a1 + 1116))
              {
                *(_DWORD *)(a1 + 1112) = 0;
              }
              else
              {
                *(_DWORD *)CFNumberRef v101 = *(_DWORD *)v103;
                v101 += 4;
              }
              v103 += 4;
            }
            while (v103 < v102);
            unint64_t v99 = *(unsigned int *)(a1 + 100);
          }
          size_t v105 = v101 - v90;
          unint64_t v106 = (v98 - (v101 - v90)) / v99;
          v44[4] = v101 - v90;
          *((_DWORD *)v44 + 14) += v106;
          int v107 = *(_DWORD *)(a1 + 1016) - v106;
          goto LABEL_174;
        }
        size_t v105 = *v66;
        if (v97 < 0.0)
        {
          int v108 = v50;
          double v109 = *(int **)(a1 + 624);
          memcpy(v109, v90, v105);
          unint64_t v110 = *(unsigned int *)(a1 + 100);
          uint64_t v90 = (char *)v44[3];
          unint64_t v111 = v44[4];
          v112 = v90;
          if ((uint64_t)(v111 / v110) >= 1)
          {
            int v113 = &v109[v111 / v110];
            v112 = (char *)v44[3];
            do
            {
              int v114 = *v109;
              unsigned int v115 = *(_DWORD *)(a1 + 1112) + 1;
              *(_DWORD *)(a1 + 1112) = v115;
              if (v115 >= *(_DWORD *)(a1 + 1116))
              {
                *(_DWORD *)(a1 + 1112) = 0;
                *(_DWORD *)v112 = v114;
                v112 += 4;
              }
              *(_DWORD *)v112 = v114;
              v112 += 4;
              ++v109;
            }
            while (v109 < v113);
            unint64_t v110 = *(unsigned int *)(a1 + 100);
          }
          size_t v105 = v112 - v90;
          unint64_t v116 = (v112 - v90 - v111) / v110;
          v44[4] = v112 - v90;
          *((_DWORD *)v44 + 14) -= v116;
          int v107 = *(_DWORD *)(a1 + 1016) + v116;
          int v50 = v108;
LABEL_174:
          *(_DWORD *)(a1 + 1016) = v107;
        }
        int v82 = v50 + v105 / v21;
      }
      int v117 = v82 - v23;
      if (v82 - (int)v23 > 0) {
        int v82 = v23;
      }
      int v118 = v82 - v50;
      size_t v119 = ((v82 - v50) * v21);
      if ((unint64_t)&v90[v119] > *(void *)(a1 + 640) + *(void *)(a1 + 616)
        && gLogCategory_APReceiverAudioSessionBuffered <= 40)
      {
        if (gLogCategory_APReceiverAudioSessionBuffered != -1) {
          goto LABEL_181;
        }
        int v120 = _LogCategory_Initialize();
        uint64_t v90 = (char *)v44[3];
        if (v120)
        {
          uint64_t v23 = v142;
LABEL_181:
          LogPrintF();
          uint64_t v90 = (char *)v44[3];
        }
        else
        {
          uint64_t v23 = v142;
        }
      }
      memcpy(a4, v90, v119);
      a4 += v119;
      size_t v22 = (v118 + v22);
      if (v117 >= 1)
      {
        size_t v140 = v44[4] - v119;
        v44[3] += v119;
        v44[4] = v140;
        *((_DWORD *)v44 + 14) += v118;
      }
      else
      {
        bzero(*(void **)(a1 + 640), *(void *)(a1 + 616));
        if (!APSContiguousAllocatorRelinquishBlock())
        {
          v44[5] = 0;
          v44[6] = 0;
          *uint64_t v66 = 0;
          uint64_t v121 = *v44;
          *(void *)(v121 + 8) = v44[1];
          *(void *)v44[1] = v121;
          *uint64_t v44 = *(void *)(a1 + 592);
          *(void *)(a1 + 592) = v44;
          --*(_DWORD *)(a1 + 600);
          if (*(void *)(a1 + 480) <= (unint64_t)APSContiguousAllocatorGetNextAvailableBlockSize()) {
            audioSession_resumeNetworkReads(a1);
          }
          unint64_t v21 = v145;
          if (a4 >= v141) {
            goto LABEL_288;
          }
          goto LABEL_189;
        }
        APSLogErrorAt();
      }
      int v46 = 1;
      LODWORD(v21) = v145;
      goto LABEL_211;
    }
    ++dword_268402E20;
    uint64_t v84 = *(void *)(a1 + 1184);
    if (v84) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v84 + 68), 1u, memory_order_relaxed);
    }
    if (gLogCategory_APReceiverAudioSessionBufferedStats <= 40
      && (gLogCategory_APReceiverAudioSessionBufferedStats != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (APSContiguousAllocatorRelinquishBlock()) {
      goto LABEL_297;
    }
LABEL_129:
    v44[5] = 0;
    v44[6] = 0;
    *uint64_t v66 = 0;
    uint64_t v86 = *v44;
    *(void *)(v86 + 8) = v44[1];
    *(void *)v44[1] = v86;
    *uint64_t v44 = *(void *)(a1 + 592);
    *(void *)(a1 + 592) = v44;
    --*(_DWORD *)(a1 + 600);
    if (*(void *)(a1 + 480) <= (unint64_t)APSContiguousAllocatorGetNextAvailableBlockSize()) {
      goto LABEL_130;
    }
LABEL_189:
    int v46 = 1;
    uint64_t v44 = v156;
    if (v156 == v153) {
      goto LABEL_211;
    }
  }
  *(void *)(a1 + 1256) += v65;
  AudioObjectID v68 = *(int8x8_t **)(a1 + 656);
  if (!v68)
  {
    APSLogErrorAt();
LABEL_297:
    APSLogErrorAt();
    goto LABEL_288;
  }
  int8x8_t *v68 = vrev32_s8(*(int8x8_t *)(v67 + 4));
  unint64_t v69 = *(void **)(a1 + 640);
  uint64_t v70 = *(void *)(a1 + 656);
  uint64_t v71 = *(void *)(a1 + 664);
  uint64_t v72 = v44[3];
  unint64_t v73 = v44[4];
  size_t v74 = *(void *)(a1 + 616);
  size_t __y = 0;
  uint64_t v150 = v45;
  int v143 = v50;
  if (!*(void *)(a1 + 448))
  {
    int v75 = *(_DWORD *)(a1 + 88);
    if (!*(unsigned char *)(a1 + 112) || v75 == 1)
    {
      if (*(unsigned char *)(a1 + 112)) {
        goto LABEL_90;
      }
      if (v75 == 1)
      {
        if (v73 > v74) {
          goto LABEL_197;
        }
        Swap16Mem();
        size_t v78 = v73;
      }
      else
      {
        int v87 = audioSession_audioDecoderDecodeFrame_5916((void *)a1, v72, v73, *(void **)(a1 + 608), v74, &__y);
        if (v87)
        {
          int v81 = v87;
          goto LABEL_199;
        }
        size_t v88 = __y;
        if (__y > v74) {
          goto LABEL_197;
        }
        memcpy(v69, *(const void **)(a1 + 608), __y);
        size_t v78 = v88;
      }
LABEL_93:
      unint64_t v21 = v145;
      size_t v147 = v78;
      if (v78) {
        unint64_t v80 = 10000 * v73 / v78;
      }
      else {
        LODWORD(v80) = 0;
      }
      uint64_t v23 = v142;
      int v81 = 0;
      *(_DWORD *)(a1 + 768) = (v80 - *(_DWORD *)(a1 + 768) + (*(_DWORD *)(a1 + 768) << 6)) >> 6;
      goto LABEL_97;
    }
LABEL_85:
    if (v74 >= v73)
    {
      int v76 = audioSession_decryptPacket(a1, v70, v71, v72, v73, *(void *)(a1 + 608), &__y);
      if (v76)
      {
        int v81 = v76;
      }
      else
      {
        unint64_t v73 = __y;
        size_t __y = 0;
        int v77 = audioSession_audioDecoderDecodeFrame_5916((void *)a1, *(void *)(a1 + 608), v73, v69, v74, &__y);
        if (!v77)
        {
          size_t v78 = __y;
          goto LABEL_93;
        }
        int v81 = v77;
      }
      goto LABEL_199;
    }
    goto LABEL_197;
  }
  if (*(_DWORD *)(a1 + 88) != 1) {
    goto LABEL_85;
  }
LABEL_90:
  if (v74 < v73)
  {
LABEL_197:
    APSLogErrorAt();
    int v81 = -6743;
    goto LABEL_200;
  }
  int v79 = audioSession_decryptPacket(a1, v70, v71, v72, v73, *(void *)(a1 + 608), &__y);
  if (!v79)
  {
    size_t v78 = __y;
    Swap16Mem();
    goto LABEL_93;
  }
  int v81 = v79;
LABEL_199:
  APSLogErrorAt();
LABEL_200:
  uint64_t v23 = v142;
  unint64_t v21 = v145;
LABEL_97:
  bzero(*(void **)(a1 + 656), *(void *)(a1 + 664));
  size_t v65 = v147;
  v44[3] = *(void *)(a1 + 640);
  v44[4] = v147;
  if (!v81 && v147)
  {
    uint64_t v45 = v150;
    int v50 = v143;
    goto LABEL_100;
  }
  if (gLogCategory_APReceiverAudioSessionBuffered <= 40
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  bzero(*(void **)(a1 + 640), *(void *)(a1 + 616));
  if (!APSContiguousAllocatorRelinquishBlock())
  {
    v44[5] = 0;
    v44[6] = 0;
    *uint64_t v66 = 0;
    uint64_t v85 = *v44;
    *(void *)(v85 + 8) = v44[1];
    *(void *)v44[1] = v85;
    *uint64_t v44 = *(void *)(a1 + 592);
    *(void *)(a1 + 592) = v44;
    --*(_DWORD *)(a1 + 600);
    uint64_t v45 = v150;
    if (*(void *)(a1 + 480) > (unint64_t)APSContiguousAllocatorGetNextAvailableBlockSize()) {
      goto LABEL_189;
    }
LABEL_130:
    audioSession_resumeNetworkReads(a1);
    goto LABEL_189;
  }
  APSLogErrorAt();
  int v46 = 1;
  LODWORD(v45) = v150;
LABEL_211:
  if (*(unsigned char *)(a1 + 712)) {
    *(unsigned char *)(a1 + 724) = 1;
  }
  if ((int)v22 - (int)v23 < 0)
  {
    bzero(a4, ((v23 - v22) * v21));
    LODWORD(v45) = v45 + 1;
    if ((*(unsigned char *)(a1 + 724) || *(unsigned char *)(a1 + 1228))
      && gLogCategory_APReceiverAudioSessionBuffered <= 40
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (!v46 || *(void *)(a1 + 680))
  {
    LODWORD(v45) = 0;
    goto LABEL_223;
  }
  if ((int)v45 < 1)
  {
LABEL_223:
    *(_DWORD *)(a1 + 776) += v45;
  }
  else
  {
    if (*(unsigned char *)(a1 + 772))
    {
      LODWORD(v45) = 0;
      *(unsigned char *)(a1 + 772) = 0;
      goto LABEL_223;
    }
    *(_DWORD *)(a1 + 776) += v45;
    if (gLogCategory_APReceiverAudioSessionBuffered <= 40
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (*(unsigned char *)(a1 + 712)
    && gLogCategory_APReceiverAudioSessionBufferedStats <= 50
    && (gLogCategory_APReceiverAudioSessionBufferedStats != -1 || _LogCategory_Initialize()))
  {
    int v122 = *(_DWORD *)(a1 + 708) - *(_DWORD *)(a1 + 716);
    if (byte_268402E10)
    {
      double v123 = *((double *)&gAirPlayAudioStats + 1)
           + *(double *)&gAirPlayAudioStats * ((double)v122 - *((double *)&gAirPlayAudioStats + 1));
    }
    else
    {
      double v123 = (double)v122;
      byte_268402E10 = 1;
    }
    *((double *)&gAirPlayAudioStats + 1) = v123;
    double v124 = ((double)(*(_DWORD *)(a1 + 92) >> 1) + v123 * 1000.0) / (double)*(unsigned int *)(a1 + 92);
    if (gLogCategory_APReceiverAudioSessionBuffered <= 10
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v125 = *(void *)(a1 + 1184);
    if (v125) {
      *(_DWORD *)(v125 + 56) = (int)v124;
    }
  }
  audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(a1 + 1128));
  return 0;
}

uint64_t audioSession_decryptPacket(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (*(unsigned char *)(a1 + 112))
  {
    chacha20_poly1305_init_64x64();
    chacha20_poly1305_add_aad();
    a5 -= 24;
    uint64_t v10 = chacha20_poly1305_decrypt();
    if (chacha20_poly1305_verify() + v10 != a5)
    {
      APSLogErrorAt();
      return 4294960534;
    }
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 408;
    do
    {
      if (++*(unsigned char *)(v12 + v11)) {
        BOOL v14 = 1;
      }
      else {
        BOOL v14 = v11 == 7;
      }
      ++v11;
    }
    while (!v14);
  }
  else
  {
    uint64_t v15 = AES_CBCFrame_Update();
    if (v15)
    {
      uint64_t v16 = v15;
      APSLogErrorAt();
      return v16;
    }
  }
  uint64_t v16 = 0;
  *a7 = a5;
  return v16;
}

uint64_t audioSession_audioDecoderDecodeFrame_5916(void *inInputDataProcUserData, uint64_t a2, uint64_t a3, void *a4, UInt32 a5, void *a6)
{
  *(void *)&v11.mNumberBuffers = 1;
  *((void *)inInputDataProcUserData + 92) = a2;
  *((void *)inInputDataProcUserData + 93) = a2 + a3;
  UInt32 ioOutputDataPacketSize = *((_DWORD *)inInputDataProcUserData + 26);
  v11.mBuffers[0].mNumberChannels = *((_DWORD *)inInputDataProcUserData + 24);
  v11.mBuffers[0].mDataByteSize = a5;
  v11.mBuffers[0].mCFDataRef Data = a4;
  unsigned int v8 = AudioConverterFillComplexBuffer(*((AudioConverterRef *)inInputDataProcUserData + 91), (AudioConverterComplexInputDataProc)audioSession_audioDecoderDecodeCallback_5929, inInputDataProcUserData, &ioOutputDataPacketSize, &v11, 0);
  if (v8 == -6750) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  if (v9) {
    APSLogErrorAt();
  }
  else {
    *a6 = *((_DWORD *)inInputDataProcUserData + 25) * ioOutputDataPacketSize;
  }
  return v9;
}

uint64_t audioSession_audioDecoderDecodeCallback_5929(uint64_t a1, _DWORD *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 736);
  uint64_t v6 = *(void *)(a5 + 744);
  if (v5 == v6)
  {
    *a2 = 0;
    return 4294960546;
  }
  else
  {
    uint64_t result = 0;
    *a2 = 1;
    *(_DWORD *)a3 = 1;
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(a5 + 96);
    *(_DWORD *)(a3 + 12) = v6 - v5;
    *(void *)(a3 + 16) = v5;
    *(void *)(a5 + 736) = v6;
    *(void *)(a5 + 752) = 0;
    *(_DWORD *)(a5 + 760) = 0;
    *(_DWORD *)(a5 + 764) = v6 - v5;
    *a4 = a5 + 752;
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedConvertProgressRTPTimeToSecond(uint64_t a1, int a2, int a3, int a4, double *a5, double *a6, double a7, double a8)
{
  if (a1)
  {
    int v10 = *(_DWORD *)(a1 + 716);
    if (!*(unsigned char *)(a1 + 712)) {
      int v10 = a3;
    }
    LODWORD(a8) = *(_DWORD *)(a1 + 92);
    double v11 = (double)*(unint64_t *)&a8;
    double v12 = (double)(v10 - a2) / v11;
    double v13 = (double)(a4 - a2) / v11;
    if (gLogCategory_APReceiverAudioSessionBuffered <= 40
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a5) {
      *a5 = v12;
    }
    uint64_t result = 0;
    if (a6) {
      *a6 = v13;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895144;
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedSetSecurityInfo(uint64_t a1)
{
  if (!a1) {
    return 4294895144;
  }
  uint64_t v2 = a1 + 424;
  AES_CBCFrame_Final();
  *(void *)(a1 + 448) = 0;
  uint64_t v3 = AES_CBCFrame_Init();
  if (v3) {
    APSLogErrorAt();
  }
  else {
    *(void *)(a1 + 448) = v2;
  }
  return v3;
}

uint64_t APReceiverAudioSessionBufferedStartPacketProcesser(uint64_t a1)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (*(unsigned char *)(a1 + 1227))
  {
    uint64_t v8 = 4294895143;
    goto LABEL_16;
  }
  if (*(void *)(a1 + 80)) {
    return 0;
  }
  *(void *)(a1 + 1200) = mach_absolute_time();
  uint64_t v2 = pthread_create((pthread_t *)(a1 + 72), 0, (void *(__cdecl *)(void *))audioSession_networkThread_5951, (void *)a1);
  if (v2)
  {
    uint64_t v8 = v2;
    goto LABEL_16;
  }
  *(void *)(a1 + 80) = a1 + 72;
  *(void *)(a1 + 848) = *(void *)(a1 + 1200);
  uint64_t v3 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 1192));
  *(void *)(a1 + 1216) = v3;
  if (!v3) {
    goto LABEL_15;
  }
  dispatch_set_context(v3, (void *)a1);
  dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 1216), (dispatch_function_t)audioSession_performPeriodicTasks_5946);
  int v4 = *(NSObject **)(a1 + 1216);
  dispatch_time_t v5 = dispatch_time(0, 250000000);
  dispatch_source_set_timer(v4, v5, 0xEE6B280uLL, 0xEE6B280uLL);
  dispatch_resume(*(dispatch_object_t *)(a1 + 1216));
  uint64_t v6 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 1240));
  *(void *)(a1 + 1232) = v6;
  if (!v6)
  {
LABEL_15:
    APSLogErrorAt();
    return 4294960596;
  }
  dispatch_set_context(v6, (void *)a1);
  dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 1232), (dispatch_function_t)audioSession_log_5941);
  dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 1232), 0, 0x1DCD6500uLL, 0);
  dispatch_resume(*(dispatch_object_t *)(a1 + 1232));
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v7 + 112), &v10, (dispatch_function_t)controlServer_startInternal);
    uint64_t v8 = v11;
    if (v11)
    {
LABEL_16:
      APSLogErrorAt();
      return v8;
    }
  }
  uint64_t v8 = 0;
  *(unsigned char *)(a1 + 1227) = 1;
  return v8;
}

uint64_t audioSession_log_5941(uint64_t result)
{
  if (*(int *)(result + 476) > 0 && (uint64_t v1 = result, *(_DWORD *)(result + 92)))
  {
    if (gLogCategory_APReceiverAudioSessionBuffered <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        APSSGetGasGaugeStringForPercent();
        uint64_t result = LogPrintF();
      }
    }
    if (*(_DWORD *)(v1 + 1008) != *(_DWORD *)(v1 + 1012))
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
          uint64_t result = LogPrintF();
        }
      }
      *(_DWORD *)(v1 + 1012) = *(_DWORD *)(v1 + 1008);
    }
  }
  else
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t audioSession_performPeriodicTasks_5946(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t result = mach_absolute_time();
    if (*(_DWORD *)(v1 + 808) != *(_DWORD *)(v1 + 812)) {
      goto LABEL_10;
    }
    uint64_t v2 = result;
    uint64_t v3 = result - *(void *)(v1 + 816);
    if (result - *(void *)(v1 + 848) > *(void *)(v1 + 856))
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 40)
      {
        if (gLogCategory_APReceiverAudioSessionBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result))
        {
          UpTicksPerSecond();
          uint64_t result = LogPrintF();
        }
      }
      *(void *)(v1 + 848) = v2;
    }
    if (v3 <= *(void *)(v1 + 824))
    {
LABEL_10:
      uint64_t result = mach_absolute_time();
      if (result >= *(void *)(v1 + 792))
      {
        uint64_t v4 = result;
        ++*(_DWORD *)(v1 + 788);
        int v5 = *(_DWORD *)(v1 + 776);
        int v6 = v5 - *(_DWORD *)(v1 + 780);
        *(_DWORD *)(v1 + 780) = v5;
        if (v6 < 1)
        {
          if (gLogCategory_APReceiverAudioSessionBuffered > 20) {
            goto LABEL_21;
          }
          if (gLogCategory_APReceiverAudioSessionBuffered == -1)
          {
            uint64_t result = _LogCategory_Initialize();
            if (!result) {
              goto LABEL_21;
            }
          }
        }
        else
        {
          ++*(_DWORD *)(v1 + 784);
          if (gLogCategory_APReceiverAudioSessionBuffered > 50) {
            goto LABEL_21;
          }
          if (gLogCategory_APReceiverAudioSessionBuffered == -1)
          {
            uint64_t result = _LogCategory_Initialize();
            if (!result) {
              goto LABEL_21;
            }
          }
        }
        uint64_t result = LogPrintF();
LABEL_21:
        *(void *)(v1 + 792) = *(void *)(v1 + 800) + v4;
      }
    }
  }
  return result;
}

uint64_t audioSession_networkThread_5951(uint64_t a1)
{
  unint64_t v2 = *(int *)(a1 + 48);
  memset(&v11, 0, sizeof(v11));
  pthread_setname_np("AirPlayAudioReceiver");
  SetCurrentThreadPriority();
  if (SocketAccept()) {
    goto LABEL_44;
  }
  if (*(unsigned char *)(a1 + 1225)) {
    SocketSetP2P();
  }
  if (!*(unsigned char *)(a1 + 1226)) {
    SocketSetQoS();
  }
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x80000000) == 0)
  {
    if (close(v3) && *__error()) {
      __error();
    }
    *(_DWORD *)(a1 + 64) = -1;
  }
  if (gLogCategory_APReceiverAudioSessionBuffered <= 50
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (NetSocket_CreateWithNative())
  {
LABEL_44:
    APSLogErrorAt();
    return 0;
  }
  int v4 = 1 << v2;
  unint64_t v5 = v2 >> 5;
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          memset(&v11, 0, sizeof(v11));
          if (*(unsigned char *)(a1 + 1224) && __darwin_check_fd_set_overflow(-1, &v11, 0)) {
            LODWORD(STACK[0x200000000000007C]) = STACK[0x200000000000007C];
          }
          if ((int)v2 <= -1) {
            int v6 = -1;
          }
          else {
            int v6 = v2;
          }
          if (__darwin_check_fd_set_overflow(v2, &v11, 0)) {
            v11.fds_bits[v5] |= v4;
          }
          int v7 = select(v6 + 1, &v11, 0, 0, 0);
          if (v7 > 0) {
            break;
          }
          if (v7 && *__error())
          {
            int v8 = *__error();
            if (!v8) {
              break;
            }
            if (v8 == 4) {
              continue;
            }
          }
          usleep(0x186A0u);
        }
        __darwin_check_fd_set_overflow(-1, &v11, 0);
        if (__darwin_check_fd_set_overflow(v2, &v11, 0))
        {
          if ((v11.fds_bits[v5] & v4) != 0)
          {
            LOBYTE(v12) = 0;
            uint64_t v13 = 0;
            int v9 = SocketRecvFrom();
            if (v9 != 35) {
              break;
            }
          }
        }
      }
      if (!v9) {
        break;
      }
      APSLogErrorAt();
    }
  }
  while (v12 != 113);
  if (gLogCategory_APReceiverAudioSessionBuffered <= 30
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t audioSession_suspendNetworkReads(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(unsigned char *)(result + 1224))
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 20
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(v1 + 1224) = 0;
      uint64_t result = SendSelfConnectedLoopbackMessage();
      if (result)
      {
        return APSLogErrorAt();
      }
    }
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedStopPacketProcesser(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(unsigned char *)(result + 1227))
    {
      if (*(void *)(result + 80))
      {
        uint64_t result = *(unsigned int *)(result + 48);
        if (result)
        {
          uint64_t v2 = *(void *)(v1 + 40);
          if (v2)
          {
            context[0] = *(void *)(v1 + 40);
            context[1] = 0;
            dispatch_sync_f(*(dispatch_queue_t *)(v2 + 112), context, (dispatch_function_t)controlServer_stopInternal);
          }
          SendSelfConnectedLoopbackMessage();
          uint64_t v3 = pthread_join(*(pthread_t *)(v1 + 72), 0);
          *(void *)(v1 + 80) = 0;
          int v4 = *(NSObject **)(v1 + 1192);
          block[0] = MEMORY[0x263EF8330];
          block[1] = 0x40000000;
          block[2] = __APReceiverAudioSessionBufferedStopPacketProcesser_block_invoke;
          block[3] = &__block_descriptor_tmp_167;
          block[4] = v1;
          dispatch_sync(v4, block);
          unint64_t v5 = *(NSObject **)(v1 + 1240);
          v6[0] = MEMORY[0x263EF8330];
          v6[1] = 0x40000000;
          v6[2] = __APReceiverAudioSessionBufferedStopPacketProcesser_block_invoke_2;
          void v6[3] = &__block_descriptor_tmp_168;
          v6[4] = v1;
          dispatch_sync(v5, v6);
          *(void *)(v1 + 1208) = mach_absolute_time();
          *(unsigned char *)(v1 + 1227) = 0;
          return v3;
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294895143;
    }
  }
  return result;
}

void __APReceiverAudioSessionBufferedStopPacketProcesser_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 1216);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 1216));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 1216) = 0;
  }
}

void __APReceiverAudioSessionBufferedStopPacketProcesser_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 1232);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 1232));
    dispatch_release(v2);
    *(void *)(*(void *)(a1 + 32) + 1232) = 0;
  }
}

uint64_t APReceiverAudioSessionBufferedUpdateLatency(_DWORD *a1)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  a1[168] = gAirTunesRelativeTimeOffset_5970 + a1[116] - a1[115];
  if (gLogCategory_APReceiverAudioSessionBuffered > 30) {
    return 0;
  }
  if (gLogCategory_APReceiverAudioSessionBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedCopyMetrics(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2)
    {
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetDouble();
      CFDictionarySetInt64();
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895145;
    }
  }
  else
  {
    uint64_t v2 = 4294895144;
    APSLogErrorAt();
  }
  return v2;
}

uint64_t APReceiverAudioSessionBufferedLogEnded(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (a2)
    {
      DataBuffer_AppendF();
      DataBuffer_AppendF();
      DataBuffer_AppendF();
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      FigCFDictionarySetInt32();
      UpTicksToSeconds();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt64();
      FigCFDictionarySetInt32();
      FigCFDictionarySetInt32();
      CFDictionarySetValue(Mutable, @"sessionType", @"AudioBuffered");
      APSRTCReportingAgentSendMediaEvent();
      APSRTCReportingAgentSendEvent();
      if (Mutable) {
        CFRelease(Mutable);
      }
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895145;
    }
  }
  return result;
}

__CFDictionary *APReceiverAudioSessionBufferedCopyAudioBufferInfo(uint64_t a1, int *a2)
{
  if (a1)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      CFMutableDictionaryRef v5 = Mutable;
      CFMutableArrayRef v6 = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
      if (!v6)
      {
        int v19 = -72150;
        APSLogErrorAt();
        uint64_t v17 = 0;
LABEL_13:
        CFRelease(v5);
        goto LABEL_14;
      }
      CFMutableArrayRef v7 = v6;
      CFDictionaryRef theDict = v5;
      uint64_t v23 = a2;
      audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
      int v8 = *(void **)(a1 + 584);
      uint64_t v21 = a1;
      if ((void *)*v8 == v8)
      {
LABEL_11:
        uint64_t v17 = theDict;
        CFDictionarySetValue(theDict, @"NodesInfo", v7);
        CFDictionarySetInt64();
        uint64_t v18 = v21;
        CFDictionarySetInt64();
        int v19 = 0;
        CFMutableDictionaryRef v5 = 0;
      }
      else
      {
        int v9 = (const void *)*MEMORY[0x263EFFB40];
        uint64_t v10 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
        fd_set v11 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
        __int16 v12 = (const void *)*MEMORY[0x263EFFB38];
        uint64_t v13 = (void *)*v8;
        while (1)
        {
          CFMutableDictionaryRef v14 = CFDictionaryCreateMutable(0, 0, v10, v11);
          if (!v14) {
            break;
          }
          uint64_t v15 = v14;
          CFDictionarySetInt64();
          if (v13[3] == v13[2] + 12) {
            uint64_t v16 = v9;
          }
          else {
            uint64_t v16 = v12;
          }
          CFDictionarySetValue(v15, @"IsEncoded", v16);
          CFArrayAppendValue(v7, v15);
          CFRelease(v15);
          uint64_t v13 = (void *)*v13;
          if (v13 == v8) {
            goto LABEL_11;
          }
        }
        int v19 = -72150;
        APSLogErrorAt();
        uint64_t v17 = 0;
        uint64_t v18 = v21;
        CFMutableDictionaryRef v5 = theDict;
      }
      audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(v18 + 1128));
      CFRelease(v7);
      a2 = v23;
      if (v5) {
        goto LABEL_13;
      }
    }
    else
    {
      int v19 = -72150;
      APSLogErrorAt();
      uint64_t v17 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v17 = 0;
    int v19 = -72152;
  }
LABEL_14:
  if (a2) {
    *a2 = v19;
  }
  return v17;
}

uint64_t APReceiverAudioSessionBufferedCopyProperty(uint64_t a1, CFTypeRef cf1, int *a3)
{
  if (a1)
  {
    if (cf1)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 30
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (CFEqual(cf1, @"AudioFormat"))
      {
        CFMutableArrayRef v6 = *(const void **)(a1 + 1136);
LABEL_9:
        uint64_t result = (uint64_t)CFRetain(v6);
LABEL_18:
        int v11 = 0;
        goto LABEL_19;
      }
      if (CFEqual(cf1, @"CompressionType"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 88);
LABEL_12:
        CFNumberType v10 = kCFNumberSInt32Type;
LABEL_13:
        uint64_t result = (uint64_t)CFNumberCreate(v8, v10, v9);
        goto LABEL_18;
      }
      if (CFEqual(cf1, @"MediaDataControlPort"))
      {
        uint64_t result = CFNumberCreateInt64();
        goto LABEL_18;
      }
      if (CFEqual(cf1, @"MaximumLatency"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 468);
        goto LABEL_12;
      }
      if (CFEqual(cf1, @"MinimumLatency"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 464);
        goto LABEL_12;
      }
      if (CFEqual(cf1, @"NumberOfChannels"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 96);
        goto LABEL_12;
      }
      if (CFEqual(cf1, @"PlatformAudioLatency"))
      {
        audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
        int v14 = *(_DWORD *)(a1 + 460);
        audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(a1 + 1128));
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = &v14;
        goto LABEL_12;
      }
      if (CFEqual(cf1, @"AudioPort"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 456);
        CFNumberType v10 = kCFNumberIntType;
        goto LABEL_13;
      }
      if (CFEqual(cf1, @"SampleRate"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 92);
        goto LABEL_12;
      }
      if (CFEqual(cf1, @"audioBufferSize"))
      {
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        int v9 = (int *)(a1 + 496);
        CFNumberType v10 = kCFNumberSInt64Type;
        goto LABEL_13;
      }
      if (CFEqual(cf1, @"IsPlayingBufferedAudio"))
      {
        audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
        int v12 = *(_DWORD *)(a1 + 880);
        audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(a1 + 1128));
        uint64_t v13 = (const void **)MEMORY[0x263EFFB40];
        if (!v12) {
          uint64_t v13 = (const void **)MEMORY[0x263EFFB38];
        }
        goto LABEL_42;
      }
      if (CFEqual(cf1, @"IsUsingScreen"))
      {
        uint64_t v13 = (const void **)MEMORY[0x263EFFB38];
LABEL_42:
        CFMutableArrayRef v6 = *v13;
        goto LABEL_9;
      }
      if (gLogCategory_APReceiverAudioSessionBuffered <= 50
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t result = 0;
      int v11 = -72154;
    }
    else
    {
      APSLogErrorAt();
      uint64_t result = 0;
      int v11 = -72151;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t result = 0;
    int v11 = -72152;
  }
LABEL_19:
  if (a3) {
    *a3 = v11;
  }
  return result;
}

uint64_t APReceiverAudioSessionBufferedSetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  unsigned int v12 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (!a2)
  {
    uint64_t v8 = 4294895145;
LABEL_33:
    APSLogErrorAt();
    return v8;
  }
  if (!a3)
  {
    uint64_t v8 = 4294895145;
    goto LABEL_33;
  }
  if (gLogCategory_APReceiverAudioSessionBuffered <= 30
    && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  audioSession_sessionLock_5842(*(pthread_mutex_t **)(a1 + 1128));
  if (CFEqual(a2, @"VolumeLinear"))
  {
    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unsigned int v12 = APReceiverAudioSessionPlatformSetProperty(*(void **)a1, v6, @"RASP::VolumeLinear", v7, a3);
    if (v12) {
      APSLogErrorAt();
    }
    goto LABEL_19;
  }
  if (CFEqual(a2, @"PlatformAudioLatency"))
  {
    *(_DWORD *)(a1 + 460) = CFGetInt64Ranged();
  }
  else
  {
    if (!CFEqual(a2, @"RTCMetadata"))
    {
      if (CFEqual(a2, @"timelineOffset"))
      {
        int v10 = CFGetInt64();
        if ((v10 - 251) > 0xFFFFFE0A)
        {
          gAirTunesRelativeTimeOffset_5970 = v10;
          goto LABEL_19;
        }
        APSLogErrorAt();
        int v11 = -6710;
      }
      else
      {
        if (gLogCategory_APReceiverAudioSessionBuffered <= 50
          && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        int v11 = -72154;
      }
      unsigned int v12 = v11;
      goto LABEL_19;
    }
    APSRTCReportingAgentSendMediaEvent();
  }
LABEL_19:
  audioSession_sessionUnlock_5844(*(pthread_mutex_t **)(a1 + 1128));
  return v12;
}

uint64_t _GetTypeID_6083()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAirPlayReceiverSessionCFTypeID TypeID = result;
  return result;
}

void _Finalize_6086(uint64_t a1)
{
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(a1 + 441))
  {
    if (gLogCategory_AirPlayReceiverCore > 100
      || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_47;
    }
LABEL_46:
    LogPrintF();
LABEL_47:
    __break(1u);
    return;
  }
  uint64_t v2 = *(void (**)(uint64_t, void))(a1 + 80);
  if (v2) {
    v2(a1, *(void *)(a1 + 56));
  }
  if (!*(unsigned char *)(a1 + 659))
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 30
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(void *)(a1 + 48))
    {
      if (gLogCategory_AirPlayReceiverPlatform > 100
        || gLogCategory_AirPlayReceiverPlatform == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_47;
      }
      goto LABEL_46;
    }
  }
  uint64_t v3 = *(const void **)(a1 + 736);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 736) = 0;
  }
  int v4 = *(const void **)(a1 + 568);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 568) = 0;
  }
  CFMutableDictionaryRef v5 = *(const void **)(a1 + 672);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 672) = 0;
  }
  uint64_t v6 = *(const void **)(a1 + 712);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 712) = 0;
  }
  uint64_t v7 = *(const void **)(a1 + 720);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 720) = 0;
  }
  uint64_t v8 = *(const void **)(a1 + 640);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(a1 + 640) = 0;
  }
  int v9 = *(const void **)(a1 + 648);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(a1 + 648) = 0;
  }
  int v10 = *(const void **)(a1 + 592);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(a1 + 592) = 0;
  }
  int v11 = *(const void **)(a1 + 600);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(a1 + 600) = 0;
  }
  unsigned int v12 = *(const void **)(a1 + 432);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(a1 + 432) = 0;
  }
  uint64_t v13 = *(const void **)(a1 + 24);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(a1 + 24) = 0;
  }
  int v14 = *(NSObject **)(a1 + 16);
  if (v14)
  {
    dispatch_release(v14);
    *(void *)(a1 + 16) = 0;
  }
}

void _Cleanup(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 600) && !*(unsigned char *)(a1 + 659))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
  }
  if (!*(unsigned char *)(a1 + 441))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(unsigned char *)(a1 + 659))
    {
LABEL_22:
      mach_absolute_time();
      UpTicksToSeconds();
      if (a2)
      {
        if (gLogCategory_AirPlayReceiverCore > 50
          || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_35;
        }
        if (!*(unsigned char *)(a1 + 657))
        {
LABEL_31:
          LogPrintF();
LABEL_35:
          int v11 = *(NSObject **)(a1 + 184);
          if (v11)
          {
            dispatch_source_cancel(*(dispatch_source_t *)(a1 + 184));
            dispatch_release(v11);
            *(void *)(a1 + 184) = 0;
          }
          CFIndex Count = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 568));
          block[0] = 0;
          if (Count >= 1)
          {
            CFIndex v13 = Count;
            if (_cfDictionaryCopyKeysAndValues(*(const __CFDictionary **)(a1 + 568), block, 0))
            {
              APSLogErrorAt();
            }
            else
            {
              for (CFIndex i = 0; i != v13; ++i)
              {
                ValueAtIndex = (void *)CFArrayGetValueAtIndex((CFArrayRef)block[0], i);
                _AudioTearDownStream(a1, 0, ValueAtIndex, a2);
              }
              if (!*(unsigned char *)(a1 + 730)) {
                CFObjectSetProperty();
              }
            }
            if (block[0]) {
              CFRelease(block[0]);
            }
          }
          _ScreenTearDown(a1);
          if (!CFEqual(*(CFTypeRef *)(a1 + 648), @"None") && *(void *)(a1 + 448) && !*(unsigned char *)(a1 + 659))
          {
            AirPlayReceiverSessionPlatformSetProperty((void *)a1, v16, @"timingProtocol", 0, 0);
            APSNetworkClockRemoveAllPeers();
            uint64_t v37 = *(void *)(a1 + 448);
            uint64_t v38 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v38) {
              uint64_t v39 = v38;
            }
            else {
              uint64_t v39 = 0;
            }
            int v40 = *(void (**)(uint64_t, uint64_t))(v39 + 88);
            if (v40) {
              v40(v37, a1);
            }
            int v41 = *(const void **)(a1 + 448);
            if (v41)
            {
              CFRelease(v41);
              *(void *)(a1 + 448) = 0;
            }
          }
          _ControlTearDown(a1);
          if (*(void *)(a1 + 712))
          {
            CFArrayRef v17 = (const __CFArray *)CFDictionaryCopyKeys();
            if (v17)
            {
              CFArrayRef v18 = v17;
              CFIndex v19 = CFArrayGetCount(v17);
              if (v19 >= 1)
              {
                CFIndex v20 = v19;
                for (CFIndex j = 0; j != v20; ++j)
                {
                  size_t v22 = CFArrayGetValueAtIndex(v18, j);
                  _PlaybackV2TearDown(a1, v22);
                }
              }
              CFRelease(v18);
            }
          }
          _UpdateActiveSessionRegistration((uint64_t *)a1);
          if (*(void *)(a1 + 672))
          {
            CFArrayRef v23 = (const __CFArray *)CFDictionaryCopyKeys();
            if (v23)
            {
              CFArrayRef v24 = v23;
              CFIndex v25 = CFArrayGetCount(v23);
              if (v25 >= 1)
              {
                CFIndex v26 = v25;
                for (CFIndex k = 0; k != v26; ++k)
                {
                  unint64_t v28 = (void *)CFArrayGetValueAtIndex(v24, k);
                  _RemoteControlSessionTearDown(a1, v28);
                }
              }
              CFRelease(v24);
            }
          }
          if (!*(unsigned char *)(a1 + 659)) {
            AirPlayReceiverSessionPlatformControl((void *)a1, @"stopSession");
          }
          BOOL v29 = *(const void **)(a1 + 176);
          if (v29)
          {
            CFRelease(v29);
            *(void *)(a1 + 176) = 0;
          }
          if (*(void *)(a1 + 600))
          {
            CMNotificationCenterGetDefaultLocalCenter();
            CMNotificationCenterRemoveListener();
          }
          unint64_t v30 = *(const void **)(a1 + 680);
          if (v30)
          {
            CFRelease(v30);
            *(void *)(a1 + 680) = 0;
          }
          int v31 = *(const void **)(a1 + 312);
          if (v31)
          {
            CFRelease(v31);
            *(void *)(a1 + 312) = 0;
          }
          double v32 = *(const void **)(a1 + 320);
          if (v32)
          {
            CFRelease(v32);
            *(void *)(a1 + 320) = 0;
          }
          unint64_t v33 = *(const void **)(a1 + 296);
          if (v33)
          {
            CFRelease(v33);
            *(void *)(a1 + 296) = 0;
          }
          double v34 = *(const void **)(a1 + 304);
          if (v34)
          {
            CFRelease(v34);
            *(void *)(a1 + 304) = 0;
          }
          int v35 = *(const void **)(a1 + 288);
          if (v35)
          {
            CFRelease(v35);
            *(void *)(a1 + 288) = 0;
          }
          AES_CBCFrame_Final();
          double v36 = *(const void **)(a1 + 616);
          if (v36)
          {
            CFRelease(v36);
            *(void *)(a1 + 616) = 0;
          }
          *(void *)(a1 + 32) = 0;
          *(unsigned char *)(a1 + 441) = 1;
          return;
        }
      }
      else
      {
        if (gLogCategory_AirPlayReceiverCore > 50
          || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_35;
        }
        if (!*(unsigned char *)(a1 + 657)) {
          goto LABEL_31;
        }
      }
      APSIsMemberOfHTGroup();
      goto LABEL_31;
    }
    int v4 = *(const void **)(a1 + 592);
    if (!v4)
    {
LABEL_21:
      _AirPlayReceiverSessionRemoveTrafficRegistration(a1);
      goto LABEL_22;
    }
    uint64_t v45 = 0;
    int v46 = &v45;
    uint64_t v47 = 0x2000000000;
    int v48 = 0;
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(uint64_t (**)(const void *))(v6 + 8);
    if (v7)
    {
      uint64_t v8 = v7(v4);
      if (!v8)
      {
        uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = 0;
        }
        unsigned int v42 = *(uint64_t (**)(const void *))(v10 + 24);
        if (v42) {
          int v43 = v42(v4);
        }
        else {
          int v43 = -12782;
        }
        *((_DWORD *)v46 + 6) = v43;
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v8 = MEMORY[0x263EF83A0];
    }
    block[0] = (CFTypeRef)MEMORY[0x263EF8330];
    block[1] = (CFTypeRef)0x40000000;
    block[2] = __APReceiverSBufConsumerStop_block_invoke;
    block[3] = &unk_2648963B0;
    block[4] = &v45;
    void block[5] = v4;
    dispatch_sync(v8, block);
LABEL_20:
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    _Block_object_dispose(&v45, 8);
    goto LABEL_21;
  }
}

uint64_t __APReceiverSBufConsumerStop_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 24);
  if (v5) {
    uint64_t result = v5(v2);
  }
  else {
    uint64_t result = 4294954514;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void _AirPlayReceiverSessionRemoveTrafficRegistration(uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 432);
  if (v2)
  {
    if (gLogCategory_AirPlayReceiverCore > 50) {
      goto LABEL_7;
    }
    if (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    uint64_t v2 = *(const void **)(a1 + 432);
    if (v2)
    {
LABEL_7:
      CFRelease(v2);
      *(void *)(a1 + 432) = 0;
    }
  }
}

uint64_t _cfDictionaryCopyKeysAndValues(const __CFDictionary *a1, CFTypeRef *a2, CFTypeRef *a3)
{
  size_t Count = CFDictionaryGetCount(a1);
  size_t v7 = Count;
  if (!a2)
  {
    uint64_t v8 = 0;
    if (a3) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  uint64_t v8 = (const void **)malloc_type_calloc(Count, 8uLL, 0xC0040B8AA526DuLL);
  if (!v8)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  if (!a3) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v9 = (const void **)malloc_type_calloc(v7, 8uLL, 0xC0040B8AA526DuLL);
  if (!v9)
  {
    APSLogErrorAt();
    CFArrayRef v10 = 0;
LABEL_31:
    CFArrayRef v13 = 0;
    goto LABEL_33;
  }
LABEL_8:
  CFDictionaryGetKeysAndValues(a1, v8, v9);
  if (a2)
  {
    CFAllocatorRef v11 = CFGetAllocator(a1);
    CFArrayRef v10 = CFArrayCreate(v11, v8, v7, MEMORY[0x263EFFF70]);
    if (!v10)
    {
      APSLogErrorAt();
      goto LABEL_31;
    }
    if (a3)
    {
LABEL_11:
      CFAllocatorRef v12 = CFGetAllocator(a1);
      CFArrayRef v13 = CFArrayCreate(v12, v9, v7, MEMORY[0x263EFFF70]);
      if (!v13)
      {
        APSLogErrorAt();
LABEL_33:
        uint64_t v14 = 4294960568;
        if (!v8) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }
      if (a2) {
        goto LABEL_13;
      }
      goto LABEL_14;
    }
  }
  else
  {
    CFArrayRef v10 = 0;
    if (a3) {
      goto LABEL_11;
    }
  }
  CFArrayRef v13 = 0;
  if (a2) {
LABEL_13:
  }
    *a2 = CFRetain(v10);
LABEL_14:
  if (a3)
  {
    uint64_t v14 = 0;
    *a3 = CFRetain(v13);
    if (!v8) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  uint64_t v14 = 0;
  if (v8) {
LABEL_21:
  }
    free(v8);
LABEL_22:
  if (v9) {
    free(v9);
  }
  if (v10) {
    CFRelease(v10);
  }
  if (v13) {
    CFRelease(v13);
  }
  return v14;
}

void _AudioTearDownStream(uint64_t a1, uint64_t a2, void *key, uint64_t a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (key)
  {
    uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 568), key);
    if (Value)
    {
      uint64_t v9 = Value;
      CFArrayRef v10 = *(void **)(a1 + 576);
      if (!a2)
      {
        CFMutableDictionaryRef v12 = 0;
        goto LABEL_11;
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        CFMutableDictionaryRef v12 = Mutable;
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        FigCFDictionarySetValue();
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        FigCFDictionarySetValue();
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        FigCFDictionarySetValue();
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        FigCFDictionarySetValue();
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        FigCFDictionarySetValue();
        CFDictionaryGetTypeID();
        CFDictionaryGetTypedValue();
        FigCFDictionarySetValue();
LABEL_11:
        uint64_t v23 = 0;
        memset(v22, 0, sizeof(v22));
        CFArrayRef v13 = (void (*)(void, CFMutableDictionaryRef))v9[10];
        if (v13) {
          v13(v9[5], v12);
        }
        DataBuffer_Init();
        DataBuffer_AppendF();
        uint64_t v14 = (void (*)(void, _OWORD *, uint64_t))v9[21];
        if (v14) {
          v14(v9[5], v22, a4);
        }
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        DataBuffer_Free();
        APReceiverAudioSessionInvalidate((uint64_t)v9);
        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 568), key);
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (v9 == v10)
        {
          uint64_t v15 = *(const void **)(a1 + 576);
          if (v15)
          {
            CFRelease(v15);
            *(void *)(a1 + 576) = 0;
          }
        }
        if (*(void *)(a1 + 600))
        {
          int v16 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          CFDictionarySetValue(v16, @"sessionID", key);
          uint64_t v17 = *(void *)(a1 + 600);
          uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v18) {
            uint64_t v19 = v18;
          }
          else {
            uint64_t v19 = 0;
          }
          CFIndex v20 = *(void (**)(uint64_t, __CFDictionary *))(v19 + 136);
          if (v20) {
            v20(v17, v16);
          }
          if (v16) {
            CFRelease(v16);
          }
        }
        int v21 = *(_DWORD *)(a1 + 556);
        if (*(_DWORD *)(a1 + 552) != v21)
        {
          *(_DWORD *)(a1 + 552) = v21;
          *(void *)(a1 + 520) = UpTicksPerSecond() * v21;
          SocketSetKeepAlive();
        }
        if (v9 == v10) {
          AirPlayReceiverSessionPlatformControl((void *)a1, @"handleMediaAudioStoppingForSession");
        }
        _UpdateActiveSessionRegistration((uint64_t *)a1);
        if (v12) {
          CFRelease(v12);
        }
        return;
      }
    }
  }

  APSLogErrorAt();
}

void _ScreenTearDown(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 616);
  if (v1)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
    if (v5) {
      v5(v1);
    }
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v6 = *(const void **)(a1 + 616);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 616) = 0;
    }
    if (*(void *)(a1 + 600) && *(unsigned char *)(a1 + 633))
    {
      *(unsigned char *)(a1 + 633) = 0;
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFDictionarySetNumber();
      CFDictionarySetNumber();
      uint64_t v8 = *(void *)(a1 + 600);
      uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v9) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 0;
      }
      CFAllocatorRef v11 = *(void (**)(uint64_t, CFMutableDictionaryRef))(v10 + 40);
      if (v11) {
        v11(v8, Mutable);
      }
      *(_DWORD *)(a1 + 636) = 0;
      if (Mutable) {
        CFRelease(Mutable);
      }
    }
    _UpdateActiveSessionRegistration((uint64_t *)a1);
  }
}

int *_ControlTearDown(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 456))
  {
    *(unsigned char *)(a1 + 456) = 0;
    if (gLogCategory_AirPlayReceiverCore <= 30
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (*(void *)(a1 + 464))
  {
    HTTPClientInvalidate();
    CFRelease(*(CFTypeRef *)(a1 + 464));
    *(void *)(a1 + 464) = 0;
  }
  uint64_t v2 = *(const void **)(a1 + 488);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 488) = 0;
  }
  uint64_t result = (int *)*(unsigned int *)(a1 + 476);
  if ((result & 0x80000000) == 0)
  {
    uint64_t result = (int *)close((int)result);
    if (result)
    {
      uint64_t result = __error();
      if (*result) {
        uint64_t result = __error();
      }
    }
    *(_DWORD *)(a1 + 476) = -1;
  }
  return result;
}

void _PlaybackV2TearDown(uint64_t a1, const void *a2)
{
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(a1 + 600))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionarySetValue(Mutable, @"sessionID", a2);
    uint64_t v5 = *(void *)(a1 + 600);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    uint64_t v8 = *(void (**)(uint64_t, __CFDictionary *))(v7 + 56);
    if (v8) {
      v8(v5, Mutable);
    }
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 712), a2);
    CFSetRemoveValue(*(CFMutableSetRef *)(a1 + 720), a2);
    if (CFSetGetCount(*(CFSetRef *)(a1 + 720)))
    {
      if (!Mutable) {
        return;
      }
    }
    else
    {
      _UpdateActiveSessionRegistration((uint64_t *)a1);
      if (!Mutable) {
        return;
      }
    }
    CFRelease(Mutable);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _UpdateActiveSessionRegistration(uint64_t *a1)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFDictionaryRef v3 = Mutable;
    CFDictionarySetValue(Mutable, @"session", a1);
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (AirPlayReceiverServerPlatformControl(a1[3], @"updateActiveSessionRegistration", 0, v3)) {
      APSLogErrorAt();
    }
    CFRelease(v3);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _RemoteControlSessionTearDown(uint64_t a1, void *key)
{
  if (key)
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 672), key);
    if (Value)
    {
      uint64_t v5 = Value;
      uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v6) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 0;
      }
      uint64_t v8 = *(void (**)(const void *))(v7 + 24);
      if (v8) {
        v8(v5);
      }
      uint64_t v9 = *(__CFDictionary **)(a1 + 672);
      CFDictionaryRemoveValue(v9, key);
    }
    else if (gLogCategory_AirPlayReceiverCore <= 50 {
           && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
}

void _AirPlayReceiverSession_HandleUINotifications(int a1, void *a2, CFTypeRef cf1, uint64_t a4, const void *a5)
{
  if (CFEqual(cf1, @"userStop"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverSession_Terminate((uint64_t)a2);
    return;
  }
  if (CFEqual(cf1, @"FPSSecureStopGenerated"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a2);
    if (a5) {
      CFRetain(a5);
    }
    uint64_t v8 = a2[2];
    v18[0] = MEMORY[0x263EF8330];
    v18[1] = 0x40000000;
    _OWORD v18[2] = ___AirPlayReceiverSession_HandleUINotifications_block_invoke;
    void v18[3] = &__block_descriptor_tmp_324;
    v18[4] = a2;
    v18[5] = a5;
    uint64_t v9 = v18;
LABEL_48:
    dispatch_async(v8, v9);
    return;
  }
  if (CFEqual(cf1, @"serverDied"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a2);
    uint64_t v8 = a2[2];
    v17[0] = MEMORY[0x263EF8330];
    v17[1] = 0x40000000;
    _OWORD v17[2] = ___AirPlayReceiverSession_HandleUINotifications_block_invoke_2;
    v17[3] = &__block_descriptor_tmp_326;
    v17[4] = a2;
    uint64_t v9 = v17;
    goto LABEL_48;
  }
  if (CFEqual(cf1, @"stopPresentation"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int Int64 = CFDictionaryGetInt64();
    CFRetain(a2);
    uint64_t v8 = a2[2];
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 0x40000000;
    v15[2] = ___AirPlayReceiverSession_HandleUINotifications_block_invoke_3;
    v15[3] = &__block_descriptor_tmp_328;
    int v16 = Int64;
    v15[4] = a2;
    uint64_t v9 = v15;
    goto LABEL_48;
  }
  if (CFEqual(cf1, @"KeyFrameNeeded"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a2);
    uint64_t v8 = a2[2];
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 0x40000000;
    _OWORD v14[2] = ___AirPlayReceiverSession_HandleUINotifications_block_invoke_4;
    v14[3] = &__block_descriptor_tmp_330;
    v14[4] = a2;
    uint64_t v9 = v14;
    goto LABEL_48;
  }
  if (CFEqual(cf1, @"UpdateDisplayInfo"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a2);
    uint64_t v8 = a2[2];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = ___AirPlayReceiverSession_HandleUINotifications_block_invoke_5;
    block[3] = &__block_descriptor_tmp_332;
    block[4] = a2;
    uint64_t v9 = block;
    goto LABEL_48;
  }
  if (CFEqual(cf1, @"ScreenRecordingStarted"))
  {
    CFAllocatorRef v11 = (NSObject **)a2;
    char v12 = 1;
  }
  else
  {
    if (!CFEqual(cf1, @"ScreenRecordingStopped")) {
      return;
    }
    CFAllocatorRef v11 = (NSObject **)a2;
    char v12 = 0;
  }

  _ScreenPostRecordingState(v11, v12);
}

uint64_t _AirPlayReceiverSession_Terminate(uint64_t a1)
{
  if (!a1)
  {
    if (gLogCategory_AirPlayReceiverCore > 50
      || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
    {
      return CFObjectControlAsync();
    }
LABEL_5:
    LogPrintF();
    return CFObjectControlAsync();
  }
  _ReportSessionStallIfNeeded(a1, 2);
  if (*(void *)(a1 + 32))
  {
    if (gLogCategory_AirPlayReceiverCore > 50
      || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
    {
      return CFObjectControlAsync();
    }
    goto LABEL_5;
  }

  return APSLogErrorAt();
}

void _ScreenPostRecordingState(NSObject **cf, char a2)
{
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(cf);
  uint64_t v4 = cf[2];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = ___ScreenPostRecordingState_block_invoke;
  block[3] = &__block_descriptor_tmp_354;
  char v6 = a2;
  block[4] = cf;
  dispatch_async(v4, block);
}

uint64_t AirPlayReceiverSessionSendCommandForObject(uint64_t a1, const __CFNumber *a2, const void *a3, uint64_t a4, uint64_t a5)
{
  CFTypeRef cf = 0;
  if (!*(unsigned char *)(a1 + 458)) {
    return 0;
  }
  if (!*(void *)(a1 + 464))
  {
    uint64_t v22 = 0;
LABEL_26:
    CFDataRef v15 = 0;
LABEL_29:
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_13;
  }
  uint64_t v10 = HTTPMessageCreate();
  if (v10)
  {
    uint64_t v22 = v10;
LABEL_25:
    APSLogErrorAt();
    goto LABEL_26;
  }
  *((_DWORD *)cf + 2411) = *(_DWORD *)(a1 + 556);
  uint64_t inited = HTTPHeader_InitRequest();
  if (inited)
  {
    uint64_t v22 = inited;
    goto LABEL_25;
  }
  int v12 = *(_DWORD *)(a1 + 472) + 1;
  uint64_t v13 = HTTPHeader_SetField();
  if (v13)
  {
    uint64_t v22 = v13;
    goto LABEL_25;
  }
  if (a2)
  {
    uint64_t valuePtr = 0;
    CFNumberGetValue(a2, kCFNumberSInt64Type, &valuePtr);
    HTTPHeader_SetField();
  }
  CFDataRef Data = CFPropertyListCreateData(0, a3, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  CFDataRef v15 = Data;
  if (Data)
  {
    CFDataGetBytePtr(Data);
    CFDataGetLength(v15);
    uint64_t v16 = HTTPMessageSetBody();
    if (!v16)
    {
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 2, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        mach_absolute_time();
        CFDictionarySetInt64();
        HTTPClientGetClientID();
        CFDictionarySetInt64();
        *(_DWORD *)(a1 + 472) = v12;
        CFTypeRef v18 = CFRetain((CFTypeRef)a1);
        uint64_t v19 = cf;
        *((void *)cf + 1209) = v18;
        v19[1210] = a4;
        v19[1211] = a5;
        CFTypeRef v20 = CFRetain(Mutable);
        int v21 = cf;
        *((void *)cf + 1212) = v20;
        v21[1214] = _AirPlayReceiverSessionSendCommandCompletion;
        uint64_t v22 = HTTPClientSendMessage();
        if (v22)
        {
          CFRelease((CFTypeRef)a1);
          CFRelease(Mutable);
          APSLogErrorAt();
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v22 = 0;
      }
      goto LABEL_13;
    }
    uint64_t v22 = v16;
    APSLogErrorAt();
    goto LABEL_29;
  }
  APSLogErrorAt();
  CFMutableDictionaryRef Mutable = 0;
  uint64_t v22 = 4294960596;
LABEL_13:
  if (cf) {
    CFRelease(cf);
  }
  if (v15) {
    CFRelease(v15);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v22;
}

void _AirPlayReceiverSessionSendCommandCompletion(void *a1)
{
  uint64_t v2 = (const void *)a1[1209];
  CFDictionaryRef v3 = (void (*)(void, uint64_t, void))a1[1210];
  uint64_t v4 = (const void *)a1[1212];
  CFDictionaryGetInt64();
  mach_absolute_time();
  UpTicksToSecondsF();
  if (v5 > 5.0)
  {
    CFDictionaryGetInt64Ranged();
    if (gLogCategory_AirPlayReceiverCore <= 60
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (v3)
  {
    CFDictionaryGetTypeID();
    uint64_t v6 = CFCreateWithPlistBytes();
    unsigned int Int64 = CFDictionaryGetInt64();
    if (Int64) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v6;
    }
    v3(Int64, v7, a1[1211]);
    uint64_t v8 = (const void *)v6;
  }
  else
  {
    uint64_t v8 = 0;
  }
  CFRelease(v2);
  CFRelease(v4);
  if (v8) {
    CFRelease(v8);
  }
}

uint64_t AirPlayReceiverSessionForceKeyFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    uint64_t v7 = Mutable;
    CFDictionarySetValue(Mutable, @"type", @"forceKeyFrame");
    uint64_t v8 = AirPlayReceiverSessionSendCommandForObject(a1, 0, v7, a2, a3);
    if (v8) {
      APSLogErrorAt();
    }
    CFRelease(v7);
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
  return v8;
}

void _ReportSessionStallIfNeeded(uint64_t a1, int a2)
{
  int v4 = *(_DWORD *)(a1 + 536);
  if (a2 == 1)
  {
    if (v4 == 1) {
      return;
    }
  }
  else if (v4 != 1)
  {
    return;
  }
  if (gLogCategory_AirPlayReceiverCore <= 60
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    CFDictionaryRef v6 = Mutable;
    CFDictionarySetInt64();
    AirPlayReceiverServerPlatformControl(*(void *)(a1 + 24), @"reportSessionStall", 0, v6);
    *(_DWORD *)(a1 + 536) = a2;
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
  }
}

__n128 AirPlayReceiverSessionSetDelegate(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 88) = v4;
  *(_OWORD *)(a1 + 72) = v3;
  *(__n128 *)(a1 + 56) = result;
  return result;
}

uint64_t AirPlayReceiverSessionControl(uint64_t a1, int a2, CFTypeRef cf1, __CFString *a4, const __CFDictionary *a5, __CFDictionary **a6)
{
  if (CFEqual(cf1, @"updateFeedback"))
  {
    if (!a1 || !a6) {
      return 0;
    }
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      int v12 = Mutable;
      CFMutableArrayRef v13 = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
      if (v13)
      {
        CFMutableArrayRef v14 = v13;
        CFDictionarySetValue(v12, @"streams", v13);
        *a6 = v12;
        CFRelease(v14);
        return 0;
      }
      APSLogErrorAt();
      CFRelease(v12);
    }
    else
    {
      APSLogErrorAt();
    }
    unsigned int v39 = -6728;
    goto LABEL_41;
  }
  if (CFEqual(cf1, @"didReceiveData"))
  {
    CFNumberGetTypeID();
    TypedCFDictionaryRef Value = (const void *)CFDictionaryGetTypedValue();
    if (CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 712), TypedValue))
    {
      CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(a5, @"params");
      CFStringRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, Value);
      if (*(void *)(a1 + 600))
      {
        uint64_t v19 = MutableCopy;
        CFDictionarySetValue(MutableCopy, @"X-Apple-StreamID", TypedValue);
        uint64_t v20 = *(void *)(a1 + 600);
        uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v21) {
          uint64_t v22 = v21;
        }
        else {
          uint64_t v22 = 0;
        }
        unint64_t v28 = *(uint64_t (**)(uint64_t, __CFDictionary *, __CFDictionary **))(v22 + 64);
        if (v28) {
          int v29 = v28(v20, v19, a6);
        }
        else {
          int v29 = -12782;
        }
        unsigned int v39 = v29;
        if (v19)
        {
          CFRelease(v19);
          int v29 = v39;
        }
        if (!v29) {
          return 0;
        }
        goto LABEL_41;
      }
      APSLogErrorAt();
      return -6735;
    }
    uint64_t v24 = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 672), TypedValue);
    if (v24)
    {
      CFIndex v25 = v24;
      uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v26) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      unint64_t v30 = *(uint64_t (**)(const void *, const __CFDictionary *))(v27 + 16);
      if (v30)
      {
        unsigned int v39 = v30(v25, a5);
        if (!v39) {
          return 0;
        }
      }
      else
      {
        unsigned int v39 = -12782;
      }
      goto LABEL_41;
    }
LABEL_93:
    APSLogErrorAt();
    return -6709;
  }
  if (CFEqual(cf1, @"reportIssue"))
  {
    if (a5)
    {
      CFStringGetTypeID();
      uint64_t v23 = (const void *)CFDictionaryGetTypedValue();
      if (CFEqual(v23, (CFTypeRef)*MEMORY[0x263F24A50]))
      {
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        CFNumberGetTypeID();
        CFDictionaryGetTypedValue();
        if (*(_DWORD *)(a1 + 192) == 128)
        {
          if (APSSettingsGetIntWithDefault()) {
            APTNANDataSessionIssueReportCreate();
          }
        }
      }
      return 0;
    }
    APSLogErrorAt();
    unsigned int v39 = -6705;
    goto LABEL_41;
  }
  if (CFEqual(cf1, @"nanWifiStats"))
  {
    if (*(_DWORD *)(a1 + 192) != 128)
    {
      if (a6)
      {
        CFDictionaryRef Empty = (const void *)CFDictionaryGetEmpty();
        *a6 = (__CFDictionary *)CFRetain(Empty);
      }
      return 0;
    }
    unsigned int v39 = APAdvertiserCopyNANWifiStats(*(void *)(*(void *)(a1 + 24) + 40), a6);
    if (!v39) {
      return 0;
    }
LABEL_41:
    APSLogErrorAt();
    return v39;
  }
  if (CFEqual(cf1, @"sessionDied"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverSession_Terminate(a1);
    return 0;
  }
  if (CFEqual(cf1, @"volumeChanged"))
  {
    double v32 = CFDictionaryGetValue(a5, @"volumeLinear");
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v32)
    {
      unsigned int v39 = _ProcessSWVolumeChanged(a1, (uint64_t)v32);
      if (!v39) {
        return 0;
      }
      goto LABEL_41;
    }
    goto LABEL_93;
  }
  if (CFEqual(cf1, @"audioInterruptionBegan"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (FigCFEqual())
    {
      uint64_t v33 = a1;
      int v34 = 1;
LABEL_84:
      _ForwardAudioInterruptionCommandsToReceiverAudioSessions(v33, v34, 0);
      return 0;
    }
    if (!FigCFEqual())
    {
      unsigned int v39 = -6735;
      goto LABEL_41;
    }
    uint64_t v35 = a1;
    int v36 = 1;
    goto LABEL_87;
  }
  if (CFEqual(cf1, @"audioInterruptionEnded"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (FigCFEqual())
    {
      uint64_t v33 = a1;
      int v34 = 0;
      goto LABEL_84;
    }
    if (!FigCFEqual())
    {
      unsigned int v39 = -6735;
      goto LABEL_41;
    }
    uint64_t v35 = a1;
    int v36 = 0;
LABEL_87:
    _HandleMediaAudioInterruption(v35, v36);
    return 0;
  }
  if (CFEqual(cf1, @"otherProcessStartedPlaying"))
  {
    _HandleOtherProcessStartedPlaying(a1);
    return 0;
  }
  if (CFEqual(cf1, @"partnerProcessDeath"))
  {
    if (a4)
    {
      CFTypeID v37 = CFGetTypeID(a4);
      if (v37 == CFStringGetTypeID())
      {
        _HandlePartnerProcessDeath(a1, a4);
        return 0;
      }
    }
    APSLogErrorAt();
    return -6705;
  }
  if (CFEqual(cf1, @"handleMediaAudioResumedForSession"))
  {
    _HandleMediaAudioResumedForSession(a1, a4);
    return 0;
  }
  if (CFEqual(cf1, @"fadeAudio"))
  {
    _HandleFadeAudioCommand(a1);
    return 0;
  }
  if (CFEqual(cf1, @"performPWDKeyExchange"))
  {
    unsigned int v39 = _HandlePerformPWDKeyExchangeCommand(a1, (uint64_t)a5, a6);
    if (!v39) {
      return 0;
    }
    goto LABEL_41;
  }
  if (*(unsigned char *)(a1 + 659))
  {
    APSLogErrorAt();
    unsigned int v39 = 0;
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    return AirPlayReceiverSessionPlatformControl((void *)a1, cf1);
  }
  return v39;
}

uint64_t _ProcessSWVolumeChanged(uint64_t a1, uint64_t a2)
{
  CFArrayRef theArray = 0;
  uint64_t Count = FigCFDictionaryGetCount();
  CFDictionaryRef v5 = *(const __CFDictionary **)(a1 + 568);
  if (!v5)
  {
LABEL_10:
    uint64_t v9 = 0;
    goto LABEL_11;
  }
  uint64_t v6 = _cfDictionaryCopyKeysAndValues(v5, 0, (CFTypeRef *)&theArray);
  if (!v6)
  {
    if (Count >= 1)
    {
      for (CFIndex i = 0; i != Count; ++i)
      {
        ValueAtIndex = CFArrayGetValueAtIndex(theArray, i);
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APReceiverAudioSessionSetProperty((uint64_t)ValueAtIndex, @"VolumeLinear", a2);
      }
    }
    goto LABEL_10;
  }
  uint64_t v9 = v6;
  APSLogErrorAt();
LABEL_11:
  if (theArray) {
    CFRelease(theArray);
  }
  return v9;
}

void _ForwardAudioInterruptionCommandsToReceiverAudioSessions(uint64_t a1, int a2, int a3)
{
  if (a2) {
    long long v3 = @"RASP::HandleAudioInterruptionBegan";
  }
  else {
    long long v3 = @"RASP::HandleAudioInterruptionEnded";
  }
  if (!*(unsigned char *)(a1 + 659))
  {
    CFArrayRef v5 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    if (v5)
    {
      CFArrayRef v6 = v5;
      CFIndex Count = CFArrayGetCount(v5);
      if (Count >= 1)
      {
        CFIndex v8 = Count;
        for (CFIndex i = 0; i != v8; ++i)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(v6, i);
          if ((CFObjectGetPropertyInt64Sync() != 0) == a3)
          {
            if (gLogCategory_AirPlayReceiverCore <= 50
              && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            APReceiverAudioSessionPlatformControl(ValueAtIndex, v3);
          }
        }
      }
      CFRelease(v6);
    }
  }
}

void _HandleMediaAudioInterruption(uint64_t a1, int a2)
{
  if (a2)
  {
    if (!*(unsigned char *)(a1 + 659))
    {
      if (*(unsigned char *)(*(void *)(a1 + 24) + 251))
      {
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _ForwardAudioInterruptionCommandsToReceiverAudioSessions(a1, 1, 1);
        *(unsigned char *)(a1 + 729) = 1;
      }
      else if (*(unsigned char *)(a1 + 660))
      {
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (*(void *)(a1 + 576))
        {
          AirPlayReceiverSessionSendMediaRemoteCommand((void *)a1, -1, 1885435251, 0);
          if (gLogCategory_AirPlayReceiverCore <= 50
            && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *(unsigned char *)(a1 + 729) = 1;
        }
      }
      else
      {
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _AirPlayReceiverSession_Terminate(a1);
        *(unsigned char *)(a1 + 728) = 1;
      }
    }
    return;
  }
  if (*(unsigned char *)(a1 + 659)) {
    return;
  }
  if (*(unsigned char *)(*(void *)(a1 + 24) + 251))
  {
    *(unsigned char *)(a1 + 729) = 0;
    _ForwardAudioInterruptionCommandsToReceiverAudioSessions(a1, 0, 1);
    if (gLogCategory_AirPlayReceiverCore > 50
      || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
    {
      return;
    }
    goto LABEL_11;
  }
  if (!*(unsigned char *)(a1 + 660))
  {
    if (gLogCategory_AirPlayReceiverCore > 50
      || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
    {
      return;
    }
LABEL_11:
    LogPrintF();
    return;
  }
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(a1 + 729))
  {
    *(unsigned char *)(a1 + 729) = 0;
    if (CFDictionaryGetInt64())
    {
      AirPlayReceiverSessionSendMediaRemoteCommand((void *)a1, -1, 1886151033, 0);
      if (gLogCategory_AirPlayReceiverCore > 50
        || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
      {
        return;
      }
    }
    else if (gLogCategory_AirPlayReceiverCore > 50 {
           || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
    }
    {
      return;
    }
    goto LABEL_11;
  }
}

uint64_t _HandleOtherProcessStartedPlaying(uint64_t result)
{
  if (!*(unsigned char *)(result + 659))
  {
    uint64_t v1 = result;
    if (!*(unsigned char *)(result + 660))
    {
      if (gLogCategory_AirPlayReceiverCore <= 50
        && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return _AirPlayReceiverSession_Terminate(v1);
    }
  }
  return result;
}

uint64_t _HandlePartnerProcessDeath(uint64_t result, __CFString *cf1)
{
  uint64_t v2 = result;
  if (cf1 == @"MediaServices") {
    goto LABEL_24;
  }
  if (!cf1) {
    return result;
  }
  __n128 result = CFEqual(cf1, @"MediaServices");
  if (result)
  {
LABEL_24:
    if (*(unsigned char *)(v2 + 659)) {
      return result;
    }
    if (gLogCategory_AirPlayReceiverCore <= 60
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(v2 + 729) = 0;
    goto LABEL_17;
  }
  if (cf1 == @"MediaRemoteServices" || (__n128 result = CFEqual(cf1, @"MediaRemoteServices"), result))
  {
    if (*(unsigned char *)(v2 + 659))
    {
      if (gLogCategory_AirPlayReceiverCore <= 60
        && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
LABEL_17:
      return _AirPlayReceiverSession_Terminate(v2);
    }
  }
  return result;
}

uint64_t _HandleMediaAudioResumedForSession(uint64_t a1, __CFString *a2)
{
  uint64_t result = APSIsAPMSpeaker();
  if (result && *(unsigned char *)(a1 + 657))
  {
    if (gLogCategory_AirPlayReceiverCore <= 50)
    {
      if (gLogCategory_AirPlayReceiverCore != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    if (a2 != @"com.apple.TVAirPlay")
    {
      if (!a2 || (uint64_t result = CFEqual(a2, @"com.apple.TVAirPlay"), !result))
      {
        if (*(void *)(a1 + 32))
        {
          if (gLogCategory_AirPlayReceiverCore <= 50
            && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CFArrayRef v5 = *(const void **)(a1 + 32);
          return APReceiverRequestProcessorHijackAndBecomeMainSession(v5);
        }
      }
    }
  }
  return result;
}

uint64_t _HandleFadeAudioCommand(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 576))
  {
    if (CFDictionaryGetInt64() == 1) {
      uint64_t v2 = 2;
    }
    else {
      uint64_t v2 = 1;
    }
    CFDictionaryGetDouble();
    Float64 v4 = v3;
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v5 = *(void *)(v1 + 576);
    CMTimeMakeWithSeconds(&v6, v4, 1000);
    return APReceiverAudioSessionApplyVolumeFade(v5, v2, &v6);
  }
  else if (gLogCategory_AirPlayReceiverCore <= 50)
  {
    if (gLogCategory_AirPlayReceiverCore != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t _HandlePerformPWDKeyExchangeCommand(uint64_t a1, uint64_t a2, __CFDictionary **a3)
{
  unsigned int v22 = 0;
  CFDictionaryRef theDict = 0;
  CFTypeRef cf = 0;
  CFTypeRef v19 = 0;
  char v18 = 0;
  if (!APSSettingsIsFeatureEnabled())
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    int v17 = -6735;
    goto LABEL_59;
  }
  CFDataGetTypeID();
  TypedCFDictionaryRef Value = CFDictionaryGetTypedValue();
  int v6 = gLogCategory_AirPlayReceiverCore;
  if (gLogCategory_AirPlayReceiverCore <= 50)
  {
    if (gLogCategory_AirPlayReceiverCore != -1)
    {
LABEL_4:
      if (v6 == -1) {
        _LogCategory_Initialize();
      }
      LogPrintF();
      goto LABEL_10;
    }
    if (_LogCategory_Initialize())
    {
      int v6 = gLogCategory_AirPlayReceiverCore;
      goto LABEL_4;
    }
  }
LABEL_10:
  if (*(void *)(a1 + 640)) {
    goto LABEL_23;
  }
  unsigned int v22 = CFArrayEnsureCreatedAndAppend();
  if (v22) {
    goto LABEL_33;
  }
  unsigned int v22 = APReceiverSystemInfoCopyInfoDict(*(void *)(*(void *)(a1 + 24) + 160), (uint64_t)cf, *MEMORY[0x263EFFB08], (uint64_t)&theDict);
  if (v22) {
    goto LABEL_33;
  }
  if (CFDictionaryGetValue(theDict, @"displayCapabilities"))
  {
    CFDictionaryGetInt64();
    CFDictionaryGetInt64Ranged();
    unsigned int v22 = FigPWDKeyExchangeReceiverCreate();
    if (v22) {
      goto LABEL_33;
    }
    int v7 = gLogCategory_AirPlayReceiverCore;
    if (gLogCategory_AirPlayReceiverCore <= 50)
    {
      if (gLogCategory_AirPlayReceiverCore == -1)
      {
        if (!_LogCategory_Initialize()) {
          goto LABEL_23;
        }
        int v7 = gLogCategory_AirPlayReceiverCore;
      }
      if (v7 == -1) {
        _LogCategory_Initialize();
      }
      LogPrintF();
    }
LABEL_23:
    uint64_t v8 = *(void *)(a1 + 640);
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    CFAllocatorRef v11 = *(uint64_t (**)(uint64_t, uint64_t, CFTypeRef *, char *))(v10 + 24);
    if (v11)
    {
      unsigned int v22 = v11(v8, TypedValue, &v19, &v18);
      if (!v22)
      {
        int v12 = gLogCategory_AirPlayReceiverCore;
        if (gLogCategory_AirPlayReceiverCore <= 50)
        {
          if (gLogCategory_AirPlayReceiverCore != -1)
          {
LABEL_30:
            if (v12 == -1) {
              _LogCategory_Initialize();
            }
            LogPrintF();
            goto LABEL_38;
          }
          if (_LogCategory_Initialize())
          {
            int v12 = gLogCategory_AirPlayReceiverCore;
            goto LABEL_30;
          }
        }
LABEL_38:
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        FigCFDictionarySetValue();
        CFMutableArrayRef v14 = (const void **)MEMORY[0x263EFFB40];
        if (!v18) {
          CFMutableArrayRef v14 = (const void **)MEMORY[0x263EFFB38];
        }
        CFDictionarySetValue(Mutable, @"complete", *v14);
        if (!a3)
        {
LABEL_43:
          if (!v22) {
            goto LABEL_46;
          }
          goto LABEL_44;
        }
        *a3 = Mutable;
LABEL_42:
        CFMutableDictionaryRef Mutable = 0;
        goto LABEL_43;
      }
    }
    else
    {
      unsigned int v22 = -12782;
    }
LABEL_33:
    APSLogErrorAt();
    goto LABEL_42;
  }
  APSLogErrorAt();
  CFMutableDictionaryRef Mutable = 0;
  int v17 = -6709;
LABEL_59:
  unsigned int v22 = v17;
LABEL_44:
  CFDataRef v15 = *(const void **)(a1 + 640);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(a1 + 640) = 0;
  }
LABEL_46:
  if (cf) {
    CFRelease(cf);
  }
  if (theDict) {
    CFRelease(theDict);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v22;
}

uint64_t AirPlayReceiverSessionSendMediaRemoteCommand(void *a1, uint64_t a2, int a3, const void *a4)
{
  CFDataRef v15 = 0;
  uint64_t v16 = 0;
  if (a2 < 0 && !a3)
  {
    APSLogErrorAt();
    uint64_t v12 = 0;
  }
  else
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v9 = Mutable;
      CFDictionarySetValue(Mutable, @"type", @"sendMediaRemoteCommand");
      if (a2 < 0 && !a3)
      {
        if (a4) {
          CFDictionarySetValue(v9, @"params", a4);
        }
        CFRetain(a1);
        CFRetain(v9);
        uint64_t v10 = a1[2];
        block[0] = MEMORY[0x263EF8330];
        block[1] = 0x40000000;
        block[2] = __AirPlayReceiverSessionSendMediaRemoteCommand_block_invoke;
        block[3] = &__block_descriptor_tmp_271;
        int v14 = a3;
        block[4] = a1;
        void block[5] = a2;
        CFTypeRef block[6] = v9;
        dispatch_async(v10, block);
        uint64_t v12 = 0;
      }
      else
      {
        ASPrintF();
        APSLogErrorAt();
        uint64_t v12 = 4294960568;
      }
      CFRelease(v9);
      if (v16)
      {
        free(v16);
        uint64_t v16 = 0;
      }
    }
    else
    {
      APSLogErrorAt();
      uint64_t v12 = 4294960568;
    }
  }
  if (v15) {
    free(v15);
  }
  return v12;
}

void __AirPlayReceiverSessionSendMediaRemoteCommand_block_invoke(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 56);
  if (v2 == 1885435251 || v2 == 1937010544 || v2 == 1886154867)
  {
    int v7 = 0;
    if (CFObjectGetPropertyInt64Sync())
    {
      long long v5 = 0uLL;
      uint64_t v6 = 0;
      AirPlayReceiverSessionSetRateAndAnchorTime(*(void *)(a1 + 32), 0, MEMORY[0x263F249C0], MEMORY[0x263F249C0], &v5);
    }
  }
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  AirPlayReceiverSessionSendCommandForObject(*(void *)(a1 + 32), 0, *(const void **)(a1 + 48), 0, 0);
  CFRelease(*(CFTypeRef *)(a1 + 32));
  CFRelease(*(CFTypeRef *)(a1 + 48));
}

uint64_t AirPlayReceiverSessionSetRateAndAnchorTime(uint64_t a1, uint64_t a2, _OWORD *a3, _OWORD *a4, long long *a5)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  uint64_t v5 = *(void *)(a1 + 576);
  if (!v5)
  {
    APSLogErrorAt();
    return 4294960578;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, _OWORD *, long long *))(v5 + 112);
  if (!v6)
  {
    uint64_t v8 = 4294954514;
LABEL_7:
    APSLogErrorAt();
    return v8;
  }
  uint64_t v7 = *(void *)(v5 + 40);
  v13[0] = *a3;
  *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)a3 + 12);
  v12[0] = *a4;
  *(_OWORD *)((char *)v12 + 12) = *(_OWORD *)((char *)a4 + 12);
  long long v10 = *a5;
  uint64_t v11 = *((void *)a5 + 2);
  uint64_t v8 = v6(v7, a2, v13, v12, &v10);
  if (v8) {
    goto LABEL_7;
  }
  return v8;
}

void *AirPlayReceiverSessionCopyProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, _DWORD *a5)
{
  int v52 = 0;
  CFArrayRef theArray = 0;
  CFArrayRef v51 = 0;
  if (*(unsigned char *)(a1 + 441))
  {
    CFTypeRef v19 = 0;
    long long v10 = 0;
    CFMutableDictionaryRef v14 = 0;
    CFMutableArrayRef v13 = 0;
    int v49 = -6709;
LABEL_111:
    int v52 = v49;
    goto LABEL_65;
  }
  if (!CFEqual(cf1, @"audioBufferInfo"))
  {
    if (CFEqual(cf1, @"metrics"))
    {
      uint64_t Count = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 568));
      CFArrayRef v53 = 0;
      CFArrayRef v54 = 0;
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!Mutable)
      {
        APSLogErrorAt();
        CFTypeRef v19 = 0;
        uint64_t v27 = 0;
        goto LABEL_116;
      }
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      mach_absolute_time();
      UpTicksToSeconds();
      CFDictionarySetInt64();
      uint64_t v22 = *(void *)(a1 + 576);
      if (v22)
      {
        uint64_t v23 = *(uint64_t (**)(void, __CFDictionary *))(v22 + 160);
        if (!v23)
        {
          int v36 = -12782;
          goto LABEL_49;
        }
        int v24 = v23(*(void *)(v22 + 40), Mutable);
        if (v24)
        {
          int v36 = v24;
          goto LABEL_49;
        }
      }
      int v25 = _cfDictionaryCopyKeysAndValues(*(const __CFDictionary **)(a1 + 568), (CFTypeRef *)&v54, (CFTypeRef *)&v53);
      if (!v25)
      {
        CFAllocatorRef v26 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        uint64_t v27 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], Count, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (v27)
        {
          if (Count >= 1)
          {
            CFIndex v28 = 0;
            int v29 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
            unint64_t v30 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
            while (1)
            {
              CFMutableDictionaryRef v31 = CFDictionaryCreateMutable(v26, 0, v29, v30);
              if (!v31) {
                break;
              }
              ValueAtIndex = CFArrayGetValueAtIndex(v53, v28);
              if (!ValueAtIndex)
              {
                int v36 = -72152;
                APSLogErrorAt();
                goto LABEL_47;
              }
              uint64_t v33 = (uint64_t (*)(void, CFMutableDictionaryRef))ValueAtIndex[20];
              if (!v33)
              {
                int v36 = -12782;
LABEL_47:
                APSLogErrorAt();
                CFTypeRef v19 = 0;
                goto LABEL_50;
              }
              int v34 = v33(ValueAtIndex[5], v31);
              if (v34)
              {
                int v36 = v34;
                goto LABEL_47;
              }
              uint64_t v35 = CFArrayGetValueAtIndex(v54, v28);
              CFDictionarySetValue(v27, v35, v31);
              CFRelease(v31);
              if (Count == ++v28) {
                goto LABEL_36;
              }
            }
            APSLogErrorAt();
            CFTypeRef v19 = 0;
            goto LABEL_102;
          }
LABEL_36:
          CFDictionarySetValue(Mutable, @"smet", v27);
          int v36 = 0;
          CFMutableDictionaryRef v31 = 0;
          CFTypeRef v19 = Mutable;
          CFMutableDictionaryRef Mutable = 0;
LABEL_50:
          if (v54) {
            CFRelease(v54);
          }
          if (v53) {
            CFRelease(v53);
          }
          if (v31) {
            CFRelease(v31);
          }
          if (v27) {
            CFRelease(v27);
          }
          if (Mutable) {
            CFRelease(Mutable);
          }
          long long v10 = 0;
          CFMutableDictionaryRef v14 = 0;
          CFMutableArrayRef v13 = 0;
          int v52 = v36;
          goto LABEL_65;
        }
        APSLogErrorAt();
        CFTypeRef v19 = 0;
LABEL_116:
        CFMutableDictionaryRef v31 = 0;
LABEL_102:
        int v36 = -6728;
        goto LABEL_50;
      }
      int v36 = v25;
LABEL_49:
      APSLogErrorAt();
      CFTypeRef v19 = 0;
      uint64_t v27 = 0;
      CFMutableDictionaryRef v31 = 0;
      goto LABEL_50;
    }
    if (CFEqual(cf1, @"hasActiveMediaAudioSession"))
    {
      if (*(unsigned char *)(a1 + 458) && *(void *)(a1 + 576)) {
        uint64_t v38 = (const void **)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v38 = (const void **)MEMORY[0x263EFFB38];
      }
LABEL_62:
      unsigned int v39 = *v38;
LABEL_63:
      CFTypeRef v19 = (void *)CFRetain(v39);
LABEL_64:
      long long v10 = 0;
      CFMutableDictionaryRef v14 = 0;
      CFMutableArrayRef v13 = 0;
      int v52 = 0;
      goto LABEL_65;
    }
    if (CFEqual(cf1, @"mediaAudioSession"))
    {
      if (*(unsigned char *)(a1 + 458))
      {
        unsigned int v39 = *(const void **)(a1 + 576);
        if (v39) {
          goto LABEL_63;
        }
      }
      goto LABEL_81;
    }
    if (CFEqual(cf1, @"isRemoteControlOnly"))
    {
      uint64_t v38 = (const void **)MEMORY[0x263EFFB40];
      if (!*(unsigned char *)(a1 + 659)) {
        uint64_t v38 = (const void **)MEMORY[0x263EFFB38];
      }
      goto LABEL_62;
    }
    if (CFEqual(cf1, @"isPlayingBufferedAudio"))
    {
      if (*(void *)(a1 + 576) && CFObjectGetPropertyInt64Sync() == 103) {
        int v43 = APReceiverAudioSessionCopyProperty(*(const __CFNumber **)(a1 + 576), v41, @"IsPlayingBufferedAudio", v42, &v52);
      }
      else {
        int v43 = (void *)CFRetain((CFTypeRef)*MEMORY[0x263EFFB38]);
      }
    }
    else
    {
      if (CFEqual(cf1, @"platformAudioLatency"))
      {
        CFNumberRef v46 = *(const __CFNumber **)(a1 + 576);
        if (!v46)
        {
          APSLogErrorAt();
          CFTypeRef v19 = 0;
          long long v10 = 0;
          CFMutableDictionaryRef v14 = 0;
          CFMutableArrayRef v13 = 0;
          int v49 = -6718;
          goto LABEL_111;
        }
        CFTypeRef v19 = APReceiverAudioSessionCopyProperty(v46, v44, @"PlatformAudioLatency", v45, &v52);
        if (v52) {
          APSLogErrorAt();
        }
        goto LABEL_95;
      }
      if (CFEqual(cf1, @"MRInfo"))
      {
        unsigned int v39 = *(const void **)(a1 + 736);
        if (v39) {
          goto LABEL_63;
        }
LABEL_81:
        CFTypeRef v19 = 0;
        goto LABEL_64;
      }
      if (*(unsigned char *)(a1 + 659))
      {
        APSLogErrorAt();
        int v52 = 0;
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFTypeRef v19 = 0;
        goto LABEL_95;
      }
      int v43 = AirPlayReceiverSessionPlatformCopyProperty(a1, v47, cf1, v48, &v52);
    }
    CFTypeRef v19 = v43;
LABEL_95:
    long long v10 = 0;
LABEL_96:
    CFMutableDictionaryRef v14 = 0;
    goto LABEL_21;
  }
  uint64_t v8 = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 568));
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  long long v10 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!v10)
  {
    APSLogErrorAt();
    CFTypeRef v19 = 0;
    CFMutableDictionaryRef v14 = 0;
LABEL_110:
    CFMutableArrayRef v13 = 0;
    int v49 = -6728;
    goto LABEL_111;
  }
  uint64_t v11 = *(void *)(a1 + 576);
  if (v11)
  {
    LODWORD(v54) = 0;
    uint64_t v12 = *(uint64_t (**)(void, CFArrayRef *))(v11 + 176);
    if (v12)
    {
      CFMutableArrayRef v13 = (const void *)v12(*(void *)(v11 + 40), &v54);
      int v52 = (int)v54;
      if (!v54)
      {
        int v52 = CFDictionaryMergeDictionary();
        if (!v52)
        {
          if (v13) {
            CFRelease(v13);
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
      CFMutableArrayRef v13 = 0;
      int v52 = -12782;
    }
    APSLogErrorAt();
    CFTypeRef v19 = 0;
    CFMutableDictionaryRef v14 = 0;
    goto LABEL_65;
  }
LABEL_10:
  int v52 = _cfDictionaryCopyKeysAndValues(*(const __CFDictionary **)(a1 + 568), (CFTypeRef *)&v51, (CFTypeRef *)&theArray);
  if (v52)
  {
    APSLogErrorAt();
    CFTypeRef v19 = 0;
    goto LABEL_96;
  }
  CFMutableDictionaryRef v14 = CFDictionaryCreateMutable(v9, v8, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!v14)
  {
    APSLogErrorAt();
    CFTypeRef v19 = 0;
    goto LABEL_110;
  }
  if (v8 < 1)
  {
LABEL_20:
    CFDictionarySetValue(v10, @"streams", v14);
    CFTypeRef v19 = (void *)CFRetain(v10);
LABEL_21:
    CFMutableArrayRef v13 = 0;
    goto LABEL_65;
  }
  CFIndex v15 = 0;
  while (1)
  {
    uint64_t v16 = CFArrayGetValueAtIndex(theArray, v15);
    LODWORD(v54) = 0;
    if (!v16) {
      break;
    }
    int v17 = (uint64_t (*)(void, CFArrayRef *))v16[22];
    if (!v17)
    {
      int v37 = -12782;
      goto LABEL_38;
    }
    CFMutableArrayRef v13 = (const void *)v17(v16[5], &v54);
    int v52 = (int)v54;
    if (v54) {
      goto LABEL_39;
    }
    char v18 = CFArrayGetValueAtIndex(v51, v15);
    CFDictionarySetValue(v14, v18, v13);
    if (v13) {
      CFRelease(v13);
    }
    if (v8 == ++v15) {
      goto LABEL_20;
    }
  }
  int v37 = -72152;
  APSLogErrorAt();
LABEL_38:
  CFMutableArrayRef v13 = 0;
  int v52 = v37;
LABEL_39:
  APSLogErrorAt();
  CFTypeRef v19 = 0;
LABEL_65:
  if (v51) {
    CFRelease(v51);
  }
  if (theArray) {
    CFRelease(theArray);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v14) {
    CFRelease(v14);
  }
  if (v10) {
    CFRelease(v10);
  }
  if (a5) {
    *a5 = v52;
  }
  return v19;
}

uint64_t AirPlayReceiverSessionSetProperty(uint64_t a1, int a2, CFTypeRef cf1, __CFString *a4, const void *a5)
{
  unsigned int v33 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    return 0;
  }
  if (*(unsigned char *)(a1 + 659))
  {
    APSLogErrorAt();
    uint64_t v9 = 0;
    if (gLogCategory_AirPlayReceiverCore > 50) {
      return v9;
    }
    if (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    return 0;
  }
  if (CFEqual(cf1, @"metaData"))
  {
    if (a5)
    {
      CFTypeID v10 = CFGetTypeID(a5);
      if (v10 == CFDictionaryGetTypeID())
      {
        uint64_t v9 = AirPlayReceiverSessionPlatformSetProperty((void *)a1, v11, @"metaData", 0, (const __CFArray *)a5);
        if (v9) {
LABEL_24:
        }
          APSLogErrorAt();
        return v9;
      }
    }
    goto LABEL_8;
  }
  if (CFEqual(cf1, @"mrNowPlayingInfo"))
  {
    if (a5)
    {
      CFTypeID v13 = CFGetTypeID(a5);
      if (v13 == CFDictionaryGetTypeID())
      {
        uint64_t v15 = *(void *)(a1 + 576);
        if (v15) {
          APReceiverAudioSessionSetProperty(v15, @"RTCMetadata", (uint64_t)a5);
        }
        uint64_t v9 = AirPlayReceiverSessionPlatformSetProperty((void *)a1, v14, @"mrNowPlayingInfo", a4, (const __CFArray *)a5);
        if (!v9) {
          return v9;
        }
        goto LABEL_24;
      }
    }
    goto LABEL_8;
  }
  if (CFEqual(cf1, @"MRInfo"))
  {
    uint64_t v12 = *(const void **)(a1 + 736);
    if (a5) {
      CFRetain(a5);
    }
    *(void *)(a1 + 736) = a5;
    if (v12) {
      CFRelease(v12);
    }
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    notify_post("com.apple.airplay.mrInfoDidChange");
    return 0;
  }
  if (CFEqual(cf1, @"progress"))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    if (a5 && (CFTypeID v18 = CFGetTypeID(a5), v18 == CFDictionaryGetTypeID()))
    {
      if (*(void *)(a1 + 576))
      {
        uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
        uint64_t v20 = CFDictionaryGetInt64Ranged();
        uint64_t v21 = CFDictionaryGetInt64Ranged();
        uint64_t v22 = *(void *)(a1 + 576);
        if (v22 && !*(unsigned char *)(a1 + 440))
        {
          uint64_t v23 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t *))(v22 + 120);
          if (!v23)
          {
            unsigned int v33 = -12782;
LABEL_59:
            APSLogErrorAt();
            return v33;
          }
          unsigned int v33 = v23(*(void *)(v22 + 40), Int64Ranged, v20, v21, &v32, &v31);
          if (v33) {
            goto LABEL_59;
          }
          unsigned int v33 = CFObjectSetPropertyF();
          if (v33) {
            goto LABEL_59;
          }
        }
        return 0;
      }
      APSLogErrorAt();
      return -6718;
    }
    else
    {
      APSLogErrorAt();
      return -6756;
    }
  }
  if (CFEqual(cf1, @"timelineOffset"))
  {
    if (a5)
    {
      CFTypeID v24 = CFGetTypeID(a5);
      if (v24 == CFNumberGetTypeID())
      {
        uint64_t v25 = *(void *)(a1 + 576);
        if (!v25)
        {
          APSLogErrorAt();
          return 4294960578;
        }
        uint64_t v9 = APReceiverAudioSessionSetProperty(v25, @"timelineOffset", (uint64_t)a5);
        if (v9) {
          goto LABEL_24;
        }
        return v9;
      }
    }
LABEL_8:
    APSLogErrorAt();
    return 4294960540;
  }
  if (CFEqual(cf1, @"mrSupportedCommandsFromSender"))
  {
    if (a5)
    {
      CFTypeID v27 = CFGetTypeID(a5);
      if (v27 == CFArrayGetTypeID())
      {
        uint64_t v9 = AirPlayReceiverSessionPlatformSetProperty((void *)a1, v28, @"mrSupportedCommandsFromSender", 0, (const __CFArray *)a5);
        if (!v9) {
          return v9;
        }
        goto LABEL_24;
      }
    }
    goto LABEL_8;
  }
  if (CFEqual(cf1, @"mrPlaybackState"))
  {
    if (a5)
    {
      CFTypeID v29 = CFGetTypeID(a5);
      if (v29 == CFNumberGetTypeID())
      {
        uint64_t v9 = AirPlayReceiverSessionPlatformSetProperty((void *)a1, v30, @"mrPlaybackState", 0, (const __CFArray *)a5);
        if (!v9) {
          return v9;
        }
        goto LABEL_24;
      }
    }
    goto LABEL_8;
  }

  return AirPlayReceiverSessionPlatformSetProperty((void *)a1, v26, cf1, a4, (const __CFArray *)a5);
}

uint64_t AirPlayReceiverSessionSetSecurityInfo(uint64_t a1, __CFDictionary *a2, CFTypeRef cf, uint64_t a4, uint64_t a5, _OWORD *a6, _OWORD *a7)
{
  CFTypeRef v10 = cf;
  uint64_t v24 = *MEMORY[0x263EF8340];
  CFTypeID v13 = *(const void **)(a1 + 488);
  if (cf) {
    CFRetain(cf);
  }
  *(void *)(a1 + 488) = v10;
  if (v13)
  {
    CFRelease(v13);
    CFTypeRef v10 = *(CFTypeRef *)(a1 + 488);
  }
  if (v10)
  {
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v15 = v14 ? v14 : 0;
    uint64_t v16 = *(unsigned int (**)(CFTypeRef))(v15 + 32);
    if (v16)
    {
      if (v16(v10)) {
        return 0;
      }
    }
  }
  if (a6 && a7)
  {
    unsigned int v18 = _SetSecurityInfoAES(a1, a6, a7);
    uint64_t v19 = 0;
    unsigned int v22 = v18;
    do
      *((unsigned char *)a6 + v19++) = 0;
    while (v19 != 8);
    if (v18)
    {
      APSLogErrorAt();
      return 4294960534;
    }
    goto LABEL_29;
  }
  int Int64 = CFDictionaryGetInt64();
  if (Int64 == 1)
  {
    unsigned int v22 = 0;
LABEL_29:
    CFDictionaryRemoveValue(a2, @"ekey");
    CFDictionaryRemoveValue(a2, @"eiv");
    return v22;
  }
  CFDictionaryGetData();
  if (Int64 == 32 || Int64 == 8)
  {
    uint64_t v23 = 0;
    if (a4)
    {
      OowSGu();
      if (v21) {
        IPaI1oem5iL();
      }
      else {
        jEHf8Xzsv8K(v23);
      }
      APSLogErrorAt();
    }
    else
    {
      APSLogErrorAt();
    }
  }
  else if (gLogCategory_AirPlayReceiverCore <= 60 {
         && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  APSLogErrorAt();
  return 4294960542;
}

uint64_t _SetSecurityInfoAES(uint64_t a1, _OWORD *a2, _OWORD *a3)
{
  uint64_t v6 = a1 + 360;
  AES_CBCFrame_Final();
  *(void *)(a1 + 384) = 0;
  uint64_t v7 = AES_CBCFrame_Init();
  if (v7)
  {
    APSLogErrorAt();
  }
  else
  {
    *(void *)(a1 + 384) = v6;
    *(_OWORD *)(a1 + 392) = *a2;
    *(_OWORD *)(a1 + 408) = *a3;
  }
  return v7;
}

uint64_t AirPlayReceiverSessionSendCommand(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  return AirPlayReceiverSessionSendCommandForObject(a1, 0, a2, a3, a4);
}

uint64_t AirPlayReceiverSessionSendCommand_b(uint64_t a1, const void *a2, void *aBlock)
{
  if (!aBlock)
  {
    uint64_t v7 = AirPlayReceiverSessionSendCommandForObject(a1, 0, a2, 0, 0);
    if (!v7) {
      return v7;
    }
    goto LABEL_5;
  }
  uint64_t v5 = _Block_copy(aBlock);
  if (!v5)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  uint64_t v6 = v5;
  uint64_t v7 = AirPlayReceiverSessionSendCommandForObject(a1, 0, a2, (uint64_t)_AirPlayReceiverSessionSendCommandCompletion_b, (uint64_t)v5);
  if (v7)
  {
    _Block_release(v6);
LABEL_5:
    APSLogErrorAt();
  }
  return v7;
}

void _AirPlayReceiverSessionSendCommandCompletion_b(uint64_t a1, uint64_t a2, void (**a3)(void, void, void))
{
  a3[2](a3, a1, a2);

  _Block_release(a3);
}

uint64_t AirPlayReceiverSessionSetup(uint64_t a1, const __CFDictionary *a2, __CFDictionary **a3)
{
  uint64_t v243 = *MEMORY[0x263EF8340];
  unsigned int v228 = 0;
  int v5 = *(unsigned __int8 *)(a1 + 456);
  CFArrayRef theArray = 0;
  uint64_t v6 = &unk_268402000;
  int v7 = gLogCategory_AirPlayReceiverCore;
  if (gLogCategory_AirPlayReceiverCore <= 50)
  {
    if (gLogCategory_AirPlayReceiverCore == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_9;
      }
      int v7 = gLogCategory_AirPlayReceiverCore;
    }
    if (v7 == -1) {
      _LogCategory_Initialize();
    }
    LogPrintF();
    uint64_t v6 = &unk_268402000;
  }
LABEL_9:
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    APSLogErrorAt();
    v201 = 0;
    unsigned int v228 = -6728;
    goto LABEL_522;
  }
  CFDictionaryRef theDict = a2;
  if (!v5)
  {
    if (*(unsigned char *)(a1 + 456))
    {
      APSLogErrorAt();
      int v21 = -6719;
      v201 = Mutable;
      goto LABEL_571;
    }
    if (CFEqual(*(CFTypeRef *)(a1 + 648), @"None")) {
      goto LABEL_58;
    }
    v233[1] = 0;
    if (CFDictionaryContainsKey(a2, @"timingProtocol")) {
      CFArrayRef v8 = (const __CFArray *)CFDictionaryGetValue(a2, @"timingProtocol");
    }
    else {
      CFArrayRef v8 = (const __CFArray *)@"NTP";
    }
    int v9 = *(unsigned __int8 *)(a1 + 424);
    CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFStringRef v11 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(a1 + 152), 0x8000100u);
    if (!v11)
    {
      APSLogErrorAt();
      int v21 = -6728;
      a2 = theDict;
      goto LABEL_569;
    }
    CFStringRef v12 = v11;
    memset(bytes, 0, 28);
    if (CFEqual(@"PTP", v8))
    {
      long long v239 = 0u;
      long long v240 = 0u;
      long long v237 = 0u;
      long long v238 = 0u;
      long long v235 = 0u;
      long long v236 = 0u;
      memset(cStr, 0, sizeof(cStr));
      int v13 = APSNetworkClockPTPCreate();
      if (v13)
      {
        int v21 = v13;
        APSLogErrorAt();
        CFStringRef v26 = 0;
        goto LABEL_55;
      }
      uint64_t v14 = *(void *)(a1 + 448);
      uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v15) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0;
      }
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 80);
      if (v19)
      {
        int v20 = v19(v14, a1);
        if (v20)
        {
          int v21 = v20;
        }
        else
        {
          if (*(unsigned char *)(a1 + 657)) {
            APSIsMemberOfHTGroup();
          }
          int updated = APSNetworkClockDetermineAndSetOrUpdateLocalPeerInfo();
          if (updated)
          {
            int v21 = updated;
          }
          else
          {
            uint64_t v23 = CFDictionaryGetValue(theDict, @"timingPeerList");
            uint64_t v24 = CFDictionaryGetValue(theDict, @"timingPeerInfo");
            int v25 = SockAddrToString();
            if (!v25)
            {
              CFStringRef v26 = CFStringCreateWithCString(v10, cStr, 0x8000100u);
              if (v24)
              {
                int v27 = APSNetworkClockAddOrUpdatePeerFromSerializablePeerDictionary();
                uint64_t v6 = (_DWORD *)&unk_268402000;
                if (v27)
                {
                  int v21 = v27;
LABEL_585:
                  APSLogErrorAt();
                  goto LABEL_55;
                }
              }
              else
              {
                int v28 = APSNetworkClockAddOrUpdatePeerWithAddressAndInterfaceNameStrings();
                uint64_t v6 = (_DWORD *)&unk_268402000;
                if (v28)
                {
                  int v21 = v28;
                  goto LABEL_585;
                }
              }
              if (v23)
              {
                int v29 = APSNetworkClockSetPeersFromSetPeersMessagePayload();
                if (v29)
                {
                  int v21 = v29;
                  goto LABEL_585;
                }
              }
              FigCFDictionarySetValue();
LABEL_50:
              if (!*(unsigned char *)(a1 + 659)) {
                AirPlayReceiverSessionPlatformSetProperty((void *)a1, v30, @"timingProtocol", 0, v8);
              }
              int v21 = 0;
LABEL_55:
              CFRelease(v12);
              if (v26) {
                CFRelease(v26);
              }
              a2 = theDict;
              if (!v21)
              {
LABEL_58:
                if (!*(unsigned char *)(a1 + 457))
                {
LABEL_66:
                  *(unsigned char *)(a1 + 456) = 1;
                  uint64_t v39 = APReceiverStatsCollectorCreate();
                  *(void *)(a1 + 176) = v39;
                  if (v39)
                  {
                    int v40 = v6[412];
                    if (v40 <= 30 && (v40 != -1 || _LogCategory_Initialize())) {
                      LogPrintF();
                    }
                    uint64_t v41 = *(void *)(a1 + 600);
                    if (v41)
                    {
                      uint64_t v42 = *(void *)(a1 + 176);
                      uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 8);
                      uint64_t v44 = v43 ? v43 : 0;
                      uint64_t v45 = *(void (**)(uint64_t, __CFString *, uint64_t))(v44 + 56);
                      if (v45) {
                        v45(v41, @"StatsCollector", v42);
                      }
                    }
                  }
                  unsigned int v228 = 0;
                  if (*(void *)(a1 + 600) && !*(unsigned char *)(a1 + 659))
                  {
                    CMNotificationCenterGetDefaultLocalCenter();
                    CMNotificationCenterAddListener();
                  }
                  if (CFDictionaryGetInt64())
                  {
                    *(unsigned char *)(a1 + 700) = 1;
                    CFDictionaryGetDouble();
                    *(void *)(a1 + 704) = v46;
                  }
                  goto LABEL_82;
                }
                int v38 = ServerSocketOpen();
                if (!v38)
                {
                  if (*(unsigned char *)(a1 + 424)) {
                    SocketSetP2P();
                  }
                  CFDictionarySetInt64();
                  uint64_t v6 = &unk_268402000;
                  if (gLogCategory_AirPlayReceiverCore <= 30
                    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  goto LABEL_66;
                }
                int v21 = v38;
                APSLogErrorAt();
                uint64_t v6 = (_DWORD *)&unk_268402000;
                goto LABEL_570;
              }
LABEL_569:
              APSLogErrorAt();
LABEL_570:
              v201 = Mutable;
              _ControlTearDown(a1);
LABEL_571:
              int v211 = v6[412];
              if (v211 <= 60 && (v211 != -1 || _LogCategory_Initialize())) {
                LogPrintF();
              }
              unsigned int v228 = v21;
              goto LABEL_562;
            }
            int v21 = v25;
          }
        }
      }
      else
      {
        int v21 = -12782;
      }
    }
    else
    {
      int Int64 = CFDictionaryGetInt64();
      if (Int64 >= 1) {
        int v18 = Int64;
      }
      else {
        int v18 = 6002;
      }
      SockAddrCopy();
      SockAddrSetPort();
      if (gLogCategory_AirPlayReceiverCore <= 50
        && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v31 = *(unsigned __int8 *)(a1 + 560);
      *(_OWORD *)cStr = *(_OWORD *)bytes;
      *(_OWORD *)&cStr[12] = *(_OWORD *)&bytes[12];
      int v32 = APNetworkClockNTPClientLegacyCreate((uint64_t)v10, v31, v9, (uint64_t)cStr, v18, (void *)(a1 + 448));
      if (v32)
      {
        int v21 = v32;
      }
      else
      {
        uint64_t v33 = *(void *)(a1 + 448);
        uint64_t v34 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v34) {
          uint64_t v35 = v34;
        }
        else {
          uint64_t v35 = 0;
        }
        int v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 80);
        if (v36)
        {
          int v37 = v36(v33, a1);
          if (!v37)
          {
            CFStringRef v26 = 0;
            uint64_t v6 = (_DWORD *)&unk_268402000;
            goto LABEL_50;
          }
          int v21 = v37;
        }
        else
        {
          int v21 = -12782;
        }
      }
    }
    APSLogErrorAt();
    CFStringRef v26 = 0;
    uint64_t v6 = (_DWORD *)&unk_268402000;
    goto LABEL_55;
  }
LABEL_82:
  CFDictionaryGetCString();
  if (!v228)
  {
    __strlcpy_chk();
    unsigned int v228 = -6727;
  }
  if (CFDictionaryContainsKey(a2, @"osBuildVersion"))
  {
    int v47 = *(const void **)(a1 + 320);
    uint64_t v48 = CFDictionaryGetValue(a2, @"osBuildVersion");
    int v49 = v48;
    if (v48) {
      CFRetain(v48);
    }
    *(void *)(a1 + 320) = v49;
    if (v47) {
      CFRelease(v47);
    }
  }
  if (CFDictionaryContainsKey(a2, @"model"))
  {
    int v50 = *(const void **)(a1 + 312);
    CFArrayRef v51 = CFDictionaryGetValue(a2, @"model");
    int v52 = v51;
    if (v51) {
      CFRetain(v51);
    }
    *(void *)(a1 + 312) = v52;
    if (v50) {
      CFRelease(v50);
    }
  }
  if (CFDictionaryContainsKey(a2, @"modelCode"))
  {
    CFArrayRef v53 = *(const void **)(a1 + 304);
    CFArrayRef v54 = CFDictionaryGetValue(a2, @"modelCode");
    int v55 = v54;
    if (v54) {
      CFRetain(v54);
    }
    *(void *)(a1 + 304) = v55;
    if (v53) {
      CFRelease(v53);
    }
  }
  if (CFDictionaryContainsKey(a2, @"name"))
  {
    unsigned int v56 = *(const void **)(a1 + 288);
    uint64_t v57 = CFDictionaryGetValue(a2, @"name");
    int v58 = v57;
    if (v57) {
      CFRetain(v57);
    }
    *(void *)(a1 + 288) = v58;
    if (v56) {
      CFRelease(v56);
    }
  }
  if (CFDictionaryContainsKey(a2, @"udid"))
  {
    int v59 = *(const void **)(a1 + 296);
    uint64_t v60 = CFDictionaryGetValue(a2, @"udid");
    unint64_t v61 = v60;
    if (v60) {
      CFRetain(v60);
    }
    *(void *)(a1 + 296) = v61;
    if (v59) {
      CFRelease(v59);
    }
  }
  uint64_t v6 = &unk_268402000;
  if (!v5 && !*(unsigned char *)(a1 + 659))
  {
    *(unsigned char *)(a1 + 656) = CFDictionaryGetInt64() != 0;
    *(_DWORD *)(a1 + 496) = CFDictionaryGetInt64();
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(unsigned char *)(a1 + 656)
      && APSIsMemberOfHTGroup()
      && *(_DWORD *)(a1 + 496) != 2
      && gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (CFDictionaryContainsKey(a2, @"senderDisplayLatencyMs"))
  {
    *(_DWORD *)(a1 + 696) = CFDictionaryGetInt64Ranged();
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  CFArrayGetTypeID();
  TypedCFDictionaryRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
  if (!TypedValue || (CFIndex v63 = CFArrayGetCount(TypedValue), v63 < 1))
  {
    uint64_t v223 = 0;
LABEL_509:
    v201 = Mutable;
    if (!*(unsigned char *)(a1 + 659) && v223)
    {
      CFIndex Count = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 568));
      unsigned int v228 = _cfDictionaryCopyKeysAndValues(*(const __CFDictionary **)(a1 + 568), 0, (CFTypeRef *)&theArray);
      if (v228)
      {
LABEL_545:
        APSLogErrorAt();
        goto LABEL_521;
      }
      if (Count >= 1)
      {
        for (CFIndex i = 0; i != Count; ++i)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(theArray, i);
          if (ValueAtIndex)
          {
            v205 = (void (*)(void))ValueAtIndex[17];
            if (v205) {
              v205(ValueAtIndex[5]);
            }
          }
          else
          {
            APSLogErrorAt();
          }
        }
      }
    }
    *a3 = Mutable;
    unsigned int v228 = 0;
    v201 = 0;
LABEL_521:
    a2 = theDict;
    goto LABEL_522;
  }
  CFIndex v64 = v63;
  uint64_t v65 = 0;
  uint64_t v223 = 0;
  v215 = (_OWORD *)(a1 + 224);
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  v225 = (CFTypeRef *)(a1 + 616);
  v220 = (const void *)*MEMORY[0x263EFFB38];
  v221 = (const void *)*MEMORY[0x263EFFB40];
  CFIndex v217 = v63;
  while (1)
  {
    CFDictionaryGetTypeID();
    CFDictionaryRef TypedValueAtIndex = (const __CFDictionary *)CFArrayGetTypedValueAtIndex();
    if (v228)
    {
LABEL_546:
      APSLogErrorAt();
LABEL_547:
      a2 = theDict;
      v201 = Mutable;
      goto LABEL_522;
    }
    int v67 = CFDictionaryGetInt64();
    int v68 = v6[412];
    if (v68 <= 50 && (v68 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    if (v67 > 109) {
      break;
    }
    if (v67 == 96)
    {
      unsigned int v228 = _GeneralAudioSetup(a1, 96, TypedValueAtIndex, Mutable);
      if (v228) {
        goto LABEL_546;
      }
      HIDWORD(v223) = 1;
    }
    else
    {
      if (v67 != 103)
      {
LABEL_161:
        int v83 = v6[412];
        if (v83 <= 50 && (v83 != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        goto LABEL_434;
      }
      unsigned int v228 = _GeneralAudioSetup(a1, 103, TypedValueAtIndex, Mutable);
      if (v228) {
        goto LABEL_546;
      }
      LODWORD(v223) = 1;
    }
LABEL_434:
    if (++v65 == v64) {
      goto LABEL_509;
    }
  }
  if (v67 == 110)
  {
    v233[0] = 0;
    value = 0;
    if (*v225)
    {
      APSLogErrorAt();
      int v89 = -6719;
LABEL_256:
      for (uint64_t j = 0; j != 32; ++j)
        cStr[j] = 0;
      if (!v89)
      {
        unsigned int v228 = 0;
        goto LABEL_434;
      }
      int v210 = v6[412];
      v201 = Mutable;
      if (v210 <= 60 && (v210 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      unsigned int v228 = v89;
      goto LABEL_545;
    }
    CFMutableDictionaryRef v74 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (!v74)
    {
      APSLogErrorAt();
      int v89 = -6728;
      goto LABEL_250;
    }
    int v75 = v74;
    int v76 = *(const void **)(a1 + 592);
    if (v76)
    {
      *(void *)&long long v231 = 0;
      CFTypeID v77 = CFGetTypeID(v76);
      if (v77 == FigValeriaGetTypeID())
      {
        if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
          && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (APReceiverScreenSinkGetClassID_once != -1) {
          dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_5652);
        }
        int v90 = CMDerivedObjectCreate();
        if (!v90)
        {
          uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
          *(void *)(DerivedStorage + 8) = CFRetain(v76);
          if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
            && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v92 = v231;
          v233[0] = (CFTypeRef)v231;
          uint64_t v93 = *(void *)(a1 + 640);
          uint64_t v6 = (_DWORD *)&unk_268402000;
          if (v93)
          {
            uint64_t v94 = *(void *)(CMBaseObjectGetVTable() + 8);
            uint64_t v95 = v94 ? v94 : 0;
            uint64_t v96 = *(void (**)(uint64_t, __CFString *, uint64_t))(v95 + 56);
            if (v96) {
              v96(v92, @"KeyExchangeReceiver", v93);
            }
          }
          goto LABEL_195;
        }
        int v89 = v90;
        APSLogErrorAt();
        if ((void)v231) {
          CFRelease((CFTypeRef)v231);
        }
      }
      else
      {
        APSLogErrorAt();
        int v89 = -72131;
      }
      uint64_t v6 = (_DWORD *)&unk_268402000;
    }
    else
    {
      int AirPlay = APReceiverScreenSinkCreateAirPlay((uint64_t)allocator, v233);
      if (!AirPlay)
      {
LABEL_195:
        CFMutableDictionaryRef v97 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (v97)
        {
          size_t v98 = v97;
          FigCFDictionarySetInt32();
          FigCFDictionarySetInt32();
          FigCFDictionarySetInt32();
          CFDictionarySetValue(v98, @"NetworkClock", *(const void **)(a1 + 448));
          if (*(unsigned char *)(a1 + 560)) {
            unint64_t v99 = v220;
          }
          else {
            unint64_t v99 = v221;
          }
          CFDictionarySetValue(v98, @"SetQoS", v99);
          if (*(unsigned char *)(a1 + 424)) {
            uint64_t v100 = v221;
          }
          else {
            uint64_t v100 = v220;
          }
          CFDictionarySetValue(v98, @"AllowP2P", v100);
          CFDictionarySetValue(v98, @"ReceiverSession", (const void *)a1);
          uint64_t v101 = *(void *)(a1 + 176);
          if (v101)
          {
            APReceiverStatsCollectorSetScreenOptions(v101, (uint64_t)TypedValueAtIndex);
            APReceiverStatsCollectorSetIfName(*(void *)(a1 + 176), a1 + 152);
            CFDictionarySetValue(v98, @"StatsCollector", *(const void **)(a1 + 176));
          }
          int v102 = APReceiverScreenSessionCreate((uint64_t)allocator, v233[0], v98, v225);
          if (v102)
          {
            int v89 = v102;
            goto LABEL_246;
          }
          *(unsigned char *)(a1 + 440) = 1;
          *(_WORD *)(a1 + 632) = 0;
          uint64_t v103 = *(void *)(a1 + 616);
          uint64_t v104 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v104) {
            uint64_t v105 = v104;
          }
          else {
            uint64_t v105 = 0;
          }
          unint64_t v106 = *(uint64_t (**)(uint64_t, void (*)(int, CFTypeRef, uint64_t, void *), uint64_t))(v105 + 24);
          if (v106)
          {
            int v107 = v106(v103, _ScreenHandleEvent, a1);
            if (v107)
            {
              int v89 = v107;
              goto LABEL_246;
            }
            uint64_t v108 = CFDictionaryGetInt64();
            if (!v108)
            {
              APSLogErrorAt();
              int v89 = -6715;
              goto LABEL_247;
            }
            uint64_t v109 = v108;
            uint64_t v110 = *(void *)(a1 + 488);
            if (v110
              && ((uint64_t v111 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v112 = 0) : (v112 = v111),
                  (int v113 = *(unsigned int (**)(uint64_t))(v112 + 32)) != 0 && v113(v110)))
            {
              int DataStreamSecurityKeys = _GetDataStreamSecurityKeys(a1, v109, 0, 0, (uint64_t)cStr);
              if (DataStreamSecurityKeys)
              {
                int v89 = DataStreamSecurityKeys;
                goto LABEL_246;
              }
              CFTypeRef v115 = *v225;
              uint64_t v116 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v116) {
                uint64_t v117 = v116;
              }
              else {
                uint64_t v117 = 0;
              }
              uint64_t v151 = *(uint64_t (**)(CFTypeRef, char *, uint64_t))(v117 + 32);
              if (!v151)
              {
                int v89 = -12782;
                goto LABEL_246;
              }
              int v152 = v151(v115, cStr, 32);
              if (v152)
              {
                int v89 = v152;
                goto LABEL_246;
              }
            }
            else
            {
              APSEncryptionUtilsDeriveAESKeySHA512ForScreen();
              CFTypeRef v118 = *v225;
              uint64_t v119 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v119) {
                uint64_t v120 = v119;
              }
              else {
                uint64_t v120 = 0;
              }
              uint64_t v121 = *(uint64_t (**)(CFTypeRef, UInt8 *, unsigned char *))(v120 + 40);
              if (v121) {
                int v89 = v121(v118, bytes, v241);
              }
              else {
                int v89 = -12782;
              }
              for (uint64_t k = 0; k != 16; ++k)
                bytes[k] = 0;
              for (uint64_t m = 0; m != 16; ++m)
                v241[m] = 0;
              if (v89) {
                goto LABEL_246;
              }
            }
            CFTypeRef v124 = *v225;
            uint64_t v125 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v125) {
              uint64_t v126 = v125;
            }
            else {
              uint64_t v126 = 0;
            }
            int v127 = *(uint64_t (**)(CFTypeRef, __CFString *, void, void **))(v126 + 48);
            if (v127)
            {
              int v128 = v127(v124, @"ListenPort", 0, &value);
              if (v128)
              {
                int v89 = v128;
              }
              else
              {
                CFDictionarySetInt64();
                CFDictionarySetValue(v75, @"dataPort", value);
                int v129 = _AddResponseStream(Mutable, v75);
                uint64_t v6 = &unk_268402000;
                if (v129)
                {
                  int v89 = v129;
                  APSLogErrorAt();
                  goto LABEL_248;
                }
                if (gLogCategory_AirPlayReceiverCore <= 50
                  && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                _UpdateActiveSessionRegistration((uint64_t *)a1);
                if (TypedValueAtIndex && *(void *)(a1 + 600))
                {
                  int v146 = CFDictionaryGetValue(TypedValueAtIndex, @"ensembleInfo");
                  if (v146)
                  {
                    size_t v147 = v146;
                    uint64_t v148 = *(void *)(a1 + 600);
                    uint64_t v149 = *(void *)(CMBaseObjectGetVTable() + 8);
                    uint64_t v150 = v149 ? v149 : 0;
                    v176 = *(void (**)(uint64_t, __CFString *, const void *))(v150 + 56);
                    if (v176) {
                      v176(v148, @"EnsembleInfo", v147);
                    }
                  }
                  v177 = CFDictionaryGetValue(TypedValueAtIndex, @"DemoDeviceInfo");
                  if (v177)
                  {
                    v178 = v177;
                    uint64_t v179 = *(void *)(a1 + 600);
                    uint64_t v180 = *(void *)(CMBaseObjectGetVTable() + 8);
                    uint64_t v181 = v180 ? v180 : 0;
                    v182 = *(void (**)(uint64_t, __CFString *, const void *))(v181 + 56);
                    if (v182) {
                      v182(v179, @"DemoDeviceInfo", v178);
                    }
                  }
                }
                if (!*(unsigned char *)(a1 + 458))
                {
                  int v89 = 0;
                  goto LABEL_247;
                }
                int v89 = _ScreenStart(a1);
                if (!v89)
                {
LABEL_247:
                  uint64_t v6 = &unk_268402000;
LABEL_248:
                  CFRelease(v75);
                  char v130 = v98;
LABEL_249:
                  CFRelease(v130);
LABEL_250:
                  if (v233[0]) {
                    CFRelease(v233[0]);
                  }
                  if (value) {
                    CFRelease(value);
                  }
                  if (v89) {
                    _ScreenTearDown(a1);
                  }
                  goto LABEL_256;
                }
              }
            }
            else
            {
              int v89 = -12782;
            }
          }
          else
          {
            int v89 = -12782;
          }
LABEL_246:
          APSLogErrorAt();
          goto LABEL_247;
        }
        APSLogErrorAt();
        int v89 = -6728;
LABEL_449:
        char v130 = v75;
        goto LABEL_249;
      }
      int v89 = AirPlay;
    }
    APSLogErrorAt();
    goto LABEL_449;
  }
  if (v67 == 120)
  {
    ++*(void *)(a1 + 664);
    size_t v78 = (const void *)CFNumberCreateInt64();
    if (v78)
    {
      CFMutableDictionaryRef v79 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (v79)
      {
        CFDictionarySetInt64();
        CFDictionarySetInt64();
        int v80 = _AddResponseStream(Mutable, v79);
        if (v80)
        {
          int v81 = v80;
          APSLogErrorAt();
        }
        else
        {
          CFSetSetValue(*(CFMutableSetRef *)(a1 + 720), v78);
          if (CFSetGetCount(*(CFSetRef *)(a1 + 720)) == 1) {
            _UpdateActiveSessionRegistration((uint64_t *)a1);
          }
          int v81 = 0;
        }
LABEL_156:
        int v82 = v6[412];
        if (v82 <= 50 && (v82 != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        if (v79) {
          CFRelease(v79);
        }
        if (v78) {
          CFRelease(v78);
        }
        unsigned int v228 = v81;
        if (v81) {
          goto LABEL_546;
        }
        goto LABEL_434;
      }
      APSLogErrorAt();
    }
    else
    {
      APSLogErrorAt();
      CFMutableDictionaryRef v79 = 0;
    }
    int v81 = -6728;
    goto LABEL_156;
  }
  if (v67 != 130) {
    goto LABEL_161;
  }
  unint64_t v69 = CFDictionaryGetValue(TypedValueAtIndex, @"clientTypeUUID");
  if (!v69)
  {
    APSLogErrorAt();
    unsigned int v228 = -6705;
    goto LABEL_547;
  }
  if (!CFEqual(v69, @"A6B27562-B43A-4F2D-B75F-82391E250194"))
  {
    int v230 = 0;
    value = 0;
    if (!TypedValueAtIndex)
    {
      APSLogErrorAt();
      uint64_t v84 = 0;
      CFDataRef v218 = 0;
      uint64_t v86 = 0;
      uint64_t v85 = 0;
      goto LABEL_457;
    }
    ++*(void *)(a1 + 664);
    uint64_t v84 = (void *)CFNumberCreateInt64();
    if (v84)
    {
      uint64_t v85 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (v85)
      {
        CFDictionarySetInt64();
        CFDictionarySetValue(v85, @"streamID", v84);
        uint64_t v86 = CFDictionaryGetValue(TypedValueAtIndex, @"clientTypeUUID");
        int v87 = v6[412];
        if (v87 <= 50 && (v87 != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        if (v86)
        {
          if (CFEqual(v86, @"1910A70F-DBC0-4242-AF95-115DB30604E1")
            || CFEqual(v86, @"82C33ABC-DABD-41C7-9A83-A8F67D5491C3"))
          {
            double v132 = CFDictionaryGetValue(TypedValueAtIndex, @"clientUUID");
            CFDictionaryGetValue(TypedValueAtIndex, @"channelID");
            if ((CFDictionaryGetInt64() & 0xFFFFFFFD) != 0)
            {
              int v230 = -6735;
              if (gLogCategory_AirPlayReceiverCore <= 90)
              {
                if (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()) {
                  LogPrintF();
                }
                CFDictionaryRef TypedValueAtIndex = 0;
                uint64_t v86 = 0;
                CFDataRef v218 = 0;
                uint64_t v6 = (_DWORD *)&unk_268402000;
                goto LABEL_421;
              }
              CFDictionaryRef TypedValueAtIndex = 0;
              CFDataRef v218 = 0;
              uint64_t v86 = 0;
              uint64_t v6 = (_DWORD *)&unk_268402000;
LABEL_422:
              _RemoteControlSessionTearDown(a1, v84);
LABEL_423:
              if (TypedValueAtIndex) {
                CFRelease(TypedValueAtIndex);
              }
              if (v84) {
                CFRelease(v84);
              }
              if (v85) {
                CFRelease(v85);
              }
              if (v86) {
                CFRelease(v86);
              }
              CFIndex v64 = v217;
              if (v218) {
                CFRelease(v218);
              }
              unsigned int v228 = v230;
              if (v230) {
                goto LABEL_546;
              }
              goto LABEL_434;
            }
            CFTypeRef v216 = v84;
            uint64_t v213 = CFDictionaryGetInt64();
            if (!v213)
            {
              CFDataRef v214 = 0;
              CFDataRef v218 = 0;
              uint64_t v6 = (_DWORD *)&unk_268402000;
              int v144 = v132;
              unint64_t v145 = _SendRemoteControlSessionOutgoingMessage;
              goto LABEL_318;
            }
            memset(cStr, 0, sizeof(cStr));
            memset(bytes, 0, 32);
            uint64_t v6 = &unk_268402000;
            if (gLogCategory_AirPlayReceiverCore <= 50
              && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            uint64_t v153 = CFDictionaryGetInt64();
            if (v230 || (int v230 = _GetDataStreamSecurityKeys(a1, v153, 32, (uint64_t)bytes, (uint64_t)cStr)) != 0)
            {
              APSLogErrorAt();
              uint64_t v86 = 0;
            }
            else
            {
              int v144 = v132;
              CFDataRef v214 = CFDataCreate(allocator, (const UInt8 *)cStr, 32);
              if (v214)
              {
                CFDataRef v154 = CFDataCreate(allocator, bytes, 32);
                if (v154)
                {
                  CFDataRef v218 = v154;
                  unint64_t v145 = 0;
LABEL_318:
                  if (CFEqual(v86, @"1910A70F-DBC0-4242-AF95-115DB30604E1"))
                  {
                    *(_OWORD *)v241 = *v215;
                    *(_OWORD *)&v241[12] = *(_OWORD *)(a1 + 236);
                    v233[0] = 0;
                    long long v235 = 0u;
                    long long v236 = 0u;
                    memset(cStr, 0, sizeof(cStr));
                    if (!v144)
                    {
                      APSLogErrorAt();
                      v174 = 0;
                      int v183 = -6705;
                      goto LABEL_474;
                    }
                    v212 = v145;
                    if (APReceiverRemoteControlSessionGetClassID_sRegisterOnce != -1) {
                      dispatch_once_f(&APReceiverRemoteControlSessionGetClassID_sRegisterOnce, &APReceiverRemoteControlSessionGetClassID_sClassID, (dispatch_function_t)rcs_getClassID);
                    }
                    int v155 = CMDerivedObjectCreate();
                    if (v155)
                    {
                      int v183 = v155;
                      APSLogErrorAt();
                      v174 = 0;
                      goto LABEL_474;
                    }
                    v156 = (void *)CMBaseObjectGetDerivedStorage();
                    v156[2] = CFRetain(v84);
                    v157 = v144;
                    v156[3] = CFRetain(v144);
                    CFTypeRef v158 = v233[0];
                    ++APReceiverMediaRemoteXPCService_RegisterCommChannel_channelIDGenerator;
                    long long v159 = (const void *)CFNumberCreateInt64();
                    FigSimpleMutexCheckIsNotLockedOnThisThread();
                    pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
                    if (gAPReceiverMediaRemoteService_1
                      && (uint64_t v160 = malloc_type_calloc(1uLL, 0x18uLL, 0xE00403260BBE2uLL)) != 0)
                    {
                      v161 = v160;
                      *uint64_t v160 = CFRetain(v157);
                      v161[1] = rcsMediaRemote_sendDataCallback;
                      if (v158) {
                        v161[2] = FigCFWeakReferenceHolderCreateWithReferencedObject();
                      }
                      CFDictionarySetValue((CFMutableDictionaryRef)gAPReceiverMediaRemoteService_1, v159, v161);
                      if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
                        && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      v156[4] = v159;
                      pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
                      uint64_t v6 = &unk_268402000;
                    }
                    else
                    {
                      APSLogErrorAt();
                      pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_2);
                      if (v159) {
                        CFRelease(v159);
                      }
                    }
                    uint64_t v170 = FigSimpleMutexCreate();
                    v156[13] = v170;
                    if (!v170) {
                      goto LABEL_472;
                    }
                    SNPrintF();
                    dispatch_queue_t v171 = dispatch_queue_create(cStr, 0);
                    v156[9] = v171;
                    if (!v171) {
                      goto LABEL_472;
                    }
                    SNPrintF();
                    dispatch_queue_t v172 = dispatch_queue_create(cStr, 0);
                    v156[10] = v172;
                    if (!v172) {
                      goto LABEL_472;
                    }
                    v156[5] = a1;
                    v156[6] = v212;
                    v156[7] = _HandleRemoteControlSessionFailed;
                    uint64_t v173 = FigCFWeakReferenceHolderCreateWithReferencedObject();
                    v156[8] = v173;
                    if (v173)
                    {
                      if (!v213)
                      {
                        if (gLogCategory_APReceiverRemoteControlSessionMediaRemote > 50)
                        {
                          v174 = 0;
                        }
                        else
                        {
                          if (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
                            || _LogCategory_Initialize())
                          {
                            LogPrintF();
                          }
                          v174 = 0;
LABEL_385:
                          if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
                            && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
                             || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                        }
                        goto LABEL_389;
                      }
                      v174 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                      if (v174)
                      {
                        FigCFDictionarySetValue();
                        FigCFDictionarySetValue();
                        CFDictionarySetValue(v174, @"MDC::Label", @"RCS-MediaRemote");
                        FigCFDictionarySetInt32();
                        CFDictionarySetInt64();
                        *(CFTypeRef *)&long long v231 = v233[0];
                        *((void *)&v231 + 1) = rcsMediaRemote_handleMediaDataControlRequest;
                        v232 = rcsMediaRemote_handleMediaDataControlFailure;
                        *(_OWORD *)bytes = *(_OWORD *)v241;
                        *(_OWORD *)&bytes[12] = *(_OWORD *)&v241[12];
                        int v175 = APMediaDataControlServerCreate((uint64_t)bytes, v174, &v231, v156 + 11);
                        if (!v175)
                        {
                          if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50)
                          {
                            if (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
                              || _LogCategory_Initialize())
                            {
                              LogPrintF();
                            }
                            uint64_t v6 = (_DWORD *)&unk_268402000;
                            goto LABEL_385;
                          }
                          uint64_t v6 = (_DWORD *)&unk_268402000;
LABEL_389:
                          int v183 = 0;
                          CFDictionaryRef TypedValueAtIndex = (const __CFDictionary *)v233[0];
                          v233[0] = 0;
                          uint64_t v86 = v214;
                          if (v174) {
LABEL_390:
                          }
                            CFRelease(v174);
LABEL_391:
                          int v230 = v183;
                          if (v183)
                          {
                            APSLogErrorAt();
                            uint64_t v84 = (void *)v216;
                            goto LABEL_421;
                          }
                          int v184 = v6[412];
                          uint64_t v84 = (void *)v216;
                          if (v184 <= 50 && (v184 != -1 || _LogCategory_Initialize())) {
                            LogPrintF();
                          }
                          CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 672), v216, TypedValueAtIndex);
                          if (!v213)
                          {
LABEL_410:
                            int v230 = _AddResponseStream(Mutable, v85);
                            if (!v230)
                            {
                              uint64_t v188 = *(void *)(CMBaseObjectGetVTable() + 16);
                              if (v188) {
                                uint64_t v189 = v188;
                              }
                              else {
                                uint64_t v189 = 0;
                              }
                              v190 = *(uint64_t (**)(const __CFDictionary *))(v189 + 8);
                              if (v190)
                              {
                                int v230 = v190(TypedValueAtIndex);
                                if (!v230) {
                                  goto LABEL_423;
                                }
                              }
                              else
                              {
                                int v230 = -12782;
                              }
                            }
                            goto LABEL_420;
                          }
LABEL_404:
                          uint64_t v185 = *(void *)(CMBaseObjectGetVTable() + 8);
                          if (v185) {
                            uint64_t v186 = v185;
                          }
                          else {
                            uint64_t v186 = 0;
                          }
                          v187 = *(uint64_t (**)(const __CFDictionary *, __CFString *, const __CFAllocator *, void **))(v186 + 48);
                          if (v187)
                          {
                            int v230 = v187(TypedValueAtIndex, @"RRCS::Property::ListenPort", allocator, &value);
                            if (!v230)
                            {
                              CFDictionarySetValue(v85, @"dataPort", value);
                              goto LABEL_410;
                            }
                          }
                          else
                          {
                            int v230 = -12782;
                          }
LABEL_420:
                          APSLogErrorAt();
                          goto LABEL_421;
                        }
                        int v183 = v175;
                        APSLogErrorAt();
LABEL_474:
                        uint64_t v86 = v214;
                        CFTypeRef v192 = v233[0];
                        if (v233[0])
                        {
                          uint64_t v193 = *(void *)(CMBaseObjectGetVTable() + 8);
                          if (v193) {
                            uint64_t v194 = v193;
                          }
                          else {
                            uint64_t v194 = 0;
                          }
                          v195 = *(void (**)(CFTypeRef))(v194 + 24);
                          if (v195) {
                            v195(v192);
                          }
                          if (v233[0]) {
                            CFRelease(v233[0]);
                          }
                        }
                        CFDictionaryRef TypedValueAtIndex = 0;
                        uint64_t v6 = (_DWORD *)&unk_268402000;
                        if (v174) {
                          goto LABEL_390;
                        }
                        goto LABEL_391;
                      }
                      APSLogErrorAt();
                    }
                    else
                    {
LABEL_472:
                      APSLogErrorAt();
                      v174 = 0;
                    }
                    int v183 = -6728;
                    goto LABEL_474;
                  }
                  CFMutableDictionaryRef v162 = *(CFMutableDictionaryRef *)(a1 + 600);
                  *(_OWORD *)v241 = *v215;
                  *(_OWORD *)&v241[12] = *(_OWORD *)(a1 + 236);
                  v233[0] = 0;
                  long long v235 = 0u;
                  long long v236 = 0u;
                  memset(cStr, 0, sizeof(cStr));
                  if (v162)
                  {
                    if (!v213)
                    {
                      APSLogErrorAt();
                      CFMutableDictionaryRef v162 = 0;
                      int v196 = -6705;
                      goto LABEL_493;
                    }
                    if (APReceiverRemoteControlSessionGetClassID_sRegisterOnce != -1) {
                      dispatch_once_f(&APReceiverRemoteControlSessionGetClassID_sRegisterOnce, &APReceiverRemoteControlSessionGetClassID_sClassID, (dispatch_function_t)rcs_getClassID);
                    }
                    int v163 = CMDerivedObjectCreate();
                    if (v163)
                    {
                      int v196 = v163;
                      APSLogErrorAt();
                      CFMutableDictionaryRef v162 = 0;
                      goto LABEL_493;
                    }
                    uint64_t v164 = (void *)CMBaseObjectGetDerivedStorage();
                    v164[2] = CFRetain(v84);
                    v164[10] = v162;
                    CFRetain(v162);
                    uint64_t v165 = FigSimpleMutexCreate();
                    v164[12] = v165;
                    if (!v165) {
                      goto LABEL_491;
                    }
                    SNPrintF();
                    dispatch_queue_t v166 = dispatch_queue_create(cStr, 0);
                    v164[7] = v166;
                    if (!v166) {
                      goto LABEL_491;
                    }
                    SNPrintF();
                    dispatch_queue_t v167 = dispatch_queue_create(cStr, 0);
                    v164[8] = v167;
                    if (v167 && (uint64_t v168 = FigCFWeakReferenceHolderCreateWithReferencedObject(), (v164[6] = v168) != 0))
                    {
                      CFMutableDictionaryRef v162 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                      if (v162)
                      {
                        FigCFDictionarySetValue();
                        FigCFDictionarySetValue();
                        CFDictionarySetValue(v162, @"MDC::Label", @"RCS-SenderUIEventsChannel");
                        FigCFDictionarySetInt32();
                        *(CFTypeRef *)&long long v231 = v233[0];
                        *((void *)&v231 + 1) = rcsSenderUIEventsChannel_handleMediaDataControlRequest;
                        v232 = rcsSenderUIEventsChannel_handleMediaDataControlFailure;
                        *(_OWORD *)bytes = *(_OWORD *)v241;
                        *(_OWORD *)&bytes[12] = *(_OWORD *)&v241[12];
                        int v169 = APMediaDataControlServerCreate((uint64_t)bytes, v162, &v231, v164 + 9);
                        if (!v169)
                        {
                          if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50)
                          {
                            if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
                              || _LogCategory_Initialize())
                            {
                              LogPrintF();
                            }
                            if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50
                              && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
                               || _LogCategory_Initialize()))
                            {
                              LogPrintF();
                            }
                          }
                          CFDictionaryRef TypedValueAtIndex = (const __CFDictionary *)v233[0];
                          v233[0] = 0;
                          CFRelease(v162);
                          int v230 = 0;
                          uint64_t v6 = &unk_268402000;
                          if (gLogCategory_AirPlayReceiverCore <= 50
                            && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 672), v84, TypedValueAtIndex);
                          uint64_t v86 = v214;
                          goto LABEL_404;
                        }
                        int v196 = v169;
                        APSLogErrorAt();
LABEL_493:
                        CFTypeRef v197 = v233[0];
                        if (v233[0])
                        {
                          uint64_t v198 = *(void *)(CMBaseObjectGetVTable() + 8);
                          if (v198) {
                            uint64_t v199 = v198;
                          }
                          else {
                            uint64_t v199 = 0;
                          }
                          v200 = *(void (**)(CFTypeRef))(v199 + 24);
                          if (v200) {
                            v200(v197);
                          }
                          if (v233[0]) {
                            CFRelease(v233[0]);
                          }
                        }
                        if (v162) {
                          CFRelease(v162);
                        }
                        uint64_t v6 = (_DWORD *)&unk_268402000;
                        uint64_t v86 = v214;
                        int v230 = v196;
                        APSLogErrorAt();
                        CFDictionaryRef TypedValueAtIndex = 0;
LABEL_421:
                        if (v230) {
                          goto LABEL_422;
                        }
                        goto LABEL_423;
                      }
                      APSLogErrorAt();
                    }
                    else
                    {
LABEL_491:
                      APSLogErrorAt();
                      CFMutableDictionaryRef v162 = 0;
                    }
                    int v196 = -6728;
                    goto LABEL_493;
                  }
                  APSLogErrorAt();
                  int v196 = -6705;
                  goto LABEL_493;
                }
                APSLogErrorAt();
                int v230 = -6728;
                uint64_t v86 = v214;
              }
              else
              {
                APSLogErrorAt();
                uint64_t v86 = 0;
                int v230 = -6728;
              }
            }
            CFDictionaryRef TypedValueAtIndex = 0;
          }
          else
          {
            int v230 = -6735;
            int v143 = v6[412];
            if (v143 > 90)
            {
              CFDictionaryRef TypedValueAtIndex = 0;
              CFDataRef v218 = 0;
              uint64_t v86 = 0;
              goto LABEL_422;
            }
            if (v143 != -1 || _LogCategory_Initialize()) {
              LogPrintF();
            }
            CFDictionaryRef TypedValueAtIndex = 0;
            uint64_t v86 = 0;
          }
          CFDataRef v218 = 0;
          goto LABEL_421;
        }
        APSLogErrorAt();
        CFDictionaryRef TypedValueAtIndex = 0;
        CFDataRef v218 = 0;
LABEL_457:
        int v191 = -6705;
LABEL_458:
        int v230 = v191;
        goto LABEL_422;
      }
      APSLogErrorAt();
      CFDictionaryRef TypedValueAtIndex = 0;
      CFDataRef v218 = 0;
      uint64_t v86 = 0;
    }
    else
    {
      APSLogErrorAt();
      CFDictionaryRef TypedValueAtIndex = 0;
      CFDataRef v218 = 0;
      uint64_t v86 = 0;
      uint64_t v85 = 0;
    }
    int v191 = -6728;
    goto LABEL_458;
  }
  if (!TypedValueAtIndex)
  {
    APSLogErrorAt();
    int v139 = -6705;
    goto LABEL_560;
  }
  ++*(void *)(a1 + 664);
  uint64_t v70 = CFNumberCreateInt64();
  if (!v70)
  {
    APSLogErrorAt();
    int v139 = -6728;
    a2 = theDict;
    uint64_t v6 = (_DWORD *)&unk_268402000;
    goto LABEL_561;
  }
  uint64_t v71 = (const void *)v70;
  uint64_t v72 = CFDictionaryGetValue(TypedValueAtIndex, @"clientUUID");
  if (!v72)
  {
    APSLogErrorAt();
    int v139 = -6705;
    uint64_t v6 = (_DWORD *)&unk_268402000;
    goto LABEL_559;
  }
  unint64_t v73 = v72;
  if (gLogCategory_AirPlayReceiverCore <= 50)
  {
    if (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (*(void *)(a1 + 600))
  {
    double v133 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionarySetNumber();
    CFDictionarySetValue(v133, @"sessionID", v71);
    unsigned int v134 = *(const void **)(a1 + 448);
    if (v134) {
      CFDictionarySetValue(v133, @"networkClock", v134);
    }
    uint64_t v135 = *(void *)(a1 + 600);
    uint64_t v136 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v136) {
      uint64_t v137 = v136;
    }
    else {
      uint64_t v137 = 0;
    }
    double v138 = *(uint64_t (**)(uint64_t, void (*)(void *, const void *, const void *), uint64_t (*)(uint64_t, uint64_t, CFMutableDictionaryRef *), uint64_t, __CFDictionary *))(v137 + 48);
    if (v138)
    {
      int v139 = v138(v135, _PlaybackV2EventCallback, _PlaybackV2TLSInfoRequestCallback, a1, v133);
      if (!v139)
      {
LABEL_285:
        uint64_t v6 = (_DWORD *)&unk_268402000;
        if (v133) {
          CFRelease(v133);
        }
        if (v139) {
          goto LABEL_557;
        }
        CFMutableDictionaryRef v140 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (!v140)
        {
          APSLogErrorAt();
          int v139 = -6728;
          goto LABEL_559;
        }
        v141 = v140;
        CFDictionarySetInt64();
        CFDictionarySetValue(v141, @"streamID", v71);
        unsigned int v142 = _AddResponseStream(Mutable, v141);
        if (v142)
        {
          APSLogErrorAt();
        }
        else
        {
          CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 712), v71, v73);
          CFSetSetValue(*(CFMutableSetRef *)(a1 + 720), v71);
          if (CFSetGetCount(*(CFSetRef *)(a1 + 720)) == 1) {
            _UpdateActiveSessionRegistration((uint64_t *)a1);
          }
        }
        CFRelease(v71);
        CFRelease(v141);
        unsigned int v228 = v142;
        if (v142) {
          goto LABEL_546;
        }
        goto LABEL_434;
      }
    }
    else
    {
      int v139 = -12782;
    }
    APSLogErrorAt();
    goto LABEL_285;
  }
  APSLogErrorAt();
  int v139 = -6735;
  uint64_t v6 = (_DWORD *)&unk_268402000;
LABEL_557:
  APSLogErrorAt();
LABEL_559:
  CFRelease(v71);
LABEL_560:
  a2 = theDict;
LABEL_561:
  v201 = Mutable;
  unsigned int v228 = v139;
LABEL_562:
  APSLogErrorAt();
LABEL_522:
  if (theArray) {
    CFRelease(theArray);
  }
  if (v201) {
    CFRelease(v201);
  }
  uint64_t v206 = v228;
  if (!v228) {
    return 0;
  }
  int v207 = v6[412];
  if (v207 <= 50)
  {
    if (v207 != -1 || (v209 = _LogCategory_Initialize(), uint64_t v206 = v228, v209))
    {
      LogPrintF();
      uint64_t v206 = v228;
    }
  }
  AirPlayReceiverSessionTearDown(a1, (uint64_t)a2, v206, 0);
  return v228;
}

uint64_t _GeneralAudioSetup(uint64_t a1, int a2, CFDictionaryRef theDict, __CFDictionary *a4)
{
  uint64_t v130 = *MEMORY[0x263EF8340];
  unsigned int DataStreamSecurityKeys = 0;
  value = 0;
  CFTypeRef cf = 0;
  CFArrayRef v8 = (_DWORD *)&unk_268402000;
  if (CFDictionaryContainsKey(theDict, @"isMedia") && !CFDictionaryGetInt64())
  {
    int v119 = 1;
  }
  else
  {
    if (*(void *)(a1 + 576))
    {
      APSLogErrorAt();
      int Int64 = 0;
      goto LABEL_290;
    }
    int v119 = 0;
  }
  if (!CFDictionaryGetInt64())
  {
    int Int64 = (void *)CFNumberCreateInt64();
    if (!Int64)
    {
      APSLogErrorAt();
      int v21 = 0;
      CFNumberRef v76 = 0;
      int v77 = -6728;
LABEL_291:
      unsigned int DataStreamSecurityKeys = v77;
      goto LABEL_413;
    }
    if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 568), Int64))
    {
      int v117 = a2;
      int v13 = (const void **)MEMORY[0x263EFFB40];
      uint64_t v14 = (const void **)MEMORY[0x263EFFB38];
      if (*(void *)(a1 + 600))
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        CFDictionarySetValue(Mutable, @"sessionID", Int64);
        if (CFDictionaryGetInt64()) {
          uint64_t v16 = v13;
        }
        else {
          uint64_t v16 = v14;
        }
        CFDictionarySetValue(Mutable, @"IsScreenAudio", *v16);
        uint64_t v17 = *(void *)(a1 + 600);
        uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v18) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = 0;
        }
        int v20 = *(void (**)(uint64_t, __CFDictionary *))(v19 + 128);
        if (v20) {
          v20(v17, Mutable);
        }
        if (Mutable) {
          CFRelease(Mutable);
        }
      }
      int v21 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!v21) {
        goto LABEL_280;
      }
      int v114 = a4;
      uint64_t PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      uint64_t v23 = *v13;
      uint64_t v24 = *v14;
      int v25 = PropertyInt64Sync ? *v13 : *v14;
      CFDictionarySetValue(v21, @"RTPSkewPlatformAdjust", v25);
      CFStringRef v26 = *(unsigned char *)(a1 + 560) ? v23 : v24;
      CFDictionarySetValue(v21, @"QosDisabled", v26);
      CFDictionarySetInt64();
      int v27 = *(unsigned char *)(a1 + 424) ? v23 : v24;
      CFDictionarySetValue(v21, @"AllowP2P", v27);
      CFMutableDictionaryRef v28 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!v28)
      {
LABEL_280:
        APSLogErrorAt();
        CFNumberRef v76 = 0;
        uint64_t v78 = 4294960568;
        unsigned int DataStreamSecurityKeys = -6728;
LABEL_412:
        _AudioTearDownStream(a1, 0, Int64, v78);
        goto LABEL_413;
      }
      int v29 = v28;
      CFDictionaryGetInt64();
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      if (CFDictionaryContainsKey(theDict, @"audioFormatIndex"))
      {
        int v30 = v117;
        if (!CFDictionaryGetInt64()) {
          goto LABEL_51;
        }
      }
      else
      {
        int v30 = v117;
        if (!CFDictionaryContainsKey(theDict, @"audioFormat")) {
          goto LABEL_51;
        }
        uint64_t v31 = CFDictionaryGetInt64();
        if ((unint64_t)v31 < 2) {
          goto LABEL_51;
        }
        if (v31 <= 0x3FFFFFFF)
        {
          if (v31 < 0x8000)
          {
            if (v31 > 255)
            {
              if (v31 <= 2047)
              {
                if (v31 != 256 && v31 != 512 && v31 != 1024) {
                  goto LABEL_51;
                }
              }
              else if (v31 >= 0x2000)
              {
                if (v31 != 0x2000 && v31 != 0x4000) {
                  goto LABEL_51;
                }
              }
              else if (v31 != 2048 && v31 != 4096)
              {
                goto LABEL_51;
              }
            }
            else if (v31 <= 7)
            {
              if (v31 != 0x8000000000000000 && v31 != 2 && v31 != 4) {
                goto LABEL_51;
              }
            }
            else if (v31 > 31)
            {
              if (v31 != 32 && v31 != 128) {
                goto LABEL_51;
              }
            }
            else if (v31 != 8 && v31 != 16)
            {
              goto LABEL_51;
            }
          }
          else if (v31 < 0x400000)
          {
            if (v31 < 0x40000)
            {
              if (v31 != 0x8000 && v31 != 0x10000 && v31 != 0x20000) {
                goto LABEL_51;
              }
            }
            else if (v31 >= 0x100000)
            {
              if (v31 != 0x100000 && v31 != 0x200000) {
                goto LABEL_51;
              }
            }
            else if (v31 != 0x40000 && v31 != 0x80000)
            {
              goto LABEL_51;
            }
          }
          else if (v31 > 0x3FFFFFF)
          {
            if (v31 > 0xFFFFFFF)
            {
              if (v31 != 0x10000000 && v31 != 0x20000000) {
                goto LABEL_51;
              }
            }
            else if (v31 != 0x4000000 && v31 != 0x8000000)
            {
              goto LABEL_51;
            }
          }
          else if (v31 > 0xFFFFFF)
          {
            if (v31 != 0x1000000 && v31 != 0x2000000) {
              goto LABEL_51;
            }
          }
          else if (v31 != 0x400000 && v31 != 0x800000)
          {
            goto LABEL_51;
          }
        }
        else if (v31 > 0x7FFFFFFFFFFFLL)
        {
          if (v31 <= 0x3FFFFFFFFFFFFFLL)
          {
            if (v31 <= 0x3FFFFFFFFFFFFLL)
            {
              if (v31 != 0x800000000000 && v31 != 0x1000000000000 && v31 != 0x2000000000000) {
                goto LABEL_51;
              }
            }
            else if (v31 > 0xFFFFFFFFFFFFFLL)
            {
              if (v31 != 0x10000000000000 && v31 != 0x20000000000000) {
                goto LABEL_51;
              }
            }
            else if (v31 != 0x4000000000000 && v31 != 0x8000000000000)
            {
              goto LABEL_51;
            }
          }
          else if (v31 > 0x3FFFFFFFFFFFFFFLL)
          {
            if (v31 > 0x1FFFFFFFFFFFFFFFLL)
            {
              if (v31 != 0x2000000000000000 && v31 != 0x4000000000000000) {
                goto LABEL_51;
              }
            }
            else if (v31 != 0x400000000000000 && v31 != 0x1000000000000000)
            {
              goto LABEL_51;
            }
          }
          else if (v31 > 0xFFFFFFFFFFFFFFLL)
          {
            if (v31 != 0x100000000000000 && v31 != 0x200000000000000) {
              goto LABEL_51;
            }
          }
          else if (v31 != 0x40000000000000 && v31 != 0x80000000000000)
          {
            goto LABEL_51;
          }
        }
        else if (v31 <= 0x7FFFFFFFFFLL)
        {
          if (v31 <= 0x1FFFFFFFFLL)
          {
            if (v31 != 0x40000000 && v31 != 0x80000000 && v31 != 0x100000000) {
              goto LABEL_51;
            }
          }
          else if (v31 > 0x7FFFFFFFFLL)
          {
            if (v31 != 0x800000000 && v31 != 0x4000000000) {
              goto LABEL_51;
            }
          }
          else if (v31 != 0x200000000 && v31 != 0x400000000)
          {
            goto LABEL_51;
          }
        }
        else if (v31 > 0x7FFFFFFFFFFLL)
        {
          if (v31 > 0x1FFFFFFFFFFFLL)
          {
            if (v31 != 0x200000000000 && v31 != 0x400000000000) {
              goto LABEL_51;
            }
          }
          else if (v31 != 0x80000000000 && v31 != 0x100000000000)
          {
            goto LABEL_51;
          }
        }
        else if (v31 > 0x1FFFFFFFFFFLL)
        {
          if (v31 != 0x20000000000 && v31 != 0x40000000000) {
            goto LABEL_51;
          }
        }
        else if (v31 != 0x8000000000 && v31 != 0x10000000000)
        {
          goto LABEL_51;
        }
      }
      unsigned int DataStreamSecurityKeys = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      CFDictionarySetValue(v21, @"AudioFormat", value);
LABEL_51:
      if (v119) {
        int v32 = v24;
      }
      else {
        int v32 = v23;
      }
      CFDictionarySetValue(v21, @"IsMedia", v32);
      CFDictionarySetValue(v21, @"NetworkClock", *(const void **)(a1 + 448));
      CFDictionaryGetInt64();
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      if (CFDictionaryGetInt64()) {
        uint64_t v33 = v23;
      }
      else {
        uint64_t v33 = v24;
      }
      CFDictionarySetValue(v21, @"DisableRetransmits", v33);
      uint64_t v34 = CFDictionaryGetInt64();
      *(unsigned char *)(a1 + 440) = v34 != 0;
      if (v34) {
        uint64_t v35 = v23;
      }
      else {
        uint64_t v35 = v24;
      }
      CFDictionarySetValue(v21, @"UsingScreen", v35);
      if (CFDictionaryGetInt64()) {
        int v36 = v23;
      }
      else {
        int v36 = v24;
      }
      CFDictionarySetValue(v21, @"HTFTIsActive", v36);
      int v37 = *(const void **)(a1 + 176);
      if (v37) {
        CFDictionarySetValue(v21, @"StatsCollector", v37);
      }
      CFDictionarySetValue(v21, @"ReceiverSession", (const void *)a1);
      CFDictionarySetValue(v21, @"StreamDescription", theDict);
      CFDictionaryGetInt64();
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      CFDictionaryGetInt64();
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      CFDictionaryGetInt64();
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      CFDictionaryGetInt64();
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      int v38 = *(const void **)(a1 + 312);
      if (v38)
      {
        CFTypeID v39 = CFGetTypeID(v38);
        if (v39 == CFStringGetTypeID()) {
          CFDictionarySetValue(v21, @"ClientDeviceModel", *(const void **)(a1 + 312));
        }
      }
      int v40 = *(const void **)(a1 + 320);
      if (v40)
      {
        CFTypeID v41 = CFGetTypeID(v40);
        if (v41 == CFStringGetTypeID()) {
          CFDictionarySetValue(v21, @"ClientOSBuildVersion", *(const void **)(a1 + 320));
        }
      }
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
      if (DataStreamSecurityKeys) {
        goto LABEL_307;
      }
      FigCFDictionarySetValueFromKeyInDict();
      theDicta = v29;
      if (CFDictionaryContainsKey(theDict, @"shk"))
      {
        *(void *)int v129 = 0;
        CFDictionaryGetData();
        APSLogErrorAt();
        unsigned int DataStreamSecurityKeys = -6743;
LABEL_308:
        CFNumberRef v76 = 0;
        goto LABEL_411;
      }
      uint64_t v42 = *(void *)(a1 + 488);
      if (v42
        && ((uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v44 = 0) : (v44 = v43),
            (uint64_t v45 = *(unsigned int (**)(uint64_t))(v44 + 32)) != 0 && v45(v42)))
      {
        uint64_t v46 = CFDictionaryGetInt64();
        if (!v46)
        {
          APSLogErrorAt();
          CFNumberRef v76 = 0;
          unsigned int DataStreamSecurityKeys = -6715;
          CFArrayRef v8 = (_DWORD *)&unk_268402000;
          goto LABEL_411;
        }
        int v47 = v127;
        unsigned int DataStreamSecurityKeys = _GetDataStreamSecurityKeys(a1, v46, 0, 0, (uint64_t)v127);
        if (DataStreamSecurityKeys) {
          goto LABEL_303;
        }
      }
      else
      {
        int v47 = 0;
      }
      int v48 = CFDictionaryContainsKey(theDict, @"streamConnections");
      key = Int64;
      if (!v48)
      {
        CFDictionaryGetInt64();
        unsigned int v59 = CFDictionarySetInt64();
        if (v59)
        {
          unsigned int v80 = v59;
        }
        else
        {
          if (!v47 || (unsigned int v60 = CFDictionarySetData()) == 0)
          {
            int v61 = 0;
            int v53 = 1381257248;
            unsigned int DataStreamSecurityKeys = 0;
            int v115 = 1;
            CFArrayRef v8 = (_DWORD *)&unk_268402000;
            goto LABEL_319;
          }
          unsigned int v80 = v60;
        }
        APSLogErrorAt();
        unsigned int DataStreamSecurityKeys = v80;
LABEL_303:
        APSLogErrorAt();
        CFNumberRef v76 = 0;
        CFArrayRef v8 = (_DWORD *)&unk_268402000;
LABEL_354:
        int v29 = theDicta;
        goto LABEL_411;
      }
      int appended = 0;
      CFDictionaryGetTypeID();
      TypedCFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetTypedValue();
      int v50 = CFDictionaryContainsKey(TypedValue, @"streamConnectionTypeAPAP");
      int v51 = CFDictionaryContainsKey(TypedValue, @"streamConnectionTypeRTP");
      if (v50 | v51)
      {
        if (v50 && v51)
        {
          int v79 = -6711;
          goto LABEL_305;
        }
        if (v50) {
          int v52 = @"streamConnectionTypeAPAP";
        }
        else {
          int v52 = @"streamConnectionTypeRTP";
        }
        if (v50) {
          int v53 = 1095778640;
        }
        else {
          int v53 = 1381257248;
        }
        CFDictionaryRef v54 = (const __CFDictionary *)CFDictionaryGetValue(TypedValue, v52);
        if (!v54 || (CFDictionaryRef v55 = v54, v56 = CFGetTypeID(v54), v56 != CFDictionaryGetTypeID()))
        {
          int v79 = -6756;
          goto LABEL_305;
        }
        uint64_t v57 = CFDictionaryGetInt64();
        int v58 = CFDictionaryContainsKey(v55, @"streamConnectionKeyEncryptionSeed");
        if (v57)
        {
          if (v58)
          {
            int v79 = -6711;
            goto LABEL_305;
          }
          if (v47)
          {
            int appended = CFDictionarySetData();
            if (appended) {
              goto LABEL_310;
            }
          }
        }
        else if (v58)
        {
          uint64_t v62 = CFDictionaryGetInt64();
          int appended = _GetDataStreamSecurityKeys(a1, v62, 32, (uint64_t)v128, (uint64_t)v129);
          if (appended) {
            goto LABEL_310;
          }
          int appended = CFDictionarySetData();
          if (appended) {
            goto LABEL_310;
          }
        }
        if (CFDictionaryContainsKey(v55, @"streamConnectionKeyNetworkInfo"))
        {
          CFIndex v63 = CFDictionaryGetValue(v55, @"streamConnectionKeyNetworkInfo");
          CFDictionarySetValue(v21, @"NetworkInfoRemoteRTP", v63);
        }
        FigCFDictionaryGetValue();
        if (FigCFEqual()) {
          CFDictionarySetValue(v21, @"UseQUIC", v23);
        }
      }
      else
      {
        int v53 = 0;
      }
      CFDictionaryRef v64 = (const __CFDictionary *)CFDictionaryGetValue(TypedValue, @"streamConnectionTypeRTCP");
      if (v64)
      {
        CFDictionaryRef v65 = v64;
        CFTypeID v66 = CFGetTypeID(v64);
        if (v66 != CFDictionaryGetTypeID())
        {
          int v79 = -6756;
          goto LABEL_305;
        }
        if (CFDictionaryContainsKey(v65, @"streamConnectionKeyPort"))
        {
          CFDictionaryGetInt64();
          int appended = CFDictionarySetInt64();
          if (appended)
          {
LABEL_310:
            APSLogErrorAt();
            int v53 = 0;
            int v115 = 0;
            goto LABEL_311;
          }
        }
        int v115 = 1;
      }
      else
      {
        int v115 = 0;
      }
      CFDictionaryRef v67 = (const __CFDictionary *)CFDictionaryGetValue(TypedValue, @"streamConnectionTypeMediaDataControl");
      if (!v67)
      {
LABEL_311:
        int v61 = 0;
        CFArrayRef v8 = &unk_268402000;
        int v30 = v117;
LABEL_312:
        unsigned int DataStreamSecurityKeys = appended;
        if (!appended)
        {
          if (v53)
          {
            if (v53 == 1095778640)
            {
              if (v30 == 103)
              {
                int v53 = 1095778640;
                CFDictionarySetInt64();
                BOOL v81 = 0;
                goto LABEL_321;
              }
              APSLogErrorAt();
              unsigned int DataStreamSecurityKeys = -6735;
              int v112 = v8[412];
              if (v112 > 90 || v112 == -1 && !_LogCategory_Initialize()) {
                goto LABEL_430;
              }
LABEL_455:
              LogPrintF();
              goto LABEL_430;
            }
          }
          else
          {
            if (v115)
            {
              APSLogErrorAt();
              unsigned int DataStreamSecurityKeys = -6711;
              int v113 = v8[412];
              if (v113 > 90 || v113 == -1 && !_LogCategory_Initialize()) {
                goto LABEL_430;
              }
              goto LABEL_455;
            }
            int v53 = 0;
            int v115 = 0;
          }
LABEL_319:
          CFDictionarySetInt64();
          BOOL v81 = v30 == 96;
          if (v30 == 96)
          {
            int v118 = 0;
            goto LABEL_323;
          }
          if (v30 != 103)
          {
            int v85 = v8[412];
            if (v85 <= 60 && (v85 != -1 || _LogCategory_Initialize())) {
              LogPrintF();
            }
            CFNumberRef v76 = 0;
            unsigned int DataStreamSecurityKeys = -6735;
            goto LABEL_353;
          }
LABEL_321:
          *(_DWORD *)(a1 + 552) = 120;
          *(void *)(a1 + 520) = 120 * UpTicksPerSecond();
          SocketSetKeepAlive();
          FigCFDictionarySetValueFromKeyInDict();
          int v118 = 1;
LABEL_323:
          *(_OWORD *)int v129 = *(_OWORD *)(a1 + 224);
          *(_OWORD *)&v129[12] = *(_OWORD *)(a1 + 236);
          unsigned int DataStreamSecurityKeys = APReceiverAudioSessionCreate(v30, v129, v21, (uint64_t *)&cf);
          if (!DataStreamSecurityKeys)
          {
            if (CFDictionaryContainsKey(theDict, @"pkdDeviceContext"))
            {
              CFNumberRef v76 = APReceiverAudioSessionCopyProperty((const __CFNumber *)cf, v82, @"PKDReceiverContext", v83, &DataStreamSecurityKeys);
              if (DataStreamSecurityKeys)
              {
LABEL_456:
                APSLogErrorAt();
                goto LABEL_353;
              }
              if (v76) {
                CFDictionarySetValue(theDicta, @"pkdDeviceContext", v76);
              }
            }
            else
            {
              CFNumberRef v76 = 0;
            }
            if (!*(unsigned char *)(a1 + 458)
              || *(unsigned char *)(a1 + 729)
              || (unsigned int DataStreamSecurityKeys = APReceiverAudioSessionPlatformControl(cf, @"RASP::StartSession")) == 0)
            {
              CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 568), key, cf);
              int v84 = v8[412];
              if (v84 <= 50 && (v84 != -1 || _LogCategory_Initialize())) {
                LogPrintF();
              }
              if (v119)
              {
                _UpdateActiveSessionRegistration((uint64_t *)a1);
              }
              else
              {
                int v86 = v61;
                int v87 = *(const void **)(a1 + 576);
                if (!v87)
                {
                  AirPlayReceiverSessionPlatformControl((void *)a1, @"handleMediaAudioStartingForSession");
                  _UpdateActiveSessionRegistration((uint64_t *)a1);
                  int v87 = *(const void **)(a1 + 576);
                }
                CFTypeRef v88 = cf;
                if (cf) {
                  CFRetain(cf);
                }
                *(void *)(a1 + 576) = v88;
                if (v87) {
                  CFRelease(v87);
                }
                int v61 = v86;
                if (*(unsigned char *)(a1 + 700))
                {
                  int v89 = v8[412];
                  if (v89 <= 50 && (v89 != -1 || _LogCategory_Initialize())) {
                    LogPrintF();
                  }
                  CFTypeRef v90 = cf;
                  CMTimeMakeWithSeconds(&v122, *(Float64 *)(a1 + 704), 1000);
                  APReceiverAudioSessionApplyVolumeFade((uint64_t)v90, 1, &v122);
                  *(unsigned char *)(a1 + 700) = 0;
                }
              }
              if (*(void *)(a1 + 384))
              {
                if (cf)
                {
                  uint64_t v91 = (void (*)(void, uint64_t, uint64_t))*((void *)cf + 8);
                  if (v91) {
                    v91(*((void *)cf + 5), a1 + 392, a1 + 408);
                  }
                }
              }
              *(_DWORD *)(a1 + 584) = CFObjectGetPropertyInt64Sync();
              CFNumberRef v92 = (const __CFNumber *)cf;
              if (!v48)
              {
                *(_DWORD *)int v129 = 0;
                if (v53 == 1381257248)
                {
                  int Int64 = key;
                  int v29 = theDicta;
                  if (v115 && !v61)
                  {
                    CFObjectGetPropertyInt64Sync();
                    if (*(_DWORD *)v129)
                    {
                      APSLogErrorAt();
                    }
                    else
                    {
                      CFObjectGetPropertyInt64Sync();
                      CFDictionarySetInt64();
                      CFDictionarySetInt64();
                    }
                    unsigned int DataStreamSecurityKeys = *(_DWORD *)v129;
                    CFArrayRef v8 = (_DWORD *)&unk_268402000;
                    if (*(_DWORD *)v129) {
                      goto LABEL_410;
                    }
LABEL_394:
                    CFDictionarySetInt64();
                    if (v81)
                    {
                      CFObjectGetPropertyInt64Sync();
                      unsigned int DataStreamSecurityKeys = CFDictionarySetInt64();
                      if (DataStreamSecurityKeys) {
                        goto LABEL_410;
                      }
                    }
                    if (v118)
                    {
                      CFObjectGetPropertyInt64Sync();
                      CFDictionarySetInt64();
                    }
                    unsigned int DataStreamSecurityKeys = _AddResponseStream(v114, v29);
                    if (DataStreamSecurityKeys) {
                      goto LABEL_410;
                    }
                    int v105 = v8[412];
                    if (v105 <= 50 && (v105 != -1 || _LogCategory_Initialize())) {
                      LogPrintF();
                    }
                    if (*(unsigned char *)(a1 + 458))
                    {
                      if (cf)
                      {
                        unint64_t v106 = (uint64_t (*)(void))*((void *)cf + 9);
                        if (v106)
                        {
                          unsigned int DataStreamSecurityKeys = v106(*((void *)cf + 5));
                          if (!DataStreamSecurityKeys) {
                            goto LABEL_411;
                          }
                          goto LABEL_410;
                        }
                        int v107 = -12782;
                      }
                      else
                      {
                        APSLogErrorAt();
                        int v107 = -72152;
                      }
                      unsigned int DataStreamSecurityKeys = v107;
LABEL_410:
                      APSLogErrorAt();
                    }
LABEL_411:
                    CFRelease(v29);
                    uint64_t v78 = DataStreamSecurityKeys;
                    if (!DataStreamSecurityKeys) {
                      goto LABEL_413;
                    }
                    goto LABEL_412;
                  }
                }
                else
                {
                  int Int64 = key;
                  int v29 = theDicta;
                }
                APSLogErrorAt();
                unsigned int DataStreamSecurityKeys = -6705;
                CFArrayRef v8 = (_DWORD *)&unk_268402000;
                goto LABEL_410;
              }
              BOOL v120 = v81;
              *(_DWORD *)int v129 = 0;
              CFAllocatorRef v93 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
              CFMutableDictionaryRef v94 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v94)
              {
                APSLogErrorAt();
                unsigned int DataStreamSecurityKeys = -6728;
                int v29 = theDicta;
                goto LABEL_434;
              }
              CFMutableDictionaryRef v95 = v94;
              if (v92)
              {
                if (!v53) {
                  goto LABEL_381;
                }
                CFMutableDictionaryRef v96 = CFDictionaryCreateMutable(v93, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                if (v96)
                {
                  CFMutableDictionaryRef v97 = v96;
                  CFObjectGetPropertyInt64Sync();
                  if (*(_DWORD *)v129 || (*(_DWORD *)int v129 = CFDictionarySetInt64()) != 0)
                  {
                    APSLogErrorAt();
                    CFArrayRef v8 = &unk_268402000;
                    int Int64 = key;
LABEL_392:
                    int v29 = theDicta;
                    CFRelease(v95);
                    CFMutableDictionaryRef v95 = v97;
                    goto LABEL_393;
                  }
                  CFNumberRef v100 = APReceiverAudioSessionCopyProperty(v92, v98, @"AudioNetworkInfo", v99, 0);
                  if (v100)
                  {
                    CFNumberRef v101 = v100;
                    CFDictionarySetValue(v97, @"streamConnectionKeyNetworkInfo", v100);
                    CFRelease(v101);
                  }
                  if (v53 == 1095778640) {
                    int v102 = @"streamConnectionTypeAPAP";
                  }
                  else {
                    int v102 = @"streamConnectionTypeRTP";
                  }
                  CFDictionarySetValue(v95, v102, v97);
                  CFRelease(v97);
LABEL_381:
                  int Int64 = key;
                  if (v115)
                  {
                    CFMutableDictionaryRef v103 = CFDictionaryCreateMutable(v93, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                    if (!v103)
                    {
LABEL_447:
                      APSLogErrorAt();
                      *(_DWORD *)int v129 = -6728;
                      CFArrayRef v8 = (_DWORD *)&unk_268402000;
                      goto LABEL_448;
                    }
                    CFMutableDictionaryRef v97 = v103;
                    CFObjectGetPropertyInt64Sync();
                    if (*(_DWORD *)v129 || (*(_DWORD *)int v129 = CFDictionarySetInt64()) != 0)
                    {
LABEL_449:
                      APSLogErrorAt();
                      CFArrayRef v8 = (_DWORD *)&unk_268402000;
                      goto LABEL_392;
                    }
                    CFDictionarySetValue(v95, @"streamConnectionTypeRTCP", v97);
                    CFRelease(v97);
                  }
                  if (!v61)
                  {
LABEL_391:
                    int v29 = theDicta;
                    CFDictionarySetValue(theDicta, @"streamConnections", v95);
                    CFArrayRef v8 = (_DWORD *)&unk_268402000;
                    goto LABEL_393;
                  }
                  CFMutableDictionaryRef v104 = CFDictionaryCreateMutable(v93, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                  if (v104)
                  {
                    CFMutableDictionaryRef v97 = v104;
                    CFObjectGetPropertyInt64Sync();
                    if (!*(_DWORD *)v129)
                    {
                      *(_DWORD *)int v129 = CFDictionarySetInt64();
                      if (!*(_DWORD *)v129)
                      {
                        CFDictionarySetValue(v95, @"streamConnectionTypeMediaDataControl", v97);
                        CFRelease(v97);
                        goto LABEL_391;
                      }
                    }
                    goto LABEL_449;
                  }
                  goto LABEL_447;
                }
                APSLogErrorAt();
                int v111 = -6728;
              }
              else
              {
                APSLogErrorAt();
                int v111 = -6718;
              }
              *(_DWORD *)int v129 = v111;
              CFArrayRef v8 = (_DWORD *)&unk_268402000;
              int Int64 = key;
LABEL_448:
              int v29 = theDicta;
LABEL_393:
              CFRelease(v95);
              unsigned int DataStreamSecurityKeys = *(_DWORD *)v129;
              BOOL v81 = v120;
              if (!*(_DWORD *)v129) {
                goto LABEL_394;
              }
LABEL_434:
              APSLogErrorAt();
              CFArrayRef v8 = (_DWORD *)&unk_268402000;
              int Int64 = key;
              goto LABEL_411;
            }
            goto LABEL_456;
          }
          APSLogErrorAt();
LABEL_430:
          CFNumberRef v76 = 0;
LABEL_353:
          int Int64 = key;
          goto LABEL_354;
        }
        goto LABEL_306;
      }
      CFDictionaryRef v68 = v67;
      CFTypeID v69 = CFGetTypeID(v67);
      int v30 = v117;
      if (v69 == CFDictionaryGetTypeID())
      {
        CFMutableArrayRef v70 = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 2, MEMORY[0x263EFFF70]);
        if (v70)
        {
          CFMutableArrayRef v71 = v70;
          uint64_t v72 = CFDictionaryGetInt64();
          int v73 = CFDictionaryContainsKey(v68, @"streamConnectionKeyEncryptionSeed");
          if (v72)
          {
            if (v73)
            {
              APSLogErrorAt();
              int v53 = 0;
              int v115 = 0;
              int v61 = 0;
              int appended = -6711;
              goto LABEL_138;
            }
            if (v47)
            {
              int appended = CFArrayAppendBytes();
              if (appended)
              {
LABEL_309:
                APSLogErrorAt();
                int v53 = 0;
                int v115 = 0;
                int v61 = 0;
                goto LABEL_138;
              }
            }
          }
          else if (v73)
          {
            uint64_t v74 = CFDictionaryGetInt64();
            int appended = _GetDataStreamSecurityKeys(a1, v74, 32, (uint64_t)v128, (uint64_t)v129);
            if (appended) {
              goto LABEL_309;
            }
            int appended = CFArrayAppendBytes();
            if (appended) {
              goto LABEL_309;
            }
            int appended = CFArrayAppendBytes();
            if (appended) {
              goto LABEL_309;
            }
          }
          CFDictionarySetValue(v21, @"MediaDataControl", v71);
          int v61 = 1;
LABEL_138:
          CFArrayRef v8 = (_DWORD *)&unk_268402000;
          CFRelease(v71);
          goto LABEL_312;
        }
        int v79 = -6728;
      }
      else
      {
        int v79 = -6756;
      }
LABEL_305:
      APSLogErrorAt();
      unsigned int DataStreamSecurityKeys = v79;
      CFArrayRef v8 = (_DWORD *)&unk_268402000;
LABEL_306:
      int Int64 = key;
      int v29 = theDicta;
LABEL_307:
      APSLogErrorAt();
      goto LABEL_308;
    }
    APSLogErrorAt();
LABEL_290:
    int v21 = 0;
    CFNumberRef v76 = 0;
    int v77 = -6719;
    goto LABEL_291;
  }
  int v9 = 0;
  *(void *)int v129 = 0;
  while (1)
  {
    if (v9) {
      CFRelease(v9);
    }
    int v10 = RandomBytes();
    if (v10)
    {
      int v75 = v10;
      APSLogErrorAt();
      goto LABEL_160;
    }
    uint64_t v11 = CFNumberCreateInt64();
    if (!v11) {
      break;
    }
    int v9 = (const void *)v11;
  }
  APSLogErrorAt();
  int v75 = -6728;
LABEL_160:
  unsigned int DataStreamSecurityKeys = v75;
  APSLogErrorAt();
  int Int64 = 0;
  int v21 = 0;
  CFNumberRef v76 = 0;
LABEL_413:
  if (value) {
    CFRelease(value);
  }
  if (v76) {
    CFRelease(v76);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v21) {
    CFRelease(v21);
  }
  if (Int64) {
    CFRelease(Int64);
  }
  uint64_t result = DataStreamSecurityKeys;
  if (DataStreamSecurityKeys)
  {
    int v109 = v8[412];
    if (v109 <= 60)
    {
      if (v109 != -1 || (v110 = _LogCategory_Initialize(), uint64_t result = DataStreamSecurityKeys, v110))
      {
        LogPrintF();
        return DataStreamSecurityKeys;
      }
    }
  }
  return result;
}

uint64_t _GetDataStreamSecurityKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a1 + 488))
  {
    APSLogErrorAt();
    return 4294960587;
  }
  uint64_t v9 = (int)ASPrintF();
  if (a5)
  {
    uint64_t v10 = *(void *)(a1 + 488);
    uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = *(uint64_t (**)(uint64_t, void, uint64_t, const char *, uint64_t, uint64_t, uint64_t))(v12 + 24);
    if (!v13)
    {
      uint64_t v18 = 4294954514;
      goto LABEL_18;
    }
    uint64_t v14 = v13(v10, 0, v9, "DataStream-Output-Encryption-Key", 32, 32, a5);
    if (v14)
    {
      uint64_t v18 = v14;
      goto LABEL_18;
    }
  }
  if (!a4)
  {
    uint64_t v18 = 0;
    goto LABEL_19;
  }
  uint64_t v15 = *(void *)(a1 + 488);
  uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t, void, uint64_t, const char *, uint64_t, uint64_t, uint64_t))(v17 + 24);
  if (v19)
  {
    uint64_t v18 = v19(v15, 0, v9, "DataStream-Input-Encryption-Key", 31, a3, a4);
    if (!v18) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v18 = 4294954514;
  }
LABEL_18:
  APSLogErrorAt();
LABEL_19:
  int v20 = 0;
  if (v9)
  {
    do
    {
      *v20++ = 0;
      --v9;
    }
    while (v9);
  }
  return v18;
}

uint64_t _AddResponseStream(__CFDictionary *a1, const void *a2)
{
  CFArrayGetTypeID();
  TypedCFDictionaryRef Value = (__CFArray *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    CFArrayAppendValue(TypedValue, a2);
    return 0;
  }
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
  if (Mutable)
  {
    uint64_t v6 = Mutable;
    CFArrayAppendValue(Mutable, a2);
    CFDictionarySetValue(a1, @"streams", v6);
    CFRelease(v6);
    return 0;
  }
  APSLogErrorAt();
  return 4294960568;
}

uint64_t _ScreenStart(uint64_t a1)
{
  CFDictionaryRef theDict = 0;
  if (*(unsigned char *)(a1 + 632)) {
    return 0;
  }
  uint64_t v2 = *(void *)(*(void *)(a1 + 24) + 160);
  int v3 = *(_DWORD *)(a1 + 608);
  v22[0] = 0;
  v22[1] = v22;
  _OWORD v22[2] = 0x3010000000;
  v22[4] = 0;
  v22[5] = 0;
  _OWORD v22[3] = &unk_22B4C7D61;
  Float64 v4 = *(NSObject **)(v2 + 576);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __APReceiverSystemInfoGetDisplaySizeForUserVersion_block_invoke;
  block[3] = &unk_264895420;
  block[4] = v22;
  void block[5] = v2;
  int v21 = v3;
  dispatch_sync(v4, block);
  _Block_object_dispose(v22, 8);
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(void *)(a1 + 600))
  {
    CFDictionaryRef theDict = 0;
    goto LABEL_26;
  }
  if (*(unsigned char *)(a1 + 633)) {
    goto LABEL_26;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  CFDictionarySetNumber();
  uint64_t v6 = *(void *)(a1 + 600);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, CFDictionaryRef *))(v8 + 32);
  if (!v9)
  {
    uint64_t v10 = 4294954514;
LABEL_16:
    APSLogErrorAt();
    if (!Mutable) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v10 = v9(v6, Mutable, &theDict);
  if (v10) {
    goto LABEL_16;
  }
  *(unsigned char *)(a1 + 633) = 1;
  *(_DWORD *)(a1 + 636) = CFDictionaryGetInt64();
  if (Mutable) {
LABEL_17:
  }
    CFRelease(Mutable);
LABEL_18:
  if (v10)
  {
    if (gLogCategory_AirPlayReceiverCore <= 60
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APSLogErrorAt();
    uint64_t v11 = 0;
    goto LABEL_40;
  }
LABEL_26:
  uint64_t v11 = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!v11)
  {
    APSLogErrorAt();
    uint64_t v10 = 4294960568;
    goto LABEL_40;
  }
  if (theDict)
  {
    CFDictionaryRef Value = CFDictionaryGetValue(theDict, @"presentationLayer");
    if (Value) {
      CFDictionarySetValue(v11, @"PresentationLayer", Value);
    }
    int v13 = CFDictionaryGetValue(theDict, @"presentationContext");
    if (v13) {
      CFDictionarySetValue(v11, @"PresentationContext", v13);
    }
  }
  FigCFDictionarySetCGSize();
  uint64_t v14 = *(void *)(a1 + 616);
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = *(uint64_t (**)(uint64_t, __CFDictionary *))(v16 + 8);
  if (!v17)
  {
    uint64_t v10 = 4294954514;
    goto LABEL_39;
  }
  uint64_t v10 = v17(v14, v11);
  if (v10)
  {
LABEL_39:
    APSLogErrorAt();
    goto LABEL_40;
  }
  *(unsigned char *)(a1 + 632) = 1;
LABEL_40:
  if (theDict) {
    CFRelease(theDict);
  }
  if (v11) {
    CFRelease(v11);
  }
  if (v10)
  {
    if (gLogCategory_AirPlayReceiverCore <= 60
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _ScreenTearDown(a1);
  }
  return v10;
}

void AirPlayReceiverSessionTearDown(uint64_t a1, uint64_t a2, uint64_t a3, BOOL *a4)
{
  Float64 v4 = a4;
  if (!*(unsigned char *)(a1 + 441))
  {
    uint64_t v8 = &unk_268402000;
    int v9 = gLogCategory_AirPlayReceiverCore;
    if (gLogCategory_AirPlayReceiverCore <= 30)
    {
      if (gLogCategory_AirPlayReceiverCore != -1) {
        goto LABEL_4;
      }
      if (_LogCategory_Initialize())
      {
        int v9 = gLogCategory_AirPlayReceiverCore;
LABEL_4:
        if (v9 == -1) {
          _LogCategory_Initialize();
        }
        LogPrintF();
        if (!a2) {
          goto LABEL_61;
        }
LABEL_11:
        CFArrayGetTypeID();
        TypedCFDictionaryRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
        if (TypedValue)
        {
          CFIndex Count = CFArrayGetCount(TypedValue);
          if (Count >= 1)
          {
            CFStringRef v26 = v4;
            uint64_t v12 = 0;
            while (1)
            {
              CFDictionaryGetTypeID();
              CFDictionaryRef TypedValueAtIndex = (const __CFDictionary *)CFArrayGetTypedValueAtIndex();
              CFDictionaryRef Value = (void *)CFDictionaryGetValue(TypedValueAtIndex, @"streamID");
              int Int64 = CFDictionaryGetInt64();
              int v16 = v8[412];
              if (v16 <= 50 && (v16 != -1 || _LogCategory_Initialize())) {
                LogPrintF();
              }
              if (Int64 <= 109)
              {
                if (Int64 == 96 || Int64 == 103)
                {
                  if (!Value) {
                    CFDictionaryRef Value = (void *)CFNumberGetObject();
                  }
                  _AudioTearDownStream(a1, (uint64_t)TypedValueAtIndex, Value, a3);
                  goto LABEL_54;
                }
                goto LABEL_36;
              }
              if (Int64 != 110) {
                break;
              }
              _ScreenTearDown(a1);
LABEL_54:
              if (Count == ++v12)
              {
                CFIndex Count = 1;
                Float64 v4 = v26;
                if (!v26) {
                  return;
                }
LABEL_63:
                *Float64 v4 = Count == 0;
                return;
              }
            }
            if (Int64 != 120)
            {
              if (Int64 == 130)
              {
                if (CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 712), Value)) {
                  _PlaybackV2TearDown(a1, Value);
                }
                else {
                  _RemoteControlSessionTearDown(a1, Value);
                }
                goto LABEL_54;
              }
LABEL_36:
              int v22 = v8[412];
              if (v22 > 50 || v22 == -1 && !_LogCategory_Initialize()) {
                goto LABEL_54;
              }
LABEL_52:
              LogPrintF();
              goto LABEL_54;
            }
            if (!*(unsigned char *)(a1 + 441))
            {
              if (Value)
              {
                uint64_t v17 = CFGetInt64();
                if (v17)
                {
                  uint64_t v18 = a3;
                  uint64_t v19 = *(void *)(a1 + 24);
                  uint64_t v20 = *(void *)(a1 + 32);
                  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
                  uint64_t v27 = 0;
                  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
                    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  if (v19 && (uint64_t v23 = CFNumberCreateInt64()) != 0)
                  {
                    uint64_t v24 = (const void *)v23;
                    airplayReqProcessor_GetMCRPForMCSession(v20, v17, &v27);
                    if (v27 && !airplayReqProcessor_tearDownMediaControlRequestProcessor(v20, v27))
                    {
                      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 104), v24);
                      CFRelease(v24);
                      CFSetRemoveValue(*(CFMutableSetRef *)(a1 + 720), Value);
                      if (!CFSetGetCount(*(CFSetRef *)(a1 + 720))) {
                        _UpdateActiveSessionRegistration((uint64_t *)a1);
                      }
                      a3 = v18;
                      uint64_t v8 = &unk_268402000;
LABEL_50:
                      int v25 = v8[412];
                      if (v25 > 50 || v25 == -1 && !_LogCategory_Initialize()) {
                        goto LABEL_54;
                      }
                      goto LABEL_52;
                    }
                    APSLogErrorAt();
                    CFRelease(v24);
                  }
                  else
                  {
                    APSLogErrorAt();
                  }
                  a3 = v18;
                  APSLogErrorAt();
                  uint64_t v8 = (_DWORD *)&unk_268402000;
                  goto LABEL_50;
                }
              }
            }
            APSLogErrorAt();
            goto LABEL_50;
          }
LABEL_62:
          _Cleanup(a1, a3);
          if (!v4) {
            return;
          }
          goto LABEL_63;
        }
LABEL_61:
        CFIndex Count = 0;
        goto LABEL_62;
      }
    }
    if (!a2) {
      goto LABEL_61;
    }
    goto LABEL_11;
  }
  CFIndex Count = 0;
  if (a4) {
    goto LABEL_63;
  }
}

void _SendRemoteControlSessionOutgoingMessage(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2000000000;
  int v16 = 0;
  CFTypeRef v12 = 0;
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v7 + 48);
  if (!v8)
  {
    *((_DWORD *)v14 + 6) = -12782;
    goto LABEL_10;
  }
  int v9 = v8(a2, @"RRCS::Property::SessionID", *MEMORY[0x263EFFB08], &v12);
  *((_DWORD *)v14 + 6) = v9;
  if (v9)
  {
LABEL_10:
    APSLogErrorAt();
    goto LABEL_13;
  }
  if (gLogCategory_AirPlayReceiverCore <= 30
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  CFRetain(v12);
  CFRetain(a3);
  uint64_t v10 = a1[2];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = ___SendRemoteControlSessionOutgoingMessage_block_invoke;
  block[3] = &unk_264896630;
  block[4] = &v13;
  void block[5] = a1;
  void block[6] = v12;
  void block[7] = a3;
  dispatch_async(v10, block);
LABEL_13:
  if (v12) {
    CFRelease(v12);
  }
  _Block_object_dispose(&v13, 8);
}

void _HandleRemoteControlSessionFailed(void *a1, const void *a2, int a3)
{
  CFRetain(a1);
  CFRetain(a2);
  uint64_t v6 = a1[2];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = ___HandleRemoteControlSessionFailed_block_invoke;
  block[3] = &__block_descriptor_tmp_760;
  block[4] = a1;
  void block[5] = a2;
  int v8 = a3;
  dispatch_async(v6, block);
}

uint64_t _PlaybackV2TLSInfoRequestCallback(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 488);
  if (v3)
  {
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(uint64_t (**)(uint64_t, const char *, uint64_t, void, void, uint64_t, unsigned char *))(v6 + 24);
    if (v7)
    {
      uint64_t v3 = v7(v3, "Pair-TLS-PSK", 12, 0, 0, 16, v11);
      if (!v3)
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        CFDictionarySetData();
        __s[0] = 0;
        SockAddrToString();
        strlen(__s);
        CFDictionarySetData();
        *a3 = Mutable;
        return v3;
      }
    }
    else
    {
      uint64_t v3 = 4294954514;
    }
    APSLogErrorAt();
    if (gLogCategory_AirPlayReceiverCore <= 90
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return v3;
}

void _PlaybackV2EventCallback(void *a1, const void *a2, const void *a3)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  uint64_t v7 = Mutable;
  if (a3) {
    CFDictionarySetValue(Mutable, @"params", a3);
  }
  if (a2) {
    CFRetain(a2);
  }
  CFRetain(a1);
  int v8 = a1[2];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = ___PlaybackV2EventCallback_block_invoke;
  block[3] = &__block_descriptor_tmp_724;
  block[4] = a1;
  void block[5] = a2;
  void block[6] = v7;
  dispatch_async(v8, block);
}

void _ScreenHandleEvent(int a1, CFTypeRef cf1, uint64_t a3, void *a4)
{
  if (CFEqual(cf1, @"SessionTerminated"))
  {
    FigCFDictionaryGetInt32IfPresent();
    if (gLogCategory_AirPlayReceiverCore <= 30
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else if (CFEqual(cf1, @"ForceKeyFrameNeeded"))
  {
    if (gLogCategory_AirPlayReceiverCore <= 40
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a4);
    uint64_t v6 = a4[2];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = ___ScreenHandleEvent_block_invoke;
    block[3] = &__block_descriptor_tmp_629;
    block[4] = a4;
    dispatch_async(v6, block);
  }
}

uint64_t __APReceiverSBufConsumerStart_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 16);
  if (v5) {
    uint64_t result = v5(v2);
  }
  else {
    uint64_t result = 4294954514;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void _PerformPeriodTasks(uint64_t a1)
{
  uint64_t v2 = mach_absolute_time();
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 500);
  if (v4 == *(_DWORD *)(a1 + 504))
  {
    unint64_t v5 = v2 - *(void *)(a1 + 512);
    if (v5 >= 60 * UpTicksPerSecond())
    {
      int v6 = 2;
    }
    else
    {
      if (v5 < 10 * UpTicksPerSecond())
      {
LABEL_10:
        if (v3 - *(void *)(a1 + 528) > *(void *)(a1 + 544))
        {
          UpTicksPerSecond();
          if (gLogCategory_AirPlayReceiverCore <= 40
            && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *(void *)(a1 + 528) = v3;
          if (IsAppleInternalBuild())
          {
            uint64_t v7 = (const void *)CFStringCreateF();
            AirPlayReceiverServerPlatformControl(*(void *)(a1 + 24), @"triggerStackShot", v7, 0);
            if (v7) {
              CFRelease(v7);
            }
          }
        }
        if (v5 > *(void *)(a1 + 520))
        {
          if (gLogCategory_AirPlayReceiverCore <= 90
            && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          _AirPlayReceiverSession_Terminate(a1);
        }
        return;
      }
      int v6 = 1;
    }
    _ReportSessionStallIfNeeded(a1, v6);
    goto LABEL_10;
  }
  *(_DWORD *)(a1 + 504) = v4;
  *(void *)(a1 + 512) = v2;
  *(void *)(a1 + 528) = v2;

  _ReportSessionStallIfNeeded(a1, 0);
}

void _HandleEventConnectionInvalidated(int a1, NSObject **cf)
{
  if (cf)
  {
    CFRetain(cf);
    int v4 = cf[2];
    v5[0] = MEMORY[0x263EF8330];
    v5[1] = 0x40000000;
    v5[2] = ___HandleEventConnectionInvalidated_block_invoke;
    v5[3] = &__block_descriptor_tmp_391;
    v5[4] = cf;
    int v6 = a1;
    dispatch_async(v4, v5);
    CFRelease(cf);
  }
  else if (gLogCategory_AirPlayReceiverCore <= 50 {
         && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
}

uint64_t AirPlayReceiverSessionFlushAudio(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, _OWORD *a5)
{
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  uint64_t v5 = *(void *)(a1 + 576);
  if (!v5)
  {
    APSLogErrorAt();
    return 4294960578;
  }
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, _OWORD *))(v5 + 88);
  if (!v6)
  {
    uint64_t v8 = 4294954514;
LABEL_7:
    APSLogErrorAt();
    return v8;
  }
  uint64_t v7 = *(void *)(v5 + 40);
  v11[0] = *a3;
  *(_OWORD *)((char *)v11 + 12) = *(_OWORD *)((char *)a3 + 12);
  v10[0] = *a5;
  *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)((char *)a5 + 12);
  uint64_t v8 = v6(v7, a2, v11, a4, v10);
  if (v8) {
    goto LABEL_7;
  }
  return v8;
}

uint64_t _AddVolumeOrMuteRequest(uint64_t a1, void *value)
{
  if (!value)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  CFMutableDictionaryRef Mutable = *(__CFArray **)(a1 + 680);
  if (!Mutable)
  {
    CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    *(void *)(a1 + 680) = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      return 4294960568;
    }
  }
  CFArrayAppendValue(Mutable, value);
  if (gLogCategory_AirPlayReceiverCore > 50) {
    return 0;
  }
  if (gLogCategory_AirPlayReceiverCore != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t AirPlayReceiverSessionAddMuteRequest(uint64_t a1, int a2)
{
  char v2 = a2;
  int v4 = (void **)MEMORY[0x263EFFB40];
  if (!a2) {
    int v4 = (void **)MEMORY[0x263EFFB38];
  }
  uint64_t v5 = _AddVolumeOrMuteRequest(a1, *v4);
  if (v5) {
    APSLogErrorAt();
  }
  else {
    *(unsigned char *)(a1 + 692) = v2;
  }
  return v5;
}

uint64_t __AirPlayReceiverSessionRemoveVolumeRequest_block_invoke(int a1, CFTypeRef cf)
{
  int valuePtr = 0;
  if (!cf) {
    return 0;
  }
  CFTypeID v3 = CFGetTypeID(cf);
  if (v3 != CFNumberGetTypeID()) {
    return 0;
  }
  CFNumberGetValue((CFNumberRef)cf, kCFNumberFloatType, &valuePtr);
  if (APSVolumeSliderValuesAreNoticeablyDifferent()) {
    return 0;
  }
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 1;
}

uint64_t _RemoveVolumeOrMuteRequest(uint64_t a1, uint64_t a2)
{
  CFArrayRef v3 = *(const __CFArray **)(a1 + 680);
  if (!v3) {
    return 4294960569;
  }
  CFIndex Count = CFArrayGetCount(v3);
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Count < 1) {
    return 4294960569;
  }
  CFIndex v6 = 0;
  while (1)
  {
    ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 680), v6);
    if ((*(unsigned int (**)(uint64_t, const void *))(a2 + 16))(a2, ValueAtIndex)) {
      break;
    }
    if (Count == ++v6) {
      return 4294960569;
    }
  }
  CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 680), v6);
  return 0;
}

uint64_t __AirPlayReceiverSessionRemoveMuteRequest_block_invoke(uint64_t a1, CFTypeRef cf)
{
  if (!cf) {
    return 0;
  }
  CFTypeID v4 = CFGetTypeID(cf);
  if (v4 != CFBooleanGetTypeID() || *(unsigned char *)(a1 + 40) != (*MEMORY[0x263EFFB40] == (void)cf)) {
    return 0;
  }
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 1;
}

void AirPlayReceiverSessionHandleVolumeUpdate(uint64_t a1)
{
  CFDictionaryGetDouble();
  double v3 = v2;
  uint64_t Int64 = CFDictionaryGetInt64();
  int v5 = Int64 != 0;
  uint64_t v6 = CFDictionaryGetInt64();
  if (!*(unsigned char *)(a1 + 441))
  {
    float v7 = v3;
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 0x40000000;
    if (v6)
    {
      uint64_t v13 = (uint64_t (*)(uint64_t, CFTypeRef))__AirPlayReceiverSessionRemoveVolumeRequest_block_invoke;
      uint64_t v14 = &__block_descriptor_tmp_6786;
      float v16 = v7;
    }
    else
    {
      uint64_t v13 = __AirPlayReceiverSessionRemoveMuteRequest_block_invoke;
      uint64_t v14 = &__block_descriptor_tmp_233;
      LOBYTE(v16) = Int64 != 0;
    }
    uint64_t v15 = a1;
    if (_RemoveVolumeOrMuteRequest(a1, (uint64_t)v12))
    {
      if (!APSVolumeSliderValuesAreNoticeablyDifferent() && *(unsigned __int8 *)(a1 + 692) == v5)
      {
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return;
      }
      unsigned int Int64Ranged = CFObjectGetInt64Ranged();
      if (gLogCategory_AirPlayReceiverCore <= 50
        && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!Mutable)
      {
        APSLogErrorAt();
        return;
      }
      uint64_t v10 = Mutable;
      CFDictionarySetDouble();
      if (*(unsigned char *)(a1 + 730))
      {
        uint64_t v11 = (const void **)MEMORY[0x263EFFB40];
        if (!Int64) {
          uint64_t v11 = (const void **)MEMORY[0x263EFFB38];
        }
        CFDictionarySetValue(v10, @"isMuted", *v11);
      }
      if (Int64Ranged > 0x36193D)
      {
        if (!AirPlayReceiverSessionSendMediaRemoteCommand((void *)a1, -1, 1685482595, v10))
        {
          if (gLogCategory_AirPlayReceiverCore > 50
            || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_32;
          }
LABEL_28:
          LogPrintF();
LABEL_32:
          *(float *)(a1 + 688) = v7;
          *(unsigned char *)(a1 + 692) = v5;
LABEL_33:
          CFRelease(v10);
          return;
        }
      }
      else if (!AirPlayReceiverServerSendDACPCommands())
      {
        if (gLogCategory_AirPlayReceiverCore > 50
          || gLogCategory_AirPlayReceiverCore == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_32;
        }
        goto LABEL_28;
      }
      APSLogErrorAt();
      goto LABEL_33;
    }
  }
}

uint64_t APReceiverRequestProcessorCopyProperty_6807(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  if (!v8) {
    return 0;
  }

  return v8(a1, a2, a3);
}

uint64_t APNetworkClockNTPClientLegacyCreate(uint64_t a1, int a2, int a3, uint64_t a4, int a5, void *a6)
{
  APSNetworkClockGetClassID();
  uint64_t v10 = CMDerivedObjectCreate();
  if (v10)
  {
    uint64_t v26 = v10;
LABEL_57:
    APSLogErrorAt();
    return v26;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(DerivedStorage + 24) = 0;
  uint64_t v12 = FigSimpleMutexCreate();
  *(void *)uint64_t DerivedStorage = v12;
  if (!v12)
  {
    APSLogErrorAt();
    return 4294895326;
  }
  pthread_once(&gAirTunesRegisterClassOnce, (void (*)(void))_AirTunesClock_RegisterClass);
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    uint64_t v26 = 4294960568;
    goto LABEL_57;
  }
  uint64_t v14 = Instance;
  *(_DWORD *)(Instance + 16) = 0;
  *(void *)(Instance + 24) = 0;
  *(_DWORD *)(Instance + 32) = 0;
  *(void *)(Instance + 40) = 0;
  *(_DWORD *)(Instance + 48) = 0;
  *(void *)(Instance + 56) = 0;
  unint64_t v15 = UpTicksPerSecond();
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = 0xFFFFFFFFFFFFFFFFLL / v15;
  *(_DWORD *)(v14 + 80) = 0;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_OWORD *)(v14 + 104) = 0u;
  *(void *)(v14 + 120) = 0;
  *(_DWORD *)(v14 + 128) = 1;
  uint64_t v16 = pthread_mutex_init((pthread_mutex_t *)(v14 + 152), 0);
  if (v16)
  {
    uint64_t v26 = v16;
LABEL_45:
    APSLogErrorAt();
    CFRelease((CFTypeRef)v14);
    goto LABEL_57;
  }
  *(void *)(v14 + 216) = v14 + 152;
  *(unsigned char *)(v14 + 224) = 1;
  uint64_t v17 = pthread_create((pthread_t *)(v14 + 136), 0, (void *(__cdecl *)(void *))_AirTunesClock_Thread, (void *)v14);
  if (v17)
  {
    uint64_t v26 = v17;
    goto LABEL_45;
  }
  *(void *)(v14 + 144) = v14 + 136;
  if (gLogCategory_AirTunesClock <= 10 && (gLogCategory_AirTunesClock != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  *(void *)(DerivedStorage + 16) = v14;
  if (gLogCategory_APReceiverNTPClient <= 30
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (gAPReceiverNTPClientInitOnce != -1) {
    dispatch_once_f(&gAPReceiverNTPClientInitOnce, 0, (dispatch_function_t)_APReceiverNTPClientGetTypeID);
  }
  memset(v32, 0, 28);
  uint64_t v18 = (_OWORD *)_CFRuntimeCreateInstance();
  uint64_t v19 = v18;
  if (!v18)
  {
    APSLogErrorAt();
    uint64_t v26 = 4294960568;
    goto LABEL_51;
  }
  v18[19] = 0u;
  v18[20] = 0u;
  v18[17] = 0u;
  v18[18] = 0u;
  v18[15] = 0u;
  v18[16] = 0u;
  v18[13] = 0u;
  v18[14] = 0u;
  v18[11] = 0u;
  v18[12] = 0u;
  v18[9] = 0u;
  v18[10] = 0u;
  v18[7] = 0u;
  v18[8] = 0u;
  v18[5] = 0u;
  void v18[6] = 0u;
  void v18[3] = 0u;
  v18[4] = 0u;
  v18[1] = 0u;
  _OWORD v18[2] = 0u;
  CFTypeRef v20 = CFRetain((CFTypeRef)v14);
  *((void *)v19 + 2) = v20;
  if (v20)
  {
    CFTypeID v21 = CFGetTypeID(v20);
    pthread_once(&gAirTunesRegisterClassOnce, (void (*)(void))_AirTunesClock_RegisterClass);
    if (v21 != gAirTunesClockTypeID)
    {
      uint64_t v26 = 4294895155;
      goto LABEL_50;
    }
  }
  SockAddrCopy();
  uint64_t v22 = ServerSocketOpen();
  if (v22)
  {
    uint64_t v26 = v22;
LABEL_50:
    APSLogErrorAt();
LABEL_51:
    if (gLogCategory_APReceiverNTPClient <= 60
      && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v19) {
      CFRelease(v19);
    }
    goto LABEL_57;
  }
  if (a3) {
    SocketSetP2P();
  }
  SocketSetPacketTimestamps();
  if (!a2) {
    SocketSetQoS();
  }
  *((_DWORD *)v19 + 8) = a5;
  SockAddrSetPort();
  *(sockaddr *)((char *)v19 + 36) = v32[0];
  v19[3] = *(_OWORD *)&v32[0].sa_data[10];
  socklen_t Size = SockAddrGetSize();
  *((_DWORD *)v19 + 16) = Size;
  if (!connect(*((_DWORD *)v19 + 6), v32, Size)) {
    goto LABEL_28;
  }
  int v24 = *__error();
  if (!v24) {
    goto LABEL_33;
  }
  if (*__error())
  {
    LOBYTE(v24) = 0;
  }
  else
  {
LABEL_28:
    *(void *)&v29.sa_len = 0;
    *(void *)&v29.sa_data[6] = 0;
    int v31 = 0;
    uint64_t v30 = 0;
    socklen_t v28 = 28;
    getsockname(*((_DWORD *)v19 + 6), &v29, &v28);
    if (gLogCategory_APReceiverNTPClient <= 50
      && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    LOBYTE(v24) = 1;
  }
LABEL_33:
  *((unsigned char *)v19 + 68) = v24;
  uint64_t v25 = OpenSelfConnectedLoopbackSocket();
  if (v25)
  {
    uint64_t v26 = v25;
    goto LABEL_50;
  }
  if (gLogCategory_APReceiverNTPClient <= 30
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v26 = 0;
  *(void *)(DerivedStorage + 8) = v19;
  *a6 = 0;
  return v26;
}

uint64_t ntpClientLegacy_ClearLocalPeerInfo()
{
  return 0;
}

uint64_t ntpClientLegacy_StopForClient()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)DerivedStorage);
  if (*(unsigned char *)(DerivedStorage + 24))
  {
    *(unsigned char *)(DerivedStorage + 24) = 0;
    uint64_t v1 = APReceiverNTPClientStop(*(void *)(DerivedStorage + 8));
    if (v1)
    {
      uint64_t v2 = v1;
      APSLogErrorAt();
      goto LABEL_8;
    }
    if (gLogCategory_APNetworkClockNTPClientLegacy <= 50
      && (gLogCategory_APNetworkClockNTPClientLegacy != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v2 = 0;
LABEL_8:
  pthread_mutex_unlock(*(pthread_mutex_t **)DerivedStorage);
  return v2;
}

uint64_t ntpClientLegacy_StartForClient()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)DerivedStorage);
  if (*(unsigned char *)(DerivedStorage + 24))
  {
LABEL_79:
    uint64_t v8 = 0;
    goto LABEL_67;
  }
  uint64_t v1 = *(void *)(DerivedStorage + 8);
  unint64_t v2 = *(int *)(v1 + 24);
  v21.tv_sec = 0;
  *(void *)&v21.tv_usec = 0;
  if (!*(void *)(v1 + 88))
  {
    int v17 = 0;
    uint64_t v18 = DerivedStorage;
    uint64_t v3 = 0;
    int v15 = 0;
    int v16 = 0;
    int v4 = 0;
    int v5 = 0;
    memset(&v22, 0, sizeof(v22));
    while (2)
    {
      int v19 = v5;
      uint64_t v20 = v3;
      int v6 = 64;
      while (1)
      {
        uint64_t v7 = ntpClient_sendRequest(v1);
        if (!v7) {
          break;
        }
        uint64_t v8 = v7;
        if (gLogCategory_APReceiverNTPClient <= 60
          && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        usleep(0x186A0u);
        if (v8 != v4)
        {
          int v4 = v8;
          if (gLogCategory_APReceiverNTPClient <= 50)
          {
            if (gLogCategory_APReceiverNTPClient != -1 || (int v4 = v8, _LogCategory_Initialize()))
            {
              LogPrintF();
              int v4 = v8;
            }
          }
        }
        if (!--v6)
        {
          if (gLogCategory_APReceiverNTPClient > 90)
          {
LABEL_65:
            uint64_t DerivedStorage = v18;
          }
          else
          {
            uint64_t DerivedStorage = v18;
            if (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()) {
              LogPrintF();
            }
          }
          goto LABEL_66;
        }
      }
      while (1)
      {
        if (__darwin_check_fd_set_overflow(v2, &v22, 0)) {
          v22.fds_bits[v2 >> 5] |= 1 << v2;
        }
        v21.tv_sec = 0;
        v21.tv_usec = 500000;
        int v9 = select(v2 + 1, &v22, 0, 0, &v21);
        if (v9 > 0) {
          break;
        }
        if (v9)
        {
          if (*__error())
          {
            int v10 = *__error();
            if (!v10) {
              break;
            }
          }
          else
          {
            int v10 = -6700;
          }
        }
        else
        {
          int v10 = -6722;
        }
        if (gLogCategory_APReceiverNTPClient <= 60
          && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (v10 != 4)
        {
          ++v17;
          uint64_t v3 = (v20 + 1);
          if (v10 == v19)
          {
            int v10 = v19;
          }
          else if (gLogCategory_APReceiverNTPClient <= 50 {
                 && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
          }
          {
            LogPrintF();
          }
          goto LABEL_55;
        }
      }
      uint64_t v11 = ntpClient_receiveResponse();
      if (v11)
      {
        uint64_t v8 = v11;
        if (v11 == 61) {
          goto LABEL_65;
        }
        if (gLogCategory_APReceiverNTPClient <= 60
          && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        int v12 = v19;
        if (v8 != v19)
        {
          if (gLogCategory_APReceiverNTPClient <= 50
            && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v12 = v8;
        }
        ++v16;
        uint64_t v3 = (v20 + 1);
        if (v8 == -6730)
        {
          int v10 = v12;
          DrainUDPSocket();
        }
        else
        {
          int v10 = v12;
        }
        goto LABEL_55;
      }
      uint64_t v3 = v20;
      if (v15 <= 1)
      {
        ++v15;
        int v10 = v19;
LABEL_55:
        int v5 = v10;
        if ((int)v3 < 64) {
          continue;
        }
        if (gLogCategory_APReceiverNTPClient > 90)
        {
          uint64_t v8 = 4294960574;
          goto LABEL_65;
        }
        uint64_t DerivedStorage = v18;
        if (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        uint64_t v8 = 4294960574;
        goto LABEL_66;
      }
      break;
    }
    uint64_t v14 = pthread_create((pthread_t *)(v1 + 80), 0, (void *(__cdecl *)(void *))ntpClient_thread, (void *)v1);
    if (v14)
    {
      uint64_t v8 = v14;
      APSLogErrorAt();
      goto LABEL_65;
    }
    *(void *)(v1 + 88) = v1 + 80;
    uint64_t DerivedStorage = v18;
    if (gLogCategory_APReceiverNTPClient <= 30
      && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(v18 + 24) = 1;
    if (gLogCategory_APNetworkClockNTPClientLegacy <= 50
      && (gLogCategory_APNetworkClockNTPClientLegacy != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_79;
  }
  APSLogErrorAt();
  uint64_t v8 = 4294895154;
LABEL_66:
  APSLogErrorAt();
LABEL_67:
  pthread_mutex_unlock(*(pthread_mutex_t **)DerivedStorage);
  return v8;
}

uint64_t ntpClientLegacy_SetOrUpdateLocalPeerInfo()
{
  return 0;
}

uint64_t ntpClientLegacy_CopySerializableInitialPeerList()
{
  return 0;
}

uint64_t ntpClientLegacy_CopySerializablePeerListForPeer()
{
  return 0;
}

uint64_t ntpClientLegacy_SetPeers()
{
  return 0;
}

uint64_t ntpClientLegacy_RemovePeer()
{
  return 0;
}

uint64_t ntpClientLegacy_AddOrUpdatePeer()
{
  return 0;
}

uint64_t ntpClientLegacy_ConvertNetworkTimeToUpTicks(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)DerivedStorage);
  if (*(unsigned char *)(DerivedStorage + 24))
  {
    *((void *)&v7 + 1) = *(unsigned int *)(a2 + 16);
    *(void *)&long long v7 = *(void *)(a2 + 8);
    unint64_t v6 = v7 >> 32;
    uint64_t v8 = *(void *)(DerivedStorage + 16);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    AirTunesClock_GetSynchronizedTime(v8, (int *)&v13);
    *((void *)&v7 + 1) = v13;
    *(void *)&long long v7 = v14;
    uint64_t v9 = mach_absolute_time();
    if ((unint64_t)(v7 >> 32) <= v6) {
      uint64_t v10 = NTPtoUpTicks() + v9;
    }
    else {
      uint64_t v10 = v9 - NTPtoUpTicks();
    }
    uint64_t v11 = 0;
    *a3 = v10;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v11 = 4294895323;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)DerivedStorage);
  return v11;
}

uint64_t ntpClientLegacy_ConvertUpTicksToNetworkTime(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)DerivedStorage);
  if (*(unsigned char *)(DerivedStorage + 24))
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    AirTunesClock_GetSynchronizedTimeNearUpTicks(*(void *)(DerivedStorage + 16), (int *)&v10, a2);
    uint64_t v6 = 0;
    *((void *)&v8 + 1) = v10;
    *(void *)&long long v8 = v11;
    uint64_t v7 = v8 >> 32;
    *a3 = 0;
    a3[1] = v7 << 32;
    a3[2] = HIDWORD(v7);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v6 = 4294895323;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)DerivedStorage);
  return v6;
}

uint64_t ntpClientLegacy_GetSynchronizedNetworkTime(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)DerivedStorage);
  if (*(unsigned char *)(DerivedStorage + 24))
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    AirTunesClock_GetSynchronizedTime(*(void *)(DerivedStorage + 16), (int *)&v8);
    uint64_t v4 = 0;
    *((void *)&v6 + 1) = v8;
    *(void *)&long long v6 = v9;
    uint64_t v5 = v6 >> 32;
    *a2 = 0;
    a2[1] = v5 << 32;
    a2[2] = HIDWORD(v5);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v4 = 4294895323;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)DerivedStorage);
  return v4;
}

uint64_t ntpClientLegacy_SetProperty()
{
  return 4294954509;
}

uint64_t ntpClientLegacy_CopyProperty(int a1, CFTypeRef cf1, uint64_t a3, CFTypeRef *a4)
{
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F24A60]))
  {
    long long v6 = (CFTypeRef *)MEMORY[0x263F24A68];
  }
  else
  {
    if (!CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F24A58]))
    {
      uint64_t v7 = 4294954509;
      APSLogErrorAt();
      return v7;
    }
    long long v6 = (CFTypeRef *)MEMORY[0x263EFFB40];
  }
  uint64_t v7 = 0;
  *a4 = CFRetain(*v6);
  return v7;
}

__CFString *ntpClientLegacy_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  CFStringAppendFormat(Mutable, 0, @"<APNTPClientLegacy %p>", a1);
  return Mutable;
}

uint64_t ntpClientLegacy_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = (const void *)DerivedStorage[1];
  if (v1)
  {
    CFRelease(v1);
    DerivedStorage[1] = 0;
  }
  unint64_t v2 = (const void *)DerivedStorage[2];
  if (v2)
  {
    CFRelease(v2);
    DerivedStorage[2] = 0;
  }
  uint64_t result = FigSimpleMutexDestroy();
  *uint64_t DerivedStorage = 0;
  return result;
}

uint64_t APPairingServicesCoreUtilsCreate(uint64_t a1, void *a2)
{
  if (APPairingServicesGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APPairingServicesGetClassID_sRegisterOnce, &APPairingServicesGetClassID_sClassID, (dispatch_function_t)pairingServices_registerBaseClass);
  }
  uint64_t v3 = CMDerivedObjectCreate();
  if (v3)
  {
    APSLogErrorAt();
  }
  else
  {
    if (gLogCategory_APPairingServicesCoreUtils <= 50
      && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *a2 = 0;
  }
  return v3;
}

uint64_t coreUtilsPairing_Reset()
{
  return 0;
}

void coreUtilsPairing_resetInternal()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APPairingServicesCoreUtils <= 50
    && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
  unint64_t v2 = *(const void **)(DerivedStorage + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 24);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 24) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 32);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 32) = 0;
  }
}

uint64_t coreUtilsPairing_SupportsChaChaEncryption()
{
  return 1;
}

uint64_t coreUtilsPairing_DeriveKey()
{
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 8))
  {
    uint64_t v0 = PairingSessionDeriveKey();
    if (v0) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895104;
  }
  return v0;
}

uint64_t coreUtilsPairing_HandleVerify(int a1, CFDataRef theData, void *a3, unsigned char *a4)
{
  CFDataGetBytePtr(theData);
  CFDataGetLength(theData);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    uint64_t v8 = DerivedStorage;
    *a3 = 0;
    if (*(void *)(DerivedStorage + 8))
    {
LABEL_27:
      uint64_t v11 = PairingSessionExchange();
      if (!v11)
      {
        if (*a4
          && gLogCategory_APPairingServicesCoreUtils <= 50
          && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
      uint64_t v12 = v11;
      goto LABEL_38;
    }
    uint64_t v9 = PairingSessionCreate();
    if (v9)
    {
      uint64_t v12 = v9;
LABEL_38:
      APSLogErrorAt();
      goto LABEL_39;
    }
    if (gLogCategory_APPairingServicesCoreUtils <= 40
      && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(unsigned char *)(v8 + 40))
    {
      PairingSessionSetSignBytesHandler_b();
      PairingSessionSetVerifySignatureHandler_b();
    }
    else if (!*(unsigned char *)(v8 + 41))
    {
      char v10 = 0;
      if (!*(unsigned char *)(v8 + 42))
      {
LABEL_18:
        if (*(void *)(v8 + 48))
        {
          if (gLogCategory_APPairingServicesCoreUtils <= 50
            && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          PairingSessionSetACL();
        }
        if ((v10 & 1) == 0) {
          PairingSessionSetKeychainInfo();
        }
        PairingSessionSetLogging();
        goto LABEL_27;
      }
LABEL_12:
      PairingSessionSetFlags();
      if (gLogCategory_APPairingServicesCoreUtils <= 40
        && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_18;
    }
    char v10 = 1;
    goto LABEL_12;
  }
  APSLogErrorAt();
  uint64_t v12 = 4294895105;
LABEL_39:
  if (gLogCategory_APPairingServicesCoreUtils <= 90
    && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v12;
}

uint64_t coreUtilsPairing_HandleSetup(int a1, const __CFString *a2, int a3, CFDataRef theData, void *a5, unsigned char *a6)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  CFDataGetBytePtr(theData);
  CFDataGetLength(theData);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  *(_OWORD *)buffer = 0u;
  long long v22 = 0u;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v12 = DerivedStorage;
  if (!a5)
  {
    uint64_t v19 = 4294895105;
LABEL_49:
    APSLogErrorAt();
    goto LABEL_50;
  }
  *a5 = 0;
  if (!*(void *)DerivedStorage)
  {
    if (*(unsigned char *)(DerivedStorage + 42)) {
      int v13 = 12;
    }
    else {
      int v13 = 0;
    }
    if (a3) {
      int v14 = 16;
    }
    else {
      int v14 = 134217744;
    }
    if (*(unsigned char *)(DerivedStorage + 43)) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    uint64_t v16 = PairingSessionCreate();
    if (v16)
    {
      uint64_t v19 = v16;
      goto LABEL_49;
    }
    if (gLogCategory_APPairingServicesCoreUtils <= 40
      && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v15 | v13)
    {
      PairingSessionSetFlags();
      if (gLogCategory_APPairingServicesCoreUtils <= 40
        && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    if (*(void *)(v12 + 48))
    {
      if (gLogCategory_APPairingServicesCoreUtils <= 50
        && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      PairingSessionSetACL();
    }
    PairingSessionSetKeychainInfo();
    PairingSessionSetLogging();
  }
  CFStringGetCString(a2, buffer, 128, 0x8000100u);
  if (!buffer[0])
  {
    uint64_t v19 = 4294895105;
    goto LABEL_49;
  }
  if (!PairingSessionSetSetupCode())
  {
    uint64_t v17 = PairingSessionExchange();
    if (!v17)
    {
      if (*a6)
      {
        if (*(unsigned char *)(v12 + 43))
        {
          CFTypeRef v18 = *(CFTypeRef *)v12;
          *(void *)(v12 + 8) = *(void *)v12;
          if (v18) {
            CFRetain(v18);
          }
        }
        if (gLogCategory_APPairingServicesCoreUtils <= 50
          && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (*(void *)v12)
        {
          CFRelease(*(CFTypeRef *)v12);
          *(void *)uint64_t v12 = 0;
        }
      }
      return 0;
    }
    uint64_t v19 = v17;
    goto LABEL_49;
  }
  APSLogErrorAt();
  uint64_t v19 = 4294895102;
LABEL_50:
  if (gLogCategory_APPairingServicesCoreUtils <= 90
    && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v19;
}

uint64_t coreUtilsPairing_SetProperty(uint64_t a1, const void *a2, const __CFDictionary *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v14 = 4294895105;
LABEL_21:
    APSLogErrorAt();
    return v14;
  }
  uint64_t v6 = DerivedStorage;
  if (!CFEqual(a2, @"pairingParams")) {
    return 4294954512;
  }
  if (!a3)
  {
    uint64_t v14 = 4294895105;
    goto LABEL_21;
  }
  int v7 = CFDictionaryGetInt64() != 0;
  int v8 = CFDictionaryGetInt64() != 0;
  int v9 = CFDictionaryGetInt64() != 0;
  int v10 = CFDictionaryGetInt64() != 0;
  CFDictionaryRef Value = CFDictionaryGetValue(a3, @"ACL");
  if (*(unsigned __int8 *)(v6 + 40) != v7
    || *(unsigned __int8 *)(v6 + 41) != v8
    || *(unsigned __int8 *)(v6 + 42) != v9
    || *(unsigned __int8 *)(v6 + 43) != v10
    || (uint64_t v12 = *(const void **)(v6 + 48), v12 != Value) && (!v12 || !Value || !CFEqual(v12, Value)))
  {
    CMBaseObjectGetDerivedStorage();
    coreUtilsPairing_resetInternal();
    *(unsigned char *)(v6 + 40) = v7;
    *(unsigned char *)(v6 + 41) = v8;
    *(unsigned char *)(v6 + 42) = v9;
    *(unsigned char *)(v6 + 43) = v10;
    int v13 = *(const void **)(v6 + 48);
    *(void *)(v6 + 48) = Value;
    if (Value) {
      CFRetain(Value);
    }
    if (v13) {
      CFRelease(v13);
    }
  }
  return 0;
}

__CFString *coreUtilsPairing_CopyDebugDescription()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  CFStringAppendFormat(Mutable, 0, @"<APPairingServicesCoreUtils '%@'>", *DerivedStorage);
  return Mutable;
}

void coreUtilsPairing_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  coreUtilsPairing_resetInternal();
  uint64_t v1 = *(const void **)(DerivedStorage + 48);
  if (v1) {
    CFRelease(v1);
  }
  if (gLogCategory_APPairingServicesCoreUtils <= 50
    && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t APPairingServicesCoreUtilsHandleAddPeer(int a1, const __CFData *a2, void *a3, unsigned char *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = coreUtilsPairing_handleAdminRequest(a1, 10, (CFTypeRef *)(DerivedStorage + 16), a2, a3, a4);
  if (v9) {
    APSLogErrorAt();
  }
  return v9;
}

uint64_t coreUtilsPairing_handleAdminRequest(int a1, int a2, CFTypeRef *a3, CFDataRef theData, void *a5, unsigned char *a6)
{
  CFDataGetBytePtr(theData);
  CFDataGetLength(theData);
  CMBaseObjectGetDerivedStorage();
  if (!a5)
  {
    APSLogErrorAt();
    return 4294895105;
  }
  *a5 = 0;
  if (!*a3)
  {
    uint64_t v10 = PairingSessionCreate();
    if (v10)
    {
      uint64_t v12 = v10;
      goto LABEL_18;
    }
    PairingSessionSetLogging();
  }
  uint64_t v11 = PairingSessionExchange();
  if (v11)
  {
    uint64_t v12 = v11;
LABEL_18:
    APSLogErrorAt();
    return v12;
  }
  if (*a6)
  {
    if (*a3)
    {
      CFRelease(*a3);
      *a3 = 0;
    }
    if (gLogCategory_APPairingServicesCoreUtils <= 50
      && (gLogCategory_APPairingServicesCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return 0;
}

uint64_t APPairingServicesCoreUtilsHandleRemovePeer(int a1, const __CFData *a2, void *a3, unsigned char *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = coreUtilsPairing_handleAdminRequest(a1, 12, (CFTypeRef *)(DerivedStorage + 24), a2, a3, a4);
  if (v9) {
    APSLogErrorAt();
  }
  return v9;
}

uint64_t APPairingServicesCoreUtilsHandleListPeers(int a1, const __CFData *a2, void *a3, unsigned char *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = coreUtilsPairing_handleAdminRequest(a1, 14, (CFTypeRef *)(DerivedStorage + 32), a2, a3, a4);
  if (v9) {
    APSLogErrorAt();
  }
  return v9;
}

uint64_t APPairingServicesLegacyCreate(uint64_t a1, void *a2)
{
  if (APPairingServicesGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APPairingServicesGetClassID_sRegisterOnce, &APPairingServicesGetClassID_sClassID, (dispatch_function_t)pairingServices_registerBaseClass);
  }
  uint64_t v3 = CMDerivedObjectCreate();
  if (v3)
  {
    APSLogErrorAt();
  }
  else
  {
    if (gLogCategory_APPairingServicesLegacy <= 50
      && (gLogCategory_APPairingServicesLegacy != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *a2 = 0;
  }
  return v3;
}

uint64_t legacyPairing_Reset()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
  return 0;
}

uint64_t legacyPairing_SupportsChaChaEncryption()
{
  return 0;
}

uint64_t legacyPairing_DeriveKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!*(void *)(CMBaseObjectGetDerivedStorage() + 8))
  {
    uint64_t v7 = 4294895104;
    goto LABEL_7;
  }
  if (a6 != 16)
  {
    APSLogErrorAt();
    return 4294895105;
  }
  uint64_t v7 = PCFdAVst();
  if (v7) {
LABEL_7:
  }
    APSLogErrorAt();
  return v7;
}

uint64_t legacyPairing_HandleVerify(int a1, CFDataRef theData, void *a3)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  CFDataGetBytePtr(theData);
  CFDataGetLength(theData);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a3)
  {
    APSLogErrorAt();
    return 4294895105;
  }
  *a3 = 0;
  if (!*(void *)(DerivedStorage + 8) && gQblcfSzZBQsYCCV())
  {
    uint64_t v7 = 4294895104;
    goto LABEL_10;
  }
  uint64_t v6 = VBAEFt();
  if (v6)
  {
    uint64_t v7 = v6;
LABEL_10:
    APSLogErrorAt();
    return v7;
  }
  return 0;
}

uint64_t legacyPairing_HandleSetup(int a1, uint64_t a2, int a3, CFDataRef theData, void *a5)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  CFDataGetBytePtr(theData);
  CFDataGetLength(theData);
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (!a5)
  {
    APSLogErrorAt();
    return 4294895105;
  }
  *a5 = 0;
  if (*DerivedStorage)
  {
    if (a2) {
      goto LABEL_4;
    }
    return h4BvW7X();
  }
  if (gQblcfSzZBQsYCCV())
  {
    APSLogErrorAt();
    return 4294895104;
  }
  if (!a2) {
    return h4BvW7X();
  }
LABEL_4:
  uint64_t v9 = GvMGlTNs();
  if (v9)
  {
    uint64_t v12 = v9;
LABEL_19:
    APSLogErrorAt();
    return v12;
  }
  unsigned int v10 = SrtySZG0();
  if (v10 == -6760 || v10 == 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 4294895103;
  }
  if (v12) {
    goto LABEL_19;
  }
  return 0;
}

__CFString *legacyPairing_CopyDebugDescription()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  CFStringAppendFormat(Mutable, 0, @"<APPairingServicesLegacy '%@'>", *DerivedStorage);
  return Mutable;
}

uint64_t legacyPairing_Finalize(uint64_t a1)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v5 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v4 = v5;
  if (v5) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0;
  }
  if (*(void *)(v6 + 24))
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 40);
    return v7(a1);
  }
  return result;
}

uint64_t APReceiverSessionManagerGetTypeID()
{
  if (APReceiverSessionManagerGetTypeID_once != -1) {
    dispatch_once(&APReceiverSessionManagerGetTypeID_once, &__block_literal_global_7188);
  }
  return APReceiverSessionManagerGetTypeID_typeID;
}

uint64_t __APReceiverSessionManagerGetTypeID_block_invoke()
{
  APReceiverSessionManagerGetTypeID_SessionManagerClass = 0;
  unk_268402E40 = "APReceiverSessionManager";
  qword_268402E48 = 0;
  unk_268402E50 = 0;
  qword_268402E58 = (uint64_t)sessionManager_Finalize;
  unk_268402E60 = 0u;
  unk_268402E70 = 0u;
  uint64_t result = _CFRuntimeRegisterClass();
  APReceiverSessionManagerGetTypeID_typeID = result;
  return result;
}

uint64_t sessionManager_Finalize(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2 != -1)
  {
    notify_cancel(v2);
    *(_DWORD *)(a1 + 16) = -1;
  }
  uint64_t v3 = *(const void **)(a1 + 64);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v4 = *(const void **)(a1 + 80);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 80) = 0;
  }
  uint64_t v5 = *(const void **)(a1 + 48);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v6 = *(const void **)(a1 + 56);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(a1 + 88));
  if (gLogCategory_APReceiverSessionManager <= 10)
  {
    if (gLogCategory_APReceiverSessionManager != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t sessionManager_handleSenderSessionStateChange(uint64_t result, uint64_t a2)
{
  int v2 = a2;
  uint64_t v3 = result;
  if (a2)
  {
    int v4 = CFDictionaryGetInt64() != 0;
    uint64_t result = CFDictionaryGetInt64();
    int v2 = result;
    int v5 = *(unsigned __int8 *)(v3 + 41);
  }
  else
  {
    int v4 = 0;
    int v5 = *(unsigned __int8 *)(result + 41);
  }
  if (v5 == v4 && *(_DWORD *)(v3 + 44) == v2) {
    return result;
  }
  *(unsigned char *)(v3 + 41) = v4;
  *(_DWORD *)(v3 + 44) = v2;
  if (gLogCategory_APReceiverSessionManager <= 50
    && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v6 = *(void *)(v3 + 32);
  if (v6 != 1) {
    goto LABEL_18;
  }
  if (v4 || v2 == 1)
  {
    if (gLogCategory_APReceiverSessionManager <= 50
      && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFObjectControlAsync();
    uint64_t v6 = *(void *)(v3 + 32);
LABEL_18:
    if ((v6 | 2) == 2 && !IsAppleTV()) {
      APSMultiPrimariesEnabled();
    }
  }
  if (gLogCategory_APReceiverSessionManager <= 40
    && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }

  return CFObjectSetProperty();
}

void sessionManager_handleSenderSessionStateChangeNotification(int a1, CFTypeRef cf)
{
  CFRetain(cf);
  uint64_t v3 = *(NSObject **)(*((void *)cf + 3) + 88);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 0x40000000;
  block[2] = __sessionManager_handleSenderSessionStateChangeNotification_block_invoke;
  block[3] = &__block_descriptor_tmp_58;
  block[4] = cf;
  dispatch_async(v3, block);
}

void __sessionManager_handleSenderSessionStateChangeNotification_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (const void *)APReceiverSystemInfoCopyProperty(*(void *)(*(void *)(*(void *)(a1 + 32) + 24) + 160), a2, @"LocalRouteInfo", 0, 0);
  sessionManager_handleSenderSessionStateChange(*(void *)(a1 + 32), (uint64_t)v3);
  if (v3) {
    CFRelease(v3);
  }
  int v4 = *(const void **)(a1 + 32);

  CFRelease(v4);
}

uint64_t cfArrayContainsValue(const __CFArray *a1, const void *a2)
{
  if (!a1 || !a2)
  {
    APSLogErrorAt();
    return 0;
  }
  uint64_t Count = CFArrayGetCount(a1);
  if (Count < 1) {
    return 0;
  }
  v5.length = Count;
  v5.location = 0;

  return CFArrayContainsValue(a1, v5, a2);
}

void APReceiverSessionManagerUpdateParentGroupInfo(void *a1)
{
  uint64_t v2 = a1[7];
  if (v2)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v4 = v3 ? v3 : 0;
    CFRange v5 = *(uint64_t (**)(uint64_t, __CFString *, void))(v4 + 64);
    if (v5)
    {
      CFDictionaryRef v6 = (const __CFDictionary *)v5(v2, @"parentGroupInfo", 0);
      if (v6) {
        goto LABEL_13;
      }
    }
  }
  uint64_t v7 = a1[6];
  if (v7
    && ((uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v9 = 0) : (v9 = v8),
        (unsigned int v10 = *(uint64_t (**)(uint64_t, __CFString *, void))(v9 + 64)) != 0
     && (CFDictionaryRef v6 = (const __CFDictionary *)v10(v7, @"parentGroupInfo", 0)) != 0))
  {
LABEL_13:
    uint64_t v11 = *(void *)(a1[3] + 160);
    CFDictionaryRef Value = CFDictionaryGetValue(v6, @"groupUUID");
    BOOL v13 = CFDictionaryGetInt64() != 0;
    BOOL v14 = CFDictionaryGetInt64() == 0;
    int v15 = *(NSObject **)(v11 + 16);
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v20 = 3221225472;
    timeval v21 = __APReceiverSystemInfoSetParentGroupInfo_block_invoke;
    long long v22 = &__block_descriptor_50_e5_v8__0l;
    char v16 = !v14;
    uint64_t v23 = v11;
    long long v24 = Value;
    BOOL v25 = v13;
    char v26 = v16;
    dispatch_sync(v15, &block);
    CFRelease(v6);
  }
  else
  {
    uint64_t v17 = *(void *)(a1[3] + 160);
    CFTypeRef v18 = *(NSObject **)(v17 + 16);
    uint64_t block = MEMORY[0x263EF8330];
    uint64_t v20 = 3221225472;
    timeval v21 = __APReceiverSystemInfoResetParentGroupInfo_block_invoke;
    long long v22 = &__block_descriptor_40_e5_v8__0l;
    uint64_t v23 = v17;
    dispatch_sync(v18, &block);
  }
}

void APReceiverSessionManagerSetAsMainAirPlaySession(uint64_t a1, const void *a2)
{
  if (a2 && cfArrayContainsValue(*(const __CFArray **)(a1 + 64), a2))
  {
    uint64_t v4 = *(const void **)(a1 + 56);
    if (v4 == a2) {
      return;
    }
    if (v4)
    {
      if (CFEqual(a2, v4)) {
        return;
      }
      CFRange v5 = *(const void **)(a1 + 56);
      CFRetain(a2);
      *(void *)(a1 + 56) = a2;
      if (v5) {
        CFRelease(v5);
      }
    }
    else
    {
      CFRetain(a2);
      *(void *)(a1 + 56) = a2;
    }
    if (gLogCategory_APReceiverSessionManager <= 50
      && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APReceiverSessionManagerUpdateParentGroupInfo((void *)a1);
    if (*(void *)(a1 + 56))
    {
      CFObjectSetProperty();
      if (APSIsMemberOfPersistentGroup())
      {
        int v13 = 0;
        uint64_t v6 = *(void *)(a1 + 56);
        if (v6)
        {
          uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v7) {
            uint64_t v8 = v7;
          }
          else {
            uint64_t v8 = 0;
          }
          uint64_t v9 = *(uint64_t (**)(uint64_t, __CFString *, int *))(v8 + 64);
          if (v9)
          {
            unsigned int v10 = (const void *)v9(v6, @"hijackID", &v13);
            if (v13)
            {
              APSLogErrorAt();
              if (!v10) {
                goto LABEL_31;
              }
              goto LABEL_30;
            }
          }
          else
          {
            unsigned int v10 = 0;
          }
          if (gLogCategory_APReceiverSessionManager <= 50
            && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          if (Mutable)
          {
            CFDictionaryRef v12 = Mutable;
            CFDictionarySetValue(Mutable, @"hijackID", v10);
            AirPlayReceiverServerPlatformControl(*(void *)(a1 + 24), @"updateHijackID", 0, v12);
            CFRelease(v12);
            if (!v10) {
              goto LABEL_31;
            }
          }
          else
          {
            APSLogErrorAt();
            int v13 = -6728;
            if (!v10)
            {
LABEL_31:
              if (v13) {
                APSLogErrorAt();
              }
              return;
            }
          }
LABEL_30:
          CFRelease(v10);
          goto LABEL_31;
        }
      }
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t APReceiverSessionManagerUpdateAndNotifyReceiverSessionState(uint64_t a1)
{
  CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(a1 + 64));
  if (Count < 1)
  {
    uint64_t v3 = 0;
  }
  else
  {
    if (Count != 1) {
      goto LABEL_9;
    }
    if (APSMultiPrimariesEnabled())
    {
      uint64_t v3 = 2;
      goto LABEL_10;
    }
    if (IsAppleTV())
    {
      CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 64), 0);
      if (CFObjectGetInt64()) {
        uint64_t v3 = 2;
      }
      else {
        uint64_t v3 = 1;
      }
    }
    else
    {
LABEL_9:
      uint64_t v3 = 1;
    }
  }
LABEL_10:
  CFTypeRef cf = 0;
  CFArrayGetCount(*(CFArrayRef *)(a1 + 64));
  uint64_t v4 = CFObjectSetPropertyInt64();
  if (v4)
  {
    uint64_t v8 = v4;
LABEL_29:
    APSLogErrorAt();
    goto LABEL_23;
  }
  if (APSMultiPrimariesEnabled())
  {
    APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1, 5, &cf, 0);
    uint64_t v7 = AirPlayReceiverServerPlatformSetProperty(*(void *)(a1 + 24), v5, @"mainMediaReceiverSession", v6, cf);
    if (v7)
    {
      uint64_t v8 = v7;
      goto LABEL_29;
    }
  }
  if (*(void *)(a1 + 32) == v3)
  {
    uint64_t v8 = 0;
  }
  else
  {
    if (gLogCategory_APReceiverSessionManager <= 50
      && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(void *)(a1 + 32) = v3;
    int v9 = *(_DWORD *)(a1 + 16);
    if (v9 == -1)
    {
      uint64_t v8 = 0;
    }
    else
    {
      notify_set_state(v9, v3);
      uint64_t v8 = notify_post("com.apple.airplay.active");
    }
    CFObjectSetProperty();
  }
LABEL_23:
  if (cf) {
    CFRelease(cf);
  }
  return v8;
}

void APReceiverSessionManagerRemoveSession(uint64_t a1, const void *a2)
{
  if (gLogCategory_APReceiverSessionManager <= 50
    && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  IndexOfCFDictionaryRef Value = cfArrayGetIndexOfValue(*(const __CFArray **)(a1 + 64), a2);
  if (IndexOfValue != -1)
  {
    CFIndex v5 = IndexOfValue;
    uint64_t v6 = *(const void **)(a1 + 48);
    if (v6 == a2)
    {
      int v8 = *(_DWORD *)(a1 + 72);
      if (v8 >= 2) {
        *(_DWORD *)(a1 + 72) = v8 - 1;
      }
      if (a2)
      {
        CFRelease(a2);
        *(void *)(a1 + 48) = 0;
      }
      if (gLogCategory_APReceiverSessionManager <= 50
        && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_20;
      }
    }
    else if (gLogCategory_APReceiverSessionManager <= 50 {
           && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
    }
    {
LABEL_20:
      LogPrintF();
    }
    if (*(const void **)(a1 + 56) == a2)
    {
      if (gLogCategory_APReceiverSessionManager <= 50)
      {
        if (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        a2 = *(const void **)(a1 + 56);
      }
      if (a2)
      {
        CFRelease(a2);
        *(void *)(a1 + 56) = 0;
      }
      CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 64), v5);
    }
    else
    {
      CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 64), v5);
      if (v6 != a2)
      {
LABEL_38:
        APReceiverSessionManagerUpdateAndNotifyReceiverSessionState(a1);
        return;
      }
    }
    APReceiverSessionManagerUpdateParentGroupInfo((void *)a1);
    goto LABEL_38;
  }
  CFIndex v7 = cfArrayGetIndexOfValue(*(const __CFArray **)(a1 + 80), a2);
  if (v7 != -1)
  {
    CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 80), v7);
    if (gLogCategory_APReceiverSessionManager <= 50
      && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

CFIndex cfArrayGetIndexOfValue(const __CFArray *a1, const void *a2)
{
  if (!a1 || !a2)
  {
    APSLogErrorAt();
    return -1;
  }
  uint64_t Count = CFArrayGetCount(a1);
  if (Count < 1) {
    return -1;
  }
  v5.length = Count;
  v5.location = 0;

  return CFArrayGetFirstIndexOfValue(a1, v5, a2);
}

void APReceiverSessionManagerCopyAirPlaySessionWithAttribute(uint64_t a1, int a2, void *a3, const void **a4)
{
  if (a2 == 1)
  {
    CFIndex v7 = 0;
LABEL_3:
    int v8 = (const void **)(a1 + 48);
LABEL_4:
    int v9 = *v8;
    goto LABEL_14;
  }
  NonPersistentint Session = sessionManager_copyFirstNonPersistentSession(a1);
  CFIndex v7 = NonPersistentSession;
  int v9 = *(const void **)(a1 + 56);
  if (a2 == 4)
  {
    if (v9)
    {
      CFDictionaryRef v12 = *(const void **)(a1 + 48);
      if (v9 == v12) {
        goto LABEL_10;
      }
      if (!v12) {
        goto LABEL_14;
      }
      if (CFEqual(*(CFTypeRef *)(a1 + 56), v12))
      {
LABEL_10:
        int v9 = v7;
        goto LABEL_14;
      }
      int v8 = (const void **)(a1 + 56);
      goto LABEL_4;
    }
    goto LABEL_25;
  }
  if (!v9) {
    int v9 = NonPersistentSession;
  }
  if (!v9)
  {
    if (a2 == 5)
    {
      uint64_t v13 = *(void *)(a1 + 48);
      int v8 = (const void **)(a1 + 48);
      if (v13 && CFObjectGetInt64()) {
        goto LABEL_4;
      }
    }
    else if (!a2)
    {
      goto LABEL_3;
    }
LABEL_25:
    if (!a3) {
      goto LABEL_28;
    }
    int v9 = 0;
    goto LABEL_27;
  }
LABEL_14:
  if (a4 && v9) {
    *a4 = APReceiverRequestProcessorCopyReceiverSession();
  }
  if (a3)
  {
    if (v9) {
      CFRetain(v9);
    }
LABEL_27:
    *a3 = v9;
  }
LABEL_28:
  if (v7)
  {
    CFRelease(v7);
  }
}

CFTypeRef sessionManager_copyFirstNonPersistentSession(uint64_t a1)
{
  CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(a1 + 64));
  if (Count < 1) {
    return 0;
  }
  CFIndex v3 = Count;
  CFIndex v4 = 0;
  while (1)
  {
    ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 64), v4);
    uint64_t v6 = *(const void **)(a1 + 48);
    if (ValueAtIndex != v6)
    {
      CFIndex v7 = ValueAtIndex;
      BOOL v8 = !ValueAtIndex || v6 == 0;
      if (v8 || !CFEqual(ValueAtIndex, v6)) {
        break;
      }
    }
    if (v3 == ++v4) {
      return 0;
    }
  }

  return CFRetain(v7);
}

uint64_t APReceiverRequestProcessorCopyProperty_7265(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  BOOL v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  if (!v8) {
    return 0;
  }

  return v8(a1, a2, a3);
}

__CFArray *APReceiverSessionManagerCopyAllSessions(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x263EFFF70]);
  if (Mutable)
  {
    CFArrayRef v3 = *(const __CFArray **)(a1 + 80);
    if (v3)
    {
      v6.length = CFArrayGetCount(*(CFArrayRef *)(a1 + 80));
      v6.location = 0;
      CFArrayAppendArray(Mutable, v3, v6);
    }
    CFArrayRef v4 = *(const __CFArray **)(a1 + 64);
    if (v4)
    {
      v7.length = CFArrayGetCount(v4);
      v7.location = 0;
      CFArrayAppendArray(Mutable, v4, v7);
    }
  }
  else
  {
    APSLogErrorAt();
    if (gLogCategory_APReceiverSessionManager <= 60
      && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return Mutable;
}

BOOL APReceiverSessionManagerCanHijack(uint64_t a1, const void *a2)
{
  uint64_t v4 = 1;
  if (CFObjectGetPropertyInt64Sync()
    && *(int *)(a1 + 72) >= 1
    && CFArrayGetCount(*(CFArrayRef *)(a1 + 64)) == *(_DWORD *)(a1 + 72))
  {
    return cfArrayContainsValue(*(const __CFArray **)(a1 + 64), a2) != 0;
  }
  return v4;
}

void APReceiverSessionManagerHijack(uint64_t a1, const void *a2)
{
  NonPersistentint Session = sessionManager_copyFirstNonPersistentSession(a1);
  if (NonPersistentSession)
  {
    CFRange v5 = NonPersistentSession;
    if (!CFEqual(NonPersistentSession, a2)) {
      AirPlayReceiverServerHijackConnection(*(void *)(a1 + 24), (uint64_t)v5, (uint64_t)a2);
    }
    CFRelease(v5);
  }
}

uint64_t AES_CBCFrame_Final()
{
  return MEMORY[0x270F23BA8]();
}

uint64_t AES_CBCFrame_Init()
{
  return MEMORY[0x270F23BB0]();
}

uint64_t AES_CBCFrame_Update()
{
  return MEMORY[0x270F23BB8]();
}

uint64_t AES_CTR_Final()
{
  return MEMORY[0x270F23BC0]();
}

uint64_t AES_CTR_Init()
{
  return MEMORY[0x270F23BC8]();
}

uint64_t AES_CTR_Update()
{
  return MEMORY[0x270F23BD0]();
}

uint64_t APAudioFormatGetMagicCookieForAACELD()
{
  return MEMORY[0x270F0BAC0]();
}

uint64_t APAudioFormatGetSupportedTransportAudioFormatsForBufferedReceiver()
{
  return MEMORY[0x270F0BAC8]();
}

uint64_t APAudioFormatGetSupportedTransportAudioFormatsForRealTimeReceiver()
{
  return MEMORY[0x270F0BAD0]();
}

uint64_t APAudioFormatGetSupportedTransportAudioFormatsForScreenReceiver()
{
  return MEMORY[0x270F0BAD8]();
}

uint64_t APAudioFormatGetSupportedTransportAudioFormatsLowLatencyReceiver()
{
  return MEMORY[0x270F0BAE0]();
}

uint64_t APAudioFormatIDToAPCompressionType()
{
  return MEMORY[0x270F0BAE8]();
}

uint64_t APAudioFormatIndexGetBitsPerChannel()
{
  return MEMORY[0x270F0BAF0]();
}

uint64_t APAudioFormatIndexToPCMASBD()
{
  return MEMORY[0x270F0BAF8]();
}

uint64_t APCompressionTypeFillStreamDescription()
{
  return MEMORY[0x270F0BB00]();
}

uint64_t APCompressionTypeGetBufferSize()
{
  return MEMORY[0x270F0BB08]();
}

uint64_t APCompressionTypeToAPAudioFormatIndex()
{
  return MEMORY[0x270F0BB10]();
}

uint64_t APConnectivityHelperDeregisterForEvent()
{
  return MEMORY[0x270F08C00]();
}

uint64_t APConnectivityHelperGetEventString()
{
  return MEMORY[0x270F08C08]();
}

uint64_t APConnectivityHelperGetSharedHelper()
{
  return MEMORY[0x270F08C10]();
}

uint64_t APConnectivityHelperRegisterEventHandler()
{
  return MEMORY[0x270F08C18]();
}

uint64_t APConnectivityHelperRegisterForEvent()
{
  return MEMORY[0x270F08C20]();
}

uint64_t APConnectivityHelperRemoveAllRegistrations()
{
  return MEMORY[0x270F08C28]();
}

uint64_t APSAllocatorGetDefaultAirPlayMallocZone()
{
  return MEMORY[0x270F0BB18]();
}

uint64_t APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator()
{
  return MEMORY[0x270F0BB20]();
}

uint64_t APSAsyncLoggerGetSharedLogger()
{
  return MEMORY[0x270F0BB28]();
}

uint64_t APSAsyncLoggerLogMessage()
{
  return MEMORY[0x270F0BB30]();
}

uint64_t APSAtomicMessageQueueCreate()
{
  return MEMORY[0x270F0BB38]();
}

uint64_t APSAtomicMessageQueueReadMessage()
{
  return MEMORY[0x270F0BB40]();
}

uint64_t APSAtomicMessageQueueSendMessage()
{
  return MEMORY[0x270F0BB48]();
}

uint64_t APSAudioFormatDescriptionCreateWithAudioFormatIndex()
{
  return MEMORY[0x270F0BB50]();
}

uint64_t APSAudioFormatDescriptionGetASBD()
{
  return MEMORY[0x270F0BB58]();
}

uint64_t APSAudioFormatDescriptionGetAudioFormatIndex()
{
  return MEMORY[0x270F0BB60]();
}

uint64_t APSAudioFormatDescriptionGetChannelCount()
{
  return MEMORY[0x270F0BB68]();
}

uint64_t APSAudioFormatDescriptionGetChannelLayoutTag()
{
  return MEMORY[0x270F0BB70]();
}

uint64_t APSAudioFormatDescriptionGetSampleRate()
{
  return MEMORY[0x270F0BB78]();
}

uint64_t APSAudioFormatDescriptionListCreateAdvertisementArray()
{
  return MEMORY[0x270F0BB80]();
}

uint64_t APSAudioFormatDescriptionListCreateForBufferedReceiverWithAudioCapabilities()
{
  return MEMORY[0x270F0BB88]();
}

uint64_t APSAudioFormatDoesAudioChannelLayoutTagHaveHeights()
{
  return MEMORY[0x270F0BB90]();
}

uint64_t APSAudioIOAssertionUntilTime()
{
  return MEMORY[0x270F0BB98]();
}

uint64_t APSAudioTransportTimeCopyDebugDesc()
{
  return MEMORY[0x270F0BBA0]();
}

uint64_t APSAudioTransportTimeIsValid()
{
  return MEMORY[0x270F0BBA8]();
}

uint64_t APSAudioTransportTimeMakeWithRTPTime()
{
  return MEMORY[0x270F0BBB0]();
}

uint64_t APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary()
{
  return MEMORY[0x270F0BBB8]();
}

uint64_t APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary()
{
  return MEMORY[0x270F0BBC0]();
}

uint64_t APSContiguousAllocatorAcquireBlock()
{
  return MEMORY[0x270F0BBE0]();
}

uint64_t APSContiguousAllocatorCreate()
{
  return MEMORY[0x270F0BBE8]();
}

uint64_t APSContiguousAllocatorGetNextAvailableBlockSize()
{
  return MEMORY[0x270F0BBF0]();
}

uint64_t APSContiguousAllocatorRelinquishBlock()
{
  return MEMORY[0x270F0BBF8]();
}

uint64_t APSContiguousAllocatorRelinquishBlockFromAddress()
{
  return MEMORY[0x270F0BC00]();
}

uint64_t APSCopyBootUUID()
{
  return MEMORY[0x270F0BC08]();
}

uint64_t APSCopyClusterInfo()
{
  return MEMORY[0x270F0BC10]();
}

uint64_t APSCopyPersistentGroupInfo()
{
  return MEMORY[0x270F0BC20]();
}

uint64_t APSCopyTightSyncInfo()
{
  return MEMORY[0x270F0BC28]();
}

uint64_t APSCreateGroupID()
{
  return MEMORY[0x270F0BC30]();
}

uint64_t APSCryptorCBCCreate()
{
  return MEMORY[0x270F0BC38]();
}

uint64_t APSCryptorChaCha20Poly1305Create()
{
  return MEMORY[0x270F0BC40]();
}

uint64_t APSDispatchAsyncFHelper()
{
  return MEMORY[0x270F0BC48]();
}

uint64_t APSDispatchDataCopyBytes()
{
  return MEMORY[0x270F0BC50]();
}

uint64_t APSDisplayUtilsCopyDisplayCapabilities()
{
  return MEMORY[0x270F0BC58]();
}

uint64_t APSEncryptionUtilsDeriveAESKeySHA512ForScreen()
{
  return MEMORY[0x270F0BC60]();
}

uint64_t APSEndpointStreamAudioHoseProtocolGetProtocolID()
{
  return MEMORY[0x270F0BC68]();
}

uint64_t APSEndpointStreamAudioHoseSBARCreate()
{
  return MEMORY[0x270F0BC70]();
}

uint64_t APSEnsureCanInitiatePlayback()
{
  return MEMORY[0x270F0BC80]();
}

uint64_t APSFeaturesClearAllFeatures()
{
  return MEMORY[0x270F0BC88]();
}

uint64_t APSFeaturesCopyStringRepresentation()
{
  return MEMORY[0x270F0BC90]();
}

uint64_t APSFeaturesCreateFromLegacyFlags()
{
  return MEMORY[0x270F0BC98]();
}

uint64_t APSFeaturesCreateFromStringRepresentation()
{
  return MEMORY[0x270F0BCA0]();
}

uint64_t APSFeaturesCreateMutable()
{
  return MEMORY[0x270F0BCA8]();
}

uint64_t APSFeaturesCreateMutableCopy()
{
  return MEMORY[0x270F0BCB0]();
}

uint64_t APSFeaturesGetLegacyFlags()
{
  return MEMORY[0x270F0BCB8]();
}

uint64_t APSFeaturesHasFeature()
{
  return MEMORY[0x270F0BCC0]();
}

uint64_t APSFeaturesIsEmpty()
{
  return MEMORY[0x270F0BCC8]();
}

uint64_t APSFeaturesSetFeature()
{
  return MEMORY[0x270F0BCD0]();
}

uint64_t APSFeaturesSetLegacyFlags()
{
  return MEMORY[0x270F0BCD8]();
}

uint64_t APSGetAccessControlConfig()
{
  return MEMORY[0x270F0BCE0]();
}

uint64_t APSGetAllowPersistentGroupsOnInfra()
{
  return MEMORY[0x270F0BCE8]();
}

uint64_t APSGetDeviceClassFromDeviceModel()
{
  return MEMORY[0x270F0BCF0]();
}

uint64_t APSGetDeviceID()
{
  return MEMORY[0x270F0BCF8]();
}

uint64_t APSGetFBOPropertyInt64()
{
  return MEMORY[0x270F0BD08]();
}

uint64_t APSGetP2PAllow()
{
  return MEMORY[0x270F0BD18]();
}

uint64_t APSGetVolumeFadeTypeName()
{
  return MEMORY[0x270F0BD20]();
}

uint64_t APSHDMIVideoLatencyMs()
{
  return MEMORY[0x270F0BD28]();
}

uint64_t APSHasNANSupport()
{
  return MEMORY[0x270F0BD40]();
}

uint64_t APSIOReporterCreate()
{
  return MEMORY[0x270F0BD48]();
}

uint64_t APSIOReporterGetCoreCaptureCount()
{
  return MEMORY[0x270F0BD50]();
}

uint64_t APSIntrospectorInit()
{
  return MEMORY[0x270F0BD60]();
}

uint64_t APSIsAPMSpeaker()
{
  return MEMORY[0x270F0BD68]();
}

uint64_t APSIsAPValeriaScreenSender()
{
  return MEMORY[0x270F0BD70]();
}

uint64_t APSIsATVInHTGroup()
{
  return MEMORY[0x270F0BD78]();
}

uint64_t APSIsAirPlayDEnabled()
{
  return MEMORY[0x270F0BD80]();
}

uint64_t APSIsDirectLinkInterface()
{
  return MEMORY[0x270F0BD88]();
}

uint64_t APSIsMemberOfHTGroup()
{
  return MEMORY[0x270F0BD90]();
}

uint64_t APSIsMemberOfPersistentGroup()
{
  return MEMORY[0x270F0BD98]();
}

uint64_t APSIsMemberOfStereoPair()
{
  return MEMORY[0x270F0BDA0]();
}

uint64_t APSIsProximityReceiverEnabled()
{
  return MEMORY[0x270F0BDA8]();
}

uint64_t APSIsSetMRInfoCommandEnabled()
{
  return MEMORY[0x270F0BDB0]();
}

uint64_t APSIsValidDeviceEnclosureColorString()
{
  return MEMORY[0x270F0BDB8]();
}

uint64_t APSIsVirtualMachine()
{
  return MEMORY[0x270F0BDC0]();
}

uint64_t APSLogErrorAt()
{
  return MEMORY[0x270F0BDC8]();
}

uint64_t APSLogUtilsGetAsyncCnxLogCategory()
{
  return MEMORY[0x270F0BDD0]();
}

uint64_t APSLogUtilsGetHTTPClientCoreLogCategory()
{
  return MEMORY[0x270F0BDD8]();
}

uint64_t APSMultiPrimariesEnabled()
{
  return MEMORY[0x270F0BDE0]();
}

uint64_t APSNANServiceTypeGetTXTString()
{
  return MEMORY[0x270F0BDE8]();
}

uint64_t APSNetworkAddressCopyInterfaceName()
{
  return MEMORY[0x270F0BDF0]();
}

uint64_t APSNetworkAddressCreateWithSocketAddr()
{
  return MEMORY[0x270F0BDF8]();
}

uint64_t APSNetworkAddressCreateWithString()
{
  return MEMORY[0x270F0BE00]();
}

uint64_t APSNetworkClockAddOrUpdatePeerFromSerializablePeerDictionary()
{
  return MEMORY[0x270F0BE10]();
}

uint64_t APSNetworkClockAddOrUpdatePeerWithAddressAndInterfaceNameStrings()
{
  return MEMORY[0x270F0BE18]();
}

uint64_t APSNetworkClockDetermineAndSetOrUpdateLocalPeerInfo()
{
  return MEMORY[0x270F0BE20]();
}

uint64_t APSNetworkClockGetCMBaseObject()
{
  return MEMORY[0x270F0BE28]();
}

uint64_t APSNetworkClockGetClassID()
{
  return MEMORY[0x270F0BE30]();
}

uint64_t APSNetworkClockGetTypeID()
{
  return MEMORY[0x270F0BE38]();
}

uint64_t APSNetworkClockLogCurrentNetworkTime()
{
  return MEMORY[0x270F0BE40]();
}

uint64_t APSNetworkClockPTPCreate()
{
  return MEMORY[0x270F0BE48]();
}

uint64_t APSNetworkClockRemoveAllPeers()
{
  return MEMORY[0x270F0BE50]();
}

uint64_t APSNetworkClockReportRTCMetrics()
{
  return MEMORY[0x270F0BE58]();
}

uint64_t APSNetworkClockSetPeersFromSetPeersMessagePayload()
{
  return MEMORY[0x270F0BE60]();
}

uint64_t APSNowPlayingSessionDataSourceEnabled()
{
  return MEMORY[0x270F0BE70]();
}

uint64_t APSPacketLossConcealerConceal()
{
  return MEMORY[0x270F0BE78]();
}

uint64_t APSPacketLossConcealerReset()
{
  return MEMORY[0x270F0BE80]();
}

uint64_t APSPacketLossConcealerSaveData()
{
  return MEMORY[0x270F0BE88]();
}

uint64_t APSPowerAssertionCreate()
{
  return MEMORY[0x270F0BEA0]();
}

uint64_t APSPowerAssertionRaise()
{
  return MEMORY[0x270F0BEA8]();
}

uint64_t APSPowerAssertionRelease()
{
  return MEMORY[0x270F0BEB0]();
}

uint64_t APSRTCReportingAgentCreate()
{
  return MEMORY[0x270F0BEB8]();
}

uint64_t APSRTCReportingAgentSendEvent()
{
  return MEMORY[0x270F0BEC0]();
}

uint64_t APSRTCReportingAgentSendMediaEvent()
{
  return MEMORY[0x270F0BEC8]();
}

uint64_t APSRTPPacketProcessorProcessPacket()
{
  return MEMORY[0x270F0BED0]();
}

uint64_t APSRTPPassThroughJitterBufferAcquireLowestInsertedNode()
{
  return MEMORY[0x270F0BED8]();
}

uint64_t APSRTPPassThroughJitterBufferAcquireRelinquishedNode()
{
  return MEMORY[0x270F0BEE0]();
}

uint64_t APSRTPPassThroughJitterBufferCreate()
{
  return MEMORY[0x270F0BEE8]();
}

uint64_t APSRTPPassThroughJitterBufferFlush()
{
  return MEMORY[0x270F0BEF0]();
}

uint64_t APSRTPPassThroughJitterBufferGetInsertedNodeCount()
{
  return MEMORY[0x270F0BEF8]();
}

uint64_t APSRTPPassThroughJitterBufferInsertNode()
{
  return MEMORY[0x270F0BF00]();
}

uint64_t APSRTPPassThroughJitterBufferIsFlushing()
{
  return MEMORY[0x270F0BF08]();
}

uint64_t APSRTPPassThroughJitterBufferRelinquishNode()
{
  return MEMORY[0x270F0BF10]();
}

uint64_t APSRealTimeReadableRingBufferCreate()
{
  return MEMORY[0x270F0BF18]();
}

uint64_t APSRealTimeReadableRingBufferRead()
{
  return MEMORY[0x270F0BF20]();
}

uint64_t APSSGetGasGaugeStringForPercent()
{
  return MEMORY[0x270F0BF70]();
}

uint64_t APSScreenLatencyMs()
{
  return MEMORY[0x270F0BF78]();
}

uint64_t APSSettingsCopyValue()
{
  return MEMORY[0x270F0BF80]();
}

uint64_t APSSettingsGetBooleanIfPresent()
{
  return MEMORY[0x270F0BF90]();
}

uint64_t APSSettingsGetCString()
{
  return MEMORY[0x270F0BF98]();
}

uint64_t APSSettingsGetInt64()
{
  return MEMORY[0x270F0BFA0]();
}

uint64_t APSSettingsGetInt64IfPresent()
{
  return MEMORY[0x270F0BFA8]();
}

uint64_t APSSettingsGetIntWithDefault()
{
  return MEMORY[0x270F0BFB0]();
}

uint64_t APSSettingsGetUInt16IfPresent()
{
  return MEMORY[0x270F0BFB8]();
}

uint64_t APSSettingsIsFeatureEnabled()
{
  return MEMORY[0x270F0BFC0]();
}

uint64_t APSSettingsIsFeatureEnabledInDomain()
{
  return MEMORY[0x270F0BFC8]();
}

uint64_t APSSettingsRemoveValue()
{
  return MEMORY[0x270F0BFD0]();
}

uint64_t APSSettingsSetValue()
{
  return MEMORY[0x270F0BFE8]();
}

uint64_t APSSettingsSynchronize()
{
  return MEMORY[0x270F0BFF0]();
}

uint64_t APSShouldClusterEngageOnActivation()
{
  return MEMORY[0x270F0BFF8]();
}

uint64_t APSShouldStartAdvertistingForAirPlaySourceBeacon()
{
  return MEMORY[0x270F0C000]();
}

uint64_t APSSignalErrorAt()
{
  return MEMORY[0x270F0C008]();
}

uint64_t APSStatsHistogramCopyValuesAsRTCString()
{
  return MEMORY[0x270F0C018]();
}

uint64_t APSStatsHistogramCreate()
{
  return MEMORY[0x270F0C020]();
}

uint64_t APSStatsHistogramCreateSerializedDictionary()
{
  return MEMORY[0x270F0C028]();
}

uint64_t APSStatsHistogramGetTotalSampleCount()
{
  return MEMORY[0x270F0C030]();
}

uint64_t APSVersionUtilsGetShortVersionLength()
{
  return MEMORY[0x270F0C040]();
}

uint64_t APSVideoFormatDescriptionCreateFromBlockBuffer()
{
  return MEMORY[0x270F0C048]();
}

uint64_t APSVolumeControlTypeFromEx()
{
  return MEMORY[0x270F0C050]();
}

uint64_t APSVolumeConvertDBToClampedSliderValue()
{
  return MEMORY[0x270F0C058]();
}

uint64_t APSVolumeConvertDBToLinearGain()
{
  return MEMORY[0x270F0C060]();
}

uint64_t APSVolumeConvertDBToSliderValue()
{
  return MEMORY[0x270F0C068]();
}

uint64_t APSVolumeConvertSliderValueToDB()
{
  return MEMORY[0x270F0C070]();
}

uint64_t APSVolumeConvertSliderValueToLinearGain()
{
  return MEMORY[0x270F0C078]();
}

uint64_t APSVolumeSliderValuesAreNoticeablyDifferent()
{
  return MEMORY[0x270F0C080]();
}

uint64_t APSW5LogCollect()
{
  return MEMORY[0x270F0C088]();
}

uint64_t APSWiFiTransactionCreate()
{
  return MEMORY[0x270F0C090]();
}

uint64_t APSWrapperCreate()
{
  return MEMORY[0x270F0C098]();
}

uint64_t APSWrapperGetValue()
{
  return MEMORY[0x270F0C0A0]();
}

uint64_t APSXPCClientAddEventHandler()
{
  return MEMORY[0x270F0C0A8]();
}

uint64_t APSXPCClientSendCommandCreatingReply()
{
  return MEMORY[0x270F0C0B0]();
}

uint64_t APSXPCServerAddCommandHandler()
{
  return MEMORY[0x270F0C0B8]();
}

uint64_t APSXPCServerGetDisconnectNotificationName()
{
  return MEMORY[0x270F0C0C0]();
}

uint64_t APSXPCServerPostEvent()
{
  return MEMORY[0x270F0C0C8]();
}

uint64_t APSXPCServerStart()
{
  return MEMORY[0x270F0C0D0]();
}

uint64_t APTNANDataSessionIssueReportCreate()
{
  return MEMORY[0x270F08C30]();
}

uint64_t APTNANDataSessionStatisticsReportCopyDictionary()
{
  return MEMORY[0x270F08C38]();
}

uint64_t APTTrafficMetricsConnectionClosed()
{
  return MEMORY[0x270F08C40]();
}

uint64_t APTTrafficMetricsConnectionFormed()
{
  return MEMORY[0x270F08C48]();
}

uint64_t APTTrafficMetricsCreate()
{
  return MEMORY[0x270F08C50]();
}

uint64_t APTTrafficMetricsMessageProcessed()
{
  return MEMORY[0x270F08C58]();
}

uint64_t APTTrafficMetricsMessageReadFinished()
{
  return MEMORY[0x270F08C60]();
}

uint64_t APTTrafficMetricsMessageReadStarted()
{
  return MEMORY[0x270F08C68]();
}

uint64_t APTransportConnectionGetCMBaseObject()
{
  return MEMORY[0x270F08C70]();
}

uint64_t APTransportConnectionTCPUnbufferedNWCreate()
{
  return MEMORY[0x270F08C78]();
}

uint64_t APTransportConnectionUDPNWCreate()
{
  return MEMORY[0x270F08C80]();
}

uint64_t APTransportGetSharedTransport()
{
  return MEMORY[0x270F08C98]();
}

uint64_t APTransportTrafficRegistrarAWDLTrafficRegistrationCreate()
{
  return MEMORY[0x270F08CA0]();
}

uint64_t APTransportTrafficRegistrarGetAWDLChannelSequence()
{
  return MEMORY[0x270F08CA8]();
}

uint64_t APTransportTrafficRegistrarGetRSSI()
{
  return MEMORY[0x270F08CB0]();
}

uint64_t APTransportTrafficRegistrarGetRegistration()
{
  return MEMORY[0x270F08CB8]();
}

uint64_t APTransportTrafficRegistrarGetWifiChannel()
{
  return MEMORY[0x270F08CC0]();
}

uint64_t APTransportTrafficRegistrarInfraTransactionCreate()
{
  return MEMORY[0x270F08CC8]();
}

uint64_t ASPrintF()
{
  return MEMORY[0x270F23BD8]();
}

OSStatus AUGraphAddNode(AUGraph inGraph, const AudioComponentDescription *inDescription, AUNode *outNode)
{
  return MEMORY[0x270EE1F50](inGraph, inDescription, outNode);
}

OSStatus AUGraphClose(AUGraph inGraph)
{
  return MEMORY[0x270EE1F60](inGraph);
}

OSStatus AUGraphConnectNodeInput(AUGraph inGraph, AUNode inSourceNode, UInt32 inSourceOutputNumber, AUNode inDestNode, UInt32 inDestInputNumber)
{
  return MEMORY[0x270EE1F68](inGraph, *(void *)&inSourceNode, *(void *)&inSourceOutputNumber, *(void *)&inDestNode, *(void *)&inDestInputNumber);
}

OSStatus AUGraphGetIndNode(AUGraph inGraph, UInt32 inIndex, AUNode *outNode)
{
  return MEMORY[0x270EE1F78](inGraph, *(void *)&inIndex, outNode);
}

OSStatus AUGraphGetNodeCount(AUGraph inGraph, UInt32 *outNumberOfNodes)
{
  return MEMORY[0x270EE1F80](inGraph, outNumberOfNodes);
}

OSStatus AUGraphInitialize(AUGraph inGraph)
{
  return MEMORY[0x270EE1F88](inGraph);
}

OSStatus AUGraphIsInitialized(AUGraph inGraph, Boolean *outIsInitialized)
{
  return MEMORY[0x270EE1F90](inGraph, outIsInitialized);
}

OSStatus AUGraphIsOpen(AUGraph inGraph, Boolean *outIsOpen)
{
  return MEMORY[0x270EE1F98](inGraph, outIsOpen);
}

OSStatus AUGraphIsRunning(AUGraph inGraph, Boolean *outIsRunning)
{
  return MEMORY[0x270EE1FA0](inGraph, outIsRunning);
}

OSStatus AUGraphNodeInfo(AUGraph inGraph, AUNode inNode, AudioComponentDescription *outDescription, AudioUnit *outAudioUnit)
{
  return MEMORY[0x270EE1FA8](inGraph, *(void *)&inNode, outDescription, outAudioUnit);
}

OSStatus AUGraphOpen(AUGraph inGraph)
{
  return MEMORY[0x270EE1FB0](inGraph);
}

OSStatus AUGraphSetNodeInputCallback(AUGraph inGraph, AUNode inDestNode, UInt32 inDestInputNumber, const AURenderCallbackStruct *inInputCallback)
{
  return MEMORY[0x270EE1FC8](inGraph, *(void *)&inDestNode, *(void *)&inDestInputNumber, inInputCallback);
}

OSStatus AUGraphStart(AUGraph inGraph)
{
  return MEMORY[0x270EE1FD0](inGraph);
}

OSStatus AUGraphStop(AUGraph inGraph)
{
  return MEMORY[0x270EE1FD8](inGraph);
}

OSStatus AUGraphUninitialize(AUGraph inGraph)
{
  return MEMORY[0x270EE1FE0](inGraph);
}

uint64_t AirPlayCreateAWDLChannelSequenceString()
{
  return MEMORY[0x270F0C0D8]();
}

uint64_t AirPlayDeviceSupportsAWDLSolo()
{
  return MEMORY[0x270F0C0E0]();
}

OSStatus AudioConverterDispose(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x270EE2090](inAudioConverter);
}

OSStatus AudioConverterFillComplexBuffer(AudioConverterRef inAudioConverter, AudioConverterComplexInputDataProc inInputDataProc, void *inInputDataProcUserData, UInt32 *ioOutputDataPacketSize, AudioBufferList *outOutputData, AudioStreamPacketDescription *outPacketDescription)
{
  return MEMORY[0x270EE2098](inAudioConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);
}

OSStatus AudioConverterGetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return MEMORY[0x270EE20A0](inAudioConverter, *(void *)&inPropertyID, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioConverterNew(const AudioStreamBasicDescription *inSourceFormat, const AudioStreamBasicDescription *inDestinationFormat, AudioConverterRef *outAudioConverter)
{
  return MEMORY[0x270EE20B8](inSourceFormat, inDestinationFormat, outAudioConverter);
}

OSStatus AudioConverterReset(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x270EE20C0](inAudioConverter);
}

OSStatus AudioConverterSetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x270EE20C8](inAudioConverter, *(void *)&inPropertyID, *(void *)&inPropertyDataSize, inPropertyData);
}

OSStatus AudioObjectGetPropertyData(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 *ioDataSize, void *outData)
{
  return MEMORY[0x270EE4128](*(void *)&inObjectID, inAddress, *(void *)&inQualifierDataSize, inQualifierData, ioDataSize, outData);
}

OSStatus AudioUnitGetProperty(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, void *outData, UInt32 *ioDataSize)
{
  return MEMORY[0x270EE22A8](inUnit, *(void *)&inID, *(void *)&inScope, *(void *)&inElement, outData, ioDataSize);
}

OSStatus AudioUnitGetPropertyInfo(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, UInt32 *outDataSize, Boolean *outWritable)
{
  return MEMORY[0x270EE22B0](inUnit, *(void *)&inID, *(void *)&inScope, *(void *)&inElement, outDataSize, outWritable);
}

OSStatus AudioUnitInitialize(AudioUnit inUnit)
{
  return MEMORY[0x270EE22B8](inUnit);
}

OSStatus AudioUnitSetParameter(AudioUnit inUnit, AudioUnitParameterID inID, AudioUnitScope inScope, AudioUnitElement inElement, AudioUnitParameterValue inValue, UInt32 inBufferOffsetInFrames)
{
  return MEMORY[0x270EE22E0](inUnit, *(void *)&inID, *(void *)&inScope, *(void *)&inElement, *(void *)&inBufferOffsetInFrames, inValue);
}

OSStatus AudioUnitSetProperty(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, const void *inData, UInt32 inDataSize)
{
  return MEMORY[0x270EE22E8](inUnit, *(void *)&inID, *(void *)&inScope, *(void *)&inElement, inData, *(void *)&inDataSize);
}

uint64_t Base64Decode()
{
  return MEMORY[0x270F23BE8]();
}

uint64_t Base64DecodeCopy()
{
  return MEMORY[0x270F23BF0]();
}

uint64_t Base64EncodeCopyEx()
{
  return MEMORY[0x270F23BF8]();
}

uint64_t BitListString_Make()
{
  return MEMORY[0x270F23C00]();
}

uint64_t BitListString_Parse()
{
  return MEMORY[0x270F23C08]();
}

uint64_t BonjourAdvertiserCreate()
{
  return MEMORY[0x270F23C10]();
}

uint64_t BonjourAdvertiserGenerateStatisticsNAN()
{
  return MEMORY[0x270F23C18]();
}

uint64_t BonjourAdvertiserReportNANIssue()
{
  return MEMORY[0x270F23C20]();
}

uint64_t BonjourAdvertiserSetDispatchQueue()
{
  return MEMORY[0x270F23C28]();
}

uint64_t BonjourAdvertiserSetDomain()
{
  return MEMORY[0x270F23C30]();
}

uint64_t BonjourAdvertiserSetFlags()
{
  return MEMORY[0x270F23C38]();
}

uint64_t BonjourAdvertiserSetInterfaceIndex()
{
  return MEMORY[0x270F23C40]();
}

uint64_t BonjourAdvertiserSetNANControlFlags()
{
  return MEMORY[0x270F23C48]();
}

uint64_t BonjourAdvertiserSetNANCustomData()
{
  return MEMORY[0x270F23C50]();
}

uint64_t BonjourAdvertiserSetName()
{
  return MEMORY[0x270F23C58]();
}

uint64_t BonjourAdvertiserSetP2P()
{
  return MEMORY[0x270F23C60]();
}

uint64_t BonjourAdvertiserSetPort()
{
  return MEMORY[0x270F23C68]();
}

uint64_t BonjourAdvertiserSetServiceType()
{
  return MEMORY[0x270F23C70]();
}

uint64_t BonjourAdvertiserSetTXTRecord()
{
  return MEMORY[0x270F23C78]();
}

uint64_t BonjourAdvertiserSetTrafficFlags()
{
  return MEMORY[0x270F23C80]();
}

uint64_t BonjourAdvertiserStart()
{
  return MEMORY[0x270F23C88]();
}

uint64_t BonjourAdvertiserStop()
{
  return MEMORY[0x270F23C90]();
}

uint64_t BonjourAdvertiserUpdate()
{
  return MEMORY[0x270F23C98]();
}

uint64_t BonjourAdvertiserUpdateLinkStatusNAN()
{
  return MEMORY[0x270F23CA0]();
}

uint64_t BonjourDevice_GetInt64()
{
  return MEMORY[0x270F23CE0]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

void *__cdecl CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint)
{
  return (void *)MEMORY[0x270EE4290](allocator, size, hint);
}

void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr)
{
}

uint64_t CFAppendPrintF()
{
  return MEMORY[0x270F23CF0]();
}

void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange)
{
}

uint64_t CFArrayAppendBytes()
{
  return MEMORY[0x270F23CF8]();
}

uint64_t CFArrayAppendInt64()
{
  return MEMORY[0x270F23D00]();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

uint64_t CFArrayApplyBlock()
{
  return MEMORY[0x270F23D08]();
}

Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x270EE42E8](theArray, range.location, range.length, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x270EE42F0](allocator, values, numValues, callBacks);
}

CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray)
{
  return (CFArrayRef)MEMORY[0x270EE42F8](allocator, theArray);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x270EE4300](allocator, capacity, callBacks);
}

uint64_t CFArrayEnsureCreatedAndAppend()
{
  return MEMORY[0x270F23D10]();
}

uint64_t CFArrayEnsureCreatedAndAppendCString()
{
  return MEMORY[0x270F23D18]();
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x270EE4320](theArray);
}

CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x270EE4338](theArray, range.location, range.length, value);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x270EE4348]();
}

uint64_t CFArrayGetTypedValueAtIndex()
{
  return MEMORY[0x270F23D20]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x270EE4360](theArray, idx);
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
}

void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
}

CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes)
{
  return (CFAttributedStringRef)MEMORY[0x270EE43B0](alloc, str, attributes);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x270EE4528]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x270EE4530](BOOLean);
}

CFStringRef CFCopyDescription(CFTypeRef cf)
{
  return (CFStringRef)MEMORY[0x270EE4788](cf);
}

uint64_t CFCreateWithPlistBytes()
{
  return MEMORY[0x270F23D28]();
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x270EE47C8](allocator, bytes, length);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x270EE47F0](allocator, bytes, length, bytesDeallocator);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x270EE4808](theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x270EE4820](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x270EE4838]();
}

CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
{
  return (CFDateRef)MEMORY[0x270EE4860](allocator, at);
}

CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
{
  MEMORY[0x270EE48C8](theDate);
  return result;
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x270EE48D8]();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

uint64_t CFDictionaryApplyBlock()
{
  return MEMORY[0x270F23D30]();
}

void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context)
{
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x270EE48F0](theDict, key);
}

Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value)
{
  return MEMORY[0x270EE4900](theDict, value);
}

uint64_t CFDictionaryCopyCString()
{
  return MEMORY[0x270F23D38]();
}

uint64_t CFDictionaryCopyKeys()
{
  return MEMORY[0x270F23D40]();
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x270EE4908](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x270EE4910](allocator, theDict);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x270EE4920](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return (CFMutableDictionaryRef)MEMORY[0x270EE4928](allocator, capacity, theDict);
}

uint64_t CFDictionaryGetCString()
{
  return MEMORY[0x270F23D48]();
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x270EE4930](theDict);
}

uint64_t CFDictionaryGetData()
{
  return MEMORY[0x270F23D50]();
}

uint64_t CFDictionaryGetDouble()
{
  return MEMORY[0x270F23D58]();
}

uint64_t CFDictionaryGetEmpty()
{
  return MEMORY[0x270F23D60]();
}

uint64_t CFDictionaryGetHardwareAddress()
{
  return MEMORY[0x270F23D68]();
}

uint64_t CFDictionaryGetInt64()
{
  return MEMORY[0x270F23D70]();
}

uint64_t CFDictionaryGetInt64Ranged()
{
  return MEMORY[0x270F23D78]();
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x270EE4948]();
}

uint64_t CFDictionaryGetTypedValue()
{
  return MEMORY[0x270F23D80]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x270EE4958](theDict, key);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return MEMORY[0x270EE4968](theDict, key, value);
}

uint64_t CFDictionaryMergeDictionary()
{
  return MEMORY[0x270F23D88]();
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

uint64_t CFDictionarySetCString()
{
  return MEMORY[0x270F23D90]();
}

uint64_t CFDictionarySetData()
{
  return MEMORY[0x270F23D98]();
}

uint64_t CFDictionarySetDouble()
{
  return MEMORY[0x270F23DA0]();
}

uint64_t CFDictionarySetInt64()
{
  return MEMORY[0x270F23DA8]();
}

uint64_t CFDictionarySetNumber()
{
  return MEMORY[0x270F23DB0]();
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x270EE4998](cf1, cf2);
}

CFAllocatorRef CFGetAllocator(CFTypeRef cf)
{
  return (CFAllocatorRef)MEMORY[0x270EE4A18](cf);
}

uint64_t CFGetCString()
{
  return MEMORY[0x270F23DB8]();
}

uint64_t CFGetDouble()
{
  return MEMORY[0x270F23DC0]();
}

uint64_t CFGetInt64()
{
  return MEMORY[0x270F23DC8]();
}

uint64_t CFGetInt64Ranged()
{
  return MEMORY[0x270F23DD0]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

CFHashCode CFHash(CFTypeRef cf)
{
  return MEMORY[0x270EE4A48](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B88]();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B98]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x270EE4BE8](allocator, theType, valuePtr);
}

uint64_t CFNumberCreateInt64()
{
  return MEMORY[0x270F23DE0]();
}

CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style)
{
  return (CFNumberFormatterRef)MEMORY[0x270EE4BF8](allocator, locale, style);
}

CFNumberRef CFNumberFormatterCreateNumberFromString(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options)
{
  return (CFNumberRef)MEMORY[0x270EE4C00](allocator, formatter, string, rangep, options);
}

uint64_t CFNumberGetObject()
{
  return MEMORY[0x270F23DE8]();
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x270EE4C58]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x270EE4C70](number, theType, valuePtr);
}

uint64_t CFObjectControlAsync()
{
  return MEMORY[0x270F23DF0]();
}

uint64_t CFObjectControlAsyncF()
{
  return MEMORY[0x270F23DF8]();
}

uint64_t CFObjectControlSync()
{
  return MEMORY[0x270F23E00]();
}

uint64_t CFObjectGetBytes()
{
  return MEMORY[0x270F23E08]();
}

uint64_t CFObjectGetCString()
{
  return MEMORY[0x270F23E10]();
}

uint64_t CFObjectGetInt64()
{
  return MEMORY[0x270F23E18]();
}

uint64_t CFObjectGetInt64Ranged()
{
  return MEMORY[0x270F23E20]();
}

uint64_t CFObjectGetPropertyCStringSync()
{
  return MEMORY[0x270F23E28]();
}

uint64_t CFObjectGetPropertyDoubleSync()
{
  return MEMORY[0x270F23E30]();
}

uint64_t CFObjectGetPropertyInt64Sync()
{
  return MEMORY[0x270F23E38]();
}

uint64_t CFObjectSetProperty()
{
  return MEMORY[0x270F23E40]();
}

uint64_t CFObjectSetPropertyCString()
{
  return MEMORY[0x270F23E48]();
}

uint64_t CFObjectSetPropertyDouble()
{
  return MEMORY[0x270F23E50]();
}

uint64_t CFObjectSetPropertyF()
{
  return MEMORY[0x270F23E58]();
}

uint64_t CFObjectSetPropertyInt64()
{
  return MEMORY[0x270F23E60]();
}

uint64_t CFObjectSetValue()
{
  return MEMORY[0x270F23E68]();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x270EE4C90](applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CC0](key, applicationID, userName, hostName);
}

uint64_t CFPrefs_GetInt64()
{
  return MEMORY[0x270F23E88]();
}

CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EE4D10](allocator, propertyList, format, options, error);
}

uint64_t CFPropertyListCreateFormatted()
{
  return MEMORY[0x270F23EB8]();
}

uint64_t CFPropertyListCreateFormattedVAList()
{
  return MEMORY[0x270F23EC0]();
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return (CFPropertyListRef)MEMORY[0x270EE4D40](allocator, data, options, format, error);
}

Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format)
{
  return MEMORY[0x270EE4D58](plist, format);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x270EE4E10](cf);
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
}

uint64_t CFSetApplyBlock()
{
  return MEMORY[0x270F23EC8]();
}

Boolean CFSetContainsValue(CFSetRef theSet, const void *value)
{
  return MEMORY[0x270EE4F48](theSet, value);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x270EE4F60](allocator, capacity, callBacks);
}

CFIndex CFSetGetCount(CFSetRef theSet)
{
  return MEMORY[0x270EE4F70](theSet);
}

void CFSetRemoveValue(CFMutableSetRef theSet, const void *value)
{
}

void CFSetSetValue(CFMutableSetRef theSet, const void *value)
{
}

void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString)
{
}

uint64_t CFStringAppendF()
{
  return MEMORY[0x270F23ED0]();
}

void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x270EE5048](theString1, theString2, compareOptions);
}

uint64_t CFStringCopyUTF8CString()
{
  return MEMORY[0x270F23ED8]();
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFStringRef)MEMORY[0x270EE5098](alloc, theString);
}

uint64_t CFStringCreateF()
{
  return MEMORY[0x270F23EE0]();
}

CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return (CFMutableStringRef)MEMORY[0x270EE50B0](alloc, maxLength);
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return (CFMutableStringRef)MEMORY[0x270EE50B8](alloc, maxLength, theString);
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return (CFStringRef)MEMORY[0x270EE50D0](alloc, bytes, numBytes, *(void *)&encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x270EE50D8](alloc, bytes, numBytes, *(void *)&encoding, isExternalRepresentation, contentsDeallocator);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x270EE50E0](alloc, cStr, *(void *)&encoding);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x270EE5110](alloc, formatOptions, format);
}

CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range)
{
  return (CFStringRef)MEMORY[0x270EE5128](alloc, str, range.location, range.length);
}

CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x270EE5150](theString, stringToFind, replacementString, rangeToSearch.location, rangeToSearch.length, compareOptions);
}

Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x270EE5160](theString, stringToFind, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x270EE5178](theString, buffer, bufferSize, *(void *)&encoding);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x270EE51D8](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x270EE5218]();
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return MEMORY[0x270EE5228](theString, prefix);
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return MEMORY[0x270EE5230](theString, suffix);
}

void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString)
{
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x270EE59A8](retstr, sx, sy);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x270EE5B50](space, components);
}

uint64_t CGColorCreateWithRGB()
{
  return MEMORY[0x270F23EE8]();
}

uint64_t CGColorGetBlack()
{
  return MEMORY[0x270F23EF0]();
}

uint64_t CGColorSpaceGetRGB()
{
  return MEMORY[0x270F23EF8]();
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

CGRect CGContextGetClipBoundingBox(CGContextRef c)
{
  MEMORY[0x270EE5FC8](c);
  result.size.height = v4;
  result.size.uint64_t width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetRGBStrokeColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetTextMatrix(CGContextRef c, CGAffineTransform *t)
{
}

void CGContextSetTextPosition(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextStrokeEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextStrokeLineSegments(CGContextRef c, const CGPoint *points, size_t count)
{
}

CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect a1)
{
  return (CFDictionaryRef)MEMORY[0x270EE7188]((__n128)a1.origin, *(__n128 *)&a1.origin.y, (__n128)a1.size, *(__n128 *)&a1.size.height);
}

BOOL CGSizeMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGSize *size)
{
  return MEMORY[0x270EE7350](dict, size);
}

OSStatus CMAudioFormatDescriptionCreate(CFAllocatorRef allocator, const AudioStreamBasicDescription *asbd, size_t layoutSize, const AudioChannelLayout *layout, size_t magicCookieSize, const void *magicCookie, CFDictionaryRef extensions, CMAudioFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x270EE7980](allocator, asbd, layoutSize, layout, magicCookieSize, magicCookie, extensions, formatDescriptionOut);
}

uint64_t CMBaseClassGetCFTypeID()
{
  return MEMORY[0x270EE79B0]();
}

uint64_t CMBaseGetClassID()
{
  return MEMORY[0x270EE79B8]();
}

uint64_t CMBaseObjectGetDerivedStorage()
{
  return MEMORY[0x270EE79C0]();
}

uint64_t CMBaseObjectGetProtocolVTable()
{
  return MEMORY[0x270EE79C8]();
}

uint64_t CMBaseObjectGetVTable()
{
  return MEMORY[0x270EE79D0]();
}

uint64_t CMBaseObjectIsMemberOfClass()
{
  return MEMORY[0x270EE79D8]();
}

OSStatus CMBlockBufferCopyDataBytes(CMBlockBufferRef theSourceBuffer, size_t offsetToData, size_t dataLength, void *destination)
{
  return MEMORY[0x270EE79F0](theSourceBuffer, offsetToData, dataLength, destination);
}

OSStatus CMBlockBufferCreateWithMemoryBlock(CFAllocatorRef structureAllocator, void *memoryBlock, size_t blockLength, CFAllocatorRef blockAllocator, const CMBlockBufferCustomBlockSource *customBlockSource, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x270EE7A08](structureAllocator, memoryBlock, blockLength, blockAllocator, customBlockSource, offsetToData, dataLength, *(void *)&flags);
}

size_t CMBlockBufferGetDataLength(CMBlockBufferRef theBuffer)
{
  return MEMORY[0x270EE7A20](theBuffer);
}

CMTime *__cdecl CMClockMakeHostTimeFromSystemUnits(CMTime *__return_ptr retstr, uint64_t hostTime)
{
  return (CMTime *)MEMORY[0x270EE7AB8](retstr, hostTime);
}

uint64_t CMDerivedObjectCreate()
{
  return MEMORY[0x270EE7AD0]();
}

CFPropertyListRef CMFormatDescriptionGetExtension(CMFormatDescriptionRef desc, CFStringRef extensionKey)
{
  return (CFPropertyListRef)MEMORY[0x270EE7AF0](desc, extensionKey);
}

FourCharCode CMFormatDescriptionGetMediaSubType(CMFormatDescriptionRef desc)
{
  return MEMORY[0x270EE7B10](desc);
}

uint64_t CMNotificationCenterAddListener()
{
  return MEMORY[0x270EE7B80]();
}

uint64_t CMNotificationCenterGetDefaultLocalCenter()
{
  return MEMORY[0x270EE7B88]();
}

uint64_t CMNotificationCenterPostNotification()
{
  return MEMORY[0x270EE7B90]();
}

uint64_t CMNotificationCenterRemoveListener()
{
  return MEMORY[0x270EE7BA0]();
}

OSStatus CMSampleBufferCreate(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, Boolean dataReady, CMSampleBufferMakeDataReadyCallback makeDataReadyCallback, void *makeDataReadyRefcon, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMItemCount numSampleTimingEntries, const CMSampleTimingInfo *sampleTimingArray, CMItemCount numSampleSizeEntries, const size_t *sampleSizeArray, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x270EE7BD0](allocator, dataBuffer, dataReady, makeDataReadyCallback, makeDataReadyRefcon, formatDescription, numSamples, numSampleTimingEntries);
}

CFArrayRef CMSampleBufferGetSampleAttachmentsArray(CMSampleBufferRef sbuf, Boolean createIfNecessary)
{
  return (CFArrayRef)MEMORY[0x270EE7C88](sbuf, createIfNecessary);
}

void CMSetAttachment(CMAttachmentBearerRef target, CFStringRef key, CFTypeRef value, CMAttachmentMode attachmentMode)
{
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x270EE7DD0](time1, time2);
}

CFDictionaryRef CMTimeCopyAsDictionary(CMTime *time, CFAllocatorRef allocator)
{
  return (CFDictionaryRef)MEMORY[0x270EE7DE0](time, allocator);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  MEMORY[0x270EE7E08](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x270EE7E10](retstr, value, *(void *)&timescale);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x270EE7E38](retstr, *(void *)&preferredTimescale, seconds);
}

CTFontRef CTFontCreateWithName(CFStringRef name, CGFloat size, const CGAffineTransform *matrix)
{
  return (CTFontRef)MEMORY[0x270EE9AF8](name, matrix, size);
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTLineRef)MEMORY[0x270EE9D70](attrString);
}

void CTLineDraw(CTLineRef line, CGContextRef context)
{
}

CGRect CTLineGetImageBounds(CTLineRef line, CGContextRef context)
{
  MEMORY[0x270EE9DC8](line, context);
  result.size.height = v5;
  result.size.uint64_t width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

double CTLineGetPenOffsetForFlush(CTLineRef line, CGFloat flushFactor, double flushWidth)
{
  MEMORY[0x270EE9DD8](line, flushFactor, flushWidth);
  return result;
}

uint64_t CUSetSystemName()
{
  return MEMORY[0x270F24000]();
}

uint64_t CopyEDIDbyUUID()
{
  return MEMORY[0x270F240B8]();
}

uint64_t CoreAudioRampParameterStart()
{
  return MEMORY[0x270F240C0]();
}

uint64_t CreateBinaryTXTRecordFromTXTRecordBytes()
{
  return MEMORY[0x270F0C0E8]();
}

uint64_t CreateCAContextForRemoteHosting()
{
  return MEMORY[0x270F240C8]();
}

uint64_t DMAPContentBlock_GetNextChunk()
{
  return MEMORY[0x270F240F8]();
}

DNSServiceErrorType DNSServiceProcessResult(DNSServiceRef sdRef)
{
  return MEMORY[0x270ED7BD8](sdRef);
}

void DNSServiceRefDeallocate(DNSServiceRef sdRef)
{
}

dnssd_sock_t DNSServiceRefSockFD(DNSServiceRef sdRef)
{
  return MEMORY[0x270ED7BF8](sdRef);
}

DNSServiceErrorType DNSServiceResolve(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *name, const char *regtype, const char *domain, DNSServiceResolveReply callBack, void *context)
{
  return MEMORY[0x270ED7C10](sdRef, *(void *)&flags, *(void *)&interfaceIndex, name, regtype, domain, callBack, context);
}

uint64_t DataBuffer_AppendF()
{
  return MEMORY[0x270F24100]();
}

uint64_t DataBuffer_AppendFile()
{
  return MEMORY[0x270F24108]();
}

uint64_t DataBuffer_Commit()
{
  return MEMORY[0x270F24118]();
}

uint64_t DataBuffer_Free()
{
  return MEMORY[0x270F24128]();
}

uint64_t DataBuffer_Init()
{
  return MEMORY[0x270F24130]();
}

uint64_t DataBuffer_RunProcessAndAppendOutput()
{
  return MEMORY[0x270F24138]();
}

uint64_t DataToHexCStringEx()
{
  return MEMORY[0x270F24140]();
}

uint64_t DebugIPC_EnsureFinalized()
{
  return MEMORY[0x270F24150]();
}

uint64_t DebugIPC_EnsureInitialized()
{
  return MEMORY[0x270F24158]();
}

OSStatus DisposeAUGraph(AUGraph inGraph)
{
  return MEMORY[0x270EE2348](inGraph);
}

uint64_t DrainUDPSocket()
{
  return MEMORY[0x270F24160]();
}

uint64_t FPrintF()
{
  return MEMORY[0x270F24168]();
}

uint64_t FVDUtilsEncryptedDecodeSupported()
{
  return MEMORY[0x270EF5C90]();
}

uint64_t FVDUtilsGetTempDirectory()
{
  return MEMORY[0x270EF5C98]();
}

uint64_t FadeOutLayerThruBlack()
{
  return MEMORY[0x270F24170]();
}

uint64_t FatalErrorF()
{
  return MEMORY[0x270F24178]();
}

uint64_t FigCFArrayGetInt64AtIndex()
{
  return MEMORY[0x270EE8018]();
}

uint64_t FigCFDictionaryCopyArrayOfValues()
{
  return MEMORY[0x270EE8020]();
}

uint64_t FigCFDictionaryCreateMutableCopy()
{
  return MEMORY[0x270EE8028]();
}

uint64_t FigCFDictionaryGetBooleanIfPresent()
{
  return MEMORY[0x270EE8030]();
}

uint64_t FigCFDictionaryGetCGSizeIfPresent()
{
  return MEMORY[0x270EE8040]();
}

uint64_t FigCFDictionaryGetCount()
{
  return MEMORY[0x270EE8050]();
}

uint64_t FigCFDictionaryGetDoubleIfPresent()
{
  return MEMORY[0x270EE8058]();
}

uint64_t FigCFDictionaryGetInt32IfPresent()
{
  return MEMORY[0x270EE8068]();
}

uint64_t FigCFDictionaryGetInt64IfPresent()
{
  return MEMORY[0x270EE8070]();
}

uint64_t FigCFDictionaryGetIntIfPresent()
{
  return MEMORY[0x270EE8078]();
}

uint64_t FigCFDictionaryGetValue()
{
  return MEMORY[0x270EE8080]();
}

uint64_t FigCFDictionaryGetValueIfPresent()
{
  return MEMORY[0x270EE8088]();
}

uint64_t FigCFDictionarySetCGSize()
{
  return MEMORY[0x270EE8090]();
}

uint64_t FigCFDictionarySetDouble()
{
  return MEMORY[0x270EE80A0]();
}

uint64_t FigCFDictionarySetFloat32()
{
  return MEMORY[0x270EE80A8]();
}

uint64_t FigCFDictionarySetInt32()
{
  return MEMORY[0x270EE80B0]();
}

uint64_t FigCFDictionarySetInt64()
{
  return MEMORY[0x270EE80B8]();
}

uint64_t FigCFDictionarySetValue()
{
  return MEMORY[0x270EE80C0]();
}

uint64_t FigCFDictionarySetValueFromKeyInDict()
{
  return MEMORY[0x270EE80C8]();
}

uint64_t FigCFEqual()
{
  return MEMORY[0x270EE80D0]();
}

uint64_t FigCFNumberCreateSInt32()
{
  return MEMORY[0x270EE80E0]();
}

uint64_t FigCFNumberCreateUInt32()
{
  return MEMORY[0x270EE80E8]();
}

uint64_t FigCFNumberCreateUInt64()
{
  return MEMORY[0x270EE80F0]();
}

uint64_t FigCFNumberGetSInt32()
{
  return MEMORY[0x270EE8100]();
}

uint64_t FigCFNumberGetUInt64()
{
  return MEMORY[0x270EE8108]();
}

uint64_t FigCFStringGetCStringPtrAndBufferToFree()
{
  return MEMORY[0x270EE8110]();
}

uint64_t FigCFWeakReferenceHolderCopyReferencedObject()
{
  return MEMORY[0x270EE8118]();
}

uint64_t FigCFWeakReferenceHolderCreateWithReferencedObject()
{
  return MEMORY[0x270EE8120]();
}

uint64_t FigCFWeakReferenceTableAddValueAndGetKey()
{
  return MEMORY[0x270EE8138]();
}

uint64_t FigCFWeakReferenceTableCreate()
{
  return MEMORY[0x270EE8148]();
}

uint64_t FigCFWeakReferenceTableRemoveValue()
{
  return MEMORY[0x270EE8150]();
}

uint64_t FigCPEProtectorRemoteCreateForScheme()
{
  return MEMORY[0x270EF5CA8]();
}

uint64_t FigCreateCFDataFromCFPropertyList()
{
  return MEMORY[0x270EE8170]();
}

uint64_t FigDispatchQueueCreateWithPriority()
{
  return MEMORY[0x270EE81A8]();
}

uint64_t FigEndpointExtendedGetClassID()
{
  return MEMORY[0x270EE81D0]();
}

uint64_t FigEndpointGetCMBaseObject()
{
  return MEMORY[0x270EE81D8]();
}

uint64_t FigGetCFPreferenceDoubleWithDefault()
{
  return MEMORY[0x270EE8240]();
}

uint64_t FigGetCFPreferenceNumberWithDefault()
{
  return MEMORY[0x270EE8248]();
}

uint64_t FigGetIOSurfaceTimingStatsFromTimingInfoDictionary()
{
  return MEMORY[0x270EF5D30]();
}

uint64_t FigHEVCBridge_GetHEVCParameterSetAtIndex()
{
  return MEMORY[0x270EE8298]();
}

uint64_t FigHEVCBridge_GetSPSChromaFormatAndBitDepths()
{
  return MEMORY[0x270EE82B8]();
}

uint64_t FigNotificationCenterAddWeakListener()
{
  return MEMORY[0x270EE8300]();
}

uint64_t FigNotificationCenterRemoveWeakListener()
{
  return MEMORY[0x270EE8308]();
}

uint64_t FigPKDStartAirPlayReceiverSession()
{
  return MEMORY[0x270EF5D40]();
}

uint64_t FigPKDStopAirPlayReceiverSession()
{
  return MEMORY[0x270EF5D48]();
}

uint64_t FigPWDKeyExchangeReceiverCreate()
{
  return MEMORY[0x270EF5D50]();
}

uint64_t FigPWDKeyExchangeReceiverGetTypeID()
{
  return MEMORY[0x270EF5D58]();
}

uint64_t FigRouteDiscovererXPCRemoteCreate()
{
  return MEMORY[0x270F49AE0]();
}

uint64_t FigRoutingContextRemoteCreateControlChannelOnlyContext()
{
  return MEMORY[0x270F49AE8]();
}

uint64_t FigSemaphoreCreate()
{
  return MEMORY[0x270EE8358]();
}

uint64_t FigSemaphoreDestroy()
{
  return MEMORY[0x270EE8360]();
}

uint64_t FigSemaphoreSignal()
{
  return MEMORY[0x270EE8368]();
}

uint64_t FigSemaphoreWaitRelative()
{
  return MEMORY[0x270EE8370]();
}

uint64_t FigSimpleMutexCheckIsNotLockedOnThisThread()
{
  return MEMORY[0x270EE8388]();
}

uint64_t FigSimpleMutexCreate()
{
  return MEMORY[0x270EE8390]();
}

uint64_t FigSimpleMutexDestroy()
{
  return MEMORY[0x270EE8398]();
}

uint64_t FigSimpleMutexLock()
{
  return MEMORY[0x270EE83A0]();
}

uint64_t FigSimpleMutexUnlock()
{
  return MEMORY[0x270EE83A8]();
}

uint64_t FigSupportsIOSurfaceTimingInfo()
{
  return MEMORY[0x270EF5D78]();
}

uint64_t FigThreadCreate()
{
  return MEMORY[0x270EE8400]();
}

uint64_t FigThreadGetMachThreadPriorityValue()
{
  return MEMORY[0x270EE8408]();
}

uint64_t FigThreadJoin()
{
  return MEMORY[0x270EE8410]();
}

uint64_t FigThreadSetProperty()
{
  return MEMORY[0x270EE8420]();
}

uint64_t FigTransportGetCMBaseObject()
{
  return MEMORY[0x270EE8428]();
}

uint64_t FigValeriaGetCMBaseObject()
{
  return MEMORY[0x270EF5D88]();
}

uint64_t FigValeriaGetTypeID()
{
  return MEMORY[0x270EF5D98]();
}

uint64_t FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom()
{
  return MEMORY[0x270EE8438]();
}

uint64_t FigVideoQueueCreate()
{
  return MEMORY[0x270EF5DA0]();
}

uint64_t FigVideoQueueGetCMBaseObject()
{
  return MEMORY[0x270EF5DA8]();
}

uint64_t FigVirtualDisplaySinkFileWriterCreate()
{
  return MEMORY[0x270EF5DC0]();
}

uint64_t FigVirtualDisplaySinkGetCMBaseObject()
{
  return MEMORY[0x270EF5DC8]();
}

uint64_t GestaltGetBoolean()
{
  return MEMORY[0x270F24188]();
}

uint64_t GestaltGetCString()
{
  return MEMORY[0x270F24190]();
}

uint64_t GetDeviceInternalModelString()
{
  return MEMORY[0x270F241B0]();
}

uint64_t GetDeviceModelString()
{
  return MEMORY[0x270F241B8]();
}

uint64_t GetDeviceName()
{
  return MEMORY[0x270F241C0]();
}

uint64_t GetDeviceUniqueID()
{
  return MEMORY[0x270F241C8]();
}

uint64_t GetFairPlayHWInfo()
{
  return MEMORY[0x270F241D0]();
}

uint64_t GetPeerMACAddress()
{
  return MEMORY[0x270F241E8]();
}

uint64_t GetSystemBuildVersionString()
{
  return MEMORY[0x270F24200]();
}

uint64_t GvMGlTNs()
{
  return MEMORY[0x270F0C0F8]();
}

uint64_t HTTPClientCreateWithSocket()
{
  return MEMORY[0x270F24228]();
}

uint64_t HTTPClientGetClientID()
{
  return MEMORY[0x270F24230]();
}

uint64_t HTTPClientGetPeerAddress()
{
  return MEMORY[0x270F24238]();
}

uint64_t HTTPClientInvalidate()
{
  return MEMORY[0x270F24240]();
}

uint64_t HTTPClientSendMessage()
{
  return MEMORY[0x270F24248]();
}

uint64_t HTTPClientSetConnectionLogging()
{
  return MEMORY[0x270F24250]();
}

uint64_t HTTPClientSetDelegate()
{
  return MEMORY[0x270F24258]();
}

uint64_t HTTPClientSetDispatchQueue()
{
  return MEMORY[0x270F24268]();
}

uint64_t HTTPClientSetFlags()
{
  return MEMORY[0x270F24270]();
}

uint64_t HTTPClientSetLogging()
{
  return MEMORY[0x270F24278]();
}

uint64_t HTTPClientSetTimeout()
{
  return MEMORY[0x270F24280]();
}

uint64_t HTTPClientSetTransportDelegate()
{
  return MEMORY[0x270F24288]();
}

uint64_t HTTPConnectionDetach()
{
  return MEMORY[0x270F24290]();
}

uint64_t HTTPConnectionSendResponse()
{
  return MEMORY[0x270F24298]();
}

uint64_t HTTPConnectionSetDelegate()
{
  return MEMORY[0x270F242A0]();
}

uint64_t HTTPConnectionSetTransportDelegate()
{
  return MEMORY[0x270F242A8]();
}

uint64_t HTTPConnectionStop()
{
  return MEMORY[0x270F242B0]();
}

uint64_t HTTPGetHeaderField()
{
  return MEMORY[0x270F242B8]();
}

uint64_t HTTPHeader_InitRequest()
{
  return MEMORY[0x270F242C8]();
}

uint64_t HTTPHeader_InitResponse()
{
  return MEMORY[0x270F242D8]();
}

uint64_t HTTPHeader_Parse()
{
  return MEMORY[0x270F242E0]();
}

uint64_t HTTPHeader_SetField()
{
  return MEMORY[0x270F242E8]();
}

uint64_t HTTPMakeDateString()
{
  return MEMORY[0x270F242F0]();
}

uint64_t HTTPMakeTimedNonce()
{
  return MEMORY[0x270F242F8]();
}

uint64_t HTTPMessageCreate()
{
  return MEMORY[0x270F24300]();
}

uint64_t HTTPMessageCreateDictionary()
{
  return MEMORY[0x270F24308]();
}

uint64_t HTTPMessageGetOrCopyFormVariable()
{
  return MEMORY[0x270F24310]();
}

uint64_t HTTPMessageSetBody()
{
  return MEMORY[0x270F24318]();
}

uint64_t HTTPParseParameter()
{
  return MEMORY[0x270F24330]();
}

uint64_t HTTPParseRTPInfo()
{
  return MEMORY[0x270F24338]();
}

uint64_t HTTPReadHeader()
{
  return MEMORY[0x270F24340]();
}

uint64_t HTTPScanFHeaderValue()
{
  return MEMORY[0x270F24348]();
}

uint64_t HTTPServerCreate()
{
  return MEMORY[0x270F24350]();
}

uint64_t HTTPServerSetDispatchQueue()
{
  return MEMORY[0x270F24358]();
}

uint64_t HTTPVerifyAuthorization()
{
  return MEMORY[0x270F24390]();
}

uint64_t HTTPVerifyTimedNonce()
{
  return MEMORY[0x270F24398]();
}

uint64_t HardwareAddressToCString()
{
  return MEMORY[0x270F243A0]();
}

IOReturn IOPMAssertionCreateWithName(CFStringRef AssertionType, IOPMAssertionLevel AssertionLevel, CFStringRef AssertionName, IOPMAssertionID *AssertionID)
{
  return MEMORY[0x270EF4840](AssertionType, *(void *)&AssertionLevel, AssertionName, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return MEMORY[0x270EF4868](*(void *)&AssertionID);
}

uint64_t IPv4AddressToCString()
{
  return MEMORY[0x270F243B0]();
}

uint64_t IsAppleInternalBuild()
{
  return MEMORY[0x270F243B8]();
}

uint64_t IsAppleTV()
{
  return MEMORY[0x270F243C0]();
}

uint64_t KUY675K4ryxHGzD5GVD()
{
  return MEMORY[0x270F0C100]();
}

uint64_t LogControl()
{
  return MEMORY[0x270F243E0]();
}

uint64_t LogControlCF()
{
  return MEMORY[0x270F243E8]();
}

uint64_t LogHTTP()
{
  return MEMORY[0x270F243F0]();
}

uint64_t LogPrintF()
{
  return MEMORY[0x270F243F8]();
}

uint64_t LogSetAppID()
{
  return MEMORY[0x270F24408]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

uint64_t MillisecondsToUpTicks()
{
  return MEMORY[0x270F24448]();
}

uint64_t NSErrorToOSStatus()
{
  return MEMORY[0x270F244B0]();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x270EF2BD8](directory, domainMask, expandTilde);
}

uint64_t NTPtoUpTicks()
{
  return MEMORY[0x270F244F8]();
}

uint64_t NetPerfCreate()
{
  return MEMORY[0x270F24508]();
}

uint64_t NetSocketChaCha20Poly1305Configure()
{
  return MEMORY[0x270F24510]();
}

uint64_t NetSocket_Cancel()
{
  return MEMORY[0x270F24528]();
}

uint64_t NetSocket_Create()
{
  return MEMORY[0x270F24530]();
}

uint64_t NetSocket_CreateWithNative()
{
  return MEMORY[0x270F24538]();
}

uint64_t NetSocket_Delete()
{
  return MEMORY[0x270F24540]();
}

uint64_t NetSocket_Disconnect()
{
  return MEMORY[0x270F24548]();
}

uint64_t NetSocket_GetNative()
{
  return MEMORY[0x270F24550]();
}

uint64_t NetSocket_TCPConnect()
{
  return MEMORY[0x270F24560]();
}

uint64_t NetSocket_Wait()
{
  return MEMORY[0x270F24568]();
}

uint64_t NetTransportChaCha20Poly1305Configure()
{
  return MEMORY[0x270F24570]();
}

uint64_t NetTransportGCMConfigure()
{
  return MEMORY[0x270F24578]();
}

OSStatus NewAUGraph(AUGraph *outGraph)
{
  return MEMORY[0x270EE2460](outGraph);
}

uint64_t OpenSelfConnectedLoopbackSocket()
{
  return MEMORY[0x270F245A0]();
}

uint64_t PCFdAVst()
{
  return MEMORY[0x270F0C108]();
}

uint64_t PHDcW8()
{
  return MEMORY[0x270F0C110]();
}

uint64_t PIDInit()
{
  return MEMORY[0x270F245A8]();
}

uint64_t PIDUpdate()
{
  return MEMORY[0x270F245B0]();
}

uint64_t PairingSessionCopyIdentity()
{
  return MEMORY[0x270F245B8]();
}

uint64_t PairingSessionCreate()
{
  return MEMORY[0x270F245C0]();
}

uint64_t PairingSessionDeletePeer()
{
  return MEMORY[0x270F245C8]();
}

uint64_t PairingSessionDeriveKey()
{
  return MEMORY[0x270F245D0]();
}

uint64_t PairingSessionExchange()
{
  return MEMORY[0x270F245D8]();
}

uint64_t PairingSessionSetACL()
{
  return MEMORY[0x270F245E0]();
}

uint64_t PairingSessionSetFlags()
{
  return MEMORY[0x270F245E8]();
}

uint64_t PairingSessionSetKeychainInfo()
{
  return MEMORY[0x270F245F0]();
}

uint64_t PairingSessionSetLogging()
{
  return MEMORY[0x270F245F8]();
}

uint64_t PairingSessionSetSetupCode()
{
  return MEMORY[0x270F24600]();
}

uint64_t PairingSessionSetSignBytesHandler_b()
{
  return MEMORY[0x270F24608]();
}

uint64_t PairingSessionSetVerifySignatureHandler_b()
{
  return MEMORY[0x270F24610]();
}

uint64_t ParseFractionalDateString()
{
  return MEMORY[0x270F24620]();
}

uint64_t RandomBytes()
{
  return MEMORY[0x270F24630]();
}

uint64_t RandomString()
{
  return MEMORY[0x270F24638]();
}

uint64_t RemovePath()
{
  return MEMORY[0x270F24640]();
}

uint64_t SDPFindAttribute()
{
  return MEMORY[0x270F24650]();
}

uint64_t SDPFindMediaSection()
{
  return MEMORY[0x270F24658]();
}

uint64_t SDPFindParameter()
{
  return MEMORY[0x270F24660]();
}

uint64_t SDPFindSessionSection()
{
  return MEMORY[0x270F24668]();
}

uint64_t SDPFindType()
{
  return MEMORY[0x270F24670]();
}

uint64_t SNPrintF()
{
  return MEMORY[0x270F24678]();
}

uint64_t SNScanF()
{
  return MEMORY[0x270F24680]();
}

uint64_t SecondsToUpTicks()
{
  return MEMORY[0x270F24688]();
}

uint64_t SendSelfConnectedLoopbackMessage()
{
  return MEMORY[0x270F24698]();
}

uint64_t ServerSocketOpen()
{
  return MEMORY[0x270F246A0]();
}

uint64_t SetCurrentThreadPriority()
{
  return MEMORY[0x270F246A8]();
}

uint64_t SockAddrCopy()
{
  return MEMORY[0x270F246C0]();
}

uint64_t SockAddrGetSize()
{
  return MEMORY[0x270F246D0]();
}

uint64_t SockAddrSetPort()
{
  return MEMORY[0x270F246D8]();
}

uint64_t SockAddrToDeviceID()
{
  return MEMORY[0x270F246E0]();
}

uint64_t SockAddrToString()
{
  return MEMORY[0x270F246E8]();
}

uint64_t SocketAccept()
{
  return MEMORY[0x270F246F0]();
}

uint64_t SocketRecvFrom()
{
  return MEMORY[0x270F24700]();
}

uint64_t SocketSetKeepAlive()
{
  return MEMORY[0x270F24708]();
}

uint64_t SocketSetKeepAliveEx()
{
  return MEMORY[0x270F24710]();
}

uint64_t SocketSetP2P()
{
  return MEMORY[0x270F24718]();
}

uint64_t SocketSetPacketTimestamps()
{
  return MEMORY[0x270F24720]();
}

uint64_t SocketSetQoS()
{
  return MEMORY[0x270F24728]();
}

uint64_t SocketWriteData()
{
  return MEMORY[0x270F24730]();
}

uint64_t SourceVersionToCString()
{
  return MEMORY[0x270F24738]();
}

uint64_t SrtySZG0()
{
  return MEMORY[0x270F0C118]();
}

uint64_t StringToSockAddr()
{
  return MEMORY[0x270F24740]();
}

uint64_t StringToUUID()
{
  return MEMORY[0x270F24748]();
}

uint64_t Swap16Mem()
{
  return MEMORY[0x270F24750]();
}

void TXTRecordCreate(TXTRecordRef *txtRecord, uint16_t bufferLen, void *buffer)
{
}

void TXTRecordDeallocate(TXTRecordRef *txtRecord)
{
}

const void *__cdecl TXTRecordGetBytesPtr(const TXTRecordRef *txtRecord)
{
  return (const void *)MEMORY[0x270ED7CA8](txtRecord);
}

uint16_t TXTRecordGetLength(const TXTRecordRef *txtRecord)
{
  return MEMORY[0x270ED7CC0](txtRecord);
}

const void *__cdecl TXTRecordGetValuePtr(uint16_t txtLen, const void *txtRecord, const char *key, uint8_t *valueLen)
{
  return (const void *)MEMORY[0x270ED7CC8](txtLen, txtRecord, key, valueLen);
}

DNSServiceErrorType TXTRecordSetValue(TXTRecordRef *txtRecord, const char *key, uint8_t valueSize, const void *value)
{
  return MEMORY[0x270ED7CD0](txtRecord, key, valueSize, value);
}

uint64_t TextToHardwareAddress()
{
  return MEMORY[0x270F247B0]();
}

uint64_t TextToHardwareAddressScalar()
{
  return MEMORY[0x270F247B8]();
}

uint64_t TextToInt32()
{
  return MEMORY[0x270F247C0]();
}

uint64_t TextToSourceVersion()
{
  return MEMORY[0x270F247C8]();
}

uint64_t TruncateUTF8()
{
  return MEMORY[0x270F247D0]();
}

uint64_t URLGetNextPathSegment()
{
  return MEMORY[0x270F247D8]();
}

uint64_t URLGetOrCopyNextVariable()
{
  return MEMORY[0x270F247E0]();
}

uint64_t UUIDGet()
{
  return MEMORY[0x270F247E8]();
}

uint64_t UUIDtoCString()
{
  return MEMORY[0x270F247F0]();
}

uint64_t UpTicksPerSecond()
{
  return MEMORY[0x270F247F8]();
}

uint64_t UpTicksToMilliseconds()
{
  return MEMORY[0x270F24808]();
}

uint64_t UpTicksToNanoseconds()
{
  return MEMORY[0x270F24818]();
}

uint64_t UpTicksToSeconds()
{
  return MEMORY[0x270F24820]();
}

uint64_t UpTicksToSecondsF()
{
  return MEMORY[0x270F24828]();
}

uint64_t VASPrintF()
{
  return MEMORY[0x270F24830]();
}

uint64_t VBAEFt()
{
  return MEMORY[0x270F0C120]();
}

uint64_t WriteStackshotReport_async()
{
  return MEMORY[0x270F24B70]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFRuntimeCreateInstance()
{
  return MEMORY[0x270EE56F0]();
}

uint64_t _CFRuntimeRegisterClass()
{
  return MEMORY[0x270EE5700]();
}

uint64_t _LogCategory_Initialize()
{
  return MEMORY[0x270F24858]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int __darwin_check_fd_set_overflow(int a1, const void *a2, int a3)
{
  return MEMORY[0x270ED7DA8](*(void *)&a1, a2, *(void *)&a3);
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

float __exp10f(float a1)
{
  MEMORY[0x270ED7DD0](a1);
  return result;
}

uint64_t __memcpy_chk()
{
  return MEMORY[0x270ED7E38]();
}

int __sprintf_chk(char *a1, int a2, size_t a3, const char *a4, ...)
{
  return MEMORY[0x270ED7EB0](a1, *(void *)&a2, a3, a4);
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x270ED7EE0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x270ED8070]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x270ED85E0]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t chacha20_poly1305_add_aad()
{
  return MEMORY[0x270F24878]();
}

uint64_t chacha20_poly1305_decrypt()
{
  return MEMORY[0x270F24880]();
}

uint64_t chacha20_poly1305_init_64x64()
{
  return MEMORY[0x270F248B8]();
}

uint64_t chacha20_poly1305_verify()
{
  return MEMORY[0x270F248C0]();
}

int close(int a1)
{
  return MEMORY[0x270ED8F18](*(void *)&a1);
}

int connect(int a1, const sockaddr *a2, socklen_t a3)
{
  return MEMORY[0x270ED8F58](*(void *)&a1, a2, *(void *)&a3);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
}

size_t dispatch_data_get_size(dispatch_data_t data)
{
  return MEMORY[0x270ED9300](data);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x270ED9318](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9458](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_retain(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x270ED94C8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x270ED94D0](dsema, timeout);
}

void dispatch_set_context(dispatch_object_t object, void *context)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x270ED9510](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x270ED9518](source);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_cancel_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_sync_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x270ED95A8](when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

void free(void *a1)
{
}

uint64_t gQblcfSzZBQsYCCV()
{
  return MEMORY[0x270F0C138]();
}

int getpeername(int a1, sockaddr *a2, socklen_t *a3)
{
  return MEMORY[0x270ED9CD0](*(void *)&a1, a2, a3);
}

pid_t getpid(void)
{
  return MEMORY[0x270ED9CE0]();
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x270ED9D00]();
}

int getsockname(int a1, sockaddr *a2, socklen_t *a3)
{
  return MEMORY[0x270ED9D88](*(void *)&a1, a2, a3);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x270ED9D98](a1, a2);
}

int glob(const char *a1, int a2, int (__cdecl *a3)(const char *, int), glob_t *a4)
{
  return MEMORY[0x270ED9DC8](a1, *(void *)&a2, a3, a4);
}

void globfree(glob_t *a1)
{
}

uint64_t h4BvW7X()
{
  return MEMORY[0x270F0C140]();
}

unsigned int if_nametoindex(const char *a1)
{
  return MEMORY[0x270ED9E80](a1);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x270ED9F50]();
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x270EDA138]();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x270EDA190](msg, *(void *)&option, *(void *)&send_size, *(void *)&rcv_size, *(void *)&rcv_name, *(void *)&timeout, *(void *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA388](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x270EDA458](__s, *(void *)&__c, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x270EDA4E8]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

long double modf(long double __x, long double *__y)
{
  MEMORY[0x270EDA5A8](__y, __x);
  return result;
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x270EDA748](*(void *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x270EDA760](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x270EDA768](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x270EDA798](*(void *)&token, state64);
}

uint64_t nw_activity_activate()
{
  return MEMORY[0x270EF7998]();
}

uint64_t nw_activity_complete_with_reason()
{
  return MEMORY[0x270EF79A8]();
}

uint64_t nw_activity_create()
{
  return MEMORY[0x270EF79C8]();
}

void nw_release(void *obj)
{
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

{
  MEMORY[0x270F9A570](context);
}

{
  return (void *)MEMORY[0x270F9A588]();
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x270F9A598](exc_buf);
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeak(id *location)
{
  return (id)MEMORY[0x270F9A6A0](location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x270F9A728]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

uint64_t os_transaction_create()
{
  return MEMORY[0x270EDAA90]();
}

uint64_t proc_set_wakemon_params()
{
  return MEMORY[0x270EDADC8]();
}

int pthread_cond_destroy(pthread_cond_t *a1)
{
  return MEMORY[0x270EDAE58](a1);
}

int pthread_cond_init(pthread_cond_t *a1, const pthread_condattr_t *a2)
{
  return MEMORY[0x270EDAE60](a1, a2);
}

int pthread_cond_signal(pthread_cond_t *a1)
{
  return MEMORY[0x270EDAE68](a1);
}

int pthread_cond_wait(pthread_cond_t *a1, pthread_mutex_t *a2)
{
  return MEMORY[0x270EDAE88](a1, a2);
}

int pthread_create(pthread_t *a1, const pthread_attr_t *a2, void *(__cdecl *a3)(void *), void *a4)
{
  return MEMORY[0x270EDAEA0](a1, a2, a3, a4);
}

int pthread_join(pthread_t a1, void **a2)
{
  return MEMORY[0x270EDAF10](a1, a2);
}

int pthread_main_np(void)
{
  return MEMORY[0x270EDAF40]();
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF50](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x270EDAF58](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF60](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x270EDAF70](a1);
}

int pthread_once(pthread_once_t *a1, void (*a2)(void))
{
  return MEMORY[0x270EDAFA0](a1, a2);
}

int pthread_setname_np(const char *a1)
{
  return MEMORY[0x270EDB038](a1);
}

BOOL remove(const std::__fs::filesystem::path *__p, std::error_code *__ec)
{
  return MEMORY[0x270EDB1E8](__p, __ec);
}

int select(int a1, fd_set *a2, fd_set *a3, fd_set *a4, timeval *a5)
{
  return MEMORY[0x270EDB328](*(void *)&a1, a2, a3, a4, a5);
}

ssize_t send(int a1, const void *a2, size_t a3, int a4)
{
  return MEMORY[0x270EDB3B0](*(void *)&a1, a2, a3, *(void *)&a4);
}

ssize_t sendto(int a1, const void *a2, size_t a3, int a4, const sockaddr *a5, socklen_t a6)
{
  return MEMORY[0x270EDB3C0](*(void *)&a1, a2, a3, *(void *)&a4, a5, *(void *)&a6);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return MEMORY[0x270EDB440](*(void *)&a1, *(void *)&a2, *(void *)&a3, a4, *(void *)&a5);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return (void (__cdecl *)(int))MEMORY[0x270EDB4D0](*(void *)&a1, a2);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x270EDB508](*(void *)&a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x270EDB510](__str, __size, __format);
}

uint64_t snprintf_add()
{
  return MEMORY[0x270F248D0]();
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x270EDB560](a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

uint64_t strcmp_prefix()
{
  return MEMORY[0x270F248D8]();
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x270EDB5D0](__s1);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x270EDB600](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

uint64_t strncasestr()
{
  return MEMORY[0x270F248E8]();
}

uint64_t strncmp_prefix()
{
  return MEMORY[0x270F248F0]();
}

uint64_t strncmpx()
{
  return MEMORY[0x270F248F8]();
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x270EDB648](__dst, __src, __n);
}

uint64_t strnicmp_prefix()
{
  return MEMORY[0x270F24900]();
}

uint64_t strnicmp_suffix()
{
  return MEMORY[0x270F24908]();
}

uint64_t strnicmpx()
{
  return MEMORY[0x270F24910]();
}

size_t strnlen(const char *__s1, size_t __n)
{
  return MEMORY[0x270EDB658](__s1, __n);
}

double strtod(const char *a1, char **a2)
{
  MEMORY[0x270EDB6A8](a1, a2);
  return result;
}

time_t time(time_t *a1)
{
  return MEMORY[0x270EDB930](a1);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x270EDB9E8](*(void *)&a1);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x270EDBAF0](msg);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x270EDBE58](name, targetq, flags);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

uint64_t xpc_dictionary_copy_cf_object()
{
  return MEMORY[0x270F24918]();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x270EDC008](keys, values, count);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x270EDC088](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x270EDC0A8](xdict, key);
}

uint64_t xpc_dictionary_set_cf_object()
{
  return MEMORY[0x270F24920]();
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x270EDC200](object);
}

void xpc_release(xpc_object_t object)
{
}

xpc_object_t xpc_retain(xpc_object_t object)
{
  return (xpc_object_t)MEMORY[0x270EDC2B8](object);
}