uint64_t sub_2190A7A14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  __int16 v12;
  uint64_t result;
  int v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;

  v2 = sub_219157AB8();
  v3 = *(void *)(v2 - 8);
  v4 = MEMORY[0x270FA5388](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F18448] || v7 == *MEMORY[0x263F18458])
  {
    type metadata accessor for Impressionable_ViewModifier(0);
    type metadata accessor for Impressionable_StateObject(0);
    sub_2190A25C0(&qword_26AD01158, (void (*)(uint64_t))type metadata accessor for Impressionable_StateObject);
    v9 = sub_219157B68();
    v10 = *(_WORD *)(sub_219157B68() + 16);
    swift_release();
    v11 = *(_WORD *)(sub_219157B68() + 16);
    swift_release();
    v12 = *(_WORD *)(v9 + 16);
    *(_WORD *)(v9 + 16) = v11 & 0x100 | v10 & 1 | 0x8000;
    sub_2190A15D0(v12);
    return swift_release();
  }
  else if (v7 == *MEMORY[0x263F18450])
  {
    type metadata accessor for Impressionable_ViewModifier(0);
    type metadata accessor for Impressionable_StateObject(0);
    sub_2190A25C0(&qword_26AD01158, (void (*)(uint64_t))type metadata accessor for Impressionable_StateObject);
    v14 = *(__int16 *)(sub_219157B68() + 16);
    result = swift_release();
    if (v14 < 0)
    {
      v15 = sub_219157B68();
      v16 = *(_WORD *)(v15 + 16);
      *(_WORD *)(v15 + 16) = v14 & 0x101;
      sub_2190A15D0(v16);
      return swift_release();
    }
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_2190A7CF0(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03350);
  uint64_t v11 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_219157718();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_2190A25C0(&qword_26AD01158, (void (*)(uint64_t))type metadata accessor for Impressionable_StateObject);
  int v7 = *(unsigned __int8 *)(sub_219157B68()
                          + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_definesParentContext);
  uint64_t result = swift_release();
  if (v7 == 1)
  {
    uint64_t v9 = sub_219157B68();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject__parentContextID, v3);
    swift_release();
    sub_21915A148();
    sub_21915A178();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_2190A7F58@<X0>(BOOL *a1@<X8>)
{
  v17 = a1;
  uint64_t v16 = sub_21915A2A8();
  uint64_t v1 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD02AD8);
  MEMORY[0x270FA5388](v4 - 8);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_2190A25C0(&qword_26AD01158, (void (*)(uint64_t))type metadata accessor for Impressionable_StateObject);
  uint64_t v7 = sub_219157B68() + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_listContainerElementSize;
  swift_beginAccess();
  sub_2190090C4(v7, (uint64_t)v6, &qword_26AD02AD8);
  swift_release();
  sub_21902EAB0((uint64_t)v6);
  double v9 = v8;
  sub_218FFE158((uint64_t)v6, &qword_26AD02AD8);
  uint64_t v10 = sub_219157B68();
  uint64_t v11 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v10 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_configuration, v16);
  swift_release();
  sub_21915A248();
  double v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v11);
  BOOL *v17 = v13 < v9;
  return result;
}

uint64_t sub_2190A81C0(unsigned __int8 *a1, uint64_t a2)
{
  int v3 = *a1;
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_2190A25C0(&qword_26AD01158, (void (*)(uint64_t))type metadata accessor for Impressionable_StateObject);
  int v4 = *(__int16 *)(sub_219157B68() + 16);
  uint64_t result = swift_release();
  if ((v4 & 0x80000000) == 0)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v8 = *(unsigned __int8 *)(a2 + 16);
      int v9 = *(unsigned __int8 *)(a2 + 17);
      sub_219006444(v6, v7, v8, v9);
      sub_2190F9FF0(v6, v7, v8 | (v9 << 8));
      uint64_t v11 = v10;
      sub_219006718(v6, v7, v8, v9);
      if (v11
        && (uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03698),
            MEMORY[0x21D47FB40](&v18, v12),
            swift_release(),
            swift_release(),
            (v18 & 1) == 0))
      {
        uint64_t v13 = sub_219157B68();
        __int16 v14 = *(_WORD *)(v13 + 16);
        __int16 v15 = 1;
      }
      else
      {
        uint64_t v13 = sub_219157B68();
        __int16 v14 = *(_WORD *)(v13 + 16);
        __int16 v15 = 257;
      }
      *(_WORD *)(v13 + 16) = v15;
      sub_2190A15D0(v14);
      return swift_release();
    }
    else
    {
      uint64_t v16 = sub_219157B68();
      __int16 v17 = *(_WORD *)(v16 + 16);
      *(_WORD *)(v16 + 16) = 0;
      sub_2190A15D0(v17);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2190A83E0(char a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_2190A25C0(&qword_26AD01158, (void (*)(uint64_t))type metadata accessor for Impressionable_StateObject);
  uint64_t v2 = sub_219157B68();
  uint64_t v3 = v2;
  if (a1)
  {
    __int16 v4 = *(_WORD *)(v2 + 16);
    uint64_t result = swift_release();
    if ((v4 & 0x8101) != 1) {
      return result;
    }
    uint64_t v3 = sub_219157B68();
    __int16 v6 = *(_WORD *)(v3 + 16);
    __int16 v7 = 257;
  }
  else
  {
    __int16 v8 = *(_WORD *)(sub_219157B68() + 16);
    swift_release();
    __int16 v7 = v8 & 1;
    __int16 v6 = *(_WORD *)(v3 + 16);
  }
  *(_WORD *)(v3 + 16) = v7;
  sub_2190A15D0(v6);
  return swift_release();
}

unint64_t sub_2190A8540()
{
  unint64_t result = qword_26AD01340;
  if (!qword_26AD01340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01348);
    sub_2190A85E0();
    sub_218FFDF90(&qword_26AD01148, &qword_26AD01150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD01340);
  }
  return result;
}

unint64_t sub_2190A85E0()
{
  unint64_t result = qword_26AD01330;
  if (!qword_26AD01330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01338);
    sub_2190A8694((unint64_t *)&qword_26AD01300, &qword_26AD01308, (void (*)(void))sub_219008D44, (void (*)(void))sub_219008100);
    sub_219008FC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD01330);
  }
  return result;
}

uint64_t sub_2190A8694(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2190A871C()
{
  unint64_t result = qword_26AD01350;
  if (!qword_26AD01350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01358);
    sub_2190A8540();
    sub_218FFDF90(&qword_26AD01370, &qword_26AD01378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD01350);
  }
  return result;
}

uint64_t sub_2190A87BC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190A87F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Impressionable_ViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190A885C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2190A88C4(uint64_t a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_2190A7A14(a1);
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for Impressionable_ViewModifier(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_219006718(*(void *)v2, *(void *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(unsigned char *)(v2 + 17));
  j__swift_release(*(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
  uint64_t v3 = v2 + v1[8];
  sub_218FFDDB4();
  uint64_t v4 = (int *)type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  uint64_t v5 = v3 + v4[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_21915A198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_219157718();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v3 + v4[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD02C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_219157CF8();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2190A8C0C(uint64_t a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_2190A7CF0(a1);
}

uint64_t sub_2190A8C80@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_2190A7F58(a1);
}

uint64_t sub_2190A8D04(unsigned __int8 *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Impressionable_ViewModifier(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_2190A81C0(a1, v4);
}

uint64_t sub_2190A8D78(char a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_2190A83E0(a1);
}

uint64_t sub_2190A8DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD01338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190A8E50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_2190A8EB8()
{
  unint64_t result = qword_26AD01360;
  if (!qword_26AD01360)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01368);
    sub_2190A871C();
    sub_218FFDF90(&qword_26AD01370, &qword_26AD01378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD01360);
  }
  return result;
}

void sub_2190A8F88()
{
}

uint64_t View.popoverOrigin<A>(presenting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_2190A9058(a3, a5, a6, (uint64_t)v10);
  uint64_t v8 = type metadata accessor for FlowPopoverOriginViewModifier();
  MEMORY[0x21D47F800](v10, a2, v8, a4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v8 - 8) + 8))(v10, v8);
}

uint64_t sub_2190A9058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getFunctionTypeMetadata1();
  *(void *)(a4 + 24) = sub_21911A164();
  *(void *)(a4 + 32) = v8;
  *(void *)(a4 + 40) = swift_getKeyPath();
  *(unsigned char *)(a4 + 80) = 0;
  *(void *)(a4 + 88) = swift_getKeyPath();
  *(unsigned char *)(a4 + 128) = 0;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  type metadata accessor for FlowStackSheetAuthority();
  swift_getWitnessTable();
  uint64_t result = sub_219157B58();
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v11;
  *(unsigned char *)(a4 + 16) = v12 & 1;
  return result;
}

uint64_t type metadata accessor for FlowPopoverOriginViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190A9194()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190A922C(uint64_t a1)
{
  sub_218FFDDB4();
  swift_release();
  if (*(unsigned char *)(a1 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else {
    swift_release();
  }
  uint64_t result = a1 + 88;
  if (*(unsigned char *)(a1 + 128))
  {
    if (*(void *)(a1 + 112))
    {
      return __swift_destroy_boxed_opaque_existential_1(result);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_2190A92D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_218FFE120();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  char v8 = *((unsigned char *)a2 + 80);
  swift_retain();
  if (v8)
  {
    long long v9 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)(a2 + 5));
  }
  else
  {
    *(void *)(a1 + 40) = a2[5];
    swift_retain();
  }
  *(unsigned char *)(a1 + 80) = v8;
  uint64_t v10 = a2 + 11;
  if (a2[16])
  {
    uint64_t v11 = (_OWORD *)(a1 + 88);
    uint64_t v12 = a2[14];
    if (v12)
    {
      uint64_t v13 = a2[15];
      *(void *)(a1 + 112) = v12;
      *(void *)(a1 + 120) = v13;
      (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v11, v10);
    }
    else
    {
      long long v14 = *(_OWORD *)(a2 + 13);
      *uint64_t v11 = *v10;
      *(_OWORD *)(a1 + 104) = v14;
      *(void *)(a1 + 120) = a2[15];
    }
    *(unsigned char *)(a1 + 128) = 1;
  }
  else
  {
    *(void *)(a1 + 88) = *(void *)v10;
    *(unsigned char *)(a1 + 128) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_2190A940C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_218FFE120();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_218FFDDB4();
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = a2[4];
  if ((uint64_t *)a1 != a2)
  {
    sub_218FFE158(a1 + 40, qword_267C05890);
    char v7 = *((unsigned char *)a2 + 80);
    if (v7)
    {
      uint64_t v8 = a2[8];
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = a2[9];
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, (uint64_t)(a2 + 5));
    }
    else
    {
      *(void *)(a1 + 40) = a2[5];
      swift_retain();
    }
    *(unsigned char *)(a1 + 80) = v7;
    long long v9 = (long long *)(a2 + 11);
    sub_218FFE158(a1 + 88, &qword_26AD012A8);
    if (a2[16])
    {
      uint64_t v10 = a2[14];
      if (v10)
      {
        *(void *)(a1 + 112) = v10;
        *(void *)(a1 + 120) = a2[15];
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 88, (uint64_t)(a2 + 11));
      }
      else
      {
        long long v11 = *v9;
        long long v12 = *(_OWORD *)(a2 + 13);
        *(void *)(a1 + 120) = a2[15];
        *(_OWORD *)(a1 + 88) = v11;
        *(_OWORD *)(a1 + 104) = v12;
      }
      *(unsigned char *)(a1 + 128) = 1;
    }
    else
    {
      *(void *)(a1 + 88) = *(void *)v9;
      *(unsigned char *)(a1 + 128) = 0;
      swift_retain();
    }
  }
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_2190A95D4(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_218FFDDB4();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    sub_218FFE158(a1 + 40, qword_267C05890);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    sub_218FFE158(a1 + 88, &qword_26AD012A8);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  return a1;
}

uint64_t sub_2190A968C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 129)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_2190A96E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_2190A9760()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190A97AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __int16 v17 = (void *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = a10;
  v17[9] = a2;
  v17[10] = a3;
  v20[0] = sub_2190AB8F8;
  v20[1] = v17;
  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  swift_retain();
  View.dataObject<A>(_:)((uint64_t)v20, a4, FunctionTypeMetadata1);
  return swift_release();
}

uint64_t sub_2190A98B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  double v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  uint64_t v10 = sub_219030AB0((uint64_t)v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
  *a3 = v10;
  return result;
}

uint64_t sub_2190A99A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v96 = a3;
  swift_getWitnessTable();
  uint64_t v4 = sub_2191585B8();
  uint64_t v76 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v75 = (char *)&v75 - v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v107 = v4;
  *((void *)&v107 + 1) = MEMORY[0x263F1A830];
  *(void *)&long long v108 = WitnessTable;
  *((void *)&v108 + 1) = MEMORY[0x263F1A820];
  uint64_t v7 = type metadata accessor for _RequirementFailureView();
  uint64_t v79 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  v78 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v77 = (uint64_t)&v75 - v10;
  uint64_t v11 = sub_219158658();
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  MEMORY[0x270FA5388](v11);
  v87 = (uint64_t *)((char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a2[2];
  sub_21915B378();
  uint64_t v86 = sub_219159188();
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v98 = (uint64_t)&v75 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05918);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  unint64_t v18 = sub_2190AB290();
  *(void *)&long long v107 = v13;
  *((void *)&v107 + 1) = v15;
  *(void *)&long long v108 = v15;
  *((void *)&v108 + 1) = v16;
  uint64_t v81 = v16;
  *(void *)&long long v109 = v17;
  *((void *)&v109 + 1) = v18;
  *(void *)&long long v110 = v18;
  type metadata accessor for FlowStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v19 = sub_219157F48();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_219082794((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v125 = v20;
  uint64_t v126 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v101 = v19;
  uint64_t v102 = v4;
  *(void *)&long long v107 = v4;
  *((void *)&v107 + 1) = v13;
  uint64_t v99 = WitnessTable;
  uint64_t v100 = v13;
  *(void *)&long long v108 = v19;
  *((void *)&v108 + 1) = WitnessTable;
  *(void *)&long long v103 = v17;
  *((void *)&v103 + 1) = v22;
  *(void *)&long long v109 = v17;
  *((void *)&v109 + 1) = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v82 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  v97 = (char *)&v75 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05938);
  uint64_t v83 = OpaqueTypeMetadata2;
  uint64_t v25 = sub_219157F48();
  uint64_t v80 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  v27 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v85 = (uint64_t)&v75 - v29;
  uint64_t v94 = v30;
  uint64_t v95 = v7;
  uint64_t v31 = sub_2191584D8();
  uint64_t v93 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  v92 = (char *)&v75 - v32;
  uint64_t v33 = v90;
  sub_2190FB834((uint64_t)&v107);
  if (*((void *)&v108 + 1))
  {
    sub_219018288(&v107, (uint64_t)v122);
    v78 = v27;
    uint64_t v79 = v31;
    uint64_t v34 = v100;
    uint64_t v35 = v81;
    uint64_t v36 = v103;
    uint64_t v77 = type metadata accessor for FlowStackSheetAuthority();
    uint64_t v76 = swift_getWitnessTable();
    uint64_t v37 = sub_219157B78();
    MEMORY[0x270FA5388](v37);
    swift_getKeyPath();
    sub_219157E98();
    swift_release();
    swift_release();
    (*(void (**)(long long *, uint64_t, void *))(*(a2 - 1) + 16))(&v107, v33, a2);
    uint64_t v38 = swift_allocObject();
    long long v39 = v113;
    *(_OWORD *)(v38 + 120) = v112;
    *(_OWORD *)(v38 + 136) = v39;
    *(_OWORD *)(v38 + 152) = v114;
    long long v40 = v107;
    *(_OWORD *)(v38 + 56) = v108;
    long long v41 = v110;
    *(_OWORD *)(v38 + 72) = v109;
    *(_OWORD *)(v38 + 88) = v41;
    *(_OWORD *)(v38 + 104) = v111;
    uint64_t v42 = v34;
    *(void *)(v38 + 16) = v34;
    *(void *)(v38 + 24) = v35;
    *(void *)(v38 + 32) = v36;
    *(unsigned char *)(v38 + 168) = v115;
    *(_OWORD *)(v38 + 40) = v40;
    uint64_t v43 = swift_checkMetadataState();
    v44 = v87;
    uint64_t v45 = v99;
    uint64_t v46 = v102;
    uint64_t v81 = v43;
    sub_218FFECD8(v87);
    uint64_t v47 = v98;
    sub_218FFEEA0(v98, (uint64_t)v44, 4);
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v88 + 8))(v44, v89);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v47, v86);
    swift_getKeyPath();
    uint64_t v48 = v123;
    uint64_t v49 = v124;
    __swift_project_boxed_opaque_existential_1(v122, v123);
    uint64_t v50 = sub_219157B68();
    sub_2190AB0A8(v50, v48, v49, v106);
    swift_release();
    *(void *)&long long v107 = v46;
    *((void *)&v107 + 1) = v42;
    *(void *)&long long v108 = v81;
    *((void *)&v108 + 1) = v45;
    long long v109 = v103;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v52 = (uint64_t)v78;
    uint64_t v53 = v83;
    v54 = v97;
    sub_219158AA8();
    uint64_t v31 = v79;
    swift_release();
    sub_218FFE158((uint64_t)v106, &qword_26AD010B8);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v53);
    uint64_t v55 = sub_219082794(qword_267C05940, &qword_267C05938);
    uint64_t v104 = OpaqueTypeConformance2;
    uint64_t v105 = v55;
    uint64_t v56 = v94;
    swift_getWitnessTable();
    uint64_t v57 = v85;
    sub_218FFDE04(v52, v56, v85);
    v58 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v58(v52, v56);
    sub_218FFDE04(v57, v56, v52);
    swift_getWitnessTable();
    uint64_t v59 = (uint64_t)v92;
    sub_219050FE4(v52, v56);
    v58(v52, v56);
    v58(v57, v56);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
  }
  else
  {
    sub_218FFE158((uint64_t)&v107, &qword_26AD010B8);
    uint64_t v60 = (uint64_t)v75;
    uint64_t v61 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v91, v102);
    uint64_t v62 = (uint64_t)v78;
    uint64_t v63 = v99;
    _RequirementFailureView.init<>(_:_:)(v60, 0xD00000000000002ALL, 0x80000002191814A0, v61, (uint64_t)v78);
    uint64_t v64 = v95;
    swift_getWitnessTable();
    uint64_t v65 = v77;
    sub_218FFDE04(v62, v64, v77);
    v66 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    v66(v62, v64);
    sub_218FFDE04(v65, v64, v62);
    *(void *)&long long v107 = v61;
    *((void *)&v107 + 1) = v100;
    *(void *)&long long v108 = v101;
    *((void *)&v108 + 1) = v63;
    long long v109 = v103;
    uint64_t v67 = swift_getOpaqueTypeConformance2();
    uint64_t v68 = sub_219082794(qword_267C05940, &qword_267C05938);
    uint64_t v120 = v67;
    uint64_t v121 = v68;
    uint64_t v69 = v94;
    swift_getWitnessTable();
    uint64_t v59 = (uint64_t)v92;
    sub_218FFCBB0(v62, v69, v64);
    v66(v62, v64);
    v66(v65, v64);
  }
  *(void *)&long long v107 = v102;
  *((void *)&v107 + 1) = v100;
  *(void *)&long long v108 = v101;
  *((void *)&v108 + 1) = v99;
  long long v109 = v103;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v71 = sub_219082794(qword_267C05940, &qword_267C05938);
  uint64_t v118 = v70;
  uint64_t v119 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v116 = v72;
  uint64_t v117 = v73;
  swift_getWitnessTable();
  sub_218FFDE04(v59, v31, v96);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8))(v59, v31);
}

uint64_t sub_2190AA604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a4;
  *(void *)&long long v39 = a1;
  uint64_t v41 = a5;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v9;
  type metadata accessor for FlowStackSheetAuthority();
  swift_getWitnessTable();
  sub_219157B68();
  *(void *)&long long v40 = sub_2190D8C0C();
  swift_release();
  uint64_t v10 = v34;
  uint64_t v11 = type metadata accessor for FlowPopoverOriginViewModifier();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v35 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v36 = v12 + 16;
  v35(v55, a2, v11);
  uint64_t v13 = v37;
  (*(void (**)(char *, void, uint64_t))(v7 + 16))(v37, v39, a3);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 169) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  long long v16 = v57;
  *(_OWORD *)(v15 + 120) = v58;
  long long v17 = v60;
  *(_OWORD *)(v15 + 136) = v59;
  *(_OWORD *)(v15 + 152) = v17;
  long long v18 = v55[0];
  *(_OWORD *)(v15 + 56) = v55[1];
  long long v19 = v56;
  *(_OWORD *)(v15 + 72) = v55[2];
  *(_OWORD *)(v15 + 88) = v19;
  *(_OWORD *)(v15 + 104) = v16;
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = v10;
  uint64_t v20 = v10;
  uint64_t v21 = v38;
  *(void *)(v15 + 32) = v38;
  *(unsigned char *)(v15 + 168) = v61;
  *(_OWORD *)(v15 + 40) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v13, a3);
  v35(v48, a2, v11);
  uint64_t v22 = swift_allocObject();
  long long v23 = v50;
  *(_OWORD *)(v22 + 120) = v51;
  long long v24 = v53;
  *(_OWORD *)(v22 + 136) = v52;
  *(_OWORD *)(v22 + 152) = v24;
  long long v25 = v48[0];
  *(_OWORD *)(v22 + 56) = v48[1];
  long long v26 = v49;
  *(_OWORD *)(v22 + 72) = v48[2];
  *(_OWORD *)(v22 + 88) = v26;
  *(_OWORD *)(v22 + 104) = v23;
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = v20;
  *(void *)(v22 + 32) = v21;
  *(unsigned char *)(v22 + 168) = v54;
  *(_OWORD *)(v22 + 40) = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05918);
  unint64_t v32 = sub_2190AB290();
  sub_2190F78CC((uint64_t)sub_2190AB780, v15, (uint64_t)sub_2190AB7CC, v22, (uint64_t *)v62);
  long long v63 = v62[0];
  v44[0] = v62[0];
  v44[1] = v62[1];
  v44[2] = v62[2];
  char v47 = 0;
  *(void *)&v55[0] = a3;
  *((void *)&v55[0] + 1) = v27;
  *(void *)&v55[1] = v27;
  *((void *)&v55[1] + 1) = v20;
  *(void *)&v55[2] = v21;
  *((void *)&v55[2] + 1) = v32;
  *(void *)&long long v56 = v32;
  type metadata accessor for FlowStack();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.presentedBy(_:)();
  sub_2190AB7DC((uint64_t)&v63);
  swift_release();
  swift_release();
  *(void *)&v44[0] = *(void *)&v48[0];
  long long v40 = *(_OWORD *)((char *)v48 + 8);
  *(_OWORD *)((char *)v44 + 8) = *(_OWORD *)((char *)v48 + 8);
  long long v39 = *(_OWORD *)((char *)&v48[1] + 8);
  *(_OWORD *)((char *)&v44[1] + 8) = *(_OWORD *)((char *)&v48[1] + 8);
  *((void *)&v44[2] + 1) = *((void *)&v48[2] + 1);
  uint64_t v45 = v49;
  char v46 = BYTE8(v49);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v29 = sub_219157F48();
  uint64_t v30 = sub_219082794((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v42 = WitnessTable;
  uint64_t v43 = v30;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v44, v29, (uint64_t)v55);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)&v48[0] = *(void *)&v55[0];
  long long v40 = *(_OWORD *)((char *)v55 + 8);
  *(_OWORD *)((char *)v48 + 8) = *(_OWORD *)((char *)v55 + 8);
  long long v39 = *(_OWORD *)((char *)&v55[1] + 8);
  *(_OWORD *)((char *)&v48[1] + 8) = *(_OWORD *)((char *)&v55[1] + 8);
  *((void *)&v48[2] + 1) = *((void *)&v55[2] + 1);
  *(void *)&long long v49 = v56;
  BYTE8(v49) = BYTE8(v56);
  sub_218FFDE04((uint64_t)v48, v29, v41);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2190AAAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  void (*v14)(long long *__return_ptr, char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  char v42;
  void v43[3];
  uint64_t v44;
  uint64_t v45;

  uint64_t v28 = a4;
  unint64_t v32 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v27 - v10;
  sub_2190FBA6C((uint64_t)v43);
  uint64_t v30 = v44;
  uint64_t v31 = v45;
  uint64_t v29 = __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v12 = *(void *)(a1 + 24);
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  sub_21911A5C8(v12, FunctionTypeMetadata1, (uint64_t)&v34);
  unint64_t v14 = (void (*)(long long *__return_ptr, char *))v34;
  sub_219159BF8();
  v14(&v34, v11);
  swift_release();
  uint64_t v15 = v34;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  long long v16 = v28;
  long long v17 = type metadata accessor for FlowPopoverOriginViewModifier();
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(&v34, a1, v17);
  long long v18 = swift_allocObject();
  long long v19 = v38;
  *(_OWORD *)(v18 + 120) = v39;
  uint64_t v20 = v41;
  *(_OWORD *)(v18 + 136) = v40;
  *(_OWORD *)(v18 + 152) = v20;
  uint64_t v21 = v34;
  *(_OWORD *)(v18 + 56) = v35;
  uint64_t v22 = v37;
  *(_OWORD *)(v18 + 72) = v36;
  *(_OWORD *)(v18 + 88) = v22;
  *(_OWORD *)(v18 + 104) = v19;
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = v16;
  *(unsigned char *)(v18 + 168) = v42;
  *(_OWORD *)(v18 + 40) = v21;
  uint64_t v33 = v15;
  *(void *)&uint64_t v34 = sub_219159108();
  DWORD2(v34) = 257;
  *(void *)&uint64_t v35 = sub_2190ABC0C;
  *((void *)&v35 + 1) = v18;
  long long v23 = sub_2190E0C8C((uint64_t *)&v34, v30, v31);
  swift_release();
  swift_release();
  KeyPath = swift_getKeyPath();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  long long v26 = v32;
  *unint64_t v32 = v23;
  v26[1] = KeyPath;
  *((unsigned char *)v26 + 16) = 0;
  return result;
}

uint64_t sub_2190AADF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_2190FBA6C((uint64_t)v34);
  uint64_t v12 = v35;
  uint64_t v24 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  uint64_t v13 = *(void *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  sub_21911A5C8(v13, FunctionTypeMetadata1, (uint64_t)&v25);
  ((void (*)(long long *__return_ptr, uint64_t))v25)(&v25, a1);
  swift_release();
  uint64_t v15 = type metadata accessor for FlowPopoverOriginViewModifier();
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(&v25, a2, v15);
  uint64_t v16 = swift_allocObject();
  long long v17 = v29;
  *(_OWORD *)(v16 + 120) = v30;
  long long v18 = v32;
  *(_OWORD *)(v16 + 136) = v31;
  *(_OWORD *)(v16 + 152) = v18;
  long long v19 = v25;
  *(_OWORD *)(v16 + 56) = v26;
  long long v20 = v28;
  *(_OWORD *)(v16 + 72) = v27;
  *(_OWORD *)(v16 + 88) = v20;
  *(_OWORD *)(v16 + 104) = v17;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  *(void *)(v16 + 32) = a5;
  *(unsigned char *)(v16 + 168) = v33;
  *(_OWORD *)(v16 + 40) = v19;
  *(void *)&long long v25 = sub_219159108();
  DWORD2(v25) = 256;
  *(void *)&long long v26 = sub_2190AB80C;
  *((void *)&v26 + 1) = v16;
  uint64_t v21 = sub_2190E0C8C((uint64_t *)&v25, v12, v24);
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  *(void *)a6 = v21;
  *(void *)(a6 + 8) = KeyPath;
  *(unsigned char *)(a6 + 16) = 0;
  return result;
}

uint64_t sub_2190AB020()
{
  type metadata accessor for FlowStackSheetAuthority();
  swift_getWitnessTable();
  sub_219157B68();
  sub_2190D8458();
  return swift_release();
}

uint64_t sub_2190AB0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_219159D68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v17[-v11];
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  sub_219159CF8();
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v21[3] = a2;
  v21[4] = a3;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1Tm, v4, a2);
  uint64_t v15 = sub_21910D154((uint64_t)v12, v13, (uint64_t)v21);
  swift_release();
  a4[3] = type metadata accessor for DispatcherPerformAction();
  a4[4] = swift_getWitnessTable();
  *a4 = v15;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_2190AB290()
{
  unint64_t result = qword_267C05920;
  if (!qword_267C05920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05918);
    sub_219082794((unint64_t *)&qword_267C05928, &qword_267C05930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05920);
  }
  return result;
}

uint64_t sub_2190AB324()
{
  return 24;
}

__n128 sub_2190AB330(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2190AB348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190AA604(a1, v2 + 40, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_2190AB360@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = *a1;
  uint64_t v4 = *a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_219159D68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v29 = nullsub_1(a1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 80);
  swift_retain();
  long long v26 = v13;
  uint64_t v27 = AssociatedTypeWitness;
  long long v28 = *(_OWORD *)(v4 + 88);
  type metadata accessor for PopoverFlowActionImplementation();
  swift_getWitnessTable();
  sub_219159D48();
  swift_release();
  long long v26 = sub_21908FFD8((uint64_t)a1, AssociatedTypeWitness);
  uint64_t v27 = v14;
  type metadata accessor for PopoverFlowBackActionImplementation();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v15 = v24;
  sub_219159D48();
  swift_release();
  sub_21915B678();
  uint64_t v16 = *(void *)(v7 + 72);
  swift_allocObject();
  uint64_t v17 = sub_21915AEA8();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 16);
  v20(v18, v12, v6);
  v20(v19 + v16, v15, v6);
  sub_2190D966C(v17);
  sub_219159D38();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v15, v6);
  return ((uint64_t (*)(char *, uint64_t))v21)(v12, v6);
}

uint64_t sub_2190AB664@<X0>(uint64_t a1@<X8>)
{
  return sub_2190AB360(*(uint64_t **)(v1 + 32), a1);
}

uint64_t sub_2190AB670()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  sub_218FFDDB4();
  swift_release();
  if (*(unsigned char *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  else {
    swift_release();
  }
  if (*(unsigned char *)(v0 + 168))
  {
    if (*(void *)(v0 + 152)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 128);
    }
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 169) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_2190AB780@<X0>(uint64_t *a1@<X8>)
{
  return sub_2190AAAE8((uint64_t)(v1 + 5), v1[2], v1[3], v1[4], a1);
}

uint64_t sub_2190AB7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190AADF8(a1, (uint64_t)(v2 + 5), v2[2], v2[3], v2[4], a2);
}

uint64_t sub_2190AB7DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190AB80C()
{
  return sub_2190AB020();
}

uint64_t objectdestroyTm_1()
{
  sub_218FFDDB4();
  swift_release();
  if (*(unsigned char *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  else {
    swift_release();
  }
  if (*(unsigned char *)(v0 + 168))
  {
    if (*(void *)(v0 + 152)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 128);
    }
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2190AB8C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190AB8F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2190A98B8(a1, *(void *)(v2 + 32), a2);
}

uint64_t sub_2190AB938()
{
  return swift_deallocObject();
}

uint64_t sub_2190AB948()
{
  return sub_2190D8CE4();
}

uint64_t sub_2190AB984()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for PopoverFlowActionImplementation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2190ABC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  sub_21915AF98();
  v6[7] = sub_21915AF88();
  uint64_t v8 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_2190ABCC8, v8, v7);
}

uint64_t sub_2190ABCC8()
{
  swift_release();
  uint64_t v1 = sub_219159C08();
  uint64_t v3 = v2;
  if (sub_21915A2F8() == v1 && v4 == v3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v6 = sub_21915B6C8();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_10:
    uint64_t v8 = v0[3];
    swift_bridgeObjectRelease();
    sub_2190D8724(v8);
LABEL_11:
    uint64_t v9 = (unsigned int *)MEMORY[0x263F50978];
    goto LABEL_12;
  }
  if (sub_21915A338() == v1 && v7 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_21915B6C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_18;
    }
  }
  if (sub_2190D8AF0())
  {
    uint64_t v16 = v0[3];
    sub_2190D8C0C();
    sub_219148C78(v16);
    swift_release();
    goto LABEL_11;
  }
LABEL_18:
  uint64_t v9 = (unsigned int *)MEMORY[0x263F50970];
LABEL_12:
  uint64_t v10 = v0[2];
  uint64_t v11 = *v9;
  uint64_t v12 = sub_219159888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_2190ABE7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_2190ABE90(a1, *v3, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_2190ABE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04280);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  double v17 = MEMORY[0x270FA5388](v16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v17);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a3;
  *((void *)v19 + 3) = a4;
  uint64_t v20 = v27;
  *((void *)v19 + 4) = a5;
  *((void *)v19 + 5) = v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(void *)&v19[(v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8] = a2;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = &unk_267C059D0;
  *(void *)(v21 + 24) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C04798);
  swift_retain();
  uint64_t v22 = sub_21915A9D8();
  uint64_t v23 = sub_21915B018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = &unk_267C04790;
  v24[5] = v21;
  v24[6] = v22;
  swift_retain();
  sub_219119688((uint64_t)v13, (uint64_t)&unk_267C047A0, (uint64_t)v24);
  swift_release();
  return v22;
}

uint64_t sub_2190AC110()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190AC1AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = (uint64_t)v1 + v7;
  uint64_t v9 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_218FF9AE0;
  return sub_2190ABC28(a1, v8, v9, v4, v5, v6);
}

uint64_t sub_2190AC2DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190AC314()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t ShelfGridSpacing.init(vertical:horizontal:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4 & 1;
  return result;
}

void ShelfGridSpacing.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a2;
  *(unsigned char *)(a1 + 24) = 0;
}

uint64_t ShelfGridSpacing.vertical.getter()
{
  return *(void *)v0;
}

uint64_t ShelfGridSpacing.vertical.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridSpacing.vertical.modify())()
{
  return nullsub_1;
}

uint64_t ShelfGridSpacing.horizontal.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ShelfGridSpacing.horizontal.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridSpacing.horizontal.modify())()
{
  return nullsub_1;
}

uint64_t *sub_2190AC40C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v2;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

BOOL _s18_JetEngine_SwiftUI16ShelfGridSpacingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v3 = 1;
    }
    return (v3 & 1) == 0;
  }
  return (*(unsigned char *)(a2 + 24) & 1) != 0;
}

uint64_t sub_2190AC480()
{
  return MEMORY[0x263F8D5B0];
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfGridSpacing(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShelfGridSpacing(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridSpacing()
{
  return &type metadata for ShelfGridSpacing;
}

id sub_2190AC500()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _PageRenderMetricsExtendedLaunchSupport();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2190AC534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(_s23_SequenceActionProtocolVMa() + 36);
  uint64_t v6 = sub_219159968();
  unint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t _s23_SequenceActionProtocolVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190AC5D4()
{
  uint64_t result = sub_219159968();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2190AC670(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_219159968();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_2190AC758(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_219159968();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_2190AC7D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_219159968();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_2190AC868(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_219159968();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_2190AC8FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_219159968();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_2190AC978(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_219159968();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2190ACA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190ACA18);
}

uint64_t sub_2190ACA18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_219159968();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2190ACAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190ACADC);
}

void *sub_2190ACADC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_219159968();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2190ACB84(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_2190ACB8C()
{
  return sub_219159958();
}

uint64_t sub_2190ACBB4()
{
  return (*v0)();
}

uint64_t MediaArtwork.ProtocolRequest<>.url.getter()
{
  return sub_219159908();
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.currentPriority.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_2190AD064(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_2190ACCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>, double a7@<D0>)
{
  long long v28 = a4;
  uint64_t v29 = a2;
  uint64_t v14 = sub_21915B018();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  double v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a6 = a1;
  unint64_t v18 = (int *)type metadata accessor for MediaArtwork.ProtocolRequest();
  uint64_t v19 = (char *)a6 + v18[7];
  uint64_t v30 = a5;
  uint64_t v20 = *(void *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v19, a2, a5);
  *(double *)((char *)a6 + v18[8]) = a7;
  *((unsigned char *)a6 + v18[9]) = a3;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v21(v17, (uint64_t)a4, v14);
  type metadata accessor for MediaArtwork.ProtocolRequestPriorityCoordinator();
  uint64_t v22 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05AD8);
  uint64_t v23 = swift_allocObject();
  *(_DWORD *)(v23 + ((*(unsigned int *)(*(void *)v23 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v21((char *)(v23 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v23 + 16)), (uint64_t)v17, v14);
  *(void *)(v22 + 16) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C052B8);
  swift_allocObject();
  uint64_t v24 = sub_21915ABE8();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v17, v14);
  *(void *)(v22 + 24) = v24;
  v25(v28, v14);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v29, v30);
  *(void *)((char *)a6 + v18[10]) = v22;
  return result;
}

uint64_t MediaArtwork.ProtocolRequest.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_2190925D0(*v3, a1, a2, a3);
}

uint64_t MediaArtwork.ProtocolRequest.matchResult.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

double MediaArtwork.ProtocolRequest.size.getter()
{
  sub_2190925D0(*v0, (uint64_t)&type metadata for _MediaArtworkSizeKey, (uint64_t)&off_26AD01E68, (uint64_t)&v2);
  return v2;
}

double MediaArtwork.ProtocolRequest.scale.getter(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 32));
}

uint64_t MediaArtwork.ProtocolRequest.isOnScreen.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t MediaArtwork.ProtocolRequest.cachedImagesKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2190925D0(*v1, (uint64_t)&type metadata for _MediaArtworkCachedImagesKey, (uint64_t)&off_26AD02148, a1);
}

uint64_t MediaArtwork.ProtocolRequest.priorityCoordinator.getter()
{
  return swift_retain();
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.onPriorityChange.getter()
{
  return swift_retain();
}

uint64_t sub_2190AD064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21915B018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.increasePriority(to:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21915B018();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = (void *)MEMORY[0x263F8DD00];
  uint64_t v10 = v8 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v8 + 16);
  uint64_t v11 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(void *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_2190AD064(v10, (uint64_t)v7);
  os_unfair_lock_unlock(v11);
  swift_release();
  char v12 = sub_21915AFC8();
  uint64_t v13 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  if (v12)
  {
    uint64_t v14 = *(void *)(v2 + 16);
    MEMORY[0x270FA5388](v13);
    *(void *)&v18[-16] = a1;
    uint64_t v15 = v14 + *(void *)(*v9 + *(void *)v14 + 16);
    uint64_t v16 = (os_unfair_lock_s *)(v14 + ((*(unsigned int *)(*(void *)v14 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v16);
    sub_2190AD2F4(v15);
    os_unfair_lock_unlock(v16);
    swift_release();
    sub_21915ABD8();
  }
  return v12 & 1;
}

uint64_t sub_2190AD2F4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_21915B018();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

unint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.debugDescription.getter()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16)
                          + ((*(unsigned int *)(**(void **)(v0 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  if (os_unfair_lock_trylock(v1))
  {
    sub_2190AD4B8(v5);
    os_unfair_lock_unlock(v1);
    uint64_t v3 = v5[0];
    uint64_t v2 = v5[1];
  }
  swift_release();
  if (v2) {
    return v3;
  }
  else {
    return 0xD000000000000024;
  }
}

uint64_t sub_2190AD4B8@<X0>(void *a1@<X8>)
{
  sub_21915B478();
  sub_21915AD88();
  sub_21915B018();
  sub_2190AE07C();
  sub_21915B668();
  sub_21915AD88();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21915AD88();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_2190AD5EC()
{
  return MediaArtwork.ProtocolRequestPriorityCoordinator.debugDescription.getter();
}

uint64_t MediaArtwork.ProtocolRequest<>.urlMatchResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052B0) + 28);
  uint64_t v4 = sub_219159938();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_2190AD68C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2190AD750(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + ((v6 + 8) & ~v6) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
    unint64_t v15 = (v12 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (v13 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v15 = *(void *)v16;
    *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
    *(void *)((v12 + v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_2190AD8A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  return swift_release();
}

void *sub_2190AD940(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(void *)(v4 - 8) + 16;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  swift_bridgeObjectRetain();
  v5(v8, v9, v4);
  uint64_t v10 = *(void *)(v6 + 48);
  uint64_t v11 = v10 + v8;
  uint64_t v12 = v10 + v9;
  unint64_t v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

void *sub_2190ADA18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = v11 + v9;
  uint64_t v13 = v11 + v10;
  unint64_t v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_2190ADB04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = v9 + v7;
  uint64_t v11 = v9 + v8;
  unint64_t v12 = (v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)((v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_2190ADBC8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = v11 + v9;
  uint64_t v13 = v11 + v10;
  unint64_t v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2190ADCA4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 8) & ~v6) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2190ADDFCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
  }
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2190ADE10(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v18 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v18 = a2 - 1;
              }
              *(void *)a1 = v18;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 8) & ~v9) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x2190AE000);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for MediaArtwork.ProtocolRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for MediaArtwork.ProtocolRequestPriorityCoordinator()
{
  return self;
}

uint64_t method lookup function for MediaArtwork.ProtocolRequestPriorityCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MediaArtwork.ProtocolRequestPriorityCoordinator);
}

unint64_t sub_2190AE07C()
{
  unint64_t result = qword_267C05AE0;
  if (!qword_267C05AE0)
  {
    sub_21915B018();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05AE0);
  }
  return result;
}

uint64_t sub_2190AE0D4()
{
  return swift_getWitnessTable();
}

unint64_t sub_2190AE140()
{
  unint64_t result = qword_26AD03878;
  if (!qword_26AD03878)
  {
    sub_219158788();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03878);
  }
  return result;
}

uint64_t sub_2190AE198()
{
  uint64_t result = sub_21915AD18();
  qword_267C05AE8 = result;
  return result;
}

id static NWPathNetworkInquiry.didChangeNotification.getter()
{
  if (qword_267C03548 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_267C05AE8;
  return v0;
}

uint64_t sub_2190AE22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2191593F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_219159428();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unsigned int v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_218FF98AC();
  unsigned int v12 = (void *)sub_21915B268();
  aBlock[4] = sub_2190AF728;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_218FF9868;
  aBlock[3] = &block_descriptor_2;
  int v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_219159408();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_218FF9BD4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD01068);
  sub_218FFE994();
  sub_21915B3D8();
  MEMORY[0x21D481CA0](0, v11, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2190AE494()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2190AE4EC();
    return swift_release();
  }
  return result;
}

void sub_2190AE4EC()
{
  uint64_t v1 = v0;
  sub_21915AA98();
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2191618D0;
  sub_2191595E8();
  sub_219159528();
  sub_219159528();
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = objc_msgSend(v2, sel_path);
  unint64_t v4 = (unint64_t)objc_msgSend(v3, sel_status);

  uint64_t v10 = MEMORY[0x263F8D4F8];
  LOBYTE(v9[0]) = (v4 & 0xFFFFFFFFFFFFFFFDLL) == 1;
  sub_2191595C8();
  sub_219088D30((uint64_t)v9);
  sub_219159528();
  uint64_t v10 = sub_219159DE8();
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v9);
  NWPathNetworkInquiry.interface.getter((uint64_t)boxed_opaque_existential_1Tm);
  sub_2191595C8();
  sub_219088D30((uint64_t)v9);
  sub_21915A6B8();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  id v6 = objc_msgSend(v2, sel_path);
  unint64_t v7 = (unint64_t)objc_msgSend(v6, sel_status);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  if (((v7 & 0xFFFFFFFFFFFFFFFDLL) != 1) != LOBYTE(v11[0]))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v11[0]) = (v7 & 0xFFFFFFFFFFFFFFFDLL) != 1;
    swift_retain();
    sub_2191579F8();
  }
  id v8 = objc_msgSend(self, sel_defaultCenter);
  if (qword_267C03548 != -1) {
    swift_once();
  }
  objc_msgSend(v8, sel_postNotificationName_object_, qword_267C05AE8, v1);
}

BOOL NWPathNetworkInquiry.isLikelyReachable.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_path);
  unint64_t v2 = (unint64_t)objc_msgSend(v1, sel_status);

  return (v2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

id NWPathNetworkInquiry.__allocating_init()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05AF0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id result = objc_msgSend(self, sel_sharedDefaultEvaluator);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 24) = 0;
    uint64_t v7 = v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI20NWPathNetworkInquiry__isInternetOffline;
    char v15 = 0;
    sub_2191579A8();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v1 + 32))(v7, v3, v0);
    *(void *)(v6 + 16) = v5;
    int v14 = v5;
    swift_getKeyPath();
    swift_allocObject();
    swift_weakInit();
    id v8 = v5;
    uint64_t v9 = sub_219157618();
    swift_release();
    swift_release();
    uint64_t v10 = *(void **)(v6 + 24);
    *(void *)(v6 + 24) = v9;

    id v11 = objc_msgSend(*(id *)(v6 + 16), sel_path);
    unint64_t v12 = (unint64_t)objc_msgSend(v11, sel_status);

    swift_getKeyPath();
    swift_getKeyPath();
    v13[15] = (v12 & 0xFFFFFFFFFFFFFFFDLL) != 1;
    swift_retain();
    sub_2191579F8();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NWPathNetworkInquiry.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 24);
  if (v2)
  {
    id v3 = v2;
    sub_2191575D8();
  }
  uint64_t v4 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI20NWPathNetworkInquiry__isInternetOffline;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05AF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v1;
}

uint64_t NWPathNetworkInquiry.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 24);
  if (v2)
  {
    id v3 = v2;
    sub_2191575D8();
  }
  uint64_t v4 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI20NWPathNetworkInquiry__isInternetOffline;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05AF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t NWPathNetworkInquiry.isInternetOffline.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2190AECE0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2190AED60()
{
  return sub_2191579F8();
}

uint64_t NWPathNetworkInquiry.$isInternetOffline.getter()
{
  return swift_endAccess();
}

uint64_t sub_2190AEE38()
{
  return swift_endAccess();
}

uint64_t sub_2190AEEA0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_267C05B18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05AF0);
  sub_2191579C8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t NWPathNetworkInquiry.interface.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_219159DE8();
  uint64_t v15 = *(void *)(v3 - 8);
  double v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(*(id *)(v1 + 16), sel_path, v4);
  id v8 = objc_msgSend(v7, sel_interface);

  if (v8)
  {
    uint64_t v9 = (char *)objc_msgSend(v8, sel_type);

    if ((unint64_t)(v9 - 1) > 3) {
      uint64_t v10 = (unsigned int *)MEMORY[0x263F50A80];
    }
    else {
      uint64_t v10 = (unsigned int *)qword_264394188[(void)(v9 - 1)];
    }
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v6, *v10, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v6, v3);
  }
  else
  {
    uint64_t v11 = *MEMORY[0x263F50A78];
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 104);
    return v12(a1, v11, v3);
  }
}

id NWPathNetworkInquiry.isExpensive.getter()
{
  return sub_2190AF1E4((SEL *)&selRef_isExpensive);
}

id NWPathNetworkInquiry.isConstrained.getter()
{
  return sub_2190AF1E4((SEL *)&selRef_isConstrained);
}

id sub_2190AF1E4(SEL *a1)
{
  id v3 = objc_msgSend(*(id *)(v1 + 16), sel_path);
  id v4 = [v3 *a1];

  return v4;
}

uint64_t NWPathNetworkInquiry.observe(on:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_21915A448();
  if (qword_267C03548 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_267C05AE8;
  uint64_t v13 = v5;
  uint64_t v12 = v2;
  sub_219030940(a1, (uint64_t)v11);
  id v8 = v7;
  swift_retain();
  swift_retain();
  uint64_t result = sub_21915A438();
  uint64_t v10 = MEMORY[0x263F50C28];
  a2[3] = v6;
  a2[4] = v10;
  *a2 = result;
  return result;
}

BOOL sub_2190AF348()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_path);
  unint64_t v2 = (unint64_t)objc_msgSend(v1, sel_status);

  return (v2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

uint64_t sub_2190AF3A4@<X0>(uint64_t a1@<X8>)
{
  return NWPathNetworkInquiry.interface.getter(a1);
}

id sub_2190AF3C8(uint64_t a1, uint64_t a2)
{
  return sub_2190AF3E0(a1, a2, (SEL *)&selRef_isExpensive);
}

id sub_2190AF3D4(uint64_t a1, uint64_t a2)
{
  return sub_2190AF3E0(a1, a2, (SEL *)&selRef_isConstrained);
}

id sub_2190AF3E0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = objc_msgSend(*(id *)(*(void *)v3 + 16), sel_path);
  id v6 = [v5 *a3];

  return v6;
}

uint64_t sub_2190AF434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_21915A448();
  if (qword_267C03548 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_267C05AE8;
  uint64_t v15 = a2;
  uint64_t v14 = v7;
  sub_219030940(a1, (uint64_t)v13);
  id v10 = v9;
  swift_retain();
  swift_retain();
  uint64_t result = sub_21915A438();
  uint64_t v12 = MEMORY[0x263F50C28];
  a3[3] = v8;
  a3[4] = v12;
  *a3 = result;
  return result;
}

char *keypath_get_selector_path()
{
  return sel_path;
}

id sub_2190AF530@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_path);
  *a2 = result;
  return result;
}

uint64_t sub_2190AF56C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2190AF5A4(uint64_t a1, uint64_t a2)
{
  return sub_2190AE22C(a1, a2, v2);
}

uint64_t sub_2190AF5BC()
{
  return type metadata accessor for NWPathNetworkInquiry();
}

uint64_t type metadata accessor for NWPathNetworkInquiry()
{
  uint64_t result = qword_267C05B00;
  if (!qword_267C05B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2190AF610()
{
  sub_2190AF6D0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for NWPathNetworkInquiry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NWPathNetworkInquiry);
}

void sub_2190AF6D0()
{
  if (!qword_267C05B10)
  {
    unint64_t v0 = sub_219157A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C05B10);
    }
  }
}

uint64_t sub_2190AF728()
{
  return sub_2190AE494();
}

void sub_2190AF730()
{
  swift_getAssociatedTypeWitness();
  sub_219159188();
  if (v0 <= 0x3F)
  {
    sub_219081030();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2190AF840(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  unint64_t v8 = ((v6 + 16) & ~(unint64_t)v6) + *(void *)(v5 + 64) + 7;
  uint64_t v9 = sub_21915A198();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11 & 0xF8 | 7;
  uint64_t v13 = (v11 & 0xF8) + 48;
  uint64_t v14 = 8;
  if (*(void *)(v10 + 64) > 8uLL) {
    uint64_t v14 = *(void *)(v10 + 64);
  }
  int v15 = (v11 | v6) & 0x100000;
  if ((v12 | v6) != 7
    || v15 != 0
    || v14
     + ((v13
       + ((((((v8 + ((v6 + 16) & ~(v6 | 7))) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + 1 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    unint64_t v19 = (uint64_t *)(v18 + (((v12 | v6) + 16) & ~(v12 | v6)));
LABEL_32:
    swift_retain();
    return v19;
  }
  uint64_t v52 = v13;
  uint64_t v53 = v14;
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v20 = a2[1];
  *a1 = *a2;
  a1[1] = v20;
  char v54 = a1;
  uint64_t v21 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  uint64_t v22 = (void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  *uint64_t v21 = *v22;
  uint64_t v51 = ~v12;
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + v6 + 8) & ~(unint64_t)v6;
  unint64_t v26 = ((unint64_t)v24 + v6 + 8) & ~(unint64_t)v6;
  uint64_t v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v27(v25, v26, AssociatedTypeWitness);
  long long v28 = (void *)(((unint64_t)v21 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)((v8 + (((unint64_t)a2 + v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = v29[1];
  *long long v28 = *v29;
  v28[1] = v30;
  long long v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = v32[1];
  *long long v31 = *v32;
  v31[1] = v33;
  unint64_t v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v36 = *(unsigned char *)(v35 + 40);
  swift_retain();
  swift_retain();
  if (v36)
  {
    uint64_t v37 = *(void *)(v35 + 24);
    if (v37)
    {
      *(void *)(v34 + 24) = v37;
      *(void *)(v34 + 32) = *(void *)(v35 + 32);
      (**(void (***)(unint64_t, unint64_t))(v37 - 8))(v34, v35);
    }
    else
    {
      long long v40 = *(_OWORD *)v35;
      long long v41 = *(_OWORD *)(v35 + 16);
      *(void *)(v34 + 32) = *(void *)(v35 + 32);
      *(_OWORD *)unint64_t v34 = v40;
      *(_OWORD *)(v34 + 16) = v41;
    }
    uint64_t v38 = v53;
    unint64_t v19 = v54;
    uint64_t v39 = v52;
    *(unsigned char *)(v34 + 40) = 1;
  }
  else
  {
    *(void *)unint64_t v34 = *(void *)v35;
    *(unsigned char *)(v34 + 40) = 0;
    swift_retain();
    uint64_t v38 = v53;
    unint64_t v19 = v54;
    uint64_t v39 = v52;
  }
  uint64_t v42 = (void *)((v39 + v34) & v51);
  uint64_t v43 = (unsigned __int8 *)((v39 + v35) & v51);
  unsigned int v44 = v43[v38];
  unsigned int v45 = v44 - 2;
  if (v44 >= 2)
  {
    if (v38 <= 3) {
      uint64_t v46 = v38;
    }
    else {
      uint64_t v46 = 4;
    }
    switch(v46)
    {
      case 1:
        int v47 = *v43;
        goto LABEL_27;
      case 2:
        int v47 = *(unsigned __int16 *)v43;
        goto LABEL_27;
      case 3:
        int v47 = *(unsigned __int16 *)v43 | (v43[2] << 16);
        goto LABEL_27;
      case 4:
        int v47 = *(_DWORD *)v43;
LABEL_27:
        int v48 = (v47 | (v45 << (8 * v38))) + 2;
        unsigned int v44 = v47 + 2;
        if (v38 < 4) {
          unsigned int v44 = v48;
        }
        break;
      default:
        break;
    }
  }
  if (v44 != 1)
  {
    *uint64_t v42 = *(void *)v43;
    *((unsigned char *)v42 + v38) = 0;
    goto LABEL_32;
  }
  (*(void (**)(void *))(v50 + 16))(v42);
  *((unsigned char *)v42 + v38) = 1;
  return v19;
}

uint64_t sub_2190AFC30(uint64_t a1)
{
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (a1 + (v4 | 7) + 16) & ~(v4 | 7);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))((v4 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v4, AssociatedTypeWitness);
  unint64_t v6 = (((v4 + 16) & ~v4) + *(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  unint64_t v7 = (((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v7 + 40))
  {
    if (*(void *)(v7 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = *(void *)(sub_21915A198() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = (unsigned __int8 *)((v7 + v9 + 41) & ~v9);
  unint64_t v11 = *(void *)(v8 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unsigned int v12 = v10[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *v10;
        goto LABEL_16;
      case 2:
        int v15 = *(unsigned __int16 *)v10;
        goto LABEL_16;
      case 3:
        int v15 = *(unsigned __int16 *)v10 | (v10[2] << 16);
        goto LABEL_16;
      case 4:
        int v15 = *(_DWORD *)v10;
LABEL_16:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    int v17 = *(uint64_t (**)(void))(v8 + 8);
    return v17();
  }
  else
  {
    return swift_release();
  }
}

void *sub_2190AFEB4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  long long v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v42 = a1;
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 | 7) + 16;
  uint64_t v10 = ((unint64_t)a1 + v9) & ~(v8 | 7);
  unint64_t v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *(void *)uint64_t v10 = *v11;
  unsigned int v12 = (void *)((v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v12 = *v13;
  uint64_t v14 = ((unint64_t)v12 + v8 + 8) & ~v8;
  uint64_t v15 = ((unint64_t)v13 + v8 + 8) & ~v8;
  swift_retain();
  swift_retain();
  swift_retain();
  v41(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v7 + 48) + ((v8 + 16) & ~v8) + 7;
  int v17 = (void *)((v16 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(((unint64_t)v11 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  unint64_t v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v10) = *(unsigned char *)(v24 + 40);
  swift_retain();
  swift_retain();
  if (v10)
  {
    uint64_t v25 = *(void *)(v24 + 24);
    if (v25)
    {
      *(void *)(v23 + 24) = v25;
      *(void *)(v23 + 32) = *(void *)(v24 + 32);
      (**(void (***)(unint64_t, unint64_t))(v25 - 8))(v23, v24);
    }
    else
    {
      long long v26 = *(_OWORD *)v24;
      long long v27 = *(_OWORD *)(v24 + 16);
      *(void *)(v23 + 32) = *(void *)(v24 + 32);
      *(_OWORD *)unint64_t v23 = v26;
      *(_OWORD *)(v23 + 16) = v27;
    }
    *(unsigned char *)(v23 + 40) = 1;
  }
  else
  {
    *(void *)unint64_t v23 = *(void *)v24;
    *(unsigned char *)(v23 + 40) = 0;
    swift_retain();
  }
  uint64_t v28 = *(void *)(sub_21915A198() - 8);
  uint64_t v29 = v28;
  uint64_t v30 = *(_DWORD *)(v28 + 80) & 0xF8 | 7;
  long long v31 = (void *)((v23 + v30 + 41) & ~v30);
  long long v32 = (unsigned __int8 *)((v24 + v30 + 41) & ~v30);
  if (*(void *)(v28 + 64) <= 8uLL) {
    uint64_t v33 = 8;
  }
  else {
    uint64_t v33 = *(void *)(v28 + 64);
  }
  unsigned int v34 = v32[v33];
  unsigned int v35 = v34 - 2;
  if (v34 >= 2)
  {
    if (v33 <= 3) {
      uint64_t v36 = v33;
    }
    else {
      uint64_t v36 = 4;
    }
    switch(v36)
    {
      case 1:
        int v37 = *v32;
        goto LABEL_19;
      case 2:
        int v37 = *(unsigned __int16 *)v32;
        goto LABEL_19;
      case 3:
        int v37 = *(unsigned __int16 *)v32 | (v32[2] << 16);
        goto LABEL_19;
      case 4:
        int v37 = *(_DWORD *)v32;
LABEL_19:
        int v38 = (v37 | (v35 << (8 * v33))) + 2;
        unsigned int v34 = v37 + 2;
        if (v33 < 4) {
          unsigned int v34 = v38;
        }
        break;
      default:
        break;
    }
  }
  if (v34 == 1)
  {
    (*(void (**)(void *))(v29 + 16))(v31);
    char v39 = 1;
  }
  else
  {
    *long long v31 = *(void *)v32;
    swift_retain();
    char v39 = 0;
  }
  *((unsigned char *)v31 + v33) = v39;
  return v42;
}

void *sub_2190B01F4(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 | 7) + 16;
  uint64_t v8 = (void *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  uint64_t v9 = (void *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  *uint64_t v8 = *v9;
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)v10 + v6 + 8) & ~v6, ((unint64_t)v11 + v6 + 8) & ~v6, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(v5 + 64) + ((v6 + 16) & ~v6) + 7;
  unsigned int v13 = (void *)(((unint64_t)v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v9 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  *unsigned int v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v17 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  unint64_t v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v19 != v20)
  {
    sub_218FFE158(v19, &qword_26AD012A8);
    if (*(unsigned char *)(v20 + 40))
    {
      uint64_t v21 = *(void *)(v20 + 24);
      if (v21)
      {
        *(void *)(v19 + 24) = v21;
        *(void *)(v19 + 32) = *(void *)(v20 + 32);
        (**(void (***)(unint64_t, unint64_t))(v21 - 8))(v19, v20);
      }
      else
      {
        long long v22 = *(_OWORD *)v20;
        long long v23 = *(_OWORD *)(v20 + 16);
        *(void *)(v19 + 32) = *(void *)(v20 + 32);
        *(_OWORD *)unint64_t v19 = v22;
        *(_OWORD *)(v19 + 16) = v23;
      }
      *(unsigned char *)(v19 + 40) = 1;
    }
    else
    {
      *(void *)unint64_t v19 = *(void *)v20;
      *(unsigned char *)(v19 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v24 = sub_21915A198();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  long long v27 = (unsigned __int8 *)((v19 + v26 + 41) & ~v26);
  uint64_t v28 = (unsigned __int8 *)((v20 + v26 + 41) & ~v26);
  if (v27 != v28)
  {
    uint64_t v29 = v24;
    uint64_t v30 = *(void *)(v24 - 8);
    if (*(void *)(v25 + 64) <= 8uLL) {
      uint64_t v31 = 8;
    }
    else {
      uint64_t v31 = *(void *)(v25 + 64);
    }
    unsigned int v32 = v27[v31];
    unsigned int v33 = v32 - 2;
    if (v32 >= 2)
    {
      if (v31 <= 3) {
        uint64_t v34 = v31;
      }
      else {
        uint64_t v34 = 4;
      }
      switch(v34)
      {
        case 1:
          int v35 = *v27;
          goto LABEL_21;
        case 2:
          int v35 = *(unsigned __int16 *)v27;
          goto LABEL_21;
        case 3:
          int v35 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_21;
        case 4:
          int v35 = *(_DWORD *)v27;
LABEL_21:
          int v36 = (v35 | (v33 << (8 * v31))) + 2;
          unsigned int v32 = v35 + 2;
          if (v31 < 4) {
            unsigned int v32 = v36;
          }
          break;
        default:
          break;
      }
    }
    if (v32 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v30 + 8))(v27, v24);
    }
    else {
      swift_release();
    }
    unsigned int v37 = v28[v31];
    unsigned int v38 = v37 - 2;
    if (v37 >= 2)
    {
      if (v31 <= 3) {
        uint64_t v39 = v31;
      }
      else {
        uint64_t v39 = 4;
      }
      switch(v39)
      {
        case 1:
          int v40 = *v28;
          goto LABEL_35;
        case 2:
          int v40 = *(unsigned __int16 *)v28;
          goto LABEL_35;
        case 3:
          int v40 = *(unsigned __int16 *)v28 | (v28[2] << 16);
          goto LABEL_35;
        case 4:
          int v40 = *(_DWORD *)v28;
LABEL_35:
          int v41 = (v40 | (v38 << (8 * v31))) + 2;
          unsigned int v37 = v40 + 2;
          if (v31 < 4) {
            unsigned int v37 = v41;
          }
          break;
        default:
          break;
      }
    }
    if (v37 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 16))(v27, v28, v29);
      v27[v31] = 1;
    }
    else
    {
      *(void *)long long v27 = *(void *)v28;
      v27[v31] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_2190B0638(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (v8 | 7) + 16;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  unint64_t v11 = (void *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  *uint64_t v10 = *v11;
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  v6(((unint64_t)v12 + v8 + 8) & ~v8, ((unint64_t)v13 + v8 + 8) & ~v8, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(v7 + 32) + ((v8 + 16) & ~v8) + 7;
  uint64_t v15 = (_OWORD *)(((unint64_t)v10 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)(((unint64_t)v11 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  int v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v17 = *v18;
  unint64_t v19 = (long long *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v21 = *v19;
  long long v20 = v19[1];
  long long v22 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)((char *)v22 + 25) = *(long long *)((char *)v19 + 25);
  *long long v22 = v21;
  v22[1] = v20;
  uint64_t v23 = *(void *)(sub_21915A198() - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  uint64_t v25 = v24 + 48;
  unint64_t v26 = (unint64_t)v22 + v24 + 48;
  unint64_t v27 = ~v24 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (void *)(v26 & v27);
  uint64_t v29 = (unsigned __int8 *)(((unint64_t)v19 + v25) & v27);
  if (*(void *)(v23 + 64) <= 8uLL) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = *(void *)(v23 + 64);
  }
  unsigned int v31 = v29[v30];
  unsigned int v32 = v31 - 2;
  if (v31 >= 2)
  {
    if (v30 <= 3) {
      uint64_t v33 = v30;
    }
    else {
      uint64_t v33 = 4;
    }
    switch(v33)
    {
      case 1:
        int v34 = *v29;
        goto LABEL_13;
      case 2:
        int v34 = *(unsigned __int16 *)v29;
        goto LABEL_13;
      case 3:
        int v34 = *(unsigned __int16 *)v29 | (v29[2] << 16);
        goto LABEL_13;
      case 4:
        int v34 = *(_DWORD *)v29;
LABEL_13:
        int v35 = (v34 | (v32 << (8 * v30))) + 2;
        unsigned int v31 = v34 + 2;
        if (v30 < 4) {
          unsigned int v31 = v35;
        }
        break;
      default:
        break;
    }
  }
  if (v31 == 1)
  {
    (*(void (**)(void *))(v23 + 32))(v28);
    char v36 = 1;
  }
  else
  {
    char v36 = 0;
    *uint64_t v28 = *(void *)v29;
  }
  *((unsigned char *)v28 + v30) = v36;
  return a1;
}

void *sub_2190B08A8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 | 7) + 16;
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  *uint64_t v9 = *v10;
  swift_release();
  unint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v11 = *v12;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v6 + 64) + ((v7 + 16) & ~v7) + 7;
  uint64_t v14 = (_OWORD *)(((unint64_t)v9 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (unint64_t)v10 + v13;
  unint64_t v16 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  int v17 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 &= 0xFFFFFFFFFFFFFFF8;
  _OWORD *v17 = *(_OWORD *)v16;
  swift_release();
  uint64_t v18 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (_OWORD *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v18 != v19)
  {
    sub_218FFE158((uint64_t)v18, &qword_26AD012A8);
    long long v20 = *(_OWORD *)((char *)v19 + 25);
    long long v21 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v21;
    *(_OWORD *)((char *)v18 + 25) = v20;
  }
  uint64_t v22 = sub_21915A198();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  uint64_t v25 = (unsigned __int8 *)(((unint64_t)v18 + v24 + 41) & ~v24);
  unint64_t v26 = (unsigned __int8 *)(((unint64_t)v19 + v24 + 41) & ~v24);
  if (v25 != v26)
  {
    uint64_t v27 = v22;
    uint64_t v28 = *(void *)(v22 - 8);
    if (*(void *)(v23 + 64) <= 8uLL) {
      uint64_t v29 = 8;
    }
    else {
      uint64_t v29 = *(void *)(v23 + 64);
    }
    unsigned int v30 = v25[v29];
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v32 = v29;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v25;
          goto LABEL_16;
        case 2:
          int v33 = *(unsigned __int16 *)v25;
          goto LABEL_16;
        case 3:
          int v33 = *(unsigned __int16 *)v25 | (v25[2] << 16);
          goto LABEL_16;
        case 4:
          int v33 = *(_DWORD *)v25;
LABEL_16:
          int v34 = (v33 | (v31 << (8 * v29))) + 2;
          unsigned int v30 = v33 + 2;
          if (v29 < 4) {
            unsigned int v30 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v30 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v28 + 8))(v25, v22);
    }
    else {
      swift_release();
    }
    unsigned int v35 = v26[v29];
    unsigned int v36 = v35 - 2;
    if (v35 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v37 = v29;
      }
      else {
        uint64_t v37 = 4;
      }
      switch(v37)
      {
        case 1:
          int v38 = *v26;
          goto LABEL_30;
        case 2:
          int v38 = *(unsigned __int16 *)v26;
          goto LABEL_30;
        case 3:
          int v38 = *(unsigned __int16 *)v26 | (v26[2] << 16);
          goto LABEL_30;
        case 4:
          int v38 = *(_DWORD *)v26;
LABEL_30:
          int v39 = (v38 | (v36 << (8 * v29))) + 2;
          unsigned int v35 = v38 + 2;
          if (v29 < 4) {
            unsigned int v35 = v39;
          }
          break;
        default:
          break;
      }
    }
    if (v35 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 32))(v25, v26, v27);
      char v40 = 1;
    }
    else
    {
      char v40 = 0;
      *(void *)uint64_t v25 = *(void *)v26;
    }
    v25[v29] = v40;
  }
  return a1;
}

uint64_t sub_2190B0C3C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v5 + 84);
  }
  if ((int)v6 >= 0) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(void *)(sub_21915A198() - 8);
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v12 = v11 | 7;
  if (a2 <= v8) {
    goto LABEL_29;
  }
  uint64_t v13 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  unint64_t v14 = v10
      + ((v13
        + ((((((*(void *)(v5 + 64) + ((v11 + 16) & ~v11) + ((v11 + 16) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 41) & ~v13)
      + 1;
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v8 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v8 == 0x7FFFFFFF)
      {
        unint64_t v20 = *((void *)a1 + 1);
        if (v20 >= 0xFFFFFFFF) {
          LODWORD(v20) = -1;
        }
        return (v20 + 1);
      }
      else
      {
        long long v21 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
        return v21((v11 + (((((unint64_t)a1 + v12 + 16) & ~v12) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11, v6, AssociatedTypeWitness);
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_29;
  }
LABEL_21:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 > 3) {
      LODWORD(v14) = 4;
    }
    switch((int)v14)
    {
      case 2:
        LODWORD(v14) = *a1;
        break;
      case 3:
        LODWORD(v14) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v14) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v14) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v14 | v19) + 1;
}

void sub_2190B0F2C(_WORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    int v9 = 0x7FFFFFFF;
  }
  else {
    int v9 = *(_DWORD *)(v7 + 84);
  }
  if ((int)v8 >= 0) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(void *)(sub_21915A198() - 8);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12
      + ((v14
        + ((((((*(void *)(v7 + 64) + ((v13 + 16) & ~(v13 | 7)) + ((v13 + 16) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 41) & ~v14)
      + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *a1 = v20;
          *((unsigned char *)a1 + 2) = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *a1 = v20;
        }
        else
        {
          *(unsigned char *)a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        *((unsigned char *)a1 + v15) = v18;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v15) = v18;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)((char *)a1 + v15) = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      *((unsigned char *)a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)((char *)a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x2190B1298);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (v10 == 0x7FFFFFFF)
        {
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = (a2 - 1);
          }
        }
        else
        {
          long long v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
          v21((v13 + (((((unint64_t)a1 + (v13 | 7) + 16) & ~(v13 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v13, a2, v8, AssociatedTypeWitness);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for FlowStackTabView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2190B12D8()
{
  return sub_2190BA86C();
}

uint64_t sub_2190B12F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11 = (int *)type metadata accessor for FlowStackTabView();
  uint64_t v12 = (char *)a6 + v11[22];
  *(void *)uint64_t v12 = swift_getKeyPath();
  v12[40] = 0;
  uint64_t v13 = (uint64_t *)((char *)a6 + v11[23]);
  *uint64_t v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for FlowStackTabsAuthority();
  swift_retain();
  swift_getWitnessTable();
  *a6 = sub_219157E78();
  a6[1] = v14;
  uint64_t v15 = a1 + *(void *)(*(void *)a1 + 112);
  int v16 = (char *)a6 + v11[19];
  swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_219159188();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, v15, v17);
  uint64_t result = swift_release();
  unsigned int v19 = (uint64_t *)((char *)a6 + v11[20]);
  *unsigned int v19 = a2;
  v19[1] = a3;
  int v20 = (uint64_t *)((char *)a6 + v11[21]);
  *int v20 = a4;
  v20[1] = a5;
  return result;
}

uint64_t sub_2190B14F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v122 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v134 = *(void *)(a1 + 48);
  uint64_t v135 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v121 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v120 = (char *)&v91 - v4;
  uint64_t v118 = sub_21915A088();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  char v115 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v116 = (char *)&v91 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v119 = (char *)&v91 - v9;
  uint64_t v111 = *(void *)(a1 - 8);
  uint64_t v125 = *(void *)(v111 + 64);
  MEMORY[0x270FA5388](v10);
  long long v114 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  long long v112 = (char *)&v91 - v13;
  MEMORY[0x270FA5388](v14);
  v106 = (char *)&v91 - v15;
  uint64_t v133 = sub_219159188();
  MEMORY[0x270FA5388](v133);
  uint64_t v132 = (uint64_t)&v91 - v16;
  uint64_t v140 = *(void *)(a1 + 40);
  uint64_t v131 = type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v129 = sub_21915AF18();
  uint64_t v138 = *(void *)(a1 + 24);
  uint64_t v126 = sub_219158788();
  uint64_t v17 = sub_219157F48();
  uint64_t v139 = *(void *)(a1 + 56);
  uint64_t v18 = v139;
  v127 = (void (*)(void, void, void))sub_2190AE140();
  uint64_t v154 = v18;
  v155 = v127;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v144 = v17;
  uint64_t v145 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = OpaqueTypeMetadata2;
  uint64_t v137 = *(void *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v21 = sub_219157F48();
  uint64_t v22 = sub_219159738();
  uint64_t v136 = *(void *)(a1 + 64);
  uint64_t v23 = v136;
  uint64_t v24 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v152 = v23;
  uint64_t v153 = v24;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v151 = MEMORY[0x263F8D320];
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v144 = v21;
  uint64_t v145 = v22;
  uint64_t v146 = v25;
  uint64_t v147 = v26;
  uint64_t v27 = sub_2191590B8();
  uint64_t v96 = v27;
  uint64_t v28 = v129;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v95 = v29;
  uint64_t v144 = v17;
  uint64_t v145 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v94 = OpaqueTypeConformance2;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v93 = v31;
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v144 = v28;
  uint64_t v145 = OpaqueTypeMetadata2;
  uint64_t v146 = v27;
  uint64_t v147 = v29;
  uint64_t v148 = OpaqueTypeConformance2;
  uint64_t v149 = v31;
  uint64_t v150 = v92;
  uint64_t v32 = type metadata accessor for _FlowStackTabViewBody();
  uint64_t v109 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v128 = (uint64_t)&v91 - v33;
  uint64_t v100 = v32;
  uint64_t v34 = sub_219157F48();
  uint64_t v104 = v34;
  uint64_t v113 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v101 = (char *)&v91 - v35;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v142 = v99;
  v143 = v127;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v103 = v36;
  uint64_t v37 = v134;
  uint64_t v38 = v135;
  uint64_t v39 = AssociatedTypeWitness;
  uint64_t v102 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v144 = v34;
  uint64_t v145 = v39;
  uint64_t v146 = v36;
  uint64_t v147 = v102;
  uint64_t v107 = MEMORY[0x263F1B260];
  uint64_t v108 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v98 = (char *)&v91 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v105 = (uint64_t)&v91 - v42;
  uint64_t v43 = v141;
  uint64_t v144 = sub_21914FB58();
  uint64_t v91 = v43 + *(int *)(a1 + 76);
  sub_219159148();
  uint64_t v44 = v111;
  v127 = *(void (**)(void, void, void))(v111 + 16);
  unsigned int v45 = v106;
  v127(v106, v43, a1);
  uint64_t v46 = *(unsigned __int8 *)(v44 + 80);
  v125 += (v46 + 72) & ~v46;
  uint64_t v47 = (v46 + 72) & ~v46;
  uint64_t v126 = v47;
  uint64_t v124 = v46 | 7;
  int v48 = (void *)swift_allocObject();
  uint64_t v49 = v38;
  v48[2] = v38;
  uint64_t v50 = v137;
  uint64_t v51 = v138;
  _OWORD v48[3] = v138;
  v48[4] = v50;
  v48[5] = v140;
  v48[6] = v37;
  uint64_t v52 = v136;
  v48[7] = v139;
  v48[8] = v52;
  uint64_t v111 = *(void *)(v44 + 32);
  uint64_t v123 = a1;
  ((void (*)(char *, char *, uint64_t))v111)((char *)v48 + v47, v45, a1);
  uint64_t v53 = v112;
  v127(v112, v141, a1);
  char v54 = (void *)swift_allocObject();
  v54[2] = v49;
  v54[3] = v51;
  uint64_t v56 = v139;
  uint64_t v55 = v140;
  v54[4] = v50;
  v54[5] = v55;
  uint64_t v57 = v134;
  v54[6] = v134;
  v54[7] = v56;
  long long v58 = (char *)v54 + v126;
  v54[8] = v52;
  long long v59 = v53;
  uint64_t v60 = v123;
  char v61 = (void (*)(char *, char *, uint64_t))v111;
  ((void (*)(char *, char *, uint64_t))v111)(v58, v59, v123);
  uint64_t v62 = v114;
  v127(v114, v141, v60);
  long long v63 = (void *)swift_allocObject();
  uint64_t v64 = v138;
  v63[2] = v135;
  v63[3] = v64;
  v63[4] = v137;
  v63[5] = v55;
  v63[6] = v57;
  v63[7] = v56;
  uint64_t v65 = (char *)v63 + v126;
  v63[8] = v136;
  v61(v65, v62, v123);
  sub_2190B3828((uint64_t)&v144, v132, (uint64_t)sub_2190B402C, (uint64_t)v48, (uint64_t)sub_2190B4308, (uint64_t)v54, (uint64_t)sub_2190B4338, (uint64_t)v63, v128, v129, v97, v96, v95, v94, v93, v92);
  v66 = v115;
  sub_21915A038();
  sub_21914FB58();
  uint64_t v67 = MEMORY[0x21D481930]();
  swift_bridgeObjectRelease();
  uint64_t v147 = MEMORY[0x263F8D6C8];
  uint64_t v144 = v67;
  uint64_t v68 = v116;
  uint64_t v69 = v66;
  sub_21915A078();
  uint64_t v70 = *(void (**)(char *, uint64_t))(v117 + 8);
  uint64_t v71 = v118;
  v70(v69, v118);
  sub_218FFE158((uint64_t)&v144, qword_26AD03AB8);
  uint64_t v72 = AssociatedTypeWitness;
  uint64_t v147 = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_1Tm(&v144);
  uint64_t v73 = v133;
  MEMORY[0x21D47FB40](v133);
  v74 = v119;
  sub_21915A078();
  v70(v68, v71);
  sub_218FFE158((uint64_t)&v144, qword_26AD03AB8);
  v75 = v101;
  uint64_t v76 = v100;
  uint64_t v77 = v128;
  View.automationSemantics(_:)();
  v70(v74, v71);
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v77, v76);
  v78 = v120;
  MEMORY[0x21D47FB40](v73);
  uint64_t v79 = (void *)swift_allocObject();
  uint64_t v80 = v138;
  v79[2] = v135;
  v79[3] = v80;
  uint64_t v81 = v140;
  v79[4] = v137;
  v79[5] = v81;
  uint64_t v82 = v139;
  v79[6] = v134;
  v79[7] = v82;
  v79[8] = v136;
  uint64_t v83 = (uint64_t)v98;
  uint64_t v84 = v104;
  uint64_t v85 = v103;
  uint64_t v86 = v102;
  sub_219158DF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v78, v72);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v75, v84);
  uint64_t v144 = v84;
  uint64_t v145 = v72;
  uint64_t v146 = v85;
  uint64_t v147 = v86;
  swift_getOpaqueTypeConformance2();
  uint64_t v87 = v105;
  uint64_t v88 = v108;
  sub_218FFDE04(v83, v108, v105);
  uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v89(v83, v88);
  sub_218FFDE04(v87, v88, v122);
  return ((uint64_t (*)(uint64_t, uint64_t))v89)(v87, v88);
}

uint64_t sub_2190B22E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v57 = a8;
  uint64_t v65 = a5;
  uint64_t v66 = a1;
  uint64_t v64 = a9;
  uint64_t v53 = sub_21915A198();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v51 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_219159868();
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unsigned int v45 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_219159648();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  int v48 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2191595A8();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v55 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_21915AB08();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  long long v58 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v21 = sub_21915B378();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v45 - v23;
  uint64_t v25 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v26);
  long long v63 = (char *)&v45 - v27;
  uint64_t v56 = a2;
  uint64_t v85 = sub_21914FB58();
  uint64_t v61 = a3;
  uint64_t v67 = a3;
  uint64_t v28 = v57;
  uint64_t v68 = a4;
  uint64_t v69 = v65;
  uint64_t v54 = a6;
  uint64_t v70 = a6;
  uint64_t v62 = a7;
  uint64_t v71 = a7;
  uint64_t v72 = v57;
  uint64_t v73 = v64;
  uint64_t v74 = v66;
  sub_21915AF18();
  swift_getWitnessTable();
  sub_21915AE18();
  swift_bridgeObjectRelease();
  uint64_t v29 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    unsigned int v30 = v58;
    sub_21915AAA8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915D6B0;
    sub_219159598();
    sub_219159588();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v76 = AssociatedTypeWitness;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v75);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1Tm, v66, AssociatedTypeWitness);
    sub_219159548();
    sub_218FFE158((uint64_t)v75, qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    sub_219159528();
    uint64_t v33 = v60;
    sub_21915A6D8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v30, v33);
  }
  else
  {
    uint64_t v35 = v58;
    uint64_t v36 = v59;
    uint64_t v37 = v60;
    uint64_t v66 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v63, v24, v20);
    v75[0] = v61;
    v75[1] = a4;
    v75[2] = v65;
    uint64_t v76 = v54;
    uint64_t v77 = v62;
    uint64_t v78 = v28;
    uint64_t v79 = v64;
    type metadata accessor for FlowStackTabView();
    sub_2190FB834((uint64_t)&v80);
    if (v81)
    {
      sub_219018288(&v80, (uint64_t)&v82);
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, &v63[*(int *)(v20 + 44)], v47);
      uint64_t v38 = v48;
      sub_219159638();
      uint64_t v39 = v83;
      uint64_t v40 = v84;
      __swift_project_boxed_opaque_existential_1(&v82, v83);
      uint64_t v41 = v50;
      uint64_t v76 = v50;
      uint64_t v77 = MEMORY[0x263F508D0];
      uint64_t v42 = __swift_allocate_boxed_opaque_existential_1Tm(v75);
      uint64_t v43 = v49;
      (*(void (**)(uint64_t *, char *, uint64_t))(v49 + 16))(v42, v38, v41);
      uint64_t v44 = v51;
      sub_2190F9F54(v51);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v40 + 24))(v75, v44, v39, v40);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v41);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
    }
    else
    {
      sub_218FFE158((uint64_t)&v80, &qword_26AD010B8);
      sub_21915AAC8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
      sub_2191595F8();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915D6B0;
      sub_219159528();
      sub_219159528();
      sub_21915A6D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v63, v20);
    }
  }
}

uint64_t sub_2190B2D14()
{
  return sub_21915AD08() & 1;
}

uint64_t sub_2190B2DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v48 = a7;
  uint64_t v47 = a6;
  uint64_t v46 = a5;
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  uint64_t v59 = a9;
  uint64_t v13 = sub_219158718();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21915A088();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v49 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v42 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219158788();
  uint64_t v41 = a4;
  uint64_t v19 = sub_219157F48();
  uint64_t v52 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v40 - v20;
  unint64_t v22 = sub_2190AE140();
  uint64_t v40 = a8;
  uint64_t v67 = a8;
  unint64_t v68 = v22;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v60 = v19;
  uint64_t v61 = WitnessTable;
  uint64_t v44 = MEMORY[0x263F1AE68];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v45 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - v27;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v62 = v46;
  uint64_t v63 = v47;
  uint64_t v64 = v48;
  uint64_t v65 = a8;
  uint64_t v66 = a10;
  uint64_t v29 = type metadata accessor for FlowStackTabView();
  uint64_t v30 = v51;
  uint64_t v31 = v42;
  (*(void (**)(uint64_t))(v50 + *(int *)(v29 + 80)))(v51);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = AssociatedTypeWitness;
  uint64_t v33 = __swift_allocate_boxed_opaque_existential_1Tm(&v60);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v33, v30, AssociatedTypeWitness);
  uint64_t v34 = v49;
  sub_21915A068();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
  uint64_t v35 = v41;
  View.automationSemantics(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v55);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v35);
  uint64_t v36 = v56;
  sub_219158708();
  uint64_t v37 = WitnessTable;
  sub_219158C18();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v58);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v19);
  uint64_t v60 = v19;
  uint64_t v61 = v37;
  swift_getOpaqueTypeConformance2();
  sub_218FFDE04((uint64_t)v25, OpaqueTypeMetadata2, (uint64_t)v28);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v45 + 8);
  v38(v25, OpaqueTypeMetadata2);
  sub_218FFDE04((uint64_t)v28, OpaqueTypeMetadata2, v59);
  return ((uint64_t (*)(char *, uint64_t))v38)(v28, OpaqueTypeMetadata2);
}

uint64_t sub_2190B3318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  v37[2] = a7;
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  uint64_t v51 = a9;
  uint64_t v49 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v41 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v17 = sub_219157F48();
  uint64_t v42 = v17;
  uint64_t v50 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v39 = (char *)v37 - v18;
  uint64_t v57 = a3;
  unint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v60 = a6;
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  v37[0] = a10;
  uint64_t v63 = a10;
  uint64_t v19 = type metadata accessor for FlowStackTabView();
  v37[1] = v19;
  uint64_t v20 = sub_219159738();
  uint64_t v45 = v20;
  uint64_t v21 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v55 = a10;
  uint64_t v56 = v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v44 = WitnessTable;
  uint64_t v54 = MEMORY[0x263F8D320];
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v57 = v17;
  unint64_t v58 = v20;
  uint64_t v59 = WitnessTable;
  uint64_t v60 = v43;
  uint64_t v23 = sub_2191590B8();
  uint64_t v48 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v38 = (char *)v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v40 = (uint64_t)v37 - v26;
  uint64_t v27 = *(void (**)(uint64_t, void))(v46 + *(int *)(v19 + 84));
  uint64_t v28 = (int *)type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v29 = v47;
  uint64_t v30 = v41;
  v27(v47 + v28[12], *(void *)(v47 + v28[13]));
  LOBYTE(v57) = 3;
  uint64_t v31 = v39;
  View.presentedBy(_:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, a5);
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_21915B6A8();
  uint64_t v52 = *(void *)(v29 + v28[14]);
  sub_21915B668();
  sub_21915AD88();
  swift_bridgeObjectRelease();
  uint64_t v52 = v57;
  unint64_t v53 = v58;
  sub_219159748();
  uint64_t v52 = v57;
  unint64_t v53 = v58;
  uint64_t v32 = (uint64_t)v38;
  uint64_t v33 = v42;
  sub_219158CC8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v33);
  swift_getWitnessTable();
  uint64_t v34 = v40;
  sub_218FFDE04(v32, v23, v40);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v35(v32, v23);
  sub_218FFDE04(v34, v23, v51);
  return ((uint64_t (*)(uint64_t, uint64_t))v35)(v34, v23);
}

uint64_t sub_2190B3828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v76 = a7;
  uint64_t v77 = a8;
  uint64_t v74 = a5;
  uint64_t v75 = a6;
  uint64_t v71 = a4;
  uint64_t v73 = a3;
  uint64_t v81 = a2;
  uint64_t v67 = a1;
  uint64_t v86 = a9;
  uint64_t v82 = a11;
  uint64_t v83 = a12;
  uint64_t v84 = a15;
  swift_getAssociatedTypeWitness();
  uint64_t v85 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v65 = sub_219159188();
  uint64_t v78 = *(void *)(v65 - 8);
  uint64_t v17 = *(void *)(v78 + 64);
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v62 = (char *)&v59 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v70 = (char *)&v59 - v22;
  uint64_t v87 = a10;
  uint64_t v88 = a11;
  uint64_t v89 = a12;
  uint64_t v90 = a13;
  uint64_t v79 = a13;
  uint64_t v80 = a14;
  uint64_t v91 = a14;
  uint64_t v92 = a15;
  uint64_t v93 = a16;
  uint64_t v23 = type metadata accessor for _FlowStackTabViewBody();
  uint64_t v24 = *(int *)(v23 + 88);
  uint64_t v25 = v23;
  uint64_t v69 = v23;
  uint64_t v26 = v86;
  uint64_t v27 = v86 + v24;
  *(void *)uint64_t v27 = swift_getKeyPath();
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_OWORD *)(v27 + 33) = 0u;
  uint64_t v28 = v26 + *(int *)(v25 + 92);
  *(void *)uint64_t v28 = swift_getKeyPath();
  *(unsigned char *)(v28 + 8) = 0;
  uint64_t v68 = *(void *)(a10 - 8);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
  uint64_t v61 = a10;
  v29(v26, a1, a10);
  uint64_t v30 = v78;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v31 = v81;
  uint64_t v32 = v65;
  v64(v20, v81, v65);
  sub_21915AF98();
  uint64_t v33 = sub_21915AF88();
  uint64_t v34 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v35 = (v34 + 88) & ~v34;
  uint64_t v63 = v34 | 7;
  uint64_t v36 = (char *)swift_allocObject();
  uint64_t v37 = MEMORY[0x263F8F500];
  *((void *)v36 + 2) = v33;
  *((void *)v36 + 3) = v37;
  uint64_t v38 = v82;
  *((void *)v36 + 4) = a10;
  *((void *)v36 + 5) = v38;
  uint64_t v39 = v79;
  *((void *)v36 + 6) = v83;
  *((void *)v36 + 7) = v39;
  uint64_t v40 = v84;
  *((void *)v36 + 8) = v80;
  *((void *)v36 + 9) = v40;
  *((void *)v36 + 10) = v85;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v60(&v36[v35], v62, v32);
  uint64_t v41 = v66;
  v64(v66, v31, v32);
  uint64_t v42 = v71;
  swift_retain();
  uint64_t v43 = sub_21915AF88();
  uint64_t v44 = (char *)swift_allocObject();
  *((void *)v44 + 2) = v43;
  uint64_t v45 = v61;
  *((void *)v44 + 3) = MEMORY[0x263F8F500];
  *((void *)v44 + 4) = v45;
  uint64_t v46 = v83;
  *((void *)v44 + 5) = v82;
  *((void *)v44 + 6) = v46;
  uint64_t v47 = v80;
  *((void *)v44 + 7) = v79;
  *((void *)v44 + 8) = v47;
  *((void *)v44 + 9) = v84;
  *((void *)v44 + 10) = v85;
  uint64_t v48 = v41;
  uint64_t v49 = (uint64_t (*)(uint64_t, char *, uint64_t))v60;
  v60(&v44[v35], v48, v32);
  uint64_t v50 = &v44[(v35 + v17 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v50 = v73;
  *((void *)v50 + 1) = v42;
  uint64_t v51 = v70;
  sub_219159158();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v81, v32);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v45);
  uint64_t v52 = v69;
  uint64_t v53 = v86;
  uint64_t result = v49(v86 + *(int *)(v69 + 76), v51, v32);
  uint64_t v55 = (void *)(v53 + *(int *)(v52 + 80));
  uint64_t v56 = v75;
  *uint64_t v55 = v74;
  v55[1] = v56;
  uint64_t v57 = (void *)(v53 + *(int *)(v52 + 84));
  uint64_t v58 = v77;
  *uint64_t v57 = v76;
  v57[1] = v58;
  return result;
}

uint64_t sub_2190B3D34()
{
  uint64_t v0 = sub_219159C18();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2191595A8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v10 = 0;
  uint64_t v11 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_21915B6A8();
  uint64_t v5 = sub_21914A960(v10, v11);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  uint64_t v12 = MEMORY[0x263F8D310];
  uint64_t v10 = v5;
  uint64_t v11 = v7;
  sub_219159558();
  sub_218FFE158((uint64_t)&v10, qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_21915AA68();
  __swift_project_boxed_opaque_existential_1(&v10, v12);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F50A10], v0);
  sub_21915A698();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for _FlowStackTabViewBody()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2190B402C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = *(void *)(type metadata accessor for FlowStackTabView() - 8);
  return sub_2190B22E8(a1, (uint64_t)v1 + ((*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v3, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = (int *)type metadata accessor for FlowStackTabView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_release();
  uint64_t v3 = v2 + v1[19];
  swift_release();
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_219159188();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v3 + *(int *)(v5 + 32), AssociatedTypeWitness);
  swift_release();
  swift_release();
  uint64_t v6 = v2 + v1[22];
  if (*(unsigned char *)(v6 + 40))
  {
    if (*(void *)(v6 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 + v1[23];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_21915A198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2190B4308(uint64_t a1)
{
  return sub_2190BACFC(a1, (uint64_t (*)(void, void *))type metadata accessor for FlowStackTabView, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2190B2DBC);
}

uint64_t sub_2190B4338(uint64_t a1)
{
  return sub_2190BACFC(a1, (uint64_t (*)(void, void *))type metadata accessor for FlowStackTabView, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2190B3318);
}

uint64_t sub_2190B4364()
{
  return swift_deallocObject();
}

uint64_t sub_2190B4374()
{
  return sub_2190B3D34();
}

uint64_t sub_2190B43A8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_219159188();
  return MEMORY[0x21D47FB40](v0);
}

uint64_t sub_2190B4438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v12 - v9, a1, AssociatedTypeWitness, v8);
  sub_219159188();
  sub_219159128();
  return a5(a1);
}

uint64_t sub_2190B4578@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v3 = *((void *)a1 + 8);
  uint64_t v159 = *((void *)a1 + 5);
  uint64_t v152 = *(void *)(*(void *)(v159 + 8) + 8);
  uint64_t v158 = *((void *)a1 + 2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v136 = sub_219159188();
  uint64_t v5 = sub_21915B378();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v135 = (char *)v118 - v6;
  uint64_t v7 = *((void *)a1 + 4);
  uint64_t v160 = *((void *)a1 + 3);
  uint64_t v161 = v7;
  uint64_t v162 = *((void *)a1 + 7);
  uint64_t v154 = a1;
  uint64_t v8 = *((void *)a1 + 6);
  uint64_t v190 = v7;
  uint64_t v191 = v160;
  uint64_t v192 = v162;
  uint64_t v193 = v8;
  swift_getOpaqueTypeMetadata2();
  uint64_t v146 = v3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v148 = sub_2191585A8();
  uint64_t v157 = sub_219157F48();
  sub_21915B378();
  uint64_t v184 = AssociatedConformanceWitness;
  swift_getWitnessTable();
  sub_219158088();
  swift_getWitnessTable();
  sub_2191585A8();
  uint64_t v10 = sub_219157F48();
  uint64_t v11 = v158;
  uint64_t v190 = v158;
  uint64_t v191 = v4;
  uint64_t v192 = v10;
  uint64_t v193 = v159;
  uint64_t v194 = AssociatedConformanceWitness;
  uint64_t v12 = sub_2191591E8();
  uint64_t v190 = v161;
  uint64_t v191 = v160;
  uint64_t v192 = v162;
  uint64_t v193 = v8;
  uint64_t v137 = v8;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v182 = OpaqueTypeConformance2;
  uint64_t v183 = WitnessTable;
  uint64_t v149 = MEMORY[0x263F18E48];
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v150 = swift_getWitnessTable();
  uint64_t v180 = v14;
  uint64_t v181 = v150;
  uint64_t v179 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v190 = v4;
  uint64_t v191 = v12;
  uint64_t v129 = v12;
  uint64_t v192 = AssociatedConformanceWitness;
  uint64_t v193 = v15;
  uint64_t v125 = v15;
  uint64_t v157 = sub_219159278();
  uint64_t v128 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  v127 = (char *)v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v126 = (uint64_t)v118 - v18;
  uint64_t v190 = v11;
  uint64_t v191 = v4;
  uint64_t v155 = v4;
  uint64_t v192 = v160;
  uint64_t v193 = v159;
  uint64_t v194 = AssociatedConformanceWitness;
  sub_2191591E8();
  swift_getTupleTypeMetadata3();
  uint64_t v19 = sub_2191593B8();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v190 = v4;
  uint64_t v191 = v19;
  uint64_t v141 = AssociatedConformanceWitness;
  uint64_t v192 = AssociatedConformanceWitness;
  uint64_t v193 = v20;
  uint64_t v21 = sub_219158998();
  uint64_t v22 = sub_219158068();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v190 = v21;
  uint64_t v191 = v22;
  uint64_t v24 = MEMORY[0x263F19070];
  uint64_t v192 = v23;
  uint64_t v193 = MEMORY[0x263F19070];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v190 = v21;
  uint64_t v191 = v22;
  uint64_t v192 = v23;
  uint64_t v193 = v24;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v190 = OpaqueTypeMetadata2;
  uint64_t v191 = v26;
  uint64_t v27 = swift_getOpaqueTypeMetadata2();
  uint64_t v28 = v161;
  sub_219157F48();
  uint64_t v29 = sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C03E88);
  uint64_t v30 = sub_2191584D8();
  uint64_t v190 = OpaqueTypeMetadata2;
  uint64_t v191 = v26;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v177 = v162;
  uint64_t v178 = WitnessTable;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v176 = v150;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
  uint64_t WitnessTable = v32;
  uint64_t v173 = v32;
  uint64_t v174 = v33;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v124 = v27;
  uint64_t v190 = v27;
  uint64_t v191 = MEMORY[0x263F1BA08];
  uint64_t v120 = v31;
  uint64_t v121 = v30;
  uint64_t v192 = v30;
  uint64_t v193 = v31;
  uint64_t v194 = MEMORY[0x263F1BA00];
  uint64_t v195 = v34;
  v118[1] = v34;
  uint64_t v35 = sub_219158368();
  uint64_t v123 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v119 = (char *)v118 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v122 = (uint64_t)v118 - v38;
  uint64_t v150 = v39;
  uint64_t v40 = sub_2191584D8();
  uint64_t v139 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v138 = (char *)v118 - v41;
  uint64_t v133 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v131 = (char *)v118 - v43;
  uint64_t v132 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v44);
  v130 = (char *)v118 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = v29;
  uint64_t v134 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)v118 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49);
  uint64_t v144 = (char *)v118 - v50;
  uint64_t v51 = v158;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v55 = (char *)v118 - v54;
  uint64_t v56 = swift_checkMetadataState();
  uint64_t v142 = *(void *)(v56 - 8);
  uint64_t v143 = v56;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = (char *)v118 - v57;
  uint64_t v149 = v40;
  uint64_t v148 = sub_2191584D8();
  uint64_t v145 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  uint64_t AssociatedTypeWitness = (uint64_t)v118 - v59;
  uint64_t v60 = v153;
  if (sub_21915B158() == 1)
  {
    uint64_t v61 = v60;
    sub_21915B148();
    uint64_t v62 = (void (*)(uint64_t *, void))sub_21915B1F8();
    uint64_t v63 = *(void (**)(char *))(v142 + 16);
    v118[0] = v58;
    v63(v58);
    v62(&v190, 0);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
    uint64_t v64 = v130;
    (*(void (**)(char *))(v61 + v154[21]))(v58);
    uint64_t v65 = (uint64_t)v131;
    sub_21915B498();
    uint64_t v66 = v161;
    uint64_t v67 = v155;
    sub_2190B5808(v65, 1, v161, v155, v162, v141, (uint64_t)v48);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v65, v67);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v64, v66);
    uint64_t v68 = (uint64_t)v144;
    uint64_t v69 = v140;
    uint64_t v70 = WitnessTable;
    sub_218FFDE04((uint64_t)v48, v140, (uint64_t)v144);
    uint64_t v71 = *(void (**)(char *, uint64_t))(v134 + 8);
    v71(v48, v69);
    sub_218FFDE04(v68, v69, (uint64_t)v48);
    uint64_t v72 = swift_getWitnessTable();
    uint64_t v73 = (uint64_t)v138;
    sub_219050FE4((uint64_t)v48, v69);
    v71(v48, v69);
    uint64_t v163 = v70;
    uint64_t v164 = v72;
    uint64_t v74 = v149;
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_219050FE4(v73, v74);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v73, v74);
    v71(v144, v69);
    (*(void (**)(void, uint64_t))(v142 + 8))(v118[0], v143);
  }
  else
  {
    uint64_t v75 = v135;
    uint64_t v76 = v136;
    uint64_t v77 = v160;
    uint64_t v78 = v51;
    uint64_t v79 = v60 + v154[23];
    uint64_t v80 = *(void *)v79;
    char v81 = *(unsigned char *)(v79 + 8);
    sub_218FFE128(*(void *)v79, v81);
    char v82 = sub_2190FAE64(v80, v81);
    sub_218FFDDBC(v80, v81);
    if ((v82 & 1) == 0) {
      goto LABEL_6;
    }
    uint64_t v83 = v60 + v154[22];
    long long v84 = *(_OWORD *)(v83 + 16);
    v188[0] = *(_OWORD *)v83;
    v188[1] = v84;
    v188[2] = *(_OWORD *)(v83 + 32);
    char v189 = *(unsigned char *)(v83 + 48);
    sub_219024A0C((uint64_t)v188, (uint64_t)&v190, &qword_267C05C20);
    sub_2190BA8C8((uint64_t)&v190, (void (*)(void, void, void, void, void, void, void))sub_2190B9318);
    sub_2190FBAA4(v185);
    sub_2190BA8C8((uint64_t)v188, (void (*)(void, void, void, void, void, void, void))sub_2190B94C8);
    uint64_t v85 = sub_219024A0C((uint64_t)v185, (uint64_t)v186, &qword_267C05C28);
    if (*(void *)&v186[0])
    {
      v187[0] = v186[0];
      v187[1] = v186[1];
      v187[2] = v186[2];
      MEMORY[0x270FA5388](v85);
      v118[-10] = v78;
      v118[-9] = v77;
      uint64_t v86 = v161;
      uint64_t v87 = v162;
      uint64_t v88 = v159;
      v118[-8] = v161;
      v118[-7] = v88;
      v118[-6] = v137;
      v118[-5] = v87;
      uint64_t v89 = v146;
      v118[-4] = v146;
      v118[-3] = v60;
      v118[-2] = v187;
      MEMORY[0x270FA5388](v90);
      v118[-8] = v78;
      v118[-7] = v91;
      v118[-6] = v86;
      v118[-5] = v92;
      v118[-4] = v93;
      v118[-3] = v87;
      v118[-2] = v89;
      v118[-1] = v60;
      uint64_t v94 = (uint64_t)v119;
      sub_219158358();
      uint64_t v95 = v150;
      uint64_t v96 = swift_getWitnessTable();
      uint64_t v97 = v122;
      sub_218FFDE04(v94, v95, v122);
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
      v98(v94, v95);
      sub_218FFDE04(v97, v95, v94);
      uint64_t v99 = (uint64_t)v138;
      uint64_t v70 = WitnessTable;
      sub_218FFCBB0(v94, v140, v95);
      v98(v94, v95);
      uint64_t v165 = v70;
      uint64_t v166 = v96;
      uint64_t v100 = v149;
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_219050FE4(v99, v100);
      sub_2190BA978(v185);
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v99, v100);
      v98(v97, v95);
    }
    else
    {
LABEL_6:
      sub_219159148();
      uint64_t v101 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
      MEMORY[0x270FA5388](v101);
      v118[-8] = v78;
      v118[-7] = v77;
      uint64_t v102 = v159;
      v118[-6] = v161;
      v118[-5] = v102;
      uint64_t v103 = v162;
      v118[-4] = v137;
      v118[-3] = v103;
      v118[-2] = v146;
      v118[-1] = v60;
      uint64_t v104 = (uint64_t)v127;
      sub_219159258();
      uint64_t v105 = v157;
      swift_getWitnessTable();
      uint64_t v106 = v126;
      sub_218FFDE04(v104, v105, v126);
      uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
      v107(v104, v105);
      sub_218FFDE04(v106, v105, v104);
      uint64_t v108 = swift_getWitnessTable();
      uint64_t v70 = WitnessTable;
      uint64_t v171 = WitnessTable;
      uint64_t v172 = v108;
      uint64_t v109 = v149;
      swift_getWitnessTable();
      sub_218FFCBB0(v104, v109, v105);
      v107(v104, v105);
      v107(v106, v105);
    }
  }
  uint64_t v110 = v147;
  uint64_t v111 = v148;
  uint64_t v112 = v145;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v169 = v70;
  uint64_t v170 = v113;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v115 = swift_getWitnessTable();
  uint64_t v167 = v114;
  uint64_t v168 = v115;
  swift_getWitnessTable();
  uint64_t v116 = AssociatedTypeWitness;
  sub_218FFDE04(AssociatedTypeWitness, v111, v110);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v116, v111);
}

uint64_t sub_2190B5808@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v35 = a5;
  v31[1] = a3;
  int v36 = a2;
  uint64_t v44 = a7;
  uint64_t v10 = sub_21915B378();
  uint64_t v47 = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = v10;
  uint64_t v11 = sub_219158078();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)v31 - v12;
  uint64_t v32 = sub_219158078();
  uint64_t v13 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v15 = (char *)v31 - v14;
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v33 = sub_2191585A8();
  uint64_t v16 = sub_219157F48();
  uint64_t v37 = *(void *)(v16 - 8);
  uint64_t v38 = v16;
  v17.n128_f64[0] = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v31 - v18;
  uint64_t v20 = *(void *)(a4 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16);
  v31[0] = a1;
  v21(v15, a1, a4, v17);
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  v22(v15, 0, 1, a4);
  uint64_t v34 = v19;
  uint64_t v23 = v35;
  sub_219158D68();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v32);
  if (v36)
  {
    uint64_t v24 = v41;
    ((void (*)(char *, void, uint64_t))v21)(v41, v31[0], a4);
    v22(v24, 0, 1, a4);
    uint64_t v25 = swift_checkMetadataState();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  }
  else
  {
    uint64_t v26 = swift_checkMetadataState();
    uint64_t v24 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v41, 1, 1, v26);
  }
  sub_219158088();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v45 = v23;
  uint64_t v46 = v27;
  uint64_t v28 = v38;
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v29 = v34;
  sub_219158D68();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v29, v28);
}

uint64_t sub_2190B5CA8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v77 = a8;
  uint64_t v81 = a7;
  uint64_t v67 = a5;
  long long v84 = a2;
  uint64_t v82 = a1;
  uint64_t v86 = a9;
  uint64_t v13 = sub_219158068();
  uint64_t v85 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v83 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v80 = sub_219159188();
  MEMORY[0x270FA5388](v80);
  uint64_t v79 = (char *)&v57 - v16;
  sub_21915B378();
  uint64_t v78 = sub_219159188();
  uint64_t v17 = sub_21915B378();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v76 = (char *)&v57 - v18;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v96 = a3;
  uint64_t v97 = AssociatedTypeWitness;
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v20 = a4;
  uint64_t v98 = a4;
  uint64_t v99 = a6;
  uint64_t v21 = a6;
  uint64_t v57 = a6;
  uint64_t v100 = AssociatedConformanceWitness;
  uint64_t v22 = AssociatedConformanceWitness;
  uint64_t v72 = AssociatedConformanceWitness;
  sub_2191591E8();
  swift_getTupleTypeMetadata3();
  uint64_t v23 = sub_2191593B8();
  uint64_t v73 = v23;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v97 = v23;
  uint64_t v98 = v22;
  uint64_t v99 = WitnessTable;
  uint64_t v24 = sub_219158998();
  uint64_t v75 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v66 = (char *)&v57 - v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v96 = v24;
  uint64_t v97 = v13;
  uint64_t v60 = v13;
  uint64_t v98 = v26;
  uint64_t v99 = MEMORY[0x263F19070];
  uint64_t v61 = v26;
  uint64_t v27 = MEMORY[0x263F19070];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v65 = OpaqueTypeMetadata2;
  uint64_t v74 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v59 = (char *)&v57 - v29;
  uint64_t v96 = v24;
  uint64_t v97 = v13;
  uint64_t v98 = v26;
  uint64_t v99 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v96 = OpaqueTypeMetadata2;
  uint64_t v97 = OpaqueTypeConformance2;
  uint64_t v68 = MEMORY[0x263F1AB90];
  uint64_t v69 = swift_getOpaqueTypeMetadata2();
  uint64_t v70 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v58 = (char *)&v57 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v63 = (uint64_t)&v57 - v32;
  uint64_t v33 = a3;
  uint64_t v96 = a3;
  uint64_t v97 = v20;
  uint64_t v34 = v20;
  uint64_t v35 = v67;
  uint64_t v98 = v67;
  uint64_t v99 = v21;
  uint64_t v36 = v81;
  uint64_t v37 = v77;
  uint64_t v100 = v81;
  uint64_t v101 = v77;
  uint64_t v102 = a10;
  type metadata accessor for _FlowStackTabViewBody();
  uint64_t v38 = v82;
  sub_219159148();
  uint64_t v39 = v76;
  sub_219159198();
  (*(void (**)(char *, void, uint64_t))(*(void *)(v78 - 8) + 56))(v39, 0, 1);
  uint64_t v87 = v33;
  uint64_t v88 = v34;
  uint64_t v89 = v35;
  uint64_t v90 = v57;
  uint64_t v91 = v36;
  uint64_t v92 = v37;
  uint64_t v40 = v84;
  uint64_t v93 = a10;
  uint64_t v94 = v84;
  uint64_t v95 = v38;
  uint64_t v41 = v66;
  sub_219158978();
  uint64_t v42 = v83;
  sub_219158058();
  uint64_t v43 = v59;
  uint64_t v44 = v60;
  sub_219158E48();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v42, v44);
  uint64_t v45 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v41, v24);
  uint64_t v46 = (*v40)(v45);
  uint64_t v48 = v47;
  LOBYTE(v44) = v49 & 1;
  uint64_t v50 = (uint64_t)v58;
  uint64_t v51 = v65;
  uint64_t v52 = OpaqueTypeConformance2;
  sub_219158B58();
  sub_218FFE148(v46, v48, v44);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v51);
  uint64_t v96 = v51;
  uint64_t v97 = v52;
  swift_getOpaqueTypeConformance2();
  uint64_t v53 = v63;
  uint64_t v54 = v69;
  sub_218FFDE04(v50, v69, v63);
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  v55(v50, v54);
  sub_218FFDE04(v53, v54, v86);
  return ((uint64_t (*)(uint64_t, uint64_t))v55)(v53, v54);
}

uint64_t sub_2190B64A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v55 = a7;
  uint64_t v56 = a8;
  uint64_t v53 = a5;
  uint64_t v54 = a2;
  uint64_t v57 = a9;
  uint64_t v58 = a1;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v68 = a6;
  uint64_t v69 = a7;
  uint64_t v70 = a8;
  uint64_t v71 = a10;
  uint64_t v52 = type metadata accessor for _FlowStackTabViewBody();
  uint64_t v47 = *(void *)(v52 - 8);
  uint64_t v51 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)v43 - v13;
  uint64_t v14 = *(a3 - 1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = v17;
  uint64_t v18 = a6;
  swift_getAssociatedTypeWitness();
  uint64_t v45 = a10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v65 = a3;
  uint64_t v66 = (char *)AssociatedTypeWitness;
  uint64_t v67 = (uint64_t *)a4;
  uint64_t v68 = v18;
  v43[2] = a4;
  uint64_t v21 = v18;
  v43[1] = v18;
  uint64_t v69 = AssociatedConformanceWitness;
  uint64_t v22 = sub_2191591E8();
  uint64_t v49 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v26 = MEMORY[0x270FA5388](v25);
  uint64_t v44 = (uint64_t)v43 - v27;
  uint64_t v46 = (*(uint64_t (**)(double))(v58 + 16))(v26);
  uint64_t v28 = v54;
  (*(void (**)(char *, uint64_t, void *))(v14 + 16))(v17, v54, a3);
  uint64_t v29 = v47;
  uint64_t v30 = v50;
  uint64_t v31 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v50, v28, v52);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = a3;
  *((void *)v33 + 3) = a4;
  *((void *)v33 + 4) = v53;
  *((void *)v33 + 5) = v21;
  uint64_t v35 = v55;
  uint64_t v34 = v56;
  *((void *)v33 + 6) = v55;
  *((void *)v33 + 7) = v34;
  *((void *)v33 + 8) = v45;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v33[v32], v30, v31);
  sub_2191591D8();
  v64[1] = v35;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = v44;
  sub_218FFDE04((uint64_t)v24, v22, v44);
  uint64_t v38 = v49;
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
  uint64_t v40 = v39(v24, v22);
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v58 + 32))(v40);
  v64[0] = v46;
  uint64_t v65 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v24, v37, v22);
  uint64_t v63 = v41;
  uint64_t v66 = v24;
  uint64_t v67 = &v63;
  swift_retain();
  swift_retain();
  v62[0] = MEMORY[0x263F1B720];
  v62[1] = v22;
  v62[2] = MEMORY[0x263F1B720];
  uint64_t v59 = MEMORY[0x263F1B718];
  uint64_t v60 = WitnessTable;
  uint64_t v61 = MEMORY[0x263F1B718];
  sub_218FFC48C((uint64_t)&v65, 3uLL, (uint64_t)v62);
  swift_release();
  v39((char *)v37, v22);
  swift_release();
  swift_release();
  v39(v24, v22);
  return swift_release();
}

uint64_t sub_2190B69F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v29 = a8;
  uint64_t v30 = a2;
  uint64_t v27 = a5;
  uint64_t v31 = a1;
  uint64_t v32 = a9;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v26 - v21;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = v27;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v38 = v29;
  uint64_t v39 = a10;
  uint64_t v23 = *(void (**)(char *))(v30 + *(int *)(type metadata accessor for _FlowStackTabViewBody() + 80));
  swift_checkMetadataState();
  sub_21915B498();
  v23(v15);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, AssociatedTypeWitness);
  sub_218FFDE04((uint64_t)v19, a4, (uint64_t)v22);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v19, a4);
  sub_218FFDE04((uint64_t)v22, a4, v32);
  return ((uint64_t (*)(char *, uint64_t))v24)(v22, a4);
}

uint64_t sub_2190B6C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)()@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v101 = a1;
  uint64_t v102 = a8;
  uint64_t v107 = a7;
  uint64_t v99 = a5;
  uint64_t v100 = a6;
  uint64_t v97 = a9;
  unint64_t v98 = a3;
  uint64_t v103 = a4;
  uint64_t v87 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v86 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = *(void *)(*(void *)(*(void *)(v11 + 8) + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v105 = sub_2191585A8();
  uint64_t v15 = sub_219157F48();
  sub_21915B378();
  uint64_t v82 = AssociatedConformanceWitness;
  uint64_t v139 = AssociatedConformanceWitness;
  swift_getWitnessTable();
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v16 = sub_2191585A8();
  uint64_t v106 = v15;
  uint64_t v104 = v16;
  uint64_t v17 = sub_219157F48();
  uint64_t v85 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v84 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v78 - v20;
  uint64_t v91 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v90 = (char *)&v78 - v22;
  uint64_t v23 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_21915B378();
  uint64_t v27 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v29 = (char *)&v78 - v28;
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v88 = (char *)&v78 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C03E88);
  uint64_t v96 = v17;
  uint64_t v92 = v33;
  uint64_t v34 = sub_2191584D8();
  uint64_t v94 = *(void *)(v34 - 8);
  uint64_t v95 = v34;
  double v35 = MEMORY[0x270FA5388](v34);
  uint64_t v93 = (char *)&v78 - v36;
  uint64_t v37 = v101;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v26, v101, a2, v35);
  uint64_t v108 = a2;
  unint64_t v109 = v98;
  uint64_t v110 = v103;
  uint64_t v111 = v99;
  uint64_t v112 = v100;
  uint64_t v113 = v107;
  uint64_t v114 = v102;
  uint64_t v115 = v37;
  sub_21915AE18();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, a2);
  uint64_t v38 = AssociatedTypeWitness;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v81);
    uint64_t v130 = 0;
    unint64_t v131 = 0xE000000000000000;
    sub_21915B478();
    uint64_t v137 = v130;
    unint64_t v138 = v131;
    sub_21915AD88();
    uint64_t v130 = a2;
    unint64_t v131 = v98;
    uint64_t v132 = v103;
    uint64_t v133 = v99;
    uint64_t v39 = v107;
    uint64_t v134 = v100;
    uint64_t v135 = v107;
    uint64_t v136 = v102;
    type metadata accessor for _FlowStackTabViewBody();
    uint64_t v40 = sub_219159188();
    uint64_t v41 = v90;
    MEMORY[0x21D47FB40](v40);
    sub_21915B6A8();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v41, v13);
    sub_21915AD88();
    uint64_t v43 = v137;
    unint64_t v42 = v138;
    uint64_t v130 = v137;
    unint64_t v131 = v138;
    sub_219030858();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_2191589E8();
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    char v50 = v49 & 1;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v43;
    *(void *)(v51 + 24) = v42;
    uint64_t v130 = v44;
    unint64_t v131 = v46;
    LOBYTE(v132) = v50;
    uint64_t v133 = v48;
    uint64_t v134 = sub_219008318;
    uint64_t v135 = v51;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v128 = v39;
    uint64_t v129 = WitnessTable;
    uint64_t v53 = swift_getWitnessTable();
    uint64_t v54 = swift_getWitnessTable();
    uint64_t v126 = v53;
    uint64_t v127 = v54;
    uint64_t v55 = v96;
    swift_getWitnessTable();
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    uint64_t v56 = (uint64_t)v93;
    sub_218FFCBB0((uint64_t)&v130, v55, v92);
    sub_218FFE148(v44, v46, v50);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v79 = AssociatedTypeWitness;
    uint64_t v80 = v30;
    uint64_t v57 = v88;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v88, v29, v38);
    uint64_t v130 = a2;
    unint64_t v131 = v98;
    uint64_t v58 = v103;
    uint64_t v132 = v103;
    uint64_t v133 = v99;
    uint64_t v59 = v107;
    uint64_t v134 = v100;
    uint64_t v135 = v107;
    uint64_t v136 = v102;
    uint64_t v60 = type metadata accessor for _FlowStackTabViewBody();
    uint64_t v61 = v86;
    (*(void (**)(char *))(v101 + *(int *)(v60 + 84)))(v57);
    uint64_t v62 = (uint64_t)v90;
    sub_21915B498();
    uint64_t v63 = v84;
    sub_2190B5808(v62, 1, v58, v13, v59, v82, v84);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v62, v13);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v61, v58);
    uint64_t v64 = swift_getWitnessTable();
    uint64_t v118 = v59;
    uint64_t v119 = v64;
    uint64_t v65 = swift_getWitnessTable();
    uint64_t v66 = swift_getWitnessTable();
    uint64_t v116 = v65;
    uint64_t v117 = v66;
    uint64_t v67 = v96;
    swift_getWitnessTable();
    uint64_t v68 = v83;
    sub_218FFDE04(v63, v67, v83);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v69(v63, v67);
    sub_218FFDE04(v68, v67, v63);
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    uint64_t v56 = (uint64_t)v93;
    sub_219050FE4(v63, v67);
    uint64_t v70 = v63;
    uint64_t v39 = v59;
    v69(v70, v67);
    v69(v68, v67);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v88, v79);
  }
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v124 = v39;
  uint64_t v125 = v71;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v122 = v72;
  uint64_t v123 = v73;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v75 = sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
  uint64_t v120 = v74;
  uint64_t v121 = v75;
  uint64_t v76 = v95;
  swift_getWitnessTable();
  sub_218FFDE04(v56, v76, v97);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v56, v76);
}

uint64_t sub_2190B77AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v26 = a2;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v22 - v16;
  swift_checkMetadataState();
  sub_21915B498();
  uint64_t v27 = a3;
  uint64_t v28 = v22;
  uint64_t v29 = v23;
  uint64_t v30 = a6;
  uint64_t v31 = v24;
  uint64_t v32 = v25;
  uint64_t v33 = a9;
  type metadata accessor for _FlowStackTabViewBody();
  uint64_t v18 = sub_219159188();
  MEMORY[0x21D47FB40](v18);
  swift_getAssociatedConformanceWitness();
  char v19 = sub_21915AD08();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, AssociatedTypeWitness);
  v20(v17, AssociatedTypeWitness);
  return v19 & 1;
}

uint64_t sub_2190B79C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v67 = a9;
  uint64_t v77 = a2;
  uint64_t v78 = a3;
  uint64_t v57 = a3;
  uint64_t v79 = a4;
  uint64_t v80 = a5;
  uint64_t v59 = a4;
  uint64_t v69 = a5;
  uint64_t v81 = a6;
  uint64_t v82 = a7;
  uint64_t v58 = a6;
  uint64_t v60 = a7;
  uint64_t v83 = a8;
  uint64_t v70 = a8;
  uint64_t v65 = type metadata accessor for _FlowStackTabViewBody();
  uint64_t v63 = *(void *)(v65 - 8);
  uint64_t v64 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v65);
  uint64_t v62 = (char *)v48 - v14;
  uint64_t v68 = a2;
  uint64_t v15 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[1] = v18;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = a4;
  uint64_t v78 = a3;
  uint64_t v79 = a7;
  uint64_t v80 = a6;
  uint64_t v61 = MEMORY[0x263F1B218];
  swift_getOpaqueTypeMetadata2();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v55 = sub_2191585A8();
  uint64_t v50 = sub_219157F48();
  uint64_t v54 = AssociatedTypeWitness;
  sub_21915B378();
  uint64_t v76 = AssociatedConformanceWitness;
  swift_getWitnessTable();
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v51 = sub_2191585A8();
  uint64_t v53 = sub_219157F48();
  uint64_t v21 = v68;
  uint64_t v22 = v69;
  uint64_t v77 = v68;
  uint64_t v78 = AssociatedTypeWitness;
  uint64_t v79 = v53;
  uint64_t v80 = v69;
  uint64_t v81 = AssociatedConformanceWitness;
  uint64_t v23 = sub_2191591E8();
  uint64_t v56 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v49 = (char *)v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v26 = MEMORY[0x270FA5388](v25);
  uint64_t v52 = (uint64_t)v48 - v27;
  uint64_t v28 = v66;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, v66, v21, v26);
  uint64_t v29 = v63;
  uint64_t v30 = v62;
  uint64_t v31 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v28, v65);
  uint64_t v32 = v29;
  unint64_t v33 = (*(unsigned __int8 *)(v29 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v34 = (char *)swift_allocObject();
  uint64_t v35 = v57;
  *((void *)v34 + 2) = v21;
  *((void *)v34 + 3) = v35;
  uint64_t v36 = v59;
  *((void *)v34 + 4) = v59;
  *((void *)v34 + 5) = v22;
  uint64_t v37 = v58;
  uint64_t v38 = v60;
  *((void *)v34 + 6) = v58;
  *((void *)v34 + 7) = v38;
  *((void *)v34 + 8) = v70;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v34[v33], v30, v31);
  uint64_t v77 = v36;
  uint64_t v78 = v35;
  uint64_t v79 = v38;
  uint64_t v80 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v74 = OpaqueTypeConformance2;
  uint64_t v75 = WitnessTable;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v72 = v41;
  uint64_t v73 = v42;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = (uint64_t)v49;
  sub_2191591D8();
  uint64_t v71 = v43;
  swift_getWitnessTable();
  uint64_t v45 = v52;
  sub_218FFDE04(v44, v23, v52);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v46(v44, v23);
  sub_218FFDE04(v45, v23, v67);
  return ((uint64_t (*)(uint64_t, uint64_t))v46)(v45, v23);
}

uint64_t sub_2190B8004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v52 = a8;
  uint64_t v67 = a6;
  uint64_t v64 = a3;
  uint64_t v70 = a2;
  uint64_t v72 = a1;
  uint64_t v74 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)&v49 - v15;
  uint64_t v66 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v60 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a5;
  uint64_t v89 = a4;
  uint64_t v50 = a5;
  uint64_t v90 = a8;
  uint64_t v91 = a7;
  uint64_t v68 = MEMORY[0x263F1B218];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v71 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v54 = (char *)&v49 - v18;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v56 = v14;
  uint64_t v20 = AssociatedConformanceWitness;
  uint64_t v55 = AssociatedConformanceWitness;
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v65 = sub_2191585A8();
  uint64_t v57 = sub_219157F48();
  sub_21915B378();
  uint64_t v95 = v20;
  swift_getWitnessTable();
  sub_219158088();
  swift_getWitnessTable();
  uint64_t v58 = sub_2191585A8();
  uint64_t v62 = sub_219157F48();
  uint64_t v63 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v51 = (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v53 = (uint64_t)&v49 - v23;
  uint64_t v24 = v64;
  uint64_t v88 = v64;
  uint64_t v89 = a4;
  uint64_t v25 = a4;
  uint64_t v26 = v67;
  uint64_t v90 = a5;
  uint64_t v91 = v67;
  uint64_t v27 = a7;
  uint64_t v28 = v52;
  uint64_t v92 = a7;
  uint64_t v93 = v52;
  uint64_t v94 = a10;
  uint64_t v29 = type metadata accessor for _FlowStackTabViewBody();
  uint64_t v30 = v70;
  uint64_t v31 = v60;
  uint64_t v32 = v72;
  (*(void (**)(uint64_t))(v70 + *(int *)(v29 + 84)))(v72);
  uint64_t v75 = v24;
  uint64_t v76 = v25;
  uint64_t v33 = v25;
  uint64_t v34 = v50;
  uint64_t v77 = v50;
  uint64_t v78 = v26;
  uint64_t v79 = v27;
  uint64_t v80 = v28;
  uint64_t v81 = a10;
  uint64_t v82 = v30;
  uint64_t v83 = v32;
  uint64_t v35 = v54;
  uint64_t v36 = v33;
  sub_219158DA8();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v34);
  swift_checkMetadataState();
  uint64_t v37 = (uint64_t)v69;
  sub_21915B498();
  uint64_t v88 = v34;
  uint64_t v89 = v36;
  uint64_t v90 = v28;
  uint64_t v91 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v51;
  uint64_t v40 = OpaqueTypeMetadata2;
  uint64_t v41 = v56;
  sub_2190B5808(v37, 1, OpaqueTypeMetadata2, v56, OpaqueTypeConformance2, v55, v51);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v37, v41);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v40);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v86 = OpaqueTypeConformance2;
  uint64_t v87 = WitnessTable;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v84 = v43;
  uint64_t v85 = v44;
  uint64_t v45 = v62;
  swift_getWitnessTable();
  uint64_t v46 = v53;
  sub_218FFDE04(v39, v45, v53);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v47(v39, v45);
  sub_218FFDE04(v46, v45, v74);
  return ((uint64_t (*)(uint64_t, uint64_t))v47)(v46, v45);
}

uint64_t sub_2190B86F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v29 = a8;
  uint64_t v30 = a1;
  uint64_t v27 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a9;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v17);
  char v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v26 - v21;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = v27;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v38 = v29;
  uint64_t v39 = a10;
  uint64_t v23 = *(void (**)(char *))(v30 + *(int *)(type metadata accessor for _FlowStackTabViewBody() + 80));
  swift_checkMetadataState();
  sub_21915B498();
  v23(v15);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, AssociatedTypeWitness);
  sub_218FFDE04((uint64_t)v19, a4, (uint64_t)v22);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v19, a4);
  sub_218FFDE04((uint64_t)v22, a4, v32);
  return ((uint64_t (*)(char *, uint64_t))v24)(v22, a4);
}

uint64_t sub_2190B8980()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = (int *)(sub_219159188() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3 + v2[10], AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_2190B8AD0()
{
  return sub_2190B43A8();
}

uint64_t sub_2190B8BD4()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = (int *)(sub_219159188() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3 + v2[10], AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190B8D44(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(sub_219159188() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_2190B4438(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v4, *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_2190B8E74(uint64_t a1)
{
  return sub_2190BA9E0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_2190B2D14) & 1;
}

uint64_t sub_2190B8EB4()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    uint64_t v0 = sub_219159188();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_2190B9004(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = (v10 | 7) + v7;
  uint64_t v12 = ((v10 + 16) & ~v10) + *(void *)(v9 + 64);
  unsigned int v13 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((v12 + (v11 & ~(v10 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v41 = v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~(v10 | 7);
    uint64_t v43 = AssociatedTypeWitness;
    uint64_t v45 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v18 = ((unint64_t)a1 + v11) & v17;
    unint64_t v19 = ((unint64_t)a2 + v11) & v17;
    *(void *)unint64_t v18 = *(void *)v19;
    uint64_t v20 = (void *)((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)((v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v20 = *v21;
    uint64_t v22 = ((unint64_t)v20 + v10 + 8) & ~v10;
    uint64_t v23 = ((unint64_t)v21 + v10 + 8) & ~v10;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_retain();
    swift_retain();
    v24(v22, v23, v43);
    uint64_t v25 = (void *)(((v18 | 7) + v12) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (void *)(((v19 | 7) + v12) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    unint64_t v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = ((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = *(void *)(v32 + 8);
    uint64_t v44 = *(void *)v32;
    uint64_t v34 = *(void *)(v32 + 16);
    uint64_t v35 = *(void *)(v32 + 24);
    uint64_t v36 = *(void *)(v32 + 32);
    uint64_t v37 = *(void *)(v32 + 40);
    LOBYTE(v19) = *(unsigned char *)(v32 + 48);
    swift_retain();
    swift_retain();
    sub_2190B9318(v44, v33, v34, v35, v36, v37, v19);
    *(void *)unint64_t v31 = v44;
    *(void *)(v31 + 8) = v33;
    *(void *)(v31 + 16) = v34;
    *(void *)(v31 + 24) = v35;
    *(void *)(v31 + 32) = v36;
    *(void *)(v31 + 40) = v37;
    *(unsigned char *)(v31 + 48) = v19;
    unint64_t v38 = ((unint64_t)v28 + 79) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v39 = ((unint64_t)v29 + 79) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = *(void *)v39;
    LOBYTE(v31) = *(unsigned char *)(v39 + 8);
    sub_218FFE128(*(void *)v39, v31);
    *(void *)unint64_t v38 = v40;
    *(unsigned char *)(v38 + 8) = v31;
    return v45;
  }
  return (uint64_t *)v41;
}

uint64_t sub_2190B9318(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7) {
    return sub_21908D3B4(result);
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_2190B9324(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + (v7 | 7)) & ~(v7 | 7);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v7 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7, AssociatedTypeWitness);
  unint64_t v9 = (((v7 + 16) & ~v7) + *(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_2190B94C8(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(unsigned char *)(v11 + 48));
  unint64_t v12 = (v10 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  return sub_218FFDDBC(v13, v14);
}

uint64_t sub_2190B94C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7) {
    return sub_2190B94D4(result);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_2190B94D4(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2190B9524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v4)();
  uint64_t v6 = *(void *)(v4 + 48);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + v6;
  char v14 = (void *)((v12 + a2) & ~(v11 | 7));
  uint64_t v13 = (void *)((v12 + a1) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  uint64_t v17 = ((unint64_t)v15 + v11 + 8) & ~v11;
  uint64_t v18 = ((unint64_t)v16 + v11 + 8) & ~v11;
  swift_retain();
  swift_retain();
  v9(v17, v18, AssociatedTypeWitness);
  uint64_t v19 = *(void *)(v10 + 48) + ((v11 + 16) & ~v11) + 7;
  uint64_t v20 = (void *)(((unint64_t)v13 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v14 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  unint64_t v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)(v27 + 8);
  uint64_t v37 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 16);
  uint64_t v30 = *(void *)(v27 + 24);
  uint64_t v31 = *(void *)(v27 + 32);
  uint64_t v32 = *(void *)(v27 + 40);
  LOBYTE(v11) = *(unsigned char *)(v27 + 48);
  swift_retain();
  swift_retain();
  sub_2190B9318(v37, v28, v29, v30, v31, v32, v11);
  *(void *)unint64_t v26 = v37;
  *(void *)(v26 + 8) = v28;
  *(void *)(v26 + 16) = v29;
  *(void *)(v26 + 24) = v30;
  *(void *)(v26 + 32) = v31;
  *(void *)(v26 + 40) = v32;
  *(unsigned char *)(v26 + 48) = v11;
  unint64_t v33 = ((unint64_t)v23 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v24 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v26) = *(unsigned char *)(v34 + 8);
  sub_218FFE128(*(void *)v34, v26);
  *(void *)unint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v26;
  return a1;
}

uint64_t sub_2190B9768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v4)();
  uint64_t v6 = *(void *)(v4 + 40);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  uint64_t v11 = (void *)((v10 + a1) & ~(v9 | 7));
  uint64_t v12 = (void *)((v10 + a2) & ~(v9 | 7));
  *uint64_t v11 = *v12;
  swift_retain();
  swift_release();
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v8 + 64) + ((v9 + 16) & ~v9) + 7;
  uint64_t v16 = (void *)(((unint64_t)v11 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v12 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  uint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  unint64_t v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = *(void *)(v23 + 24);
  uint64_t v28 = *(void *)(v23 + 32);
  uint64_t v29 = *(void *)(v23 + 40);
  LOBYTE(v14) = *(unsigned char *)(v23 + 48);
  sub_2190B9318(*(void *)v23, v25, v26, v27, v28, v29, (char)v14);
  uint64_t v30 = *(void *)v22;
  uint64_t v31 = *(void *)(v22 + 8);
  uint64_t v32 = *(void *)(v22 + 16);
  uint64_t v33 = *(void *)(v22 + 24);
  uint64_t v34 = *(void *)(v22 + 32);
  uint64_t v35 = *(void *)(v22 + 40);
  char v36 = *(unsigned char *)(v22 + 48);
  *(void *)unint64_t v22 = v24;
  *(void *)(v22 + 8) = v25;
  *(void *)(v22 + 16) = v26;
  *(void *)(v22 + 24) = v27;
  *(void *)(v22 + 32) = v28;
  *(void *)(v22 + 40) = v29;
  *(unsigned char *)(v22 + 48) = (_BYTE)v14;
  sub_2190B94C8(v30, v31, v32, v33, v34, v35, v36);
  unint64_t v37 = ((unint64_t)v19 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = ((unint64_t)v20 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = *(void *)v38;
  LOBYTE(v25) = *(unsigned char *)(v38 + 8);
  sub_218FFE128(*(void *)v38, v25);
  uint64_t v40 = *(void *)v37;
  char v41 = *(unsigned char *)(v37 + 8);
  *(void *)unint64_t v37 = v39;
  *(unsigned char *)(v37 + 8) = v25;
  sub_218FFDDBC(v40, v41);
  return a1;
}

uint64_t sub_2190B99F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (v11 | 7) + v6;
  uint64_t v13 = (void *)((v12 + a1) & ~(v11 | 7));
  char v14 = (void *)((v12 + a2) & ~(v11 | 7));
  *uint64_t v13 = *v14;
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  v9(((unint64_t)v15 + v11 + 8) & ~v11, ((unint64_t)v16 + v11 + 8) & ~v11, AssociatedTypeWitness);
  uint64_t v17 = *(void *)(v10 + 32) + ((v11 + 16) & ~v11) + 7;
  uint64_t v18 = (_OWORD *)(((unint64_t)v13 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)(((unint64_t)v14 + v17) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  uint64_t v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v24 = *(unsigned char *)(v23 + 48);
  long long v26 = *(_OWORD *)(v23 + 16);
  long long v25 = *(_OWORD *)(v23 + 32);
  *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v26;
  *(_OWORD *)(v22 + 32) = v25;
  *(unsigned char *)(v22 + 48) = v24;
  unint64_t v27 = ((unint64_t)v20 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v21 + 79) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(void *)unint64_t v27 = v29;
  return a1;
}

uint64_t sub_2190B9BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  uint64_t v11 = (void *)((v10 + a1) & ~(v9 | 7));
  uint64_t v12 = (void *)((v10 + a2) & ~(v9 | 7));
  *uint64_t v11 = *v12;
  swift_release();
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v8 + 64) + ((v9 + 16) & ~v9) + 7;
  uint64_t v16 = (_OWORD *)(((unint64_t)v11 + v15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (unint64_t)v12 + v15;
  unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v16 = *(_OWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v19 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v19 = *(_OWORD *)v18;
  swift_release();
  unint64_t v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 48);
  unint64_t v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = *(void *)(v22 + 16);
  uint64_t v26 = *(void *)(v22 + 24);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(v22 + 40);
  char v29 = *(unsigned char *)(v22 + 48);
  long long v30 = *(_OWORD *)(v20 + 16);
  long long v31 = *(_OWORD *)(v20 + 32);
  *(_OWORD *)unint64_t v22 = *(_OWORD *)v20;
  *(_OWORD *)(v22 + 16) = v30;
  *(_OWORD *)(v22 + 32) = v31;
  *(unsigned char *)(v22 + 48) = v21;
  sub_2190B94C8(v23, v24, v25, v26, v27, v28, v29);
  unint64_t v32 = ((unint64_t)v19 + 79) & 0xFFFFFFFFFFFFFFF8;
  char v33 = *(unsigned char *)(((v18 + 79) & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v34 = *(void *)v32;
  char v35 = *(unsigned char *)(v32 + 8);
  *(void *)unint64_t v32 = *(void *)((v18 + 79) & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v32 + 8) = v33;
  sub_218FFDDBC(v34, v35);
  return a1;
}

uint64_t sub_2190B9DD4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= v7) {
    unsigned int v13 = v7;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v11 | 7;
  uint64_t v15 = (v11 | 7) + *(void *)(v6 + 64);
  if (v13 < a2)
  {
    unint64_t v16 = ((((((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + ((v11 + 16) & ~v11) + (v15 & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 79) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v16 < 4) {
      unsigned int v17 = ((a2 - v13 + 255) >> (8 * v16)) + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      LODWORD(v18) = 4;
    }
    else {
      LODWORD(v18) = 2;
    }
    if (v17 < 0x100) {
      LODWORD(v18) = 1;
    }
    if (v17 >= 2) {
      uint64_t v18 = v18;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = a1[v16];
        if (!a1[v16]) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v19 = *(unsigned __int16 *)&a1[v16];
        if (*(_WORD *)&a1[v16]) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2190BA0D4);
      case 4:
        int v19 = *(_DWORD *)&a1[v16];
        if (!v19) {
          break;
        }
LABEL_25:
        int v21 = (v19 - 1) << (8 * v16);
        if (v16 >= 4) {
          int v21 = 0;
        }
        if (v16 == 1) {
          int v22 = *a1;
        }
        else {
          int v22 = *(_DWORD *)a1;
        }
        return v13 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v7 >= v12)
  {
    uint64_t v25 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    return v25(a1, v7, v5);
  }
  else
  {
    uint64_t v23 = (unint64_t *)((((unint64_t)&a1[v15] & ~v14) + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v10 & 0x80000000) != 0)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(((unint64_t)v23 + v11 + 8) & ~v11);
    }
    else
    {
      unint64_t v24 = *v23;
      if (v24 >= 0xFFFFFFFF) {
        LODWORD(v24) = -1;
      }
      return (v24 + 1);
    }
  }
}

void sub_2190BA0E8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v34 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = (v12 | 7) + *(void *)(v8 + 64);
  size_t v16 = ((v12 + 16) & ~v12) + *(void *)(v10 + 64);
  size_t v17 = ((((((v16 + (v15 & ~(v12 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  char v18 = 8 * v17;
  if (v14 >= a3)
  {
    int v21 = 0;
    if (v14 >= a2)
    {
LABEL_20:
      switch(v21)
      {
        case 1:
          a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_37;
        case 2:
          *(_WORD *)&a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_37;
        case 3:
          goto LABEL_67;
        case 4:
          *(_DWORD *)&a1[v17] = 0;
          goto LABEL_36;
        default:
LABEL_36:
          if (a2)
          {
LABEL_37:
            if (v9 >= v13)
            {
              long long v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
              v30(a1, a2, v9, v7);
            }
            else
            {
              uint64_t v26 = (unsigned char *)((unint64_t)&a1[v15] & ~(v12 | 7));
              if (v13 >= a2)
              {
                long long v31 = (void *)((unint64_t)(v26 + 15) & 0xFFFFFFFFFFFFFFF8);
                if ((v11 & 0x80000000) != 0)
                {
                  char v33 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                  v33(((unint64_t)v31 + v12 + 8) & ~v12, a2);
                }
                else
                {
                  if ((a2 & 0x80000000) != 0) {
                    uint64_t v32 = a2 ^ 0x80000000;
                  }
                  else {
                    uint64_t v32 = (a2 - 1);
                  }
                  *long long v31 = v32;
                }
              }
              else
              {
                if (v16 <= 3) {
                  int v27 = ~(-1 << (8 * v16));
                }
                else {
                  int v27 = -1;
                }
                if (v16)
                {
                  int v28 = v27 & (~v13 + a2);
                  if (v16 <= 3) {
                    int v29 = v16;
                  }
                  else {
                    int v29 = 4;
                  }
                  bzero(v26, v16);
                  switch(v29)
                  {
                    case 2:
                      *(_WORD *)uint64_t v26 = v28;
                      break;
                    case 3:
                      *(_WORD *)uint64_t v26 = v28;
                      v26[2] = BYTE2(v28);
                      break;
                    case 4:
                      *(_DWORD *)uint64_t v26 = v28;
                      break;
                    default:
                      *uint64_t v26 = v28;
                      break;
                  }
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (v17 <= 3) {
      unsigned int v19 = ((a3 - v14 + 255) >> v18) + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
    if (v14 >= a2) {
      goto LABEL_20;
    }
  }
  unsigned int v22 = ~v14 + a2;
  unsigned int v23 = (~(_BYTE)v14 + a2);
  if (v17 < 4) {
    int v24 = (v22 >> v18) + 1;
  }
  else {
    int v24 = 1;
  }
  if (v17 >= 4) {
    unsigned int v25 = v22;
  }
  else {
    unsigned int v25 = v23;
  }
  bzero(a1, v17);
  if (v17 == 1) {
    *a1 = v25;
  }
  else {
    *(_DWORD *)a1 = v25;
  }
  switch(v21)
  {
    case 1:
      a1[v17] = v24;
      break;
    case 2:
      *(_WORD *)&a1[v17] = v24;
      break;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x2190BA4D8);
    case 4:
      *(_DWORD *)&a1[v17] = v24;
      break;
    default:
      return;
  }
}

uint64_t sub_2190BA510()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190BA854()
{
  return sub_2190BA86C();
}

uint64_t sub_2190BA86C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190BA8B0()
{
  return sub_2190BA95C((uint64_t (*)(void, void, void, void, void, void, void, void))sub_2190B79C0);
}

uint64_t sub_2190BA8C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_2190BA90C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190B5CA8(*(void *)(v1 + 72), *(uint64_t (***)(uint64_t))(v1 + 80), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64));
}

uint64_t sub_2190BA944()
{
  return sub_2190BA95C((uint64_t (*)(void, void, void, void, void, void, void, void))sub_2190B6C68);
}

uint64_t sub_2190BA95C(uint64_t (*a1)(void, void, void, void, void, void, void, void))
{
  return a1(v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t *sub_2190BA978(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2190BA9B0(uint64_t a1)
{
  return sub_2190BA9E0(a1, sub_2190B77AC) & 1;
}

uint64_t sub_2190BA9E0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]) & 1;
}

uint64_t sub_2190BAA20()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190BAA58@<X0>(uint64_t a1@<X8>)
{
  return sub_2190B64A8(*(void *)(v1 + 72), *(void *)(v1 + 80), *(void **)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(void *)(v1 + 64));
}

uint64_t sub_2190BAA94(uint64_t a1)
{
  return sub_2190BACFC(a1, (uint64_t (*)(void, void *))type metadata accessor for _FlowStackTabViewBody, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2190B69F0);
}

uint64_t objectdestroy_37Tm()
{
  long long v8 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)(type metadata accessor for _FlowStackTabViewBody() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  (*(void (**)(uint64_t, void))(*(void *)(v8 - 8) + 8))(v2, v8);
  uint64_t v3 = v2 + v1[21];
  swift_release();
  swift_release();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_219159188();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v3 + *(int *)(v5 + 32), AssociatedTypeWitness);
  swift_release();
  swift_release();
  uint64_t v6 = v2 + v1[24];
  sub_2190B94C8(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(unsigned char *)(v6 + 48));
  sub_218FFDDBC(*(void *)(v2 + v1[25]), *(unsigned char *)(v2 + v1[25] + 8));
  return swift_deallocObject();
}

uint64_t sub_2190BACD0(uint64_t a1)
{
  return sub_2190BACFC(a1, (uint64_t (*)(void, void *))type metadata accessor for _FlowStackTabViewBody, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2190B8004);
}

uint64_t sub_2190BACFC(uint64_t a1, uint64_t (*a2)(void, void *), uint64_t (*a3)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *((void *)v3 + 3);
  uint64_t v7 = *((void *)v3 + 4);
  uint64_t v8 = *((void *)v3 + 5);
  uint64_t v9 = *((void *)v3 + 6);
  uint64_t v10 = *((void *)v3 + 7);
  uint64_t v11 = *((void *)v3 + 8);
  v15[0] = *((void *)v3 + 2);
  uint64_t v5 = v15[0];
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  v15[4] = v9;
  v15[5] = v10;
  v15[6] = v11;
  uint64_t v12 = *(void *)(a2(0, v15) - 8);
  return a3(a1, &v3[(*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)], v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_2190BADE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190B86F8(v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1, v1[8]);
}

uint64_t sub_2190BAE18()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190BB3EC()
{
  sub_219027864();
  sub_219158238();
  return v1;
}

uint64_t sub_2190BB428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v45 = a3;
  uint64_t v41 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (uint64_t)&v35 - v7;
  type metadata accessor for AppMetricsViewModifier();
  uint64_t v8 = sub_219157F48();
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (uint64_t)&v35 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05C48);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_219159C28();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unsigned int v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2191584D8();
  uint64_t v43 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unsigned int v22 = (char *)&v35 - v21;
  sub_219159AF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_218FFE158((uint64_t)v15, &qword_267C05C48);
    uint64_t v23 = v39;
    uint64_t v24 = v45;
    sub_218FFDE04(v42, a2, v39);
    uint64_t v25 = v40;
    sub_218FFDE04(v23, a2, v40);
    uint64_t v26 = sub_2190BDF7C(&qword_267C04318, (void (*)(uint64_t))type metadata accessor for AppMetricsViewModifier);
    uint64_t v52 = v24;
    uint64_t v53 = v26;
    swift_getWitnessTable();
    sub_218FFCBB0(v25, v8, a2);
    int v27 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v27(v25, a2);
    v27(v23, a2);
  }
  else
  {
    char v35 = v19;
    uint64_t v36 = v17;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    uint64_t v41 = v20;
    uint64_t v28 = v45;
    View.appMetrics(pipeline:)((uint64_t)v19, a2, v45, (uint64_t)v10);
    uint64_t v29 = sub_2190BDF7C(&qword_267C04318, (void (*)(uint64_t))type metadata accessor for AppMetricsViewModifier);
    uint64_t v46 = v28;
    uint64_t v47 = v29;
    swift_getWitnessTable();
    uint64_t v30 = v37;
    sub_218FFDE04((uint64_t)v10, v8, v37);
    long long v31 = *(void (**)(char *, uint64_t))(v38 + 8);
    v31(v10, v8);
    sub_218FFDE04(v30, v8, (uint64_t)v10);
    uint64_t v20 = v41;
    sub_219050FE4((uint64_t)v10, v8);
    v31(v10, v8);
    v31((char *)v30, v8);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v16);
  }
  uint64_t v32 = sub_2190BDF7C(&qword_267C04318, (void (*)(uint64_t))type metadata accessor for AppMetricsViewModifier);
  uint64_t v33 = v45;
  uint64_t v50 = v45;
  uint64_t v51 = v32;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v49 = v33;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v22, v20, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v22, v20);
}

uint64_t View.appMetrics(pipeline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v5 = sub_219159C28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for AppMetricsViewModifier();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v18(v10, a1, v5, v15);
  *((void *)v13 + 3) = 0;
  uint64_t v19 = *(int *)(v11 + 24);
  uint64_t v25 = v11;
  *(void *)&v13[v19] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)&v13[*(int *)(v11 + 28)];
  *uint64_t v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v26;
  ((void (*)(char *, char *, uint64_t))v18)(v26, v10, v5);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v21, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  *(void *)uint64_t v13 = sub_2190BC1A0;
  *((void *)v13 + 1) = v23;
  unsigned char v13[16] = 0;
  sub_2190BC1A4((uint64_t)v13, (uint64_t)v17);
  MEMORY[0x21D47F800](v17, v28, v25, v29);
  return sub_2190BC208((uint64_t)v17);
}

uint64_t type metadata accessor for AppMetricsViewModifier()
{
  uint64_t result = qword_267C05C30;
  if (!qword_267C05C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t View.appMetrics(pipeline:scene:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v42 = a4;
  uint64_t v38 = a3;
  id v40 = a2;
  uint64_t v43 = a5;
  uint64_t v6 = sub_219159C28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = type metadata accessor for AppMetricsViewModifier();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_219157F48();
  uint64_t v41 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v37 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v39 = (uint64_t)&v35 - v19;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v20(v11, a1, v6, v18);
  *((void *)v14 + 3) = 0;
  uint64_t v21 = (uint64_t *)&v14[*(int *)(v12 + 24)];
  *uint64_t v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  swift_storeEnumTagMultiPayload();
  unint64_t v22 = (uint64_t *)&v14[*(int *)(v12 + 28)];
  *unint64_t v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v36;
  ((void (*)(char *, char *, uint64_t))v20)(v36, v11, v6);
  unint64_t v24 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v25 + v24, v23, v6);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  id v27 = v40;
  id v28 = v40;
  v26(v11, v6);
  *(void *)uint64_t v14 = sub_2190BC1A0;
  *((void *)v14 + 1) = v25;
  v14[16] = 0;

  *((void *)v14 + 3) = v27;
  uint64_t v29 = (uint64_t)v37;
  uint64_t v30 = v42;
  MEMORY[0x21D47F800](v14, v38, v12, v42);
  sub_2190BC208((uint64_t)v14);
  uint64_t v31 = sub_2190BDF7C(&qword_267C04318, (void (*)(uint64_t))type metadata accessor for AppMetricsViewModifier);
  uint64_t v44 = v30;
  uint64_t v45 = v31;
  swift_getWitnessTable();
  uint64_t v32 = v39;
  sub_218FFDE04(v29, v15, v39);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v33(v29, v15);
  sub_218FFDE04(v32, v15, v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v32, v15);
}

uint64_t View.appMetricsPresenter(_:)()
{
  return swift_release();
}

uint64_t sub_2190BC1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppMetricsViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190BC208(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppMetricsViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2190BC264(uint64_t a1)
{
  uint64_t v2 = sub_219159C28();
  double v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_21915A008();
  swift_allocObject();
  return sub_219159FF8();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = sub_219159C28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2190BC3D0()
{
  uint64_t v1 = *(void *)(sub_219159C28() - 8);
  return sub_2190BC264(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_2190BC42C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190BC4C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190BC564(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_218FFE120();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = (void *)a2[3];
    *(void *)(a1 + 24) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    id v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_219157AB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 28);
    double v18 = (void *)(a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_21915A198();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *double v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2190BC744(uint64_t a1, uint64_t a2)
{
  sub_218FFDDB4();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_219157AB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_21915A198();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2190BC884(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_218FFE120();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  char v9 = (void *)a2[3];
  *(void *)(a1 + 24) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  id v13 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_219157AB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_21915A198();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2190BCA0C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_218FFE120();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_218FFDDB4();
  char v9 = *(void **)(a1 + 24);
  uint64_t v10 = (void *)a2[3];
  *(void *)(a1 + 24) = v10;
  id v11 = v10;

  if ((uint64_t *)a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    id v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_218FFE158(a1 + v12, &qword_26AD03528);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_219157AB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *id v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_218FFE158(a1 + v16, &qword_26AD03198);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_21915A198();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      void *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2190BCBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_219157AB8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_21915A198();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2190BCD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_218FFDDB4();
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_218FFE158(a1 + v8, &qword_26AD03528);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_219157AB8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_218FFE158(a1 + v13, &qword_26AD03198);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_21915A198();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2190BCF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190BCF4C);
}

uint64_t sub_2190BCF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05308);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 24);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 28);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_2190BD08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190BD0A0);
}

uint64_t sub_2190BD0A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05308);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2190BD1D4()
{
  sub_2190BD2E8(319, &qword_26AD03780, MEMORY[0x263F18460]);
  if (v0 <= 0x3F)
  {
    sub_2190BD2E8(319, (unint64_t *)&qword_26AD036D0, MEMORY[0x263F50B68]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2190BD2E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_219157B28();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2190BD33C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190BD358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v29 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C036D8);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C036B8) - 8;
  MEMORY[0x270FA5388](v28);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AppMetricsViewModifier();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190BDC70(v2, (uint64_t)v12);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v24 = v13 | 7;
  uint64_t v25 = v14 + v11;
  uint64_t v26 = swift_allocObject();
  sub_2190BC1A4((uint64_t)v12, v26 + v14);
  uint64_t KeyPath = swift_getKeyPath();
  sub_21915A008();
  sub_2190BDF7C(&qword_267C05C40, MEMORY[0x263F50B08]);
  uint64_t v15 = sub_219157B68();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C036E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v6, v27, v16);
  uint64_t v17 = (uint64_t *)&v6[*(int *)(v4 + 44)];
  uint64_t *v17 = KeyPath;
  v17[1] = v15;
  sub_2190BDC70(v2, (uint64_t)v12);
  uint64_t v18 = swift_allocObject();
  sub_2190BC1A4((uint64_t)v12, v18 + v14);
  uint64_t v19 = swift_getKeyPath();
  sub_2190BDDC4((uint64_t)v6, (uint64_t)v8);
  uint64_t v20 = &v8[*(int *)(v28 + 44)];
  *(void *)uint64_t v20 = sub_2190BDD4C;
  *((void *)v20 + 1) = v18;
  *((void *)v20 + 2) = v19;
  *((void *)v20 + 3) = 0;
  *((_WORD *)v20 + 16) = 0;
  sub_218FFE158((uint64_t)v6, &qword_267C036D8);
  sub_219005010(*(void **)(v2 + 24), (uint64_t)sub_2190BDCD8, v26, v29);
  swift_release();
  return sub_218FFE158((uint64_t)v8, &qword_267C036B8);
}

uint64_t sub_2190BD674(uint64_t a1)
{
  uint64_t v2 = sub_21915A198();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_219157AB8();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x263F18448])
  {
    sub_21915A008();
    sub_2190BDF7C(&qword_267C05C40, MEMORY[0x263F50B08]);
    sub_219157B68();
    type metadata accessor for AppMetricsViewModifier();
    sub_2190F9F54((uint64_t)v5);
    sub_219159FE8();
LABEL_5:
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (v11 == *MEMORY[0x263F18450])
  {
    sub_21915A008();
    sub_2190BDF7C(&qword_267C05C40, MEMORY[0x263F50B08]);
    sub_219157B68();
    type metadata accessor for AppMetricsViewModifier();
    sub_2190F9F54((uint64_t)v5);
    sub_219159FD8();
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_2190BD958(char a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_219157AB8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v21[-v12];
  uint64_t v14 = type metadata accessor for AppMetricsViewModifier();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2190BDC70(a2, (uint64_t)v16);
  if ((a1 & 1) == 0) {
    return sub_2190BC208((uint64_t)v16);
  }
  uint64_t v17 = (void *)*((void *)v16 + 3);
  if (v17)
  {
    id v18 = objc_msgSend(v17, sel_activationState);
    uint64_t result = sub_2190BC208((uint64_t)v16);
    if (v18) {
      return result;
    }
  }
  else
  {
    sub_2190FB0AC((uint64_t)v13);
    (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F18450], v7);
    int v22 = sub_219157AA8();
    uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
    v20(v10, v7);
    v20(v13, v7);
    uint64_t result = sub_2190BC208((uint64_t)v16);
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  sub_21915A008();
  sub_2190BDF7C(&qword_267C05C40, MEMORY[0x263F50B08]);
  sub_219157B68();
  sub_2190F9F54((uint64_t)v6);
  sub_219159FD8();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v23 + 8))(v6, v4);
}

uint64_t sub_2190BDC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppMetricsViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190BDCD8(uint64_t a1)
{
  type metadata accessor for AppMetricsViewModifier();
  return sub_2190BD674(a1);
}

uint64_t sub_2190BDD4C(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppMetricsViewModifier() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_2190BD958(a1, v4);
}

uint64_t sub_2190BDDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C036D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AppMetricsEnvironmentKey()
{
  return &type metadata for AppMetricsEnvironmentKey;
}

unint64_t sub_2190BDE40()
{
  unint64_t result = qword_267C05C50;
  if (!qword_267C05C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05C58);
    sub_2190BDEF4((unint64_t *)&qword_267C036C0, &qword_267C036B0, (void (*)(void))sub_219008ADC, (void (*)(void))sub_219008100);
    sub_219008C1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05C50);
  }
  return result;
}

uint64_t sub_2190BDEF4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2190BDF7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t View.flowSheetDoneButtonLabelStyle(_:)()
{
  return sub_219158A58();
}

unint64_t sub_2190BE02C()
{
  unint64_t result = qword_267C05C60;
  if (!qword_267C05C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05C60);
  }
  return result;
}

uint64_t View.flowSheetDoneButtonHidden(_:)()
{
  return sub_219158A58();
}

unint64_t sub_2190BE0E4()
{
  unint64_t result = qword_267C05C68;
  if (!qword_267C05C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05C68);
  }
  return result;
}

uint64_t sub_2190BE138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v94 = a1;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05C98);
  MEMORY[0x270FA5388](v89);
  uint64_t v91 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CA0);
  MEMORY[0x270FA5388](v99);
  uint64_t v92 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_219158608();
  uint64_t v80 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v79 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CA8);
  uint64_t v82 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v78 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v81 = (char *)&v73 - v7;
  uint64_t v86 = sub_2191582F8();
  uint64_t v75 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CB0);
  uint64_t v77 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v74 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v76 = (char *)&v73 - v12;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CB8);
  MEMORY[0x270FA5388](v96);
  uint64_t v98 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CC0);
  MEMORY[0x270FA5388](v83);
  uint64_t v84 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CC8);
  MEMORY[0x270FA5388](v97);
  uint64_t v85 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_2191583D8();
  uint64_t v16 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  id v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_219158648();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  int v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CD0);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05CD8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v33 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = *v101;
  uint64_t v93 = v35;
  switch(v34)
  {
    case 1:
      (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v22, v94, v19, v33);
      sub_219158FC8();
      sub_2191582E8();
      uint64_t v63 = sub_218FFDF90(&qword_267C05CE0, &qword_267C05CD0);
      uint64_t v64 = sub_2190BF5AC(&qword_267C05D00, MEMORY[0x263F197E0]);
      uint64_t v65 = v74;
      uint64_t v66 = v86;
      sub_219158A48();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v9, v66);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t v67 = v77;
      uint64_t v68 = v76;
      uint64_t v69 = v87;
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v65, v87);
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v84, v68, v69);
      swift_storeEnumTagMultiPayload();
      uint64_t v70 = sub_2190BF5AC(&qword_267C05CE8, MEMORY[0x263F19AC0]);
      uint64_t v102 = v23;
      uint64_t v103 = v95;
      uint64_t v104 = v63;
      uint64_t v105 = v70;
      swift_getOpaqueTypeConformance2();
      uint64_t v102 = v23;
      uint64_t v103 = v66;
      uint64_t v104 = v63;
      uint64_t v105 = v64;
      swift_getOpaqueTypeConformance2();
      uint64_t v71 = (uint64_t)v85;
      sub_2191584C8();
      sub_2190090C4(v71, v98, &qword_267C05CC8);
      swift_storeEnumTagMultiPayload();
      sub_2190BF428();
      sub_2190BF5F4();
      sub_2191584C8();
      sub_218FFE158(v71, &qword_267C05CC8);
      uint64_t v55 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
      uint64_t v56 = v68;
      uint64_t v62 = v69;
      return v55(v56, v62);
    case 2:
      (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v22, v94, v19, v33);
      sub_219158FC8();
      uint64_t v46 = v79;
      sub_2191585F8();
      uint64_t v47 = sub_218FFDF90(&qword_267C05CE0, &qword_267C05CD0);
      uint64_t v48 = sub_2190BF5AC((unint64_t *)&qword_267C05CF0, MEMORY[0x263F19EC8]);
      uint64_t v49 = v78;
      uint64_t v50 = v88;
      sub_219158A48();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v50);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t v51 = v82;
      uint64_t v52 = v81;
      uint64_t v42 = v90;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v49, v90);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v91, v52, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v102 = v23;
      uint64_t v103 = v50;
      uint64_t v104 = v47;
      uint64_t v105 = v48;
      swift_getOpaqueTypeConformance2();
      uint64_t v53 = sub_2190BF5AC(&qword_267C05CE8, MEMORY[0x263F19AC0]);
      uint64_t v102 = v23;
      uint64_t v103 = v95;
      uint64_t v104 = v47;
      uint64_t v105 = v53;
      swift_getOpaqueTypeConformance2();
      uint64_t v54 = (uint64_t)v92;
      sub_2191584C8();
      sub_2190090C4(v54, v98, &qword_267C05CA0);
      swift_storeEnumTagMultiPayload();
      sub_2190BF428();
      sub_2190BF5F4();
      sub_2191584C8();
      sub_218FFE158(v54, &qword_267C05CA0);
      uint64_t v55 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
      uint64_t v56 = v52;
      goto LABEL_6;
    case 3:
      uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16);
      uint64_t v101 = (unsigned __int8 *)&v73 - v31;
      uint64_t v37 = v32;
      v57(v22, v94, v19, v33);
      sub_219158FC8();
      sub_2191583C8();
      uint64_t v58 = sub_218FFDF90(&qword_267C05CE0, &qword_267C05CD0);
      uint64_t v59 = sub_2190BF5AC(&qword_267C05CE8, MEMORY[0x263F19AC0]);
      uint64_t v60 = v95;
      sub_219158A48();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v60);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t v41 = v101;
      uint64_t v42 = v93;
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(v37 + 32))(v101, v29, v93);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v37 + 16))(v91, v41, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v61 = sub_2190BF5AC((unint64_t *)&qword_267C05CF0, MEMORY[0x263F19EC8]);
      uint64_t v102 = v23;
      uint64_t v103 = v88;
      uint64_t v104 = v58;
      uint64_t v105 = v61;
      swift_getOpaqueTypeConformance2();
      uint64_t v102 = v23;
      uint64_t v103 = v60;
      uint64_t v104 = v58;
      uint64_t v105 = v59;
      swift_getOpaqueTypeConformance2();
      uint64_t v44 = (uint64_t)v92;
      sub_2191584C8();
      uint64_t v45 = &qword_267C05CA0;
      sub_2190090C4(v44, v98, &qword_267C05CA0);
      goto LABEL_5;
    default:
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16);
      uint64_t v101 = (unsigned __int8 *)&v73 - v31;
      uint64_t v37 = v32;
      v36(v22, v94, v19, v33);
      sub_219158FC8();
      sub_2191583C8();
      uint64_t v38 = sub_218FFDF90(&qword_267C05CE0, &qword_267C05CD0);
      uint64_t v39 = sub_2190BF5AC(&qword_267C05CE8, MEMORY[0x263F19AC0]);
      uint64_t v40 = v95;
      sub_219158A48();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v40);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t v41 = v101;
      uint64_t v42 = v93;
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(v37 + 32))(v101, v29, v93);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v37 + 16))(v84, v41, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v102 = v23;
      uint64_t v103 = v40;
      uint64_t v104 = v38;
      uint64_t v105 = v39;
      swift_getOpaqueTypeConformance2();
      uint64_t v43 = sub_2190BF5AC(&qword_267C05D00, MEMORY[0x263F197E0]);
      uint64_t v102 = v23;
      uint64_t v103 = v86;
      uint64_t v104 = v38;
      uint64_t v105 = v43;
      swift_getOpaqueTypeConformance2();
      uint64_t v44 = (uint64_t)v85;
      sub_2191584C8();
      uint64_t v45 = &qword_267C05CC8;
      sub_2190090C4(v44, v98, &qword_267C05CC8);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      sub_2190BF428();
      sub_2190BF5F4();
      sub_2191584C8();
      sub_218FFE158(v44, v45);
      uint64_t v55 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
      uint64_t v56 = (char *)v41;
LABEL_6:
      uint64_t v62 = v42;
      return v55(v56, v62);
  }
}

BOOL static FlowSheetDoneButtonLabelStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FlowSheetDoneButtonLabelStyle.hash(into:)()
{
  return sub_21915B7C8();
}

uint64_t FlowSheetDoneButtonLabelStyle.hashValue.getter()
{
  return sub_21915B7D8();
}

unint64_t sub_2190BF1B4()
{
  unint64_t result = qword_267C05C70;
  if (!qword_267C05C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowSheetDoneButtonLabelStyle()
{
  return &type metadata for FlowSheetDoneButtonLabelStyle;
}

uint64_t sub_2190BF220(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA26_PreferenceWritingModifierVy011_JetEngine_aB033_FlowSheetDoneButtonLabelStyleKeyOGGAaBHPxAaBHD1__AjA0cH0HPyHCHCTm(a1, &qword_267C05C78, &qword_267C05C80);
}

uint64_t sub_2190BF234(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA26_PreferenceWritingModifierVy011_JetEngine_aB033_FlowSheetDoneButtonLabelStyleKeyOGGAaBHPxAaBHD1__AjA0cH0HPyHCHCTm(a1, &qword_267C05C88, &qword_267C05C90);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA26_PreferenceWritingModifierVy011_JetEngine_aB033_FlowSheetDoneButtonLabelStyleKeyOGGAaBHPxAaBHD1__AjA0cH0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getWitnessTable();
}

unsigned char *_s18_JetEngine_SwiftUI29FlowSheetDoneButtonLabelStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190BF3ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowSheetDoneButtonLabelStyle._LabelStyle()
{
  return &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle;
}

ValueMetadata *type metadata accessor for _FlowSheetHidesDoneButtonKey()
{
  return &type metadata for _FlowSheetHidesDoneButtonKey;
}

ValueMetadata *type metadata accessor for _FlowSheetDoneButtonLabelStyleKey()
{
  return &type metadata for _FlowSheetDoneButtonLabelStyleKey;
}

uint64_t sub_2190BF404()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2190BF428()
{
  unint64_t result = qword_267C05CF8;
  if (!qword_267C05CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05CC8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05CD0);
    sub_2191583D8();
    sub_218FFDF90(&qword_267C05CE0, &qword_267C05CD0);
    sub_2190BF5AC(&qword_267C05CE8, MEMORY[0x263F19AC0]);
    swift_getOpaqueTypeConformance2();
    sub_2191582F8();
    sub_2190BF5AC(&qword_267C05D00, MEMORY[0x263F197E0]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05CF8);
  }
  return result;
}

uint64_t sub_2190BF5AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2190BF5F4()
{
  unint64_t result = qword_267C05D08;
  if (!qword_267C05D08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05CA0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05CD0);
    sub_219158608();
    sub_218FFDF90(&qword_267C05CE0, &qword_267C05CD0);
    sub_2190BF5AC((unint64_t *)&qword_267C05CF0, MEMORY[0x263F19EC8]);
    swift_getOpaqueTypeConformance2();
    sub_2191583D8();
    sub_2190BF5AC(&qword_267C05CE8, MEMORY[0x263F19AC0]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05D08);
  }
  return result;
}

unint64_t sub_2190BF77C()
{
  unint64_t result = qword_267C05D10;
  if (!qword_267C05D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D18);
    sub_2190BF428();
    sub_2190BF5F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05D10);
  }
  return result;
}

uint64_t sub_2190BF7F8()
{
  return 0;
}

uint64_t static MediaArtworkProtocol.supportsPrefetching.getter()
{
  return 0;
}

uint64_t MediaArtworkProtocol<>.match(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t dispatch thunk of static MediaArtworkProtocol.allowsDuplicateRegistration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of static MediaArtworkProtocol.supportsPrefetching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MediaArtworkProtocol.match(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MediaArtworkProtocol.fetch(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

void sub_2190BF930(uint64_t a1@<X8>)
{
  *(double *)a1 = EnvironmentValues.shelfContainerSize.getter();
  *(void *)(a1 + 8) = v2;
}

uint64_t sub_2190BF95C()
{
  return sub_21900D594();
}

__n128 ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __n128 v32 = *a2;
  unint64_t v14 = a2[1].n128_u64[0];
  unsigned __int8 v15 = a2[1].n128_u8[8];
  uint64_t v16 = *a3;
  char v17 = *((unsigned char *)a3 + 8);
  uint64_t v33 = a3[2];
  char v18 = *((unsigned char *)a3 + 24);
  uint64_t v37 = *a4;
  char v36 = *((unsigned char *)a4 + 8);
  uint64_t v35 = a4[2];
  char v34 = *((unsigned char *)a4 + 24);
  uint64_t v19 = (int *)type metadata accessor for ShelfGrid();
  uint64_t v20 = a9 + v19[23];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = a9 + v19[24];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  uint64_t v22 = a9 + v19[25];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(_WORD *)(v22 + 8) = 0;
  uint64_t v23 = a9 + v19[26];
  *(void *)uint64_t v23 = swift_getKeyPath();
  *(unsigned char *)(v23 + 8) = 0;
  uint64_t v24 = a9 + v19[27];
  *(void *)uint64_t v24 = swift_getKeyPath();
  *(unsigned char *)(v24 + 32) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9, a1, a12);
  uint64_t v25 = (__n128 *)(a9 + v19[17]);
  __n128 result = v32;
  *uint64_t v25 = v32;
  v25[1].n128_u64[0] = v14;
  v25[1].n128_u8[8] = v15;
  uint64_t v27 = a9 + v19[18];
  *(void *)uint64_t v27 = v16;
  *(unsigned char *)(v27 + 8) = v17;
  *(void *)(v27 + 16) = v33;
  *(unsigned char *)(v27 + 24) = v18;
  uint64_t v28 = a9 + v19[19];
  *(void *)uint64_t v28 = v37;
  *(unsigned char *)(v28 + 8) = v36;
  *(void *)(v28 + 16) = v35;
  *(unsigned char *)(v28 + 24) = v34;
  uint64_t v29 = a9 + v19[20];
  *(void *)uint64_t v29 = a5;
  *(unsigned char *)(v29 + 8) = a6 & 1;
  uint64_t v30 = (void *)(a9 + v19[21]);
  *uint64_t v30 = a7;
  v30[1] = a8;
  uint64_t v31 = (void *)(a9 + v19[22]);
  *uint64_t v31 = a10;
  v31[1] = a11;
  return result;
}

uint64_t type metadata accessor for ShelfGrid()
{
  return swift_getGenericMetadata();
}

double ShelfGrid.init<>(_:layout:padding:spacing:shelfPosition:itemContent:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v14 = a6 & 1;
  sub_2191591B8();
  sub_2190C2910((unint64_t *)&qword_267C05560, MEMORY[0x263F1B7B8]);
  *(void *)&double result = ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)(a1, a2, a3, a4, a5, v14, a7, a8, a9, (uint64_t)sub_2190CA0B8, 0, a10).n128_u64[0];
  return result;
}

uint64_t sub_2190BFCBC(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 92);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_218FFE128(*(void *)v2, v4);
  char v5 = sub_2190FAE64(v3, v4);
  sub_218FFDDBC(v3, v4);
  return v5 & 1;
}

double sub_2190BFD1C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 96);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_2190C7EC8(*(void *)v2, v4, v5);
  double v6 = sub_2190FBCF8(v3, v4, v5);
  sub_2190C8028(v3, v4, v5);
  return v6;
}

uint64_t sub_2190BFD98(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 100);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 8);
  int v5 = *(unsigned __int8 *)(v2 + 9);
  sub_2190C7EC8(*(void *)v2, v4, *(unsigned char *)(v2 + 9));
  uint64_t v6 = sub_2190FBF14(v3, v4 | (v5 << 8));
  sub_2190C8028(v3, v4, v5);
  return v6;
}

uint64_t sub_2190BFE1C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 104);
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  sub_218FFE128(*(void *)v4, v6);
  sub_2190FC134(v5, v6, a2);
  return sub_218FFDDBC(v5, v6);
}

uint64_t sub_2190BFE88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.shelfContentPrefersCompactLayouts.getter();
  *a1 = result & 1;
  return result;
}

void sub_2190BFEB8(uint64_t a1@<X8>)
{
  *(double *)a1 = EnvironmentValues.shelfContainerSize.getter();
  *(void *)(a1 + 8) = v2;
}

uint64_t sub_2190BFEE4()
{
  return sub_21900D594();
}

uint64_t sub_2190BFF1C()
{
  sub_2190CA054();
  return sub_219158238();
}

uint64_t sub_2190BFF64()
{
  return sub_219158238();
}

uint64_t sub_2190BFFA4(uint64_t a1)
{
  sub_21902493C(a1, (uint64_t)v3);
  sub_21902493C((uint64_t)v3, (uint64_t)&v2);
  sub_2190CA054();
  sub_219158248();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_2190C0008(uint64_t a1)
{
  return sub_2190BFD98(a1);
}

uint64_t sub_2190C005C()
{
  uint64_t v0 = *(void *)(sub_219159618() + 16);
  swift_bridgeObjectRelease();
  return sub_2190C9EBC(v0, (void (*)(void *, uint64_t *))sub_2190CA014);
}

void sub_2190C0108(int64x2_t **a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v62 = a3;
  uint64_t v13 = *(void *)(sub_219159618() + 16);
  swift_bridgeObjectRelease();
  uint64_t v43 = v13;
  if (!v13) {
    goto LABEL_17;
  }
  uint64_t v48 = a7;
  uint64_t v49 = a8;
  uint64_t v50 = a9;
  uint64_t v51 = a10;
  uint64_t v52 = a11;
  uint64_t v53 = a12;
  uint64_t v14 = 0;
  uint64_t v42 = type metadata accessor for ShelfGrid();
  unsigned __int8 v15 = (uint64_t *)(v62 + *(int *)(v42 + 72));
  uint64_t v41 = *v15;
  char v40 = *((unsigned char *)v15 + 8);
  uint64_t v16 = v15[2];
  char v17 = *((unsigned char *)v15 + 24);
  char v18 = (uint64_t *)(v62 + *(int *)(v42 + 76));
  uint64_t v19 = *v18;
  char v20 = *((unsigned char *)v18 + 8);
  uint64_t v21 = v18[2];
  char v22 = *((unsigned char *)v18 + 24);
  while (1)
  {
    sub_2190C0008(v42);
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    type metadata accessor for ShelfGridItemWidth.Context._OffsetStorage();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v14;
    *(unsigned char *)(v27 + 24) = 0;
    uint64_t v59 = a4;
    uint64_t v60 = a5;
    char v61 = a6;
    uint64_t v48 = v27;
    uint64_t v49 = v24;
    uint64_t v50 = v26;
    uint64_t v51 = v41;
    LOBYTE(v52) = v40;
    uint64_t v53 = v16;
    char v54 = v17;
    uint64_t v55 = v19;
    char v56 = v20;
    uint64_t v57 = v21;
    char v58 = v22;
    double v28 = ShelfGridItemWidth.resolve(using:)((double *)&v48);
    if (*(unsigned char *)(v27 + 24) != 1) {
      break;
    }
    *(double *)&(*a1)->i64[v14] = v28;
    swift_release();
    if (v43 == ++v14) {
      goto LABEL_17;
    }
  }
  uint64_t v29 = *a1;
  if (!*a1) {
    goto LABEL_16;
  }
  unint64_t v30 = (unint64_t)a1[1];
  if ((v30 & 0x8000000000000000) == 0)
  {
    if (v30)
    {
      if (v30 >= 4)
      {
        unint64_t v31 = v30 & 0xFFFFFFFFFFFFFFFCLL;
        int64x2_t v32 = vdupq_lane_s64(*(uint64_t *)&v28, 0);
        uint64_t v33 = v29 + 1;
        unint64_t v34 = v30 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          v33[-1] = v32;
          *uint64_t v33 = v32;
          v33 += 2;
          v34 -= 4;
        }
        while (v34);
        if (v30 == v31) {
          goto LABEL_16;
        }
      }
      else
      {
        unint64_t v31 = 0;
      }
      unint64_t v35 = v30 - v31;
      char v36 = (double *)&v29->i64[v31];
      do
      {
        *v36++ = v28;
        --v35;
      }
      while (v35);
    }
LABEL_16:
    swift_release();
LABEL_17:
    uint64_t v37 = *(void *)(sub_219159618() + 16);
    swift_bridgeObjectRelease();
    *a2 = v37;
    return;
  }
  __break(1u);
}

uint64_t sub_2190C0344@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v99 = a3;
  uint64_t v89 = (char *)a2[5];
  uint64_t v4 = *((void *)v89 + 2);
  uint64_t v100 = a2[2];
  uint64_t v75 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v73 = (char *)&v73 - v5;
  uint64_t v96 = *(a2 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v97 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_2191599F8();
  uint64_t v104 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v88 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v103 = (char *)&v73 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v98 = (char *)&v73 - v12;
  uint64_t v13 = a2[3];
  uint64_t v84 = (void *)a2[4];
  uint64_t v78 = v13;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v14 = sub_219158ED8();
  uint64_t v86 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v81 = (char *)&v73 - v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = a2[6];
  char v18 = a2;
  uint64_t v85 = a2;
  uint64_t v126 = WitnessTable;
  uint64_t v127 = v17;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v125 = v77;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v80 = v19;
  unint64_t v79 = sub_2190C28BC();
  uint64_t v121 = v14;
  uint64_t v122 = &type metadata for ComponentModelViewID;
  uint64_t v123 = v19;
  unint64_t v124 = v79;
  uint64_t v20 = sub_2191590B8();
  uint64_t v82 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  char v22 = (char *)&v73 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  uint64_t v23 = sub_219157F48();
  uint64_t v83 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = sub_219157F48();
  uint64_t v92 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  double v28 = (char *)&v73 - v27;
  sub_219158788();
  uint64_t v93 = v26;
  uint64_t v95 = sub_219157F48();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v90 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v91 = (uint64_t)&v73 - v31;
  uint64_t v105 = v100;
  uint64_t v106 = v78;
  uint64_t v107 = (uint64_t)v84;
  uint64_t v108 = v89;
  uint64_t v32 = v18[7];
  uint64_t v109 = v17;
  uint64_t v110 = v32;
  uint64_t v33 = v87;
  uint64_t v111 = v87;
  uint64_t v112 = v101;
  unint64_t v34 = v81;
  sub_219158EC8();
  uint64_t v84 = v33 + 1;
  __swift_project_boxed_opaque_existential_1(v33 + 1, v33[4]);
  ComponentModel.viewID.getter();
  sub_219158CC8();
  sub_21909F0E8((uint64_t)&v121);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v34, v14);
  uint64_t v35 = swift_getWitnessTable();
  View._shelfGridPrefersEagerLayout(_:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v22, v20);
  uint64_t v36 = v33[6];
  uint64_t v37 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v119 = v35;
  uint64_t v120 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v89 = v28;
  uint64_t v39 = v84;
  uint64_t v86 = v38;
  View.unifiedImpressionableLayoutItem(_:position:)((uint64_t)v84, v36, 0, v23, v38);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v23);
  char v40 = v88;
  sub_2191599E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD033C8);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_21915C970;
  uint64_t v42 = v33[4];
  __swift_project_boxed_opaque_existential_1(v39, v42);
  uint64_t v43 = sub_2190C1904(v42);
  unint64_t v44 = MEMORY[0x263F8D310];
  *(void *)(v41 + 56) = MEMORY[0x263F8D310];
  *(void *)(v41 + 32) = v43;
  *(void *)(v41 + 40) = v45;
  sub_2191599D8();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v104 + 8);
  v104 += 8;
  v46(v40, v102);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E10);
  sub_21915A028();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915D6B0;
  uint64_t v47 = v33[4];
  uint64_t v48 = v33[5];
  __swift_project_boxed_opaque_existential_1(v39, v47);
  uint64_t v49 = sub_2190C1BBC(v47, v48);
  unint64_t v124 = v44;
  uint64_t v121 = v49;
  uint64_t v122 = v50;
  sub_21915A018();
  uint64_t v51 = v85;
  uint64_t v52 = v39;
  uint64_t v53 = v96;
  __swift_project_boxed_opaque_existential_1(v52, v33[4]);
  uint64_t v54 = sub_2190C1E80();
  char v56 = v55;
  uint64_t v57 = v97;
  (*(void (**)(void))(v53 + 16))();
  unint64_t v124 = v44;
  if (!v56)
  {
    uint64_t v117 = 0;
    unint64_t v118 = 0xE000000000000000;
    char v58 = v73;
    sub_21915B498();
    uint64_t v59 = AssociatedTypeWitness;
    sub_21915B6A8();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v58, v59);
    uint64_t v54 = v117;
    char v56 = (ValueMetadata *)v118;
  }
  uint64_t v121 = v54;
  uint64_t v122 = v56;
  (*(void (**)(char *, void *))(v53 + 8))(v57, v51);
  sub_21915A018();
  uint64_t v60 = v98;
  char v61 = v103;
  sub_2191599C8();
  swift_bridgeObjectRelease();
  uint64_t v62 = v102;
  v46(v61, v102);
  unint64_t v63 = sub_21909D5A4();
  uint64_t v115 = v86;
  unint64_t v116 = v63;
  uint64_t v64 = v93;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = (uint64_t)v90;
  uint64_t v67 = v89;
  View._automationIdentifier(_:)();
  v46(v60, v62);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v67, v64);
  uint64_t v68 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  uint64_t v113 = v65;
  uint64_t v114 = v68;
  uint64_t v69 = v95;
  swift_getWitnessTable();
  uint64_t v70 = v91;
  sub_218FFDE04(v66, v69, v91);
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  v71(v66, v69);
  sub_218FFDE04(v70, v69, v99);
  return ((uint64_t (*)(uint64_t, uint64_t))v71)(v70, v69);
}

uint64_t sub_2190C0FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v67 = a8;
  uint64_t v68 = a7;
  uint64_t v65 = a9;
  uint64_t v66 = a5;
  uint64_t v57 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  char v56 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v55 = (uint64_t)v49 - v16;
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_2191593B8();
  uint64_t WitnessTable = swift_getWitnessTable();
  v49[1] = v17;
  v49[0] = WitnessTable;
  uint64_t v19 = sub_2191590F8();
  uint64_t v53 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v51 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v50 = (uint64_t)v49 - v22;
  uint64_t v59 = v23;
  uint64_t v24 = sub_2191584D8();
  uint64_t v62 = *(void *)(v24 - 8);
  uint64_t v63 = v24;
  MEMORY[0x270FA5388](v24);
  char v61 = (char *)v49 - v25;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = *(void *)(a1 + 72);
  unsigned __int8 v28 = *(unsigned char *)(a1 + 80);
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v58 = *(void *)(a1 + 48);
  v71[6] = v29;
  v71[7] = v26;
  v71[8] = v27;
  unsigned __int8 v72 = v28;
  sub_2190C7E88(v29, v26, v27, v28);
  uint64_t v30 = *(void *)(sub_219159618() + 16);
  swift_bridgeObjectRelease();
  uint64_t v52 = a3;
  v71[0] = a3;
  v71[1] = a4;
  uint64_t v64 = a4;
  v71[2] = v66;
  v71[3] = a6;
  uint64_t v54 = a6;
  v71[4] = v68;
  v71[5] = v67;
  uint64_t v31 = type metadata accessor for ShelfGrid();
  uint64_t v60 = a2;
  sub_2190BFE1C(v31, v71);
  LOBYTE(a2) = sub_2190F4764(v58, v30, (unsigned __int8 *)v71);
  sub_2190C7FE8(v29, v26, v27, v28);
  if (a2)
  {
    uint64_t v32 = sub_219158348();
    MEMORY[0x270FA5388](v32);
    uint64_t v33 = v64;
    v49[-8] = v52;
    v49[-7] = v33;
    uint64_t v34 = v54;
    v49[-6] = v66;
    v49[-5] = v34;
    uint64_t v35 = v67;
    uint64_t v36 = v68;
    v49[-4] = v68;
    v49[-3] = v35;
    v49[-2] = v60;
    v49[-1] = a1;
    uint64_t v37 = (uint64_t)v51;
    sub_2191590E8();
    uint64_t v38 = v59;
    swift_getWitnessTable();
    uint64_t v39 = v50;
    sub_218FFDE04(v37, v38, v50);
    char v40 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v40(v37, v38);
    sub_218FFDE04(v39, v38, v37);
    uint64_t v41 = (uint64_t)v61;
    sub_219050FE4(v37, v38);
    v40(v37, v38);
    v40(v39, v38);
  }
  else
  {
    uint64_t v42 = (uint64_t)v56;
    (*(void (**)(uint64_t))(v60 + *(int *)(v31 + 84)))(a1);
    uint64_t v43 = v55;
    uint64_t v44 = v64;
    uint64_t v36 = v68;
    sub_218FFDE04(v42, v64, v55);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v45(v42, v44);
    sub_218FFDE04(v43, v44, v42);
    uint64_t v46 = v59;
    swift_getWitnessTable();
    uint64_t v41 = (uint64_t)v61;
    sub_218FFCBB0(v42, v46, v44);
    v45(v42, v44);
    v45(v43, v44);
  }
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v70 = v36;
  uint64_t v47 = v63;
  swift_getWitnessTable();
  sub_218FFDE04(v41, v47, v65);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v41, v47);
}

uint64_t sub_2190C15F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v35 = a1;
  uint64_t v42 = a6;
  uint64_t v41 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v40 = (uint64_t)&v35 - v13;
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v15 = v36;
  MEMORY[0x270FA5388](v16);
  char v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v43 = (char *)&v35 - v20;
  uint64_t v47 = v22;
  uint64_t v48 = v23;
  uint64_t v49 = v24;
  uint64_t v50 = v25;
  uint64_t v38 = v26;
  uint64_t v51 = v26;
  uint64_t v52 = v27;
  uint64_t v28 = type metadata accessor for ShelfGrid();
  (*(void (**)(uint64_t))(a1 + *(int *)(v28 + 84)))(a2);
  sub_218FFDE04((uint64_t)v18, a3, (uint64_t)v21);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v15 + 8);
  v39(v18, a3);
  (*(void (**)(uint64_t))(v35 + *(int *)(v28 + 88)))(a2);
  uint64_t v29 = v40;
  uint64_t v30 = v37;
  sub_218FFDE04((uint64_t)v11, a4, v40);
  uint64_t v31 = v41;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v41 + 8);
  v32(v11, a4);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v18, v43, a3);
  uint64_t v47 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v11, v29, a4);
  uint64_t v48 = v11;
  v46[0] = a3;
  v46[1] = a4;
  uint64_t v44 = v38;
  uint64_t v45 = v30;
  sub_218FFC48C((uint64_t)&v47, 2uLL, (uint64_t)v46);
  v32((char *)v29, a4);
  uint64_t v33 = (uint64_t (*)(char *, uint64_t))v39;
  v39(v43, a3);
  v32(v11, a4);
  return v33(v18, a3);
}

uint64_t sub_2190C1904(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21915ABF8();
  uint64_t v10 = sub_219159ED8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_218FFE158((uint64_t)v9, &qword_26AD03338);
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_10:
    sub_218FFE158((uint64_t)&v19, qword_26AD03AB8);
    goto LABEL_11;
  }
  uint64_t v12 = sub_219159EC8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_2190248C4(0x6973736572706D69, 0xEE00657079546E6FLL), (v14 & 1) != 0))
  {
    sub_21902493C(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v15 = v18[0];
    uint64_t v16 = v18[1];
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v15 = 0;
  uint64_t v16 = 0;
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  if (!v16)
  {
    swift_getDynamicType();
    uint64_t v15 = sub_21915B818();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  return v15;
}

uint64_t sub_2190C1BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_219159E98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = a2;
  uint64_t v22 = v2;
  sub_21915ABF8();
  uint64_t v15 = sub_219159ED8();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_218FFE158((uint64_t)v14, &qword_26AD03338);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    sub_219159EB8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    uint64_t v17 = sub_219159E88();
    uint64_t v18 = v19;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, a1);
  if (!v18)
  {
    _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0();
    uint64_t v17 = _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV16debugDescriptionSSvg_0();
    sub_219020324((uint64_t)v23);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  return v17;
}

uint64_t sub_2190C1E80()
{
  uint64_t v0 = sub_219159E98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21915ABF8();
  uint64_t v7 = sub_219159ED8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_218FFE158((uint64_t)v6, &qword_26AD03338);
    return 0;
  }
  else
  {
    sub_219159EB8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    uint64_t v9 = sub_219159E78();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v9;
}

uint64_t ShelfGrid.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D20);
  uint64_t v3 = a1[5];
  uint64_t v32 = a1[2];
  uint64_t v33 = v3;
  type metadata accessor for UnifiedImpressionableLayoutViewModifier();
  sub_219157F48();
  unint64_t v4 = sub_2190C272C();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v68 = v4;
  uint64_t v69 = WitnessTable;
  uint64_t v5 = MEMORY[0x263F18E48];
  swift_getWitnessTable();
  sub_219158048();
  uint64_t v6 = a1[3];
  uint64_t v31 = a1[4];
  uint64_t v29 = v6;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v7 = sub_219158ED8();
  uint64_t v30 = MEMORY[0x263F1B6E0];
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v28 = a1[6];
  uint64_t v66 = v8;
  uint64_t v67 = v28;
  v26[2] = MEMORY[0x263F19B40];
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v61 = v7;
  uint64_t v62 = &type metadata for ComponentModelViewID;
  uint64_t v63 = swift_getWitnessTable();
  unint64_t v64 = sub_2190C28BC();
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  sub_219157F48();
  sub_219157F48();
  sub_219158788();
  sub_219157F48();
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v57 = swift_getWitnessTable();
  unint64_t v58 = sub_21909D5A4();
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v56 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  swift_getWitnessTable();
  type metadata accessor for _ResolvedVerticalShelfLayout();
  sub_219157F48();
  sub_219157F48();
  sub_219157F48();
  sub_219157F48();
  sub_2191584D8();
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = MEMORY[0x263F18C10];
  uint64_t v53 = v10;
  uint64_t v54 = MEMORY[0x263F18C10];
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = v11;
  v26[1] = v5;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = MEMORY[0x263F19100];
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = WitnessTable;
  uint64_t v45 = v9;
  uint64_t v46 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_2191590F8();
  uint64_t WitnessTable = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)v26 - v13;
  uint64_t v15 = sub_219157F48();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v26 - v20;
  sub_219158338();
  uint64_t v36 = v32;
  uint64_t v37 = v29;
  uint64_t v38 = v31;
  uint64_t v39 = v33;
  uint64_t v22 = a1[7];
  uint64_t v40 = v28;
  uint64_t v41 = v22;
  uint64_t v42 = v34;
  sub_2191590E8();
  sub_219159318();
  uint64_t v25 = swift_getWitnessTable();
  sub_219158D48();
  (*(void (**)(char *, uint64_t))(WitnessTable + 8))(v14, v12);
  uint64_t v43 = v25;
  uint64_t v44 = MEMORY[0x263F19100];
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v18, v15, (uint64_t)v21);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v18, v15);
  sub_218FFDE04((uint64_t)v21, v15, v35);
  return ((uint64_t (*)(char *, uint64_t))v23)(v21, v15);
}

unint64_t sub_2190C272C()
{
  unint64_t result = qword_267C05D28;
  if (!qword_267C05D28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D20);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D30);
    sub_2190C27DC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05D28);
  }
  return result;
}

unint64_t sub_2190C27DC()
{
  unint64_t result = qword_267C05D38;
  if (!qword_267C05D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D30);
    sub_2190C2850();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05D38);
  }
  return result;
}

unint64_t sub_2190C2850()
{
  unint64_t result = qword_267C05D40;
  if (!qword_267C05D40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05D40);
  }
  return result;
}

unint64_t sub_2190C28BC()
{
  unint64_t result = qword_267C05D50;
  if (!qword_267C05D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05D50);
  }
  return result;
}

uint64_t sub_2190C2910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2190C2958@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)&long long v120 = a6;
  *((void *)&v120 + 1) = a7;
  unint64_t v124 = a1;
  uint64_t v114 = a8;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v13 = sub_219158ED8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v208 = a6;
  uint64_t v206 = swift_getWitnessTable();
  *(void *)&v197[0] = v13;
  *((void *)&v197[0] + 1) = &type metadata for ComponentModelViewID;
  *(void *)&v197[1] = swift_getWitnessTable();
  *((void *)&v197[1] + 1) = sub_2190C28BC();
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  sub_219157F48();
  sub_219157F48();
  sub_219158788();
  uint64_t v14 = sub_219157F48();
  uint64_t v204 = swift_getWitnessTable();
  uint64_t v205 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v202 = swift_getWitnessTable();
  unint64_t v203 = sub_21909D5A4();
  uint64_t v200 = swift_getWitnessTable();
  uint64_t v201 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v101 = v14;
  uint64_t v121 = type metadata accessor for _ResolvedVerticalShelfLayout();
  uint64_t v122 = sub_219157F48();
  uint64_t v123 = sub_219157F48();
  uint64_t v15 = sub_219157F48();
  type metadata accessor for UnifiedImpressionableLayoutViewModifier();
  uint64_t v113 = v15;
  uint64_t v16 = sub_219157F48();
  uint64_t v105 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v104 = (uint64_t)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v102 = (uint64_t)&v98 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v103 = (uint64_t)&v98 - v21;
  uint64_t v118 = a2;
  uint64_t v119 = a5;
  *(void *)&v197[0] = a2;
  uint64_t v106 = a3;
  uint64_t v107 = a4;
  *((void *)&v197[0] + 1) = a3;
  *(void *)&v197[1] = a4;
  *((void *)&v197[1] + 1) = a5;
  v197[2] = v120;
  uint64_t v22 = type metadata accessor for ShelfGrid();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v98 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05D20);
  sub_219157F48();
  unint64_t v27 = sub_2190C272C();
  uint64_t v28 = swift_getWitnessTable();
  unint64_t v198 = v27;
  uint64_t v199 = v28;
  uint64_t v117 = v28;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v108 = sub_219158048();
  uint64_t v112 = v16;
  unint64_t v29 = v124;
  uint64_t v30 = sub_2191584D8();
  uint64_t v110 = *(void *)(v30 - 8);
  uint64_t v111 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v109 = (char *)&v98 - v31;
  unint64_t v32 = v29 + *(int *)(v22 + 68);
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = *(void *)(v32 + 16);
  unsigned int v35 = *(unsigned __int8 *)(v32 + 24);
  uint64_t v125 = *(void *)(v32 + 8);
  uint64_t v126 = v33;
  sub_2190C7E88(v33, v125, v34, v35);
  uint64_t v36 = v22;
  char v37 = sub_2190BFCBC(v22);
  if (v35 & 0xC0) == 0x40 && (v37)
  {
    uint64_t v34 = 0;
    unsigned int v35 = 64;
    uint64_t v125 = 0;
    uint64_t v126 = 1;
LABEL_5:
    uint64_t v116 = v34;
    uint64_t v39 = v119;
    uint64_t v40 = v118;
    uint64_t v98 = sub_219159618();
    unint64_t v41 = v29 + *(int *)(v36 + 76);
    uint64_t v42 = *(void *)v41;
    char v43 = *(unsigned char *)(v41 + 8);
    uint64_t v44 = *(void *)(v41 + 16);
    LOBYTE(v41) = *(unsigned char *)(v41 + 24);
    *(void *)&v197[0] = v42;
    BYTE8(v197[0]) = v43;
    *(void *)&v197[1] = v44;
    BYTE8(v197[1]) = v41;
    sub_2190BFE1C(v36, v156);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v26, v29, v36);
    unint64_t v45 = (*(unsigned __int8 *)(v23 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v46 = v24 + v45 + 7;
    unsigned int v47 = v35;
    unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = (char *)swift_allocObject();
    uint64_t v50 = v106;
    *((void *)v49 + 2) = v40;
    *((void *)v49 + 3) = v50;
    *((void *)v49 + 4) = v107;
    *((void *)v49 + 5) = v39;
    uint64_t v51 = *((void *)&v120 + 1);
    *((void *)v49 + 6) = v120;
    *((void *)v49 + 7) = v51;
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v99 = v36;
    v52(&v49[v45], v26, v36);
    uint64_t v53 = &v49[v48];
    uint64_t v54 = v125;
    uint64_t v55 = v126;
    *(void *)uint64_t v53 = v126;
    *((void *)v53 + 1) = v54;
    uint64_t v56 = v116;
    *((void *)v53 + 2) = v116;
    LOBYTE(v48) = v47;
    unsigned int v115 = v47;
    v53[24] = v47;
    uint64_t v126 = v55;
    sub_219069CF8(v98, v55, (uint64_t *)v197, (char *)v156, (uint64_t)sub_2190C9664, (uint64_t)v49, (uint64_t)&v170);
    *((void *)&v120 + 1) = v170;
    uint64_t v57 = v178;
    LOBYTE(v39) = v179;
    uint64_t v160 = v170;
    long long v161 = v171;
    char v162 = v172;
    uint64_t v163 = v173;
    char v164 = v174;
    char v165 = v175;
    uint64_t v166 = v176;
    uint64_t v167 = v177;
    uint64_t v168 = v178;
    char v169 = v179;
    sub_2190C7E88(v55, v54, v56, v48);
    sub_219158868();
    uint64_t v58 = swift_getWitnessTable();
    sub_219158D98();
    swift_release();
    swift_bridgeObjectRelease();
    sub_218FFDDBC(v57, v39);
    v158[4] = v184;
    v158[5] = v185;
    v159[0] = v186[0];
    *(_OWORD *)((char *)v159 + 9) = *(_OWORD *)((char *)v186 + 9);
    v158[0] = v180;
    v158[1] = v181;
    v158[2] = v182;
    v158[3] = v183;
    v156[22] = v184;
    v156[23] = v185;
    v157[0] = v186[0];
    *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)((char *)v186 + 9);
    v156[18] = v180;
    v156[19] = v181;
    v156[20] = v182;
    v156[21] = v183;
    sub_219158888();
    uint64_t v152 = v58;
    uint64_t v153 = MEMORY[0x263F18C10];
    uint64_t v59 = MEMORY[0x263F18C10];
    uint64_t v60 = swift_getWitnessTable();
    sub_219158D98();
    sub_2190C9764((uint64_t)v158);
    v154[8] = v195;
    v155[0] = v196[0];
    *(_OWORD *)((char *)v155 + 9) = *(_OWORD *)((char *)v196 + 9);
    v154[4] = v191;
    v154[5] = v192;
    v154[6] = v193;
    v154[7] = v194;
    v154[0] = v187;
    v154[1] = v188;
    v154[2] = v189;
    v154[3] = v190;
    v156[8] = v195;
    v156[9] = v196[0];
    *(_OWORD *)((char *)&v156[9] + 9) = *(_OWORD *)((char *)v196 + 9);
    v156[4] = v191;
    v156[5] = v192;
    v156[6] = v193;
    v156[7] = v194;
    v156[0] = v187;
    v156[1] = v188;
    v156[2] = v189;
    v156[3] = v190;
    uint64_t v61 = v99;
    uint64_t v62 = v124;
    sub_2190BFD98(v99);
    sub_219159318();
    uint64_t v150 = v60;
    uint64_t v151 = v59;
    uint64_t v97 = swift_getWitnessTable();
    sub_219158D48();
    sub_2190C9764((uint64_t)v154);
    memcpy(v156, v197, 0x120uLL);
    memcpy(v149, v197, sizeof(v149));
    uint64_t v63 = v62 + *(int *)(v61 + 80);
    uint64_t v64 = *(void *)v63;
    LOBYTE(v48) = *(unsigned char *)(v63 + 8);
    uint64_t v147 = v97;
    uint64_t v148 = MEMORY[0x263F19100];
    uint64_t v65 = v113;
    uint64_t v66 = swift_getWitnessTable();
    uint64_t v67 = v102;
    View.unifiedImpressionableLayout<A>(_:position:definesParentContext:)(v62, v64, v48, 1, v65, v118, v66, v102);
    sub_2190C9764((uint64_t)v156);
    uint64_t v145 = v66;
    uint64_t v146 = v117;
    uint64_t v68 = v112;
    swift_getWitnessTable();
    uint64_t v69 = v103;
    sub_218FFDE04(v67, v68, v103);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
    v70(v67, v68);
    uint64_t v71 = v104;
    sub_218FFDE04(v69, v68, v104);
    uint64_t v72 = v108;
    swift_getWitnessTable();
    uint64_t v73 = (uint64_t)v109;
    sub_218FFCBB0(v71, v72, v68);
    sub_2190C7FE8(v126, v125, v116, v115);
    uint64_t v74 = v71;
    uint64_t v75 = MEMORY[0x263F19100];
    v70(v74, v68);
    uint64_t v76 = v69;
    uint64_t v77 = v117;
    v70(v76, v68);
    uint64_t v78 = MEMORY[0x263F18C10];
  }
  else
  {
    char v38 = v35;
    switch(v35 >> 6)
    {
      case 1u:
      case 3u:
        goto LABEL_5;
      case 2u:
        char v38 = v35 & 0x3F;
        break;
      default:
        break;
    }
    *(void *)&v197[0] = v125;
    *((void *)&v197[0] + 1) = v34;
    LOBYTE(v197[1]) = v38;
    uint64_t v105 = sub_2190C005C();
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v26, v29, v22);
    uint64_t v79 = *(unsigned __int8 *)(v23 + 80);
    unsigned int v115 = v35;
    uint64_t v80 = (v79 + 64) & ~v79;
    unint64_t v81 = (v24 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v124 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v82 = v34;
    uint64_t v83 = (char *)swift_allocObject();
    uint64_t v84 = v106;
    *((void *)v83 + 2) = v118;
    *((void *)v83 + 3) = v84;
    uint64_t v85 = v119;
    *((void *)v83 + 4) = v107;
    *((void *)v83 + 5) = v85;
    uint64_t v86 = *((void *)&v120 + 1);
    *((void *)v83 + 6) = v120;
    *((void *)v83 + 7) = v86;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v83[v80], v26, v36);
    uint64_t v88 = v125;
    uint64_t v87 = v126;
    *(void *)&v83[v81] = v126;
    uint64_t v89 = &v83[v124];
    *(void *)uint64_t v89 = v87;
    *((void *)v89 + 1) = v88;
    uint64_t v116 = v82;
    *((void *)v89 + 2) = v82;
    unsigned __int8 v90 = v115;
    v89[24] = v115;
    *(void *)&v83[(v81 + 47) & 0xFFFFFFFFFFFFFFF8] = v105;
    sub_2190C7E88(v87, v88, v82, v90);
    *(void *)&v156[0] = sub_219158038();
    *((void *)&v156[0] + 1) = v91;
    uint64_t v92 = v108;
    swift_getWitnessTable();
    sub_218FFDE04((uint64_t)v156, v92, (uint64_t)v197);
    swift_release();
    unint64_t v124 = *((void *)&v197[0] + 1);
    v149[0] = v197[0];
    sub_218FFDE04((uint64_t)v149, v92, (uint64_t)v156);
    v149[0] = v156[0];
    uint64_t v133 = swift_getWitnessTable();
    uint64_t v78 = MEMORY[0x263F18C10];
    uint64_t v134 = MEMORY[0x263F18C10];
    uint64_t v131 = swift_getWitnessTable();
    uint64_t v132 = v78;
    uint64_t v129 = swift_getWitnessTable();
    uint64_t v75 = MEMORY[0x263F19100];
    uint64_t v130 = MEMORY[0x263F19100];
    uint64_t v127 = swift_getWitnessTable();
    uint64_t v128 = v117;
    uint64_t v77 = v117;
    swift_getWitnessTable();
    uint64_t v73 = (uint64_t)v109;
    sub_219050FE4((uint64_t)v149, v92);
    sub_2190C7FE8(v126, v125, v116, v115);
    swift_release();
    swift_release();
  }
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v144 = v78;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v142 = v78;
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v140 = v75;
  uint64_t v137 = swift_getWitnessTable();
  uint64_t v138 = v77;
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v135 = v93;
  uint64_t v136 = v94;
  uint64_t v95 = v111;
  swift_getWitnessTable();
  sub_218FFDE04(v73, v95, v114);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v73, v95);
}

uint64_t sub_2190C388C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190C2958(*(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_2190C38A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v138 = a7;
  int v132 = a6;
  uint64_t v130 = a4;
  uint64_t v131 = a5;
  uint64_t v127 = a2;
  uint64_t v128 = a3;
  uint64_t v126 = a1;
  uint64_t v136 = a8;
  uint64_t v124 = a14;
  uint64_t v140 = a9;
  uint64_t v137 = a11;
  uint64_t v14 = sub_2191586E8();
  uint64_t v134 = *(void *)(v14 - 8);
  uint64_t v135 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v133 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_2191584F8();
  uint64_t v125 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v123 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = a10;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v17 = sub_219158ED8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v177 = a13;
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  unint64_t v19 = sub_2190C28BC();
  *(void *)&long long v162 = v17;
  *((void *)&v162 + 1) = &type metadata for ComponentModelViewID;
  uint64_t v163 = v18;
  unint64_t v164 = v19;
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  sub_219157F48();
  sub_219157F48();
  sub_219158788();
  sub_219157F48();
  sub_219157F48();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v173 = v20;
  uint64_t v174 = v21;
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v23 = sub_21909D5A4();
  uint64_t v171 = v22;
  unint64_t v172 = v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  uint64_t v169 = v24;
  uint64_t v170 = v25;
  uint64_t v167 = swift_getWitnessTable();
  uint64_t v168 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  uint64_t v106 = type metadata accessor for _ResolvedHorizontalShelfLayout();
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v26 = sub_219157AC8();
  uint64_t v111 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v91 - v27;
  uint64_t v29 = swift_getWitnessTable();
  *(void *)&long long v162 = v26;
  *((void *)&v162 + 1) = v29;
  uint64_t v30 = v26;
  uint64_t v96 = v26;
  uint64_t v97 = v29;
  uint64_t v31 = v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v95 = (char *)&v91 - v33;
  *(void *)&long long v162 = v30;
  *((void *)&v162 + 1) = v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v99 = OpaqueTypeMetadata2;
  uint64_t v100 = OpaqueTypeConformance2;
  *(void *)&long long v162 = OpaqueTypeMetadata2;
  *((void *)&v162 + 1) = OpaqueTypeConformance2;
  uint64_t v35 = OpaqueTypeConformance2;
  uint64_t v36 = swift_getOpaqueTypeMetadata2();
  uint64_t v109 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v98 = (char *)&v91 - v37;
  *(void *)&long long v162 = OpaqueTypeMetadata2;
  *((void *)&v162 + 1) = v35;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v93 = v36;
  uint64_t v94 = v38;
  *(void *)&long long v162 = v36;
  *((void *)&v162 + 1) = v38;
  uint64_t v39 = v38;
  uint64_t v104 = MEMORY[0x263F1AED0];
  uint64_t v40 = swift_getOpaqueTypeMetadata2();
  uint64_t v101 = v40;
  uint64_t v103 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v92 = (char *)&v91 - v41;
  *(void *)&long long v162 = v36;
  *((void *)&v162 + 1) = v39;
  uint64_t v102 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v162 = v40;
  *((void *)&v162 + 1) = v102;
  uint64_t v105 = swift_getOpaqueTypeMetadata2();
  uint64_t v108 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v91 = (char *)&v91 - v42;
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E00);
  uint64_t v116 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v112 = (char *)&v91 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05D20);
  MEMORY[0x270FA5388](v44);
  uint64_t v114 = (uint64_t)&v91 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v140;
  unint64_t v139 = a12;
  uint64_t v47 = type metadata accessor for UnifiedImpressionableLayoutViewModifier();
  uint64_t v115 = v44;
  uint64_t v113 = v47;
  uint64_t v48 = sub_219157F48();
  uint64_t v121 = *(void *)(v48 - 8);
  uint64_t v122 = v48;
  MEMORY[0x270FA5388](v48);
  uint64_t v117 = (uint64_t)&v91 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  uint64_t v119 = (uint64_t)&v91 - v51;
  sub_219158808();
  uint64_t v141 = v46;
  uint64_t v52 = v120;
  uint64_t v142 = v120;
  uint64_t v143 = v137;
  unint64_t v144 = a12;
  uint64_t v145 = a13;
  uint64_t v53 = v124;
  uint64_t v54 = v126;
  uint64_t v146 = v124;
  uint64_t v147 = v126;
  uint64_t v148 = v127;
  uint64_t v149 = v128;
  uint64_t v150 = v130;
  uint64_t v151 = v131;
  char v152 = v132;
  uint64_t v153 = v138;
  sub_2190E30B0();
  uint64_t v55 = v123;
  sub_2191584E8();
  sub_219158808();
  uint64_t v57 = v95;
  uint64_t v56 = v96;
  sub_219158C28();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v55, v129);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v28, v56);
  *(void *)&long long v162 = v140;
  *((void *)&v162 + 1) = v52;
  uint64_t v163 = v137;
  unint64_t v164 = v139;
  uint64_t v165 = a13;
  uint64_t v166 = v53;
  uint64_t v58 = type metadata accessor for ShelfGrid();
  sub_2190BFD98(v58);
  uint64_t v60 = v98;
  uint64_t v59 = v99;
  sub_219158BC8();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v57, v59);
  sub_219158868();
  uint64_t v62 = v92;
  uint64_t v61 = v93;
  sub_219158C38();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v60, v61);
  sub_219158888();
  uint64_t v63 = v91;
  uint64_t v64 = v101;
  uint64_t v65 = v102;
  sub_219158C38();
  uint64_t v66 = v62;
  uint64_t v67 = v133;
  (*(void (**)(char *, uint64_t))(v103 + 8))(v66, v64);
  sub_2190FC178(&v162);
  uint64_t v68 = v54 + *(int *)(v58 + 76);
  uint64_t v69 = *(void *)v68;
  char v70 = *(unsigned char *)(v68 + 8);
  uint64_t v71 = *(void *)(v68 + 16);
  LOBYTE(v68) = *(unsigned char *)(v68 + 24);
  uint64_t v158 = v69;
  char v159 = v70;
  uint64_t v160 = v71;
  char v161 = v68;
  uint64_t v156 = v64;
  uint64_t v157 = v65;
  uint64_t v72 = swift_getOpaqueTypeConformance2();
  uint64_t v73 = v105;
  sub_2190C51FC((uint64_t)&v162, v138, &v158, v105, v72, (uint64_t)&v156);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v162);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v63, v73);
  *(void *)&long long v162 = v156;
  BYTE8(v162) = v157;
  sub_2191586C8();
  LOBYTE(v63) = sub_219158828();
  unsigned __int8 v74 = sub_219158808();
  sub_219158818();
  sub_219158818();
  if (sub_219158818() != v63) {
    sub_219158818();
  }
  sub_219158818();
  if (sub_219158818() != v74) {
    sub_219158818();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05D30);
  sub_2190C27DC();
  uint64_t v75 = v112;
  sub_219158B88();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v67, v135);
  sub_2190C9AE0(v162, SBYTE8(v162));
  uint64_t v76 = sub_2190BFD98(v58);
  char v78 = v77 & 1;
  sub_219159318();
  uint64_t v79 = v114;
  __n128 v80 = sub_2190C5F40(0.0, 1, 0.0, 1, *(double *)&v76, v78, 0.0, 1, v114, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v75, v118, v80);
  uint64_t v81 = v54 + *(int *)(v58 + 80);
  uint64_t v82 = *(void *)v81;
  char v83 = *(unsigned char *)(v81 + 8);
  unint64_t v84 = sub_2190C272C();
  uint64_t v85 = v117;
  View.unifiedImpressionableLayout<A>(_:position:definesParentContext:)(v54, v82, v83, 1, v115, v140, v84, v117);
  sub_218FFE158(v79, &qword_267C05D20);
  uint64_t v86 = swift_getWitnessTable();
  unint64_t v154 = v84;
  uint64_t v155 = v86;
  uint64_t v87 = v122;
  swift_getWitnessTable();
  uint64_t v88 = v119;
  sub_218FFDE04(v85, v87, v119);
  uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
  v89(v85, v87);
  sub_218FFDE04(v88, v87, v136);
  return ((uint64_t (*)(uint64_t, uint64_t))v89)(v88, v87);
}

uint64_t sub_2190C466C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, unint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v47 = a7;
  int v55 = a6;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v52 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = a9;
  uint64_t v46 = a13;
  uint64_t v51 = a12;
  uint64_t v44 = *((void *)&a10 + 1);
  uint64_t v45 = a10;
  uint64_t v81 = a8;
  long long v82 = a10;
  unint64_t v83 = a11;
  uint64_t v84 = a12;
  uint64_t v85 = a13;
  uint64_t v15 = type metadata accessor for ShelfGrid();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v42 - v18;
  uint64_t v48 = sub_219159618();
  uint64_t v20 = a1 + *(int *)(v15 + 76);
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  uint64_t v23 = *(void *)(v20 + 16);
  LOBYTE(v20) = *(unsigned char *)(v20 + 24);
  uint64_t v56 = v21;
  LOBYTE(v57) = v22;
  *((void *)&v57 + 1) = v23;
  char v58 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, v15);
  unint64_t v24 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v43 = (v24 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + v17 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = a8;
  uint64_t v27 = v44;
  *((void *)v26 + 3) = v45;
  *((void *)v26 + 4) = v27;
  uint64_t v28 = v51;
  *((void *)v26 + 5) = a11;
  *((void *)v26 + 6) = v28;
  *((void *)v26 + 7) = v46;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v26[v24], v19, v15);
  uint64_t v29 = &v26[v43];
  uint64_t v30 = v53;
  *(void *)uint64_t v29 = v52;
  *((void *)v29 + 1) = v30;
  *((void *)v29 + 2) = v54;
  v29[24] = v55;
  *(void *)&v26[v25] = v47;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v31 = sub_219158ED8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v73 = v51;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v32 = swift_getWitnessTable();
  unint64_t v33 = sub_2190C28BC();
  uint64_t v81 = v31;
  *(void *)&long long v82 = &type metadata for ComponentModelViewID;
  *((void *)&v82 + 1) = v32;
  unint64_t v83 = v33;
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  sub_219157F48();
  sub_219157F48();
  sub_219158788();
  sub_219157F48();
  sub_219157F48();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v69 = v34;
  uint64_t v70 = v35;
  uint64_t v36 = swift_getWitnessTable();
  unint64_t v37 = sub_21909D5A4();
  uint64_t v67 = v36;
  unint64_t v68 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  uint64_t v65 = v38;
  uint64_t v66 = v39;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  sub_21911D674(v48, v49, &v56, (uint64_t)sub_2190C9D4C, (uint64_t)v26, (uint64_t)&v74);
  uint64_t v56 = v74;
  long long v57 = v75;
  char v58 = v76;
  uint64_t v59 = v77;
  char v60 = v78;
  uint64_t v61 = v79;
  uint64_t v62 = v80;
  uint64_t v40 = type metadata accessor for _ResolvedHorizontalShelfLayout();
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)&v56, v40, (uint64_t)&v81);
  sub_2190C7E88(v52, v53, v54, v55);
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v74 = v81;
  long long v75 = v82;
  char v76 = v83;
  uint64_t v77 = v84;
  char v78 = v85;
  uint64_t v79 = v86;
  uint64_t v80 = v87;
  sub_218FFDE04((uint64_t)&v74, v40, v50);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2190C4C00@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v43 = a7;
  int v52 = a6;
  uint64_t v51 = a5;
  uint64_t v50 = a4;
  uint64_t v49 = a3;
  uint64_t v47 = a2;
  uint64_t v42 = a8;
  uint64_t v53 = a14;
  uint64_t v44 = a13;
  uint64_t v46 = a12;
  uint64_t v48 = a11;
  uint64_t v45 = a10;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v15 = sub_219158ED8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v74 = a13;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v68 = v15;
  v69[0] = &type metadata for ComponentModelViewID;
  v69[1] = swift_getWitnessTable();
  v69[2] = sub_2190C28BC();
  uint64_t v16 = sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  v39[0] = v16;
  v39[1] = sub_219157F48();
  uint64_t v17 = sub_219157F48();
  sub_219158788();
  v39[2] = v17;
  uint64_t v18 = sub_219157F48();
  uint64_t v40 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v39 - v19;
  uint64_t v21 = sub_219157F48();
  uint64_t v41 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v39 - v25;
  sub_219030940(v47, (uint64_t)v69);
  uint64_t v27 = v46;
  uint64_t v28 = *(void *)(sub_219159618() + 16);
  swift_bridgeObjectRelease();
  uint64_t v68 = v28;
  v69[5] = a1;
  v69[6] = v49;
  v69[7] = v50;
  v69[8] = v51;
  char v70 = v52;
  char v71 = 2;
  sub_2190C7E88(v49, v50, v51, v52);
  uint64_t v62 = a9;
  uint64_t v63 = v45;
  uint64_t v64 = v48;
  uint64_t v65 = v27;
  uint64_t v66 = v44;
  uint64_t v67 = v53;
  uint64_t v29 = (void *)type metadata accessor for ShelfGrid();
  sub_2190C0344(&v68, v29, (uint64_t)v20);
  uint64_t result = sub_2190C9E54((uint64_t)&v68);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v43 + 16) > a1)
  {
    sub_219159328();
    uint64_t v31 = swift_getWitnessTable();
    uint64_t v32 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
    uint64_t v60 = v31;
    uint64_t v61 = v32;
    uint64_t v33 = swift_getWitnessTable();
    unint64_t v34 = sub_21909D5A4();
    uint64_t v58 = v33;
    unint64_t v59 = v34;
    uint64_t v35 = swift_getWitnessTable();
    uint64_t v36 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
    uint64_t v56 = v35;
    uint64_t v57 = v36;
    uint64_t v37 = swift_getWitnessTable();
    sub_219158D38();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v18);
    uint64_t v54 = v37;
    uint64_t v55 = MEMORY[0x263F18860];
    swift_getWitnessTable();
    sub_218FFDE04((uint64_t)v23, v21, (uint64_t)v26);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v41 + 8);
    v38(v23, v21);
    sub_218FFDE04((uint64_t)v26, v21, v42);
    return ((uint64_t (*)(char *, uint64_t))v38)(v26, v21);
  }
  __break(1u);
  return result;
}

uint64_t sub_2190C51FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v122 = a3;
  uint64_t v102 = a2;
  uint64_t v123 = a1;
  uint64_t v118 = a6;
  *(void *)&long long v134 = a4;
  *((void *)&v134 + 1) = sub_2191587D8();
  uint64_t v8 = MEMORY[0x263F1A480];
  *(void *)&long long v135 = a5;
  *((void *)&v135 + 1) = MEMORY[0x263F1A480];
  OpaqueTypeMetadata2 = (unsigned char *)swift_getOpaqueTypeMetadata2();
  uint64_t v111 = *((void *)OpaqueTypeMetadata2 - 1);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v109 = &v93[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v110 = &v93[-v11];
  uint64_t v106 = sub_2191587B8();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v104 = &v93[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v114 = &v93[-v14];
  uint64_t v15 = swift_checkMetadataState();
  uint64_t v115 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v116 = &v93[-v16];
  *(void *)&long long v134 = a4;
  *((void *)&v134 + 1) = MEMORY[0x263F19FD8];
  uint64_t v17 = MEMORY[0x263F19FD8];
  uint64_t v18 = MEMORY[0x263F19FD0];
  *(void *)&long long v135 = a5;
  *((void *)&v135 + 1) = MEMORY[0x263F19FD0];
  uint64_t v19 = swift_getOpaqueTypeMetadata2();
  uint64_t v113 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v99 = &v93[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v98 = &v93[-v22];
  MEMORY[0x270FA5388](v23);
  uint64_t v100 = &v93[-v24];
  uint64_t v120 = a4;
  *(void *)&long long v134 = a4;
  *((void *)&v134 + 1) = v17;
  uint64_t v121 = a5;
  *(void *)&long long v135 = a5;
  *((void *)&v135 + 1) = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v134 = v19;
  *((void *)&v134 + 1) = v15;
  uint64_t v119 = v15;
  uint64_t v117 = OpaqueTypeConformance2;
  *(void *)&long long v135 = OpaqueTypeConformance2;
  *((void *)&v135 + 1) = v8;
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v103 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v101 = &v93[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = &v93[-v29];
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = &v93[-v32];
  uint64_t v107 = v19;
  uint64_t v34 = sub_2191584D8();
  uint64_t v108 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = &v93[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = &v93[-v38];
  uint64_t v40 = *(void *)v122;
  int v41 = v122[8];
  uint64_t v42 = *((void *)v122 + 2);
  int v43 = v122[24];
  sub_21902493C(v123, (uint64_t)&v127);
  if (swift_dynamicCast())
  {
    int v94 = v43;
    uint64_t v95 = v42;
    int v96 = v41;
    uint64_t v97 = v40;
    uint64_t v109 = v30;
    uint64_t v110 = v33;
    uint64_t v111 = v26;
    OpaqueTypeMetadata2 = v36;
    uint64_t v122 = v39;
    uint64_t v44 = v117;
    uint64_t v123 = v34;
    uint64_t v45 = v119;
    long long v134 = v131;
    long long v135 = v132;
    unint64_t v136 = v133;
    sub_2190C6B98((uint64_t)&v131);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C05D58);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_2190C6A74(v102, &v127);
      sub_2190C6B98((uint64_t)&v131);
      int v46 = swift_dynamicCast();
      uint64_t v47 = v107;
      uint64_t v48 = v100;
      uint64_t v49 = v109;
      if (v46)
      {
        uint64_t v50 = v124;
        char v51 = BYTE1(v126);
        *((void *)&v125 + 1) = &type metadata for _CenterAlignedShelfGridScrollTargetBehavior;
        unint64_t v126 = sub_2190C9AF4();
        uint64_t v52 = swift_allocObject();
        *(void *)&long long v124 = v52;
        uint64_t v53 = v97;
        *(void *)(v52 + 16) = v50;
        *(void *)(v52 + 24) = v53;
        *(unsigned char *)(v52 + 32) = v96;
        *(void *)(v52 + 40) = v95;
        *(unsigned char *)(v52 + 48) = v94;
        *(unsigned char *)(v52 + 49) = v51;
      }
      else
      {
        sub_2190C6EDC((uint64_t)&v127, (uint64_t)&v124);
      }
      uint64_t v76 = v113;
      uint64_t v77 = v116;
      long long v131 = v124;
      long long v132 = v125;
      unint64_t v133 = v126;
      sub_2190C6F38((uint64_t)&v127);
      sub_219158C48();
      sub_2190C6F38((uint64_t)&v131);
      char v78 = v114;
      sub_219158798();
      uint64_t v79 = v105;
      uint64_t v80 = v106;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v105 + 16))(v104, v78, v106);
      sub_2191587C8();
      (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v78, v80);
      uint64_t v81 = v117;
      long long v82 = v77;
      uint64_t v71 = MEMORY[0x263F1A480];
      sub_219158C48();
      (*(void (**)(unsigned char *, uint64_t))(v115 + 8))(v82, v45);
      (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v48, v47);
      *(void *)&long long v131 = v47;
      *((void *)&v131 + 1) = v45;
      *(void *)&long long v132 = v81;
      *((void *)&v132 + 1) = v71;
      swift_getOpaqueTypeConformance2();
      uint64_t v83 = (uint64_t)v49;
      uint64_t v84 = v110;
      uint64_t v85 = v111;
      sub_218FFDE04(v83, v111, (uint64_t)v110);
      uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
      v86(v83, v85);
      uint64_t v87 = v101;
      sub_218FFDE04((uint64_t)v84, v85, (uint64_t)v101);
      uint64_t v72 = (uint64_t)v122;
      uint64_t v88 = v117;
      sub_219050FE4((uint64_t)v87, v85);
      v86((uint64_t)v87, v85);
      uint64_t v89 = v84;
      uint64_t v44 = v88;
      v86((uint64_t)v89, v85);
      uint64_t v73 = v123;
      uint64_t v74 = v108;
      uint64_t v75 = (uint64_t)OpaqueTypeMetadata2;
      uint64_t v67 = v118;
    }
    else
    {
      uint64_t v68 = (uint64_t)v99;
      sub_219158C48();
      uint64_t v69 = v98;
      uint64_t v47 = v107;
      sub_218FFDE04(v68, v107, (uint64_t)v98);
      char v70 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
      v70(v68, v47);
      sub_218FFDE04((uint64_t)v69, v47, v68);
      *(void *)&long long v131 = v47;
      *((void *)&v131 + 1) = v45;
      *(void *)&long long v132 = v44;
      uint64_t v71 = MEMORY[0x263F1A480];
      *((void *)&v132 + 1) = MEMORY[0x263F1A480];
      swift_getOpaqueTypeConformance2();
      uint64_t v72 = (uint64_t)v122;
      sub_218FFCBB0(v68, v111, v47);
      v70(v68, v47);
      v70((uint64_t)v69, v47);
      uint64_t v67 = v118;
      uint64_t v73 = v123;
      uint64_t v74 = v108;
      uint64_t v75 = (uint64_t)OpaqueTypeMetadata2;
    }
    *(void *)&long long v131 = v47;
    *((void *)&v131 + 1) = v45;
    *(void *)&long long v132 = v44;
    *((void *)&v132 + 1) = v71;
    uint64_t v129 = swift_getOpaqueTypeConformance2();
    uint64_t v130 = v44;
    swift_getWitnessTable();
    uint64_t v90 = v73;
    sub_218FFDE04(v72, v73, v75);
    uint64_t v91 = sub_21909C56C(v75);
    uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v92(v75, v90);
    uint64_t v127 = v91;
    char v128 = 0;
    sub_2191584C8();
    uint64_t v64 = v131;
    char v65 = BYTE8(v131);
    v92(v72, v90);
    uint64_t result = sub_2190C6F38((uint64_t)&v134);
  }
  else
  {
    unint64_t v133 = 0;
    long long v131 = 0u;
    long long v132 = 0u;
    sub_218FFE158((uint64_t)&v131, &qword_267C05D60);
    sub_2191587A8();
    uint64_t v54 = v116;
    sub_2191587C8();
    uint64_t v55 = (uint64_t)v109;
    uint64_t v56 = v120;
    uint64_t v57 = v119;
    uint64_t v58 = v121;
    uint64_t v59 = MEMORY[0x263F1A480];
    sub_219158C48();
    (*(void (**)(unsigned char *, uint64_t))(v115 + 8))(v54, v57);
    *(void *)&long long v134 = v56;
    *((void *)&v134 + 1) = v57;
    *(void *)&long long v135 = v58;
    *((void *)&v135 + 1) = v59;
    swift_getOpaqueTypeConformance2();
    uint64_t v60 = v110;
    uint64_t v61 = (uint64_t)OpaqueTypeMetadata2;
    sub_218FFDE04(v55, (uint64_t)OpaqueTypeMetadata2, (uint64_t)v110);
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v62(v55, v61);
    sub_218FFDE04((uint64_t)v60, v61, v55);
    uint64_t v63 = sub_21909C56C(v55);
    v62(v55, v61);
    *(void *)&long long v131 = v63;
    BYTE8(v131) = 1;
    sub_2191584C8();
    uint64_t v64 = v134;
    char v65 = BYTE8(v134);
    uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v62)(v60, v61);
    uint64_t v67 = v118;
  }
  *(void *)uint64_t v67 = v64;
  *(unsigned char *)(v67 + 8) = v65;
  return result;
}

__n128 sub_2190C5F40@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_21915B228();
    uint64_t v23 = (void *)sub_2191587F8();
    sub_219157808();
  }
  sub_219158098();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05D20) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

double sub_2190C612C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2190C61E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_267C05E20, &qword_267C05E28).n128_u64[0];
  return result;
}

double sub_2190C6188@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_2190C61E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_267C05E30, &qword_267C05E38).n128_u64[0];
  return result;
}

__n128 sub_2190C61E4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_21915B228();
    long long v28 = (void *)sub_2191587F8();
    sub_219157808();

    uint64_t v19 = a17;
  }
  sub_219158098();
  sub_2190090C4(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *long long v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_2190C63B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v49 = a6;
  uint64_t v47 = a2;
  uint64_t v51 = a1;
  uint64_t v52 = a8;
  uint64_t v50 = a13;
  uint64_t v41 = a12;
  uint64_t v48 = a10;
  uint64_t v45 = a9;
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  swift_getWitnessTable();
  sub_2191590F8();
  sub_2191584D8();
  uint64_t v17 = sub_219158ED8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = a12;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v60 = v17;
  v61[0] = &type metadata for ComponentModelViewID;
  v61[1] = swift_getWitnessTable();
  v61[2] = sub_2190C28BC();
  uint64_t v40 = sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  uint64_t v42 = sub_219157F48();
  uint64_t v43 = sub_219157F48();
  sub_219158788();
  uint64_t v18 = sub_219157F48();
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v44 = (uint64_t)&v40 - v22;
  sub_219030940(v47, (uint64_t)v61);
  uint64_t v23 = *(void *)(sub_219159618() + 16);
  swift_bridgeObjectRelease();
  uint64_t v24 = a3;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a5;
  LOBYTE(a5) = v49;
  sub_2190C7E88(v25, v27, v29, v49);
  v59[0] = a7;
  v59[1] = v45;
  v59[2] = v48;
  v59[3] = a11;
  v59[4] = v41;
  v59[5] = v50;
  __n128 v30 = (void *)type metadata accessor for ShelfGrid();
  sub_2190BFE1C((uint64_t)v30, v59);
  v61[5] = v51;
  v61[6] = v24;
  uint64_t v60 = v23;
  v61[7] = v26;
  v61[8] = v28;
  char v62 = a5;
  char v63 = v59[0];
  sub_2190C0344(&v60, v30, (uint64_t)v20);
  sub_2190C9E54((uint64_t)&v60);
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = sub_219082794((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v57 = v31;
  uint64_t v58 = v32;
  uint64_t v33 = swift_getWitnessTable();
  unint64_t v34 = sub_21909D5A4();
  uint64_t v55 = v33;
  unint64_t v56 = v34;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = sub_2190C2910((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  uint64_t v53 = v35;
  uint64_t v54 = v36;
  swift_getWitnessTable();
  uint64_t v37 = v44;
  sub_218FFDE04((uint64_t)v20, v18, v44);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v46 + 8);
  v38(v20, v18);
  sub_218FFDE04(v37, v18, v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v37, v18);
}

uint64_t sub_2190C6888@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v2 = sub_2191587B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_2191587D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219158798();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_2191587C8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  a1[3] = (uint64_t *)MEMORY[0x263F19FD8];
  uint64_t v13 = (uint64_t *)swift_allocObject();
  *a1 = v13;
  uint64_t v14 = MEMORY[0x263F1A480];
  v13[5] = v9;
  v13[6] = v14;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13 + 2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v10 + 32))(boxed_opaque_existential_1Tm, v12, v9);
}

uint64_t sub_2190C6A74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2190C6B98((uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05D58);
  if (!swift_dynamicCast()) {
    return sub_2190C6EDC(v2, (uint64_t)a2);
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = (double *)(a1 + 32);
    double v7 = *(double *)(a1 + 32);
    uint64_t v8 = v5 - 1;
    do
    {
      double v9 = *v6++;
      double v10 = v9;
      BOOL v12 = v8-- != 0;
      BOOL v13 = v10 == v7;
    }
    while (v10 == v7 && v12);
  }
  else
  {
    BOOL v13 = 1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a2[3] = (uint64_t)&type metadata for _CenterAlignedShelfGridScrollTargetBehavior;
  a2[4] = sub_2190C9AF4();
  uint64_t result = swift_allocObject();
  *a2 = result;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v15;
  *(unsigned char *)(result + 32) = v16;
  *(void *)(result + 40) = v17;
  *(unsigned char *)(result + 48) = v18;
  *(unsigned char *)(result + 49) = v13;
  return result;
}

uint64_t sub_2190C6B98@<X0>(uint64_t a1@<X8>)
{
  sub_219030940(v1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05D58);
  if (swift_dynamicCast())
  {
    v8[0] = v4;
    v8[1] = v5;
    uint64_t v9 = v6;
    sub_2190C6B98();
    return sub_2190C6F38((uint64_t)v8);
  }
  else
  {
    uint64_t v6 = 0;
    long long v4 = 0u;
    long long v5 = 0u;
    sub_218FFE158((uint64_t)&v4, &qword_267C05D60);
    return sub_219030940(v1, a1);
  }
}

uint64_t ShelfGrid.horizontalScrollTargetBehavior(_:)(void *a1)
{
  sub_219030940((uint64_t)a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05D58);
  uint64_t v2 = MEMORY[0x263F19FD8];
  if (swift_dynamicCast())
  {
    long long v13 = v9;
    long long v14 = v10;
    uint64_t v15 = v11;
    swift_getKeyPath();
    v12[3] = v2;
    v12[0] = swift_allocObject();
    sub_2190C6EDC((uint64_t)&v13, v12[0] + 16);
    swift_getWitnessTable();
    sub_219158AA8();
    swift_release();
    sub_2190C6F38((uint64_t)&v13);
    uint64_t v3 = (long long *)v12;
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    sub_218FFE158((uint64_t)&v9, &qword_267C05D60);
    swift_getKeyPath();
    long long v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    double v5 = MEMORY[0x270FA5388](v4);
    (*(void (**)(char *, double))(v7 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    *((void *)&v14 + 1) = v2;
    *(void *)&long long v13 = swift_allocObject();
    sub_219158628();
    swift_getWitnessTable();
    sub_219158AA8();
    swift_release();
    uint64_t v3 = &v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_2190C6EA4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2190C6EDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2190C6F38(uint64_t a1)
{
  return a1;
}

void _CenterAlignedShelfGridScrollTargetBehavior.updateTarget(_:context:)(uint64_t a1)
{
  uint64_t v3 = sub_21915AB08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_219157BD8();
  uint64_t v97 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  BOOL v12 = (char *)&v89 - v11;
  uint64_t v13 = sub_219157C48();
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)v1;
  unint64_t v19 = *(void *)(*(void *)v1 + 16);
  if (v19 >= 2)
  {
    uint64_t v93 = v15;
    uint64_t v94 = v18;
    uint64_t v95 = v14;
    uint64_t v96 = a1;
    unint64_t v90 = v19;
    double v20 = v1[3];
    int v21 = *((unsigned __int8 *)v1 + 33);
    int v91 = *((unsigned __int8 *)v1 + 32);
    int v92 = v21;
    sub_219158768();
    unsigned __int8 v22 = sub_219158808();
    sub_219158818();
    if (sub_219158818() != v22)
    {
      sub_21915AAA8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
      sub_2191595F8();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
      sub_219159528();
      sub_21915A6D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    }
    sub_219158748();
    sub_219157C38();
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v93 + 8);
    v31(v17, v95);
    v99.origin.x = v24;
    v99.origin.y = v26;
    v99.size.width = v28;
    v99.size.height = v30;
    double MinX = CGRectGetMinX(v99);
    sub_219157C38();
    double v33 = CGRectGetMinX(v100);
    uint64_t v34 = v94;
    if (MinX != v33)
    {
      if (MinX < v33) {
        uint64_t v35 = 1;
      }
      else {
        uint64_t v35 = -1;
      }
      if (v91)
      {
        sub_219157BC8();
        sub_219157BC8();
        sub_219157BB8();
        double v20 = v36;
        uint64_t v37 = *(void (**)(char *, uint64_t))(v97 + 8);
        v37(v9, v7);
        v37(v12, v7);
        uint64_t v34 = v94;
      }
      if (v92 && *(void *)(v34 + 16))
      {
        double v38 = *(double *)(v34 + 32);
        sub_219158748();
        sub_219157C38();
        double v39 = CGRectGetMinX(v101);
        sub_219158758();
        double v41 = v39 + v40 * 0.5;
        v31(v17, v95);
        double v42 = trunc(v41 / (v20 + v38));
        if ((~*(void *)&v42 & 0x7FF0000000000000) != 0)
        {
          if (v42 > -9.22337204e18)
          {
            if (v42 < 9.22337204e18)
            {
              uint64_t v43 = v95;
              (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v17, v96, v95);
              sub_219157C38();
              double v44 = CGRectGetMinX(v102);
              sub_219158758();
              double v46 = v44 + v45 * 0.5;
              v31(v17, v43);
              double v47 = trunc(v46 / (v20 + v38));
              if ((~*(void *)&v47 & 0x7FF0000000000000) != 0)
              {
                if (v47 > -9.22337204e18)
                {
                  if (v47 < 9.22337204e18)
                  {
                    uint64_t v48 = (uint64_t)v42;
                    uint64_t v49 = (uint64_t)v47;
                    if (*(uint64_t *)&v42 != *(uint64_t *)&v47 || (uint64_t v49 = v48 + v35, !__OFADD__(v48, v35)))
                    {
                      if (v49 >= (uint64_t)(v90 - 1)) {
                        uint64_t v49 = v90 - 1;
                      }
                      double v50 = v38 * (double)(v49 & ~(v49 >> 63)) + v20 * (double)(v49 & ~(v49 >> 63));
                      double v51 = 0.5;
                      double v52 = v38 * 0.5 + v50;
                      goto LABEL_68;
                    }
LABEL_79:
                    __break(1u);
                    return;
                  }
LABEL_78:
                  __break(1u);
                  goto LABEL_79;
                }
LABEL_77:
                __break(1u);
                goto LABEL_78;
              }
LABEL_76:
              __break(1u);
              goto LABEL_77;
            }
LABEL_75:
            __break(1u);
            goto LABEL_76;
          }
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      sub_219158748();
      sub_219157C38();
      double v53 = CGRectGetMinX(v103);
      sub_219158758();
      double v55 = v54;
      uint64_t v56 = v95;
      v31(v17, v95);
      (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v17, v96, v56);
      sub_219157C38();
      double v57 = CGRectGetMinX(v104);
      sub_219158758();
      double v59 = v58;
      v31(v17, v56);
      unint64_t v60 = *(void *)(v94 + 16);
      if (v60)
      {
        uint64_t v61 = 0;
        double v62 = v53 + v55 * 0.5;
        double v63 = v57 + v59 * 0.5;
        unint64_t v64 = v90;
        uint64_t v65 = v90 - 1;
        uint64_t v66 = -1;
        double v67 = 0.0;
        uint64_t v68 = -1;
        do
        {
          double v69 = *(double *)(v94 + 32 + 8 * v61);
          if ((v68 & 0x8000000000000000) == 0 && (v66 & 0x8000000000000000) == 0) {
            break;
          }
          if (v65 == v61)
          {
            if (v66 < 0) {
              uint64_t v66 = v90 - 1;
            }
            if (v68 < 0) {
              uint64_t v68 = v90 - 1;
            }
            break;
          }
          double v70 = v20 + v67 + v69;
          if (v62 < v70 && v67 < v62 && v68 < 0) {
            uint64_t v68 = v61;
          }
          if (v63 < v70 && v67 < v63 && v66 < 0) {
            uint64_t v66 = v61;
          }
          double v67 = v67 + v20 + v69;
          ++v61;
        }
        while (v60 != v61);
        if (v68 != v66) {
          goto LABEL_54;
        }
      }
      else
      {
        uint64_t v66 = -1;
        unint64_t v64 = v90;
      }
      BOOL v75 = __OFADD__(v66, v35);
      v66 += v35;
      if (v75)
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      uint64_t v65 = v64 - 1;
LABEL_54:
      if (v66 < v65) {
        uint64_t v65 = v66;
      }
      unint64_t v76 = v65 & ~(v65 >> 63);
      if (v60 < v76)
      {
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (v65 < 1)
      {
        double v78 = 0.0;
        goto LABEL_66;
      }
      if (v76 >= 2)
      {
        uint64_t v77 = v76 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v79 = (double *)(v94 + 40);
        double v78 = 0.0;
        uint64_t v80 = v76 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v78 = v78 + *(v79 - 1) + *v79;
          v79 += 2;
          v80 -= 2;
        }
        while (v80);
        if (v76 == v77)
        {
LABEL_66:
          if (v76 < v60)
          {
            double v84 = v20 * (double)(uint64_t)v76 + v78;
            double v51 = 0.5;
            double v52 = v84 + *(double *)(v94 + 32 + 8 * v76) * 0.5;
LABEL_68:
            sub_219158758();
            double v86 = v52 - v85 * v51;
            uint64_t v87 = (void (*)(char *, void))sub_219157C28();
            *uint64_t v88 = v86;
            v87(v98, 0);
            return;
          }
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v77 = 0;
        double v78 = 0.0;
      }
      unint64_t v81 = v76 - v77;
      long long v82 = (double *)(v94 + 8 * v77 + 32);
      do
      {
        double v83 = *v82++;
        double v78 = v78 + v83;
        --v81;
      }
      while (v81);
      goto LABEL_66;
    }
  }
}

void static ScrollTargetBehavior<>.centerAligned.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 256;
}

double ShelfGrid.init(_:layout:padding:spacing:itemContent:itemDivider:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  unint64_t v12 = a2[1].n128_u64[0];
  unsigned __int8 v13 = a2[1].n128_u8[8];
  uint64_t v14 = *(void *)a3;
  char v15 = *(unsigned char *)(a3 + 8);
  uint64_t v16 = *(void *)(a3 + 16);
  char v17 = *(unsigned char *)(a3 + 24);
  uint64_t v18 = *(void *)a4;
  char v19 = *(unsigned char *)(a4 + 8);
  uint64_t v20 = *(void *)(a4 + 16);
  char v21 = *(unsigned char *)(a4 + 24);
  __n128 v31 = *a2;
  unint64_t v32 = v12;
  unsigned __int8 v33 = v13;
  uint64_t v27 = v14;
  char v28 = v15;
  uint64_t v29 = v16;
  char v30 = v17;
  uint64_t v23 = v18;
  char v24 = v19;
  uint64_t v25 = v20;
  char v26 = v21;
  *(void *)&double result = ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)(a1, &v31, &v27, &v23, 0, 1, a5, a6, a9, a7, a8, a10).n128_u64[0];
  return result;
}

double ShelfGrid.init<>(_:layout:padding:spacing:itemContent:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_2191591B8();
  sub_2190C2910((unint64_t *)&qword_267C05560, MEMORY[0x263F1B7B8]);
  *(void *)&double result = ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)(a1, a2, a3, a4, 0, 1, a5, a6, a8, (uint64_t)sub_2190C793C, 0, a7).n128_u64[0];
  return result;
}

double ShelfGrid.init(_:layout:spacing:itemContent:itemDivider:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  unint64_t v9 = a2[1].n128_u64[0];
  unsigned __int8 v10 = a2[1].n128_u8[8];
  uint64_t v11 = *(void *)a3;
  char v12 = *(unsigned char *)(a3 + 8);
  uint64_t v13 = *(void *)(a3 + 16);
  char v14 = *(unsigned char *)(a3 + 24);
  __n128 v24 = *a2;
  unint64_t v25 = v9;
  unsigned __int8 v26 = v10;
  uint64_t v20 = 0;
  char v21 = 1;
  uint64_t v22 = 0;
  char v23 = 1;
  uint64_t v16 = v11;
  char v17 = v12;
  uint64_t v18 = v13;
  char v19 = v14;
  *(void *)&double result = ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)(a1, &v24, &v20, &v16, 0, 1, a4, a5, a9, a6, a7, a8).n128_u64[0];
  return result;
}

double ShelfGrid.init<>(_:layout:spacing:itemContent:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = 0;
  char v9 = 1;
  uint64_t v10 = 0;
  char v11 = 1;
  return ShelfGrid.init<>(_:layout:padding:spacing:shelfPosition:itemContent:)(a1, a2, &v8, a3, 0, 1, a4, a5, a7, a6);
}

uint64_t sub_2190C7A48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190C7A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 96);
}

uint64_t sub_2190C7A9C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2190C7B84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 33) & 0xFFFFFFFFFFFFFFF8)
     + 33 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
LABEL_10:
    swift_retain();
    return v4;
  }
  (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
  uint64_t v10 = (char *)v4 + v6;
  char v11 = (char *)a2 + v6;
  unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v16 = *(void *)(v13 + 16);
  unsigned __int8 v17 = *(unsigned char *)(v13 + 24);
  sub_2190C7E88(*(void *)v13, v15, v16, v17);
  *(void *)unint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v16;
  *(unsigned char *)(v12 + 24) = v17;
  uint64_t v18 = (_OWORD *)((unint64_t)(v10 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v19 = (long long *)((unint64_t)(v11 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v20 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(long long *)((char *)v19 + 9);
  *uint64_t v18 = v20;
  char v21 = (_OWORD *)((unint64_t)(v10 + 71) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (long long *)((unint64_t)(v11 + 71) & 0xFFFFFFFFFFFFFFF8);
  long long v23 = *v22;
  *(_OWORD *)((char *)v21 + 9) = *(long long *)((char *)v22 + 9);
  *char v21 = v23;
  unint64_t v24 = (unint64_t)(v10 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (unint64_t)(v11 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)unint64_t v24 = v26;
  uint64_t v27 = (void *)((unint64_t)(v10 + 119) & 0xFFFFFFFFFFFFFFF8);
  char v28 = (void *)((unint64_t)(v11 + 119) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  char v30 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  __n128 v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = v31[1];
  *char v30 = *v31;
  v30[1] = v32;
  unint64_t v33 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v16) = *(unsigned char *)(v34 + 8);
  swift_retain();
  swift_retain();
  sub_218FFE128(v35, v16);
  *(void *)unint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v16;
  unint64_t v36 = ((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = ((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = *(void *)v37;
  uint64_t v39 = *(void *)(v37 + 8);
  LOBYTE(v16) = *(unsigned char *)(v37 + 16);
  sub_2190C7EC8(*(void *)v37, v39, v16);
  *(void *)unint64_t v36 = v38;
  *(void *)(v36 + 8) = v39;
  *(unsigned char *)(v36 + 16) = v16;
  unint64_t v40 = ((unint64_t)v30 + 63) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = ((unint64_t)v31 + 63) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = *(void *)v41;
  LOBYTE(v39) = *(unsigned char *)(v41 + 9);
  LOBYTE(v16) = *(unsigned char *)(v41 + 8);
  sub_2190C7EC8(*(void *)v41, v16, v39);
  *(void *)unint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v16;
  *(unsigned char *)(v40 + 9) = v39;
  unint64_t v43 = (v40 + 17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v41 + 17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = *(void *)v44;
  char v46 = *(unsigned char *)(v44 + 8);
  sub_218FFE128(*(void *)v44, v46);
  *(void *)unint64_t v43 = v45;
  *(unsigned char *)(v43 + 8) = v46;
  unint64_t v47 = (v40 + 33) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (v41 + 33) & 0xFFFFFFFFFFFFFFF8;
  if ((*(unsigned char *)(v48 + 32) & 1) == 0)
  {
    *(void *)unint64_t v47 = *(void *)v48;
    *(unsigned char *)(v47 + 32) = 0;
    goto LABEL_10;
  }
  uint64_t v49 = *(void *)(v48 + 24);
  *(void *)(v47 + 24) = v49;
  (**(void (***)(unint64_t))(v49 - 8))((v40 + 33) & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v47 + 32) = 1;
  return v4;
}

uint64_t sub_2190C7E88(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6)
  {
    if (a4 >> 6 != 2) {
      return result;
    }
    a4 &= 0x3Fu;
  }
  return sub_2190C7EB0(a2, a3, a4);
}

uint64_t sub_2190C7EB0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2190C7EC8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2190C7ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  sub_2190C7FE8(*(void *)((v4 + 7) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(unsigned char *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  swift_release();
  unint64_t v5 = (((v4 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_218FFDDBC(*(void *)((v5 + 23) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_2190C8028(*(void *)((v5 + 39) & 0xFFFFFFFFFFFFFFF8), *(void *)(((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v6 = (v5 + 63) & 0xFFFFFFFFFFFFFFF8;
  sub_2190C8028(*(void *)v6, *(unsigned __int8 *)(v6 + 8), *(unsigned char *)(v6 + 9));
  sub_218FFDDBC(*(void *)((v6 + 17) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v6 + 17) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v7 = (v6 + 33) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v7 + 32)) {
    return __swift_destroy_boxed_opaque_existential_1(v7);
  }
  return swift_release();
}

uint64_t sub_2190C7FE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6)
  {
    if (a4 >> 6 != 2) {
      return result;
    }
    a4 &= 0x3Fu;
  }
  return sub_2190C8010(a2, a3, a4);
}

uint64_t sub_2190C8010(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2190C8028(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2190C8034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  unsigned __int8 v14 = *(unsigned char *)(v10 + 24);
  sub_2190C7E88(*(void *)v10, v12, v13, v14);
  *(void *)unint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  *(void *)(v9 + 16) = v13;
  *(unsigned char *)(v9 + 24) = v14;
  uint64_t v15 = (_OWORD *)((v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (long long *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = *v16;
  *(_OWORD *)((char *)v15 + 9) = *(long long *)((char *)v16 + 9);
  *uint64_t v15 = v17;
  uint64_t v18 = (_OWORD *)((v7 + 71) & 0xFFFFFFFFFFFFFFF8);
  char v19 = (long long *)((v8 + 71) & 0xFFFFFFFFFFFFFFF8);
  long long v20 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(long long *)((char *)v19 + 9);
  *uint64_t v18 = v20;
  unint64_t v21 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v21 = v23;
  unint64_t v24 = (void *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = (void *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  *unint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  char v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  unint64_t v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = *(void *)v31;
  LOBYTE(v13) = *(unsigned char *)(v31 + 8);
  swift_retain();
  swift_retain();
  sub_218FFE128(v32, v13);
  *(void *)unint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v13;
  unint64_t v33 = ((unint64_t)v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  uint64_t v36 = *(void *)(v34 + 8);
  LOBYTE(v13) = *(unsigned char *)(v34 + 16);
  sub_2190C7EC8(*(void *)v34, v36, v13);
  *(void *)unint64_t v33 = v35;
  *(void *)(v33 + 8) = v36;
  *(unsigned char *)(v33 + 16) = v13;
  unint64_t v37 = ((unint64_t)v27 + 63) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = ((unint64_t)v28 + 63) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = *(void *)v38;
  LOBYTE(v36) = *(unsigned char *)(v38 + 9);
  LOBYTE(v13) = *(unsigned char *)(v38 + 8);
  sub_2190C7EC8(*(void *)v38, v13, v36);
  *(void *)unint64_t v37 = v39;
  *(unsigned char *)(v37 + 8) = v13;
  *(unsigned char *)(v37 + 9) = v36;
  unint64_t v40 = (v37 + 17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v38 + 17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = *(void *)v41;
  LOBYTE(v36) = *(unsigned char *)(v41 + 8);
  sub_218FFE128(*(void *)v41, v36);
  *(void *)unint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v36;
  unint64_t v43 = (v37 + 33) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v38 + 33) & 0xFFFFFFFFFFFFFFF8;
  char v45 = *(unsigned char *)(v44 + 32);
  if (v45)
  {
    uint64_t v46 = *(void *)(v44 + 24);
    *(void *)(v43 + 24) = v46;
    (**(void (***)(unint64_t))(v46 - 8))((v37 + 33) & 0xFFFFFFFFFFFFFFF8);
  }
  else
  {
    *(void *)unint64_t v43 = *(void *)v44;
    swift_retain();
  }
  *(unsigned char *)(v43 + 32) = v45;
  return a1;
}

uint64_t sub_2190C82A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  unsigned __int8 v14 = *(unsigned char *)(v10 + 24);
  sub_2190C7E88(*(void *)v10, v12, v13, v14);
  uint64_t v15 = *(void *)v9;
  uint64_t v16 = *(void *)(v9 + 8);
  uint64_t v17 = *(void *)(v9 + 16);
  *(void *)unint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  *(void *)(v9 + 16) = v13;
  unsigned __int8 v18 = *(unsigned char *)(v9 + 24);
  *(unsigned char *)(v9 + 24) = v14;
  sub_2190C7FE8(v15, v16, v17, v18);
  unint64_t v19 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v19 = v21;
  uint64_t v22 = *(void *)(v20 + 16);
  *(unsigned char *)(v19 + 24) = *(unsigned char *)(v20 + 24);
  *(void *)(v19 + 16) = v22;
  unint64_t v23 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = v25;
  uint64_t v26 = *(void *)(v24 + 16);
  *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
  *(void *)(v23 + 16) = v26;
  unint64_t v27 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(void *)unint64_t v27 = v29;
  unint64_t v30 = (void *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = (void *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = v31[1];
  *unint64_t v30 = *v31;
  v30[1] = v32;
  swift_retain();
  swift_release();
  unint64_t v33 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = v34[1];
  *unint64_t v33 = *v34;
  v33[1] = v35;
  swift_retain();
  swift_release();
  unint64_t v36 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = ((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = *(void *)v37;
  LOBYTE(v30) = *(unsigned char *)(v37 + 8);
  sub_218FFE128(*(void *)v37, (char)v30);
  uint64_t v39 = *(void *)v36;
  char v40 = *(unsigned char *)(v36 + 8);
  *(void *)unint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = (_BYTE)v30;
  sub_218FFDDBC(v39, v40);
  unint64_t v41 = ((unint64_t)v33 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = ((unint64_t)v34 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = *(void *)v42;
  uint64_t v44 = *(void *)(v42 + 8);
  LOBYTE(v36) = *(unsigned char *)(v42 + 16);
  sub_2190C7EC8(*(void *)v42, v44, v36);
  uint64_t v45 = *(void *)v41;
  uint64_t v46 = *(void *)(v41 + 8);
  char v47 = *(unsigned char *)(v41 + 16);
  *(void *)unint64_t v41 = v43;
  *(void *)(v41 + 8) = v44;
  *(unsigned char *)(v41 + 16) = v36;
  sub_2190C8028(v45, v46, v47);
  unint64_t v48 = ((unint64_t)v33 + 63) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = ((unint64_t)v34 + 63) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = *(void *)v49;
  LOBYTE(v44) = *(unsigned char *)(v49 + 9);
  LOBYTE(v36) = *(unsigned char *)(v49 + 8);
  sub_2190C7EC8(*(void *)v49, v36, v44);
  uint64_t v51 = *(void *)v48;
  char v52 = *(unsigned char *)(v48 + 9);
  *(void *)unint64_t v48 = v50;
  uint64_t v53 = *(unsigned __int8 *)(v48 + 8);
  *(unsigned char *)(v48 + 8) = v36;
  *(unsigned char *)(v48 + 9) = v44;
  sub_2190C8028(v51, v53, v52);
  unint64_t v54 = (v48 + 17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v49 + 17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = *(void *)v55;
  LOBYTE(v44) = *(unsigned char *)(v55 + 8);
  sub_218FFE128(*(void *)v55, v44);
  uint64_t v57 = *(void *)v54;
  char v58 = *(unsigned char *)(v54 + 8);
  *(void *)unint64_t v54 = v56;
  *(unsigned char *)(v54 + 8) = v44;
  sub_218FFDDBC(v57, v58);
  unint64_t v59 = (v48 + 33) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v60 = (v49 + 33) & 0xFFFFFFFFFFFFFFF8;
  if (v59 != v60)
  {
    sub_218FFE158((v48 + 33) & 0xFFFFFFFFFFFFFFF8, qword_267C05D68);
    if (*(unsigned char *)(v60 + 32))
    {
      uint64_t v61 = *(void *)(v60 + 24);
      *(void *)(v59 + 24) = v61;
      (**(void (***)(unint64_t, unint64_t))(v61 - 8))((v48 + 33) & 0xFFFFFFFFFFFFFFF8, (v49 + 33) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v59 + 32) = 1;
    }
    else
    {
      *(void *)unint64_t v59 = *(void *)v60;
      *(unsigned char *)(v59 + 32) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_2190C85B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (long long *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)v10 + 9);
  *unint64_t v9 = v11;
  uint64_t v12 = (_OWORD *)((v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (long long *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v14 = *v13;
  *(_OWORD *)((char *)v12 + 9) = *(long long *)((char *)v13 + 9);
  *uint64_t v12 = v14;
  uint64_t v15 = (_OWORD *)((v7 + 71) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)((v8 + 71) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = *(_OWORD *)((char *)v16 + 9);
  *uint64_t v15 = *v16;
  *(_OWORD *)((char *)v15 + 9) = v17;
  unint64_t v18 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  char v20 = *(unsigned char *)(v19 + 8);
  *(void *)unint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = v20;
  uint64_t v21 = (_OWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (_OWORD *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  unint64_t v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = ((unint64_t)v23 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((unint64_t)v24 + 39) & 0xFFFFFFFFFFFFFFF8;
  long long v30 = *(_OWORD *)v29;
  *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
  *(_OWORD *)unint64_t v28 = v30;
  unint64_t v31 = ((unint64_t)v23 + 63) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = ((unint64_t)v24 + 63) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = *(void *)v32;
  *(_WORD *)(v31 + 8) = *(_WORD *)(v32 + 8);
  *(void *)unint64_t v31 = v33;
  unint64_t v34 = (v31 + 17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v32 + 17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)unint64_t v34 = v36;
  unint64_t v37 = (v31 + 33) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v32 + 33) & 0xFFFFFFFFFFFFFFF8;
  long long v39 = *(_OWORD *)v38;
  long long v40 = *(_OWORD *)(v38 + 16);
  *(unsigned char *)(v37 + 32) = *(unsigned char *)(v38 + 32);
  *(_OWORD *)unint64_t v37 = v39;
  *(_OWORD *)(v37 + 16) = v40;
  return a1;
}

uint64_t sub_2190C8758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v10 + 16);
  char v12 = *(unsigned char *)(v10 + 24);
  uint64_t v13 = *(void *)v9;
  uint64_t v14 = *(void *)(v9 + 8);
  uint64_t v15 = *(void *)(v9 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = v11;
  unsigned __int8 v16 = *(unsigned char *)(v9 + 24);
  *(unsigned char *)(v9 + 24) = v12;
  sub_2190C7FE8(v13, v14, v15, v16);
  unint64_t v17 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)unint64_t v17 = v19;
  uint64_t v20 = *(void *)(v18 + 16);
  *(unsigned char *)(v17 + 24) = *(unsigned char *)(v18 + 24);
  *(void *)(v17 + 16) = v20;
  unint64_t v21 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v21 = v23;
  uint64_t v24 = *(void *)(v22 + 16);
  *(unsigned char *)(v21 + 24) = *(unsigned char *)(v22 + 24);
  *(void *)(v21 + 16) = v24;
  unint64_t v25 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = (_OWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (_OWORD *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v28 = *v29;
  swift_release();
  long long v30 = (_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = (_OWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = (unint64_t)v31 + 63;
  *long long v30 = *v31;
  swift_release();
  unint64_t v33 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = *(unsigned char *)(v34 + 8);
  uint64_t v36 = *(void *)v33;
  char v37 = *(unsigned char *)(v33 + 8);
  *(void *)unint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v34;
  sub_218FFDDBC(v36, v37);
  unint64_t v38 = ((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = ((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8;
  char v40 = *(unsigned char *)(v39 + 16);
  uint64_t v41 = *(void *)v38;
  uint64_t v42 = *(void *)(v38 + 8);
  char v43 = *(unsigned char *)(v38 + 16);
  *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(v38 + 16) = v40;
  sub_2190C8028(v41, v42, v43);
  unint64_t v44 = ((unint64_t)v30 + 63) & 0xFFFFFFFFFFFFFFF8;
  char v45 = *(unsigned char *)((v32 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v46 = *(unsigned char *)((v32 & 0xFFFFFFFFFFFFFFF8) + 9);
  uint64_t v47 = *(void *)v44;
  char v48 = *(unsigned char *)(v44 + 9);
  *(void *)unint64_t v44 = *(void *)(v32 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = *(unsigned __int8 *)(v44 + 8);
  *(unsigned char *)(v44 + 8) = v45;
  *(unsigned char *)(v44 + 9) = v46;
  sub_2190C8028(v47, v49, v48);
  unint64_t v50 = (v44 + 17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = ((v32 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v52 = *(void *)v51;
  LOBYTE(v51) = *(unsigned char *)(v51 + 8);
  uint64_t v53 = *(void *)v50;
  char v54 = *(unsigned char *)(v50 + 8);
  *(void *)unint64_t v50 = v52;
  *(unsigned char *)(v50 + 8) = v51;
  sub_218FFDDBC(v53, v54);
  unint64_t v55 = (v44 + 33) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = ((v32 & 0xFFFFFFFFFFFFFFF8) + 33) & 0xFFFFFFFFFFFFFFF8;
  if (v55 != v56)
  {
    sub_218FFE158(v55, qword_267C05D68);
    char v57 = *(unsigned char *)(v56 + 32);
    long long v58 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)unint64_t v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v58;
    *(unsigned char *)(v55 + 32) = v57;
  }
  return a1;
}

uint64_t sub_2190C89A8(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((v6 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 33) & 0xFFFFFFFFFFFFFFF8)
       + 33;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2190C8B28);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((((((v6 + 119) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 63) & 0xFFFFFFF8) + 33) & 0xFFFFFFF8) == 0xFFFFFFE0) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((unint64_t)&a1[v6 + 119] & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2190C8B3C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((((((((v9 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 33) & 0xFFFFFFFFFFFFFFF8)
      + 33;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v21 = (void *)((unint64_t)&a1[v9 + 119] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v22 = a2 ^ 0x80000000;
                v21[1] = 0;
              }
              else
              {
                uint64_t v22 = a2 - 1;
              }
              *unint64_t v21 = v22;
            }
            else
            {
              uint64_t v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x2190C8D68);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t destroy for _CenterAlignedShelfGridScrollTargetBehavior()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _CenterAlignedShelfGridScrollTargetBehavior()
{
  return &type metadata for _CenterAlignedShelfGridScrollTargetBehavior;
}

uint64_t sub_2190C8F60()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190C93E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190C94A8()
{
  long long v7 = *(_OWORD *)(v0 + 16);
  unint64_t v1 = (int *)(type metadata accessor for ShelfGrid() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = v0 + v2;
  (*(void (**)(unint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2);
  sub_2190C7FE8(*(void *)(v4 + v1[19]), *(void *)(v4 + v1[19] + 8), *(void *)(v4 + v1[19] + 16), *(unsigned char *)(v4 + v1[19] + 24));
  swift_release();
  swift_release();
  sub_218FFDDBC(*(void *)(v4 + v1[25]), *(unsigned char *)(v4 + v1[25] + 8));
  sub_2190C8028(*(void *)(v4 + v1[26]), *(void *)(v4 + v1[26] + 8), *(unsigned char *)(v4 + v1[26] + 16));
  sub_2190C8028(*(void *)(v4 + v1[27]), *(unsigned __int8 *)(v4 + v1[27] + 8), *(unsigned char *)(v4 + v1[27] + 9));
  sub_218FFDDBC(*(void *)(v4 + v1[28]), *(unsigned char *)(v4 + v1[28] + 8));
  uint64_t v5 = v0 + v2 + v1[29];
  if (*(unsigned char *)(v5 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  else {
    swift_release();
  }
  sub_2190C7FE8(*(void *)(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(unsigned char *)(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  return swift_deallocObject();
}

uint64_t sub_2190C9664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  uint64_t v10 = v3[5];
  uint64_t v11 = v3[6];
  uint64_t v12 = v3[7];
  uint64_t v13 = *(void *)(type metadata accessor for ShelfGrid() - 8);
  unint64_t v14 = (*(void *)(v13 + 64)
       + ((*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2190C63B4(a1, a2, *(void *)((char *)v3 + v14), *(void *)((char *)v3 + v14 + 8), *(void *)((char *)v3 + v14 + 16), *((unsigned __int8 *)v3 + v14 + 24), v7, a3, v8, v9, v10, v11, v12);
}

uint64_t sub_2190C9764(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  sub_218FFDDBC(v2, v3);
  return a1;
}

uint64_t sub_2190C97B8()
{
  long long v7 = *(_OWORD *)(v0 + 16);
  unint64_t v1 = (int *)(type metadata accessor for ShelfGrid() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = v0 + v2;
  (*(void (**)(unint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2);
  sub_2190C7FE8(*(void *)(v4 + v1[19]), *(void *)(v4 + v1[19] + 8), *(void *)(v4 + v1[19] + 16), *(unsigned char *)(v4 + v1[19] + 24));
  swift_release();
  swift_release();
  sub_218FFDDBC(*(void *)(v4 + v1[25]), *(unsigned char *)(v4 + v1[25] + 8));
  sub_2190C8028(*(void *)(v4 + v1[26]), *(void *)(v4 + v1[26] + 8), *(unsigned char *)(v4 + v1[26] + 16));
  sub_2190C8028(*(void *)(v4 + v1[27]), *(unsigned __int8 *)(v4 + v1[27] + 8), *(unsigned char *)(v4 + v1[27] + 9));
  sub_218FFDDBC(*(void *)(v4 + v1[28]), *(unsigned char *)(v4 + v1[28] + 8));
  uint64_t v5 = v0 + v2 + v1[29];
  if (*(unsigned char *)(v5 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  else {
    swift_release();
  }
  sub_2190C7FE8(*(void *)(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(unsigned char *)(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190C998C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  unint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = *(void *)(type metadata accessor for ShelfGrid() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2190C38A0((uint64_t)v1 + v10, *(void *)((char *)v1 + v11), *(void *)((char *)v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)((char *)v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)((char *)v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *((unsigned __int8 *)v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 24), *(void *)((char *)v1 + ((v11 + 47) & 0xFFFFFFFFFFFFFFF8)), a1, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_2190C9A98@<X0>(uint64_t a1@<X8>)
{
  return sub_2190C466C(*(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned __int8 *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 16), a1, *(_OWORD *)(v1 + 24), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_2190C9AE0(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_release();
  }
  return result;
}

unint64_t sub_2190C9AF4()
{
  unint64_t result = qword_267C05E08;
  if (!qword_267C05E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05E08);
  }
  return result;
}

uint64_t sub_2190C9B48()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190C9B80()
{
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)(type metadata accessor for ShelfGrid() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = v0 + v2;
  (*(void (**)(unint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2);
  sub_2190C7FE8(*(void *)(v4 + v1[19]), *(void *)(v4 + v1[19] + 8), *(void *)(v4 + v1[19] + 16), *(unsigned char *)(v4 + v1[19] + 24));
  swift_release();
  swift_release();
  sub_218FFDDBC(*(void *)(v4 + v1[25]), *(unsigned char *)(v4 + v1[25] + 8));
  sub_2190C8028(*(void *)(v4 + v1[26]), *(void *)(v4 + v1[26] + 8), *(unsigned char *)(v4 + v1[26] + 16));
  sub_2190C8028(*(void *)(v4 + v1[27]), *(unsigned __int8 *)(v4 + v1[27] + 8), *(unsigned char *)(v4 + v1[27] + 9));
  sub_218FFDDBC(*(void *)(v4 + v1[28]), *(unsigned char *)(v4 + v1[28] + 8));
  uint64_t v5 = v0 + v2 + v1[29];
  if (*(unsigned char *)(v5 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  else {
    swift_release();
  }
  sub_2190C7FE8(*(void *)(v0 + ((v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(unsigned char *)(v0 + ((v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190C9D4C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  uint64_t v10 = v3[5];
  uint64_t v11 = v3[6];
  uint64_t v12 = v3[7];
  uint64_t v13 = *(void *)(type metadata accessor for ShelfGrid() - 8);
  unint64_t v14 = ((*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
      + *(void *)(v13 + 64);
  return sub_2190C4C00(a1, a2, *(void *)((char *)v3 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void *)((char *)v3 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)((char *)v3 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *((unsigned __int8 *)v3 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 24), *(void *)((char *)v3 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8)), a3, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_2190C9E54(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190C9EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2190C0FEC(v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_2190C9EBC(uint64_t a1, void (*a2)(void *, uint64_t *))
{
  if (a1 < 0) {
    goto LABEL_21;
  }
  if (a1)
  {
    uint64_t v5 = sub_21915AEE8();
    *(void *)(v5 + 16) = a1;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5 + 32;
  v8[1] = a1;
  uint64_t v9 = 0;
  v8[0] = v5 + 32;
  a2(v8, &v9);
  if (v2)
  {
    if (v9 > a1)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (!v8[0])
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v6 != v8[0]) {
      goto LABEL_16;
    }
    *(void *)(v5 + 16) = v9;
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v9 > a1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8[0])
  {
    if (v6 != v8[0])
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    *(void *)(v5 + 16) = v9;
    return v5;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_21915B5A8();
  __break(1u);
  return result;
}

uint64_t sub_2190CA000@<X0>(uint64_t a1@<X8>)
{
  return sub_2190C15F4(v1[8], v1[9], v1[3], v1[4], v1[7], a1);
}

void sub_2190CA014(int64x2_t **a1, void *a2)
{
  sub_2190C0108(a1, a2, *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(unsigned char *)(v2 + 88), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

unint64_t sub_2190CA054()
{
  unint64_t result = qword_267C05E18;
  if (!qword_267C05E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05E18);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridScrollTargetBehaviorKey()
{
  return &type metadata for ShelfGridScrollTargetBehaviorKey;
}

void sub_2190CA0BC(uint64_t *a1)
{
  void (*v2)(id *__return_ptr, id *);
  unint64_t v3;
  uint64_t (*v4)(void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  int64_t v27;
  void *v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(void *__return_ptr, id *);
  uint64_t v33;
  void (*v34)(void *__return_ptr, id *);
  uint64_t v35;
  void (*v36)(id *__return_ptr, id *);
  uint64_t (*v37)(void *);
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  id v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t (*v48)(void);
  unint64_t v49;
  void (*v50)(id *__return_ptr, id *);
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  void (*v54)(void *__return_ptr, void);
  uint64_t v55;
  void (*v56)(void *__return_ptr, void);
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  void v61[7];
  uint64_t v62;

  uint64_t v1 = *a1;
  uint64_t v42 = (uint64_t (*)(void))a1[1];
  uint64_t v3 = a1[2];
  uint64_t v2 = (void (*)(id *__return_ptr, id *))a1[3];
  uint64_t v5 = a1[4];
  uint64_t v4 = (uint64_t (*)(void *))a1[5];
  uint64_t v6 = a1[6];
  unint64_t v32 = (void (*)(void *__return_ptr, id *))a1[7];
  unint64_t v33 = a1[8];
  unint64_t v34 = (void (*)(void *__return_ptr, id *))a1[9];
  uint64_t v7 = a1[10];
  double v62 = v1;
  unint64_t v39 = v3;
  uint64_t v35 = v7;
  uint64_t v36 = v2;
  char v37 = v4;
  unint64_t v38 = v6;
  if ((v1 & 0xC000000000000001) != 0)
  {
    sub_219096F0C((uint64_t)&v62);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21915B3F8();
    sub_218FFE628(0, &qword_26AD033B0);
    sub_2190CB3F8();
    sub_21915B0F8();
    uint64_t v1 = v61[1];
    uint64_t v41 = v61[2];
    uint64_t v9 = v61[3];
    uint64_t v8 = v61[4];
    uint64_t v10 = v61[5];
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v41 = v1 + 56;
    uint64_t v9 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    uint64_t v10 = v13 & *(void *)(v1 + 56);
    sub_219096F0C((uint64_t)&v62);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = 0;
  }
  unint64_t v14 = 0;
  char v40 = (unint64_t)(v9 + 64) >> 6;
  int v15 = v39;
  unint64_t v31 = v9;
  unsigned int v16 = 0;
  while (1)
  {
    if (v1 < 0)
    {
      if (!sub_21915B408()) {
        goto LABEL_62;
      }
      sub_218FFE628(0, &qword_26AD033B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v22 = v43;
      swift_unknownObjectRelease();
      if (!v22) {
        goto LABEL_62;
      }
      goto LABEL_38;
    }
    if (v10)
    {
      uint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v8 << 6);
      goto LABEL_37;
    }
    uint64_t v23 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return;
    }
    if (v23 >= v40)
    {
      uint64_t v10 = 0;
      goto LABEL_62;
    }
    uint64_t v24 = *(void *)(v41 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_36:
    uint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v8 = v23;
LABEL_37:
    uint64_t v22 = *(id *)(*(void *)(v1 + 48) + 8 * v21);
    if (!v22) {
      goto LABEL_62;
    }
LABEL_38:
    unint64_t v60 = v22;
    if (v42(&v60))
    {
      char v43 = v22;
      v36(&v60, &v43);

      unint64_t v28 = v60;
      v61[0] = v60;
      if ((v37(v61) & 1) == 0)
      {

        goto LABEL_20;
      }
      char v43 = v28;
      v32(v61, &v43);

      unint64_t v29 = (void *)v61[0];
      char v43 = (id)v61[0];
      v34(v61, &v43);

      long long v30 = v61[0];
      swift_bridgeObjectRelease();
      unint64_t v14 = v30;
      int v15 = v39;
      unsigned int v16 = 0;
      if (v30)
      {
        int v15 = v30 & 0xC000000000000001;
        if (!(v30 >> 62))
        {
LABEL_11:
          if (v16 == *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_20;
          }
          goto LABEL_12;
        }
        while (1)
        {
          swift_bridgeObjectRetain();
          unsigned int v17 = sub_21915B5D8();
          swift_bridgeObjectRelease();
          if (v16 == v17) {
            break;
          }
LABEL_12:
          if (v15)
          {
            int v18 = (id)MEMORY[0x21D481EE0](v16, v30);
          }
          else
          {
            if (v16 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              uint64_t v10 = 0;
              uint64_t v8 = v40 - 1;
              goto LABEL_62;
            }
            int v18 = *(id *)(v30 + 8 * v16 + 32);
          }
          unsigned int v19 = v18;
          if (__OFADD__(v16, 1)) {
            goto LABEL_60;
          }
          if (objc_msgSend(v18, sel_isKeyWindow))
          {
            char v43 = (id)v1;
            unint64_t v44 = v41;
            char v45 = v31;
            char v46 = v8;
            uint64_t v47 = v10;
            char v48 = v42;
            uint64_t v49 = v39;
            unint64_t v50 = v36;
            unint64_t v51 = v5;
            uint64_t v52 = (uint64_t (*)(void))v37;
            uint64_t v53 = v38;
            char v54 = (void (*)(void *__return_ptr, void))v32;
            unint64_t v55 = v33;
            unint64_t v56 = (void (*)(void *__return_ptr, void))v34;
            char v57 = v35;
            long long v58 = v30;
            unint64_t v59 = v16 + 1;
            sub_2190CB520((uint64_t)&v43);
            return;
          }

          ++v16;
          if (!(v30 >> 62)) {
            goto LABEL_11;
          }
        }
LABEL_20:
        int v15 = v39;
      }
    }
    else
    {
    }
  }
  unint64_t v25 = v8 + 2;
  if (v8 + 2 >= v40)
  {
    uint64_t v10 = 0;
    ++v8;
    goto LABEL_62;
  }
  uint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_32;
  }
  unint64_t v26 = v8 + 3;
  if (v8 + 3 >= v40) {
    goto LABEL_57;
  }
  uint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24) {
    goto LABEL_35;
  }
  unint64_t v25 = v8 + 4;
  if (v8 + 4 >= v40) {
    goto LABEL_58;
  }
  uint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24)
  {
LABEL_32:
    uint64_t v23 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = v8 + 5;
  if (v8 + 5 >= v40)
  {
LABEL_57:
    uint64_t v10 = 0;
    uint64_t v8 = v25;
    goto LABEL_62;
  }
  uint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24)
  {
LABEL_35:
    uint64_t v23 = v26;
    goto LABEL_36;
  }
  uint64_t v23 = v8 + 6;
  if (v8 + 6 < v40)
  {
    uint64_t v24 = *(void *)(v41 + 8 * v23);
    if (!v24)
    {
      uint64_t v27 = v8 + 7;
      do
      {
        if (v40 == v27) {
          goto LABEL_61;
        }
        uint64_t v24 = *(void *)(v41 + 8 * v27++);
      }
      while (!v24);
      uint64_t v23 = v27 - 1;
    }
    goto LABEL_36;
  }
LABEL_58:
  uint64_t v10 = 0;
  uint64_t v8 = v26;
LABEL_62:
  char v43 = (id)v1;
  unint64_t v44 = v41;
  char v45 = v31;
  char v46 = v8;
  uint64_t v47 = v10;
  char v48 = v42;
  uint64_t v49 = v15;
  unint64_t v50 = v36;
  unint64_t v51 = v5;
  uint64_t v52 = (uint64_t (*)(void))v37;
  uint64_t v53 = v38;
  char v54 = (void (*)(void *__return_ptr, void))v32;
  unint64_t v55 = v33;
  unint64_t v56 = (void (*)(void *__return_ptr, void))v34;
  char v57 = v35;
  long long v58 = v14;
  unint64_t v59 = v16;
  sub_2190CB520((uint64_t)&v43);
}

uint64_t sub_2190CA678(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_219159A98();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04280);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21915B018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_21915AF98();
  uint64_t v11 = sub_21915AF88();
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v12, v6, v3);
  *(void *)(v14 + v13) = ObjectType;
  sub_2190427E4((uint64_t)v9, (uint64_t)&unk_267C05E50, v14);
  return swift_release();
}

uint64_t sub_2190CA880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_21915AF98();
  *(void *)(v4 + 24) = sub_21915AF88();
  uint64_t v6 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_2190CA918, v6, v5);
}

uint64_t sub_2190CA918()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_2190CB0EC(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void *sub_2190CA980()
{
  unint64_t result = (void *)sub_21902013C(MEMORY[0x263F8EE78]);
  off_267C05E40 = result;
  return result;
}

BOOL sub_2190CA9A8(id *a1)
{
  return objc_msgSend(*a1, sel_activationState) == 0;
}

id sub_2190CA9D4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  self;
  id result = (id)swift_dynamicCastObjCClass();
  id v5 = result;
  if (result) {
    id result = v3;
  }
  *a2 = v5;
  return result;
}

void sub_2190CAA28(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_windows);
  sub_218FFE628(0, &qword_26AD03AA8);
  uint64_t v4 = sub_21915AE88();

  *a2 = v4;
}

uint64_t type metadata accessor for _PageRenderMetricsVisualizer()
{
  return self;
}

uint64_t sub_2190CAAF4(uint64_t a1)
{
  return sub_2190CA678(a1);
}

uint64_t sub_2190CAB18()
{
  uint64_t v1 = sub_219159A98();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2190CABF0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_219159A98() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_218FF9AE0;
  return sub_2190CA880(a1, v5, v6, v7);
}

BOOL sub_2190CAD14(void *a1)
{
  return *a1 != 0;
}

id sub_2190CAD24@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2190CAD38(uint64_t a1)
{
  uint64_t v2 = sub_2191598E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_2191576E8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = _s21PopupHUDConfigurationVMa(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_267C03550 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v7 = off_267C05E40;
  if (*((void *)off_267C05E40 + 2))
  {
    unint64_t v8 = sub_219027418(a1);
    if (v9)
    {
      uint64_t v10 = v7[7] + 16 * v8;
      uint64_t v11 = *(void **)v10;
      unint64_t v12 = *(void **)(v10 + 8);
      swift_endAccess();
      id v13 = v11;
      v12;
      return v13;
    }
  }
  swift_endAccess();
  uint64_t *v6 = sub_219159698();
  v6[1] = v14;
  _s13PopupHUDModelCMa(0);
  uint64_t v15 = swift_allocObject();
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_2191579A8();
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v27 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E60);
  sub_2191579A8();
  v6[2] = v15;
  v6[3] = v16;
  sub_2191576D8();
  sub_2191598D8();
  sub_21915A368();
  uint64_t v17 = (objc_class *)_s22PopupHUDViewControllerCMa(0);
  id v18 = objc_allocWithZone(v17);
  sub_2190CB460((uint64_t)v6, (uint64_t)v18 + OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer22PopupHUDViewController_config);
  v26.receiver = v18;
  v26.super_class = v17;
  id v19 = objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, 0, 0);
  sub_2190CB4C4((uint64_t)v6);
  id v20 = objc_msgSend(objc_allocWithZone((Class)_s25MetricsVisualizerUIWindowCMa()), sel_initWithWindowScene_, a1);
  objc_msgSend(v20, sel_setHidden_, 0);
  objc_msgSend(v20, sel_setRootViewController_, v19);
  id result = objc_msgSend(v19, sel_view);
  if (result)
  {
    uint64_t v22 = result;
    objc_msgSend(v20, sel_addSubview_, result);

    swift_beginAccess();
    id v13 = v20;
    id v23 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = off_267C05E40;
    off_267C05E40 = (_UNKNOWN *)0x8000000000000000;
    sub_219039120((uint64_t)v13, (uint64_t)v23, a1, isUniquelyReferenced_nonNull_native);
    off_267C05E40 = v25;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v13;
  }
  __break(1u);
  return result;
}

void sub_2190CB0EC(uint64_t a1)
{
  uint64_t v2 = sub_21915AB08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  id v6 = objc_msgSend(self, sel_sharedApplication);
  id v7 = objc_msgSend(v6, sel_connectedScenes);

  sub_218FFE628(0, &qword_26AD033B0);
  sub_2190CB3F8();
  uint64_t v8 = sub_21915B0C8();

  v17[0] = v8;
  v17[1] = (uint64_t)sub_2190CA9A8;
  v17[2] = 0;
  v17[3] = (uint64_t)sub_2190CA9D4;
  v17[4] = 0;
  v17[5] = (uint64_t)sub_2190CAD14;
  v17[6] = 0;
  v17[7] = (uint64_t)sub_2190CAD24;
  v17[8] = 0;
  v17[9] = (uint64_t)sub_2190CAA28;
  v17[10] = 0;
  sub_2190CA0BC(v17);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10 && (id v11 = objc_msgSend(v10, sel_windowScene), v10, v11))
  {
    id v12 = v11;
    id v13 = sub_2190CAD38((uint64_t)v12);
    uint64_t v15 = v14;

    swift_beginAccess();
    sub_21910E03C(a1);
    swift_endAccess();
  }
  else
  {
    sub_21915AAC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159528();
    sub_21915A6D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

unint64_t sub_2190CB3F8()
{
  unint64_t result = qword_267C05E58;
  if (!qword_267C05E58)
  {
    sub_218FFE628(255, &qword_26AD033B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05E58);
  }
  return result;
}

uint64_t sub_2190CB460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21PopupHUDConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190CB4C4(uint64_t a1)
{
  uint64_t v2 = _s21PopupHUDConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2190CB520(uint64_t a1)
{
  return a1;
}

uint64_t *sub_2190CB5B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21915A958();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    long long v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)a1 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (*((unsigned char *)a2 + v13 + 40))
    {
      uint64_t v16 = *((void *)v15 + 3);
      if (v16)
      {
        uint64_t v17 = *((void *)v15 + 4);
        *((void *)v14 + 3) = v16;
        *((void *)v14 + 4) = v17;
        (**(void (***)(char *))(v16 - 8))(v14);
      }
      else
      {
        long long v18 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v18;
        *((void *)v14 + 4) = *((void *)v15 + 4);
      }
      v14[40] = 1;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v14[40] = 0;
      swift_retain();
    }
    uint64_t v19 = a3[7];
    id v20 = (char *)a1 + v19;
    unint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    char v23 = v21[8];
    sub_21903AB98(*(void *)v21, v23);
    *(void *)id v20 = v22;
    v20[8] = v23;
  }
  return a1;
}

uint64_t sub_2190CB804(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_21915A958();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  uint64_t v6 = a1 + a2[6];
  if (*(unsigned char *)(v6 + 40))
  {
    if (*(void *)(v6 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  return sub_21903AC64(v8, v9);
}

char *sub_2190CB90C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21915A958();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  long long v10 = *(_OWORD *)&a2[v9 + 24];
  *(_OWORD *)&a1[v9 + 24] = v10;
  (**(void (***)(void))(v10 - 8))();
  uint64_t v11 = a3[6];
  long long v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (a2[v11 + 40])
  {
    uint64_t v14 = *((void *)v13 + 3);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(char *))(v14 - 8))(v12);
    }
    else
    {
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)long long v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
    v12[40] = 1;
  }
  else
  {
    *(void *)long long v12 = *(void *)v13;
    v12[40] = 0;
    swift_retain();
  }
  uint64_t v17 = a3[7];
  long long v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_21903AB98(*(void *)v19, v21);
  *(void *)long long v18 = v20;
  v18[8] = v21;
  return a1;
}

char *sub_2190CBB10(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21915A958();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[5]], (uint64_t *)&a2[a3[5]]);
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    sub_218FFE158((uint64_t)&a1[v12], &qword_26AD012A8);
    if (v14[40])
    {
      uint64_t v15 = *((void *)v14 + 3);
      if (v15)
      {
        *((void *)v13 + 3) = v15;
        *((void *)v13 + 4) = *((void *)v14 + 4);
        (**(void (***)(char *, char *))(v15 - 8))(v13, v14);
      }
      else
      {
        long long v16 = *(_OWORD *)v14;
        long long v17 = *((_OWORD *)v14 + 1);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *(_OWORD *)uint64_t v13 = v16;
        *((_OWORD *)v13 + 1) = v17;
      }
      char v13[40] = 1;
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      char v13[40] = 0;
      swift_retain();
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)v20;
  char v22 = v20[8];
  sub_21903AB98(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = v22;
  sub_21903AC64(v23, v24);
  return a1;
}

char *sub_2190CBD74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21915A958();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *((void *)v11 + 4) = *((void *)v12 + 4);
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  *(_OWORD *)(v14 + 25) = *(_OWORD *)(v15 + 25);
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  return a1;
}

char *sub_2190CBEE0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21915A958();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  long long v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)long long v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  if (a1 != a2)
  {
    uint64_t v16 = a3[6];
    uint64_t v17 = &a2[v16];
    uint64_t v18 = &a1[v16];
    sub_218FFE158((uint64_t)&a1[v16], &qword_26AD012A8);
    long long v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  char v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  LOBYTE(v22) = v22[8];
  uint64_t v24 = *(void *)v21;
  char v25 = v21[8];
  *(void *)uint64_t v21 = v23;
  v21[8] = (char)v22;
  sub_21903AC64(v24, v25);
  return a1;
}

uint64_t sub_2190CC0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190CC0F4);
}

uint64_t sub_2190CC0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2190CC1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190CC1D0);
}

uint64_t sub_2190CC1D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ComponentMenuContent()
{
  uint64_t result = qword_267C05E68;
  if (!qword_267C05E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2190CC2E0()
{
  sub_2190CC388();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2190CC388()
{
  if (!qword_267C05E78)
  {
    sub_21915A958();
    unint64_t v0 = sub_21915B378();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C05E78);
    }
  }
}

uint64_t sub_2190CC3E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190CC3FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t *))
{
  uint64_t v5 = a2;
  a3(&v4, a1, &v5);
  return v4;
}

uint64_t sub_2190CC43C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v20 = a1;
  uint64_t v3 = type metadata accessor for ComponentMenuContent();
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v2, (uint64_t)v7, &qword_267C04860);
  uint64_t v12 = sub_21915A958();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_218FFE158((uint64_t)v7, &qword_267C04860);
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v14 = sub_21915A948();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
  }
  uint64_t v21 = v14;
  sub_2190CDDD0(v2, (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v16 = swift_allocObject();
  sub_2190CDFA8((uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E90);
  sub_218FFDF90(&qword_267C05E98, &qword_267C05E88);
  sub_2190CE08C();
  sub_2190CE5D0(&qword_267C05F18, MEMORY[0x263F50DD0]);
  sub_2191591D8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20, v11, v8);
}

uint64_t sub_2190CC798@<X0>(void (*a1)(char *, uint64_t *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v74)(long long *__return_ptr, uint64_t, long long *);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  int *v80;
  char *v81;
  uint64_t *v82;
  char *v83;
  uint64_t (**v84)();
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  _OWORD *v97;
  long long v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  long long v102;
  uint64_t v103;
  char v104;
  _OWORD *v105;
  char v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  _OWORD *v133;
  uint64_t v134;
  long long v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  long long v139;
  uint64_t v140;
  __int16 v141;

  uint64_t v117 = a2;
  uint64_t v130 = a1;
  long long v134 = a3;
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F20);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05ED0);
  MEMORY[0x270FA5388](v129);
  uint64_t v109 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v116 = (uint64_t)&v107 - v6;
  uint64_t v115 = sub_21915A958();
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v113 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F28);
  MEMORY[0x270FA5388](v131);
  unint64_t v133 = (_OWORD *)((char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F30);
  MEMORY[0x270FA5388](v126);
  uint64_t v127 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EB0);
  MEMORY[0x270FA5388](v132);
  char v128 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21915A938();
  long long v124 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v108 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F38);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v119 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F40);
  MEMORY[0x270FA5388](v121);
  uint64_t v19 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v122 = (uint64_t)&v107 - v21;
  long long v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EC0);
  MEMORY[0x270FA5388](v125);
  uint64_t v120 = (uint64_t)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v123 = (uint64_t)&v107 - v24;
  uint64_t v25 = sub_21915A908();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v118 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  long long v30 = (char *)&v107 - v29;
  uint64_t v31 = sub_21915A928();
  uint64_t v32 = *(void *)(v31 - 8);
  double v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (uint64_t *)((char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, void (*)(char *, uint64_t *, uint64_t), uint64_t, double))(v32 + 16))(v35, v130, v31, v33);
  int v36 = (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 88))(v35, v31);
  if (v36 != *MEMORY[0x263F50DB8])
  {
    if (v36 == *MEMORY[0x263F50DC0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v35, v31);
      uint64_t v41 = v114;
      uint64_t v42 = v113;
      char v43 = v35;
      uint64_t v44 = v115;
      uint64_t v45 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v114 + 32))(v113, v43, v115);
      MEMORY[0x270FA5388](v45);
      MEMORY[0x270FA5388](v46);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F48);
      type metadata accessor for ComponentMenuContent();
      sub_218FFDF90(&qword_267C05F50, &qword_267C05F48);
      sub_2190CE5D0(&qword_267C047A8, (void (*)(uint64_t))type metadata accessor for ComponentMenuContent);
      uint64_t v47 = v110;
      sub_2191589A8();
      uint64_t v48 = sub_21915A8B8();
      uint64_t v50 = v49;
      uint64_t v51 = v111;
      uint64_t v52 = (uint64_t)v109;
      uint64_t v53 = v112;
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v109, v47, v112);
      char v54 = (uint64_t *)(v52 + *(int *)(v129 + 52));
      uint64_t *v54 = v48;
      v54[1] = v50;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v53);
      uint64_t v55 = v116;
      sub_219024A0C(v52, v116, &qword_267C05ED0);
      sub_2190090C4(v55, v127, &qword_267C05ED0);
      swift_storeEnumTagMultiPayload();
      sub_218FFDF90(&qword_267C05EB8, &qword_267C05EC0);
      sub_218FFDF90(&qword_267C05EC8, &qword_267C05ED0);
      uint64_t v56 = (uint64_t)v128;
      sub_2191584C8();
      sub_2190090C4(v56, (uint64_t)v133, &qword_267C05EB0);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EE0);
      sub_2190CE108();
      sub_2190CE1C8();
      sub_2191584C8();
      sub_218FFE158(v56, &qword_267C05EB0);
      sub_218FFE158(v55, &qword_267C05ED0);
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v44);
    }
    if (v36 != *MEMORY[0x263F50DC8])
    {
      unint64_t v139 = 0uLL;
      uint64_t v140 = 0;
      uint64_t v141 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EF0);
      sub_2190CE244();
      sub_2191584C8();
      uint64_t v94 = v136;
      uint64_t v95 = v137;
      uint64_t v96 = BYTE1(v137);
      uint64_t v97 = v133;
      *unint64_t v133 = v135;
      *((void *)v97 + 2) = v94;
      *((unsigned char *)v97 + 24) = v95;
      *((unsigned char *)v97 + 25) = v96;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EE0);
      sub_2190CE108();
      sub_2190CE1C8();
      sub_2191584C8();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 8))(v35, v31);
    }
    (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v35, v31);
    uint64_t v62 = *v35;
    uint64_t v61 = v35[1];
    uint64_t v63 = type metadata accessor for ComponentMenuContent();
    uint64_t v64 = v117;
    sub_2190FB834((uint64_t)&v135);
    uint64_t v65 = v137;
    if (v137)
    {
      uint64_t v66 = v138;
      __swift_project_boxed_opaque_existential_1(&v135, v137);
      uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 16))(v65, v66);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v135);
      uint64_t v68 = v64 + *(int *)(v63 + 28);
      uint64_t v69 = *(void *)v68;
      char v70 = *(unsigned char *)(v68 + 8);
      sub_21903AB98(*(void *)v68, v70);
      uint64_t v71 = sub_2190FC39C(v69, v70);
      sub_21903AC64(v69, v70);
      if (*(void *)(v71 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v72 = sub_219027390(v62, v61);
        if (v73)
        {
          uint64_t v74 = *(void (**)(long long *__return_ptr, uint64_t, long long *))(*(void *)(v71 + 56) + 16 * v72);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v75 = v64 + *(int *)(v63 + 20);
          *(void *)&long long v135 = v67;
          v74(&v139, v75, &v135);
          swift_release();
          *((void *)&v139 + 1) = v62;
          uint64_t v140 = v61;
          LOBYTE(v141) = 0;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F00);
          __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F10);
          sub_218FFDF90(&qword_267C05EF8, &qword_267C05F00);
          sub_218FFDF90(&qword_267C05F08, &qword_267C05F10);
          sub_2191584C8();
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_release();
LABEL_23:
          CGRect v100 = v136;
          CGRect v101 = v137;
          unint64_t v139 = v135;
          uint64_t v140 = v136;
          uint64_t v141 = v137;
          uint64_t v129 = *((void *)&v135 + 1);
          uint64_t v130 = (void (*)(char *, uint64_t *, uint64_t))v135;
          sub_2190CE340(v135, *((uint64_t *)&v135 + 1), v136, v137);
          __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EF0);
          sub_2190CE244();
          sub_2191584C8();
          CGRect v102 = v135;
          CGRect v103 = v136;
          CGRect v104 = BYTE1(v137);
          uint64_t v105 = v133;
          *unint64_t v133 = v135;
          *((void *)v105 + 2) = v103;
          uint64_t v106 = v137;
          *((unsigned char *)v105 + 24) = v137;
          *((unsigned char *)v105 + 25) = v104;
          swift_storeEnumTagMultiPayload();
          sub_2190CE390(v102, *((uint64_t *)&v102 + 1), v103, v106, v104);
          __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EE0);
          sub_2190CE108();
          sub_2190CE1C8();
          sub_2191584C8();
          sub_2190CE3A0((uint64_t)v130, v129, v100, v101);
          return sub_2190CE3F0(v102, *((uint64_t *)&v102 + 1), v103, v106, v104);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      sub_218FFE158((uint64_t)&v135, &qword_26AD010B8);
    }
    *(void *)&long long v135 = 0;
    *((void *)&v135 + 1) = 0xE000000000000000;
    sub_21915B478();
    sub_21915AD88();
    sub_21915AD88();
    swift_bridgeObjectRelease();
    sub_21915AD88();
    uint64_t v98 = v135;
    CGRect v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = v98;
    *(void *)&unint64_t v139 = sub_219008318;
    *((void *)&v139 + 1) = v99;
    uint64_t v140 = 0;
    LOBYTE(v141) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F00);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C05F10);
    sub_218FFDF90(&qword_267C05EF8, &qword_267C05F00);
    sub_218FFDF90(&qword_267C05F08, &qword_267C05F10);
    sub_2191584C8();
    goto LABEL_23;
  }
  (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v35, v31);
  uint64_t v130 = *(void (**)(char *, uint64_t *, uint64_t))(v26 + 32);
  v130(v30, v35, v25);
  sub_21915A8E8();
  uint64_t v37 = v25;
  uint64_t v38 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v15, 1, v11) == 1)
  {
    sub_218FFE158((uint64_t)v15, &qword_267C05F38);
    uint64_t v39 = sub_219157A58();
    uint64_t v40 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v119, 1, 1, v39);
  }
  else
  {
    uint64_t v58 = v124;
    unint64_t v59 = v108;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v108, v15, v11);
    int v60 = (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v59, v11);
    uint64_t v40 = (uint64_t)v119;
    if (v60 == *MEMORY[0x263F50DF0])
    {
      sub_219157A48();
    }
    else
    {
      if (v60 != *MEMORY[0x263F50DE8])
      {
        uint64_t result = sub_21915B5B8();
        __break(1u);
        return result;
      }
      sub_219157A38();
    }
    unint64_t v76 = sub_219157A58();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v40, 0, 1, v76);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v11);
  }
  sub_21915A8F8();
  uint64_t v77 = v118;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v118, v30, v37);
  double v78 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v79 = swift_allocObject();
  v130((char *)(v79 + v78), (uint64_t *)v77, v37);
  uint64_t v80 = (int *)v121;
  unint64_t v81 = &v19[*(int *)(v121 + 44)];
  *(void *)unint64_t v81 = swift_getKeyPath();
  v81[40] = 0;
  long long v82 = (uint64_t *)&v19[v80[12]];
  *long long v82 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  double v83 = &v19[v80[13]];
  *(void *)double v83 = swift_getKeyPath();
  *((void *)v83 + 1) = 0;
  v83[16] = 0;
  sub_219024A0C(v40, (uint64_t)v19, &qword_267C047B0);
  sub_219024A0C((uint64_t)&v135, (uint64_t)&v19[v80[9]], &qword_267C047B8);
  double v84 = (uint64_t (**)())&v19[v80[10]];
  *double v84 = sub_2190CE4DC;
  v84[1] = (uint64_t (*)())v79;
  double v85 = v122;
  sub_219024A0C((uint64_t)v19, v122, &qword_267C05F40);
  double v86 = sub_21915A8C8();
  uint64_t v88 = v87;
  uint64_t v89 = v120;
  sub_2190090C4(v85, v120, &qword_267C05F40);
  unint64_t v90 = (uint64_t *)(v89 + *(int *)(v125 + 52));
  *unint64_t v90 = v86;
  v90[1] = v88;
  sub_218FFE158(v85, &qword_267C05F40);
  int v91 = v89;
  int v92 = v123;
  sub_219024A0C(v91, v123, &qword_267C05EC0);
  sub_2190090C4(v92, v127, &qword_267C05EC0);
  swift_storeEnumTagMultiPayload();
  sub_218FFDF90(&qword_267C05EB8, &qword_267C05EC0);
  sub_218FFDF90(&qword_267C05EC8, &qword_267C05ED0);
  uint64_t v93 = (uint64_t)v128;
  sub_2191584C8();
  sub_2190090C4(v93, (uint64_t)v133, &qword_267C05EB0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05EE0);
  sub_2190CE108();
  sub_2190CE1C8();
  sub_2191584C8();
  sub_218FFE158(v93, &qword_267C05EB0);
  sub_218FFE158(v92, &qword_267C05EC0);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v30, v37);
}

uint64_t sub_2190CDB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04860);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21915A958();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v11 = (int *)type metadata accessor for ComponentMenuContent();
  sub_219030940(a2 + v11[5], (uint64_t)v16);
  uint64_t v12 = a3 + v11[6];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 40) = 0;
  uint64_t v13 = a3 + v11[7];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  sub_219024A0C((uint64_t)v8, a3, &qword_267C04860);
  return sub_219018288(v16, a3 + v11[5]);
}

uint64_t sub_2190CDCBC()
{
  return sub_219158FB8();
}

uint64_t sub_2190CDD6C@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  a1();
  sub_219030858();
  uint64_t result = sub_2191589E8();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_2190CDDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ComponentMenuContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190CDE34()
{
  uint64_t v1 = (int *)type metadata accessor for ComponentMenuContent();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_21915A958();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  __swift_destroy_boxed_opaque_existential_1(v3 + v1[5]);
  uint64_t v6 = v3 + v1[6];
  if (*(unsigned char *)(v6 + 40))
  {
    if (*(void *)(v6 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v6);
    }
  }
  else
  {
    swift_release();
  }
  sub_21903AC64(*(void *)(v3 + v1[7]), *(unsigned char *)(v3 + v1[7] + 8));
  return swift_deallocObject();
}

uint64_t sub_2190CDFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ComponentMenuContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190CE00C@<X0>(void (*a1)(char *, uint64_t *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ComponentMenuContent() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_2190CC798(a1, v6, a2);
}

unint64_t sub_2190CE08C()
{
  unint64_t result = qword_267C05EA0;
  if (!qword_267C05EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05E90);
    sub_2190CE108();
    sub_2190CE1C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05EA0);
  }
  return result;
}

unint64_t sub_2190CE108()
{
  unint64_t result = qword_267C05EA8;
  if (!qword_267C05EA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05EB0);
    sub_218FFDF90(&qword_267C05EB8, &qword_267C05EC0);
    sub_218FFDF90(&qword_267C05EC8, &qword_267C05ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05EA8);
  }
  return result;
}

unint64_t sub_2190CE1C8()
{
  unint64_t result = qword_267C05ED8;
  if (!qword_267C05ED8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05EE0);
    sub_2190CE244();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05ED8);
  }
  return result;
}

unint64_t sub_2190CE244()
{
  unint64_t result = qword_267C05EE8;
  if (!qword_267C05EE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05EF0);
    sub_218FFDF90(&qword_267C05EF8, &qword_267C05F00);
    sub_218FFDF90(&qword_267C05F08, &qword_267C05F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05EE8);
  }
  return result;
}

uint64_t sub_2190CE308()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190CE340(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return swift_retain();
  }
  else
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_2190CE390(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) == 0) {
    return sub_2190CE340(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_2190CE3A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2190CE3F0(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) == 0) {
    return sub_2190CE3A0(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_2190CE400@<X0>(uint64_t a1@<X8>)
{
  return sub_2190CDB3C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2190CE408()
{
  return sub_2190CDCBC();
}

uint64_t sub_2190CE44C()
{
  uint64_t v1 = sub_21915A908();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2190CE4DC()
{
  return sub_2190CDCBC();
}

uint64_t sub_2190CE57C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190CDD6C(MEMORY[0x263F50DB0], a1);
}

uint64_t sub_2190CE5AC()
{
  return sub_21915A8D8();
}

uint64_t sub_2190CE5D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2190CE618@<X0>(uint64_t a1@<X8>)
{
  return sub_2190CDD6C(MEMORY[0x263F50DE0], a1);
}

uint64_t sub_2190CE648()
{
  return sub_21915A918();
}

unint64_t sub_2190CE678()
{
  unint64_t result = qword_267C05F60;
  if (!qword_267C05F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05E80);
    sub_2190CE08C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05F60);
  }
  return result;
}

void sub_2190CE770()
{
  v81.receiver = v0;
  v81.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v81, sel_viewDidLoad);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  uint64_t v2 = OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderView];
  *(void *)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderView] = v1;

  uint64_t v4 = *(void **)&v0[v2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_28;
  }
  id v5 = objc_msgSend(v4, sel_layer);
  double v6 = *(double *)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderSize];
  objc_msgSend(v5, sel_setBorderWidth_, v6);

  uint64_t v7 = *(void **)&v0[v2];
  if (!v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!*(void *)&v0[v2])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = v8;
  objc_msgSend(v8, sel_addSubview_);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v11 = OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_eventLabel;
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_eventLabel];
  *(void *)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_eventLabel] = v10;

  uint64_t v13 = *(void **)&v0[v11];
  if (!v13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v14 = self;
  uint64_t v15 = *MEMORY[0x263F83570];
  id v16 = v13;
  id v17 = objc_msgSend(v14, sel_preferredFontForTextStyle_, v15);
  objc_msgSend(v16, sel_setFont_, v17);

  uint64_t v18 = *(void **)&v0[v11];
  if (!v18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v19 = self;
  id v20 = v18;
  id v21 = objc_msgSend(v19, sel_blackColor);
  objc_msgSend(v20, sel_setTextColor_, v21);

  uint64_t v22 = *(void **)&v0[v11];
  if (!v22)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v23 = v22;
  id v24 = objc_msgSend(v19, sel_whiteColor);
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  uint64_t v25 = *(void **)&v0[v11];
  if (!v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v25, sel_setUserInteractionEnabled_, 0);
  uint64_t v26 = *(void **)&v0[v11];
  if (!v26)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  objc_msgSend(v26, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v27 = objc_msgSend(v0, sel_view);
  if (!v27)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (!*(void *)&v0[v11])
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v28 = v27;
  objc_msgSend(v27, sel_addSubview_);

  __swift_instantiateConcreteTypeFromMangledName(&qword_267C03C20);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_219162490;
  long long v30 = *(void **)&v0[v11];
  if (!v30)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v31 = objc_msgSend(v30, sel_topAnchor);
  id v32 = objc_msgSend(v0, sel_view);
  if (!v32)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  double v33 = v32;
  id v34 = objc_msgSend(v32, sel_layoutMarginsGuide);

  id v35 = objc_msgSend(v34, sel_topAnchor);
  id v36 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v35, v6);

  *(void *)(v29 + 32) = v36;
  uint64_t v37 = *(void **)&v0[v11];
  if (!v37)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  id v38 = objc_msgSend(v37, sel_leftAnchor);
  id v39 = objc_msgSend(v0, sel_view);
  if (!v39)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v40 = v39;
  id v41 = objc_msgSend(v39, sel_safeAreaLayoutGuide);

  id v42 = objc_msgSend(v41, sel_leftAnchor);
  id v43 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v42, v6);

  *(void *)(v29 + 40) = v43;
  uint64_t v44 = *(void **)&v0[v11];
  if (!v44)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v45 = objc_msgSend(v44, sel_rightAnchor);
  id v46 = objc_msgSend(v0, sel_view);
  if (!v46)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v47 = v46;
  id v48 = objc_msgSend(v46, sel_safeAreaLayoutGuide);

  id v49 = objc_msgSend(v48, sel_rightAnchor);
  id v50 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v49, -v6);

  *(void *)(v29 + 48) = v50;
  uint64_t v51 = *(void **)&v0[v2];
  if (!v51)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v52 = objc_msgSend(v51, sel_topAnchor);
  id v53 = objc_msgSend(v0, sel_view);
  if (!v53)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  char v54 = v53;
  id v55 = objc_msgSend(v53, sel_safeAreaLayoutGuide);

  id v56 = objc_msgSend(v55, sel_topAnchor);
  id v57 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v56);

  *(void *)(v29 + 56) = v57;
  uint64_t v58 = *(void **)&v0[v2];
  if (!v58)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  id v59 = objc_msgSend(v58, sel_leftAnchor);
  id v60 = objc_msgSend(v0, sel_view);
  if (!v60)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v61 = v60;
  id v62 = objc_msgSend(v60, sel_safeAreaLayoutGuide);

  id v63 = objc_msgSend(v62, sel_leftAnchor);
  id v64 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v63);

  *(void *)(v29 + 64) = v64;
  uint64_t v65 = *(void **)&v0[v2];
  if (!v65)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  id v66 = objc_msgSend(v65, sel_rightAnchor);
  id v67 = objc_msgSend(v0, sel_view);
  if (!v67)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v68 = v67;
  id v69 = objc_msgSend(v67, sel_safeAreaLayoutGuide);

  id v70 = objc_msgSend(v69, sel_rightAnchor);
  id v71 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v70);

  *(void *)(v29 + 72) = v71;
  unint64_t v72 = *(void **)&v0[v2];
  if (!v72)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  id v73 = objc_msgSend(v72, sel_bottomAnchor);
  id v74 = objc_msgSend(v0, sel_view);
  if (v74)
  {
    BOOL v75 = v74;
    unint64_t v76 = self;
    id v77 = objc_msgSend(v75, sel_safeAreaLayoutGuide);

    id v78 = objc_msgSend(v77, sel_bottomAnchor);
    id v79 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v78);

    *(void *)(v29 + 80) = v79;
    sub_21915AE98();
    sub_2190CF1BC();
    uint64_t v80 = (void *)sub_21915AE78();
    swift_bridgeObjectRelease();
    objc_msgSend(v76, sel_activateConstraints_, v80);

    return;
  }
LABEL_51:
  __break(1u);
}

uint64_t _s31MetricsVisualizerViewControllerCMa()
{
  return self;
}

uint64_t _s25MetricsVisualizerUIWindowCMa()
{
  return self;
}

unint64_t sub_2190CF1BC()
{
  unint64_t result = qword_267C05F80;
  if (!qword_267C05F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_267C05F80);
  }
  return result;
}

BOOL sub_2190CF1FC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2190CF20C()
{
  return sub_21915B7C8();
}

uint64_t sub_2190CF234()
{
  return sub_21915B7D8();
}

BOOL sub_2190CF27C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2190CF1FC(*a1, *a2);
}

uint64_t sub_2190CF288()
{
  return sub_2190CF234();
}

uint64_t sub_2190CF290()
{
  return sub_2190CF20C();
}

uint64_t sub_2190CF298()
{
  return sub_21915B7D8();
}

__n128 ToastActionImplementation.init<A>(following:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  *(void *)(v13 + 32) = a4;
  *(void *)(v13 + 40) = a5;
  *(void *)(v13 + 48) = v12;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v13 + 56) = result;
  *a6 = &unk_267C05F90;
  a6[1] = v13;
  return result;
}

uint64_t sub_2190CF364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[8] = a3;
  v8[9] = a4;
  v8[6] = a1;
  v8[7] = a2;
  uint64_t v9 = sub_21915B558();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD036B0);
  v8[17] = swift_task_alloc();
  uint64_t v10 = sub_219157718();
  v8[18] = v10;
  v8[19] = *(void *)(v10 - 8);
  v8[20] = swift_task_alloc();
  sub_21915AF98();
  v8[21] = sub_21915AF88();
  uint64_t v12 = sub_21915AF48();
  v8[22] = v12;
  v8[23] = v11;
  return MEMORY[0x270FA2498](sub_2190CF4F0, v12, v11);
}

uint64_t sub_2190CF4F0()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 48);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 64);
  uint64_t v5 = type metadata accessor for FlowAuthority();
  uint64_t v6 = sub_219159188();
  MEMORY[0x21D47FB40](v6);
  *(void *)(v0 + 192) = sub_2190D96E0(v5);
  swift_release();
  sub_21908DEE0(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v7 = *(void *)(v0 + 136);
    swift_release();
    sub_2190D0438(v7);
    type metadata accessor for ToastActionImplementation.PresentationError();
    swift_getWitnessTable();
    swift_allocError();
    *id v8 = 0;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 152) + 32))(*(void *)(v0 + 160), *(void *)(v0 + 136), *(void *)(v0 + 144));
    sub_21915A7E8();
    uint64_t v11 = sub_21915B7F8();
    uint64_t v13 = v12;
    sub_21915B548();
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_267C06850 + dword_267C06850);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_2190CF774;
    return v15(v11, v13, 0, 0, 1);
  }
}

uint64_t sub_2190CF774()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[15] + 8))(v2[16], v2[14]);
  uint64_t v3 = v2[23];
  uint64_t v4 = v2[22];
  if (v0) {
    uint64_t v5 = sub_2190CFA70;
  }
  else {
    uint64_t v5 = sub_2190CF8FC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2190CF8FC()
{
  uint64_t v1 = v0[20];
  swift_release();
  BOOL v2 = sub_21908D698(v1);
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[18];
  if (v2)
  {
    (*(void (**)(void, void))(v4 + 8))(v0[20], v0[18]);
    swift_release();
  }
  else
  {
    type metadata accessor for ToastActionImplementation.PresentationError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v7 = 1;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2190CFA70()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2190CFB20()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190CFB68(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_21901C978;
  return sub_2190CF364(a1, v8, v9, v10, v4, v5, v6, v7);
}

uint64_t ToastActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2190CFFC4(a1, a3);
}

uint64_t sub_2190CFC48(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = sub_21915AF98();
  v4[4] = sub_21915AF88();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[5] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_2190CFD4C;
  return v9(a4);
}

uint64_t sub_2190CFD4C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_21915AF48();
  if (v0) {
    uint64_t v4 = sub_2190CFF58;
  }
  else {
    uint64_t v4 = sub_2190CFEA8;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_2190CFEA8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *MEMORY[0x263F50978];
  uint64_t v3 = sub_219159888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v1, v2, v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2190CFF58()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2190CFFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2190CFFC4(a1, a3);
}

uint64_t sub_2190CFFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04280);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21915A7F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  double v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = *v2;
  uint64_t v12 = v2[1];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = *(void *)(a2 + 16);
  *((void *)v15 + 3) = v13;
  *((void *)v15 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[v14], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C04798);
  swift_retain();
  uint64_t v16 = sub_21915A9D8();
  uint64_t v17 = sub_21915B018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = 0;
  v18[3] = 0;
  v18[4] = &unk_267C06020;
  v18[5] = v15;
  v18[6] = v16;
  swift_retain();
  sub_219119688((uint64_t)v7, (uint64_t)&unk_267C047A0, (uint64_t)v18);
  swift_release();
  return v16;
}

uint64_t sub_2190D0204()
{
  return MEMORY[0x263F50D80];
}

uint64_t type metadata accessor for ToastActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D0228()
{
  uint64_t v1 = sub_21915A7F8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2190D02F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_21915A7F8() - 8);
  uint64_t v5 = *(int **)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_218FF9AE0;
  return sub_2190CFC48(a1, v5, v6, v7);
}

uint64_t sub_2190D03F0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190D0438(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD036B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ToastActionImplementation.PresentationError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D04B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_2190D04B8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190D0584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2190D05AC()
{
  return swift_getWitnessTable();
}

uint64_t View.shelfGridPagingDecoration<A, B, C>(transaction:backward:forward:mask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  swift_getKeyPath();
  sub_2190D0888(a1, a2, a3, a4, a5, a6, a7, a9, &v23, a10, a11, a13, a14, a15);
  uint64_t v24 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_219158AA8();
  swift_release();
  sub_2190D09BC((uint64_t)&v24);
  swift_release();
  swift_release();
  return swift_release();
}

__n128 sub_2190D0724@<Q0>(uint64_t a1@<X8>)
{
  sub_2190D1560();
  sub_219158238();
  __n128 result = v4;
  *(void *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  return result;
}

__n128 sub_2190D0784@<Q0>(uint64_t a1@<X8>)
{
  sub_2190D1560();
  sub_219158238();
  __n128 result = v4;
  *(void *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_2190D07EC()
{
  return sub_219158248();
}

void *sub_2190D0888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a8;
  v18[3] = a10;
  v18[4] = a11;
  v18[5] = a12;
  v18[6] = a13;
  v18[7] = a14;
  v18[8] = a2;
  v18[9] = a3;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a8;
  v19[3] = a10;
  v19[4] = a11;
  v19[5] = a12;
  v19[6] = a13;
  v19[7] = a14;
  v19[8] = a4;
  v19[9] = a5;
  __n128 result = (void *)swift_allocObject();
  result[2] = a8;
  result[3] = a10;
  result[4] = a11;
  result[5] = a12;
  result[6] = a13;
  result[7] = a14;
  result[8] = a6;
  result[9] = a7;
  *a9 = a1;
  a9[1] = sub_2190D14A8;
  a9[2] = v18;
  a9[3] = sub_2190D14C0;
  a9[4] = v19;
  a9[5] = sub_2190D154C;
  a9[6] = result;
  return result;
}

uint64_t sub_2190D09BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190D09E8()
{
  return sub_2190D0AFC();
}

uint64_t sub_2190D0A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  double v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  uint64_t v11 = sub_219030AB0((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a5);
  return v11;
}

uint64_t sub_2190D0AE4()
{
  return sub_2190D0AFC();
}

uint64_t sub_2190D0AFC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C060C0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - v5;
  swift_retain();
  sub_219159058();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_218FFDF90(qword_267C060C8, &qword_267C060C0);
  uint64_t v7 = sub_219159108();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v7;
}

uint64_t sub_2190D0C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(a6 - 8);
  double v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  uint64_t v12 = sub_219030AB0((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a6);
  return v12;
}

uint64_t sub_2190D0D68()
{
  return sub_219159108();
}

uint64_t sub_2190D0DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  double v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  uint64_t v11 = sub_219030AB0((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a5);
  return v11;
}

uint64_t sub_2190D0E88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158F08();
  *a1 = result;
  return result;
}

uint64_t sub_2190D0ECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158F08();
  *a1 = result;
  return result;
}

uint64_t sub_2190D0F14@<X0>(uint64_t *a1@<X8>)
{
  sub_219159358();
  uint64_t result = sub_219157BA8();
  *a1 = result;
  a1[1] = (uint64_t)sub_2190D09E8;
  a1[2] = 0;
  a1[3] = (uint64_t)sub_2190D0AE4;
  a1[4] = 0;
  a1[5] = (uint64_t)sub_2190D0D68;
  a1[6] = 0;
  return result;
}

uint64_t View.shelfGridPagingDecoration<A, B, C, D>(transaction:backward:forward:leadingMask:trailingMask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_2190D05C8;
  *(void *)(v21 + 24) = 0;
  View.shelfGridPagingDecoration<A, B, C>(transaction:backward:forward:mask:)(a1, a2, a3, a4, a5, (uint64_t)sub_2190D10C0, v21, a10, a11, a12, MEMORY[0x263F1B440], a15, a16, a17, MEMORY[0x263F1B428]);
  return swift_release();
}

uint64_t sub_2190D1088()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190D10C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_2190D10F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190D1190()
{
  return swift_getWitnessTable();
}

uint64_t destroy for _ShelfGridPagingDecoration()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for _ShelfGridPagingDecoration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for _ShelfGridPagingDecoration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _ShelfGridPagingDecoration(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _ShelfGridPagingDecoration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ShelfGridPagingDecoration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ShelfGridPagingDecoration()
{
  return &type metadata for _ShelfGridPagingDecoration;
}

uint64_t sub_2190D14A8(uint64_t a1, uint64_t a2)
{
  return sub_2190D14D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_2190D0A00);
}

uint64_t sub_2190D14C0(uint64_t a1, uint64_t a2)
{
  return sub_2190D14D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_2190D0C84);
}

uint64_t sub_2190D14D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_2190D1514()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190D154C()
{
  return sub_2190D0DA4(v0[8], v0[9], v0[2], v0[3], v0[4]);
}

unint64_t sub_2190D1560()
{
  unint64_t result = qword_267C060B8;
  if (!qword_267C060B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C060B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for _ShelfGridPagingDecorationsKey()
{
  return &type metadata for _ShelfGridPagingDecorationsKey;
}

void *initializeBufferWithCopyOfBuffer for _MediaArtworkFetchProgress(void *a1, void **a2)
{
  long long v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for _MediaArtworkFetchProgress(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for _MediaArtworkFetchProgress(void **a1, void **a2)
{
  long long v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    uint64_t v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **assignWithTake for _MediaArtworkFetchProgress(void **a1, unint64_t *a2)
{
  long long v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for _MediaArtworkFetchProgress(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for _MediaArtworkFetchProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _MediaArtworkFetchProgress()
{
  return &type metadata for _MediaArtworkFetchProgress;
}

uint64_t sub_2190D17D4(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  swift_release();
  swift_release();
  swift_release();
  sub_21903AC64(*(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  sub_21903AC64(*(void *)(a1 + 104), *(unsigned char *)(a1 + 112));
  unint64_t v2 = *(void **)(a1 + 120);
  if ((unint64_t)v2 >= 4) {

  }
  return swift_release();
}

uint64_t sub_2190D1858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  char v9 = *(unsigned char *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21903AB98(v8, v9);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  LOBYTE(v8) = *(unsigned char *)(a2 + 112);
  sub_21903AB98(v10, v8);
  *(void *)(a1 + 104) = v10;
  *(unsigned char *)(a1 + 112) = v8;
  uint64_t v11 = *(void **)(a2 + 120);
  if ((unint64_t)v11 < 3) {
    goto LABEL_8;
  }
  if (v11 != (void *)3)
  {
    id v12 = v11;
LABEL_8:
    *(void *)(a1 + 120) = v11;
    goto LABEL_9;
  }
  *(void *)(a1 + 120) = 3;
LABEL_9:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  return a1;
}

uint64_t sub_2190D198C(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_retain();
  swift_release();
  uint64_t v7 = *((void *)a2 + 8);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *((void *)a2 + 10);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *((void *)a2 + 11);
  char v10 = *((unsigned char *)a2 + 96);
  sub_21903AB98(v9, v10);
  uint64_t v11 = *(void *)(a1 + 88);
  char v12 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v10;
  sub_21903AC64(v11, v12);
  uint64_t v13 = *((void *)a2 + 13);
  char v14 = *((unsigned char *)a2 + 112);
  sub_21903AB98(v13, v14);
  uint64_t v15 = *(void *)(a1 + 104);
  char v16 = *(unsigned char *)(a1 + 112);
  *(void *)(a1 + 104) = v13;
  *(unsigned char *)(a1 + 112) = v14;
  sub_21903AC64(v15, v16);
  uint64_t v18 = (uint64_t *)(a1 + 120);
  uint64_t v17 = *(void **)(a1 + 120);
  uint64_t v19 = (void *)*((void *)a2 + 15);
  if (v17 == (void *)3)
  {
    if ((unint64_t)v19 >= 3)
    {
      if (v19 == (void *)3)
      {
        uint64_t v20 = 3;
LABEL_21:
        *uint64_t v18 = v20;
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v19 == (void *)3)
  {
    sub_2190D1B74((void **)(a1 + 120));
LABEL_20:
    uint64_t v20 = *((void *)a2 + 15);
    goto LABEL_21;
  }
  if ((unint64_t)v17 >= 3)
  {
    if ((unint64_t)v19 >= 3)
    {
      id v23 = v19;
      uint64_t v24 = (void *)*v18;
      *uint64_t v18 = (uint64_t)v19;

      goto LABEL_22;
    }

    goto LABEL_20;
  }
  if ((unint64_t)v19 >= 3) {
LABEL_16:
  }
    id v21 = v19;
LABEL_17:
  *uint64_t v18 = (uint64_t)v19;
LABEL_22:
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

void **sub_2190D1B74(void **a1)
{
  unint64_t v2 = *a1;
  if ((unint64_t)v2 >= 0xFFFFFFFF) {

  }
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_2190D1BE0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 96);
  uint64_t v6 = *(void *)(a1 + 88);
  char v7 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = v5;
  sub_21903AC64(v6, v7);
  char v8 = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a1 + 104);
  char v10 = *(unsigned char *)(a1 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = v8;
  sub_21903AC64(v9, v10);
  char v12 = (unint64_t *)(a1 + 120);
  uint64_t v11 = *(void **)(a1 + 120);
  unint64_t v13 = *(void *)(a2 + 120);
  if (v11 == (void *)3)
  {
    if (v13 != 3)
    {
      *char v12 = v13;
      goto LABEL_14;
    }
LABEL_8:
    *char v12 = 3;
    goto LABEL_14;
  }
  if (v13 == 3)
  {
    sub_2190D1B74((void **)(a1 + 120));
    goto LABEL_8;
  }
  if ((unint64_t)v11 >= 3)
  {
    if (v13 >= 3)
    {
      *char v12 = v13;
    }
    else
    {

      *char v12 = v13;
    }
  }
  else
  {
    *char v12 = v13;
  }
LABEL_14:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t sub_2190D1D24(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2190D1D6C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for _MediaArtworkImage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D1DE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190D1E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_219159AC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219159AD8();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_2190272B4((uint64_t)v7), (v9 & 1) != 0))
  {
    sub_21902493C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*((void *)&v14 + 1))
  {
    sub_2190214DC(&v13, v17);
    sub_21902493C((uint64_t)v17, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C05530);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      long long v11 = v14;
      *(_OWORD *)a2 = v13;
      *(_OWORD *)(a2 + 16) = v11;
      *(void *)(a2 + 32) = v15;
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
      uint64_t v12 = sub_218FFE158((uint64_t)&v13, &qword_267C06198);
      MEMORY[0x270FA5388](v12);
      *((void *)&v13 - 2) = v17;
      sub_219159FC8();
      sub_2191597A8();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
  }
  else
  {
    sub_218FFE158((uint64_t)&v13, &qword_267C05528);
    return sub_2191597A8();
  }
  return result;
}

uint64_t sub_2190D2040()
{
  return 0;
}

void sub_2190D2160()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C061A0);
  sub_219158FF8();
  if (v1 != (void *)3)
  {
    (*(void (**)())(v0 + 56))();
    sub_2190D6A3C(v1);
  }
}

uint64_t sub_2190D21D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v95 = a2;
  uint64_t v96 = *(void *)(a1 + 16);
  sub_219157F48();
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06150);
  uint64_t v83 = a1;
  uint64_t v6 = MEMORY[0x263F1A240];
  uint64_t v112 = *(void *)(a1 + 24);
  uint64_t v5 = v112;
  uint64_t v113 = MEMORY[0x263F1A240];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v111 = v6;
  swift_getWitnessTable();
  sub_2190D60AC(&qword_267C06158, &qword_267C06150, (void (*)(void))sub_2190D6058);
  *(void *)&long long v99 = swift_getOpaqueTypeMetadata2();
  *((void *)&v99 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06168);
  *(void *)&long long v100 = swift_getOpaqueTypeConformance2();
  *((void *)&v100 + 1) = sub_2190D60AC(&qword_267C06170, &qword_267C06168, (void (*)(void))sub_2190D6124);
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v7 = sub_219157A28();
  uint64_t v82 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  objc_super v81 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (uint64_t)&v76 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  uint64_t v79 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v79 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v84 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v85 = (uint64_t)&v76 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v76 - v16;
  uint64_t v93 = v5;
  uint64_t v17 = type metadata accessor for _AsyncTaskImage();
  uint64_t v78 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v77 = (uint64_t)&v76 - v21;
  uint64_t v22 = sub_21915B018();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = v17;
  uint64_t v89 = v7;
  uint64_t v92 = sub_2191584D8();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  unint64_t v90 = (char *)&v76 - v26;
  uint64_t v27 = *(void *)(v3 + 88);
  LOBYTE(v17) = *(unsigned char *)(v3 + 96);
  sub_21903AB98(v27, v17);
  uint64_t v28 = sub_2190FA9B4(v27, v17);
  sub_21903AC64(v27, v17);
  uint64_t v29 = *(void *)(v3 + 104);
  char v30 = *(unsigned char *)(v3 + 112);
  sub_21903AB98(v29, v30);
  uint64_t v31 = sub_2190FA794(v29, v30);
  sub_21903AC64(v29, v30);
  double v32 = *(double *)(v3 + 40);
  sub_21915AFB8();
  sub_2190090C4(v3, (uint64_t)&v108, &qword_267C04288);
  if (v109)
  {
    sub_219018288(&v108, (uint64_t)&v99);
    uint64_t v33 = *((void *)&v100 + 1);
    uint64_t v34 = v101;
    id v35 = __swift_project_boxed_opaque_existential_1(&v99, *((uint64_t *)&v100 + 1));
    uint64_t v36 = sub_21914CA08((uint64_t)v35, v28, v31, 1, (uint64_t)v25, v33, v34, v32);
    uint64_t v38 = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    if (v36)
    {
      uint64_t v39 = v38;
      uint64_t v40 = *(void *)(v3 + 48);
      uint64_t v41 = *(void *)(v3 + 56);
      uint64_t v42 = *(void *)(v3 + 64);
      uint64_t v43 = *(void *)(v3 + 72);
      uint64_t v44 = *(void *)(v3 + 80);
      sub_219062A84(v36);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_2190D2E3C(v36, v39, v40, v41, v42, v43, v44, (uint64_t)v19);
      uint64_t v45 = v94;
      swift_getWitnessTable();
      uint64_t v46 = v77;
      sub_218FFDE04((uint64_t)v19, v45, v77);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v78 + 8);
      v47(v19, v45);
      sub_218FFDE04(v46, v45, (uint64_t)v19);
      swift_getWitnessTable();
      uint64_t v48 = (uint64_t)v90;
      sub_219050FE4((uint64_t)v19, v45);
      sub_21903F788(v36);
      v47(v19, v45);
      v47((char *)v46, v45);
      uint64_t v49 = v95;
      uint64_t v50 = v92;
      uint64_t v51 = v91;
      goto LABEL_9;
    }
  }
  else
  {
    sub_218FFE158((uint64_t)&v108, &qword_267C04288);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  sub_2190090C4(v3, (uint64_t)&v99, &qword_267C04288);
  uint64_t v76 = v12;
  if (*((void *)&v100 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06188);
    uint64_t v52 = sub_219157688();
    uint64_t v53 = (uint64_t)v80;
    int v54 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v53, v54 ^ 1u, 1, v52);
  }
  else
  {
    sub_218FFE158((uint64_t)&v99, &qword_267C04288);
    uint64_t v55 = sub_219157688();
    uint64_t v53 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v80, 1, 1, v55);
  }
  uint64_t v56 = v89;
  uint64_t v57 = v83;
  uint64_t v58 = v82;
  uint64_t v59 = (uint64_t)v81;
  uint64_t v60 = v79;
  sub_2190090C4(v53, v85, &qword_267C052F8);
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(&v99, v3, v57);
  uint64_t v61 = v84;
  sub_2190090C4(v53, v84, &qword_267C052F8);
  unint64_t v62 = (*(unsigned __int8 *)(v60 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v53;
  uint64_t v65 = v93;
  *(void *)(v63 + 16) = v96;
  *(void *)(v63 + 24) = v65;
  long long v66 = v106;
  *(_OWORD *)(v63 + 128) = v105;
  *(_OWORD *)(v63 + 144) = v66;
  *(void *)(v63 + 160) = v107;
  long long v67 = v102;
  *(_OWORD *)(v63 + 64) = v101;
  *(_OWORD *)(v63 + 80) = v67;
  long long v68 = v104;
  *(_OWORD *)(v63 + 96) = v103;
  *(_OWORD *)(v63 + 112) = v68;
  long long v69 = v100;
  *(_OWORD *)(v63 + 32) = v99;
  *(_OWORD *)(v63 + 48) = v69;
  sub_2190D6360(v61, v63 + v62);
  swift_retain();
  sub_219157A18();
  swift_getWitnessTable();
  uint64_t v70 = v88;
  sub_218FFDE04(v59, v56, v88);
  id v71 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v71(v59, v56);
  sub_218FFDE04(v70, v56, v59);
  uint64_t v72 = v94;
  swift_getWitnessTable();
  uint64_t v48 = (uint64_t)v90;
  sub_218FFCBB0(v59, v72, v56);
  v71(v59, v56);
  v71(v70, v56);
  sub_218FFE158(v64, &qword_267C052F8);
  uint64_t v50 = v92;
  uint64_t v51 = v91;
  uint64_t v49 = v95;
LABEL_9:
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v97 = v73;
  uint64_t v98 = v74;
  swift_getWitnessTable();
  sub_218FFDE04(v48, v50, v49);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v48, v50);
}

uint64_t sub_2190D2E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v12 = sub_219157EE8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for _AsyncTaskImage();
  uint64_t v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_2190D40A0((uint64_t)v29);
  uint64_t v17 = v16[10];
  uint64_t v31 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06190);
  sub_219158FE8();
  *(_OWORD *)(a8 + v17) = v29[0];
  uint64_t v18 = a8 + v16[15];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 8) = 0;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F18C38], v12);
  uint64_t result = sub_219158FE8();
  uint64_t v20 = (void *)(a8 + v16[11]);
  *uint64_t v20 = a1;
  v20[1] = a2;
  *(void *)(a8 + v16[12]) = a3;
  uint64_t v21 = (void *)(a8 + v16[13]);
  uint64_t v22 = v26;
  *uint64_t v21 = v25;
  v21[1] = v22;
  uint64_t v23 = (void *)(a8 + v16[14]);
  uint64_t v24 = v28;
  *uint64_t v23 = v27;
  v23[1] = v24;
  return result;
}

uint64_t sub_2190D300C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v107 = a5;
  uint64_t v142 = a4;
  uint64_t v143 = a3;
  uint64_t v138 = a2;
  uint64_t v133 = a1;
  uint64_t v132 = a6;
  uint64_t v111 = sub_219157EE8();
  unint64_t v144 = *(void **)(v111 - 8);
  unint64_t v112 = v144[8];
  MEMORY[0x270FA5388](v111);
  uint64_t v110 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  uint64_t v139 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v139 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v109 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v11);
  long long v104 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_219157F48();
  uint64_t v121 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v136 = (char *)&v100 - v14;
  uint64_t v114 = v13;
  uint64_t v15 = sub_219157F48();
  uint64_t v124 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v116 = (char *)&v100 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06150);
  uint64_t v18 = MEMORY[0x263F1A240];
  uint64_t v157 = a5;
  uint64_t v158 = MEMORY[0x263F1A240];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v155 = WitnessTable;
  uint64_t v156 = v18;
  uint64_t v19 = v15;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_2190D60AC(&qword_267C06158, &qword_267C06150, (void (*)(void))sub_2190D6058);
  *(void *)&long long v146 = v15;
  *((void *)&v146 + 1) = v17;
  uint64_t v117 = v15;
  uint64_t v120 = v17;
  *(void *)&long long v147 = v20;
  *((void *)&v147 + 1) = v21;
  uint64_t v119 = v20;
  uint64_t v118 = v21;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v130 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v137 = (char *)&v100 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06168);
  *(void *)&long long v146 = v19;
  *((void *)&v146 + 1) = v17;
  *(void *)&long long v147 = v20;
  *((void *)&v147 + 1) = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = sub_2190D60AC(&qword_267C06170, &qword_267C06168, (void (*)(void))sub_2190D6124);
  uint64_t v131 = OpaqueTypeMetadata2;
  *(void *)&long long v146 = OpaqueTypeMetadata2;
  *((void *)&v146 + 1) = v24;
  uint64_t v129 = v24;
  uint64_t v126 = OpaqueTypeConformance2;
  *(void *)&long long v147 = OpaqueTypeConformance2;
  *((void *)&v147 + 1) = v26;
  uint64_t v125 = v26;
  uint64_t v128 = swift_getOpaqueTypeMetadata2();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v122 = (char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v29 = MEMORY[0x270FA5388](v28);
  uint64_t v123 = (uint64_t)&v100 - v30;
  uint64_t v31 = v138;
  uint64_t v32 = v133;
  (*(void (**)(uint64_t, double))(v138 + 72))(v133, v29);
  uint64_t v33 = v109;
  sub_2190090C4(v143, v109, &qword_267C052F8);
  uint64_t v34 = v144;
  id v35 = (void (*)(char *, uint64_t, uint64_t))v144[2];
  long long v105 = v144 + 2;
  long long v106 = v35;
  uint64_t v36 = v110;
  uint64_t v37 = v111;
  v35(v110, v32, v111);
  uint64_t v38 = v142;
  uint64_t v39 = v107;
  uint64_t v134 = type metadata accessor for _MediaArtworkImage();
  uint64_t v40 = *(void *)(v134 - 8);
  uint64_t v141 = *(void (**)(long long *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v140 = v40 + 16;
  v141(&v146, v31, v134);
  uint64_t v41 = *(unsigned __int8 *)(v139 + 80);
  uint64_t v42 = (v41 + 32) & ~v41;
  uint64_t v108 = v42 + v10;
  uint64_t v139 = v42;
  uint64_t v43 = v41 | 7;
  uint64_t v135 = v41 | 7;
  uint64_t v44 = *((unsigned __int8 *)v34 + 80);
  uint64_t v45 = (v42 + v10 + v44) & ~v44;
  uint64_t v102 = v43 | v44;
  uint64_t v103 = v45;
  unint64_t v46 = (v112 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v112 = v46 + 136;
  unint64_t v100 = v46;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v38;
  *(void *)(v47 + 24) = v39;
  sub_2190D6360(v33, v47 + v42);
  uint64_t v48 = v47 + v45;
  uint64_t v49 = (void (*)(uint64_t, char *, uint64_t))v144[4];
  v144 += 4;
  long long v101 = v49;
  uint64_t v50 = v36;
  v49(v48, v36, v37);
  unint64_t v51 = v47 + v46;
  long long v52 = v153;
  *(_OWORD *)(v51 + 96) = v152;
  *(_OWORD *)(v51 + 112) = v52;
  *(void *)(v51 + 128) = v154;
  long long v53 = v149;
  *(_OWORD *)(v51 + 32) = v148;
  *(_OWORD *)(v51 + 48) = v53;
  long long v54 = v151;
  *(_OWORD *)(v51 + 64) = v150;
  *(_OWORD *)(v51 + 80) = v54;
  long long v55 = v147;
  *(_OWORD *)unint64_t v51 = v146;
  *(_OWORD *)(v51 + 16) = v55;
  uint64_t v56 = v39;
  uint64_t v57 = v104;
  sub_219158DE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v57, v38);
  uint64_t v58 = v143;
  uint64_t v59 = v33;
  sub_2190090C4(v143, v33, &qword_267C052F8);
  uint64_t v60 = v37;
  v106(v50, v133, v37);
  uint64_t v61 = v138;
  uint64_t v62 = v134;
  v141(&v146, v138, v134);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v38;
  *(void *)(v63 + 24) = v56;
  sub_2190D6360(v59, v63 + v139);
  v101(v63 + v103, v50, v60);
  unint64_t v64 = v63 + v100;
  uint64_t v65 = v56;
  long long v66 = v153;
  *(_OWORD *)(v64 + 96) = v152;
  *(_OWORD *)(v64 + 112) = v66;
  *(void *)(v64 + 128) = v154;
  long long v67 = v149;
  *(_OWORD *)(v64 + 32) = v148;
  *(_OWORD *)(v64 + 48) = v67;
  long long v68 = v151;
  *(_OWORD *)(v64 + 64) = v150;
  *(_OWORD *)(v64 + 80) = v68;
  long long v69 = v147;
  *(_OWORD *)unint64_t v64 = v146;
  *(_OWORD *)(v64 + 16) = v69;
  uint64_t v70 = v116;
  uint64_t v71 = v114;
  uint64_t v72 = v136;
  sub_219158AB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v72, v71);
  id v145 = (id)sub_219157ED8();
  sub_2190090C4(v58, v59, &qword_267C052F8);
  v141(&v146, v61, v62);
  unint64_t v73 = (v108 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = v142;
  *(void *)(v74 + 24) = v65;
  sub_2190D6360(v59, v74 + v139);
  unint64_t v75 = v74 + v73;
  long long v76 = v153;
  *(_OWORD *)(v75 + 96) = v152;
  *(_OWORD *)(v75 + 112) = v76;
  *(void *)(v75 + 128) = v154;
  long long v77 = v149;
  *(_OWORD *)(v75 + 32) = v148;
  *(_OWORD *)(v75 + 48) = v77;
  long long v78 = v151;
  *(_OWORD *)(v75 + 64) = v150;
  *(_OWORD *)(v75 + 80) = v78;
  long long v79 = v147;
  *(_OWORD *)unint64_t v75 = v146;
  *(_OWORD *)(v75 + 16) = v79;
  uint64_t v80 = v117;
  sub_219158DF8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v70, v80);
  uint64_t v81 = sub_219157EC8();
  if (v81)
  {
    uint64_t v82 = (void *)v81;
    uint64_t v83 = (void *)sub_2191575F8();
  }
  else
  {
    uint64_t v83 = 0;
  }
  id v145 = v83;
  sub_2190090C4(v143, v59, &qword_267C052F8);
  v141(&v146, v138, v134);
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = v142;
  *(void *)(v84 + 24) = v65;
  sub_2190D6360(v59, v84 + v139);
  unint64_t v85 = v84 + v73;
  long long v86 = v153;
  *(_OWORD *)(v85 + 96) = v152;
  *(_OWORD *)(v85 + 112) = v86;
  *(void *)(v85 + 128) = v154;
  long long v87 = v149;
  *(_OWORD *)(v85 + 32) = v148;
  *(_OWORD *)(v85 + 48) = v87;
  long long v88 = v151;
  *(_OWORD *)(v85 + 64) = v150;
  *(_OWORD *)(v85 + 80) = v88;
  long long v89 = v147;
  *(_OWORD *)unint64_t v85 = v146;
  *(_OWORD *)(v85 + 16) = v89;
  uint64_t v90 = (uint64_t)v122;
  uint64_t v91 = v131;
  uint64_t v92 = v129;
  uint64_t v93 = v126;
  uint64_t v94 = v125;
  uint64_t v95 = v137;
  sub_219158DF8();
  swift_release();

  (*(void (**)(char *, uint64_t))(v130 + 8))(v95, v91);
  *(void *)&long long v146 = v91;
  *((void *)&v146 + 1) = v92;
  *(void *)&long long v147 = v93;
  *((void *)&v147 + 1) = v94;
  swift_getOpaqueTypeConformance2();
  uint64_t v96 = v123;
  uint64_t v97 = v128;
  sub_218FFDE04(v90, v128, v123);
  uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
  v98(v90, v97);
  sub_218FFDE04(v96, v97, v132);
  return ((uint64_t (*)(uint64_t, uint64_t))v98)(v96, v97);
}

void sub_2190D3D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = sub_219157EE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_219157688();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1, 1, v13) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    int v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
    int v15 = *MEMORY[0x263F18C38];
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v14 == v15)
    {
      type metadata accessor for _MediaArtworkImage();
      sub_2190D6A5C(a6);
    }
  }
}

void sub_2190D3EBC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = sub_219157688();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a3, 1, v5) != 1
    && v4 != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C061A0);
    sub_219158FF8();
    if (v7)
    {
      if (v7 != (void *)3) {
        sub_2190D6A3C(v7);
      }
    }
    else
    {
      type metadata accessor for _MediaArtworkImage();
      sub_2190D6A5C((void *)1);
    }
  }
}

void sub_2190D3FA0(uint64_t a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = sub_219157688();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a3, 1, v5) != 1
    && v4 != 0)
  {
    id v7 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C061A0);
    sub_219158FF8();
    if (v8)
    {
      if (v8 != (void *)3) {
        sub_2190D6A3C(v8);
      }
    }
    else
    {
      type metadata accessor for _MediaArtworkImage();
      sub_2190D6A5C(v4);
    }
  }
}

uint64_t sub_2190D4094(uint64_t *a1, unint64_t *a2)
{
  return sub_2190D5F18(*a1, *a2);
}

uint64_t sub_2190D40A0(uint64_t a1)
{
  sub_2190090C4(a1, (uint64_t)v3, &qword_267C06198);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06198);
  sub_219158FE8();
  return sub_218FFE158(a1, &qword_267C06198);
}

void sub_2190D410C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C061A0);
  sub_219158FF8();
  if (v3 != (void *)3)
  {
    (*(void (**)())(v1 + *(int *)(a1 + 52)))();
    sub_2190D6A3C(v3);
  }
}

uint64_t sub_2190D4190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = sub_21915B018();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = sub_219158ED8();
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v33 = (char *)&v32 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06238);
  uint64_t v36 = sub_219157F48();
  uint64_t v40 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  id v35 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v37 = (uint64_t)&v32 - v14;
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v44 = v9;
  uint64_t v45 = v15;
  uint64_t v46 = v2;
  sub_219158EC8();
  uint64_t v16 = v2 + *(int *)(a1 + 60);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_21903AB98(*(void *)v16, v18);
  uint64_t v19 = sub_2190FA794(v17, v18);
  sub_21903AC64(v17, v18);
  sub_2190D1E28(v19, (uint64_t)v50);
  swift_bridgeObjectRelease();
  uint64_t v20 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v34, v2, a1);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v9;
  *(void *)(v22 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22 + v21, v20, a1);
  uint64_t v49 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = v38;
  sub_21911E598();
  uint64_t v25 = (uint64_t)v35;
  uint64_t v26 = v33;
  sub_219158CF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v42);
  sub_219020324((uint64_t)v50);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v10);
  uint64_t v27 = sub_218FFDF90(&qword_267C06250, &qword_267C06238);
  uint64_t v47 = WitnessTable;
  uint64_t v48 = v27;
  uint64_t v28 = v36;
  swift_getWitnessTable();
  uint64_t v29 = v37;
  sub_218FFDE04(v25, v28, v37);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v30(v25, v28);
  sub_218FFDE04(v29, v28, v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v30)(v29, v28);
}

uint64_t sub_2190D4680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v18 = sub_219157EE8();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for _AsyncTaskImage() + 56));
  __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  sub_219158FF8();
  v15(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  sub_218FFDE04((uint64_t)v11, a2, (uint64_t)v14);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, a2);
  sub_218FFDE04((uint64_t)v14, a2, v19);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, a2);
}

uint64_t sub_2190D4888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[41] = a2;
  v3[42] = a3;
  unsigned char v3[40] = a1;
  uint64_t v4 = type metadata accessor for _AsyncTaskImage();
  v3[43] = v4;
  v3[44] = *(void *)(v4 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = sub_21915AF98();
  v3[47] = sub_21915AF88();
  uint64_t v6 = sub_21915AF48();
  v3[48] = v6;
  v3[49] = v5;
  return MEMORY[0x270FA2498](sub_2190D4984, v6, v5);
}

uint64_t sub_2190D4984()
{
  uint64_t v1 = *(void *)(v0 + 320) + *(int *)(*(void *)(v0 + 344) + 60);
  uint64_t v2 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  sub_21903AB98(*(void *)v1, v3);
  uint64_t v4 = sub_2190FA794(v2, v3);
  sub_21903AC64(v2, v3);
  sub_2190D1E28(v4, v0 + 176);
  swift_bridgeObjectRelease();
  sub_219020260(v0 + 176, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06258);
  sub_219158FF8();
  sub_2190090C4(v0 + 96, v0 + 16, &qword_267C06198);
  sub_2190090C4(v0 + 136, v0 + 56, &qword_267C06198);
  if (!*(void *)(v0 + 40))
  {
    sub_218FFE158(v0 + 136, &qword_267C06198);
    sub_218FFE158(v0 + 96, &qword_267C06198);
    if (!*(void *)(v0 + 80))
    {
      uint64_t v10 = *(void *)(v0 + 352);
      uint64_t v9 = *(void *)(v0 + 360);
      uint64_t v11 = *(void *)(v0 + 344);
      uint64_t v12 = *(void *)(v0 + 320);
      sub_218FFE158(v0 + 16, &qword_267C06198);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v20 = *(void *)(v0 + 352);
    uint64_t v19 = *(void *)(v0 + 360);
    uint64_t v21 = *(void *)(v0 + 344);
    uint64_t v22 = *(void *)(v0 + 320);
    sub_218FFE158(v0 + 16, &qword_267C06260);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v22, v21);
LABEL_14:
    (*(void (**)(void, void))(*(void *)(v0 + 352) + 8))(*(void *)(v0 + 360), *(void *)(v0 + 344));
    goto LABEL_15;
  }
  sub_2190090C4(v0 + 16, v0 + 256, &qword_267C06198);
  if (!*(void *)(v0 + 80))
  {
    sub_218FFE158(v0 + 136, &qword_267C06198);
    sub_218FFE158(v0 + 96, &qword_267C06198);
    sub_219020324(v0 + 256);
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v29 = *(void *)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 320);
  long long v7 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 232) = v7;
  *(void *)(v0 + 248) = *(void *)(v0 + 88);
  char v8 = MEMORY[0x21D481E60](v0 + 256, v0 + 216);
  sub_219020324(v0 + 216);
  sub_218FFE158(v0 + 136, &qword_267C06198);
  sub_218FFE158(v0 + 96, &qword_267C06198);
  sub_219020324(v0 + 256);
  sub_218FFE158(v0 + 16, &qword_267C06198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v30, v6, v29);
  if ((v8 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v14 = *(void *)(v0 + 352);
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v15 = *(void *)(v0 + 344);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v13 + *(int *)(v15 + 40));
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C061A0);
  sub_219158FF8();
  uint64_t v16 = *(void **)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  if (v16 == (void *)3 || (sub_2190D6A3C(v16), v16 != (void *)1))
  {
LABEL_15:
    uint64_t v24 = *(void *)(v0 + 328);
    uint64_t v23 = *(void *)(v0 + 336);
    uint64_t v25 = *(void *)(v0 + 320);
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v26;
    v26[2] = v24;
    void v26[3] = v23;
    v26[4] = v25;
    v26[5] = v0 + 176;
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v27;
    v27[2] = v24;
    v27[3] = v23;
    v27[4] = v25;
    *(void *)(v0 + 416) = sub_21915AF88();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_2190D4DC4;
    return MEMORY[0x270FA2338]();
  }
  swift_release();
  sub_219020324(v0 + 176);
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_2190D4DC4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 392);
  uint64_t v3 = *(void *)(v1 + 384);
  return MEMORY[0x270FA2498](sub_2190D4F48, v3, v2);
}

uint64_t sub_2190D4F48()
{
  swift_release();
  sub_219020324(v0 + 176);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2190D4FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03C50);
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C042B0);
  v5[21] = v7;
  v5[22] = *(void *)(v7 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = sub_21915AF98();
  v5[25] = sub_21915AF88();
  uint64_t v9 = sub_21915AF48();
  v5[26] = v9;
  v5[27] = v8;
  return MEMORY[0x270FA2498](sub_2190D5120, v9, v8);
}

uint64_t sub_2190D5120()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[14];
  sub_219020260(v0[15], (uint64_t)(v0 + 2));
  uint64_t v5 = type metadata accessor for _AsyncTaskImage();
  v0[28] = v5;
  sub_2190090C4((uint64_t)(v0 + 2), (uint64_t)(v0 + 7), &qword_267C06198);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06258);
  sub_219159008();
  sub_218FFE158((uint64_t)(v0 + 2), &qword_267C06198);
  sub_2190D80E8(0, v5);
  (*(void (**)(void))(v4 + *(int *)(v5 + 44)))();
  sub_219159478();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[29] = sub_21915AF88();
  uint64_t v6 = sub_218FFDF90((unint64_t *)&qword_267C042B8, &qword_267C042B0);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[30] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2190D52F4;
  uint64_t v8 = v0[21];
  return MEMORY[0x270FA1E80](v0 + 12, v8, v6);
}

uint64_t sub_2190D52F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_21915AF48();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_2190D5728;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_21915AF48();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_2190D548C;
  }
  return MEMORY[0x270FA2498](v7, v4, v6);
}

uint64_t sub_2190D548C()
{
  swift_release();
  v0[32] = v0[12];
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  return MEMORY[0x270FA2498](sub_2190D54F8, v1, v2);
}

uint64_t sub_2190D54F8()
{
  uint64_t v1 = *(void *)(v0 + 256);
  if (!v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
    swift_release();
    if ((sub_21915B038() & 1) == 0) {
      sub_2190D80E8((void *)1, *(void *)(v0 + 224));
    }
    goto LABEL_6;
  }
  if (sub_21915B038())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 176) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 168));
    swift_release();
    swift_release();
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = swift_task_alloc();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 128);
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v1;
  sub_219157FB8();
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 232) = sub_21915AF88();
  uint64_t v6 = sub_218FFDF90((unint64_t *)&qword_267C042B8, &qword_267C042B0);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2190D52F4;
  uint64_t v8 = *(void *)(v0 + 168);
  return MEMORY[0x270FA1E80](v0 + 96, v8, v6);
}

uint64_t sub_2190D5728()
{
  v0[13] = v0[31];
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD03900);
  swift_willThrowTypedImpl();
  swift_release();
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  return MEMORY[0x270FA2498](sub_2190D57BC, v1, v2);
}

uint64_t sub_2190D57BC()
{
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 112);
  long long v10 = *(_OWORD *)(v0 + 128);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v7 = swift_task_alloc();
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v1;
  sub_219157FB8();
  swift_task_dealloc();
  sub_2190D80E8(v1, v2);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2190D58EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_219157EE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v12 - v9;
  *(void *)((char *)v12 - v9) = a2;
  (*(void (**)(char *, void, uint64_t, double))(v4 + 104))((char *)v12 - v9, *MEMORY[0x263F18C58], v3, v8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  sub_219159008();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_2190D5A50(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_219157EE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v13 - v9;
  *(void *)((char *)v13 - v9) = a2;
  (*(void (**)(char *, void, uint64_t, double))(v4 + 104))((char *)v13 - v9, *MEMORY[0x263F18C50], v3, v8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  id v11 = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  sub_219159008();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_2190D5BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for _AsyncTaskImage();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04280);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21915B018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_21915AF98();
  uint64_t v14 = sub_21915AF88();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  uint64_t v17 = MEMORY[0x263F8F500];
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = v17;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v6);
  sub_2190427E4((uint64_t)v12, (uint64_t)&unk_267C06280, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_2190D5DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  sub_21915AF98();
  v6[8] = sub_21915AF88();
  uint64_t v8 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_2190D5E44, v8, v7);
}

uint64_t sub_2190D5E44()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v2 = type metadata accessor for _AsyncTaskImage();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + *(int *)(v2 + 40));
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C061A0);
  sub_219158FF8();
  uint64_t v3 = *(void *)(v0 + 32);
  if (v3 != 3)
  {
    sub_2190D6A3C(*(id *)(v0 + 32));
    if (!v3) {
      sub_2190D80E8((void *)2, v2);
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2190D5F18(uint64_t a1, unint64_t a2)
{
  char v2 = a2;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2 == 1) {
        return v2 & 1;
      }
      goto LABEL_11;
    }
    if (a1 != 2)
    {
      if (a2 >= 3)
      {
        swift_getErrorValue();
        uint64_t v3 = v12[4];
        uint64_t v4 = v13;
        v12[3] = v13;
        boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v12);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_1Tm, v3, v4);
        swift_getErrorValue();
        uint64_t v6 = v10[4];
        uint64_t v7 = v11;
        v10[3] = v11;
        uint64_t v8 = __swift_allocate_boxed_opaque_existential_1Tm(v10);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v8, v6, v7);
        char v2 = sub_21915A238();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        return v2 & 1;
      }
      goto LABEL_11;
    }
    if (a2 != 2)
    {
LABEL_11:
      char v2 = 0;
      return v2 & 1;
    }
  }
  else if (a2)
  {
    goto LABEL_11;
  }
  char v2 = 1;
  return v2 & 1;
}

unint64_t sub_2190D6058()
{
  unint64_t result = qword_267C06160;
  if (!qword_267C06160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06160);
  }
  return result;
}

uint64_t sub_2190D60AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2190D6124()
{
  unint64_t result = qword_267C06178;
  if (!qword_267C06178)
  {
    sub_2190D617C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06178);
  }
  return result;
}

unint64_t sub_2190D617C()
{
  unint64_t result = qword_267C06180;
  if (!qword_267C06180)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C06180);
  }
  return result;
}

uint64_t type metadata accessor for _AsyncTaskImage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D61D4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8) - 8) + 80);
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  uint64_t v2 = (v1 + 168) & ~v1;
  swift_release();
  swift_release();
  swift_release();
  sub_21903AC64(*(void *)(v0 + 120), *(unsigned char *)(v0 + 128));
  sub_21903AC64(*(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
  uint64_t v3 = *(void **)(v0 + 152);
  if ((unint64_t)v3 >= 4) {

  }
  swift_release();
  uint64_t v4 = sub_219157688();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_2190D6360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190D63C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8) - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_2190D300C(a1, v2 + 32, v8, v5, v6, a2);
}

void sub_2190D6470()
{
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_219157EE8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0 + v2;
  uint64_t v9 = sub_219157688();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  uint64_t v11 = v0 + v7;
  if (*(void *)(v0 + v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v7);
  }
  swift_release();
  swift_release();
  swift_release();
  sub_21903AC64(*(void *)(v11 + 88), *(unsigned char *)(v11 + 96));
  sub_21903AC64(*(void *)(v11 + 104), *(unsigned char *)(v11 + 112));
  uint64_t v12 = *(void **)(v11 + 120);
  if ((unint64_t)v12 >= 4) {

  }
  swift_release();
  return swift_deallocObject();
}

void sub_2190D6690()
{
}

void sub_2190D6698(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_219157EE8() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_2190D3D20(v1 + v6, v1 + v9, v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8), v3, v4, a1);
}

uint64_t sub_2190D67A8(uint64_t a1, uint64_t a2)
{
  return sub_2190D6964(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))sub_2190D3EBC);
}

uint64_t objectdestroy_9Tm_1()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_219157688();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v0 + v3;
  if (*(void *)(v0 + v3 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  }
  swift_release();
  swift_release();
  swift_release();
  sub_21903AC64(*(void *)(v7 + 88), *(unsigned char *)(v7 + 96));
  sub_21903AC64(*(void *)(v7 + 104), *(unsigned char *)(v7 + 112));
  uint64_t v8 = *(void **)(v7 + 120);
  if ((unint64_t)v8 >= 4) {

  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190D694C(uint64_t a1, uint64_t a2)
{
  return sub_2190D6964(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))sub_2190D3FA0);
}

uint64_t sub_2190D6964(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v3 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a3(a1, a2, v3 + v9, v10, v6, v7);
}

void sub_2190D6A3C(id a1)
{
  if (a1 != (id)3) {
    sub_2190D6A4C(a1);
  }
}

void sub_2190D6A4C(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

void sub_2190D6A5C(void *a1)
{
}

id sub_2190D6AC8(id result)
{
  if (result != (id)3) {
    return sub_2190D6AD8(result);
  }
  return result;
}

id sub_2190D6AD8(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void sub_2190D6AE8()
{
  sub_2190D77E8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_2190D6BAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_219157EE8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 28));
    uint64_t v9 = a3[9];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 24);
    swift_retain();
    if (v12)
    {
      uint64_t v13 = *((void *)v11 + 4);
      *((void *)v10 + 3) = v12;
      *((void *)v10 + 4) = v13;
      (**(void (***)(char *, char *, uint64_t))(v12 - 8))(v10, v11, v12);
    }
    else
    {
      long long v15 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v15;
      *((void *)v10 + 4) = *((void *)v11 + 4);
    }
    *((void *)v10 + 5) = *((void *)v11 + 5);
    uint64_t v16 = a3[10];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *(void **)((char *)a2 + v16);
    swift_retain();
    if ((unint64_t)v19 >= 3)
    {
      if (v19 == (void *)3)
      {
        void *v17 = 3;
LABEL_11:
        v17[1] = *((void *)v18 + 1);
        uint64_t v21 = a3[11];
        uint64_t v22 = a3[12];
        uint64_t v23 = (uint64_t *)((char *)a1 + v21);
        uint64_t v24 = (uint64_t *)((char *)a2 + v21);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        *(uint64_t *)((char *)a1 + v22) = *(uint64_t *)((char *)a2 + v22);
        uint64_t v26 = a3[13];
        uint64_t v27 = a3[14];
        uint64_t v28 = (uint64_t *)((char *)a1 + v26);
        uint64_t v29 = (uint64_t *)((char *)a2 + v26);
        uint64_t v30 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v30;
        uint64_t v31 = (uint64_t *)((char *)a1 + v27);
        uint64_t v32 = (uint64_t *)((char *)a2 + v27);
        uint64_t v33 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v33;
        uint64_t v34 = a3[15];
        id v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = *(void *)v36;
        char v38 = v36[8];
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_21903AB98(v37, v38);
        *(void *)id v35 = v37;
        v35[8] = v38;
        return a1;
      }
      id v20 = v19;
    }
    void *v17 = v19;
    goto LABEL_11;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_2190D6DD0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_219157EE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  swift_release();
  if (*(void *)(a1 + a2[9] + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
  }
  swift_release();
  int v5 = *(void **)(a1 + a2[10]);
  if ((unint64_t)v5 >= 4) {

  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_21903AC64(*(void *)(a1 + a2[15]), *(unsigned char *)(a1 + a2[15] + 8));
}

uint64_t sub_2190D6EDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219157EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 24);
  swift_retain();
  if (v11)
  {
    uint64_t v12 = *(void *)(v10 + 32);
    *(void *)(v9 + 24) = v11;
    *(void *)(v9 + 32) = v12;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(v9, v10, v11);
  }
  else
  {
    long long v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v13;
    *(void *)(v9 + 32) = *(void *)(v10 + 32);
  }
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  uint64_t v14 = a3[10];
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void **)(a2 + v14);
  swift_retain();
  if ((unint64_t)v17 < 3) {
    goto LABEL_8;
  }
  if (v17 != (void *)3)
  {
    id v18 = v17;
LABEL_8:
    *long long v15 = v17;
    goto LABEL_9;
  }
  *long long v15 = 3;
LABEL_9:
  v15[1] = *(void *)(v16 + 8);
  uint64_t v19 = a3[11];
  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v24 = a3[13];
  uint64_t v25 = a3[14];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[15];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21903AB98(v35, v36);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v36;
  return a1;
}

uint64_t sub_2190D70B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219157EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  swift_retain();
  swift_release();
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *(void *)(a2 + v8 + 24);
  if (*(void *)(a1 + v8 + 24))
  {
    if (v11)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v9, v10);
    }
    else
    {
      sub_219020324(v9);
      uint64_t v12 = v10[4];
      long long v13 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v13;
      *(void *)(v9 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(void *)(v9 + 24) = v11;
    *(void *)(v9 + 32) = v10[4];
    (**(void (***)(uint64_t, long long *))(v11 - 8))(v9, (long long *)v10);
  }
  else
  {
    long long v14 = *(_OWORD *)v10;
    long long v15 = *((_OWORD *)v10 + 1);
    *(void *)(v9 + 32) = v10[4];
    *(_OWORD *)uint64_t v9 = v14;
    *(_OWORD *)(v9 + 16) = v15;
  }
  *(void *)(v9 + 40) = v10[5];
  swift_retain();
  swift_release();
  uint64_t v16 = a3[10];
  uint64_t v17 = (uint64_t *)(a1 + v16);
  id v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *(void **)(a1 + v16);
  uint64_t v20 = *(void **)(a2 + v16);
  if (v19 == (void *)3)
  {
    if ((unint64_t)v20 >= 3)
    {
      if (v20 == (void *)3)
      {
        uint64_t v21 = 3;
LABEL_21:
        uint64_t *v17 = v21;
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v20 == (void *)3)
  {
    sub_2190D1B74((void **)(a1 + v16));
LABEL_20:
    uint64_t v21 = *v18;
    goto LABEL_21;
  }
  if ((unint64_t)v19 >= 3)
  {
    if ((unint64_t)v20 >= 3)
    {
      id v43 = v20;
      uint64_t v44 = (void *)*v17;
      uint64_t *v17 = (uint64_t)v20;

      goto LABEL_22;
    }

    goto LABEL_20;
  }
  if ((unint64_t)v20 >= 3) {
LABEL_16:
  }
    id v22 = v20;
LABEL_17:
  uint64_t *v17 = (uint64_t)v20;
LABEL_22:
  v17[1] = v18[1];
  swift_retain();
  swift_release();
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[13];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_release();
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  uint64_t v35 = a3[15];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_21903AB98(*(void *)v37, v39);
  uint64_t v40 = *(void *)v36;
  char v41 = *(unsigned char *)(v36 + 8);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = v39;
  sub_21903AC64(v40, v41);
  return a1;
}

uint64_t sub_2190D7364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219157EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  uint64_t v8 = a3[9];
  uint64_t v9 = a3[10];
  uint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (long long *)(a2 + v8);
  long long v12 = v11[2];
  long long v13 = *v11;
  v10[1] = v11[1];
  v10[2] = v12;
  *uint64_t v10 = v13;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t sub_2190D7454(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219157EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  *(void *)(a1 + *(int *)(v7 + 28)) = *(void *)(a2 + *(int *)(v7 + 28));
  swift_release();
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  if (*(void *)(a1 + v8 + 24))
  {
    if (*(void *)(v10 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v9);
    }
    else {
      sub_219020324(v9);
    }
  }
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  uint64_t v12 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v12;
  swift_release();
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (unint64_t *)(a2 + v13);
  uint64_t v16 = *(void **)(a1 + v13);
  unint64_t v17 = *(void *)(a2 + v13);
  if (v16 == (void *)3)
  {
    if (v17 == 3) {
      unint64_t v17 = 3;
    }
    goto LABEL_14;
  }
  if (v17 == 3)
  {
    sub_2190D1B74((void **)v14);
LABEL_13:
    unint64_t v17 = *v15;
    goto LABEL_14;
  }
  if ((unint64_t)v16 >= 3)
  {
    if (v17 >= 3)
    {
      *(void *)uint64_t v14 = v17;

      goto LABEL_15;
    }

    goto LABEL_13;
  }
LABEL_14:
  *(void *)uint64_t v14 = v17;
LABEL_15:
  *(void *)(v14 + 8) = v15[1];
  swift_release();
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  swift_release();
  uint64_t v18 = a3[15];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  uint64_t v22 = *(void *)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_21903AC64(v22, v23);
  return a1;
}

uint64_t sub_2190D763C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190D7650);
}

uint64_t sub_2190D7650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2190D7714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190D7728);
}

uint64_t sub_2190D7728(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

void sub_2190D77E8()
{
  if (!qword_267C06230)
  {
    sub_219157EE8();
    unint64_t v0 = sub_219159028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C06230);
    }
  }
}

uint64_t sub_2190D7840()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190D7A9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190D7AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190D4680(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_2190D7AEC()
{
  uint64_t v1 = (int *)type metadata accessor for _AsyncTaskImage();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_219157EE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  swift_release();
  if (*(void *)(v2 + v1[9] + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v2 + v1[9]);
  }
  swift_release();
  uint64_t v4 = *(void **)(v2 + v1[10]);
  if ((unint64_t)v4 >= 4) {

  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21903AC64(*(void *)(v2 + v1[15]), *(unsigned char *)(v2 + v1[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_2190D7C88()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for _AsyncTaskImage() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_218FF9AE0;
  return sub_2190D4888(v5, v2, v3);
}

uint64_t sub_2190D7D70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_218FF9AE0;
  return sub_2190D4FC0(a1, v7, v6, v4, v5);
}

uint64_t sub_2190D7E30()
{
  return sub_2190D5BB4(v0[4], v0[2], v0[3]);
}

uint64_t sub_2190D7E3C()
{
  uint64_t v1 = (int *)type metadata accessor for _AsyncTaskImage();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_219157EE8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C061A8);
  swift_release();
  if (*(void *)(v0 + v2 + v1[9] + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v3 + v1[9]);
  }
  swift_release();
  uint64_t v5 = *(void **)(v3 + v1[10]);
  if ((unint64_t)v5 >= 4) {

  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21903AC64(*(void *)(v3 + v1[15]), *(unsigned char *)(v3 + v1[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_2190D7FE0(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for _AsyncTaskImage() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_21901C978;
  return sub_2190D5DA8(a1, v7, v8, v9, v4, v5);
}

void sub_2190D80E8(void *a1, uint64_t a2)
{
}

uint64_t sub_2190D8158()
{
  return sub_2190D5A50(*(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_2190D8178()
{
  return sub_2190D58EC(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_2190D8198()
{
  return sub_2190D2040();
}

uint64_t sub_2190D81A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190D8274()
{
  type metadata accessor for FlowStackAuthority();
  uint64_t result = sub_219157A08();
  if (v1 <= 0x3F)
  {
    sub_21915B378();
    uint64_t result = sub_219157A08();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2190D8368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  double v5 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  sub_2191579A8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_2190D8458()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v11 = sub_21915B378();
  uint64_t v2 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v5 = sub_219159C18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159528();
  sub_21915AA68();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F50A10], v5);
  sub_21915A698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v4, 1, 1, v1);
  sub_2190D946C((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v11);
}

uint64_t sub_2190D8724(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_21915B378();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v19 = sub_219159C18();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2191595A8();
  MEMORY[0x270FA5388](v11 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  uint64_t v18 = v1;
  uint64_t v12 = sub_21914A37C(a1, v4, *(void *)(v3 + 88), *(void *)(v3 + 96));
  uint64_t v23 = MEMORY[0x263F8D310];
  v22[0] = v12;
  v22[1] = v13;
  sub_219159548();
  sub_219088D30((uint64_t)v22);
  sub_219159588();
  sub_2191595B8();
  sub_21915AA68();
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v14 = v19;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F50A10], v19);
  sub_21915A698();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v4);
  sub_2190D946C((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v21);
}

BOOL sub_2190D8AF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = sub_21915B378();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  sub_2190D8D24();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v5, 1, v1) != 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_2190D8C0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2190D8CE4()
{
  uint64_t v0 = swift_allocObject();
  sub_2190D8E44();
  return v0;
}

uint64_t sub_2190D8D24()
{
  return swift_release();
}

uint64_t sub_2190D8DFC()
{
  return sub_2190D8D24();
}

uint64_t sub_2190D8E20(uint64_t a1)
{
  return sub_2190D946C(a1);
}

uint64_t *sub_2190D8E44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 80);
  sub_21915B378();
  uint64_t v4 = sub_219157A08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v16[-v6];
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v16[-v10];
  uint64_t v12 = (uint64_t)v0 + *(void *)(v2 + 112);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, double))(*(void *)(v3 - 8) + 56))(&v16[-v10], 1, 1, v3, v9);
  sub_2190D90A4((uint64_t)v11);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v12, v7, v4);
  type metadata accessor for FlowStackAuthority();
  uint64_t v13 = (uint64_t *)sub_2191492E4();
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v17 = v13;
  sub_2190D8368((uint64_t)&v17, v14);
  swift_endAccess();
  return v1;
}

uint64_t sub_2190D90A4(uint64_t a1)
{
  uint64_t v2 = sub_21915B378();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - v5, a1, v2, v4);
  sub_2190D8368((uint64_t)v6, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_2190D9198()
{
  return sub_2191579F8();
}

uint64_t sub_2190D926C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  type metadata accessor for FlowStackAuthority();
  uint64_t v2 = sub_219157A08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  sub_21915B378();
  uint64_t v4 = sub_219157A08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_2190D9394()
{
  sub_2190D926C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FlowStackSheetAuthority()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D9404()
{
  return sub_2190D8D24();
}

uint64_t sub_2190D9428(uint64_t a1)
{
  return sub_2190D946C(a1);
}

uint64_t sub_2190D944C()
{
  return 24;
}

__n128 sub_2190D9458(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2190D946C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_21915B378();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - v7;
  void v12[4] = v4;
  uint64_t v13 = *(void *)(v3 + 88);
  uint64_t v9 = v13;
  uint64_t v14 = *(void *)(v3 + 96);
  uint64_t v10 = v14;
  swift_getKeyPath();
  v12[0] = v4;
  v12[1] = v9;
  void v12[2] = v10;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  swift_retain();
  sub_2191579F8();
  sub_2190D8C0C();
  sub_219148960();
  return swift_release();
}

uint64_t sub_2190D95F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2190D8C0C();
  *a1 = result;
  return result;
}

uint64_t sub_2190D9620()
{
  return sub_2190D9198();
}

uint64_t sub_2190D964C()
{
  return 24;
}

__n128 sub_2190D9658(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2190D966C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190D9698(uint64_t a1)
{
  return sub_2190D96F8(a1, sub_21914931C);
}

uint64_t sub_2190D96B0(uint64_t a1)
{
  return sub_2190D96F8(a1, sub_2191493F4);
}

uint64_t sub_2190D96C8(uint64_t a1)
{
  return sub_2190D96F8(a1, sub_21914937C);
}

uint64_t sub_2190D96E0(uint64_t a1)
{
  return sub_2190D96F8(a1, sub_2191494C0);
}

uint64_t sub_2190D96F8(uint64_t a1, uint64_t (*a2)(void))
{
  sub_21914FC80();
  uint64_t v3 = a2();
  swift_release();
  return v3;
}

uint64_t FlowAuthority.init(tabSelection:tabContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_219159188();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  type metadata accessor for FlowStackTabsAuthority();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v10 = sub_21914FC30((uint64_t)v9, a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  *a3 = v10;
  return result;
}

uint64_t FlowAuthority.init(initialTabSelection:tabContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_219159188();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for _TransientSelection();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_2190D9E70();
  sub_21915AF98();
  swift_retain();
  uint64_t v14 = sub_21915AF88();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x263F8F500];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = a3;
  v15[5] = a4;
  v15[6] = a5;
  void v15[7] = v13;
  swift_retain();
  uint64_t v17 = sub_21915AF88();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  v18[3] = v16;
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v13;
  sub_219159158();
  FlowAuthority.init(tabSelection:tabContent:)((uint64_t)v12, v21, &v23);
  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v20, AssociatedTypeWitness);
  *uint64_t v22 = v23;
  return result;
}

uint64_t type metadata accessor for _TransientSelection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D9AD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_2190DA16C(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t FlowAuthority.init(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = sub_219159188();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v17 - v11;
  sub_21915B498();
  sub_219159168();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  sub_2190D9E00(a2, a2);
  uint64_t v13 = *(void *)(a2 - 8);
  swift_allocObject();
  uint64_t v14 = sub_21915AEA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, a1, a2);
  sub_21915AF18();
  FlowAuthority.init(tabSelection:tabContent:)((uint64_t)v12, v14, &v18);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, a2);
  *a3 = v18;
  return result;
}

uint64_t sub_2190D9E00(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_267C03C20);
  }
  else
  {
    return sub_21915B678();
  }
}

uint64_t sub_2190D9E70()
{
  return sub_21915B4C8();
}

uint64_t sub_2190D9EF0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190D9AD4(a1);
}

uint64_t objectdestroyTm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190D9F58()
{
  return sub_2190D9FDC();
}

uint64_t type metadata accessor for FlowAuthority()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190D9F94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2190D9FDC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_2190DA0B8(v2);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_2190DA0B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v4, v3);
}

uint64_t sub_2190DA16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_2190DA1C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2, v3);
}

uint64_t sub_2190DA25C(uint64_t a1, id a2)
{
  uint64_t v4 = sub_219157688();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v6);
  sub_21915AA38();
  if (!a2)
  {
    sub_21915AA18();
    long long v15 = 0u;
    long long v16 = 0u;
    sub_21915A9F8();
    long long v15 = 0u;
    long long v16 = 0u;
LABEL_13:
    sub_218FFE158((uint64_t)&v15, qword_26AD03AB8);
    goto LABEL_14;
  }
  id v8 = objc_msgSend(a2, sel_sourceApplication);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_21915AD48();
  }
  sub_21915AA18();
  if (objc_msgSend(a2, sel_annotation))
  {
    sub_21915B3B8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_2190DAE00((uint64_t)&v13, (uint64_t)&v15);
  sub_21915A9F8();
  a2 = a2;
  uint64_t v10 = (void *)sub_21915AD18();
  id v11 = objc_msgSend(a2, sel_valueForKeyPath_, v10);

  if (v11)
  {
    sub_21915B3B8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_2190DAE00((uint64_t)&v13, (uint64_t)&v15);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_13;
  }
  swift_dynamicCast();
LABEL_14:
  sub_21915AA08();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void DeepLink.init(sceneContext:)(void *a1)
{
  uint64_t v2 = sub_219157688();
  double v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_URL, v3);
  sub_219157658();

  sub_2190DA25C((uint64_t)v5, objc_msgSend(a1, sel_options));
}

uint64_t DeepLink.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v62 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v55 - v6;
  uint64_t v8 = sub_219157688();
  uint64_t v9 = *(void **)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v55 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v63 = (char *)&v55 - v15;
  uint64_t v66 = sub_21915AA48();
  uint64_t v16 = *(void *)(v66 - 8);
  double v17 = MEMORY[0x270FA5388](v66);
  long long v67 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(a1, sel_activityType, v17);
  uint64_t v20 = sub_21915AD48();
  uint64_t v22 = v21;

  if (v20 == sub_21915AD48() && v22 == v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = sub_21915B6C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {

      uint64_t v33 = 1;
      uint64_t v35 = v65;
      uint64_t v34 = v66;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v35, v33, 1, v34);
    }
  }
  uint64_t v64 = v16;
  id v68 = a1;
  id v25 = objc_msgSend(a1, sel_webpageURL);
  if (v25)
  {
    uint64_t v26 = v25;
    sub_219157658();

    uint64_t v27 = (void (*)(char *, char *, uint64_t))v9[4];
    v27(v7, v13, v8);
    uint64_t v28 = (void (*)(char *, void, uint64_t, uint64_t))v9[7];
    v28(v7, 0, 1, v8);
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v9[6];
    if (v29((uint64_t)v7, 1, v8) != 1)
    {
      uint64_t v57 = v29;
      uint64_t v58 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v28;
      uint64_t v59 = v9 + 7;
      uint64_t v60 = v27;
      uint64_t v30 = v63;
      v27(v63, v7, v8);
      uint64_t v56 = v9;
      long long v55 = (void (*)(char *, char *, uint64_t))v9[2];
      v55(v13, v30, v8);
      sub_21915AA38();
      uint64_t v31 = (void *)sub_21915AD18();
      id v32 = objc_msgSend(v68, sel_valueForKey_, v31);

      if (v32)
      {
        sub_21915B3B8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v69 = 0u;
        long long v70 = 0u;
      }
      uint64_t v36 = v57;
      sub_2190DAE00((uint64_t)&v69, (uint64_t)v71);
      if (v72) {
        swift_dynamicCast();
      }
      else {
        sub_218FFE158((uint64_t)v71, qword_26AD03AB8);
      }
      sub_21915AA18();
      uint64_t v37 = (void *)sub_21915AD18();
      id v38 = objc_msgSend(v68, sel_valueForKeyPath_, v37);

      if (v38)
      {
        sub_21915B3B8();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v69 = 0u;
        long long v70 = 0u;
      }
      char v39 = v60;
      sub_2190DAE00((uint64_t)&v69, (uint64_t)v71);
      if (v72) {
        swift_dynamicCast();
      }
      else {
        sub_218FFE158((uint64_t)v71, qword_26AD03AB8);
      }
      sub_21915AA08();
      id v40 = objc_msgSend(v68, sel_referrerURL);
      if (v40)
      {
        char v41 = v40;
        sub_219157658();

        uint64_t v42 = (uint64_t)v62;
        v39(v62, v13, v8);
        v58(v42, 0, 1, v8);
        int v43 = v36(v42, 1, v8);
        uint64_t v35 = v65;
        uint64_t v44 = v56;
        if (v43 != 1)
        {
          uint64_t v45 = v61;
          v39(v61, (char *)v42, v8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_267C06408);
          uint64_t v46 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C03CB0) - 8);
          unint64_t v47 = (*(unsigned __int8 *)(*(void *)v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v46 + 80);
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_21915C970;
          uint64_t v49 = (uint64_t *)(v48 + v47);
          uint64_t v50 = (char *)v49 + v46[14];
          *uint64_t v49 = sub_21915AD48();
          v49[1] = v51;
          v55(v50, v45, v8);
          unint64_t v52 = sub_21901D064(v48);
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06410);
          v71[0] = v52;
          sub_21915A9F8();

          long long v53 = (void (*)(char *, uint64_t))v44[1];
          v53(v45, v8);
          v53(v63, v8);
LABEL_27:
          uint64_t v16 = v64;
          uint64_t v34 = v66;
          (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v35, v67, v66);
          uint64_t v33 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v35, v33, 1, v34);
        }
      }
      else
      {
        uint64_t v42 = (uint64_t)v62;
        v58((uint64_t)v62, 1, 1, v8);
        uint64_t v35 = v65;
        uint64_t v44 = v56;
      }

      ((void (*)(char *, uint64_t))v44[1])(v63, v8);
      sub_218FFE158(v42, &qword_267C052F8);
      goto LABEL_27;
    }
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7])(v7, 1, 1, v8);
  }

  sub_218FFE158((uint64_t)v7, &qword_267C052F8);
  uint64_t v33 = 1;
  uint64_t v35 = v65;
  uint64_t v34 = v66;
  uint64_t v16 = v64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v35, v33, 1, v34);
}

uint64_t sub_2190DAE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD03AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2190DAE68@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MediaArtwork.ProtocolRequest();
  MediaArtwork.ProtocolRequest.cachedImagesKey.getter((uint64_t)v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = v8;
  return result;
}

uint64_t MediaArtwork.CacheKey.hashValue.getter()
{
  return sub_21915B7D8();
}

uint64_t sub_2190DAF40()
{
  return sub_21915B7D8();
}

uint64_t sub_2190DAF84()
{
  return sub_21915B7D8();
}

uint64_t sub_2190DAFC8@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  sub_21915A9E8();
  uint64_t v4 = type metadata accessor for MediaArtwork.ProtocolRequest();
  double v5 = MediaArtwork.ProtocolRequest.size.getter();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(a1 + *(int *)(v4 + 40));
  sub_21915A528();
  swift_retain();
  uint64_t v9 = sub_21915A518();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  *a2 = v5;
  *((void *)a2 + 1) = v7;
  *((void *)a2 + 2) = v8;
  *((void *)a2 + 3) = v9;
  return result;
}

unint64_t sub_2190DB0E0()
{
  return 0xD00000000000004DLL;
}

uint64_t MediaArtwork.CacheValue.debugDescription.getter()
{
  return 0;
}

unint64_t sub_2190DB1B8()
{
  unint64_t result = qword_267C06418[0];
  if (!qword_267C06418[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267C06418);
  }
  return result;
}

uint64_t sub_2190DB210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14 = type metadata accessor for MediaArtwork.ProtocolRequest();
  double v15 = MEMORY[0x270FA5388](v14);
  double v17 = &v20[-v16];
  (*(void (**)(unsigned char *, uint64_t, double))(v18 + 16))(&v20[-v16], a1, v15);
  sub_2190DAE68((uint64_t)v17, (uint64_t)v28);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a1;
  double v27 = a7;
  type metadata accessor for _MultiCacheImageMatch();
  sub_219159608();
  sub_2190DC5F4((uint64_t)v28);
  return v29;
}

uint64_t sub_2190DB370@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>, double a9@<D0>)
{
  uint64_t v60 = a7;
  uint64_t v57 = a5;
  uint64_t v76 = a2;
  uint64_t v61 = a1;
  uint64_t v59 = a8;
  uint64_t v13 = type metadata accessor for MediaArtwork.ProtocolRequest();
  uint64_t v52 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)&v51 - v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v55 = (char *)&v51 - v17;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v54 = *(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v21 = v57;
  uint64_t v69 = v57;
  uint64_t v70 = a6;
  uint64_t v71 = v60;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v63 = a3;
  uint64_t v64 = v21;
  uint64_t v65 = a6;
  uint64_t v66 = KeyPath;
  uint64_t v23 = v61;
  uint64_t v24 = v62;
  sub_21915A4C8();
  uint64_t v57 = v24;
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v23, AssociatedTypeWitness);
  sub_21915ADA8();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v20;
  uint64_t v62 = v18;
  uint64_t v60 = v25;
  sub_21915B388();
  uint64_t v26 = v74;
  if (v74)
  {
    uint64_t v28 = v72;
    uint64_t v27 = v73;
    uint64_t v29 = v75;
    uint64_t v30 = (void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    uint64_t v31 = (void (**)(char *, uint64_t))(v52 + 8);
    uint64_t v32 = 0x8000000000000000;
    double v33 = 1.79769313e308;
    while (1)
    {
      uint64_t v56 = v32;
      uint64_t v34 = v76;
      while (1)
      {
        if (MediaArtwork.ProtocolRequest.size.getter() == *(double *)&v28 && v35 == *(double *)&v27)
        {
          (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v62);
          swift_release();
          swift_retain();
          uint64_t result = sub_2190DC7DC(v28, v27, v26);
          uint64_t v32 = v29 | 0x4000000000000000;
          goto LABEL_27;
        }
        (*v30)(v15, v34, v13);
        if (*(double *)&v28 > 0.0 && *(double *)&v27 > 0.0) {
          break;
        }
        sub_2190DC7DC(v28, v27, v26);
        (*v31)(v15, v13);
LABEL_5:
        sub_21915B388();
        uint64_t v28 = v72;
        uint64_t v27 = v73;
        uint64_t v26 = v74;
        uint64_t v29 = v75;
        uint64_t v34 = v76;
        if (!v74)
        {
          uint64_t v32 = v56;
          goto LABEL_26;
        }
      }
      double v37 = MediaArtwork.ProtocolRequest.size.getter();
      double v39 = v38;
      (*v31)(v15, v13);
      if (v37 <= 0.0) {
        break;
      }
      if (v39 <= 0.0) {
        break;
      }
      double v40 = MediaArtwork.ProtocolRequest.size.getter();
      if (vabdd_f64(*(double *)&v28 / *(double *)&v27, v40 / v41) >= a9 || (sub_21915A4F8() & 1) == 0) {
        break;
      }
      double v42 = MediaArtwork.ProtocolRequest.size.getter();
      MediaArtwork.ProtocolRequest.size.getter();
      double v44 = v43;
      double v45 = MediaArtwork.ProtocolRequest.size.getter();
      double v47 = *(double *)&v27 - v46;
      double v48 = *(double *)&v28 - v45;
      if (v44 >= v42) {
        double v48 = v47;
      }
      double v49 = fabs(v48);
      uint64_t v32 = v56;
      if (v49 < v33)
      {
        swift_release();
        swift_retain();
        uint64_t v32 = v29;
        double v33 = v49;
      }
      sub_2190DC7DC(v28, v27, v26);
      sub_21915B388();
      uint64_t v28 = v72;
      uint64_t v27 = v73;
      uint64_t v26 = v74;
      uint64_t v29 = v75;
      if (!v74) {
        goto LABEL_26;
      }
    }
    sub_2190DC7DC(v28, v27, v26);
    goto LABEL_5;
  }
  uint64_t v32 = 0x8000000000000000;
LABEL_26:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v61, v62);
LABEL_27:
  *uint64_t v59 = v32;
  return result;
}

uint64_t sub_2190DB9A8()
{
  swift_retain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2190DBA24(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v16 = type metadata accessor for MediaArtwork.ProtocolRequest();
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v24 - v18;
  (*(void (**)(char *, uint64_t, double))(v20 + 16))((char *)&v24 - v18, a1, v17);
  sub_2190DAE68((uint64_t)v19, (uint64_t)v34);
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v29 = a8;
  uint64_t v30 = a9;
  uint64_t v31 = a10;
  uint64_t v32 = a1;
  char v33 = a2;
  swift_getAssociatedTypeWitness();
  sub_21915A528();
  swift_getTupleTypeMetadata2();
  sub_219159608();
  sub_2190DC5F4((uint64_t)v34);
  uint64_t v21 = v35;
  if (v36 == 1)
  {
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a5;
    void v22[3] = a6;
    v22[4] = a7;
    v22[5] = a8;
    v22[6] = a9;
    v22[7] = a10;
    v22[8] = v24;
    v22[9] = v25;
    swift_retain();
    sub_21915A508();
    swift_release();
  }
  return v21;
}

void sub_2190DBC38(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, uint64_t a10)
{
  uint64_t v77 = a8;
  uint64_t v100 = a5;
  int v63 = a3;
  uint64_t v73 = a2;
  uint64_t v74 = a9;
  uint64_t v76 = a1;
  uint64_t v69 = a10;
  uint64_t v13 = sub_219157848();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v58 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v64 = (char *)&v58 - v16;
  uint64_t v17 = sub_21915B018();
  uint64_t v66 = *(void *)(v17 - 8);
  uint64_t v67 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v65 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for MediaArtwork.ProtocolRequest();
  uint64_t v61 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v62 = (char *)&v58 - v19;
  uint64_t v20 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v23 = (char *)&v58 - v22;
  uint64_t v24 = v100;
  uint64_t v91 = a4;
  uint64_t v92 = v100;
  uint64_t v75 = a6;
  uint64_t v93 = a6;
  uint64_t v94 = a7;
  uint64_t v25 = a7;
  uint64_t v26 = v77;
  uint64_t v95 = v77;
  uint64_t v96 = a10;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v85 = v20;
  uint64_t v86 = v24;
  uint64_t v87 = a6;
  uint64_t v88 = v25;
  uint64_t v68 = v25;
  uint64_t v89 = v26;
  uint64_t v90 = KeyPath;
  uint64_t v28 = v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v76;
  uint64_t v31 = v71;
  sub_21915A4C8();
  swift_release();
  uint64_t v32 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v23, v30, AssociatedTypeWitness);
  uint64_t v78 = v28;
  uint64_t v79 = v100;
  uint64_t v80 = v75;
  uint64_t v81 = v68;
  uint64_t v82 = v77;
  uint64_t v33 = v73;
  uint64_t v83 = v69;
  uint64_t v84 = v73;
  uint64_t v69 = AssociatedConformanceWitness;
  sub_21915AE18();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, AssociatedTypeWitness);
  uint64_t v71 = v98;
  if (v98)
  {
    uint64_t v76 = *(void *)&v97[6];
    uint64_t v77 = *(void *)&v97[5];
    uint64_t v34 = v99;
    uint64_t v35 = *(void *)(*(void *)(v33 + *(int *)(v72 + 40)) + 16);
    uint64_t v36 = v35 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v35 + 16);
    double v37 = (os_unfair_lock_s *)(v35 + ((*(unsigned int *)(*(void *)v35 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v37);
    uint64_t v38 = v65;
    sub_2190AD064(v36, v65);
    uint64_t v100 = v31;
    if (v31)
    {
      os_unfair_lock_unlock(v37);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock(v37);
      swift_release();
      uint64_t v39 = v71;
      char v40 = MediaArtwork.ProtocolRequestPriorityCoordinator.increasePriority(to:)(v38);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v38, v67);
      double v41 = v74;
      if (v40)
      {
        if (qword_267C03560 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_219157878();
        __swift_project_value_buffer(v42, (uint64_t)qword_267C0EDE0);
        double v43 = v64;
        sub_219157838();
        double v44 = sub_219157868();
        int v45 = sub_21915B2B8();
        if (sub_21915B368())
        {
          uint64_t v46 = v59;
          double v47 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
          double v48 = v43;
          double v49 = v58;
          LODWORD(v75) = v45;
          uint64_t v50 = v60;
          v47(v58, v48, v60);
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          os_signpost_id_t v52 = sub_219157828();
          _os_signpost_emit_with_name_impl(&dword_218FF7000, v44, (os_signpost_type_t)v75, v52, "Image.CacheIncreasedRequestPriority", "", v51, 2u);
          long long v53 = v51;
          double v41 = v74;
          MEMORY[0x21D482B50](v53, -1, -1);

          uint64_t v54 = *(void (**)(char *, uint64_t))(v46 + 8);
          v54(v64, v50);
          v54(v49, v50);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v60);
        }
      }
      swift_retain();
      sub_2190DC7DC(v77, v76, v39);
      *(void *)double v41 = v34;
      *((unsigned char *)v41 + 8) = 0;
    }
  }
  else
  {
    uint64_t v55 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v62, v33, v72);
    swift_getAssociatedTypeWitness();
    sub_2190DAFC8(v55, v97);
    double v56 = v97[3];
    sub_21915A4B8();
    swift_release();
    uint64_t v57 = v74;
    double *v74 = v56;
    *((unsigned char *)v57 + 8) = 1;
  }
}

uint64_t _s8CacheKeyVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *_s8CacheKeyVwca(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t _s8CacheKeyVwta(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for MediaArtwork.CacheKey()
{
  return &type metadata for MediaArtwork.CacheKey;
}

uint64_t sub_2190DC3E8()
{
  swift_release();
  return swift_release();
}

uint64_t sub_2190DC424(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2190DC464(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2190DC4D4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t sub_2190DC51C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2190DC564(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MediaArtwork.CacheValue()
{
  return __swift_instantiateGenericMetadata();
}

void sub_2190DC5BC(uint64_t a1@<X0>, double *a2@<X8>)
{
  sub_2190DBC38(a1, *(void *)(v2 + 64), *(unsigned __int8 *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2, *(void *)(v2 + 56));
}

uint64_t sub_2190DC5F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190DC61C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190DC654()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_2190DC67C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21915A4E8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2190DC6AC()
{
  return 48;
}

__n128 sub_2190DC6B8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_2190DC6CC()
{
  return sub_2190DB9A8() & 1;
}

BOOL sub_2190DC6F4(double *a1)
{
  double v1 = *a1;
  double v2 = a1[1];
  type metadata accessor for MediaArtwork.ProtocolRequest();
  BOOL v3 = v1 == MediaArtwork.ProtocolRequest.size.getter();
  return v2 == v4 && v3;
}

BOOL sub_2190DC748()
{
  return (*(unsigned char *)(v0 + 16) & 1) == 0;
}

uint64_t sub_2190DC758@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2190DB370(a1, *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2, *(double *)(v2 + 64));
}

uint64_t type metadata accessor for _MultiCacheImageMatch()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190DC798()
{
  return 40;
}

__n128 sub_2190DC7A4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2190DC7B8()
{
  return sub_2190DB9A8() & 1;
}

uint64_t sub_2190DC7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_2190DC820(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_2190DC854()
{
  return swift_release();
}

void *sub_2190DC860(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_2190DC8A4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_2190DC8DC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_2190DC938(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2190DC988(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_2190DC9A4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_2190DC9B4(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

uint64_t sub_2190DC9E8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_2190214DC((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_219038DC0(v9, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_219159AC8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_218FFE158(a1, &qword_267C05528);
    sub_2190374E0(a2, v9);
    uint64_t v7 = sub_219159AC8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_218FFE158((uint64_t)v9, &qword_267C05528);
  }
}

uint64_t sub_2190DCB08@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_219158128();
  *a1 = v3;
  return result;
}

uint64_t sub_2190DCB34()
{
  return sub_219158138();
}

uint64_t sub_2190DCB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_219159AC8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219020260(a2, (uint64_t)v9);
  sub_219159AD8();
  v8[3] = MEMORY[0x263F8DB68];
  v8[0] = swift_allocObject();
  sub_219020260((uint64_t)v9, v8[0] + 16);
  sub_2190DC9E8((uint64_t)v8, (uint64_t)v5);
  return sub_219020324((uint64_t)v9);
}

uint64_t sub_2190DCC34()
{
  uint64_t v0 = sub_21915AAE8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_21915AB08();
  __swift_allocate_value_buffer(v1, qword_267C0EDC8);
  __swift_project_value_buffer(v1, (uint64_t)qword_267C0EDC8);
  sub_21915AAD8();
  return sub_21915AAF8();
}

uint64_t sub_2190DCCFC()
{
  uint64_t v0 = sub_219157878();
  __swift_allocate_value_buffer(v0, qword_267C0EDE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C0EDE0);
  if (qword_267C03558 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_21915AB08();
  __swift_project_value_buffer(v1, (uint64_t)qword_267C0EDC8);
  sub_21915AAB8();
  return sub_219157858();
}

uint64_t MediaArtwork.pageRenderMetrics(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, v2, v7);
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C06520) + 36));
  *uint64_t v8 = KeyPath;
  v8[1] = (uint64_t)sub_2190DCF4C;
  void v8[2] = v6;
  return swift_retain();
}

uint64_t sub_2190DCE7C(void *a1, uint64_t a2)
{
  sub_21915A9E8();
  swift_retain();
  uint64_t result = swift_release();
  *a1 = a2;
  return result;
}

uint64_t sub_2190DCF14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190DCF4C(void *a1)
{
  return sub_2190DCE7C(a1, *(void *)(v1 + 16));
}

unint64_t sub_2190DCF54()
{
  return 0xD00000000000003DLL;
}

uint64_t MediaArtwork.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_219159828();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  uint64_t v9 = (int *)type metadata accessor for _MediaArtworkBody();
  uint64_t v10 = a1 + v9[5];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(unsigned char *)(v10 + 8) = 0;
  uint64_t v11 = a1 + v9[6];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 40) = 0;
  uint64_t v12 = a1 + v9[7];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  uint64_t v13 = a1 + v9[8];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(unsigned char *)(v13 + 8) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v8, v4);
}

uint64_t type metadata accessor for _MediaArtworkBody()
{
  uint64_t result = qword_267C06540;
  if (!qword_267C06540) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2190DD124@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_219158128();
  *a1 = v3;
  return result;
}

uint64_t sub_2190DD150()
{
  return sub_219158138();
}

uint64_t sub_2190DD188()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190DD1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  double v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  uint64_t v8 = (int *)type metadata accessor for _MediaArtworkBody();
  uint64_t v9 = a2 + v8[5];
  *(void *)uint64_t v9 = swift_getKeyPath();
  *(unsigned char *)(v9 + 8) = 0;
  uint64_t v10 = a2 + v8[6];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(unsigned char *)(v10 + 40) = 0;
  uint64_t v11 = a2 + v8[7];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = a2 + v8[8];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v7, a1);
}

unint64_t sub_2190DD304()
{
  unint64_t result = qword_267C06528;
  if (!qword_267C06528)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06520);
    sub_2190DD41C(&qword_267C05F58, MEMORY[0x263F50950]);
    sub_218FFDF90(&qword_26AD03638, &qword_26AD03640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06528);
  }
  return result;
}

uint64_t sub_2190DD3D4()
{
  return sub_2190DD41C(&qword_267C06530, (void (*)(uint64_t))type metadata accessor for _MediaArtworkBody);
}

uint64_t sub_2190DD41C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2190DD464(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_219159828();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    char v12 = v10[8];
    sub_218FFE128(*(void *)v10, v12);
    *(void *)uint64_t v9 = v11;
    v9[8] = v12;
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    char v16 = *((unsigned char *)a2 + v13 + 40);
    if (v16)
    {
      long long v17 = *(_OWORD *)(v15 + 24);
      *(_OWORD *)(v14 + 24) = v17;
      (**(void (***)(char *))(v17 - 8))(v14);
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      swift_retain();
    }
    v14[40] = v16;
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    char v23 = v21[8];
    sub_21903AB98(*(void *)v21, v23);
    *(void *)uint64_t v20 = v22;
    v20[8] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)v26;
    char v28 = v26[8];
    j__swift_retain(*(void *)v26);
    *(void *)uint64_t v25 = v27;
    v25[8] = v28;
  }
  return a1;
}

uint64_t sub_2190DD604(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_218FFDDBC(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  if (*(unsigned char *)(v5 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  else {
    swift_release();
  }
  sub_21903AC64(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v6 = (uint64_t *)(a1 + a2[8]);
  uint64_t v7 = *v6;
  uint64_t v8 = *((unsigned __int8 *)v6 + 8);
  return j__swift_release(v7, v8);
}

uint64_t sub_2190DD6C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_218FFE128(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(a2 + v12 + 40);
  if (v15)
  {
    long long v16 = *(_OWORD *)(v14 + 24);
    *(_OWORD *)(v13 + 24) = v16;
    (**(void (***)(uint64_t))(v16 - 8))(v13);
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    swift_retain();
  }
  *(unsigned char *)(v13 + 40) = v15;
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_21903AB98(*(void *)v19, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  char v26 = *((unsigned char *)v24 + 8);
  j__swift_retain(*v24);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  return a1;
}

uint64_t sub_2190DD818(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_218FFE128(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = v11;
  sub_218FFDDBC(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    sub_218FFE158(a1 + v14, &qword_267C06538);
    if (*(unsigned char *)(v16 + 40))
    {
      uint64_t v17 = *(void *)(v16 + 24);
      *(void *)(v15 + 24) = v17;
      *(void *)(v15 + 32) = *(void *)(v16 + 32);
      (**(void (***)(uint64_t, uint64_t))(v17 - 8))(v15, v16);
      *(unsigned char *)(v15 + 40) = 1;
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(unsigned char *)(v15 + 40) = 0;
      swift_retain();
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_21903AB98(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  sub_21903AC64(v23, v24);
  uint64_t v25 = a3[8];
  char v26 = (uint64_t *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  char v29 = *((unsigned char *)v27 + 8);
  j__swift_retain(*v27);
  uint64_t v30 = *v26;
  uint64_t v31 = *((unsigned __int8 *)v26 + 8);
  *char v26 = v28;
  *((unsigned char *)v26 + 8) = v29;
  j__swift_release(v30, v31);
  return a1;
}

uint64_t sub_2190DD9B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  char v11 = (_OWORD *)(a1 + v8);
  uint64_t v12 = (_OWORD *)(a2 + v8);
  long long v13 = v12[1];
  *char v11 = *v12;
  v11[1] = v13;
  *(_OWORD *)((char *)v11 + 25) = *(_OWORD *)((char *)v12 + 25);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  return a1;
}

uint64_t sub_2190DDA8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  LOBYTE(v9) = *((unsigned char *)v9 + 8);
  uint64_t v11 = *(void *)v8;
  char v12 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = (_BYTE)v9;
  sub_218FFDDBC(v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (_OWORD *)(a2 + v13);
    uint64_t v15 = (_OWORD *)(a1 + v13);
    sub_218FFE158(a1 + v13, &qword_267C06538);
    long long v16 = v14[1];
    *uint64_t v15 = *v14;
    v15[1] = v16;
    *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v14 + 25);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((unsigned char *)v19 + 8);
  uint64_t v21 = *(void *)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = (_BYTE)v19;
  sub_21903AC64(v21, v22);
  uint64_t v23 = a3[8];
  char v24 = (uint64_t *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  LOBYTE(v25) = *((unsigned char *)v25 + 8);
  uint64_t v27 = *v24;
  uint64_t v28 = *((unsigned __int8 *)v24 + 8);
  *char v24 = v26;
  *((unsigned char *)v24 + 8) = (_BYTE)v25;
  j__swift_release(v27, v28);
  return a1;
}

uint64_t sub_2190DDBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190DDBC4);
}

uint64_t sub_2190DDBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219159828();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_2190DDC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190DDC98);
}

uint64_t sub_2190DDC98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_219159828();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2190DDD58()
{
  uint64_t result = sub_219159828();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2190DDDFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190DDE18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = (void *)a1;
  uint64_t v3 = type metadata accessor for _MediaArtworkBody();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unsigned int v10 = (char *)&v32 - v9;
  uint64_t v33 = v1 + *(int *)(v4 + 28);
  uint64_t v11 = *(void *)v33;
  char v12 = *(unsigned char *)(v33 + 8);
  sub_218FFE128(*(void *)v33, v12);
  sub_2190FA7A8(v11, v12);
  sub_218FFDDBC(v11, v12);
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE5SizedV9_resource9withScaleAA0cD8Resource_pSg12CoreGraphics7CGFloatV_tF_0();
  sub_218FFE128(v11, v12);
  double v13 = sub_2190FA7A8(v11, v12);
  sub_218FFDDBC(v11, v12);
  sub_2190FC5B0((uint64_t)&v37);
  uint64_t v14 = *((void *)&v38 + 1);
  uint64_t v15 = v39;
  __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  sub_2190DE784(v2, (uint64_t)v10);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = swift_allocObject();
  sub_2190DE7EC((uint64_t)v10, v18 + v17);
  sub_2190DE784(v2, (uint64_t)v7);
  uint64_t v19 = swift_allocObject();
  sub_2190DE7EC((uint64_t)v7, v19 + v17);
  v40[11] = swift_getKeyPath();
  char v41 = 0;
  uint64_t KeyPath = swift_getKeyPath();
  char v43 = 0;
  uint64_t v35 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06190);
  sub_219158FE8();
  long long v44 = v36;
  sub_2190DEA90((uint64_t)v45, (uint64_t)v40);
  *(double *)&v40[5] = v13;
  v40[6] = v16;
  v40[7] = sub_2190DE850;
  v40[8] = v18;
  v40[9] = sub_2190DEA08;
  v40[10] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v21;
  *(void *)(v25 + 24) = v23;
  sub_2190090C4((uint64_t)v40, (uint64_t)v45, &qword_267C06550);
  v45[17] = v24;
  v45[18] = sub_2190DEBB8;
  v45[19] = v25;
  sub_218FFE158((uint64_t)v40, &qword_267C06550);
  uint64_t v26 = *(void *)v33;
  LOBYTE(v25) = *(unsigned char *)(v33 + 8);
  sub_218FFE128(*(void *)v33, v25);
  sub_2190FA7A8(v26, v25);
  sub_218FFDDBC(v26, v25);
  sub_219159798();
  uint64_t v27 = swift_getKeyPath();
  sub_219020260((uint64_t)v40, (uint64_t)&v37);
  uint64_t v28 = swift_allocObject();
  long long v29 = v38;
  *(_OWORD *)(v28 + 16) = v37;
  *(_OWORD *)(v28 + 32) = v29;
  *(void *)(v28 + 48) = v39;
  uint64_t v30 = v34;
  sub_2190090C4((uint64_t)v45, (uint64_t)v34, &qword_267C06558);
  v30[20] = v27;
  v30[21] = sub_2190DEBF8;
  v30[22] = v28;
  sub_219020324((uint64_t)v40);
  return sub_218FFE158((uint64_t)v45, &qword_267C06558);
}

void sub_2190DE20C(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A538();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21915A548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) < 2)
  {
    char v12 = (uint64_t *)(a2 + *(int *)(type metadata accessor for _MediaArtworkBody() + 32));
    uint64_t v13 = *v12;
    uint64_t v14 = *((unsigned __int8 *)v12 + 8);
    j__swift_retain(*v12);
    uint64_t v15 = sub_2190FABD4(v13, v14);
    j__swift_release(v13, v14);
    if (!v15) {
      return;
    }
    *uint64_t v7 = 1;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F50C80], v4);
    sub_21915A588();
    swift_release();
    goto LABEL_9;
  }
  if (a1)
  {
    uint64_t v20 = a2 + *(int *)(type metadata accessor for _MediaArtworkBody() + 32);
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(unsigned __int8 *)(v20 + 8);
    sub_2190D6AD8(a1);
    j__swift_retain(v21);
    uint64_t v23 = sub_2190FABD4(v21, v22);
    j__swift_release(v21, v22);
    if (v23)
    {
      *(void *)uint64_t v7 = a1;
      v7[8] = 1;
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F50C70], v4);
      uint64_t v24 = a1;
      sub_21915A588();
      swift_release();
      sub_2190D6A4C(a1);
LABEL_9:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return;
    }
    sub_2190D6A4C(a1);
  }
  else
  {
    uint64_t v16 = (uint64_t *)(a2 + *(int *)(type metadata accessor for _MediaArtworkBody() + 32));
    uint64_t v17 = *v16;
    uint64_t v18 = *((unsigned __int8 *)v16 + 8);
    j__swift_retain(*v16);
    uint64_t v19 = sub_2190FABD4(v17, v18);
    j__swift_release(v17, v18);
    if (v19)
    {
      *uint64_t v11 = 1;
      (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F50C90], v8);
      sub_21915A5A8();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
}

uint64_t sub_2190DE558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MediaArtworkStyleConfiguration(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for _MediaArtworkBody();
  sub_2190FC5B0((uint64_t)v26);
  uint64_t v11 = v27;
  uint64_t v12 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v13 = sub_219159828();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v9, a2, v13);
  uint64_t v14 = &v9[*(int *)(v7 + 28)];
  uint64_t v15 = sub_219157EE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a1, v15);
  uint64_t v16 = a2 + *(int *)(v10 + 28);
  uint64_t v17 = *(void *)v16;
  LOBYTE(v10) = *(unsigned char *)(v16 + 8);
  sub_21903AB98(*(void *)v16, v10);
  uint64_t v18 = sub_2190FA794(v17, v10);
  sub_21903AC64(v17, v10);
  *(void *)&v9[*(int *)(v7 + 32)] = v18;
  uint64_t v19 = MediaArtworkStyle._body(configuration:)((uint64_t)v9, v11, v12);
  sub_2190DEC00((uint64_t)v9);
  _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0();
  _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0();
  sub_219159318();
  sub_219157C88();
  uint64_t v20 = v29;
  LOBYTE(a2) = v30;
  uint64_t v21 = v31;
  LOBYTE(v17) = v32;
  uint64_t v22 = v33;
  uint64_t v23 = v34;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v20;
  *(unsigned char *)(a3 + 16) = a2;
  *(void *)(a3 + 24) = v21;
  *(unsigned char *)(a3 + 32) = v17;
  *(void *)(a3 + 40) = v22;
  *(void *)(a3 + 48) = v23;
  return result;
}

uint64_t sub_2190DE784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _MediaArtworkBody();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190DE7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _MediaArtworkBody();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2190DE850(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for _MediaArtworkBody() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_2190DE20C(a1, v4);
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v1 = (int *)type metadata accessor for _MediaArtworkBody();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_218FFDDBC(*(void *)(v2 + v1[5]), *(unsigned char *)(v2 + v1[5] + 8));
  uint64_t v4 = v2 + v1[6];
  if (*(unsigned char *)(v4 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v4);
  }
  else {
    swift_release();
  }
  sub_21903AC64(*(void *)(v2 + v1[7]), *(unsigned char *)(v2 + v1[7] + 8));
  j__swift_release(*(void *)(v2 + v1[8]), *(unsigned __int8 *)(v2 + v1[8] + 8));
  return swift_deallocObject();
}

uint64_t sub_2190DEA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for _MediaArtworkBody() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_2190DE558(a1, v6, a2);
}

uint64_t sub_2190DEA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190DEAF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_219159AC8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  sub_219159AD8();
  type metadata accessor for CGSize(0);
  v10[3] = v8;
  v10[0] = v6;
  v10[1] = v7;
  return sub_2190DC9E8((uint64_t)v10, (uint64_t)v5);
}

uint64_t sub_2190DEBA8()
{
  return swift_deallocObject();
}

uint64_t sub_2190DEBB8(uint64_t a1)
{
  return sub_2190DEAF8(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_2190DEBC0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2190DEBF8(uint64_t a1)
{
  return sub_2190DCB5C(a1, v1 + 16);
}

uint64_t sub_2190DEC00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaArtworkStyleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2190DEC60()
{
  unint64_t result = qword_267C06560;
  if (!qword_267C06560)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06568);
    sub_2190DED00();
    sub_218FFDF90((unint64_t *)&qword_267C05518, &qword_267C05510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06560);
  }
  return result;
}

unint64_t sub_2190DED00()
{
  unint64_t result = qword_267C06570;
  if (!qword_267C06570)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06558);
    sub_218FFDF90(&qword_267C06578, &qword_267C06550);
    sub_218FFDF90((unint64_t *)&qword_267C05518, &qword_267C05510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06570);
  }
  return result;
}

uint64_t EnvironmentValues.metricsContext.getter()
{
  sub_219050DF4();
  return sub_219158238();
}

uint64_t EnvironmentValues.metricsContext.setter(uint64_t a1)
{
  uint64_t v2 = sub_21915A198();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_219050DF4();
  sub_219158248();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t View.metricsContext(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03358);
  uint64_t v6 = *(void *)(v23[0] - 8);
  MEMORY[0x270FA5388](v23[0]);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = sub_21915A628();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_21915A198();
  uint64_t v24 = *(void *)(v16 - 8);
  uint64_t v25 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = swift_getKeyPath();
  sub_21915A118();
  MEMORY[0x21D480BE0](v11, v12);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v11;
  uint64_t v21 = v23[0];
  v19(v20, v23[0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F50CF8], v12);
    sub_218FFE158((uint64_t)v5, &qword_26AD03388);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v5, v12);
  }
  sub_21915A118();
  sub_21915A0F8();
  v19(v8, v21);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_219158AA8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v18, v25);
}

uint64_t View.transformMetricsContext(transform:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_219158C58();
  swift_release();
  return swift_release();
}

uint64_t sub_2190DF344(void (*a1)(void, double), void (*a2)(void, double))
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_21915A628();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03358);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v21 - v16;
  v22(a1, v15);
  sub_21915A118();
  uint64_t v22 = a1;
  MEMORY[0x21D480BE0](v17, v3);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v17, v10);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
  uint64_t result = sub_218FFE158((uint64_t)v9, &qword_26AD03388);
  if (v19 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F50CF8], v3);
    sub_21915A118();
    sub_21915A178();
    v18(v13, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_2190DF5E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190DF61C(void (*a1)(void, double))
{
  return sub_2190DF344(a1, *(void (**)(void, double))(v1 + 16));
}

uint64_t View.optOutFromMetricsValidations()()
{
  return View.transformMetricsContext(transform:)((uint64_t)sub_2190DF648, 0);
}

uint64_t sub_2190DF648()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03358);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21915A628();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x263F50D00], v4, v6);
  sub_21915A118();
  sub_21915A178();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_2190DF7E8()
{
  uint64_t v0 = sub_21915A198();
  __swift_allocate_value_buffer(v0, qword_26AD02CB8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26AD02CB8);
  return sub_2190DF834(v1);
}

uint64_t sub_2190DF834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03350);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v25 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_219157718();
  uint64_t v26 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03358);
  uint64_t v4 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  double v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21915A628();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_21915A198();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v22 - v16;
  sub_21915A188();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F50CF8], v7);
  sub_21915A118();
  sub_21915A0F8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  sub_219157708();
  int v19 = v25;
  sub_21915A148();
  uint64_t v20 = v24;
  sub_21915A0F8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v29);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v20);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v11);
}

uint64_t sub_2190DFC10@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AD02CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21915A198();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26AD02CB8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_2190DFCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_2190E0A90();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.metricsContext.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_21915A198();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_219050DF4();
  sub_219158238();
  return sub_2190DFE08;
}

void sub_2190DFE08(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 16) + 16);
  v4(*(void *)(*(void *)a1 + 32), v3[5], v3[1]);
  uint64_t v5 = (void *)v3[5];
  uint64_t v7 = (void *)v3[3];
  size_t v6 = (void *)v3[4];
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (a2)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_219158248();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v6, v8);
    v10(v5, v8);
  }
  else
  {
    sub_219158248();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v6);
  free(v7);
  free(v3);
}

uint64_t _s7SwiftUI17EnvironmentValuesV011_JetEngine_aB0E20metricsFieldsContextAD013OpaqueMetricshI0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  v16[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03350);
  uint64_t v1 = *(void *)(v16[0] - 8);
  MEMORY[0x270FA5388](v16[0]);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21915A198();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD036B0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_219157718();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219050DA0();
  sub_219158238();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_218FFE158((uint64_t)v10, &qword_26AD036B0);
    sub_219050DF4();
    return sub_219158238();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_219050DF4();
    sub_219158238();
    sub_21915A158();
    sub_21915A0F8();
    (*(void (**)(char *, void))(v1 + 8))(v3, v16[0]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t OpaqueMetricsFieldsContext.description.getter()
{
  return 0;
}

uint64_t sub_2190E02A0()
{
  return 0;
}

uint64_t ActionDispatcher.perform(_:withOpaqueMetrics:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a2;
  v18[0] = a1;
  v18[1] = a4;
  uint64_t v4 = sub_219159CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v8 = type metadata accessor for OpaqueMetricsFieldsContext();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_219159518();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_219159B38())
  {
    swift_retain();
  }
  else
  {
    sub_2190E05D4(v19, (uint64_t)v10);
    sub_2191594E8();
    sub_219159BA8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v15 = sub_21915A198();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v7, v19, v15);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F50A18], v4);
  uint64_t v16 = sub_219159D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t type metadata accessor for OpaqueMetricsFieldsContext()
{
  uint64_t result = qword_26AD01170;
  if (!qword_26AD01170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2190E05D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OpaqueMetricsFieldsContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for OpaqueMetricsFieldsContext(uint64_t a1)
{
  uint64_t v2 = sub_21915A198();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190E08B4);
}

uint64_t sub_2190E08B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190E0934);
}

uint64_t sub_2190E0934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A198();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_2190E09A4()
{
  uint64_t result = sub_21915A198();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2190E0A30(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy9JetEngine20MetricsFieldsContextVGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(a1, &qword_26AD032D0, &qword_26AD032C8);
}

uint64_t sub_2190E0A58(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy9JetEngine20MetricsFieldsContextVGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(a1, &qword_26AD032E0, &qword_26AD032D8);
}

ValueMetadata *type metadata accessor for MetricsContextKey()
{
  return &type metadata for MetricsContextKey;
}

unint64_t sub_2190E0A90()
{
  unint64_t result = qword_26AD03378;
  if (!qword_26AD03378)
  {
    sub_21915A198();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03378);
  }
  return result;
}

uint64_t sub_2190E0AE8()
{
  sub_2190E2268();
  return sub_219158238();
}

uint64_t sub_2190E0B30()
{
  return sub_219158238();
}

uint64_t sub_2190E0B70(uint64_t a1)
{
  sub_219030940(a1, (uint64_t)v3);
  sub_219030940((uint64_t)v3, (uint64_t)&v2);
  sub_2190E2268();
  sub_219158248();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_2190E0BD0@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, char a4@<W3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v16 = *a3;
  char v17 = *a5;
  uint64_t v18 = sub_219030AB0(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a8 - 8) + 8))(a1, a8);
  *(void *)a9 = v18;
  *(unsigned char *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 9) = v16;
  *(unsigned char *)(a9 + 10) = a4;
  *(unsigned char *)(a9 + 11) = v17;
  *(void *)(a9 + 16) = a6;
  *(void *)(a9 + 24) = a7;
  return result;
}

uint64_t sub_2190E0C8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v16 - v8;
  char v10 = *((unsigned char *)a1 + 8);
  char v11 = *((unsigned char *)a1 + 9);
  char v12 = *((unsigned char *)a1 + 10);
  char v13 = *((unsigned char *)a1 + 11);
  uint64_t v16 = *a1;
  char v17 = v10;
  char v18 = v11;
  char v19 = v12;
  char v20 = v13;
  long long v21 = *((_OWORD *)a1 + 1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 24))(&v16, a2, a3);
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_219030AB0((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return v14;
}

uint64_t FlowSheetContentStyleConfiguration.PresentationStyle.hash(into:)()
{
  return sub_21915B7C8();
}

BOOL static FlowSheetContentStyleConfiguration.PresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FlowSheetContentStyleConfiguration.PresentationStyle.hashValue.getter()
{
  return sub_21915B7D8();
}

uint64_t FlowSheetContentStyleConfiguration.content.getter()
{
  return swift_retain();
}

uint64_t FlowSheetContentStyleConfiguration.isRoot.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

void FlowSheetContentStyleConfiguration.presentationStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

uint64_t FlowSheetContentStyleConfiguration.hidesDoneButton.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

void FlowSheetContentStyleConfiguration.doneButtonLabelStyle.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 11);
}

uint64_t FlowSheetContentStyleConfiguration.dismissAction.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t sub_2190E0EF8()
{
  return sub_219158FB8();
}

uint64_t sub_2190E0F90@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  if (HIBYTE(a1) == 1)
  {
    if (qword_26AD03AA0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_26AD03AA0 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  sub_2191575B8();
  sub_219030858();
  uint64_t result = sub_2191589E8();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_2190E10BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158F08();
  *a1 = result;
  return result;
}

uint64_t DefaultFlowSheetContentStyle.makeBody(configuration:)()
{
  return swift_release();
}

uint64_t sub_2190E11EC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v9 = sub_219158538();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06598);
  uint64_t v38 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06588);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v18 = (char *)v34 - v17;
  if ((a2 & 0x10101) == 1)
  {
    uint64_t v35 = v13;
    uint64_t v19 = sub_219158528();
    v34[1] = v34;
    MEMORY[0x270FA5388](v19);
    uint64_t v36 = a5;
    v34[-4] = a1;
    LOBYTE(v34[-3]) = a2 & 1;
    *(_WORD *)((char *)&v34[-3] + 1) = 0;
    BYTE3(v34[-3]) = HIBYTE(a2);
    uint64_t v20 = v37;
    v34[-2] = a3;
    v34[-1] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C065D0);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C065D8);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C065E0);
    uint64_t v23 = sub_218FFDF90(&qword_267C065E8, &qword_267C065E0);
    unint64_t v24 = sub_2190E2334();
    uint64_t v39 = v22;
    char v40 = &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle;
    uint64_t v41 = v23;
    unint64_t v42 = v24;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v39 = v21;
    char v40 = (ValueMetadata *)OpaqueTypeConformance2;
    uint64_t v13 = v35;
    swift_getOpaqueTypeConformance2();
    sub_219157B88();
    uint64_t v26 = sub_218FFDF90(&qword_267C065A0, &qword_267C06598);
    MEMORY[0x21D47EFB0](v12, v10, v26);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C065C8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 0, 1, v27);
    uint64_t v39 = v10;
    char v40 = (ValueMetadata *)v26;
    uint64_t v28 = swift_getOpaqueTypeConformance2();
    MEMORY[0x21D47EFC0](v15, v27, v28);
    sub_2190E22BC((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
  }
  else
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C065C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v15, 1, 1, v29);
    uint64_t v30 = sub_218FFDF90(&qword_267C065A0, &qword_267C06598);
    uint64_t v39 = v10;
    char v40 = (ValueMetadata *)v30;
    uint64_t v31 = swift_getOpaqueTypeConformance2();
    MEMORY[0x21D47EFC0](v15, v29, v31);
    sub_2190E22BC((uint64_t)v15);
  }
  unint64_t v32 = sub_2190E16A0();
  MEMORY[0x21D47EFB0](v18, v13, v32);
  return sub_2190E22BC((uint64_t)v18);
}

uint64_t sub_2190E1688()
{
  return sub_2190E23A0((uint64_t (*)(void, void, void, void))sub_2190E11EC);
}

unint64_t sub_2190E16A0()
{
  unint64_t result = qword_267C06590;
  if (!qword_267C06590)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06588);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06598);
    sub_218FFDF90(&qword_267C065A0, &qword_267C06598);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06590);
  }
  return result;
}

uint64_t sub_2190E1774@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a5;
  unsigned int v9 = HIBYTE(a2);
  uint64_t v33 = sub_219157FD8();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C065E0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C065D8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v28 = v18;
  uint64_t v29 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219157A48();
  uint64_t v22 = sub_219157A58();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 0, 1, v22);
  uint64_t v34 = a1;
  __int16 v35 = a2 & 0x101;
  char v36 = BYTE2(a2) & 1;
  char v37 = v9;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C065F8);
  sub_218FFDF90(&qword_267C06600, &qword_267C065F8);
  sub_219159048();
  LOBYTE(v40) = v9;
  uint64_t v23 = sub_218FFDF90(&qword_267C065E8, &qword_267C065E0);
  unint64_t v24 = sub_2190E2334();
  sub_219158A48();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v25 = v30;
  sub_219157FC8();
  uint64_t v40 = v14;
  uint64_t v41 = &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle;
  uint64_t v42 = v23;
  unint64_t v43 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v28;
  sub_219158B68();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v21, v26);
}

uint64_t sub_2190E1B6C()
{
  return swift_release();
}

uint64_t PlainFlowSheetContentStyle.makeBody(configuration:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_2190E1C78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t View.flowSheetContentStyle<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getKeyPath();
  v10[3] = a3;
  void v10[4] = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  sub_219158AA8();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_2190E1D4C()
{
  return sub_219158238();
}

unint64_t sub_2190E1D94()
{
  unint64_t result = qword_267C065A8;
  if (!qword_267C065A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C065A8);
  }
  return result;
}

uint64_t sub_2190E1DE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190E1E04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of FlowSheetContentStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for FlowSheetContentStyleConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FlowSheetContentStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FlowSheetContentStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FlowSheetContentStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FlowSheetContentStyleConfiguration()
{
  return &type metadata for FlowSheetContentStyleConfiguration;
}

unsigned char *storeEnumTagSinglePayload for FlowSheetContentStyleConfiguration.PresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190E208CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowSheetContentStyleConfiguration.PresentationStyle()
{
  return &type metadata for FlowSheetContentStyleConfiguration.PresentationStyle;
}

ValueMetadata *type metadata accessor for DefaultFlowSheetContentStyle()
{
  return &type metadata for DefaultFlowSheetContentStyle;
}

ValueMetadata *type metadata accessor for PlainFlowSheetContentStyle()
{
  return &type metadata for PlainFlowSheetContentStyle;
}

uint64_t sub_2190E20E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190E2188()
{
  return MEMORY[0x263F1B718];
}

uint64_t sub_2190E2194()
{
  return swift_getWitnessTable();
}

unint64_t sub_2190E2234@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for DefaultFlowSheetContentStyle;
  unint64_t result = sub_2190E2438();
  *(void *)(a1 + 32) = result;
  return result;
}

unint64_t sub_2190E2268()
{
  unint64_t result = qword_267C065C0;
  if (!qword_267C065C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C065C0);
  }
  return result;
}

uint64_t sub_2190E22BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2190E231C()
{
  return sub_2190E23A0((uint64_t (*)(void, void, void, void))sub_2190E1774);
}

unint64_t sub_2190E2334()
{
  unint64_t result = qword_267C065F0;
  if (!qword_267C065F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C065F0);
  }
  return result;
}

uint64_t sub_2190E2388()
{
  return sub_2190E23A0((uint64_t (*)(void, void, void, void))sub_2190E0EF8);
}

uint64_t sub_2190E23A0(uint64_t (*a1)(void, void, void, void))
{
  if (*(unsigned char *)(v1 + 25)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *(unsigned __int8 *)(v1 + 24);
  if (*(unsigned char *)(v1 + 26)) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  return a1(*(void *)(v1 + 16), v3 | v4 | (*(unsigned __int8 *)(v1 + 27) << 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_2190E23E8@<X0>(uint64_t a1@<X8>)
{
  if (v1[25]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | v1[24];
  if (v1[26]) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  return sub_2190E0F90(v3 | v4 | (v1[27] << 24), a1);
}

ValueMetadata *type metadata accessor for FlowSheetContentStyleKey()
{
  return &type metadata for FlowSheetContentStyleKey;
}

unint64_t sub_2190E2438()
{
  unint64_t result = qword_267C06608;
  if (!qword_267C06608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06608);
  }
  return result;
}

uint64_t sub_2190E248C@<X0>(void *a1@<X8>)
{
  sub_21908C0BC();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190E24DC()
{
  return sub_219158248();
}

uint64_t ContentUnavailableView.init<>(error:retry:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for ContentUnavailableTextLogBuilder();
  uint64_t v8 = swift_allocObject();
  *(_WORD *)(v8 + 24) = 514;
  *(void *)(v8 + 16) = a1;
  swift_getErrorValue();
  id v9 = a1;
  if ((sub_2190E3EB8(v38) & 1) != 0
    && (uint64_t v10 = self,
        uint64_t v11 = (void *)sub_21915AD18(),
        LODWORD(v10) = objc_msgSend(v10, sel_BOOLForEntitlement_, v11),
        v11,
        v10))
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = v8;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(void *)(a4 + 88) = 0;
    *(void *)(a4 + 96) = swift_getKeyPath();
    *(unsigned char *)(a4 + 104) = 0;
    uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
    uint64_t v15 = (uint64_t *)(a4 + v14[21]);
    *uint64_t v15 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a4 + v14[22];
    *(void *)uint64_t v16 = swift_getKeyPath();
    *(unsigned char *)(v16 + 8) = 0;
    uint64_t v17 = a4 + v14[23];
    *(void *)uint64_t v17 = swift_getKeyPath();
    *(unsigned char *)(v17 + 8) = 0;
    *(void *)a4 = sub_2190E4A6C;
    *(void *)(a4 + 8) = v12;
    *(void *)(a4 + 16) = sub_2190E4A8C;
    *(void *)(a4 + 24) = v13;
    *(void *)(a4 + 32) = sub_2190E40E8;
    *(void *)(a4 + 40) = 0;
    *(unsigned char *)(a4 + 48) = 1;
    id v18 = a1;
    id v19 = a1;
    uint64_t v20 = qword_26AD03470;
    swift_retain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void *)(a4 + 56);
    swift_retain();
    sub_21903F788(v21);
    *(void *)(a4 + 56) = a2;
    *(void *)(a4 + 64) = a3;
  }
  else
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a1;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    *(void *)(v23 + 24) = v8;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a2;
    *(void *)(v24 + 24) = a3;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(void *)(a4 + 88) = 0;
    *(void *)(a4 + 96) = swift_getKeyPath();
    *(unsigned char *)(a4 + 104) = 0;
    uint64_t v25 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
    uint64_t v26 = (uint64_t *)(a4 + v25[21]);
    *uint64_t v26 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a4 + v25[22];
    *(void *)uint64_t v27 = swift_getKeyPath();
    *(unsigned char *)(v27 + 8) = 0;
    uint64_t v28 = a4 + v25[23];
    *(void *)uint64_t v28 = swift_getKeyPath();
    *(unsigned char *)(v28 + 8) = 0;
    *(void *)a4 = sub_2190F125C;
    *(void *)(a4 + 8) = v22;
    *(void *)(a4 + 16) = sub_2190F1230;
    *(void *)(a4 + 24) = v23;
    *(void *)(a4 + 32) = sub_2190E45A4;
    *(void *)(a4 + 40) = v24;
    *(unsigned char *)(a4 + 48) = 1;
    id v29 = a1;
    id v30 = a1;
    uint64_t v31 = qword_26AD03470;
    swift_retain();
    swift_retain();
    if (v31 != -1) {
      swift_once();
    }
  }
  uint64_t v32 = (void *)sub_2191575F8();
  id v33 = (id)AMSLogableError();

  uint64_t v34 = sub_21915AD48();
  uint64_t v36 = v35;
  swift_release();

  swift_bridgeObjectRelease();
  *(void *)(a4 + 72) = v34;
  *(void *)(a4 + 80) = v36;
  uint64_t result = swift_release();
  *(void *)(a4 + 88) = v8;
  return result;
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t result;

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  type metadata accessor for ContentUnavailableTextLogBuilder();
  id v9 = swift_allocObject();
  *(_WORD *)(v9 + 24) = 514;
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_2190EBB6C;
  *(void *)(v12 + 24) = v8;
  sub_2190EB4D8((uint64_t)sub_2190EBB74, v10, (uint64_t)sub_2190EBB80, v11, (uint64_t)sub_2190EBB88, v12, a4);
  uint64_t v13 = a1;
  uint64_t v14 = a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a4 + 88) = v9;
  return result;
}

uint64_t type metadata accessor for ContentUnavailableTextLogBuilder()
{
  return self;
}

uint64_t View.contentUnavailableViewPresentationContext(_:)()
{
  return swift_release();
}

uint64_t sub_2190E2B80(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  if (sub_2190E3EB8(v21[5]))
  {
    *(unsigned char *)(a2 + 24) = 0;
    sub_21915A668();
    char v8 = sub_21915A658();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_26AD03470 != -1) {
      swift_once();
    }
    if (*((unsigned char *)off_26AD03468 + 16) == 1)
    {
      *(unsigned char *)(a2 + 25) = 0;
      if (v8)
      {
        if (qword_26AD03AA0 != -1) {
          swift_once();
        }
      }
      else if (qword_26AD03AA0 != -1)
      {
        swift_once();
      }
      sub_2191575B8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C06660);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_21915C970;
      id v10 = objc_msgSend(self, sel_mainBundle);
      uint64_t v11 = NSBundle.displayName.getter();
      uint64_t v13 = v12;

      *(void *)(v9 + 56) = MEMORY[0x263F8D310];
      *(void *)(v9 + 64) = sub_2190F0C94();
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v13;
      uint64_t v14 = sub_21915AD58();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      v21[0] = v14;
      v21[1] = v16;
      sub_219030858();
      uint64_t v17 = sub_2191589E8();
      goto LABEL_17;
    }
    *(unsigned char *)(a2 + 25) = 1;
  }
  else
  {
    *(unsigned char *)(a2 + 24) = 1;
  }
  sub_219158308();
  if (qword_26AD03AA0 != -1) {
    swift_once();
  }
  id v18 = (id)qword_26AD03A98;
  uint64_t v17 = sub_2191589D8();
LABEL_17:
  uint64_t v19 = v17;
  swift_release();

  return v19;
}

uint64_t sub_2190E2FC4()
{
  return sub_2191580E8();
}

uint64_t sub_2190E2FE8(uint64_t a1)
{
  uint64_t v2 = sub_219157AB8();
  double v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_2191580F8();
}

uint64_t sub_2190E30B0()
{
  return sub_219157AD8();
}

void *sub_2190E30C8()
{
  type metadata accessor for JetCellularDataInquiry();
  swift_allocObject();
  uint64_t result = (void *)sub_2190E3108();
  off_26AD03468 = result;
  return result;
}

uint64_t sub_2190E3108()
{
  *(unsigned char *)(v0 + 16) = 0;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02C30]), sel_init);
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_2190F0D20;
  v6[5] = v2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_2190E3274;
  v6[3] = &block_descriptor_3;
  double v3 = _Block_copy(v6);
  id v4 = v1;
  swift_release();
  objc_msgSend(v4, sel_setCellularDataRestrictionDidUpdateNotifier_, v3);
  _Block_release(v3);

  return v0;
}

uint64_t sub_2190E3218(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 16) = a1 == 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_2190E3274(uint64_t a1, uint64_t a2)
{
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_2190E32C8()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2190E3300@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v56 = a2;
  uint64_t v5 = sub_219158918();
  uint64_t v49 = *(void *)(v5 - 8);
  *(void *)&long long v50 = v5;
  MEMORY[0x270FA5388](v5);
  os_signpost_id_t v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03518);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v13 = a1[6];
  uint64_t v14 = a1[7];
  uint64_t v47 = a1[2];
  uint64_t v61 = v47;
  uint64_t v62 = v10;
  uint64_t v63 = v12;
  *(void *)&long long v64 = v11;
  uint64_t v46 = v11;
  uint64_t v45 = v13;
  *((void *)&v64 + 1) = v13;
  uint64_t v65 = v14;
  uint64_t v44 = v14;
  type metadata accessor for _CompatibilityContentUnavailableViewContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = type metadata accessor for _ContentUnavailableScrollView();
  uint64_t v51 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t v53 = v7;
  uint64_t v21 = sub_2191584D8();
  uint64_t v54 = *(void *)(v21 - 8);
  uint64_t v55 = v21;
  double v22 = MEMORY[0x270FA5388](v21);
  uint64_t v57 = (uint64_t)&v44 - v23;
  (*(void (**)(uint64_t *, uint64_t, void *, double))(*(a1 - 1) + 32))(&v61, v3, a1, v22);
  uint64_t v24 = v61;
  uint64_t v25 = v62;
  if (v66)
  {
    uint64_t v26 = v63;
    long long v28 = v64;
    uint64_t v27 = v65;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    *(void *)(v29 + 24) = v25;
    *(void *)(v29 + 32) = v26;
    *(_OWORD *)(v29 + 40) = v28;
    *(void *)(v29 + 56) = v27;
    uint64_t v30 = v53;
    uint64_t v60 = 0x4076800000000000;
    (*(void (**)(char *, void, void))(v49 + 104))(v52, *MEMORY[0x263F1A6D8], v50);
    swift_retain();
    swift_retain();
    sub_219062A84(*((uint64_t *)&v28 + 1));
    swift_retain();
    swift_retain();
    sub_219062A84(*((uint64_t *)&v28 + 1));
    sub_2190EF59C();
    sub_219157BF8();
    *uint64_t v9 = sub_2190F0A88;
    v9[1] = v29;
    swift_getWitnessTable();
    sub_218FFDF90(&qword_26AD03510, &qword_26AD03518);
    sub_218FFCBB0((uint64_t)v9, v15, v30);
    sub_21903F788(*((uint64_t *)&v28 + 1));
    swift_release();
    swift_release();
    sub_218FFE158((uint64_t)v9, &qword_26AD03518);
  }
  else
  {
    uint64_t v31 = v63;
    os_signpost_id_t v52 = v20;
    uint64_t v32 = v12;
    uint64_t v33 = v65;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v47;
    *(void *)(v34 + 24) = v10;
    uint64_t v35 = v46;
    *(void *)(v34 + 32) = v32;
    *(void *)(v34 + 40) = v35;
    uint64_t v36 = v44;
    *(void *)(v34 + 48) = v45;
    *(void *)(v34 + 56) = v36;
    *(void *)(v34 + 64) = v24;
    *(void *)(v34 + 72) = v25;
    *(void *)(v34 + 80) = v31;
    long long v50 = v64;
    *(_OWORD *)(v34 + 88) = v64;
    *(void *)(v34 + 104) = v33;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_2190E83B0(360.0);
    char *v17 = sub_2190F0AE0;
    v17[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v34;
    swift_getWitnessTable();
    uint64_t v37 = (uint64_t)v52;
    sub_218FFDE04((uint64_t)v17, v15, (uint64_t)v52);
    uint64_t v38 = *(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t))(v51 + 8);
    v38(v17, v15);
    sub_218FFDE04(v37, v15, (uint64_t)v17);
    sub_218FFDF90(&qword_26AD03510, &qword_26AD03518);
    sub_219050FE4((uint64_t)v17, v15);
    swift_release();
    swift_release();
    swift_release();
    v38(v17, v15);
    v38((uint64_t (**)@<X0>(uint64_t@<X8>))v37, v15);
  }
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = sub_218FFDF90(&qword_26AD03510, &qword_26AD03518);
  uint64_t v58 = v39;
  uint64_t v59 = v40;
  uint64_t v41 = v55;
  swift_getWitnessTable();
  uint64_t v42 = v57;
  sub_218FFDE04(v57, v41, v56);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v42, v41);
}

uint64_t sub_2190E3980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = a1;
  *(void *)&long long v16 = a2;
  *((void *)&v16 + 1) = a3;
  *(void *)&long long v17 = a4;
  *((void *)&v17 + 1) = a5;
  uint64_t v18 = a6;
  uint64_t v19 = a7;
  *(void *)uint64_t v20 = a8;
  *(_OWORD *)&v20[8] = a10;
  *(void *)&v20[24] = a11;
  uint64_t v21 = a12;
  uint64_t v13 = type metadata accessor for _CompatibilityContentUnavailableViewContent();
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)&v15, v13, (uint64_t)&v19);
  uint64_t v15 = v19;
  long long v16 = *(_OWORD *)v20;
  long long v17 = *(_OWORD *)&v20[16];
  uint64_t v18 = v21;
  sub_218FFDE04((uint64_t)&v15, v13, a9);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2190E3A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  swift_retain();
  swift_retain();
  return sub_219062A84(a5);
}

uint64_t ContentUnavailableView.init<>(title:message:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)(a7 + 88) = 0;
  *(_OWORD *)(a7 + 72) = 0u;
  *(_OWORD *)(a7 + 56) = 0u;
  *(void *)(a7 + 96) = swift_getKeyPath();
  *(unsigned char *)(a7 + 104) = 0;
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
  uint64_t v15 = (uint64_t *)(a7 + v14[21]);
  *uint64_t v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a7 + v14[22];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a7 + v14[23];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v17 = result;
  *(unsigned char *)(v17 + 8) = 0;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  *(unsigned char *)(a7 + 48) = 1;
  if (qword_26AD03470 != -1)
  {
    return swift_once();
  }
  return result;
}

uint64_t ContentUnavailableView.init<>(title:message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 88) = 0;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 56) = 0u;
  *(void *)(a5 + 96) = swift_getKeyPath();
  *(unsigned char *)(a5 + 104) = 0;
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_267C06610);
  uint64_t v11 = (uint64_t *)(a5 + v10[21]);
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a5 + v10[22];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  uint64_t v13 = a5 + v10[23];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v13 = result;
  *(unsigned char *)(v13 + 8) = 0;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  *(unsigned char *)(a5 + 48) = 1;
  if (qword_26AD03470 != -1)
  {
    return swift_once();
  }
  return result;
}

{
  return ContentUnavailableView.init(title:message:action:)(a1, a2, a3, a4, (uint64_t)nullsub_1, 0, a5);
}

uint64_t ContentUnavailableView.init<>(error:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for ContentUnavailableTextLogBuilder();
  uint64_t v4 = swift_allocObject();
  *(_WORD *)(v4 + 24) = 514;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v4;
  id v7 = a1;
  id v8 = a1;
  id v9 = a1;
  swift_retain();
  ContentUnavailableView.init<>(title:message:)((uint64_t)sub_2190F125C, v5, (uint64_t)sub_2190F1230, v6, (uint64_t)a2);
  uint64_t v10 = (void *)sub_2191575F8();
  id v11 = (id)AMSLogableError();

  uint64_t v12 = sub_21915AD48();
  uint64_t v14 = v13;

  swift_bridgeObjectRelease();
  a2[9] = v12;
  a2[10] = v14;
  uint64_t result = swift_release();
  a2[11] = v4;
  return result;
}

uint64_t sub_2190E3EB8(uint64_t a1)
{
  uint64_t v2 = sub_219159CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_219159CD8();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v17 - v13;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 16))(v9, v17[1], a1, v12);
  sub_219159CB8();
  sub_219159C98();
  char v15 = sub_219159CC8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v15 & 1;
}

uint64_t sub_2190E40E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219157668();
  uint64_t v5 = sub_219157688();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = sub_219157A58();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD03488);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1 + *(int *)(v9 + 36), v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03480);
    uint64_t result = swift_storeEnumTagMultiPayload();
    uint64_t v10 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a1 + *(int *)(v9 + 40));
    *uint64_t v10 = sub_2190E429C;
    v10[1] = 0;
  }
  return result;
}

uint64_t sub_2190E429C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190F06E0(a1);
}

uint64_t ContentUnavailableButton.init(role:sensitiveURL:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_218FFE158(a1, &qword_267C047B0);
  uint64_t v9 = sub_219157A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a5, 1, 1, v9);
  uint64_t v10 = type metadata accessor for ContentUnavailableButton();
  uint64_t v11 = a5 + *(int *)(v10 + 36);
  uint64_t v12 = sub_219157688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
  type metadata accessor for ContentUnavailableButton.Action();
  uint64_t result = swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)(a5 + *(int *)(v10 + 40));
  *uint64_t v14 = a3;
  v14[1] = a4;
  return result;
}

uint64_t sub_2190E43D4(void *a1)
{
  id v2 = a1;
  uint64_t v3 = sub_2190F0B20();

  return v3;
}

uint64_t sub_2190E4440()
{
  return swift_deallocObject();
}

uint64_t sub_2190E4478(void *a1, uint64_t a2)
{
  id v4 = a1;
  swift_retain();
  return sub_2190E2B80(a1, a2);
}

uint64_t sub_2190E44C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_219157A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 1, 1, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD03488);
  uint64_t v8 = (void *)(a3 + *(int *)(v7 + 36));
  *uint64_t v8 = a1;
  v8[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03480);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a3 + *(int *)(v7 + 40));
  *uint64_t v9 = sub_2190E45AC;
  v9[1] = 0;
  return swift_retain();
}

uint64_t sub_2190E45A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2190E44C4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2190E45AC@<X0>(uint64_t a1@<X8>)
{
  sub_219158308();
  if (qword_26AD03AA0 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26AD03A98;
  uint64_t result = sub_2191589D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t ContentUnavailableButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_219024A0C(a1, a6, &qword_267C047B0);
  uint64_t v11 = type metadata accessor for ContentUnavailableButton();
  uint64_t v12 = (void *)(a6 + *(int *)(v11 + 36));
  *uint64_t v12 = a2;
  v12[1] = a3;
  type metadata accessor for ContentUnavailableButton.Action();
  uint64_t result = swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)(a6 + *(int *)(v11 + 40));
  *uint64_t v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t sub_2190E4744@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 96);
  char v4 = *(unsigned char *)(v1 + 104);
  sub_218FFE128(v3, v4);
  sub_2190FC820(v3, v4, a1);
  return sub_218FFDDBC(v3, v4);
}

uint64_t sub_2190E47A8()
{
  sub_2190F0D28();
  return sub_219158238();
}

uint64_t sub_2190E47F0@<X0>(unsigned char *a1@<X8>)
{
  sub_2190F0D28();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190E4840@<X0>(unsigned char *a1@<X8>)
{
  sub_2190F0D28();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190E4890()
{
  return sub_219158248();
}

uint64_t sub_2190E48DC()
{
  return sub_219158248();
}

uint64_t sub_2190E4928()
{
  return sub_2191580E8();
}

uint64_t sub_2190E4950@<X0>(void *a1@<X8>)
{
  sub_21908C0BC();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190E49A4(uint64_t a1)
{
  id v2 = (uint64_t *)(v1 + *(int *)(a1 + 88));
  uint64_t v3 = *v2;
  uint64_t v4 = *((unsigned __int8 *)v2 + 8);
  j__swift_retain(*v2);
  uint64_t v5 = sub_2190F9FC0(v3, v4);
  j__swift_release(v3, v4);
  return v5;
}

uint64_t sub_2190E4A04(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 92);
  id v3 = *(id *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_218FFE134(*(id *)v2, v4);
  uint64_t v5 = sub_218FFE3D0(v3, v4);
  sub_218FFDD40(v3, v4);
  return v5;
}

uint64_t sub_2190E4A6C()
{
  return sub_2190E43D4(*(void **)(v0 + 16));
}

uint64_t sub_2190E4A8C()
{
  return sub_2190E4478(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t ContentUnavailableView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v167 = a2;
  uint64_t v166 = sub_21915B018();
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x270FA5388](v166);
  unint64_t v164 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_21915A088();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  char v161 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_219158718();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v158 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_219158278();
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v155 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = a1[2];
  uint64_t v176 = a1[3];
  uint64_t v174 = a1[4];
  uint64_t v173 = a1[5];
  uint64_t v175 = a1[6];
  uint64_t v172 = a1[7];
  uint64_t v7 = a1;
  uint64_t v192 = v171;
  uint64_t v193 = v176;
  uint64_t v194 = v174;
  uint64_t v195 = v173;
  uint64_t v196 = v175;
  uint64_t v197 = v172;
  type metadata accessor for _CompatibilityContentUnavailableViewContent();
  swift_getWitnessTable();
  type metadata accessor for _ContentUnavailableScrollView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD03518);
  uint64_t v8 = sub_2191584D8();
  uint64_t v153 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v135 = (uint64_t)&v111 - v9;
  sub_219157F48();
  type metadata accessor for _OnScenePhaseChange(255);
  sub_219157F48();
  uint64_t v10 = sub_2191584D8();
  uint64_t v151 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v149 = (uint64_t)&v111 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD03568);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_218FFDF90(&qword_26AD03510, &qword_26AD03518);
  uint64_t v190 = WitnessTable;
  uint64_t v191 = v14;
  uint64_t v154 = v8;
  uint64_t v15 = swift_getWitnessTable();
  unint64_t v16 = sub_219008100();
  uint64_t v188 = v15;
  unint64_t v189 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_2190CE5D0(&qword_26AD036F8, (void (*)(uint64_t))type metadata accessor for _OnScenePhaseChange);
  uint64_t v138 = v15;
  uint64_t v186 = v15;
  uint64_t v187 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v184 = v17;
  uint64_t v185 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_2190F11C4(&qword_26AD03570, &qword_26AD03568, (void (*)(void))sub_2190EBC14);
  uint64_t v192 = v10;
  uint64_t v193 = v12;
  uint64_t v194 = v20;
  uint64_t v195 = v21;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v137 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v133 = (char *)&v111 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD03A78);
  uint64_t v140 = OpaqueTypeMetadata2;
  uint64_t v24 = sub_219157F48();
  uint64_t v136 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v132 = (char *)&v111 - v25;
  uint64_t v152 = v10;
  uint64_t v192 = v10;
  uint64_t v193 = v12;
  uint64_t v148 = v12;
  uint64_t v134 = v20;
  uint64_t v194 = v20;
  uint64_t v195 = v21;
  uint64_t v130 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = sub_218FFDF90(&qword_26AD03A70, &qword_26AD03A78);
  uint64_t v122 = OpaqueTypeConformance2;
  uint64_t v182 = OpaqueTypeConformance2;
  uint64_t v183 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v192 = v24;
  uint64_t v193 = v28;
  uint64_t v29 = swift_getOpaqueTypeMetadata2();
  uint64_t v127 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v124 = (char *)&v111 - v30;
  uint64_t v139 = v24;
  uint64_t v192 = v24;
  uint64_t v193 = v28;
  uint64_t v123 = v28;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v131 = v29;
  uint64_t v192 = v29;
  uint64_t v193 = v31;
  uint64_t v125 = v31;
  uint64_t v32 = swift_getOpaqueTypeMetadata2();
  uint64_t v128 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v126 = (char *)&v111 - v33;
  sub_219158788();
  uint64_t v129 = v32;
  uint64_t v34 = sub_219157F48();
  uint64_t v144 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v141 = (char *)&v111 - v35;
  sub_219157D48();
  uint64_t v145 = v34;
  uint64_t v147 = sub_219157F48();
  uint64_t v146 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  uint64_t v142 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v143 = (uint64_t)&v111 - v38;
  uint64_t v113 = (uint64_t)v7;
  uint64_t v112 = *(v7 - 1);
  uint64_t v39 = v112;
  uint64_t v40 = *(void *)(v112 + 64);
  MEMORY[0x270FA5388](v41);
  uint64_t v114 = (char *)&v111 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v43 = MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v111 - v44;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  uint64_t v47 = v150;
  uint64_t v169 = v39 + 16;
  uint64_t v168 = v46;
  ((void (*)(char *, uint64_t, double))v46)((char *)&v111 - v44, v150, v43);
  uint64_t v48 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v49 = (v48 + 64) & ~v48;
  uint64_t v119 = v49 + v40;
  uint64_t v118 = v48 | 7;
  long long v50 = (void *)swift_allocObject();
  uint64_t v51 = v171;
  uint64_t v52 = v176;
  v50[2] = v171;
  v50[3] = v52;
  uint64_t v53 = v174;
  uint64_t v54 = v173;
  v50[4] = v174;
  v50[5] = v54;
  uint64_t v55 = v175;
  uint64_t v56 = v172;
  v50[6] = v175;
  v50[7] = v56;
  uint64_t v170 = v50;
  uint64_t v120 = v49;
  uint64_t v57 = (char *)v50 + v49;
  uint64_t v58 = v112;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
  uint64_t v121 = v45;
  uint64_t v60 = v45;
  uint64_t v61 = v113;
  uint64_t v117 = v112 + 32;
  uint64_t v116 = v59;
  v59(v57, v60, v113);
  sub_2190E4744(&v192);
  int v115 = v192;
  uint64_t v192 = v51;
  uint64_t v193 = v52;
  uint64_t v194 = v53;
  uint64_t v195 = v54;
  uint64_t v62 = v55;
  uint64_t v63 = v61;
  uint64_t v196 = v62;
  uint64_t v197 = v56;
  long long v64 = (void *)type metadata accessor for ContentUnavailableView.Implementation();
  (*(void (**)(uint64_t *, uint64_t, void *))(*(v64 - 1) + 32))(&v192, v47, v64);
  uint64_t v65 = v135;
  sub_2190E3300(v64, v135);
  uint64_t v66 = sub_2190E49A4(v61);
  if (!v66)
  {
    uint64_t v68 = v114;
    v168(v114, v47, v63);
LABEL_5:
    uint64_t v69 = (void *)sub_2190E4A04(v63);
    id v67 = objc_msgSend(v69, sel_scene);

    goto LABEL_6;
  }
  id v67 = (id)MEMORY[0x21D482C30](v66 + 16);
  swift_release();
  uint64_t v68 = v114;
  v168(v114, v47, v63);
  if (!v67) {
    goto LABEL_5;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t))(v58 + 8))(v68, v63);
  uint64_t v70 = v149;
  uint64_t v71 = v154;
  sub_219088E1C(v67, (uint64_t)sub_2190EBD60, (uint64_t)v170, v154, v138, v149);

  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v153 + 8))(v65, v71);
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = v171;
  uint64_t v74 = v176;
  *(&v111 - 8) = v171;
  *(&v111 - 7) = v74;
  uint64_t v75 = v173;
  *(&v111 - 6) = v174;
  *(&v111 - 5) = v75;
  uint64_t v76 = v172;
  *(&v111 - 4) = v175;
  *(&v111 - 3) = v76;
  uint64_t v77 = v47;
  *(&v111 - 2) = v47;
  uint64_t v78 = v133;
  uint64_t v79 = v152;
  sub_219158A98();
  (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v70, v79);
  LOBYTE(v181[0]) = v115 == 2;
  sub_219159318();
  sub_218FFE324();
  uint64_t v80 = v132;
  uint64_t v81 = v140;
  sub_219158A28();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v78, v81);
  uint64_t v82 = v156;
  uint64_t v83 = v155;
  uint64_t v84 = v157;
  (*(void (**)(char *, void, uint64_t))(v156 + 104))(v155, *MEMORY[0x263F19698], v157);
  uint64_t v85 = v124;
  uint64_t v86 = v139;
  sub_219158CB8();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v80, v86);
  uint64_t v87 = v158;
  sub_219158708();
  uint64_t v88 = v126;
  uint64_t v89 = v131;
  uint64_t v90 = v125;
  sub_219158C18();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v87, v160);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v85, v89);
  memset(v181, 0, sizeof(v181));
  uint64_t v91 = v161;
  sub_21915A058();
  sub_218FFE158((uint64_t)v181, qword_26AD03AB8);
  *(void *)&v181[0] = v89;
  *((void *)&v181[0] + 1) = v90;
  uint64_t v92 = swift_getOpaqueTypeConformance2();
  uint64_t v93 = v141;
  uint64_t v94 = v129;
  View.automationSemantics(_:)();
  (*(void (**)(char *, uint64_t))(v162 + 8))(v91, v163);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v88, v94);
  uint64_t v95 = v121;
  v168(v121, v77, v63);
  uint64_t v96 = (void *)swift_allocObject();
  uint64_t v97 = v176;
  v96[2] = v73;
  v96[3] = v97;
  uint64_t v98 = v173;
  v96[4] = v174;
  v96[5] = v98;
  uint64_t v99 = (char *)v96 + v120;
  uint64_t v100 = v172;
  v96[6] = v175;
  v96[7] = v100;
  v116(v99, v95, v63);
  uint64_t v101 = sub_2190CE5D0((unint64_t *)&qword_26AD03878, MEMORY[0x263F1A470]);
  uint64_t v179 = v92;
  uint64_t v180 = v101;
  uint64_t v102 = v145;
  uint64_t v103 = swift_getWitnessTable();
  long long v104 = v164;
  sub_218FFE1B4();
  uint64_t v105 = (uint64_t)v142;
  sub_219158D08();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v104, v166);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v93, v102);
  uint64_t v106 = sub_2190CE5D0(qword_26AD03990, MEMORY[0x263F189F8]);
  uint64_t v177 = v103;
  uint64_t v178 = v106;
  uint64_t v107 = v147;
  swift_getWitnessTable();
  uint64_t v108 = v143;
  sub_218FFDE04(v105, v107, v143);
  uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
  v109(v105, v107);
  sub_218FFDE04(v108, v107, v167);
  return ((uint64_t (*)(uint64_t, uint64_t))v109)(v108, v107);
}

uint64_t sub_2190E5E64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_21915AB08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_219157AB8();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x263F18450], v7, v9);
  char v12 = sub_219157AA8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    sub_21915AA88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159528();
    sub_21915A6A8();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v14 = *(uint64_t (**)(uint64_t))(a2 + 56);
    if (v14) {
      return v14(result);
    }
  }
  return result;
}

uint64_t sub_2190E60DC@<X0>(uint64_t a1@<X8>)
{
  if (sub_21915A648())
  {
    sub_219158308();
    if (qword_26AD03AA0 != -1) {
      swift_once();
    }
    id v2 = (id)qword_26AD03A98;
    uint64_t v7 = sub_2191589D8();
    MEMORY[0x270FA5388](v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03550);
    sub_218FFDF90(&qword_26AD03548, &qword_26AD03550);
    sub_219159248();
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03560);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03560);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v6(a1, 1, 1, v5);
  }
}

uint64_t sub_2190E6388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v13 = type metadata accessor for ContentUnavailableView();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v22 - v16, a1, v13, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = a3;
  *((void *)v19 + 4) = a4;
  *((void *)v19 + 5) = a5;
  uint64_t v20 = v24;
  *((void *)v19 + 6) = v23;
  *((void *)v19 + 7) = v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  return sub_219159058();
}

void sub_2190E652C(uint64_t a1)
{
  uint64_t v2 = sub_21915AB08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 80))
  {
    id v6 = objc_msgSend(self, sel_generalPasteboard);
    uint64_t v9 = sub_21915AD18();
    objc_msgSend(v6, sel_setString_, v9);

    uint64_t v7 = (void *)v9;
  }
  else
  {
    sub_21915AA88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159528();
    sub_21915A6D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_2190E6740@<X0>(uint64_t a1@<X8>)
{
  return sub_2190F06E0(a1);
}

BOOL static ContentUnavailableViewPresentationContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2190E6770(uint64_t a1)
{
  v1[6] = a1;
  sub_2191595A8();
  v1[7] = swift_task_alloc();
  uint64_t v2 = sub_21915AB08();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  sub_21915AF98();
  v1[11] = sub_21915AF88();
  uint64_t v4 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_2190E6890, v4, v3);
}

uint64_t sub_2190E6890()
{
  uint64_t v1 = v0[6];
  swift_release();
  if (*(void *)(v1 + 88))
  {
    uint64_t v3 = v0[9];
    uint64_t v2 = v0[10];
    uint64_t v4 = v0[8];
    swift_retain();
    sub_21915AA88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159598();
    sub_219159588();
    swift_retain();
    sub_219159568();
    swift_release();
    sub_219159588();
    uint64_t v5 = sub_2190EB344();
    uint64_t v6 = MEMORY[0x263F8D310];
    v0[2] = v5;
    v0[5] = v6;
    v0[3] = v7;
    sub_219159558();
    sub_218FFE158((uint64_t)(v0 + 2), qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    sub_21915A6A8();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  else
  {
    uint64_t v9 = v0[9];
    uint64_t v8 = v0[10];
    uint64_t v10 = v0[8];
    sub_21915AA88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159528();
    sub_21915A6A8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t ContentUnavailableViewPresentationContext.hash(into:)()
{
  return sub_21915B7C8();
}

uint64_t ContentUnavailableViewPresentationContext.hashValue.getter()
{
  return sub_21915B7D8();
}

uint64_t sub_2190E6C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2190F11C4(&qword_26AD01998, &qword_26AD01990, (void (*)(void))sub_2190EC128);
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t (*sub_2190E6CBC(void (*a1)(char *, char *, uint64_t)))()
{
  uint64_t v49 = a1;
  uint64_t v48 = sub_219157D18();
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v1 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v48);
  uint64_t v51 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v41 - v3;
  uint64_t v46 = sub_219157688();
  uint64_t v5 = *(void *)(v46 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v44 = sub_21915A198();
  uint64_t v43 = *(void *)(v44 - 8);
  uint64_t v10 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03480);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (long long *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2190090C4((uint64_t)v50, (uint64_t)v16, &qword_26AD03480);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_219018288(v16, (uint64_t)v55);
      sub_2190F04CC();
      sub_219158238();
      sub_219050DF4();
      sub_219158238();
      sub_219024A0C((uint64_t)v54, (uint64_t)v53, &qword_26AD010B8);
      sub_219018288(v55, (uint64_t)v52);
      uint64_t v35 = v43 + 32;
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      uint64_t v36 = v42;
      uint64_t v37 = v44;
      v34(v42, v13, v44);
      unint64_t v38 = (*(unsigned __int8 *)(v35 + 48) + 96) & ~(unint64_t)*(unsigned __int8 *)(v35 + 48);
      uint64_t v39 = swift_allocObject();
      sub_219024A0C((uint64_t)v53, v39 + 16, &qword_26AD010B8);
      sub_219018288(v52, v39 + 56);
      v34((char *)(v39 + v38), v36, v37);
      uint64_t v17 = sub_2190F0604;
      break;
    case 2u:
      unint64_t v18 = *(void (**)(char *, long long *, uint64_t))(v5 + 32);
      uint64_t v19 = v46;
      v18(v9, v16, v46);
      long long v50 = (void (*)(unint64_t, char *, uint64_t))v18;
      sub_2191581E8();
      uint64_t v20 = v47 + 32;
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      uint64_t v21 = v48;
      v49(v51, v4, v48);
      uint64_t v22 = v45;
      v18(v45, (long long *)v9, v19);
      unint64_t v23 = (*(unsigned __int8 *)(v20 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 48);
      unint64_t v24 = (v1 + *(unsigned __int8 *)(v5 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v25 = swift_allocObject();
      v49((char *)(v25 + v23), v51, v21);
      v50(v25 + v24, v22, v19);
      uint64_t v17 = sub_2190F02B0;
      break;
    case 3u:
      uint64_t v26 = *(void (**)(char *, long long *, uint64_t))(v5 + 32);
      uint64_t v27 = v46;
      v26(v9, v16, v46);
      long long v50 = (void (*)(unint64_t, char *, uint64_t))v26;
      sub_219158188();
      uint64_t v28 = v47 + 32;
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      uint64_t v29 = v48;
      v49(v51, v4, v48);
      uint64_t v30 = v45;
      v26(v45, (long long *)v9, v27);
      unint64_t v31 = (*(unsigned __int8 *)(v28 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 48);
      unint64_t v32 = (v1 + *(unsigned __int8 *)(v5 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v33 = swift_allocObject();
      v49((char *)(v33 + v31), v51, v29);
      v50(v33 + v32, v30, v27);
      uint64_t v17 = sub_2190F02B0;
      break;
    default:
      *(_OWORD *)(swift_allocObject() + 16) = *v16;
      uint64_t v17 = sub_2190F0284;
      break;
  }
  return v17;
}

uint64_t sub_2190E7330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2190090C4(a1, (uint64_t)&v8, &qword_26AD010B8);
  if (v9)
  {
    sub_219018288(&v8, (uint64_t)v10);
    uint64_t v5 = v11;
    uint64_t v6 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a2, a3, v5, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_218FFE158((uint64_t)&v8, &qword_26AD010B8);
    return sub_219159FC8();
  }
}

unint64_t sub_2190E7410()
{
  return 0xD00000000000002ALL;
}

uint64_t ContentUnavailableButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_219024A0C(a1, a5, &qword_267C047B0);
  uint64_t v9 = type metadata accessor for ContentUnavailableButton();
  sub_219018288(a2, a5 + *(int *)(v9 + 36));
  type metadata accessor for ContentUnavailableButton.Action();
  uint64_t result = swift_storeEnumTagMultiPayload();
  uint64_t v11 = (void *)(a5 + *(int *)(v9 + 40));
  *uint64_t v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t ContentUnavailableButton.init(role:url:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_219024A0C(a1, a5, &qword_267C047B0);
  uint64_t v9 = type metadata accessor for ContentUnavailableButton();
  uint64_t v10 = a5 + *(int *)(v9 + 36);
  uint64_t v11 = sub_219157688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  type metadata accessor for ContentUnavailableButton.Action();
  uint64_t result = swift_storeEnumTagMultiPayload();
  uint64_t v13 = (void *)(a5 + *(int *)(v9 + 40));
  *uint64_t v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t ContentUnavailableButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v110 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = sub_219158968();
  uint64_t v6 = sub_2191584D8();
  uint64_t v101 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v116 = (uint64_t *)((char *)&v90 - v7);
  uint64_t v108 = v5;
  uint64_t v100 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v99 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v113 = (uint64_t)&v90 - v11;
  uint64_t v12 = sub_219157688();
  uint64_t v114 = *(void *)(v12 - 8);
  int v115 = (void (*)(void, void))v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v98 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v112 = (char *)&v90 - v15;
  uint64_t v16 = type metadata accessor for ActionButton();
  uint64_t v93 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v92 = (uint64_t)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v95 = (uint64_t)&v90 - v19;
  uint64_t v20 = sub_219159088();
  uint64_t v107 = v16;
  uint64_t v21 = sub_2191584D8();
  uint64_t v97 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v96 = (char *)&v90 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = v20;
  uint64_t v91 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v94 = (uint64_t)&v90 - v30;
  uint64_t v102 = v4;
  uint64_t v103 = v3;
  uint64_t v31 = type metadata accessor for ContentUnavailableButton.Action();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v90 - v33;
  uint64_t v106 = v21;
  uint64_t v109 = v6;
  uint64_t v35 = sub_2191584D8();
  uint64_t v104 = *(void *)(v35 - 8);
  double v36 = MEMORY[0x270FA5388](v35);
  uint64_t v118 = (uint64_t)&v90 - v37;
  uint64_t v38 = (uint64_t)v111;
  (*(void (**)(char *, char *, uint64_t, double))(v32 + 16))(v34, (char *)v111 + *(int *)(a1 + 36), v31, v36);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v117 = v35;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_219018288((long long *)v34, (uint64_t)v128);
      sub_2190090C4(v38, (uint64_t)v25, &qword_267C047B0);
      sub_219030940((uint64_t)v128, (uint64_t)v127);
      uint64_t v71 = v92;
      ActionButton.init(role:action:label:)((uint64_t)v25, (uint64_t)v127, *(void *)(v38 + *(int *)(a1 + 40)), *(void *)(v38 + *(int *)(a1 + 40) + 8), v92);
      uint64_t v72 = v107;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v74 = v95;
      sub_218FFDE04(v71, v72, v95);
      uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
      swift_retain();
      v75(v71, v72);
      uint64_t v76 = v75;
      uint64_t v116 = (uint64_t *)v75;
      sub_218FFDE04(v74, v72, v71);
      uint64_t v77 = v105;
      uint64_t v78 = swift_getWitnessTable();
      uint64_t v79 = (uint64_t)v96;
      sub_218FFCBB0(v71, v77, v72);
      v76(v71, v72);
      uint64_t v125 = v78;
      uint64_t v126 = WitnessTable;
      uint64_t v80 = v106;
      swift_getWitnessTable();
      uint64_t v123 = swift_getWitnessTable();
      uint64_t v124 = v123;
      swift_getWitnessTable();
      sub_219050FE4(v79, v80);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v79, v80);
      ((void (*)(uint64_t, uint64_t))v116)(v95, v72);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v128);
      break;
    case 2:
      uint64_t v49 = v114;
      long long v50 = v115;
      uint64_t v51 = v112;
      (*(void (**)(char *, char *, void (*)(void, void)))(v114 + 32))(v112, v34, v115);
      (*(void (**)(char *, char *, void (*)(void, void)))(v49 + 16))(v98, v51, v50);
      uint64_t v52 = (uint64_t)v99;
      sub_219158948();
      uint64_t v53 = v108;
      uint64_t v54 = swift_getWitnessTable();
      uint64_t v55 = v113;
      sub_218FFDE04(v52, v53, v113);
      uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v56(v52, v53);
      uint64_t v111 = v56;
      sub_218FFDE04(v55, v53, v52);
      sub_219050FE4(v52, v53);
      v56(v52, v53);
      uint64_t v57 = swift_getWitnessTable();
      uint64_t v58 = swift_getWitnessTable();
      uint64_t v131 = v57;
      uint64_t v132 = v58;
      uint64_t v59 = v106;
      uint64_t v103 = swift_getWitnessTable();
      uint64_t v129 = v54;
      uint64_t v130 = v54;
      goto LABEL_5;
    case 3:
      uint64_t v60 = v114;
      uint64_t v61 = v115;
      uint64_t v62 = v112;
      (*(void (**)(char *, char *, void (*)(void, void)))(v114 + 32))(v112, v34, v115);
      (*(void (**)(char *, char *, void (*)(void, void)))(v60 + 16))(v98, v62, v61);
      uint64_t v63 = (uint64_t)v99;
      sub_219158958();
      uint64_t v53 = v108;
      uint64_t v64 = swift_getWitnessTable();
      uint64_t v65 = v113;
      sub_218FFDE04(v63, v53, v113);
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v66(v63, v53);
      uint64_t v111 = v66;
      sub_218FFDE04(v65, v53, v63);
      sub_218FFCBB0(v63, v53, v53);
      v66(v63, v53);
      uint64_t v67 = swift_getWitnessTable();
      uint64_t v68 = swift_getWitnessTable();
      uint64_t v141 = v67;
      uint64_t v142 = v68;
      uint64_t v59 = v106;
      uint64_t v103 = swift_getWitnessTable();
      uint64_t v139 = v64;
      uint64_t v140 = v64;
LABEL_5:
      uint64_t v69 = v109;
      swift_getWitnessTable();
      uint64_t v70 = (void (*)(void, void))v116;
      sub_218FFCBB0((uint64_t)v116, v59, v69);
      (*(void (**)(void, uint64_t))(v101 + 8))(v70, v69);
      v111(v113, v53);
      (*(void (**)(char *, void))(v114 + 8))(v112, v115);
      break;
    default:
      uint64_t v40 = (uint64_t *)*((void *)v34 + 1);
      sub_2190090C4(v38, (uint64_t)v25, &qword_267C047B0);
      uint64_t v116 = v40;
      swift_retain();
      sub_219159048();
      uint64_t v41 = v105;
      uint64_t v42 = swift_getWitnessTable();
      uint64_t v43 = v94;
      sub_218FFDE04((uint64_t)v28, v41, v94);
      uint64_t v44 = *(void (**)(char *, uint64_t))(v91 + 8);
      v44(v28, v41);
      uint64_t v45 = v44;
      int v115 = (void (*)(void, void))v44;
      sub_218FFDE04(v43, v41, (uint64_t)v28);
      uint64_t v46 = swift_getWitnessTable();
      uint64_t v47 = (uint64_t)v96;
      sub_219050FE4((uint64_t)v28, v41);
      v45(v28, v41);
      uint64_t v121 = v42;
      uint64_t v122 = v46;
      uint64_t v48 = v106;
      swift_getWitnessTable();
      uint64_t v119 = swift_getWitnessTable();
      uint64_t v120 = v119;
      swift_getWitnessTable();
      sub_219050FE4(v47, v48);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v47, v48);
      v115(v94, v41);
      break;
  }
  uint64_t v81 = v110;
  uint64_t v82 = v104;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v137 = v83;
  uint64_t v138 = v84;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v135 = swift_getWitnessTable();
  uint64_t v136 = v135;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v133 = v85;
  uint64_t v134 = v86;
  uint64_t v87 = v117;
  swift_getWitnessTable();
  uint64_t v88 = v118;
  sub_218FFDE04(v118, v87, v81);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 8))(v88, v87);
}

uint64_t sub_2190E83B0(double a1)
{
  uint64_t v2 = sub_219158918();
  double v3 = MEMORY[0x270FA5388](v2);
  *(double *)&v7[1] = a1;
  (*(void (**)(char *, void, double))(v5 + 104))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F1A6D8], v3);
  sub_2190EF59C();
  return sub_219157BF8();
}

uint64_t sub_2190E84A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  double v6 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(v8 + 16) = *(void *)(a1 + 16);
  *(void *)(v8 + 24) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_219157F48();
  sub_219157F48();
  uint64_t v23 = v9;
  uint64_t v24 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  sub_2191590F8();
  sub_219157F48();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = MEMORY[0x263F19100];
  swift_getWitnessTable();
  uint64_t v10 = sub_219157AC8();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = OpaqueTypeMetadata2;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeMetadata2();
  uint64_t v25 = OpaqueTypeMetadata2;
  uint64_t v26 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_219157DB8();
  uint64_t v18 = v14;
  uint64_t v15 = sub_219157DC8();
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)&v17, v15, (uint64_t)&v25);
  swift_release();
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  sub_218FFDE04((uint64_t)&v17, v15, a2);
  return swift_release();
}

uint64_t sub_2190E87FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v33 = a3;
  uint64_t v37 = a2;
  uint64_t v36 = a1;
  uint64_t v45 = a5;
  uint64_t v6 = sub_2191586E8();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_2191584F8();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219157F48();
  sub_219157F48();
  uint64_t v57 = a4;
  uint64_t v58 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v56 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  sub_2191590F8();
  sub_219157F48();
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = MEMORY[0x263F19100];
  swift_getWitnessTable();
  uint64_t v9 = sub_219157AC8();
  uint64_t v32 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v51 = v9;
  uint64_t v52 = v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v39 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v46 = (char *)&v31 - v14;
  uint64_t v51 = v9;
  uint64_t v52 = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v51 = OpaqueTypeMetadata2;
  uint64_t v52 = OpaqueTypeConformance2;
  uint64_t v35 = OpaqueTypeConformance2;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v38 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v31 - v20;
  sub_219158828();
  uint64_t v47 = v33;
  uint64_t v48 = v31;
  uint64_t v49 = v36;
  uint64_t v50 = v37;
  sub_219157AD8();
  uint64_t v22 = v34;
  sub_2191584E8();
  unsigned __int8 v23 = sub_219158828();
  sub_219158818();
  sub_219158818();
  if (sub_219158818() != v23) {
    sub_219158818();
  }
  sub_219158C28();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v41);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  uint64_t v24 = v42;
  sub_2191584E8();
  unsigned __int8 v25 = sub_219158828();
  unsigned __int8 v26 = sub_219158808();
  sub_219158818();
  sub_219158818();
  if (sub_219158818() != v25) {
    sub_219158818();
  }
  sub_219158818();
  if (sub_219158818() != v26) {
    sub_219158818();
  }
  uint64_t v27 = v35;
  uint64_t v28 = v46;
  sub_219158B88();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v44);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, OpaqueTypeMetadata2);
  uint64_t v51 = OpaqueTypeMetadata2;
  uint64_t v52 = v27;
  swift_getOpaqueTypeConformance2();
  sub_218FFDE04((uint64_t)v18, v16, (uint64_t)v21);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v38 + 8);
  v29(v18, v16);
  sub_218FFDE04((uint64_t)v21, v16, v45);
  return ((uint64_t (*)(char *, uint64_t))v29)(v21, v16);
}

uint64_t sub_2190E8EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = a5;
  sub_219157F48();
  sub_219157F48();
  uint64_t v35 = a4;
  uint64_t v36 = MEMORY[0x263F18C10];
  uint64_t v25 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  uint64_t v8 = sub_2191590F8();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_219157F48();
  uint64_t v24 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v21 - v15;
  sub_219157CC8();
  sub_219158338();
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = v22;
  uint64_t v30 = a1;
  sub_2191590E8();
  sub_219157CC8();
  uint64_t v22 = v17;
  sub_219157CC8();
  sub_219159318();
  uint64_t v20 = swift_getWitnessTable();
  sub_219158D48();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  uint64_t v31 = v20;
  uint64_t v32 = MEMORY[0x263F19100];
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v13, v11, (uint64_t)v16);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v24 + 8);
  v18(v13, v11);
  sub_218FFDE04((uint64_t)v16, v11, v26);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v11);
}

uint64_t sub_2190E9220@<X0>(void (**a1)(double)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v27 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_219157F48();
  uint64_t v30 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = sub_219157F48();
  uint64_t v31 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v29 = (uint64_t)&v26 - v19;
  (*a1)(v18);
  uint64_t v28 = a2;
  sub_219157CC8();
  double v21 = v20;
  type metadata accessor for _ContentUnavailableScrollView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  sub_219157C08();
  if (v21 >= v37) {
    sub_219158898();
  }
  else {
    sub_219158838();
  }
  sub_219158D98();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, a3);
  sub_219157CC8();
  sub_219157C08();
  sub_219159318();
  uint64_t v35 = a4;
  uint64_t v36 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158D38();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  uint64_t v33 = WitnessTable;
  uint64_t v34 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  uint64_t v23 = v29;
  sub_218FFDE04((uint64_t)v16, v14, v29);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v31 + 8);
  v24(v16, v14);
  sub_218FFDE04(v23, v14, v32);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v14);
}

uint64_t sub_2190E95F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v21 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05460);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06638);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06640);
  sub_219157F48();
  uint64_t v20 = *(void *)(a1 + 24);
  sub_219157F48();
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C28);
  sub_219157F48();
  sub_219157F48();
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v3 = sub_2191582D8();
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v32 = v18;
  uint64_t v33 = v3;
  uint64_t v34 = v19;
  uint64_t v35 = sub_2190CE5D0(&qword_267C06648, MEMORY[0x263F197A8]);
  swift_getOpaqueTypeMetadata2();
  sub_219157F48();
  swift_getTupleTypeMetadata3();
  sub_2191593B8();
  swift_getWitnessTable();
  uint64_t v4 = sub_2191590F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = sub_219157F48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - v13;
  sub_219158338();
  uint64_t v24 = v21;
  uint64_t v25 = v20;
  uint64_t v26 = v18;
  long long v27 = *(_OWORD *)(a1 + 40);
  uint64_t v28 = v19;
  uint64_t v29 = v22;
  sub_2191590E8();
  sub_219158838();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158D98();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v30 = WitnessTable;
  uint64_t v31 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v11, v8, (uint64_t)v14);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  sub_218FFDE04((uint64_t)v14, v8, v23);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
}

uint64_t sub_2190E9A3C@<X0>(void (**a1)(double)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v119 = a7;
  uint64_t v113 = a6;
  uint64_t v98 = a5;
  uint64_t v130 = a8;
  uint64_t v13 = sub_2191582D8();
  uint64_t v118 = v13;
  uint64_t v129 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v124 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = a4;
  uint64_t v128 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v120 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_2190CE5D0(&qword_267C06648, MEMORY[0x263F197A8]);
  uint64_t v143 = a4;
  uint64_t v144 = v13;
  uint64_t v145 = a7;
  uint64_t v146 = v116;
  uint64_t v123 = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v127 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v114 = (char *)&v96 - v17;
  uint64_t v125 = sub_219157F48();
  uint64_t v126 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  int v115 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v121 = (uint64_t)&v96 - v20;
  uint64_t v107 = a3;
  uint64_t v110 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v106 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05460);
  uint64_t v104 = sub_219157F48();
  uint64_t v109 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v101 = (char *)&v96 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06638);
  uint64_t v105 = sub_219157F48();
  uint64_t v111 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v102 = (char *)&v96 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C28);
  uint64_t v108 = sub_219157F48();
  uint64_t v112 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v103 = (char *)&v96 - v25;
  uint64_t v132 = sub_219157F48();
  uint64_t v135 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v137 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v134 = (uint64_t)&v96 - v28;
  uint64_t v29 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_219157F48();
  uint64_t v99 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v96 - v34;
  uint64_t v36 = sub_219157F48();
  uint64_t v100 = *(void (***)(char *, uint64_t))(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v96 - v37;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06640);
  uint64_t v131 = sub_219157F48();
  uint64_t v133 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v136 = (char *)&v96 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v41 = MEMORY[0x270FA5388](v40);
  uint64_t v138 = (uint64_t)&v96 - v42;
  uint64_t v97 = a1;
  (*a1)(v41);
  sub_219158908();
  sub_2191588C8();
  swift_release();
  uint64_t v43 = a2;
  uint64_t v44 = v98;
  sub_219158CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v43);
  uint64_t v45 = sub_218FFDF90(&qword_267C05500, &qword_267C05460);
  v142[17] = v44;
  v142[18] = v45;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158C78();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v35, v33);
  uint64_t v143 = sub_219158E78();
  uint64_t v96 = sub_218FFDF90(&qword_267C06650, &qword_267C06638);
  v142[15] = WitnessTable;
  v142[16] = v96;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = (uint64_t)v136;
  sub_219158B28();
  swift_release();
  v100[1](v38, v36);
  uint64_t v49 = sub_218FFDF90(&qword_267C06658, &qword_267C06640);
  v142[13] = v47;
  v142[14] = v49;
  uint64_t v50 = v131;
  uint64_t v98 = swift_getWitnessTable();
  sub_218FFDE04(v48, v50, v138);
  uint64_t v51 = *(void (***)(char *, uint64_t))(v133 + 8);
  uint64_t v99 = v133 + 8;
  uint64_t v100 = v51;
  uint64_t v52 = ((uint64_t (*)(uint64_t, uint64_t))v51)(v48, v50);
  uint64_t v53 = v97;
  uint64_t v54 = v106;
  ((void (*)(uint64_t))v97[2])(v52);
  sub_2191588B8();
  uint64_t v55 = v101;
  uint64_t v56 = v107;
  uint64_t v57 = v113;
  sub_219158CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v56);
  v142[11] = v57;
  v142[12] = v45;
  uint64_t v58 = v104;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = v102;
  sub_219158C78();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v55, v58);
  LODWORD(v143) = sub_2191585E8();
  v142[9] = v59;
  v142[10] = v96;
  uint64_t v61 = v105;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v103;
  sub_219158B28();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v60, v61);
  sub_219158848();
  uint64_t v64 = sub_218FFDF90(&qword_267C04C20, &qword_267C04C28);
  v142[7] = v62;
  v142[8] = v64;
  uint64_t v65 = v108;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v67 = (uint64_t)v137;
  sub_219158D98();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v63, v65);
  v142[5] = v66;
  v142[6] = MEMORY[0x263F18C10];
  uint64_t v68 = v132;
  uint64_t v111 = swift_getWitnessTable();
  sub_218FFDE04(v67, v68, v134);
  uint64_t v69 = *(void (**)(void, void))(v135 + 8);
  uint64_t v112 = v135 + 8;
  uint64_t v113 = v69;
  uint64_t v70 = ((uint64_t (*)(uint64_t, uint64_t))v69)(v67, v68);
  uint64_t v71 = v120;
  ((void (*)(uint64_t))v53[4])(v70);
  uint64_t v72 = v124;
  sub_2191582C8();
  uint64_t v73 = v114;
  uint64_t v74 = v117;
  uint64_t v75 = v118;
  uint64_t v76 = v119;
  uint64_t v77 = v116;
  sub_219158A78();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v72, v75);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v71, v74);
  sub_219158848();
  uint64_t v143 = v74;
  uint64_t v144 = v75;
  uint64_t v145 = v76;
  uint64_t v146 = v77;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v79 = (uint64_t)v115;
  uint64_t v80 = OpaqueTypeMetadata2;
  sub_219158D98();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v73, v80);
  v142[3] = OpaqueTypeConformance2;
  v142[4] = MEMORY[0x263F18C10];
  uint64_t v81 = v125;
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v82 = v121;
  sub_218FFDE04(v79, v81, v121);
  uint64_t v83 = v126;
  uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
  uint64_t v85 = v79;
  v84(v79, v81);
  uint64_t v86 = v136;
  uint64_t v87 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v136, v138, v131);
  uint64_t v143 = (uint64_t)v86;
  uint64_t v88 = v137;
  uint64_t v89 = v134;
  uint64_t v90 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v137, v134, v132);
  uint64_t v144 = (uint64_t)v88;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v85, v82, v81);
  uint64_t v145 = v85;
  v142[0] = v87;
  v142[1] = v90;
  uint64_t v91 = v90;
  v142[2] = v81;
  uint64_t v139 = v98;
  uint64_t v140 = v111;
  uint64_t v141 = v129;
  sub_218FFC48C((uint64_t)&v143, 3uLL, (uint64_t)v142);
  v84(v82, v81);
  uint64_t v92 = v89;
  uint64_t v93 = (void (*)(char *, uint64_t))v113;
  v113(v92, v90);
  uint64_t v94 = v100;
  ((void (*)(uint64_t, uint64_t))v100)(v138, v87);
  v84(v85, v81);
  v93(v137, v91);
  return ((uint64_t (*)(char *, uint64_t))v94)(v136, v87);
}

uint64_t sub_2190EAA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190E95F0(a1, a2);
}

uint64_t sub_2190EAABC(uint64_t a1, uint64_t a2)
{
  void (*v33)(uint64_t *__return_ptr, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(void (*)(char *, char *, uint64_t), uint64_t);
  void (*v40)(uint64_t *, void);
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *, void);
  void (*v47)(uint64_t *, void);
  void (*v48)(uint64_t *, void);
  uint64_t v49;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v51;
  uint64_t v53;
  void (*v54)(void (*)(char *, char *, uint64_t), uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[2];
  char v67;
  uint64_t v68;
  uint64_t v69;

  uint64_t v62 = a2;
  uint64_t v58 = a1;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD03488);
  MEMORY[0x270FA5388](v60);
  uint64_t v55 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v61 = (uint64_t)&v53 - v5;
  uint64_t v6 = sub_219158228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  uint64_t v65 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void (*)(char *, char *, uint64_t))((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_2191578E8();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_219157978();
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219157948();
  sub_2191578D8();
  uint64_t v14 = sub_2191578F8();
  uint64_t v63 = v2;
  uint64_t v15 = (*v2)(v14);
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03540);
  sub_219158728();
  sub_2191589B8();
  sub_218FFE148(v15, v17, v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v65 + 8);
  v65 += 8;
  v21(v9, v64);
  uint64_t v22 = sub_219157938();
  uint64_t v23 = v63[2](v22);
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  uint64_t v59 = v20;
  sub_219158728();
  sub_2191589B8();
  sub_218FFE148(v23, v25, v27);
  swift_bridgeObjectRelease();
  uint64_t v54 = v21;
  v21(v9, v64);
  uint64_t v28 = sub_219157908();
  uint64_t v29 = v63[4];
  if (v29)
  {
    uint64_t v30 = v55;
    v29(v28);
    uint64_t v31 = (uint64_t)v30;
    uint64_t v32 = v61;
    sub_219024A0C(v31, v61, qword_26AD03488);
    uint64_t v33 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v32 + *(int *)(v60 + 40));
    uint64_t v34 = swift_retain();
    v33(v66, v34);
    swift_release();
    uint64_t v35 = v66[0];
    uint64_t v36 = v66[1];
    uint64_t v37 = v67;
    sub_219158728();
    sub_2191589B8();
    sub_218FFE148(v35, v36, v37);
    swift_bridgeObjectRelease();
    uint64_t v38 = v64;
    uint64_t v39 = v54;
    v54(v9, v64);
    uint64_t v40 = (void (*)(uint64_t *, void))sub_219157958();
    sub_21915B358();
    v40(v66, 0);
    double v41 = v61;
    sub_219158728();
    uint64_t v42 = sub_2190E6CBC(v9);
    uint64_t v44 = v43;
    v39(v9, v38);
    sub_218FFE628(0, qword_26AD03580);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v42;
    *(void *)(v45 + 24) = v44;
    swift_retain();
    sub_21915B348();
    uint64_t v46 = (void (*)(uint64_t *, void))sub_219157928();
    sub_219157918();
    v46(v66, 0);
    swift_release();
    sub_218FFE158(v41, qword_26AD03488);
  }
  else
  {
    uint64_t v47 = (void (*)(uint64_t *, void))sub_219157958();
    sub_21915B358();
    v47(v66, 0);
    uint64_t v48 = (void (*)(uint64_t *, void))sub_219157928();
    sub_219157918();
    v48(v66, 0);
  }
  uint64_t v49 = v57;
  uint64_t v68 = v57;
  uint64_t v69 = MEMORY[0x263F81FB8];
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v66);
  uint64_t v51 = v56;
  (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 16))(boxed_opaque_existential_1Tm, v13, v49);
  sub_21915B2E8();
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v13, v49);
}

void *sub_2190EB108()
{
  uint64_t v0 = sub_219157978();
  MEMORY[0x270FA5388](v0 - 8);
  sub_218FFE628(0, &qword_26AD03578);
  sub_219157948();
  uint64_t v1 = (void *)sub_21915B2F8();
  objc_msgSend(v1, sel_setScrollEnabled_, 0);
  LODWORD(v2) = 1132068864;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  return v1;
}

uint64_t sub_2190EB1CC(uint64_t a1, uint64_t a2)
{
  return sub_2190EAABC(a1, a2);
}

uint64_t sub_2190EB210()
{
  return sub_219158418();
}

uint64_t sub_2190EB24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2190F066C();
  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_2190EB2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2190F066C();
  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_2190EB314()
{
}

uint64_t sub_2190EB344()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 == 2 || (v1 & 1) != 0 || (sub_21915AD88(), *(unsigned char *)(v0 + 25) != 2)) {
    sub_21915AD88();
  }
  double v2 = (void *)sub_2191575F8();
  id v3 = (id)AMSLogableError();

  sub_21915AD48();
  sub_21915AD88();
  swift_bridgeObjectRelease();
  sub_21915AD88();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2190EB4A0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2190EB4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)(a7 + 88) = 0;
  *(_OWORD *)(a7 + 72) = 0u;
  *(_OWORD *)(a7 + 56) = 0u;
  *(void *)(a7 + 96) = swift_getKeyPath();
  *(unsigned char *)(a7 + 104) = 0;
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_267C04398);
  uint64_t v15 = (uint64_t *)(a7 + v14[21]);
  *uint64_t v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a7 + v14[22];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a7 + v14[23];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v17 = result;
  *(unsigned char *)(v17 + 8) = 0;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  *(unsigned char *)(a7 + 48) = 0;
  return result;
}

uint64_t ContentUnavailableView.init(title:message:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)(a7 + 88) = 0;
  *(_OWORD *)(a7 + 72) = 0u;
  *(_OWORD *)(a7 + 56) = 0u;
  *(void *)(a7 + 96) = swift_getKeyPath();
  *(unsigned char *)(a7 + 104) = 0;
  uint64_t v13 = (int *)type metadata accessor for ContentUnavailableView();
  uint64_t v14 = (uint64_t *)(a7 + v13[21]);
  *uint64_t v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a7 + v13[22];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v16 = a7 + v13[23];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v16 = result;
  *(unsigned char *)(v16 + 8) = 0;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  *(unsigned char *)(a7 + 48) = 0;
  return result;
}

uint64_t ContentUnavailableView.init<>(title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ContentUnavailableView.init(title:message:action:)(a1, a2, (uint64_t)nullsub_1, 0, (uint64_t)nullsub_1, 0, a3);
}

uint64_t ContentUnavailableView.init<>(title:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return ContentUnavailableView.init(title:message:action:)(a1, a2, (uint64_t)nullsub_1, 0, a3, a4, a5);
}

uint64_t ContentUnavailableView.init<>(error:action:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  type metadata accessor for ContentUnavailableTextLogBuilder();
  uint64_t v12 = swift_allocObject();
  *(_WORD *)(v12 + 24) = 514;
  *(void *)(v12 + 16) = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v12;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a2;
  v15[5] = a3;
  ContentUnavailableView.init(title:message:action:)((uint64_t)sub_2190F1234, v13, (uint64_t)sub_2190F1268, v14, (uint64_t)sub_2190EC0E4, (uint64_t)v15, a6);
  id v16 = a1;
  id v17 = a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a6 + 88) = v12;
  return result;
}

void sub_2190EB9AC(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = a1;
  uint64_t v5 = sub_2190F0B20();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;

  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v9 & 1;
  *(void *)(a2 + 24) = v11;
}

uint64_t sub_2190EBA14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = a1;
  swift_retain();
  uint64_t result = sub_2190E2B80(a1, a2);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v9 & 1;
  *(void *)(a3 + 24) = v10;
  return result;
}

uint64_t sub_2190EBA6C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v0 - 8);
  double v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_219157A58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_retain();
  return sub_219159048();
}

uint64_t sub_2190EBB6C()
{
  return sub_2190EBA6C();
}

void sub_2190EBB74(uint64_t a1@<X8>)
{
  sub_2190EB9AC(*(void **)(v1 + 16), a1);
}

uint64_t sub_2190EBB80@<X0>(uint64_t a1@<X8>)
{
  return sub_2190EBA14(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2190EBB88()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for ContentUnavailableButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ContentUnavailableButton.Action()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _CompatibilityContentUnavailableViewContent()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for _ContentUnavailableScrollView()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2190EBC14()
{
  unint64_t result = qword_26AD03558;
  if (!qword_26AD03558)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD03560);
    sub_218FFDF90(&qword_26AD03548, &qword_26AD03550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03558);
  }
  return result;
}

uint64_t type metadata accessor for ContentUnavailableView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2190EBCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  swift_release();
  swift_release();
  if (a7)
  {
    return sub_21903F788(a5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2190EBD60(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ContentUnavailableView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_2190E5E64(a1, v4);
}

uint64_t type metadata accessor for ContentUnavailableView.Implementation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2190EBE3C()
{
  return sub_2190F07C0((uint64_t (*)(void, void, void, void, void, void, void))sub_2190E60DC);
}

uint64_t sub_2190EBE58()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  v1[2] = v0[2];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = v6;
  uint64_t v7 = *(void *)(type metadata accessor for ContentUnavailableView() - 8);
  uint64_t v8 = (uint64_t)v0 + ((*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  char v9 = (void *)swift_task_alloc();
  v1[8] = v9;
  *char v9 = v1;
  v9[1] = sub_2190EBF74;
  return sub_2190E6770(v8);
}

uint64_t sub_2190EBF74()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t objectdestroy_2Tm_1()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190EC0AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190EC0E4()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_2190EC10C()
{
  return sub_2190F004C();
}

unint64_t sub_2190EC128()
{
  unint64_t result = qword_26AD01988;
  if (!qword_26AD01988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD01988);
  }
  return result;
}

uint64_t sub_2190EC17C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for JetCellularDataInquiry()
{
  return self;
}

void sub_2190EC1E4()
{
  sub_2190EE344(319, &qword_26AD03780, MEMORY[0x263F18460], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_2190EC2D0(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    char v13 = *(unsigned char *)(a2 + 48);
    sub_2190EC4E8(*(void *)a2, v8, v9, v10, v11, v12, v13);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 48) = v13;
    uint64_t v14 = *(void *)(a2 + 56);
    if (v14)
    {
      uint64_t v15 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v14;
      *(void *)(a1 + 64) = v15;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    }
    uint64_t v17 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v17;
    uint64_t v18 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    char v19 = *(unsigned char *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_218FFE128(v18, v19);
    *(void *)(a1 + 96) = v18;
    *(unsigned char *)(a1 + 104) = v19;
    uint64_t v20 = a3[21];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_219157AB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[22];
    uint64_t v25 = a1 + v24;
    char v26 = (uint64_t *)(a2 + v24);
    uint64_t v27 = *v26;
    char v28 = *((unsigned char *)v26 + 8);
    j__swift_retain(*v26);
    *(void *)uint64_t v25 = v27;
    *(unsigned char *)(v25 + 8) = v28;
    uint64_t v29 = a3[23];
    uint64_t v30 = a1 + v29;
    uint64_t v31 = a2 + v29;
    id v32 = *(id *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    sub_218FFE134(*(id *)v31, v33);
    *(void *)uint64_t v30 = v32;
    *(unsigned char *)(v30 + 8) = v33;
  }
  return a1;
}

uint64_t sub_2190EC4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_retain();
    swift_retain();
    return sub_219062A84(a5);
  }
  else
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
}

void sub_2190EC574(uint64_t a1, int *a2)
{
  sub_2190EBCDC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  if (*(void *)(a1 + 56)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_218FFDDBC(*(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  uint64_t v4 = a1 + a2[21];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_219157AB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(void *)(a1 + a2[22]), *(unsigned __int8 *)(a1 + a2[22] + 8));
  uint64_t v6 = a1 + a2[23];
  uint64_t v7 = *(void **)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  sub_218FFDD40(v7, v8);
}

uint64_t sub_2190EC684(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  char v12 = *(unsigned char *)(a2 + 48);
  sub_2190EC4E8(*(void *)a2, v7, v8, v9, v10, v11, v12);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = v12;
  uint64_t v13 = *(void *)(a2 + 56);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  uint64_t v15 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v15;
  uint64_t v16 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  char v17 = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_218FFE128(v16, v17);
  *(void *)(a1 + 96) = v16;
  *(unsigned char *)(a1 + 104) = v17;
  uint64_t v18 = a3[21];
  char v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_219157AB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *char v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[22];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  char v26 = *((unsigned char *)v24 + 8);
  j__swift_retain(*v24);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  uint64_t v27 = a3[23];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  id v30 = *(id *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  sub_218FFE134(*(id *)v29, v31);
  *(void *)uint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = v31;
  return a1;
}

uint64_t sub_2190EC84C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  char v12 = *(unsigned char *)(a2 + 48);
  sub_2190EC4E8(*(void *)a2, v7, v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  char v19 = *(unsigned char *)(a1 + 48);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = v12;
  sub_2190EBCDC(v13, v14, v15, v16, v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v20)
    {
      uint64_t v21 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v20;
      *(void *)(a1 + 64) = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    uint64_t v22 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v20;
    *(void *)(a1 + 64) = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  uint64_t v23 = *(void *)(a2 + 96);
  char v24 = *(unsigned char *)(a2 + 104);
  sub_218FFE128(v23, v24);
  uint64_t v25 = *(void *)(a1 + 96);
  char v26 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = v23;
  *(unsigned char *)(a1 + 104) = v24;
  sub_218FFDDBC(v25, v26);
  if (a1 != a2)
  {
    uint64_t v27 = a3[21];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (void *)(a2 + v27);
    sub_218FFE158(a1 + v27, &qword_26AD03528);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_219157AB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a3[22];
  id v32 = (uint64_t *)(a1 + v31);
  char v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  char v35 = *((unsigned char *)v33 + 8);
  j__swift_retain(*v33);
  uint64_t v36 = *v32;
  uint64_t v37 = *((unsigned __int8 *)v32 + 8);
  *id v32 = v34;
  *((unsigned char *)v32 + 8) = v35;
  j__swift_release(v36, v37);
  uint64_t v38 = a3[23];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  id v41 = *(id *)v40;
  char v42 = *(unsigned char *)(v40 + 8);
  sub_218FFE134(*(id *)v40, v42);
  uint64_t v43 = *(void **)v39;
  char v44 = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = v42;
  sub_218FFDD40(v43, v44);
  return a1;
}

uint64_t sub_2190ECAB4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = a3[21];
  uint64_t v11 = (void *)(a1 + v10);
  char v12 = (const void *)(a2 + v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_219157AB8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = a3[22];
  uint64_t v16 = a3[23];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  return a1;
}

uint64_t sub_2190ECC18(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 48);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v6;
  sub_2190EBCDC(v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v15;
      *(void *)(a1 + 64) = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v17;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v18 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  char v19 = *(unsigned char *)(a2 + 104);
  uint64_t v20 = *(void *)(a1 + 96);
  char v21 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = v19;
  sub_218FFDDBC(v20, v21);
  if (a1 != a2)
  {
    uint64_t v22 = a3[21];
    uint64_t v23 = (void *)(a1 + v22);
    char v24 = (const void *)(a2 + v22);
    sub_218FFE158(a1 + v22, &qword_26AD03528);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_219157AB8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  uint64_t v27 = a3[22];
  uint64_t v28 = (uint64_t *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  LOBYTE(v29) = *((unsigned char *)v29 + 8);
  uint64_t v31 = *v28;
  uint64_t v32 = *((unsigned __int8 *)v28 + 8);
  *uint64_t v28 = v30;
  *((unsigned char *)v28 + 8) = (_BYTE)v29;
  j__swift_release(v31, v32);
  uint64_t v33 = a3[23];
  uint64_t v34 = a1 + v33;
  char v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  uint64_t v37 = *(void **)v34;
  char v38 = *(unsigned char *)(v34 + 8);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;
  sub_218FFDD40(v37, v38);
  return a1;
}

uint64_t sub_2190ECE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190ECE28);
}

uint64_t sub_2190ECE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05308);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 84);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_2190ECEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190ECEFC);
}

uint64_t sub_2190ECEFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 56) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05308);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 84);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentUnavailableViewPresentationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190ED074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableViewPresentationContext()
{
  return &type metadata for ContentUnavailableViewPresentationContext;
}

void sub_2190ED0AC()
{
  sub_2190EE344(319, &qword_26AD03188, MEMORY[0x263F18380], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ContentUnavailableButton.Action();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2190ED1B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_219157A58();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v12 = (char *)a1 + v11;
    char v13 = (char *)a2 + v11;
    type metadata accessor for ContentUnavailableButton.Action();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v16 = *(_OWORD *)(v13 + 24);
        *(_OWORD *)(v12 + 24) = v16;
        (**(void (***)(char *, char *))(v16 - 8))(v12, v13);
        break;
      case 2u:
      case 3u:
        uint64_t v15 = sub_219157688();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
        break;
      default:
        uint64_t v14 = *((void *)v13 + 1);
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = v14;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 40);
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    char v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
  }
  swift_retain();
  return a1;
}

uint64_t sub_2190ED490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219157A58();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  type metadata accessor for ContentUnavailableButton.Action();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_release();
      break;
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(v6);
      break;
    case 2u:
    case 3u:
      uint64_t v7 = sub_219157688();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      break;
    default:
      break;
  }
  return swift_release();
}

char *sub_2190ED60C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  type metadata accessor for ContentUnavailableButton.Action();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v14 = *(_OWORD *)(v11 + 24);
      *(_OWORD *)(v10 + 24) = v14;
      (**(void (***)(char *, char *))(v14 - 8))(v10, v11);
      break;
    case 2u:
    case 3u:
      uint64_t v13 = sub_219157688();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
      break;
    default:
      uint64_t v12 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v12;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 40);
  long long v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)long long v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  swift_retain();
  return a1;
}

char *sub_2190ED89C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      if (a1 == a2) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    if (a1 == a2) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 == a2) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for ContentUnavailableButton.Action();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = *((void *)v14 + 3);
      *((void *)v13 + 3) = v17;
      *((void *)v13 + 4) = *((void *)v14 + 4);
      (**(void (***)(char *, char *))(v17 - 8))(v13, v14);
      break;
    case 2u:
    case 3u:
      uint64_t v18 = sub_219157688();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
      break;
    default:
      uint64_t v16 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v16;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v19 = *(int *)(a3 + 40);
  uint64_t v20 = &a1[v19];
  char v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_2190EDBE8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 36);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for ContentUnavailableButton.Action();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    uint64_t v14 = sub_219157688();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 40)] = *(_OWORD *)&a2[*(int *)(a3 + 40)];
  return a1;
}

char *sub_2190EDE08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      if (a1 == a2) {
        goto LABEL_14;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_7:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    if (a1 == a2) {
      goto LABEL_14;
    }
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  if (a1 == a2) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for ContentUnavailableButton.Action();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    uint64_t v18 = sub_219157688();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(v16 + 64));
  }
LABEL_14:
  *(_OWORD *)&a1[*(int *)(a3 + 40)] = *(_OWORD *)&a2[*(int *)(a3 + 40)];
  swift_release();
  return a1;
}

uint64_t sub_2190EE0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190EE0FC);
}

uint64_t sub_2190EE0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ContentUnavailableButton.Action();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 40));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_2190EE218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190EE22C);
}

uint64_t sub_2190EE22C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ContentUnavailableButton.Action();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2190EE344(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2190EE3A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190EE7F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190EE894()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for ContentUnavailableTextLogBuilder.ConnectivityMessageType()
{
  return &type metadata for ContentUnavailableTextLogBuilder.ConnectivityMessageType;
}

unsigned char *_s18_JetEngine_SwiftUI32ContentUnavailableTextLogBuilderC11MessageTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190EEAD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableTextLogBuilder.MessageType()
{
  return &type metadata for ContentUnavailableTextLogBuilder.MessageType;
}

uint64_t sub_2190EEB08(uint64_t a1)
{
  return sub_2190EBCDC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t sub_2190EEB20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_2190EC4E8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_2190EEB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_2190EC4E8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  char v16 = *(unsigned char *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  sub_2190EBCDC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2190EEC48(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v3;
  sub_2190EBCDC(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_2190EECA0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_2190EECE8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2190EED3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_2190EED44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2 & 1;
  return result;
}

uint64_t destroy for _PlatformContentUnavailableViewContent(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for _PlatformContentUnavailableViewContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

void *assignWithCopy for _PlatformContentUnavailableViewContent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[4];
  if (!a1[4])
  {
    if (v6)
    {
      uint64_t v8 = a2[5];
      a1[4] = v6;
      a1[5] = v8;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = a2[5];
  a1[4] = v6;
  a1[5] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for _PlatformContentUnavailableViewContent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for _PlatformContentUnavailableViewContent()
{
  return &type metadata for _PlatformContentUnavailableViewContent;
}

void sub_2190EEF9C()
{
  sub_2190EF540();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_2190EF038(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    swift_retain();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_2190EF110(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_2190EF18C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  swift_retain();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *sub_2190EF210(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_2190EF2A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_2190EF328(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2190EF3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2190EF3CC);
}

uint64_t sub_2190EF3CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2190EF480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2190EF494);
}

void *sub_2190EF494(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2190EF540()
{
  if (!qword_26AD03538)
  {
    sub_2190EF59C();
    unint64_t v0 = sub_219157C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD03538);
    }
  }
}

unint64_t sub_2190EF59C()
{
  unint64_t result = qword_26AD033D0;
  if (!qword_26AD033D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD033D0);
  }
  return result;
}

uint64_t sub_2190EF5F0()
{
  uint64_t result = sub_219157688();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2190EF690(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v9 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v9;
        (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
        break;
      case 2u:
      case 3u:
        uint64_t v8 = sub_219157688();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2190EF854(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_release();
      break;
    case 1:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 2:
    case 3:
      uint64_t v3 = sub_219157688();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2190EF944(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      break;
    case 2u:
    case 3u:
      uint64_t v5 = sub_219157688();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2190EFAB8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(void *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = a2[3];
        a1[3] = v6;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v6 - 8))(a1, a2);
        break;
      case 2u:
      case 3u:
        uint64_t v7 = sub_219157688();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      default:
        uint64_t v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_2190EFC68(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_219157688();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_2190EFD78(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_219157688();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

unint64_t sub_2190EFEE0()
{
  unint64_t result = qword_267C06628;
  if (!qword_267C06628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06628);
  }
  return result;
}

unint64_t sub_2190EFF38()
{
  unint64_t result = qword_267C06630;
  if (!qword_267C06630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06630);
  }
  return result;
}

uint64_t sub_2190EFF8C()
{
  return MEMORY[0x263F1BB58];
}

unint64_t sub_2190EFF9C()
{
  unint64_t result = qword_26AD033D8;
  if (!qword_26AD033D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD033D8);
  }
  return result;
}

uint64_t sub_2190EFFF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190F0034()
{
  return sub_2190F004C();
}

uint64_t sub_2190F004C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190F0088@<X0>(uint64_t a1@<X8>)
{
  return sub_2190E9A3C(*(void (***)(double))(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(void, void))(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_2190F009C()
{
  uint64_t v1 = (int *)(type metadata accessor for _ContentUnavailableScrollView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  uint64_t v3 = v2 + v1[11];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_2190F0198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for _ContentUnavailableScrollView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_2190E87FC(a1, v8, v5, v6, a2);
}

uint64_t sub_2190F0234@<X0>(uint64_t a1@<X8>)
{
  return sub_2190E8EB0(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_2190F0240@<X0>(uint64_t a1@<X8>)
{
  return sub_2190E9220(*(void (***)(double))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2190F024C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190F0284()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroy_111Tm()
{
  uint64_t v1 = sub_219157D18();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_219157688();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2190F0408()
{
  return sub_219157D08();
}

unint64_t sub_2190F04CC()
{
  unint64_t result = qword_26AD010C0[0];
  if (!qword_26AD010C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD010C0);
  }
  return result;
}

uint64_t sub_2190F0520()
{
  uint64_t v1 = sub_21915A198();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 96) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_2190F0604()
{
  uint64_t v1 = *(void *)(sub_21915A198() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_2190E7330(v0 + 16, v0 + 56, v2);
}

unint64_t sub_2190F066C()
{
  unint64_t result = qword_26AD033E0[0];
  if (!qword_26AD033E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD033E0);
  }
  return result;
}

uint64_t sub_2190F06C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190F06E0(a1);
}

uint64_t sub_2190F06E0@<X0>(uint64_t a1@<X8>)
{
  sub_219158308();
  if (qword_26AD03AA0 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26AD03A98;
  uint64_t result = sub_2191589D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2190F07A8()
{
  return sub_2190F07C0((uint64_t (*)(void, void, void, void, void, void, void))sub_2190E6388);
}

uint64_t sub_2190F07C0(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t objectdestroy_44Tm()
{
  uint64_t v1 = (int *)type metadata accessor for ContentUnavailableView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  sub_2190EBCDC(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48));
  if (*(void *)(v2 + 56)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_218FFDDBC(*(void *)(v2 + 96), *(unsigned char *)(v2 + 104));
  uint64_t v3 = v2 + v1[21];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_219157AB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(void *)(v2 + v1[22]), *(unsigned __int8 *)(v2 + v1[22] + 8));
  sub_218FFDD40(*(id *)(v2 + v1[23]), *(unsigned char *)(v2 + v1[23] + 8));
  return swift_deallocObject();
}

void sub_2190F097C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ContentUnavailableView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_2190E652C(v2);
}

uint64_t sub_2190F0A38()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2190F0A88@<X0>(void *a1@<X8>)
{
  return sub_2190E3A70(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_2190F0A98()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190F0AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190E3980(*(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 16), *(void *)(v1 + 24), a1, *(_OWORD *)(v1 + 32), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_2190F0B20()
{
  swift_getErrorValue();
  if ((sub_2190E3EB8(v2) & 1) != 0 && qword_26AD03470 != -1) {
    swift_once();
  }
  sub_219158308();
  if (qword_26AD03AA0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AD03A98;
  return sub_2191589D8();
}

unint64_t sub_2190F0C94()
{
  unint64_t result = qword_267C06668;
  if (!qword_267C06668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06668);
  }
  return result;
}

uint64_t sub_2190F0CE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2190F0D20(uint64_t a1)
{
  return sub_2190E3218(a1);
}

unint64_t sub_2190F0D28()
{
  unint64_t result = qword_26AD03520;
  if (!qword_26AD03520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03520);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableViewPresentationContextKey()
{
  return &type metadata for ContentUnavailableViewPresentationContextKey;
}

uint64_t sub_2190F0D8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F0FCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F11C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double ShelfScrollGeometryProxy.containerInsets.getter()
{
  return *(double *)v0;
}

double ShelfScrollGeometryProxy.containerSize.getter()
{
  return *(double *)(v0 + 32);
}

double ShelfScrollGeometryProxy.contentOffset.getter()
{
  return *(double *)(v0 + 48);
}

double ShelfScrollGeometryProxy.contentSize.getter()
{
  return *(double *)(v0 + 64);
}

BOOL _s18_JetEngine_SwiftUI24ShelfScrollGeometryProxyV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  double v5 = a1[4].f64[0];
  double v4 = a1[4].f64[1];
  double v7 = a2[4].f64[0];
  double v6 = a2[4].f64[1];
  char v8 = sub_219157A68();
  BOOL result = 0;
  if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), 0xFuLL))) & 1) != 0&& (v8)
  {
    return v4 == v6 && v5 == v7;
  }
  return result;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfScrollGeometryProxy(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShelfScrollGeometryProxy(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShelfScrollGeometryProxy()
{
  return &type metadata for ShelfScrollGeometryProxy;
}

uint64_t EnvironmentValues.presentedBy.getter()
{
  sub_2190F1408();
  return sub_219158238();
}

unint64_t sub_2190F1408()
{
  unint64_t result = qword_26AD02CB0;
  if (!qword_26AD02CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD02CB0);
  }
  return result;
}

uint64_t sub_2190F145C@<X0>(unsigned char *a1@<X8>)
{
  sub_2190F1408();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F14AC()
{
  return sub_219158248();
}

uint64_t View.presentedBy(_:)()
{
  return swift_release();
}

uint64_t sub_2190F156C@<X0>(unsigned char *a1@<X8>)
{
  sub_2190F1408();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F15BC()
{
  return sub_219158248();
}

BOOL static PresentationSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PresentationSource.hash(into:)()
{
  return sub_21915B7C8();
}

uint64_t PresentationSource.hashValue.getter()
{
  return sub_21915B7D8();
}

unint64_t sub_2190F1694()
{
  unint64_t result = qword_267C06670;
  if (!qword_267C06670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06670);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PresentationSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190F17B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

uint64_t sub_2190F17EC()
{
  return swift_getWitnessTable();
}

unint64_t sub_2190F185C()
{
  unint64_t result = qword_267C05928;
  if (!qword_267C05928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05928);
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentedByKey()
{
  return &type metadata for PresentedByKey;
}

void sub_2190F18C8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2190F18D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_2190F1938();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

unint64_t sub_2190F1938()
{
  unint64_t result = qword_267C06678;
  if (!qword_267C06678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06680);
    sub_2190F1694();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06678);
  }
  return result;
}

uint64_t sub_2190F19AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  return swift_release();
}

uint64_t sub_2190F1A28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  double v7 = (char *)&v9 - v6;
  sub_21907C43C(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21907C43C((uint64_t)v7, (uint64_t)v4);
  swift_retain();
  sub_2191579F8();
  return sub_21907C4A0((uint64_t)v7);
}

__n128 AlertActionImplementation.init<A>(following:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)(uint64_t a1, uint64_t a2)@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  *(void *)(v13 + 32) = a4;
  *(void *)(v13 + 40) = a5;
  *(void *)(v13 + 48) = v12;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v13 + 56) = result;
  *a6 = sub_2190F1FF8;
  a6[1] = (uint64_t (*)(uint64_t, uint64_t))v13;
  return result;
}

uint64_t sub_2190F1BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v39 = a1;
  uint64_t v36 = a9;
  uint64_t v11 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v33 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06718);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06720);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v33 - v25;
  sub_219159AF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_218FFE158((uint64_t)v19, &qword_267C06718);
    long long v41 = 0u;
    long long v42 = 0u;
    uint64_t v43 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v26, v20);
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
    swift_retain();
    uint64_t v27 = sub_2190F23D8((uint64_t)v23, a2, (uint64_t)v44);
    swift_release();
    *((void *)&v42 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06728);
    uint64_t v43 = sub_218FFDF90(&qword_267C06730, &qword_267C06728);
    *(void *)&long long v41 = v27;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  sub_2190F2300((uint64_t)&v41, (uint64_t)v44);
  *(void *)&long long v41 = a3;
  *((void *)&v41 + 1) = v34;
  *(void *)&long long v42 = v35;
  uint64_t v28 = type metadata accessor for FlowAuthority();
  uint64_t v29 = sub_219159188();
  MEMORY[0x21D47FB40](&v40, v29);
  *(void *)&long long v41 = v40;
  sub_2190D96E0(v28);
  swift_release();
  uint64_t v30 = (uint64_t)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05020) + 48)];
  uint64_t v31 = sub_21915A7C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v16, v39, v31);
  sub_2190F2368((uint64_t)v44, v30);
  swift_storeEnumTagMultiPayload();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21907C43C((uint64_t)v16, (uint64_t)v13);
  swift_retain();
  sub_2191579F8();
  sub_21907C4A0((uint64_t)v16);
  swift_release();
  return sub_218FFE158((uint64_t)v44, &qword_26AD010B8);
}

uint64_t sub_2190F1FB0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190F1FF8(uint64_t a1, uint64_t a2)
{
  return sub_2190F1BB0(a1, a2, v2[6], v2[7], v2[8], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t AlertActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = *v3;
  sub_21915AF98();
  *(void *)(v4 + 56) = sub_21915AF88();
  uint64_t v6 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_2190F20D0, v6, v5);
}

uint64_t sub_2190F20D0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  swift_release();
  v2(v3, v1);
  uint64_t v5 = *MEMORY[0x263F50978];
  uint64_t v6 = sub_219159888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  double v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_2190F21A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F21C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *double v7 = v3;
  v7[1] = sub_218FF9AE0;
  return AlertActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

uint64_t sub_2190F2270()
{
  return MEMORY[0x263F50D60];
}

uint64_t sub_2190F227C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F46058](a1, a2, a3, WitnessTable);
}

uint64_t type metadata accessor for AlertActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190F2300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD010B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190F2368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD010B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2190F23D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06738);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  long long v41 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06740);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06748);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_219159518();
  uint64_t v47 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06718);
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06720);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v45 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v35 - v22;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v49 = a1;
  uint64_t v46 = v24;
  ((void (*)(char *, uint64_t, uint64_t, double))v24)((char *)&v35 - v22, a1, v17, v21);
  uint64_t v25 = a3;
  sub_2190F2368(a3, (uint64_t)v50);
  uint64_t v48 = v11;
  if (v51)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD010B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06728);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_219159B18();
      swift_release();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
      sub_219159D28();
      swift_release();
    }
  }
  else
  {
    sub_218FFE158((uint64_t)v50, &qword_26AD010B8);
  }
  if (!*(void *)(a3 + 24))
  {
    sub_2191598A8();
    if ((sub_219159D08() & 1) == 0)
    {
      uint64_t v51 = sub_219159F18();
      uint64_t v52 = MEMORY[0x263F50AD8];
      __swift_allocate_boxed_opaque_existential_1Tm(v50);
      sub_219159F08();
      sub_219159BE8();
      uint64_t v26 = v41;
      sub_21915A5D8();
      sub_218FFDF90(&qword_267C06750, &qword_267C06738);
      uint64_t v27 = v43;
      sub_219159D18();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
    }
    if (!*(void *)(v25 + 24))
    {
      sub_219159A38();
      if ((sub_219159D08() & 1) == 0)
      {
        sub_219159BE8();
        uint64_t v28 = v38;
        sub_21915A608();
        sub_218FFDF90(&qword_267C06758, &qword_267C06740);
        uint64_t v29 = v40;
        sub_219159D18();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v29);
      }
      if (!*(void *)(v25 + 24))
      {
        sub_219159648();
        if ((sub_219159D08() & 1) == 0)
        {
          sub_219159BE8();
          uint64_t v30 = v35;
          sub_21915A498();
          sub_218FFDF90(&qword_267C06760, &qword_267C06748);
          uint64_t v31 = v37;
          sub_219159D18();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v31);
        }
      }
    }
  }
  v46(v45, v23, v17);
  swift_retain();
  sub_2191594E8();
  uint64_t v32 = sub_219159BA8();
  swift_release();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v33(v49, v17);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v48);
  v33((uint64_t)v23, v17);
  sub_218FFE158(v25, &qword_26AD010B8);
  return v32;
}

__n128 FlowView.init(following:tabLabels:destinations:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = *(void *)a1;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a6 + 8) = result;
  *(void *)(a6 + 24) = a2;
  *(void *)(a6 + 32) = a3;
  *(void *)(a6 + 40) = a4;
  *(void *)(a6 + 48) = a5;
  return result;
}

void *FlowView.init<>(following:destinations:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v18 = a1[2];
  sub_21915A9E8();
  __n128 result = (void *)swift_allocObject();
  result[2] = a4;
  result[3] = a5;
  result[4] = a6;
  result[5] = a7;
  result[6] = a8;
  *a9 = v16;
  a9[1] = v17;
  a9[2] = v18;
  a9[3] = nullsub_1;
  a9[4] = result;
  a9[5] = a2;
  a9[6] = a3;
  return result;
}

BOOL sub_2190F2BC0()
{
  type metadata accessor for FlowAuthority();
  uint64_t v0 = sub_219159188();
  MEMORY[0x21D47FB40](&v5, v0);
  uint64_t v1 = sub_21914FB58();
  swift_release();
  uint64_t v2 = type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v3 = MEMORY[0x21D481930](v1, v2);
  swift_bridgeObjectRelease();
  return v3 == 1;
}

BOOL sub_2190F2C7C()
{
  return sub_2190F2BC0();
}

unint64_t sub_2190F2C90()
{
  return 0xD00000000000005DLL;
}

uint64_t sub_2190F2CAC()
{
  return swift_deallocObject();
}

uint64_t sub_2190F2CBC()
{
  type metadata accessor for FlowAuthority();
  uint64_t v0 = sub_219159188();
  return MEMORY[0x21D47FB40](v0);
}

uint64_t FlowView.customPresentation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v4 + 40);
  uint64_t v11 = *(void *)(v4 + 48);
  v16[1] = *(void *)v4;
  long long v12 = *(_OWORD *)(v4 + 24);
  long long v17 = *(_OWORD *)(v4 + 8);
  long long v18 = v12;
  uint64_t v19 = v10;
  uint64_t v20 = v11;
  v13();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x21D47F800](v9, a3, a4, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a4);
}

uint64_t FlowView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[8];
  *(void *)&long long v60 = a1[2];
  *((void *)&v60 + 1) = v6;
  *(void *)&long long v61 = v6;
  *((void *)&v61 + 1) = v5;
  uint64_t v9 = v6;
  uint64_t v10 = v5;
  *(void *)&long long v62 = v7;
  *((void *)&v62 + 1) = v8;
  uint64_t v11 = v7;
  uint64_t v51 = v7;
  uint64_t v47 = v8;
  uint64_t v63 = v8;
  uint64_t v49 = type metadata accessor for FlowStack();
  uint64_t v41 = a1[7];
  uint64_t WitnessTable = swift_getWitnessTable();
  *((void *)&v60 + 1) = v4;
  uint64_t v44 = v60;
  *(void *)&long long v61 = v49;
  *((void *)&v61 + 1) = v10;
  uint64_t v48 = v10;
  *(void *)&long long v62 = v11;
  *((void *)&v62 + 1) = v41;
  uint64_t v63 = WitnessTable;
  uint64_t v39 = type metadata accessor for FlowStackTabView();
  uint64_t v50 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (uint64_t *)((char *)&v37 - v12);
  swift_getAssociatedTypeWitness();
  swift_getFunctionTypeMetadata1();
  type metadata accessor for DataObjectBox();
  sub_21915B378();
  uint64_t v43 = sub_219158778();
  uint64_t v13 = sub_219157F48();
  uint64_t v46 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v38 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v40 = (uint64_t)&v37 - v16;
  long long v17 = v2[1];
  long long v60 = *v2;
  long long v61 = v17;
  long long v19 = *v2;
  long long v18 = v2[1];
  long long v62 = v2[2];
  uint64_t v63 = *((void *)v2 + 6);
  long long v55 = v19;
  long long v56 = v18;
  long long v57 = v2[2];
  uint64_t v58 = *((void *)v2 + 6);
  sub_2190F2CBC();
  uint64_t v20 = v59;
  uint64_t v22 = *((void *)&v61 + 1);
  uint64_t v21 = v62;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v4;
  *(void *)(v23 + 24) = v9;
  uint64_t v24 = v47;
  *(void *)(v23 + 32) = v41;
  *(void *)(v23 + 40) = v24;
  long long v25 = v61;
  *(_OWORD *)(v23 + 48) = v60;
  *(_OWORD *)(v23 + 64) = v25;
  *(_OWORD *)(v23 + 80) = v62;
  *(void *)(v23 + 96) = v63;
  sub_2190F3530((uint64_t)&v60);
  swift_retain();
  uint64_t v26 = v42;
  sub_2190B12F0(v20, v22, v21, (uint64_t)sub_2190F3520, v23, v42);
  uint64_t v28 = *((void *)&v62 + 1);
  uint64_t v27 = v63;
  uint64_t v29 = v39;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v36 = v24;
  uint64_t v31 = (uint64_t)v38;
  sub_2190A97AC(v44, v28, v27, v29, v44, v9, v30, v48, v51, v36);
  (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v26, v29);
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v53 = v30;
  uint64_t v54 = v32;
  swift_getWitnessTable();
  uint64_t v33 = v40;
  sub_218FFDE04(v31, v13, v40);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v34(v31, v13);
  sub_218FFDE04(v33, v13, v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v13);
}

uint64_t sub_2190F3310@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v12 = *a2;
  uint64_t v13 = *(void *)(a3 + 40);
  uint64_t v14 = *(void *)(a3 + 48);
  swift_retain();
  swift_retain();
  sub_2190F97F0(a2, a1, v13, v14, a4, a5, v23);
  long long v24 = v23[0];
  *(_OWORD *)uint64_t v22 = v23[0];
  *(_OWORD *)&v22[16] = v23[1];
  *(_OWORD *)&v22[32] = v23[2];
  uint64_t v17 = *(void *)(v11 + 80);
  *(void *)&long long v18 = a4;
  *((void *)&v18 + 1) = a4;
  long long v19 = *(_OWORD *)(v12 + 88);
  uint64_t v20 = a5;
  uint64_t v21 = a5;
  uint64_t v15 = type metadata accessor for FlowStack();
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v22, v15, (uint64_t)&v17);
  sub_2190AB7DC((uint64_t)&v24);
  swift_release();
  swift_release();
  *(void *)uint64_t v22 = v17;
  *(_OWORD *)&v22[8] = v18;
  *(_OWORD *)&v22[24] = v19;
  *(void *)&v22[40] = v20;
  sub_218FFDE04((uint64_t)v22, v15, a6);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2190F34C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190F3520@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2190F3310(a1, a2, v3 + 48, *(void *)(v3 + 24), *(void *)(v3 + 40), a3);
}

uint64_t sub_2190F3530(uint64_t a1)
{
  return a1;
}

uint64_t static FlowOcclusion.none.getter()
{
  return 0;
}

uint64_t static FlowOcclusion.sheet.getter()
{
  return 1;
}

uint64_t FlowOcclusion.debugDescription.getter(char a1)
{
  if (a1)
  {
    uint64_t v1 = sub_219012F00(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v3 = v1[2];
    unint64_t v2 = v1[3];
    if (v3 >= v2 >> 1) {
      uint64_t v1 = sub_219012F00((void *)(v2 > 1), v3 + 1, 1, v1);
    }
    v1[2] = v3 + 1;
    uint64_t v4 = &v1[2 * v3];
    v4[4] = 0x74656568732ELL;
    v4[5] = 0xE600000000000000;
  }
  sub_21915B478();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06768);
  sub_2190F370C();
  sub_21915ACC8();
  swift_bridgeObjectRelease();
  sub_21915AD88();
  swift_bridgeObjectRelease();
  sub_21915AD88();
  return 0x6C63634F776F6C46;
}

uint64_t sub_2190F3704()
{
  return FlowOcclusion.debugDescription.getter(*v0);
}

unint64_t sub_2190F370C()
{
  unint64_t result = qword_267C06770;
  if (!qword_267C06770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06770);
  }
  return result;
}

uint64_t sub_2190F3768@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2190F3F74(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_2190F37A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_2190F3A84();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.flowOcclusion.getter()
{
  sub_2190F3928();
  sub_219158238();
  return v1;
}

uint64_t sub_2190F3848@<X0>(void *a1@<X8>)
{
  sub_2190F3928();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F3898()
{
  return sub_219158248();
}

BOOL EnvironmentValues.isAtFlowTabRoot.getter()
{
  sub_2190F1408();
  sub_219158238();
  return v1 == 3;
}

unint64_t sub_2190F3928()
{
  unint64_t result = qword_267C06778;
  if (!qword_267C06778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06778);
  }
  return result;
}

uint64_t sub_2190F397C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2190F39D4()
{
  unint64_t result = qword_267C06780;
  if (!qword_267C06780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06780);
  }
  return result;
}

unint64_t sub_2190F3A2C()
{
  unint64_t result = qword_267C06788;
  if (!qword_267C06788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06788);
  }
  return result;
}

unint64_t sub_2190F3A84()
{
  unint64_t result = qword_267C06790;
  if (!qword_267C06790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06790);
  }
  return result;
}

unint64_t sub_2190F3ADC()
{
  unint64_t result = qword_267C06798[0];
  if (!qword_267C06798[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267C06798);
  }
  return result;
}

uint64_t sub_2190F3B30@<X0>(void *a1@<X8>)
{
  sub_2190F3928();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F3B80()
{
  return sub_219158248();
}

uint64_t sub_2190F3BCC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2190F3C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2190F3C9C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2190F3D44(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FlowView()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for FlowOcclusion()
{
  return &type metadata for FlowOcclusion;
}

uint64_t sub_2190F3DDC()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for FlowOcclusionKey()
{
  return &type metadata for FlowOcclusionKey;
}

uint64_t sub_2190F3F74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t NSBundle.displayName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  unint64_t v8 = (void *)sub_21915AD18();
  id v9 = objc_msgSend(v1, sel_objectForInfoDictionaryKey_, v8);

  if (v9)
  {
    sub_21915B3B8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_219024A0C((uint64_t)&v19, (uint64_t)v21, qword_26AD03AB8);
  if (v22)
  {
    if (swift_dynamicCast()) {
      return v18;
    }
  }
  else
  {
    sub_218FFE158((uint64_t)v21, qword_26AD03AB8);
  }
  uint64_t v10 = (void *)sub_21915AD18();
  id v11 = objc_msgSend(v1, sel_objectForInfoDictionaryKey_, v10);

  if (v11)
  {
    sub_21915B3B8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_219024A0C((uint64_t)&v19, (uint64_t)v21, qword_26AD03AB8);
  if (v22)
  {
    if (swift_dynamicCast()) {
      return v18;
    }
  }
  else
  {
    sub_218FFE158((uint64_t)v21, qword_26AD03AB8);
  }
  id v13 = objc_msgSend(v1, sel_executableURL);
  if (v13)
  {
    uint64_t v14 = v13;
    sub_219157658();

    uint64_t v15 = sub_219157688();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = sub_219157688();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  }
  sub_219024A0C((uint64_t)v4, (uint64_t)v7, &qword_267C052F8);
  sub_219157688();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    sub_218FFE158((uint64_t)v7, &qword_267C052F8);
    return 0;
  }
  else
  {
    uint64_t v12 = sub_219157638();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
  }
  return v12;
}

id static NSBundle.jetResources.getter()
{
  if (qword_26AD03AA0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AD03A98;
  return v0;
}

double ShelfGridItemWidth.resolve(using:)(double *a1)
{
  uint64_t v3 = sub_219157BD8();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v44 - v9;
  double v11 = a1[1];
  uint64_t v12 = *((void *)a1 + 3);
  char v13 = *((unsigned char *)a1 + 32);
  uint64_t v14 = *((void *)a1 + 5);
  char v15 = *((unsigned char *)a1 + 48);
  uint64_t v16 = *((void *)a1 + 9);
  char v17 = *((unsigned char *)a1 + 80);
  uint64_t v18 = *(uint64_t *)v1;
  switch(*(unsigned char *)(v1 + 16))
  {
    case 1:
      double v20 = *(double *)v1;
      if (*(double *)&v18 <= 0.0)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x2190F4754);
      }
      double v21 = a1[3];
      double v22 = 16.0;
      if (*((unsigned char *)a1 + 32)) {
        double v21 = 16.0;
      }
      if (!*((unsigned char *)a1 + 48)) {
        double v22 = a1[5];
      }
      double v23 = v11 - (v21 + v22);
      if ((_BYTE)a1[10])
      {
        uint64_t v24 = v7;
        uint64_t v25 = v8;
        sub_219157BC8();
        sub_219157BC8();
        sub_219157BB8();
        double v27 = v26;
        uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
        v28(v5, v24);
        v28(v10, v24);
      }
      else
      {
        double v27 = a1[9];
      }
      double v19 = (v23 - ceil(1.0 / v20 + -1.0) * v27) * v20;
      break;
    case 2:
      double v29 = *(double *)v1;
      if (*(double *)&v18 <= 0.0) {
        goto LABEL_24;
      }
      double v30 = a1[3];
      double v31 = 16.0;
      if (*((unsigned char *)a1 + 32)) {
        double v30 = 16.0;
      }
      if (!*((unsigned char *)a1 + 48)) {
        double v31 = a1[5];
      }
      double v32 = v11 - (v30 + v31);
      if ((_BYTE)a1[10])
      {
        uint64_t v33 = v7;
        uint64_t v34 = v8;
        sub_219157BC8();
        sub_219157BC8();
        sub_219157BB8();
        double v36 = v35;
        uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
        v37(v5, v33);
        v37(v10, v33);
      }
      else
      {
        double v36 = a1[9];
      }
      double v19 = (v32 - ceil(v29 + -1.0) * v36) / v29;
      break;
    case 3:
      uint64_t v38 = *(void *)(v1 + 8);
      int v46 = *((unsigned __int8 *)a1 + 64);
      uint64_t v45 = *((void *)a1 + 7);
      uint64_t v39 = *((void *)a1 + 2);
      double v40 = *a1;
      uint64_t v48 = v38;
      double v49 = v40;
      double v50 = v11;
      uint64_t v51 = v39;
      uint64_t v52 = v12;
      char v53 = v13;
      uint64_t v54 = v14;
      char v55 = v15;
      uint64_t v56 = v45;
      char v57 = v46;
      uint64_t v58 = v16;
      char v59 = v17;
      uint64_t v44 = v16;
      swift_retain();
      ((void (*)(void *__return_ptr, double *))v18)(v60, &v49);
      uint64_t v41 = v60[1];
      uint64_t v47 = v60[0];
      char v42 = v61;
      double v49 = v40;
      double v50 = v11;
      uint64_t v51 = v39;
      uint64_t v52 = v12;
      char v53 = v13;
      uint64_t v54 = v14;
      char v55 = v15;
      uint64_t v56 = v45;
      char v57 = v46;
      uint64_t v58 = v44;
      char v59 = v17;
      double v19 = ShelfGridItemWidth.resolve(using:)(&v49);
      sub_2190C8010(v18, v48, 3);
      sub_2190C8010(v47, v41, v42);
      return v19;
    default:
      return *(double *)v1;
  }
  return v19;
}

BOOL sub_2190F4764(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *a3;
  uint64_t v5 = *(void *)v3;
  switch(*(unsigned __int8 *)(v3 + 24) >> 6)
  {
    case 1:
    case 3:
      if (v5 == 1)
      {
        uint64_t v5 = a2 - 1;
        if (!__OFSUB__(a2, 1)) {
          return v5 > a1;
        }
        __break(1u);
        goto LABEL_30;
      }
      double v7 = ceil((double)a2 / (double)v5);
      if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v7 <= -9.22337204e18)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (v7 >= 9.22337204e18)
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (v4 == 2 || (v4 & 1) != 0) {
        goto LABEL_26;
      }
      if (!v5)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (a2 == 0x8000000000000000 && v5 == -1)
      {
LABEL_39:
        __break(1u);
        JUMPOUT(0x2190F48DCLL);
      }
      if (a2 % v5 != 1)
      {
LABEL_26:
        uint64_t v9 = (uint64_t)v7 - 1;
        if (__OFSUB__((uint64_t)v7, 1))
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        if ((unsigned __int128)(v9 * (__int128)v5) >> 64 != (v9 * v5) >> 63)
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        return v9 * v5 > a1;
      }
      else
      {
        BOOL v8 = __OFSUB__(a2, v5);
        uint64_t v5 = a2 - v5;
        if (!v8) {
          return v5 > a1;
        }
        __break(1u);
LABEL_21:
        if (__OFADD__(a1, 1)) {
          goto LABEL_33;
        }
        if (!v5)
        {
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (a1 == 0x7FFFFFFFFFFFFFFFLL && v5 == -1) {
          goto LABEL_38;
        }
        return (a1 + 1) % v5 != 0;
      }
    case 2:
      if (v5 != 1) {
        goto LABEL_21;
      }
      return 0;
    default:
      if (v5 != 1) {
        goto LABEL_21;
      }
      return 0;
  }
}

uint64_t ShelfGridLayout.frozen.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  unsigned int v6 = *(unsigned __int8 *)(v1 + 24);
  if ((v6 >> 6) - 2 >= 2)
  {
    if (v6 >> 6)
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
      LOBYTE(v6) = -64;
    }
    else
    {
      uint64_t result = sub_2190C7EB0(*(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
      LOBYTE(v6) = v6 | 0x80;
    }
  }
  else
  {
    uint64_t result = sub_2190C7E88(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2190F4988()
{
  if (*(unsigned char *)(v0 + 24) != 1) {
    return sub_21915B668();
  }
  uint64_t v2 = sub_21915B668();
  sub_21915AD88();
  return v2;
}

uint64_t sub_2190F4A14()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2190F4A24()
{
  return sub_2190F4988();
}

double ShelfGridItemWidth.Context.containerSize.getter()
{
  return *(double *)(v0 + 8);
}

void ShelfGridItemWidth.Context.padding.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
}

void ShelfGridItemWidth.Context.spacing.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  char v4 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
}

uint64_t ShelfGridItemWidth.Context.offset.getter()
{
  uint64_t v1 = *v0;
  *(unsigned char *)(v1 + 24) = 1;
  return *(void *)(v1 + 16);
}

uint64_t static ShelfGridItemWidth.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)a3 = sub_2190F4B5C;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = 3;
  return swift_retain();
}

uint64_t sub_2190F4B24()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2190F4B5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = (*(double (**)(double, double))(v2 + 16))(*(double *)(a1 + 8), *(double *)(a1 + 16));
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
}

uint64_t destroy for ShelfGridLayout(uint64_t a1)
{
  return sub_2190C7FE8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for ShelfGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_2190C7E88(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ShelfGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_2190C7E88(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_2190C7FE8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ShelfGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_2190C7FE8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3D && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 61);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ShelfGridLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 61;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_2190F4D78(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_2190F4D84(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_2190F4D94(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridLayout()
{
  return &type metadata for ShelfGridLayout;
}

uint64_t destroy for ShelfGridItemWidth(uint64_t a1)
{
  return sub_2190C8010(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s18_JetEngine_SwiftUI18ShelfGridItemWidthOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2190C7EB0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ShelfGridItemWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2190C7EB0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2190C8010(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ShelfGridItemWidth(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2190C8010(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridItemWidth(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridItemWidth(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2190F4F44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridItemWidth()
{
  return &type metadata for ShelfGridItemWidth;
}

uint64_t initializeWithCopy for ShelfGridItemWidth.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShelfGridItemWidth.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  return a1;
}

uint64_t assignWithTake for ShelfGridItemWidth.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for ShelfGridItemWidth.Context()
{
  return &type metadata for ShelfGridItemWidth.Context;
}

uint64_t type metadata accessor for ShelfGridItemWidth.Context._OffsetStorage()
{
  return self;
}

uint64_t sub_2190F5104@<X0>(void *a1@<X8>)
{
  sub_218FFDE84();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F5154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158148();
  *a1 = result;
  return result;
}

uint64_t sub_2190F5180(id *a1)
{
  id v1 = *a1;
  return sub_219158158();
}

uint64_t LoadingView.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_219158FE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = *(void *)(a2 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v12 + v11, a1, a2);
  *(void *)a4 = sub_2190F57A4;
  *(void *)(a4 + 8) = v12;
  *(unsigned char *)(a4 + 16) = 1;
  *(unsigned char *)(a4 + 24) = v15;
  *(void *)(a4 + 32) = v16;
  *(void *)(a4 + 40) = KeyPath;
  *(unsigned char *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = v8;
  *(unsigned char *)(a4 + 64) = 0;
  *(void *)(a4 + 72) = v9;
  *(unsigned char *)(a4 + 80) = 0;
  return result;
}

uint64_t sub_2190F531C(uint64_t a1)
{
  double v1 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_2191589E8();
}

uint64_t LoadingView.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_219158FE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = swift_getKeyPath();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)a5 = sub_21908CDD0;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 1;
  *(unsigned char *)(a5 + 24) = v14;
  *(void *)(a5 + 32) = v15;
  *(void *)(a5 + 40) = KeyPath;
  *(unsigned char *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = v11;
  *(unsigned char *)(a5 + 64) = 0;
  *(void *)(a5 + 72) = v12;
  *(unsigned char *)(a5 + 80) = 0;
  return result;
}

uint64_t sub_2190F54EC()
{
  sub_218FFDF3C();
  return sub_219158238();
}

uint64_t sub_2190F5534@<X0>(unsigned char *a1@<X8>)
{
  sub_218FFDF3C();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F5584@<X0>(unsigned char *a1@<X8>)
{
  sub_218FFDF3C();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F55D4()
{
  return sub_219158248();
}

uint64_t sub_2190F5620()
{
  return sub_219158248();
}

uint64_t sub_2190F566C@<X0>(void *a1@<X8>)
{
  sub_218FFDE84();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F56C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158148();
  *a1 = result;
  return result;
}

uint64_t sub_2190F56EC(id *a1)
{
  id v1 = *a1;
  return sub_219158158();
}

uint64_t sub_2190F571C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_2190F57A4()
{
  return sub_2190F531C(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_2190F57E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190F5824()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 64);
  j__swift_retain(v1);
  uint64_t v3 = sub_2190FABD4(v1, v2);
  j__swift_release(v1, v2);
  return v3;
}

uint64_t sub_2190F587C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_2190F58B4()
{
  return 0xD00000000000003CLL;
}

BOOL static LoadingViewPresentationContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2190F58E8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  long long v13 = *(_OWORD *)(v0 + 112);
  sub_219159338();
  sub_219157BA8();
  uint64_t v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = v13;
  *(void *)(v2 + 32) = v1;
  sub_219157FB8();
  swift_release();
  swift_task_dealloc();
  if (sub_2190F5824())
  {
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v3 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 208);
    sub_219159C58();
    sub_21915A598();
    sub_219159C38();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v11);
    sub_2191598D8();
    sub_219159C68();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v12);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t LoadingViewPresentationContext.hash(into:)()
{
  return sub_21915B7C8();
}

uint64_t LoadingViewPresentationContext.hashValue.getter()
{
  return sub_21915B7D8();
}

uint64_t sub_2190F5BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_2190F76B8();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_2190F5C0C@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v73 = a4;
  uint64_t v70 = a2;
  uint64_t v71 = a1;
  uint64_t v80 = a5;
  uint64_t v66 = a3;
  uint64_t v74 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v65 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05460);
  uint64_t v68 = sub_219157F48();
  uint64_t v76 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v64 = (char *)&v57 - v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C28);
  uint64_t v72 = sub_219157F48();
  uint64_t v78 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v67 = (char *)&v57 - v7;
  uint64_t v77 = sub_219157F48();
  uint64_t v79 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v69 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v75 = (uint64_t)&v57 - v10;
  uint64_t v82 = sub_2191586B8();
  uint64_t v63 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  char v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_219157B08();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD019B8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  double v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06820);
  MEMORY[0x270FA5388](v20);
  double v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06828);
  uint64_t v81 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  char v57 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v58 = (char *)&v57 - v25;
  sub_219157BE8();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F18558], v12);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = *(int *)(v20 + 36);
  uint64_t v62 = v20;
  uint64_t v28 = (uint64_t *)&v22[v27];
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD019D0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))((char *)v28 + *(int *)(v29 + 28), v15, v12);
  *uint64_t v28 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v19, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  double v30 = v59;
  sub_2191586A8();
  unint64_t v61 = sub_2190F74A4();
  uint64_t v60 = sub_218FFDE08(&qword_26AD019C0, MEMORY[0x263F1A1D8]);
  double v31 = v57;
  uint64_t v32 = v82;
  sub_219158A18();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v32);
  sub_218FFE158((uint64_t)v22, &qword_267C06820);
  uint64_t v33 = v81;
  uint64_t v34 = v58;
  uint64_t v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 32))(v58, v31, v83);
  double v36 = v65;
  v71(v35);
  sub_2191588B8();
  uint64_t v37 = v64;
  uint64_t v38 = v66;
  uint64_t v39 = v73;
  sub_219158CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v36, v38);
  LODWORD(OpaqueTypeConformance2) = sub_2191585E8();
  uint64_t v40 = sub_218FFDF90(&qword_267C05500, &qword_267C05460);
  v89[6] = v39;
  v89[7] = v40;
  uint64_t v41 = v68;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = v67;
  sub_219158B28();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v37, v41);
  sub_219158848();
  uint64_t v44 = sub_218FFDF90(&qword_267C04C20, &qword_267C04C28);
  v89[4] = WitnessTable;
  v89[5] = v44;
  uint64_t v45 = v72;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = (uint64_t)v69;
  sub_219158D98();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v45);
  v89[2] = v46;
  v89[3] = MEMORY[0x263F18C10];
  uint64_t v48 = v77;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v75;
  sub_218FFDE04(v47, v48, v75);
  uint64_t v51 = v79;
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
  v52(v47, v48);
  char v53 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  uint64_t v54 = v83;
  v53(v31, v34, v83);
  v89[0] = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v47, v50, v48);
  v89[1] = v47;
  v88[0] = v54;
  v88[1] = v48;
  uint64_t OpaqueTypeConformance2 = v62;
  uint64_t v85 = v82;
  unint64_t v86 = v61;
  uint64_t v87 = v60;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v85 = v49;
  sub_218FFC48C((uint64_t)v89, 2uLL, (uint64_t)v88);
  v52(v50, v48);
  char v55 = *(void (**)(char *, uint64_t))(v81 + 8);
  v55(v34, v54);
  v52(v47, v48);
  return ((uint64_t (*)(char *, uint64_t))v55)(v31, v54);
}

uint64_t sub_2190F662C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190F5C0C(*(void (**)(uint64_t))v2, *(void *)(v2 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

void sub_2190F663C()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  objc_msgSendSuper2(&v12, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    id v2 = v1;
    do
    {
      id v5 = v2;
      id v6 = objc_msgSend(v5, sel_backgroundColor);

      id v4 = v5;
      if (!v6) {
        goto LABEL_6;
      }
      id v7 = objc_msgSend(v5, sel_backgroundColor);
      uint64_t v8 = self;
      id v9 = objc_msgSend(v8, sel_clearColor);
      uint64_t v3 = v9;
      if (v7)
      {
        if (v9)
        {
          sub_218FFE628(0, &qword_267C06838);
          id v10 = v7;
          char v11 = sub_21915B338();

          id v4 = v5;
          if (v11) {
            goto LABEL_6;
          }
          goto LABEL_5;
        }
        uint64_t v3 = v7;
      }
      else
      {
        id v4 = v5;
        if (!v9) {
          goto LABEL_6;
        }
      }

LABEL_5:
      id v4 = objc_msgSend(v8, sel_clearColor);
      objc_msgSend(v5, sel_setBackgroundColor_, v4);

LABEL_6:
      id v2 = objc_msgSend(v5, sel_superview);
    }
    while (v2);
  }
}

id sub_2190F6848(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id sub_2190F689C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2190F68D4()
{
}

uint64_t sub_2190F68FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_219158FE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = KeyPath;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = v7;
  *(unsigned char *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = result;
  *(unsigned char *)(a3 + 80) = 0;
  return result;
}

uint64_t LoadingView.init(what:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_219158FE8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = KeyPath;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = v7;
  *(unsigned char *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = result;
  *(unsigned char *)(a3 + 80) = 0;
  return result;
}

uint64_t LoadingView.init<>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  id v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2190F68FC((uint64_t)sub_2190F6C10, (uint64_t)v6, a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2190F6B10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_218FFDE08((unint64_t *)&qword_267C05568, (void (*)(uint64_t))type metadata accessor for _LocalizerOwner);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2191580D8();
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = result;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v5;
  return result;
}

uint64_t sub_2190F6BD0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190F6C10@<X0>(uint64_t a1@<X8>)
{
  return sub_2190F6B10((uint64_t *)(v1 + 16), a1);
}

unint64_t sub_2190F6CD4()
{
  unint64_t result = qword_26AD03610;
  if (!qword_26AD03610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03610);
  }
  return result;
}

uint64_t sub_2190F6D28(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_218FFDDB4();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v5;
  sub_218FFDDBC(v6, v7);
  char v8 = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v8;
  j__swift_release(v9, v10);
  char v11 = *(unsigned char *)(a2 + 80);
  objc_super v12 = *(void **)(a1 + 72);
  char v13 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v11;
  sub_218FFDD40(v12, v13);
  return a1;
}

uint64_t sub_2190F6DDC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_2190F6E38(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView()
{
  return self;
}

uint64_t sub_2190F6EF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F6FB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F72C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F7370()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190F73B4(uint64_t a1)
{
  uint64_t v2 = sub_219157B08();
  double v3 = MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return MEMORY[0x21D47EB40](v5);
}

uint64_t sub_2190F747C()
{
  return sub_219158108();
}

unint64_t sub_2190F74A4()
{
  unint64_t result = qword_267C06830;
  if (!qword_267C06830)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06820);
    sub_218FFDF90(&qword_26AD019B0, &qword_26AD019B8);
    sub_218FFDF90(&qword_26AD019C8, qword_26AD019D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06830);
  }
  return result;
}

uint64_t sub_2190F7574()
{
  return sub_219159008();
}

ValueMetadata *type metadata accessor for LoadingViewPresentationContextKey()
{
  return &type metadata for LoadingViewPresentationContextKey;
}

uint64_t sub_2190F75EC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06828);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05460);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C28);
  sub_219157F48();
  sub_219157F48();
  swift_getTupleTypeMetadata2();
  sub_2191593B8();
  return swift_getWitnessTable();
}

unint64_t sub_2190F76B8()
{
  unint64_t result = qword_26AD03620;
  if (!qword_26AD03620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD03618);
    sub_2190F6CD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03620);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for _ContentUnavailableBackgroundView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for _ContentUnavailableBackgroundView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2190F78A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2190F78CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  type metadata accessor for FlowStackAuthority();
  swift_getWitnessTable();
  uint64_t result = sub_219157E78();
  *a5 = result;
  a5[1] = v11;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  return result;
}

uint64_t sub_2190F799C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  v12(v11);
  sub_218FFDE04((uint64_t)v8, a2, (uint64_t)v10);
  char v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  sub_218FFDE04((uint64_t)v10, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, a2);
}

uint64_t sub_2190F7AD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v94 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03300);
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v103 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_219157E68();
  uint64_t v109 = a1[3];
  uint64_t v101 = a1[7];
  uint64_t v102 = (char *)v7;
  uint64_t v141 = v109;
  uint64_t v142 = MEMORY[0x263F8D1F0];
  uint64_t v143 = v101;
  uint64_t v144 = MEMORY[0x263F8D1F8];
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  uint64_t v8 = sub_219157F48();
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[6];
  uint64_t v106 = a1[5];
  uint64_t v107 = v9;
  uint64_t v108 = v10;
  uint64_t v11 = type metadata accessor for FlowStackAuthority.PathComponent();
  uint64_t v13 = a1[8];
  uint64_t v104 = a1[4];
  uint64_t v12 = v104;
  uint64_t v105 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v141 = v12;
  uint64_t v142 = v11;
  uint64_t v143 = v13;
  uint64_t v144 = WitnessTable;
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v15 = sub_219157F48();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v93 = MEMORY[0x263F1A420];
  uint64_t v17 = sub_218FFDF90((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v149 = v16;
  uint64_t v150 = v17;
  uint64_t v100 = MEMORY[0x263F18E48];
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v147 = v19;
  uint64_t v148 = v20;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v141 = v8;
  uint64_t v142 = v11;
  uint64_t v143 = v15;
  uint64_t v144 = v18;
  uint64_t v145 = WitnessTable;
  uint64_t v146 = v21;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v8;
  uint64_t v142 = v11;
  uint64_t v143 = v15;
  uint64_t v144 = v18;
  uint64_t v145 = WitnessTable;
  uint64_t v146 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v75 = sub_219157F68();
  uint64_t v82 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)&v73 - v22;
  uint64_t v77 = sub_219157F48();
  uint64_t v83 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v73 = (char *)&v73 - v23;
  uint64_t v24 = v106;
  uint64_t v25 = v107;
  uint64_t v26 = v104;
  uint64_t v27 = v105;
  uint64_t v141 = v107;
  uint64_t v142 = v104;
  uint64_t v28 = v108;
  uint64_t v143 = v106;
  uint64_t v144 = v108;
  uint64_t v145 = v105;
  uint64_t v85 = type metadata accessor for FlowStackSheetViewModifier();
  uint64_t v84 = sub_219157F48();
  uint64_t v86 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v99 = (char *)&v73 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C068E0);
  uint64_t v88 = sub_219157F48();
  uint64_t v91 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v102 = (char *)&v73 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C068E8);
  uint64_t v90 = sub_219157F48();
  uint64_t v92 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v87 = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v89 = (uint64_t)&v73 - v33;
  uint64_t v34 = v110[1];
  uint64_t v81 = *v110;
  uint64_t v98 = v34;
  uint64_t v80 = type metadata accessor for FlowStackAuthority();
  uint64_t v76 = swift_getWitnessTable();
  sub_219157E88();
  uint64_t v35 = v109;
  uint64_t v126 = v25;
  uint64_t v127 = v109;
  uint64_t v128 = v26;
  uint64_t v129 = v24;
  uint64_t v130 = v28;
  uint64_t v36 = v28;
  uint64_t v37 = v101;
  uint64_t v131 = v101;
  uint64_t v132 = v27;
  swift_getKeyPath();
  sub_219157E98();
  swift_release();
  swift_release();
  uint64_t v118 = v25;
  uint64_t v119 = v35;
  uint64_t v120 = v26;
  uint64_t v121 = v106;
  uint64_t v122 = v36;
  uint64_t v123 = v37;
  uint64_t v38 = v110;
  uint64_t v124 = v27;
  uint64_t v125 = v110;
  uint64_t v39 = v74;
  sub_219157F58();
  uint64_t v40 = sub_2191491A0();
  uint64_t v41 = v75;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = v73;
  sub_219140C30(v40, v41, v42);
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v39, v41);
  uint64_t v44 = sub_21914964C();
  uint64_t v45 = v38[4];
  uint64_t v46 = v38[5];
  unint64_t v47 = sub_2190F9640();
  uint64_t v139 = v42;
  unint64_t v140 = v47;
  uint64_t v48 = v77;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v104;
  uint64_t v51 = v105;
  sub_2191137E8(v44, v45, v46, v48, v104, v49);
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v48);
  swift_getKeyPath();
  uint64_t v52 = swift_allocObject();
  char v53 = v110;
  long long v54 = *((_OWORD *)v110 + 1);
  *(_OWORD *)(v52 + 72) = *(_OWORD *)v110;
  uint64_t v55 = v106;
  uint64_t v56 = v109;
  *(void *)(v52 + 16) = v107;
  *(void *)(v52 + 24) = v56;
  *(void *)(v52 + 32) = v50;
  *(void *)(v52 + 40) = v55;
  uint64_t v57 = v101;
  *(void *)(v52 + 48) = v108;
  *(void *)(v52 + 56) = v57;
  *(void *)(v52 + 64) = v51;
  *(_OWORD *)(v52 + 88) = v54;
  *(_OWORD *)(v52 + 104) = *((_OWORD *)v53 + 2);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v137 = v49;
  uint64_t v138 = v58;
  uint64_t v59 = v84;
  uint64_t v60 = swift_getWitnessTable();
  unint64_t v61 = v99;
  sub_219158C58();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v59);
  swift_getKeyPath();
  sub_219157E88();
  uint64_t v111 = v107;
  uint64_t v112 = v109;
  uint64_t v113 = v104;
  uint64_t v114 = v55;
  uint64_t v115 = v108;
  uint64_t v116 = v57;
  uint64_t v117 = v105;
  swift_getKeyPath();
  uint64_t v62 = (uint64_t)v94;
  sub_219157E98();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v62, 0, 1, v96);
  uint64_t v63 = sub_218FFDF90(&qword_267C068F8, &qword_267C068E0);
  uint64_t v135 = v60;
  uint64_t v136 = v63;
  uint64_t v64 = v88;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = (uint64_t)v87;
  uint64_t v67 = v102;
  sub_219158AA8();
  swift_release();
  sub_2190F96E0(v62);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v67, v64);
  uint64_t v68 = sub_218FFDF90(&qword_267C06900, &qword_267C068E8);
  uint64_t v133 = v65;
  uint64_t v134 = v68;
  uint64_t v69 = v90;
  swift_getWitnessTable();
  uint64_t v70 = v89;
  sub_218FFDE04(v66, v69, v89);
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
  v71(v66, v69);
  sub_218FFDE04(v70, v69, v97);
  return ((uint64_t (*)(uint64_t, uint64_t))v71)(v70, v69);
}

uint64_t sub_2190F85C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + qword_267C0EDF8;
  swift_beginAccess();
  uint64_t v4 = sub_219157E68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_2190F864C(uint64_t a1)
{
  uint64_t v2 = sub_219157E68();
  double v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return sub_2191495BC((uint64_t)v5);
}

uint64_t sub_2190F8718@<X0>(void (**a1)(double)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v65 = a8;
  uint64_t v75 = a7;
  uint64_t v69 = a5;
  uint64_t v70 = a6;
  uint64_t v64 = a4;
  uint64_t v67 = a2;
  uint64_t v74 = a9;
  uint64_t v68 = a3;
  uint64_t v72 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v66 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v13;
  uint64_t v77 = MEMORY[0x263F8D1F0];
  uint64_t v78 = v14;
  uint64_t v79 = MEMORY[0x263F8D1F8];
  uint64_t v15 = sub_2191590B8();
  uint64_t v71 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v63 = (char *)v51 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C037B8);
  uint64_t v53 = v15;
  uint64_t v17 = sub_219157F48();
  uint64_t v73 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = (char *)v51 - v18;
  uint64_t v19 = type metadata accessor for FlowStackAuthority.PathComponent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v76 = a4;
  uint64_t v77 = v19;
  v51[0] = v19;
  uint64_t v78 = a8;
  uint64_t v79 = WitnessTable;
  uint64_t v57 = WitnessTable;
  sub_2191590B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v21 = sub_219157F48();
  uint64_t v22 = swift_getWitnessTable();
  v51[1] = v22;
  uint64_t v23 = sub_218FFDF90((unint64_t *)&qword_267C037C0, &qword_267C037B8);
  uint64_t v84 = v22;
  uint64_t v85 = v23;
  uint64_t v58 = v17;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v56 = v24;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v82 = v25;
  uint64_t v83 = v26;
  uint64_t v54 = v21;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v76 = v17;
  uint64_t v77 = v19;
  uint64_t v78 = v21;
  uint64_t v79 = v24;
  uint64_t v80 = WitnessTable;
  uint64_t v81 = v27;
  uint64_t v60 = MEMORY[0x263F1AF00];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v61 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v52 = (char *)v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v30 = MEMORY[0x270FA5388](v29);
  uint64_t v55 = (uint64_t)v51 - v31;
  uint64_t v32 = v66;
  a1[2](v30);
  long long v86 = *(_OWORD *)a1;
  uint64_t v76 = *((void *)&v86 + 1);
  uint64_t v33 = v63;
  uint64_t v34 = v68;
  sub_219158CC8();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v32, v34);
  swift_getKeyPath();
  LOBYTE(v76) = 1;
  uint64_t v35 = v62;
  uint64_t v36 = v53;
  sub_219158AA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v33, v36);
  uint64_t v37 = swift_checkMetadataState();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v67;
  *(void *)(v38 + 24) = v34;
  uint64_t v39 = v69;
  *(void *)(v38 + 32) = v64;
  *(void *)(v38 + 40) = v39;
  uint64_t v40 = v75;
  *(void *)(v38 + 48) = v70;
  *(void *)(v38 + 56) = v40;
  *(void *)(v38 + 64) = v65;
  long long v41 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v38 + 72) = *(_OWORD *)a1;
  *(_OWORD *)(v38 + 88) = v41;
  *(_OWORD *)(v38 + 104) = *((_OWORD *)a1 + 2);
  sub_2190F97C4((uint64_t)&v86);
  swift_retain();
  swift_retain();
  uint64_t v42 = swift_checkMetadataState();
  uint64_t v43 = (uint64_t)v52;
  uint64_t v44 = v58;
  uint64_t v45 = v56;
  uint64_t v46 = v57;
  sub_219158C68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v35, v44);
  uint64_t v76 = v44;
  uint64_t v77 = v37;
  uint64_t v78 = v42;
  uint64_t v79 = v45;
  uint64_t v80 = v46;
  uint64_t v81 = v27;
  swift_getOpaqueTypeConformance2();
  uint64_t v47 = v55;
  uint64_t v48 = OpaqueTypeMetadata2;
  sub_218FFDE04(v43, OpaqueTypeMetadata2, v55);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v49(v43, v48);
  sub_218FFDE04(v47, v48, v74);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v47, v48);
}

uint64_t EnvironmentValues.isAtFlowStackRoot.getter()
{
  sub_2190F8E5C();
  sub_219158238();
  return v1;
}

unint64_t sub_2190F8E5C()
{
  unint64_t result = qword_267C06858[0];
  if (!qword_267C06858[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267C06858);
  }
  return result;
}

uint64_t sub_2190F8EB0@<X0>(unsigned char *a1@<X8>)
{
  sub_2190F8E5C();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F8F00@<X0>(unsigned char *a1@<X8>)
{
  sub_2190F8E5C();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_2190F8F50()
{
  return sub_219158248();
}

uint64_t sub_2190F8F9C()
{
  return sub_219158248();
}

ValueMetadata *type metadata accessor for FlowStackRootKey()
{
  return &type metadata for FlowStackRootKey;
}

void *sub_2190F8FF8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2190F9078(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t sub_2190F90D8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2190F9120(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FlowStack()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2190F9184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v34 = a4;
  uint64_t v28 = a3;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v32 = a1;
  uint64_t v33 = v7;
  uint64_t v30 = a5;
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FlowStackAuthority.PathComponent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = a3;
  uint64_t v38 = v10;
  uint64_t v39 = a5;
  uint64_t v40 = WitnessTable;
  uint64_t v11 = sub_2191590B8();
  uint64_t v31 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  uint64_t v14 = sub_219157F48();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v27 - v20;
  (*(void (**)(uint64_t, double))(a2 + 32))(v32 + *(int *)(v10 + 44), v19);
  uint64_t v22 = v28;
  sub_219158CC8();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v22);
  LOBYTE(v37) = 1;
  uint64_t v23 = swift_getWitnessTable();
  View.presentedBy(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v11);
  uint64_t v24 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v35 = v23;
  uint64_t v36 = v24;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v17, v14, (uint64_t)v21);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v17, v14);
  sub_218FFDE04((uint64_t)v21, v14, v34);
  return ((uint64_t (*)(char *, uint64_t))v25)(v21, v14);
}

uint64_t sub_2190F9508(unint64_t *a1)
{
  sub_21914964C();
  BOOL v2 = sub_2190D8AF0();
  uint64_t result = swift_release();
  unint64_t v4 = *a1;
  if (v2)
  {
    if (v4) {
      return result;
    }
    unint64_t v5 = v4 | 1;
  }
  else
  {
    if ((v4 & 1) == 0) {
      return result;
    }
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFELL;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_2190F956C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190F7AD8(a1, a2);
}

uint64_t sub_2190F95A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190F9604()
{
  return 56;
}

__n128 sub_2190F9610(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_2190F962C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190F8718(*(void (***)(double))(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

unint64_t sub_2190F9640()
{
  unint64_t result = qword_267C068F0;
  if (!qword_267C068F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C068F0);
  }
  return result;
}

uint64_t sub_2190F96A0(unint64_t *a1)
{
  return sub_2190F9508(a1);
}

uint64_t sub_2190F96E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm_5()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190F978C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190F9184(a1, v2 + 72, *(void *)(v2 + 32), a2, *(void *)(v2 + 64));
}

uint64_t sub_2190F97C4(uint64_t a1)
{
  return a1;
}

double sub_2190F97F0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a6;
  uint64_t v24 = a5;
  uint64_t v27 = a7;
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 88);
  uint64_t v11 = *(void *)(*a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  double v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v24 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v24 - v15, a2, AssociatedTypeWitness, v14);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = v24;
  *((void *)v18 + 2) = v11;
  *((void *)v18 + 3) = v19;
  *((void *)v18 + 4) = v10;
  *((void *)v18 + 5) = *(void *)(v9 + 96);
  uint64_t v20 = v25;
  *((void *)v18 + 6) = v26;
  *((void *)v18 + 7) = v20;
  *((void *)v18 + 8) = a4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v17], v16, AssociatedTypeWitness);
  swift_retain();
  sub_2190F78CC((uint64_t)sub_2190F9ACC, (uint64_t)v18, v20, a4, (uint64_t *)v28);
  long long v21 = v28[1];
  uint64_t v22 = v27;
  _OWORD *v27 = v28[0];
  v22[1] = v21;
  double result = *(double *)&v29;
  v22[2] = v29;
  return result;
}

uint64_t sub_2190F99E8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_2190F9ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v1 + 56);
  return sub_2190F799C(v4, v3, a1);
}

uint64_t sub_2190F9B90()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190F9F54@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FB0E4(&qword_26AD03198, MEMORY[0x263F50B68], 0xD000000000000014, 0x80000002191828A0, a1);
}

uint64_t sub_2190F9F8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FA258(&qword_26AD03190, &qword_26AD036B0, 0x6C616E6F6974704FLL, 0xEE003E444955553CLL, a1);
}

uint64_t sub_2190F9FC0(uint64_t a1, char a2)
{
  return sub_2190FAC04(a1, a2, 0xD000000000000019, 0x8000000219182680, (void (*)(void, void))j__swift_release);
}

uint64_t sub_2190F9FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219158228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_219006450(a1, a2);
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_21915B228();
    uint64_t v11 = sub_2191587F8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v16 = v13 + 4;
      uint64_t v18 = sub_2190FD980(0xD000000000000017, 0x8000000219182880, &v19);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      uint64_t v14 = v17;
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v14, -1, -1);
      MEMORY[0x21D482B50](v13, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_219006718(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_2190FA22C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FA258(&qword_26AD02C80, &qword_26AD02AD8, 0xD000000000000017, 0x8000000219182AF0, a1);
}

uint64_t sub_2190FA258@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_219158228();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_219024A0C((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_21915B228();
  uint64_t v20 = sub_2191587F8();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v25 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v28 = sub_2190FD980(v27, v25, &v29);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v23, -1, -1);
    MEMORY[0x21D482B50](v22, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2190FA4E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FA258(&qword_26AD031A0, &qword_26AD03308, 0xD000000000000021, 0x8000000219182A60, a1);
}

uint64_t sub_2190FA50C@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_218FFBCB8(a1, a2, (void (*)(uint64_t, void))sub_218FFE128, 0xD00000000000001CLL, 0x8000000219182C30, (void (*)(void, void))sub_218FFDDBC, a3);
}

uint64_t sub_2190FA550(uint64_t a1, char a2)
{
  return sub_2190FAC04(a1, a2, 0xD00000000000001DLL, 0x8000000219182950, (void (*)(void, void))j__swift_release);
}

uint64_t sub_2190FA580(void *a1, char a2)
{
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v13 = a1;
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_21915B228();
    uint64_t v9 = sub_2191587F8();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v16 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v15 = sub_2190FD980(0xD000000000000040, 0x80000002191829F0, &v16);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v12, -1, -1);
      MEMORY[0x21D482B50](v11, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_218FFDD40(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return (uint64_t)a1;
}

uint64_t sub_2190FA794(uint64_t a1, char a2)
{
  return sub_2190FA9C8(a1, a2, 0x8000000219182930);
}

double sub_2190FA7A8(uint64_t a1, char a2)
{
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_21915B228();
  uint64_t v9 = sub_2191587F8();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    double v15 = *(double *)&v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_2190FD980(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v12, -1, -1);
    MEMORY[0x21D482B50](v11, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  sub_218FFDDBC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2190FA9B4(uint64_t a1, char a2)
{
  return sub_2190FA9C8(a1, a2, 0x8000000219182910);
}

uint64_t sub_2190FA9C8(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v6 = sub_219158228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_21915B228();
    uint64_t v11 = sub_2191587F8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      unint64_t v15 = a3;
      uint64_t v16 = v14;
      uint64_t v19 = v14;
      *(_DWORD *)id v13 = 136315138;
      uint64_t v18 = sub_2190FD980(0xD000000000000013, v15, &v19);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v16, -1, -1);
      MEMORY[0x21D482B50](v13, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_21903AC64(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_2190FABD4(uint64_t a1, char a2)
{
  return sub_2190FAC04(a1, a2, 0xD000000000000024, 0x80000002191828E0, (void (*)(void, void))j__swift_release);
}

uint64_t sub_2190FAC04(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(void, void))
{
  uint64_t v10 = sub_219158228();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v14 = sub_21915B228();
    unint64_t v15 = sub_2191587F8();
    if (os_log_type_enabled(v15, v14))
    {
      unint64_t v23 = a4;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = a5;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = a3;
      uint64_t v20 = v18;
      uint64_t v26 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v25 = sub_2190FD980(v19, v23, &v26);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v20, -1, -1);
      uint64_t v21 = v17;
      a5 = v24;
      MEMORY[0x21D482B50](v21, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  return a1;
}

void sub_2190FAE20(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
}

uint64_t sub_2190FAE64(uint64_t a1, char a2)
{
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_21915B228();
  uint64_t v9 = sub_2191587F8();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_2190FD980(1819242306, 0xE400000000000000, &v15);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v12, -1, -1);
    MEMORY[0x21D482B50](v11, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  sub_218FFDDBC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2190FB068@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  return sub_2190FCAD0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, __n128))j__swift_retain, 0xD00000000000001ELL, 0x80000002191828C0, (uint64_t (*)(uint64_t, uint64_t, __n128))j__swift_release, a3);
}

uint64_t sub_2190FB0AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FB0E4(&qword_26AD03528, MEMORY[0x263F18460], 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_2190FB0E4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_219158228();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_21915B228();
    uint64_t v21 = sub_2191587F8();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      unint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)unint64_t v23 = 136315138;
      uint64_t v29 = sub_2190FD980(v28, v26, &v30);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v24, -1, -1);
      MEMORY[0x21D482B50](v23, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_2190FB39C()
{
  uint64_t v1 = sub_219158228();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_21915B228();
  uint64_t v7 = sub_2191587F8();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    double v12 = *(double *)&v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    v11[0] = v9 + 4;
    v11[1] = sub_2190FD980(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v12);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v10, -1, -1);
    MEMORY[0x21D482B50](v9, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  sub_2190FE04C((uint64_t)v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

void sub_2190FB5BC(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
}

void sub_2190FB600(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, void, double)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(void, void)@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v14 = sub_219158228();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a7 = a1;
  }
  else
  {
    uint64_t v28 = a4;
    a3(a1, 0, v16);
    os_log_type_t v19 = sub_21915B228();
    os_log_type_t v20 = sub_2191587F8();
    if (os_log_type_enabled(v20, v19))
    {
      v26[0] = a5;
      uint64_t v21 = swift_slowAlloc();
      v26[1] = (unint64_t)a7;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = a6;
      uint64_t v24 = v23;
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v29 = sub_2190FD980(v28, v26[0], &v30);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a6 = v27;
      MEMORY[0x21D482B50](v25, -1, -1);
      MEMORY[0x21D482B50](v22, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    a6(a1, 0);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t sub_2190FB834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v2, (uint64_t)v17, &qword_26AD012A8);
  if (v18 == 1) {
    return sub_219024A0C((uint64_t)v17, a1, &qword_26AD010B8);
  }
  os_log_type_t v9 = sub_21915B228();
  uint64_t v10 = sub_2191587F8();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    double v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v15[1] = a1;
    uint64_t v14 = v13;
    uint64_t v16 = v13;
    *(_DWORD *)double v12 = 136315138;
    v15[2] = sub_2190FD980(0xD000000000000017, 0x8000000219182970, &v16);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v14, -1, -1);
    MEMORY[0x21D482B50](v12, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2190FBA6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FC5E8(qword_267C05890, (uint64_t (*)(void *, uint64_t))sub_219018288, 0xD000000000000015, 0x8000000219182A90, a1);
}

uint64_t sub_2190FBAA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_219158228();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  if (*(unsigned char *)(v1 + 48) == 1)
  {
    uint64_t v9 = *(void *)(v1 + 32);
    uint64_t v8 = *(void *)(v1 + 40);
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v12 = *(void *)(v1 + 8);
    uint64_t result = sub_21908D3B4(v7);
  }
  else
  {
    swift_retain();
    os_log_type_t v14 = sub_21915B228();
    uint64_t v15 = sub_2191587F8();
    os_log_type_t v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      v22[0] = v20;
      *(_DWORD *)uint64_t v17 = 136315138;
      v19[1] = v17 + 4;
      uint64_t v21 = sub_2190FD980(0xD000000000000022, 0x8000000219182C00, v22);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      uint64_t v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v18, -1, -1);
      MEMORY[0x21D482B50](v17, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_2190FE084(v1);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v22[0];
    uint64_t v12 = v22[1];
    uint64_t v11 = v22[2];
    uint64_t v10 = v22[3];
    uint64_t v9 = v22[4];
    uint64_t v8 = v22[5];
  }
  *a1 = v7;
  a1[1] = v12;
  a1[2] = v11;
  a1[3] = v10;
  a1[4] = v9;
  a1[5] = v8;
  return result;
}

double sub_2190FBCF8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_219158228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v10 = sub_21915B228();
  uint64_t v11 = sub_2191587F8();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v18[0] = a2;
    uint64_t v15 = v14;
    double v19 = *(double *)&v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    v18[1] = sub_2190FD980(0x657A69534743, 0xE600000000000000, (uint64_t *)&v19);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v15;
    a2 = v18[0];
    MEMORY[0x21D482B50](v16, -1, -1);
    MEMORY[0x21D482B50](v13, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  sub_2190C8028(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v19;
}

uint64_t sub_2190FBF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_21915B228();
    uint64_t v9 = sub_2191587F8();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      v14[0] = v11 + 4;
      v14[1] = sub_2190FD980(0xD000000000000011, 0x8000000219182BB0, &v15);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v12, -1, -1);
      MEMORY[0x21D482B50](v11, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_2190C8028(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_2190FC134@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_218FFBCB8(a1, a2, (void (*)(uint64_t, void))sub_218FFE128, 0xD00000000000002FLL, 0x8000000219182BD0, (void (*)(void, void))sub_218FFDDBC, a3);
}

_OWORD *sub_2190FC178@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v2, (uint64_t)v17, qword_267C05D68);
  if (v18 == 1) {
    return sub_2190214DC(v17, a1);
  }
  os_log_type_t v9 = sub_21915B228();
  os_log_type_t v10 = sub_2191587F8();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v15[0] = a1;
    uint64_t v14 = v13;
    uint64_t v16 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    v15[1] = sub_2190FD980(7958081, 0xE300000000000000, &v16);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v14, -1, -1);
    MEMORY[0x21D482B50](v12, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  swift_release();
  return (_OWORD *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2190FC39C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_219158228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = sub_21915B228();
    os_log_type_t v9 = sub_2191587F8();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)os_log_type_t v11 = 136315138;
      uint64_t v14 = sub_2190FD980(0xD00000000000003CLL, 0x8000000219182990, &v15);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v12, -1, -1);
      MEMORY[0x21D482B50](v11, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_21903AC64(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_2190FC5B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2190FC5E8(&qword_267C06538, (uint64_t (*)(void *, uint64_t))sub_219018288, 0xD000000000000011, 0x8000000219182AB0, a1);
}

uint64_t sub_2190FC5E8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5;
  uint64_t v12 = sub_219158228();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v10, (uint64_t)v27, a1);
  if (v28 == 1) {
    return a2(v27, a5);
  }
  unint64_t v17 = v27[0];
  os_log_type_t v18 = sub_21915B228();
  double v19 = sub_2191587F8();
  if (os_log_type_enabled(v19, v18))
  {
    v25[0] = a4;
    uint64_t v20 = swift_slowAlloc();
    v25[1] = v17;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = a3;
    uint64_t v24 = v22;
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    v25[2] = sub_2190FD980(v23, v25[0], &v26);
    sub_21915B398();
    _os_log_impl(&dword_218FF7000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D482B50](v24, -1, -1);
    MEMORY[0x21D482B50](v21, -1, -1);
  }

  sub_219158218();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_2190FC820@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_218FFBCB8(a1, a2, (void (*)(uint64_t, void))sub_218FFE128, 0xD000000000000033, 0x8000000219182B70, (void (*)(void, void))sub_218FFDDBC, a3);
}

uint64_t sub_2190FC864(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_219158228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_219062A84(a1);
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_21915B228();
    os_log_type_t v11 = sub_2191587F8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_2190FD980(0xD000000000000028, 0x8000000219182B10, &v17);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D482B50](v14, -1, -1);
      MEMORY[0x21D482B50](v13, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    sub_219074AD8(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

uint64_t sub_2190FCA8C@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  return sub_2190FCAD0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, __n128))j__swift_retain, 0xD00000000000001CLL, 0x8000000219182AD0, (uint64_t (*)(uint64_t, uint64_t, __n128))j_j__swift_release, a3);
}

uint64_t sub_2190FCAD0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t (*a3)(uint64_t, uint64_t, __n128)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, __n128)@<X5>, void *a7@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v13 = sub_219158228();
  uint64_t v14 = *(void *)(v13 - 8);
  v15.n128_f64[0] = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a7 = a1;
    uint64_t v26 = v29;
    return v26(a1, 1, v15);
  }
  else
  {
    uint64_t v28 = a4;
    ((void (*)(uint64_t, void, double))v29)(a1, 0, v15.n128_f64[0]);
    os_log_type_t v18 = sub_21915B228();
    double v19 = sub_2191587F8();
    if (os_log_type_enabled(v19, v18))
    {
      v27[0] = a5;
      uint64_t v20 = swift_slowAlloc();
      v27[1] = (unint64_t)a7;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = a6;
      uint64_t v23 = v22;
      uint64_t v31 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v30 = sub_2190FD980(v28, v27[0], &v31);
      sub_21915B398();
      _os_log_impl(&dword_218FF7000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v24 = v23;
      a6 = v29;
      MEMORY[0x21D482B50](v24, -1, -1);
      MEMORY[0x21D482B50](v21, -1, -1);
    }

    sub_219158218();
    swift_getAtKeyPath();
    ((void (*)(uint64_t, void))a6)(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
}

uint64_t sub_2190FCD44()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  return swift_release();
}

uint64_t sub_2190FCDC0(uint64_t a1)
{
  sub_2190090C4(a1, (uint64_t)v3, &qword_267C05608);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2190090C4((uint64_t)v3, (uint64_t)&v2, &qword_267C05608);
  swift_retain();
  sub_2191579F8();
  return sub_218FFE158((uint64_t)v3, &qword_267C05608);
}

__n128 LocalizedText.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v4 = a1[1].n128_u64[0];
  type metadata accessor for _LocalizerOwner();
  sub_219094EF0();
  __n128 v10 = *a1;
  uint64_t v5 = sub_2191580D8();
  unint64_t v7 = v6;
  uint64_t KeyPath = swift_getKeyPath();
  a2->n128_u64[0] = v5;
  a2->n128_u64[1] = v7;
  a2[1].n128_u64[0] = KeyPath;
  a2[1].n128_u8[8] = 0;
  __n128 result = v10;
  a2[2] = v10;
  a2[3].n128_u64[0] = v4;
  return result;
}

uint64_t LocalizedText.body.getter()
{
  long long v1 = v0[1];
  long long v21 = *v0;
  long long v22 = v1;
  long long v23 = v0[2];
  uint64_t v24 = *((void *)v0 + 6);
  uint64_t v2 = v1;
  char v3 = BYTE8(v1);
  sub_2190FD254((uint64_t)&v21);
  sub_218FFE128(v2, v3);
  char v4 = sub_2190FAE64(v2, v3);
  sub_218FFDDBC(v2, v3);
  sub_2190FD2B8((uint64_t)&v21);
  if (v4)
  {
    sub_2190FD254((uint64_t)&v21);
    type metadata accessor for _LocalizerOwner();
    sub_219094EF0();
    sub_2191580A8();
    sub_2190FD2B8((uint64_t)&v21);
    swift_getKeyPath();
    sub_2191580C8();
    swift_release();
    swift_release();
    uint64_t v5 = swift_allocObject();
    long long v6 = v22;
    *(_OWORD *)(v5 + 16) = v21;
    *(_OWORD *)(v5 + 32) = v6;
    *(_OWORD *)(v5 + 48) = v23;
    long long v7 = *(_OWORD *)v19;
    v10[0] = v18[0];
    v10[1] = v18[1];
    *(void *)(v5 + 64) = v24;
    v11[0] = v7;
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)&v19[9];
    os_log_type_t v12 = nullsub_1;
    uint64_t v13 = 0;
    uint64_t v14 = sub_2190FD31C;
    uint64_t v15 = 0;
    uint64_t v16 = sub_2190FD610;
    uint64_t v17 = v5;
    sub_2190090C4((uint64_t)v10, (uint64_t)v18, &qword_267C06908);
    char v20 = 0;
    sub_2190FD254((uint64_t)&v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06908);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C03E88);
    sub_218FFDF90(&qword_267C06910, &qword_267C06908);
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    sub_2191584C8();
    return sub_218FFE158((uint64_t)v10, &qword_267C06908);
  }
  else
  {
    sub_219030858();
    sub_2191589E8();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0xD000000000000022;
    *(void *)(v9 + 24) = 0x80000002191811D0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06908);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C03E88);
    sub_218FFDF90(&qword_267C06910, &qword_267C06908);
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    return sub_2191584C8();
  }
}

uint64_t sub_2190FD254(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  swift_retain();
  sub_218FFE128(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2190FD2B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  swift_release();
  sub_218FFDDBC(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t (*sub_2190FD31C@<X0>(void *a1@<X0>, void *a2@<X8>))()
{
  id v4 = a1;
  __n128 result = _taskRetry(for:)(a1);
  *a2 = a1;
  a2[1] = result;
  a2[2] = v6;
  return result;
}

uint64_t sub_2190FD354@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05610);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_219157728();
  uint64_t v10 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  os_log_type_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = *(_OWORD *)(a2 + 32);
  uint64_t v24 = *(void *)(a2 + 48);
  uint64_t v13 = (uint64_t (*)(void *))v23;
  sub_2190FDFD8((uint64_t)&v23);
  uint64_t v21 = v13(a1);
  uint64_t v15 = v14;
  sub_2190FE010((uint64_t)&v23);
  uint64_t KeyPath = swift_getKeyPath();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21915AB58();
  uint64_t v16 = v22;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v9 + *(int *)(v7 + 36), v12, v22);
  *uint64_t v9 = KeyPath;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06930);
  sub_2190090C4((uint64_t)v9, a3 + *(int *)(v17 + 36), &qword_267C05610);
  *(void *)a3 = v21;
  *(void *)(a3 + 8) = v15;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_218FFE158((uint64_t)v9, &qword_267C05610);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2190FD57C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190FD5BC()
{
  swift_release();
  sub_218FFDDBC(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2190FD610@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2190FD354(a1, v2 + 16, a2);
}

uint64_t sub_2190FD618()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for LocalizedText(uint64_t a1)
{
  swift_release();
  sub_218FFDDBC(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocalizedText(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_218FFE128(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizedText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_218FFE128(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_218FFDDBC(v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizedText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_218FFDDBC(v5, v6);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedText(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedText()
{
  return &type metadata for LocalizedText;
}

unint64_t sub_2190FD8BC()
{
  unint64_t result = qword_267C06918;
  if (!qword_267C06918)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06920);
    sub_218FFDF90(&qword_267C06910, &qword_267C06908);
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06918);
  }
  return result;
}

uint64_t sub_2190FD980(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2190FDA54(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_21902493C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_21902493C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2190FDA54(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21915B3A8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_2190FDC10(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_21915B4E8();
  if (!v8)
  {
    sub_21915B5A8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_21915B618();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2190FDC10(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2190FDCA8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2190FDE88(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2190FDE88(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2190FDCA8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2190FDE20(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_21915B488();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_21915B5A8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_21915AD98();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_21915B618();
    __break(1u);
LABEL_14:
    uint64_t result = sub_21915B5A8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_2190FDE20(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06928);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2190FDE88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06928);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21915B618();
  __break(1u);
  return result;
}

uint64_t sub_2190FDFD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190FE010(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190FE04C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2190FE084(uint64_t a1)
{
  return a1;
}

uint64_t IntentView<>.pageResourceMetrics()(uint64_t a1)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  v7[0] = 0;
  uint64_t v8 = KeyPath;
  char v9 = 0;
  uint64_t v10 = v3;
  char v11 = 0;
  uint64_t v4 = type metadata accessor for PageResourceMetricsViewModifier();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x21D47F800](v7, a1, v4, WitnessTable);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v3, 0);
}

{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  unsigned char v7[8];
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  v7[0] = 0;
  uint64_t v8 = KeyPath;
  char v9 = 0;
  uint64_t v10 = v3;
  char v11 = 0;
  uint64_t v4 = type metadata accessor for PageResourceMetricsViewModifier();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x21D47F800](v7, a1, v4, WitnessTable);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v3, 0);
}

uint64_t type metadata accessor for PageResourceMetricsViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2190FE1C4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  v7[0] = 1;
  uint64_t v8 = KeyPath;
  char v9 = 0;
  uint64_t v10 = v3;
  char v11 = 0;
  uint64_t v4 = type metadata accessor for PageResourceMetricsViewModifier();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x21D47F800](v7, a1, v4, WitnessTable);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v3, 0);
}

uint64_t ModifiedContent<>.pageResourceMetrics()(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  v7[0] = 1;
  uint64_t v8 = KeyPath;
  char v9 = 0;
  uint64_t v10 = v3;
  char v11 = 0;
  uint64_t v4 = type metadata accessor for PageResourceMetricsViewModifier();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x21D47F800](v7, a1, v4, WitnessTable);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v3, 0);
}

uint64_t get_witness_table_9JetEngine11IntentModelRz7SwiftUI4ViewR_AcDR0_AcDR1_AA05ShelfD010ReturnTypeRpzr2_lAC15ModifiedContentVy01_ab1_eF00cG0Vyxq_q0_q1_GAJ019PageResourceMetricsG8Modifier33_2290306F402D82832DE0DC1062434EFALLVyxGGAcDHPAmcDHPyHC_AqC0gP0HPyHCHCTm()
{
  return swift_getWitnessTable();
}

uint64_t get_witness_table_7SwiftUI4ViewRz011_JetEngine_aB0018_IntentDispatchingC8ModifierR_0dE010ShelfModel5_What_10ReturnTypeRP_r0_lAA15ModifiedContentVyAKyxq_GAC019PageResourceMetricscH033_2290306F402D82832DE0DC1062434EFALLVyAGQy_GGAaBHPAlaBHPxAaBHD1__q_AcDHD2_AA0cH0HI1_HC_AqaSHPyHCHCTm()
{
  return swift_getWitnessTable();
}

uint64_t sub_2190FE738(uint64_t a1)
{
  j__swift_release(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 32);
  return j__swift_release(v2, v3);
}

uint64_t sub_2190FE77C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  j__swift_retain(v4);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  j__swift_retain(v6);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v2;
  return a1;
}

uint64_t sub_2190FE7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  j__swift_retain(v4);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  j__swift_release(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  j__swift_retain(v8);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 32);
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v2;
  j__swift_release(v9, v10);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2190FE888(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  j__swift_release(v6, v7);
  char v8 = *(unsigned char *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v8;
  j__swift_release(v9, v10);
  return a1;
}

uint64_t sub_2190FE8F0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[33]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_2190FE944(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_2190FE98C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2190FE9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v126 = a3;
  swift_getWitnessTable();
  int v5 = (void *)sub_2191585B8();
  uint64_t WitnessTable = swift_getWitnessTable();
  v156[0] = v5;
  v156[1] = MEMORY[0x263F1A830];
  uint64_t v119 = WitnessTable;
  v156[2] = WitnessTable;
  v156[3] = MEMORY[0x263F1A820];
  uint64_t v7 = type metadata accessor for _RequirementFailureView();
  uint64_t v98 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v102 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v107 = (char *)&v97 - v10;
  uint64_t v101 = *(v5 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v100 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v106 = (uint64_t)&v97 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C050F0);
  uint64_t v15 = sub_219157F48();
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v114 = *(void *)(a2 + 16);
  uint64_t v115 = v16;
  type metadata accessor for _IntentProgress();
  swift_getFunctionTypeMetadata1();
  sub_21915B378();
  uint64_t v128 = sub_219158778();
  uint64_t v17 = sub_219157F48();
  uint64_t v127 = (void (*)(void, void))v5;
  uint64_t v18 = sub_2191584D8();
  uint64_t v117 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v116 = (char *)&v97 - v19;
  uint64_t v105 = sub_219159518();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_21915A4D8();
  uint64_t v103 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v97 - v26;
  uint64_t v129 = v15;
  uint64_t v110 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v108 = (char *)&v97 - v29;
  uint64_t v120 = v17;
  uint64_t v113 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v111 = (uint64_t)&v97 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v109 = (char *)&v97 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v112 = (uint64_t)&v97 - v35;
  uint64_t v121 = v18;
  uint64_t v122 = v7;
  uint64_t v125 = sub_2191584D8();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (char *)&v97 - v36;
  int v37 = *v3;
  uint64_t v38 = *((void *)v3 + 1);
  uint64_t v39 = v3[16];
  uint64_t v40 = *((void *)v3 + 3);
  uint64_t v41 = v3[32];
  j__swift_retain(v38);
  uint64_t v42 = sub_2190FABD4(v38, v39);
  j__swift_release(v38, v39);
  if (v42)
  {
    uint64_t v43 = v42;
    swift_getKeyPath();
    j__swift_retain(v40);
    sub_2190FB068(v40, v41, v156);
    j__swift_release(v40, v41);
    if (v156[0])
    {
      sub_21915A598();
      uint64_t v44 = v103;
      (*(void (**)(char *, void, uint64_t))(v103 + 104))(v27, *MEMORY[0x263F50C50], v22);
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v24, v27, v22);
      swift_retain();
      sub_2191594E8();
      uint64_t v45 = sub_219159BA8();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v21, v105);
      swift_release();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v22);
      swift_release();
    }
    else
    {
      uint64_t v45 = 0;
    }
    uint64_t v64 = v119;
    uint64_t v65 = v129;
    v156[0] = v45;
    uint64_t v66 = v108;
    sub_219158AA8();
    swift_release();
    swift_release();
    uint64_t v67 = (void *)swift_allocObject();
    uint64_t v68 = v114;
    uint64_t v69 = v115;
    v67[2] = v114;
    v67[3] = v69;
    uint64_t v99 = v43;
    v67[4] = v43;
    unint64_t v70 = sub_2190FFC94();
    uint64_t v134 = v64;
    unint64_t v135 = v70;
    swift_retain_n();
    uint64_t v71 = swift_getWitnessTable();
    uint64_t v72 = (uint64_t)v109;
    sub_219083F48(v68, (uint64_t)&unk_267C069C8, (uint64_t)v67, v65, v68, v71, v69);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v66, v65);
    uint64_t v73 = swift_getWitnessTable();
    uint64_t v132 = v71;
    uint64_t v133 = v73;
    uint64_t v74 = v120;
    uint64_t v75 = swift_getWitnessTable();
    uint64_t v76 = v112;
    sub_218FFDE04(v72, v74, v112);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
    uint64_t v78 = v72;
    uint64_t v79 = v74;
    v77(v78, v74);
    uint64_t v80 = v111;
    sub_218FFDE04(v76, v74, v111);
    uint64_t v81 = (uint64_t)v116;
    sub_219050FE4(v80, v79);
    v77(v80, v79);
    uint64_t v130 = v75;
    uint64_t v131 = v64;
    uint64_t v82 = v121;
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v63 = (uint64_t)v123;
    sub_219050FE4(v81, v82);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v81, v82);
    uint64_t v83 = v76;
    uint64_t v49 = v64;
    v77(v83, v79);
  }
  else
  {
    uint64_t v46 = (uint64_t)v100;
    uint64_t v47 = (uint64_t)v107;
    uint64_t v48 = (uint64_t)v102;
    uint64_t v49 = v119;
    uint64_t v50 = v122;
    uint64_t v51 = v121;
    uint64_t v52 = v120;
    uint64_t v53 = v127;
    uint64_t v54 = v101;
    if (v37)
    {
      uint64_t v55 = v106;
      sub_218FFDE04(v118, (uint64_t)v127, v106);
      uint64_t v56 = v46;
      sub_218FFDE04(v55, (uint64_t)v53, v46);
      unint64_t v57 = sub_2190FFC94();
      uint64_t v140 = v49;
      unint64_t v141 = v57;
      uint64_t v58 = swift_getWitnessTable();
      uint64_t v59 = swift_getWitnessTable();
      uint64_t v138 = v58;
      uint64_t v139 = v59;
      uint64_t v60 = swift_getWitnessTable();
      uint64_t v61 = (uint64_t)v116;
      sub_218FFCBB0(v56, v52, (uint64_t)v53);
      uint64_t v62 = *(void (**)(uint64_t, void))(v54 + 8);
      v62(v56, v53);
      uint64_t v136 = v60;
      uint64_t v137 = v49;
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v63 = (uint64_t)v123;
      sub_219050FE4(v61, v51);
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v61, v51);
      v62(v106, v53);
    }
    else
    {
      uint64_t v84 = v106;
      (*(void (**)(uint64_t, uint64_t, void (*)(void, void)))(v101 + 16))(v106, v118, v127);
      uint64_t v85 = v48;
      _RequirementFailureView.init<>(_:_:)(v84, 0xD000000000000022, 0x8000000219182C50, (uint64_t)v53, v48);
      swift_getWitnessTable();
      sub_218FFDE04(v48, v50, v47);
      uint64_t v127 = *(void (**)(void, void))(v98 + 8);
      v127(v48, v50);
      sub_218FFDE04(v47, v50, v48);
      unint64_t v86 = sub_2190FFC94();
      uint64_t v154 = v49;
      unint64_t v155 = v86;
      uint64_t v87 = swift_getWitnessTable();
      uint64_t v88 = swift_getWitnessTable();
      uint64_t v152 = v87;
      uint64_t v153 = v88;
      uint64_t v150 = swift_getWitnessTable();
      uint64_t v151 = v49;
      swift_getWitnessTable();
      uint64_t v63 = (uint64_t)v123;
      sub_218FFCBB0(v48, v51, v50);
      uint64_t v89 = (void (*)(char *, uint64_t))v127;
      v127(v85, v50);
      v89(v107, v50);
    }
  }
  unint64_t v90 = sub_2190FFC94();
  uint64_t v148 = v49;
  unint64_t v149 = v90;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v146 = v91;
  uint64_t v147 = v92;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v145 = v49;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v142 = v93;
  uint64_t v143 = v94;
  uint64_t v95 = v125;
  swift_getWitnessTable();
  sub_218FFDE04(v63, v95, v126);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8))(v63, v95);
}

uint64_t sub_2190FF8EC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_21915A538();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_21915A548();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for _IntentProgress();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2190FFA74, 0, 0);
}

uint64_t sub_2190FFA74()
{
  (*(void (**)(void, void, void))(v0[11] + 16))(v0[12], v0[2], v0[10]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v3 = v0[5];
      uint64_t v2 = v0[6];
      uint64_t v4 = v0[4];
      uint64_t v5 = *(void **)v0[12];
      *(void *)uint64_t v2 = v5;
      *(unsigned char *)(v2 + 8) = 1;
      (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, *MEMORY[0x263F50C70], v4);
      id v6 = v5;
      sub_21915A588();

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    }
    else
    {
      uint64_t v14 = v0[8];
      uint64_t v13 = (unsigned char *)v0[9];
      uint64_t v15 = v0[7];
      *uint64_t v13 = 1;
      (*(void (**)(unsigned char *, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x263F50C90], v15);
      sub_21915A5A8();
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v13, v15);
    }
  }
  else
  {
    uint64_t v8 = v0[11];
    uint64_t v7 = v0[12];
    uint64_t v9 = v0[10];
    uint64_t v11 = v0[5];
    uint64_t v10 = (unsigned char *)v0[6];
    uint64_t v12 = v0[4];
    *uint64_t v10 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v11 + 104))(v10, *MEMORY[0x263F50C80], v12);
    sub_21915A588();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

unint64_t sub_2190FFC94()
{
  unint64_t result = qword_267C05108;
  if (!qword_267C05108)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C050F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267C05108);
  }
  return result;
}

uint64_t sub_2190FFCF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2190FFD30(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_218FF9AE0;
  return sub_2190FF8EC(a1, v4);
}

uint64_t sub_2190FFDE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_219100014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v11 + 24))(v12, v11, v9);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v17 - ((v8 + 39) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v15 = a2;
  v15[1] = a3;
  void v15[2] = a4;
  (*(void (**)(void *, char *, uint64_t, double))(v7 + 32))(v15 + 3, v10, a3, v14);
  swift_getKeyPath();
  return sub_219157B48();
}

uint64_t sub_21910014C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  double v12 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v14 + 24))(v15, v14, v12);
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v20 - ((v11 + 47) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v18 = a3;
  v18[1] = a4;
  _OWORD v18[2] = a5;
  v18[3] = a6;
  (*(void (**)(void *, char *, uint64_t, double))(v10 + 32))(v18 + 4, v13, a4, v17);
  swift_getKeyPath();
  sub_219158AA8();
  return swift_release();
}

uint64_t sub_2191002B4()
{
  return sub_219158238();
}

uint64_t sub_2191002C0()
{
  return sub_21915B7C8();
}

uint64_t sub_2191002E8()
{
  return sub_2191002B4();
}

uint64_t sub_219100320(uint64_t a1)
{
  return sub_219100564(a1);
}

unint64_t sub_219100350(uint64_t a1)
{
  return ((*(void *)(*(void *)(*(void *)(a1 + 8) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
}

uint64_t sub_2191003B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 24) - 8) + 8))();
}

__n128 sub_2191003E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + a1 - 24) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t))v5)(a2, a1);
  unint64_t v6 = (*(void *)(v5 + 48) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  __n128 result = *(__n128 *)(v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

uint64_t sub_219100460()
{
  return sub_21915AD08() & 1;
}

uint64_t sub_2191004A8()
{
  return sub_21915AC98();
}

__n128 sub_2191004E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a1 + 8) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  uint64_t v6 = a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a1;
  *(__n128 *)(v6 + 16) = result;
  return result;
}

uint64_t sub_219100564(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v3 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - v4, a1, v3);
  return sub_219158248();
}

uint64_t sub_219100658()
{
  return sub_2191002B4();
}

uint64_t sub_21910068C(uint64_t a1)
{
  return sub_219100564(a1);
}

unint64_t sub_2191006B8(uint64_t a1)
{
  return ((*(void *)(*(void *)(*(void *)(a1 + 8) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
}

uint64_t sub_219100718(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 16) - 8) + 8))();
}

__n128 sub_219100748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + a1 - 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t))v5)(a2, a1);
  unint64_t v6 = (*(void *)(v5 + 48) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = (__n128 *)(a1 + v6);
  uint64_t v8 = (__n128 *)(a2 + v6);
  unint64_t v9 = v7[1].n128_u64[0];
  __n128 result = *v7;
  *uint64_t v8 = *v7;
  v8[1].n128_u64[0] = v9;
  return result;
}

uint64_t sub_2191007D0()
{
  return sub_21915AD08() & 1;
}

uint64_t sub_219100814()
{
  return sub_21915AC98();
}

__n128 sub_219100848(__n128 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1->n128_u64[1] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, (unint64_t)a1->n128_u64+ ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  unint64_t v6 = (__n128 *)(a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v7 = a1[1].n128_u64[0];
  __n128 result = *a1;
  __n128 *v6 = *a1;
  v6[1].n128_u64[0] = v7;
  return result;
}

int *IntentResultView.init(_:empty:success:failure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  type metadata accessor for IntentResult();
  uint64_t v15 = sub_219159188();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a8, a1, v15);
  __n128 result = (int *)type metadata accessor for IntentResultView();
  double v17 = (void *)(a8 + result[19]);
  void *v17 = a2;
  v17[1] = a3;
  uint64_t v18 = (void *)(a8 + result[20]);
  *uint64_t v18 = a4;
  v18[1] = a5;
  uint64_t v19 = (void *)(a8 + result[21]);
  *uint64_t v19 = a6;
  v19[1] = a7;
  return result;
}

uint64_t type metadata accessor for IntentResultView()
{
  return swift_getGenericMetadata();
}

uint64_t _IntentResultViewDefaultFailure.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void sub_219100A0C()
{
  type metadata accessor for IntentResult();
  sub_219159188();
  JUMPOUT(0x21D47FB40);
}

uint64_t IntentResultView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v92 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v91 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v90 = (uint64_t)&v87 - v6;
  uint64_t v95 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v93 = v8;
  uint64_t v94 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = *(void *)(*(void *)(v9 + 40) - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v96 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v97 = (uint64_t)&v87 - v12;
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v104 = v15;
  uint64_t v16 = sub_2191584D8();
  uint64_t v106 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v105 = (char *)&v87 - v17;
  uint64_t v113 = v14;
  uint64_t v103 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v101 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v102 = (uint64_t)&v87 - v21;
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v100 = sub_21915B378();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v24 = (char *)&v87 - v23;
  uint64_t v25 = type metadata accessor for IntentResult();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v87 - v30;
  uint64_t v32 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v107 = (char *)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = v16;
  uint64_t v114 = v3;
  uint64_t v35 = sub_2191584D8();
  uint64_t v109 = *(void *)(v35 - 8);
  uint64_t v110 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v108 = (char *)&v87 - v36;
  uint64_t v37 = a1;
  sub_219100A0C();
  IntentResult.data.getter(v25, v24);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v26 + 8);
  v38(v31, v25);
  uint64_t v39 = v32;
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  uint64_t v41 = v22;
  if (v40(v24, 1, v22) == 1)
  {
    uint64_t v42 = v113;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v24, v100);
    uint64_t v43 = (void *)v37;
    uint64_t v44 = v115;
    sub_219100A0C();
    uint64_t v45 = (char *)IntentResult.error.getter();
    uint64_t v46 = ((uint64_t (*)(char *, uint64_t))v38)(v28, v25);
    if (v45)
    {
      uint64_t v47 = (uint64_t *)(v44 + *(int *)(v37 + 84));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      uint64_t v103 = v49;
      uint64_t v102 = v48;
      uint64_t v50 = v95;
      uint64_t v51 = *(void (**)(char *, uint64_t, void *))(v95 + 16);
      uint64_t v107 = v45;
      uint64_t v52 = v94;
      v51(v94, v44, v43);
      unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      uint64_t v54 = (char *)swift_allocObject();
      uint64_t v55 = v114;
      *((void *)v54 + 2) = v41;
      *((void *)v54 + 3) = v55;
      uint64_t v56 = v104;
      *((void *)v54 + 4) = v42;
      *((void *)v54 + 5) = v56;
      uint64_t v58 = v43[6];
      uint64_t v57 = v43[7];
      *((void *)v54 + 6) = v58;
      *((void *)v54 + 7) = v57;
      uint64_t v59 = v43[8];
      *((void *)v54 + 8) = v59;
      (*(void (**)(char *, char *, void *))(v50 + 32))(&v54[v53], v52, v43);
      uint64_t v60 = (uint64_t)v96;
      ((void (*)(char *, uint64_t (*)(), char *))v103)(v107, sub_2191017E8, v54);
      swift_release();
      uint64_t v61 = v97;
      sub_218FFDE04(v60, v56, v97);
      uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      v62(v60, v56);
      sub_218FFDE04(v61, v56, v60);
      uint64_t v63 = (uint64_t)v105;
      sub_218FFCBB0(v60, v113, v56);
      v62(v60, v56);
      uint64_t v118 = v57;
      uint64_t v119 = v59;
      uint64_t v64 = v111;
      swift_getWitnessTable();
      uint64_t v65 = (uint64_t)v108;
      sub_219050FE4(v63, v64);

      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v63, v64);
      v62(v61, v56);
    }
    else
    {
      uint64_t v79 = (uint64_t)v91;
      (*(void (**)(uint64_t))(v44 + *(int *)(v37 + 76)))(v46);
      uint64_t v58 = *(void *)(v37 + 48);
      uint64_t v80 = v37;
      uint64_t v81 = v90;
      uint64_t v82 = v114;
      sub_218FFDE04(v79, v114, v90);
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v83(v79, v82);
      sub_218FFDE04(v81, v82, v79);
      uint64_t v57 = *(void *)(v80 + 56);
      uint64_t v59 = *(void *)(v80 + 64);
      uint64_t v124 = v57;
      uint64_t v125 = v59;
      uint64_t v84 = v111;
      swift_getWitnessTable();
      uint64_t v65 = (uint64_t)v108;
      sub_218FFCBB0(v79, v84, v82);
      v83(v79, v82);
      v83(v81, v82);
    }
  }
  else
  {
    uint64_t v89 = v39;
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    uint64_t v67 = v107;
    uint64_t v88 = v22;
    v66(v107, v24, v22);
    uint64_t v68 = (void *)v37;
    uint64_t v69 = *(void (**)(char *))(v115 + *(int *)(v37 + 80));
    uint64_t v70 = (uint64_t)v101;
    v69(v67);
    uint64_t v57 = v68[7];
    uint64_t v71 = v102;
    uint64_t v72 = v113;
    sub_218FFDE04(v70, v113, v102);
    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v73(v70, v72);
    sub_218FFDE04(v71, v72, v70);
    uint64_t v59 = v68[8];
    uint64_t v74 = (uint64_t)v105;
    sub_219050FE4(v70, v72);
    v73(v70, v72);
    uint64_t v116 = v57;
    uint64_t v117 = v59;
    uint64_t v75 = v111;
    swift_getWitnessTable();
    uint64_t v76 = v68[6];
    uint64_t v77 = v108;
    sub_219050FE4(v74, v75);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v74, v75);
    uint64_t v78 = v71;
    uint64_t v58 = v76;
    v73(v78, v72);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v107, v88);
    uint64_t v65 = (uint64_t)v77;
  }
  uint64_t v122 = v57;
  uint64_t v123 = v59;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v121 = v58;
  uint64_t v85 = v110;
  swift_getWitnessTable();
  sub_218FFDE04(v65, v85, v112);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v65, v85);
}

uint64_t sub_219101590()
{
  uint64_t v0 = type metadata accessor for IntentResult();
  MEMORY[0x270FA5388](v0);
  sub_219159188();
  MEMORY[0x21D47FB40]();
  IntentResult.invalidate(clearing:)(1);
  return sub_219159128();
}

uint64_t sub_219101648()
{
  long long v6 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(type metadata accessor for IntentResultView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_release();
  swift_release();
  type metadata accessor for IntentResult();
  uint64_t v3 = (id *)(v2 + *(int *)(sub_219159188() + 32));
  type metadata accessor for IntentResult._State();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    (*(void (**)(id *, void))(*(void *)(v6 - 8) + 8))(v3, v6);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2191017E8()
{
  type metadata accessor for IntentResultView();
  return sub_219101590();
}

uint64_t _IntentResultViewDefaultEmpty.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_219158298();
  uint64_t v22 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04380);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - v10;
  char v23 = 0;
  sub_219158FE8();
  int v21 = v24;
  unint64_t v20 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v17 = swift_getKeyPath();
  uint64_t v16 = swift_getKeyPath();
  sub_219158288();
  sub_219159338();
  sub_219157BA8();
  if (sub_219157B98())
  {
    sub_219159348();
    swift_release();
  }
  swift_release();
  unint64_t v12 = sub_219101C28();
  sub_219157AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  uint64_t v24 = v2;
  unint64_t v25 = v12;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = sub_219157C98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(void *)a1 = sub_218FFB724;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(unsigned char *)(a1 + 24) = v21;
  uint64_t v15 = KeyPath;
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 40) = v15;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v18;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v17;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = sub_219101C14;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v13;
  return result;
}

unsigned char *sub_219101C14(unsigned char *result)
{
  if (*result == 3) {
    *uint64_t result = 0;
  }
  return result;
}

unint64_t sub_219101C28()
{
  unint64_t result = qword_267C04388;
  if (!qword_267C04388)
  {
    sub_219158298();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C04388);
  }
  return result;
}

uint64_t sub_219101C80@<X0>(uint64_t a1@<X8>)
{
  return _IntentResultViewDefaultEmpty.body.getter(a1);
}

uint64_t _IntentResultViewDefaultFailure.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  id v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  sub_219047F50((uint64_t)v5, a1);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_267C069D0) + 36));
  *uint64_t v11 = KeyPath;
  v11[1] = (uint64_t)sub_219101D98;
  _OWORD v11[2] = 0;
  return sub_219101DB0((uint64_t)v5);
}

unsigned char *sub_219101D98(unsigned char *result)
{
  if (*result == 3) {
    *unint64_t result = 2;
  }
  return result;
}

uint64_t sub_219101DB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_219101E10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219101E64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219101E80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219101E9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  id v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  sub_219047F50((uint64_t)v5, a1);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_267C069D0) + 36));
  *uint64_t v11 = KeyPath;
  v11[1] = (uint64_t)sub_219101D98;
  _OWORD v11[2] = 0;
  return sub_219101DB0((uint64_t)v5);
}

uint64_t sub_219101F94()
{
  type metadata accessor for IntentResult();
  uint64_t result = sub_219159188();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_219102040(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  unint64_t v6 = ~(unint64_t)(v5 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = ((v5 & 0xF8) + 23) & v6;
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(v4 + 64);
  }
  unint64_t v9 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v7;
  uint64_t v10 = *a2;
  *a1 = *a2;
  if ((v5 & 0x1000F8) != 0 || ((((v9 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v13 = (uint64_t *)(v10 + v7);
  }
  else
  {
    uint64_t v13 = a1;
    uint64_t v14 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    __dst = (void *)(((unint64_t)v14 + 15) & v6);
    uint64_t v16 = (unsigned __int8 *)(((unint64_t)v15 + 15) & v6);
    unsigned int v17 = v16[v8];
    swift_retain();
    swift_retain();
    if (v17 >= 3)
    {
      if (v8 <= 3) {
        uint64_t v18 = v8;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v16;
          goto LABEL_19;
        case 2:
          int v19 = *(unsigned __int16 *)v16;
          goto LABEL_19;
        case 3:
          int v19 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_19;
        case 4:
          int v19 = *(_DWORD *)v16;
LABEL_19:
          int v20 = (v19 | ((v17 - 3) << (8 * v8))) + 3;
          unsigned int v21 = v19 + 3;
          if (v8 >= 4) {
            unsigned int v17 = v21;
          }
          else {
            unsigned int v17 = v20;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v22 = v9 + 8;
    if (v17 == 2)
    {
      uint64_t v24 = *(void *)v16;
      id v25 = *(id *)v16;
      char v23 = __dst;
      void *__dst = v24;
      *((unsigned char *)__dst + v8) = 2;
    }
    else if (v17 == 1)
    {
      char v23 = __dst;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(__dst, v16, v3);
      *((unsigned char *)__dst + v8) = 1;
    }
    else if (v17)
    {
      char v23 = __dst;
      memcpy(__dst, v16, v8 + 1);
    }
    else
    {
      char v23 = __dst;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(__dst, v16, v3);
      *((unsigned char *)__dst + v8) = 0;
    }
    uint64_t v26 = (void *)(((unint64_t)v23 + v8 + 8) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)((unint64_t)&v16[v8 + 8] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    *(void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = (void *)(((unint64_t)v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = (void *)(((unint64_t)a2 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v35 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

uint64_t sub_219102334(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  unint64_t v6 = (id *)(((v3 & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v4 + 64);
  }
  unsigned int v8 = *((unsigned __int8 *)v6 + v7);
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *(unsigned __int8 *)v6;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)v6;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)v6 | (*(unsigned __int8 *)((((v3 & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5) + 2) << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)v6;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 2)
  {
  }
  else if (v8 <= 1)
  {
    (*(void (**)(void))(v4 + 8))();
  }
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_2191024F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  v9 += 15;
  int v11 = (void *)(((unint64_t)v5 + v9) & ~v10);
  int v12 = (unsigned __int8 *)(((unint64_t)v6 + v9) & ~v10);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  unsigned int v14 = v12[v13];
  swift_retain();
  swift_retain();
  if (v14 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *v12;
        goto LABEL_13;
      case 2:
        int v16 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v16 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v16 = *(_DWORD *)v12;
LABEL_13:
        int v17 = (v16 | ((v14 - 3) << (8 * v13))) + 3;
        unsigned int v18 = v16 + 3;
        if (v13 >= 4) {
          unsigned int v14 = v18;
        }
        else {
          unsigned int v14 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 2)
  {
    uint64_t v19 = *(void *)v12;
    id v20 = *(id *)v12;
    *int v11 = v19;
    *((unsigned char *)v11 + v13) = 2;
  }
  else if (v14 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(v11, v12, v7);
    *((unsigned char *)v11 + v13) = 1;
  }
  else if (v14)
  {
    memcpy(v11, v12, v13 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(v11, v12, v7);
    *((unsigned char *)v11 + v13) = 0;
  }
  unsigned int v21 = (void *)(((unint64_t)v11 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (void *)((unint64_t)&v12[v13 + 8] & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v21 = *v22;
  *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v23 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + ((v10 + 16) & ~v10) + 8;
  uint64_t v24 = (void *)(((unint64_t)a1 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  id v25 = (void *)(((unint64_t)a2 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = (uint64_t *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  uint64_t v33 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = v31;
  v33[1] = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2191027A4(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;
  swift_retain();
  swift_release();
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  uint64_t v13 = v12 | 7;
  v12 += 15;
  unsigned int v14 = (unsigned __int8 *)((v12 + v8) & ~v13);
  unint64_t v15 = (v12 + v9) & ~v13;
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(v11 + 64);
  }
  if (v14 != (unsigned __int8 *)v15)
  {
    unsigned int v17 = v14[v16];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v14;
          goto LABEL_14;
        case 2:
          int v20 = *(unsigned __int16 *)v14;
          goto LABEL_14;
        case 3:
          int v20 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_14;
        case 4:
          int v20 = *(_DWORD *)v14;
LABEL_14:
          int v21 = (v20 | (v18 << (8 * v16))) + 3;
          unsigned int v17 = v20 + 3;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
    }
    else if (v17 <= 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(v14, v10);
    }
    unsigned int v22 = *(unsigned __int8 *)(v15 + v16);
    unsigned int v23 = v22 - 3;
    if (v22 >= 3)
    {
      if (v16 <= 3) {
        uint64_t v24 = v16;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *(unsigned __int8 *)v15;
          goto LABEL_29;
        case 2:
          int v25 = *(unsigned __int16 *)v15;
          goto LABEL_29;
        case 3:
          int v25 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_29;
        case 4:
          int v25 = *(_DWORD *)v15;
LABEL_29:
          int v26 = (v25 | (v23 << (8 * v16))) + 3;
          unsigned int v22 = v25 + 3;
          if (v16 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 2)
    {
      uint64_t v27 = *(void *)v15;
      id v28 = *(id *)v15;
      *(void *)unsigned int v14 = v27;
      v14[v16] = 2;
    }
    else if (v22 == 1)
    {
      (*(void (**)(unsigned __int8 *, unint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
      v14[v16] = 1;
    }
    else if (v22)
    {
      memcpy(v14, (const void *)v15, v16 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
      v14[v16] = 0;
    }
  }
  uint64_t v29 = (void *)((((unint64_t)v14 | 7) + v16 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((v15 | 7) + v16 + 1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = ((v13 + 16) & ~v13) + (((v16 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v32 = (void *)(((unint64_t)a1 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)a2 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  uint64_t v35 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = (void *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  swift_retain();
  swift_release();
  uint64_t v38 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v39 = (void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_219102B60(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  uint64_t v10 = v8 + 15;
  uint64_t v11 = (void *)(((unint64_t)v5 + v10) & ~v9);
  uint64_t v12 = (unsigned __int8 *)(((unint64_t)v6 + v10) & ~v9);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 3;
  if (v14 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)(((unint64_t)v6 + v10) & ~v9) | (*(unsigned __int8 *)((((unint64_t)v6
                                                                                                + v10) & ~v9)
                                                                                              + 2) << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 3;
        unsigned int v14 = v17 + 3;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 2)
  {
    *uint64_t v11 = *(void *)v12;
    *((unsigned char *)v11 + v13) = 2;
  }
  else if (v14 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *))(v7 + 32))(v11, v12);
    *((unsigned char *)v11 + v13) = 1;
  }
  else if (v14)
  {
    memcpy(v11, v12, v13 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(v7 + 32))(v11, v12);
    *((unsigned char *)v11 + v13) = 0;
  }
  uint64_t v19 = (void *)((unint64_t)&v12[v13 + 8] & 0xFFFFFFFFFFFFFFF8);
  int v20 = (void *)(((unint64_t)v11 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
  *int v20 = *v19;
  *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + ((v9 + 16) & ~v9) + 8;
  unsigned int v22 = (_OWORD *)(((unint64_t)a1 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v23 = (_OWORD *)(((unint64_t)a2 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v22 = *v23;
  uint64_t v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  *(_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_219102DC8(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;
  swift_release();
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  uint64_t v13 = v12 | 7;
  v12 += 15;
  unsigned int v14 = (unsigned __int8 *)((v12 + v8) & ~v13);
  unint64_t v15 = (v12 + v9) & ~v13;
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(v11 + 64);
  }
  if (v14 != (unsigned __int8 *)v15)
  {
    unsigned int v17 = v14[v16];
    unsigned int v18 = v17 - 3;
    if (v17 >= 3)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v14;
          goto LABEL_14;
        case 2:
          int v20 = *(unsigned __int16 *)v14;
          goto LABEL_14;
        case 3:
          int v20 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_14;
        case 4:
          int v20 = *(_DWORD *)v14;
LABEL_14:
          int v21 = (v20 | (v18 << (8 * v16))) + 3;
          unsigned int v17 = v20 + 3;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 2)
    {
    }
    else if (v17 <= 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(v14, v10);
    }
    unsigned int v22 = *(unsigned __int8 *)(v15 + v16);
    unsigned int v23 = v22 - 3;
    if (v22 >= 3)
    {
      if (v16 <= 3) {
        uint64_t v24 = v16;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *(unsigned __int8 *)v15;
          goto LABEL_29;
        case 2:
          int v25 = *(unsigned __int16 *)v15;
          goto LABEL_29;
        case 3:
          int v25 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_29;
        case 4:
          int v25 = *(_DWORD *)v15;
LABEL_29:
          int v26 = (v25 | (v23 << (8 * v16))) + 3;
          unsigned int v22 = v25 + 3;
          if (v16 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 2)
    {
      *(void *)unsigned int v14 = *(void *)v15;
      v14[v16] = 2;
    }
    else if (v22 == 1)
    {
      (*(void (**)(unsigned __int8 *, unint64_t, uint64_t))(v11 + 32))(v14, v15, v10);
      v14[v16] = 1;
    }
    else if (v22)
    {
      memcpy(v14, (const void *)v15, v16 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unint64_t, uint64_t))(v11 + 32))(v14, v15, v10);
      v14[v16] = 0;
    }
  }
  uint64_t v27 = (void *)(((v15 | 7) + v16 + 1) & 0xFFFFFFFFFFFFFFF8);
  id v28 = (void *)((((unint64_t)v14 | 7) + v16 + 1) & 0xFFFFFFFFFFFFFFF8);
  *id v28 = *v27;
  *(void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = ((v13 + 16) & ~v13) + (((v16 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v30 = (_OWORD *)(((unint64_t)a1 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (uint64_t)a2 + v29 + 7;
  unint64_t v32 = (v31 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v30 = *(_OWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v33 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v33 = *(_OWORD *)v32;
  swift_release();
  *(_OWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_21910314C(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  __int16 v7 = *(_DWORD *)(v3 + 80) & 0xF8;
  unint64_t v8 = (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + ((unsigned __int16)(v7 + 23) & (unsigned __int16)~v7 & 0x1F8)
         + 31) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  uint64_t v9 = v8 & 0xFFFFFFF8;
  unsigned int v10 = a2 - 2147483646;
  if ((v8 & 0xFFFFFFF8) != 0) {
    unsigned int v10 = 2;
  }
  if (v10 >= 0x10000) {
    int v11 = 4;
  }
  else {
    int v11 = 2;
  }
  if (v10 < 0x100) {
    int v12 = 1;
  }
  else {
    int v12 = v11;
  }
  if (v12 == 4)
  {
    int v13 = *(_DWORD *)((char *)a1 + v8);
    if (!v13) {
      goto LABEL_5;
    }
  }
  else if (v12 == 2)
  {
    int v13 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!v13) {
      goto LABEL_5;
    }
  }
  else
  {
    int v13 = *((unsigned __int8 *)a1 + v8);
    if (!v13)
    {
LABEL_5:
      unint64_t v5 = *(void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v5 >= 0xFFFFFFFF) {
        LODWORD(v5) = -1;
      }
      return (v5 + 1);
    }
  }
  int v14 = v13 - 1;
  if (v9)
  {
    int v14 = 0;
    LODWORD(v9) = *a1;
  }
  return (v9 | v14) ^ 0x80000000;
}

void sub_219103280(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + ((unsigned __int16)((*(_WORD *)(v5 + 80) & 0xF8) + 23) & (unsigned __int16)~(*(_WORD *)(v5 + 80) & 0xF8) & 0x1F8)
         + 31) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    unsigned int v9 = a3 - 2147483646;
    if (v7) {
      unsigned int v9 = 2;
    }
    if (v9 >= 0x10000) {
      int v10 = 4;
    }
    else {
      int v10 = 2;
    }
    if (v9 < 0x100) {
      int v8 = 1;
    }
    else {
      int v8 = v10;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v8 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v8)
      {
        case 1:
          a1[v7] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v7] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v7] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v7) {
    int v11 = 1;
  }
  else {
    int v11 = a2 - 0x7FFFFFFF;
  }
  if (v7)
  {
    unsigned int v12 = a2 ^ 0x80000000;
    bzero(a1, v7);
    *(_DWORD *)a1 = v12;
  }
  switch(v8)
  {
    case 1:
      a1[v7] = v11;
      break;
    case 2:
      *(_WORD *)&a1[v7] = v11;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x219103430);
    case 4:
      *(_DWORD *)&a1[v7] = v11;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for _IntentResultViewDefaultEmpty()
{
  return &type metadata for _IntentResultViewDefaultEmpty;
}

ValueMetadata *type metadata accessor for _IntentResultViewDefaultFailure()
{
  return &type metadata for _IntentResultViewDefaultFailure;
}

uint64_t sub_219103478()
{
  return swift_getWitnessTable();
}

unint64_t sub_219103514()
{
  unint64_t result = qword_267C06A58;
  if (!qword_267C06A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06A60);
    sub_2191035B4();
    sub_218FFDF90(&qword_267C04470, &qword_267C04478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06A58);
  }
  return result;
}

unint64_t sub_2191035B4()
{
  unint64_t result = qword_267C06A68;
  if (!qword_267C06A68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06A70);
    sub_218FFDF90(&qword_267C043A0, &qword_267C04390);
    sub_218FFDF90(&qword_267C06A78, &qword_267C06A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06A68);
  }
  return result;
}

unint64_t sub_21910367C()
{
  unint64_t result = qword_267C06A88;
  if (!qword_267C06A88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267C069D0);
    sub_218FFDF90(&qword_267C046E8, &qword_26AD03478);
    sub_218FFDF90(&qword_267C06A90, &qword_267C06A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06A88);
  }
  return result;
}

uint64_t sub_219103740@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v54 = a6;
  uint64_t v55 = a7;
  uint64_t v51 = a1;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v49 = *(void *)(a5 + 8);
  uint64_t v11 = *(void *)(v49 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_21915B378();
  uint64_t v46 = *(void *)(v13 - 8);
  uint64_t v47 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = MEMORY[0x270FA5388](v20);
  unsigned int v23 = (char *)&v42 - v22;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v17 + 16);
  uint64_t v56 = a8;
  uint64_t v25 = a8;
  int v26 = v51;
  v24(v25, (uint64_t)v51, v16, v21);
  uint64_t v57 = a2;
  sub_21915B148();
  uint64_t v50 = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a2) = sub_21915ACD8();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v23, v16);
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v43 = v15;
  if (a2)
  {
    sub_21915ACA8();
    id v28 = (void (*)(uint64_t *, void))sub_21915B1F8();
    uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v29 = v45;
    (*(void (**)(char *))(v45 + 16))(v15);
    v28(&v58, 0);
    v27(v23, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v15, 0, 1, AssociatedTypeWitness);
    int v26 = v51;
    uint64_t v58 = a3;
    uint64_t v59 = v52;
    uint64_t v60 = v53;
    uint64_t v61 = v54;
    uint64_t v62 = v55;
    uint64_t v30 = type metadata accessor for ShelfCollection.Context();
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v56 + *(int *)(v30 + 60), v15, v47);
  }
  else
  {
    uint64_t v58 = a3;
    uint64_t v59 = v52;
    uint64_t v60 = v53;
    uint64_t v61 = v54;
    uint64_t v62 = v55;
    uint64_t v31 = v56 + *(int *)(type metadata accessor for ShelfCollection.Context() + 60);
    uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v31, 1, 1, AssociatedTypeWitness);
  }
  sub_21915B178();
  sub_21915ACA8();
  v27(v19, v16);
  char v32 = sub_21915ACE8();
  v27(v23, v16);
  uint64_t v33 = (void (*)(uint64_t, uint64_t))v27;
  if (v32)
  {
    uint64_t v34 = v57;
    sub_21915B168();
    uint64_t v35 = (void (*)(uint64_t *, void))sub_21915B1F8();
    uint64_t v36 = v48;
    uint64_t v37 = v45;
    uint64_t v38 = v43;
    (*(void (**)(char *))(v45 + 16))(v43);
    v35(&v58, 0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(v34, a3);
    v33((uint64_t)v51, v16);
    v33((uint64_t)v23, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
    uint64_t v58 = a3;
    uint64_t v59 = v52;
    uint64_t v60 = v53;
    uint64_t v61 = v54;
    uint64_t v62 = v55;
    uint64_t v39 = type metadata accessor for ShelfCollection.Context();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v46 + 32))(v56 + *(int *)(v39 + 64), v38, v47);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(v57, a3);
    v27(v26, v16);
    uint64_t v58 = a3;
    uint64_t v59 = v52;
    uint64_t v60 = v53;
    uint64_t v61 = v54;
    uint64_t v62 = v55;
    uint64_t v41 = type metadata accessor for ShelfCollection.Context();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 56))(v56 + *(int *)(v41 + 64), 1, 1);
  }
}

uint64_t ShelfCollection.Context.shelfOffset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t ShelfCollection.Context.previousShelf.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 60);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_21915B378();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t ShelfCollection.Context.nextShelf.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_21915B378();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t ShelfCollection.init(_:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = *(void *)(a6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a7, a1, a6);
  uint64_t v13 = (int *)type metadata accessor for ShelfCollection();
  uint64_t v14 = a7 + v13[15];
  *(void *)uint64_t v14 = a2;
  *(unsigned char *)(v14 + 8) = a3 & 1;
  unint64_t v15 = (void *)(a7 + v13[16]);
  *unint64_t v15 = a4;
  v15[1] = a5;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, a6);
  *(void *)(a7 + v13[17]) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t type metadata accessor for ShelfCollection()
{
  return swift_getGenericMetadata();
}

uint64_t ShelfCollection.init<A>(_:spacing:shelfContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  v25[0] = a7;
  uint64_t v29 = a9;
  uint64_t v30 = a2;
  uint64_t v27 = a1;
  uint64_t v16 = *(void *)(a6 - 8);
  int v28 = a3 & 1;
  double v17 = MEMORY[0x270FA5388](a1);
  uint64_t v26 = (uint64_t)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v16 + 16))(v17);
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a6;
  v19[3] = a7;
  v19[4] = a8;
  v19[5] = a10;
  v25[1] = a11;
  v19[6] = a11;
  v19[7] = a4;
  v19[8] = a5;
  uint64_t v20 = type metadata accessor for IndexedRandomAccessCollection();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v31 = v20;
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t v33 = v25[0];
  uint64_t v34 = WitnessTable;
  uint64_t v35 = AssociatedConformanceWitness;
  sub_2191591E8();
  swift_getWitnessTable();
  ShelfCollection.init(_:spacing:content:)(v26, v30, v28, (uint64_t)sub_2191047DC, (uint64_t)v19, a6, v29);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v27, a6);
}

uint64_t sub_21910431C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v51 = a8;
  uint64_t v45 = a7;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v39 = a1;
  uint64_t v50 = a9;
  uint64_t v44 = *(void *)(a4 - 8);
  uint64_t v47 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexedRandomAccessCollection();
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v36 - v14;
  v36[2] = (char *)v36 - v14;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v42 = WitnessTable;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v13;
  uint64_t v59 = AssociatedTypeWitness;
  uint64_t v60 = a5;
  uint64_t v61 = WitnessTable;
  uint64_t v62 = AssociatedConformanceWitness;
  uint64_t v18 = sub_2191591E8();
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v37 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v38 = (uint64_t)v36 - v21;
  uint64_t v22 = a6;
  uint64_t v23 = v39;
  RandomAccessCollection.indexed.getter(a4, (uint64_t)v15);
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v24 = v45;
  uint64_t v54 = a6;
  uint64_t v55 = v45;
  uint64_t v25 = v51;
  uint64_t v56 = v51;
  v36[1] = swift_getKeyPath();
  uint64_t v26 = v44;
  uint64_t v27 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v40, v23, a4);
  unint64_t v28 = (*(unsigned __int8 *)(v26 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = a4;
  *((void *)v29 + 3) = a5;
  *((void *)v29 + 4) = v22;
  *((void *)v29 + 5) = v24;
  uint64_t v30 = v48;
  *((void *)v29 + 6) = v25;
  *((void *)v29 + 7) = v30;
  *((void *)v29 + 8) = v49;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v29[v28], v27, a4);
  uint64_t v31 = (void *)swift_allocObject();
  void v31[2] = a4;
  v31[3] = a5;
  v31[4] = v22;
  v31[5] = v24;
  v31[6] = v51;
  v31[7] = sub_2191076F0;
  v31[8] = v29;
  swift_retain();
  uint64_t v32 = (uint64_t)v37;
  sub_2191591C8();
  uint64_t v57 = v24;
  swift_getWitnessTable();
  uint64_t v33 = v38;
  sub_218FFDE04(v32, v18, v38);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v34(v32, v18);
  sub_218FFDE04(v33, v18, v50);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v18);
}

uint64_t sub_2191047A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2191047DC(uint64_t a1)
{
  return sub_219107774(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_21910431C);
}

uint64_t sub_2191047F4()
{
  return sub_21915B498();
}

uint64_t sub_219104860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v52 = a5;
  uint64_t v53 = a2;
  uint64_t v54 = a4;
  uint64_t v55 = a3;
  uint64_t v57 = a9;
  uint64_t v14 = *(void *)(a6 - 8);
  uint64_t v56 = a10;
  uint64_t v50 = v14;
  uint64_t v51 = a1;
  MEMORY[0x270FA5388](a1);
  uint64_t v49 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v48 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v46 = (char *)&v42 - v17;
  uint64_t v18 = a8;
  uint64_t v44 = a8;
  uint64_t v19 = type metadata accessor for IndexedRandomAccessCollection();
  uint64_t v43 = a11;
  swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v19;
  uint64_t v59 = v20;
  uint64_t v42 = a7;
  uint64_t v60 = a7;
  uint64_t v61 = WitnessTable;
  uint64_t v62 = AssociatedConformanceWitness;
  uint64_t v23 = sub_2191591E8();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v58 = a6;
  uint64_t v59 = v23;
  uint64_t v60 = v18;
  uint64_t v61 = v24;
  uint64_t v62 = a11;
  uint64_t v45 = type metadata accessor for ShelfCollection.Context();
  uint64_t v25 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v27 = (char *)&v42 - v26;
  uint64_t v28 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v42 - v34;
  uint64_t v36 = v46;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v47 + 16))(v46, v51, v48, v33);
  uint64_t v37 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v52, a6);
  uint64_t v38 = swift_checkMetadataState();
  sub_219103740(v36, v37, a6, v38, v44, v24, v43, (uint64_t)v27);
  v55(v53, v27);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v45);
  uint64_t v39 = v42;
  sub_218FFDE04((uint64_t)v31, v42, (uint64_t)v35);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v28 + 8);
  v40(v31, v39);
  sub_218FFDE04((uint64_t)v35, v39, v57);
  return ((uint64_t (*)(char *, uint64_t))v40)(v35, v39);
}

uint64_t ShelfCollection.onScroll(perform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, v4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = *(int *)(a3 + 68);
  uint64_t v11 = *(void **)(a4 + v10);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2190127E4(0, v11[2] + 1, 1, v11);
    uint64_t v11 = (void *)result;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t result = (uint64_t)sub_2190127E4((void *)(v13 > 1), v14 + 1, 1, v11);
    uint64_t v11 = (void *)result;
  }
  _OWORD v11[2] = v14 + 1;
  uint64_t v15 = &v11[2 * v14];
  v15[4] = sub_219104E08;
  v15[5] = v9;
  *(void *)(a4 + v10) = v11;
  return result;
}

uint64_t sub_219104DD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219104E08(uint64_t a1)
{
  return sub_21900BACC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t ShelfCollection.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  size_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v7;
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v33 = *(void *)(v8 + 40);
  uint64_t v34 = v9;
  uint64_t v32 = v4;
  uint64_t v10 = type metadata accessor for ShelfPage();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - v15;
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v30 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, v2, v4, v18);
  uint64_t v21 = *(int *)(a1 + 60);
  uint64_t v22 = *(int *)(a1 + 64);
  uint64_t v31 = v2;
  uint64_t v23 = v2 + v21;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v5) = *(unsigned char *)(v23 + 8);
  uint64_t v25 = v2 + v22;
  uint64_t v26 = *(void *)(v2 + v22);
  uint64_t v27 = *(void *)(v25 + 8);
  swift_retain();
  ShelfPage.init(_:spacing:configuration:content:)((uint64_t)v30, v24, v5, 1, v26, v27, v32, (uint64_t)v13);
  sub_21900B938(*(void *)(v31 + *(int *)(a1 + 68)), v10, (uint64_t)v16);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v11 + 8);
  v28(v13, v10);
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v16, v10, (uint64_t)v20);
  v28(v16, v10);
  sub_218FFDE04((uint64_t)v20, v10, v35);
  return ((uint64_t (*)(char *, uint64_t))v28)(v20, v10);
}

uint64_t sub_2191050B8()
{
  uint64_t v0 = sub_219157F08();
  __swift_allocate_value_buffer(v0, qword_267C06AA0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267C06AA0);
  if (qword_267C03510 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_267C03700);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static CoordinateSpace.shelfCollectionScrollView.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_267C03568 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_219157F08();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_267C06AA0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

double EnvironmentValues.shelfCollectionSize.getter()
{
  type metadata accessor for ShelfContainerEnviromentValues();
  sub_219105360();
  uint64_t v0 = sub_219158258();
  if (!v0) {
    return 0.0;
  }
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_2191577A8();
  swift_release();
  double v2 = *(double *)(v1 + 16);
  swift_release();
  return v2;
}

uint64_t View.shelfCollectionSize(_:)()
{
  return swift_release();
}

unint64_t sub_219105360()
{
  unint64_t result = qword_267C03770;
  if (!qword_267C03770)
  {
    type metadata accessor for ShelfContainerEnviromentValues();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C03770);
  }
  return result;
}

uint64_t sub_2191053C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219105414()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2191054C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
    *(void *)unint64_t v10 = v12;
    unint64_t v13 = (void *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21910560C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21910568C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  uint64_t v12 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_219105750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  uint64_t v12 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_219105828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = (_OWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (_OWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2191058D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  uint64_t v12 = (_OWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 += 23;
  unint64_t v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v12 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v13 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21910599C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x219105AF0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_219105B04(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 23] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              double v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x219105CF8);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_219105D20()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_21915B378();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_219105E3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(v8 + 64);
  }
  else {
    size_t v12 = *(void *)(v8 + 64) + 1;
  }
  int v13 = *(_DWORD *)(v5 + 80) | v9;
  uint64_t v14 = (*(unsigned char *)(v5 + 80) | v9);
  int v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v12 + v10 + ((v6 + v10) & ~v10)) & ~v10) + v12 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = v18 + ((v14 + 16) & ~v14);
    swift_retain();
  }
  else
  {
    uint64_t v20 = v7;
    uint64_t v21 = a1;
    uint64_t v22 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(v21, a2, AssociatedTypeWitness);
    uint64_t v27 = v21;
    unint64_t v23 = (unint64_t)v21 + v11;
    unint64_t v24 = (unint64_t)a2 + v11;
    uint64_t v26 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v26(v24 & ~v10, 1, v20))
    {
      memcpy((void *)(v23 & v22), (const void *)(v24 & v22), v12);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v23 & v22, v24 & v22, v20);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v8 + 56))(v23 & v22, 0, 1, v20);
    }
    if (v26(((v24 | v10) + v12) & v22, 1, v20))
    {
      memcpy((void *)(((v23 | v10) + v12) & v22), (const void *)(((v24 | v10) + v12) & v22), v12);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((v23 | v10) + v12) & v22, ((v24 | v10) + v12) & v22, v20);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v8 + 56))(((v23 | v10) + v12) & v22, 0, 1, v20);
    }
    return v27;
  }
  return (uint64_t *)v19;
}

uint64_t sub_219106118(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v4 + v7;
  uint64_t v9 = ~v7;
  uint64_t v10 = (v4 + v7) & ~v7;
  uint64_t v16 = v6;
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v11(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v10, v5);
  }
  uint64_t v12 = (v8 | v7) + *(void *)(v16 + 64);
  if (!*(_DWORD *)(v16 + 84)) {
    ++v12;
  }
  uint64_t v13 = v12 & v9;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12 & v9, 1, v5);
  if (!result)
  {
    int v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v13, v5);
  }
  return result;
}

uint64_t sub_2191062E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9 + a1;
  uint64_t v11 = v6 + v9 + a2;
  uint64_t v19 = ~v9;
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v20(v11 & ~v9, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = *(void *)(v8 + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy((void *)(v10 & ~v9), (const void *)(v11 & ~v9), v14);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 & ~v9, v11 & ~v9, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
  }
  if (v12) {
    size_t v15 = v13;
  }
  else {
    size_t v15 = v13 + 1;
  }
  uint64_t v16 = (void *)(((v10 | v9) + v15) & v19);
  int v17 = (const void *)(((v11 | v9) + v15) & v19);
  if (v20((uint64_t)v17, 1, v7))
  {
    memcpy(v16, v17, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v16, v17, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_219106534(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v6 + v9 + a1;
  uint64_t v25 = ~v9;
  uint64_t v26 = a1;
  uint64_t v12 = v10 + a2;
  size_t v13 = (const void *)((v10 + a2) & ~v9);
  size_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v14(v11 & ~v9, 1, v7);
  int v15 = v14((uint64_t)v13, 1, v7);
  if (a1)
  {
    if (!v15)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 16))(v11 & ~v9, v13, v7);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v11 & ~v9, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 24))(v11 & ~v9, v13, v7);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11 & ~v9, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy((void *)(v11 & ~v9), v13, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    size_t v19 = *(void *)(v8 + 64);
  }
  else {
    size_t v19 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v20 = (void *)(((v11 | v9) + v19) & v25);
  uint64_t v21 = (const void *)(((v12 | v9) + v19) & v25);
  int v22 = v14((uint64_t)v20, 1, v7);
  int v23 = v14((uint64_t)v21, 1, v7);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v20, v21, v7);
      return v26;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v20, v7);
    goto LABEL_20;
  }
  if (v23)
  {
LABEL_20:
    memcpy(v20, v21, v19);
    return v26;
  }
  (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v20, v21, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
  return v26;
}

uint64_t sub_21910684C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9 + a1;
  uint64_t v11 = v6 + v9 + a2;
  uint64_t v19 = ~v9;
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v20(v11 & ~v9, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = *(void *)(v8 + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy((void *)(v10 & ~v9), (const void *)(v11 & ~v9), v14);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10 & ~v9, v11 & ~v9, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
  }
  if (v12) {
    size_t v15 = v13;
  }
  else {
    size_t v15 = v13 + 1;
  }
  int v16 = (void *)(((v10 | v9) + v15) & v19);
  size_t v17 = (const void *)(((v11 | v9) + v15) & v19);
  if (v20((uint64_t)v17, 1, v7))
  {
    memcpy(v16, v17, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v16, v17, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_219106AA0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v6 + v9 + a1;
  uint64_t v25 = ~v9;
  uint64_t v26 = a1;
  uint64_t v12 = v10 + a2;
  size_t v13 = (const void *)((v10 + a2) & ~v9);
  size_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v14(v11 & ~v9, 1, v7);
  int v15 = v14((uint64_t)v13, 1, v7);
  if (a1)
  {
    if (!v15)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 32))(v11 & ~v9, v13, v7);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v11 & ~v9, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 40))(v11 & ~v9, v13, v7);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11 & ~v9, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy((void *)(v11 & ~v9), v13, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    size_t v19 = *(void *)(v8 + 64);
  }
  else {
    size_t v19 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v20 = (void *)(((v11 | v9) + v19) & v25);
  uint64_t v21 = (const void *)(((v12 | v9) + v19) & v25);
  int v22 = v14((uint64_t)v20, 1, v7);
  int v23 = v14((uint64_t)v21, 1, v7);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v20, v21, v7);
      return v26;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v20, v7);
    goto LABEL_20;
  }
  if (v23)
  {
LABEL_20:
    memcpy(v20, v21, v19);
    return v26;
  }
  (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v20, v21, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
  return v26;
}

uint64_t sub_219106DB8(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(v5 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_30;
  }
  uint64_t v15 = ((v13 + v12 + (v14 & ~v12)) & ~v12) + v13;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_30:
      if (v11)
      {
        if (v6 >= v10)
        {
          unint64_t v24 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
          return v24(a1, v6, AssociatedTypeWitness);
        }
        else
        {
          unsigned int v22 = (*(uint64_t (**)(unint64_t))(v8 + 48))(((unint64_t)a1 + v14) & ~v12);
          if (v22 >= 2) {
            return v22 - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_30;
  }
LABEL_20:
  int v19 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v19 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v20 = v15;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v11 + (v21 | v19) + 1;
}

void sub_219107094(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  int v9 = 0;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  int v12 = *(_DWORD *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v7 + 64) + v15;
  size_t v17 = *(void *)(v10 + 64);
  if (v12) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  size_t v19 = ((v18 + v15 + (v16 & ~v15)) & ~v15) + v18;
  if (a3 <= v14) {
    goto LABEL_17;
  }
  if (v19 <= 3)
  {
    unsigned int v20 = ((a3 - v14 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
    if (HIWORD(v20))
    {
      int v9 = 4;
      if (v14 >= a2) {
        goto LABEL_25;
      }
      goto LABEL_18;
    }
    if (v20 >= 0x100) {
      int v9 = 2;
    }
    else {
      int v9 = v20 > 1;
    }
LABEL_17:
    if (v14 >= a2) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }
  int v9 = 1;
  if (v14 >= a2)
  {
LABEL_25:
    switch(v9)
    {
      case 1:
        a1[v19] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 2:
        *(_WORD *)&a1[v19] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v19] = 0;
        goto LABEL_29;
      default:
LABEL_29:
        if (a2)
        {
LABEL_30:
          if (v8 >= v13)
          {
            uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
            v28(a1, a2, v8, AssociatedTypeWitness);
          }
          else
          {
            unint64_t v24 = (unsigned char *)((unint64_t)&a1[v16] & ~v15);
            if (v13 >= a2)
            {
              uint64_t v29 = *(void (**)(unsigned char *, void))(v11 + 56);
              v29(v24, (a2 + 1));
            }
            else
            {
              if (v18 <= 3) {
                int v25 = ~(-1 << (8 * v18));
              }
              else {
                int v25 = -1;
              }
              if (v18)
              {
                int v26 = v25 & (~v13 + a2);
                if (v18 <= 3) {
                  int v27 = v18;
                }
                else {
                  int v27 = 4;
                }
                bzero(v24, v18);
                switch(v27)
                {
                  case 2:
                    *(_WORD *)unint64_t v24 = v26;
                    break;
                  case 3:
                    *(_WORD *)unint64_t v24 = v26;
                    v24[2] = BYTE2(v26);
                    break;
                  case 4:
                    *(_DWORD *)unint64_t v24 = v26;
                    break;
                  default:
                    *unint64_t v24 = v26;
                    break;
                }
              }
            }
          }
        }
        break;
    }
    return;
  }
LABEL_18:
  unsigned int v21 = ~v14 + a2;
  if (v19 < 4)
  {
    int v22 = (v21 >> (8 * v19)) + 1;
    if (v19)
    {
      int v23 = v21 & ~(-1 << (8 * v19));
      bzero(a1, ((v18 + v15 + (v16 & ~v15)) & ~v15) + v18);
      if (v19 == 3)
      {
        *(_WORD *)a1 = v23;
        a1[2] = BYTE2(v23);
      }
      else if (v19 == 2)
      {
        *(_WORD *)a1 = v23;
      }
      else
      {
        *a1 = v23;
      }
    }
  }
  else
  {
    bzero(a1, ((v18 + v15 + (v16 & ~v15)) & ~v15) + v18);
    *(_DWORD *)a1 = v21;
    int v22 = 1;
  }
  switch(v9)
  {
    case 1:
      a1[v19] = v22;
      break;
    case 2:
      *(_WORD *)&a1[v19] = v22;
      break;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x2191074A0);
    case 4:
      *(_DWORD *)&a1[v19] = v22;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ShelfCollection.Context()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2191074F0()
{
  type metadata accessor for ShelfPage();
  return swift_getWitnessTable();
}

uint64_t sub_21910753C()
{
  return swift_getWitnessTable();
}

unint64_t sub_2191075AC()
{
  unint64_t result = qword_267C03768;
  if (!qword_267C03768)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C03760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C03768);
  }
  return result;
}

uint64_t sub_21910760C()
{
  return 40;
}

__n128 sub_219107618(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_21910762C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2191076F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_219104860(a1, a2, *(void (**)(uint64_t, char *))(v3 + 56), *(void *)(v3 + 64), v3+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v3 + 16) - 8) + 80)), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3, *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_21910775C(uint64_t a1)
{
  return sub_219107774(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_21900E940);
}

uint64_t sub_219107774(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[7], v2[8], v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_219107794()
{
  sub_21915A988();
  sub_21915B378();
  uint64_t result = sub_219159188();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21910784C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  unint64_t v6 = ~(unint64_t)(v5 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = ((v5 & 0xF8) + 23) & v6;
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(v4 + 64);
  }
  uint64_t v9 = v7 + v8 + 1;
  uint64_t v10 = *a2;
  *a1 = *a2;
  if ((v5 & 0x1000F8) != 0
    || ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    unsigned int v13 = (uint64_t *)(v10 + v7);
  }
  else
  {
    unsigned int v13 = a1;
    unsigned int v14 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v14 = *v15;
    uint64_t v30 = v3;
    __dst = (void *)(((unint64_t)v14 + 15) & v6);
    uint64_t v16 = (id *)(((unint64_t)v15 + 15) & v6);
    unsigned int v17 = *((unsigned __int8 *)v16 + v8);
    swift_retain();
    swift_retain();
    if (v17 > 1)
    {
      memcpy(__dst, v16, v8 + 1);
    }
    else if (v17 == 1)
    {
      id v18 = *v16;
      id v19 = *v16;
      void *__dst = v18;
      *((unsigned char *)__dst + v8) = 1;
    }
    else
    {
      (*(void (**)(void *, id *, uint64_t))(v4 + 16))(__dst, v16, v30);
      *((unsigned char *)__dst + v8) = 0;
    }
    unsigned int v20 = (void *)(((unint64_t)v13 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v21 = (void *)(((unint64_t)a2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = v21[1];
    *unsigned int v20 = *v21;
    v20[1] = v22;
    int v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = v24[1];
    *int v23 = *v24;
    v23[1] = v25;
    int v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    int v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = v27[1];
    *int v26 = *v27;
    v26[1] = v28;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

uint64_t sub_219107A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  unint64_t v6 = (id *)(((v3 & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v4 + 64);
  }
  unsigned int v8 = *((unsigned __int8 *)v6 + v7);
  if (v8 <= 1)
  {
    if (v8 == 1) {

    }
    else {
      (*(void (**)(void))(v4 + 8))();
    }
  }
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_219107B78(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v3 = *v4;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  v7 += 15;
  uint64_t v9 = (void *)(((unint64_t)v3 + v7) & ~v8);
  uint64_t v10 = (id *)(((unint64_t)v4 + v7) & ~v8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(v6 + 64);
  }
  unsigned int v12 = *((unsigned __int8 *)v10 + v11);
  swift_retain();
  swift_retain();
  BOOL v13 = v12 == 1;
  if (v12 > 1)
  {
    memcpy(v9, v10, v11 + 1);
    uint64_t v15 = a1;
    unsigned int v14 = a2;
  }
  else
  {
    uint64_t v15 = a1;
    unsigned int v14 = a2;
    if (v13)
    {
      id v16 = *v10;
      id v17 = *v10;
      *uint64_t v9 = v16;
      *((unsigned char *)v9 + v11) = 1;
    }
    else
    {
      (*(void (**)(void *, id *, uint64_t))(v6 + 16))(v9, v10, v5);
      *((unsigned char *)v9 + v11) = 0;
    }
  }
  uint64_t v18 = ((v8 + 16) & ~v8) + v11 + 1;
  id v19 = (void *)(((unint64_t)v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v20 = (void *)(((unint64_t)v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = v20[1];
  *id v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  return v15;
}

void *sub_219107D44(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v12 = v11 | 7;
  v11 += 15;
  BOOL v13 = (id *)(((unint64_t)v7 + v11) & ~v12);
  unsigned int v14 = (unsigned __int8 *)((v11 + v8) & ~v12);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(v10 + 64);
  }
  unsigned int v16 = *((unsigned __int8 *)v13 + v15);
  unsigned int v17 = v14[v15];
  if (v16 > 1)
  {
    if (v17 <= 1)
    {
      if (v17 != 1)
      {
LABEL_29:
        (*(void (**)(id *, unsigned __int8 *, uint64_t))(v10 + 16))(v13, v14, v9);
        *((unsigned char *)v13 + v15) = 0;
        goto LABEL_30;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v13, v14, v15 + 1);
    goto LABEL_30;
  }
  if (v17 > 1)
  {
    if (v16 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v10 + 8))(v13, v9);
    }
    goto LABEL_15;
  }
  if (v13 != (id *)v14)
  {
    if (v16 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v10 + 8))(v13, v9);
    }
    unsigned int v20 = v14[v15];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *v14;
          goto LABEL_26;
        case 2:
          int v23 = *(unsigned __int16 *)v14;
          goto LABEL_26;
        case 3:
          int v23 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_26;
        case 4:
          int v23 = *(_DWORD *)v14;
LABEL_26:
          int v24 = (v23 | (v21 << (8 * v15))) + 2;
          unsigned int v20 = v23 + 2;
          if (v15 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v20 != 1) {
      goto LABEL_29;
    }
LABEL_11:
    uint64_t v18 = *(void **)v14;
    id v19 = *(id *)v14;
    *BOOL v13 = v18;
    *((unsigned char *)v13 + v15) = 1;
  }
LABEL_30:
  uint64_t v25 = ((v12 + 16) & ~v12) + v15 + 1;
  int v26 = (void *)(((unint64_t)a1 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)a2 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = v27[1];
  *int v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  uint64_t v29 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  uint64_t v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_219108044(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  v8 += 15;
  uint64_t v10 = (void *)(((unint64_t)v5 + v8) & ~v9);
  uint64_t v11 = (void *)(((unint64_t)v6 + v8) & ~v9);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 > 1)
  {
    memcpy(v10, v11, v12 + 1);
  }
  else if (v13 == 1)
  {
    *uint64_t v10 = *v11;
    *((unsigned char *)v10 + v12) = 1;
  }
  else
  {
    (*(void (**)(void *))(v7 + 32))(v10);
    *((unsigned char *)v10 + v12) = 0;
  }
  uint64_t v14 = ((v9 + 16) & ~v9) + v12 + 1;
  uint64_t v15 = (_OWORD *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v16 = (_OWORD *)(((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  unsigned int v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v17 = *v18;
  *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_2191081B8(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;
  swift_release();
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  uint64_t v13 = v12 | 7;
  v12 += 15;
  uint64_t v14 = (id *)((v12 + v8) & ~v13);
  uint64_t v15 = (unsigned __int8 *)((v12 + v9) & ~v13);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = *(void *)(v11 + 64);
  }
  unsigned int v17 = *((unsigned __int8 *)v14 + v16);
  unsigned int v18 = v15[v16];
  if (v17 > 1)
  {
    if (v18 <= 1)
    {
      if (v18 != 1)
      {
LABEL_29:
        (*(void (**)(id *, unsigned __int8 *, uint64_t))(v11 + 32))(v14, v15, v10);
        *((unsigned char *)v14 + v16) = 0;
        goto LABEL_30;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v14, v15, v16 + 1);
    goto LABEL_30;
  }
  if (v18 > 1)
  {
    if (v17 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v11 + 8))(v14, v10);
    }
    goto LABEL_15;
  }
  if (v14 != (id *)v15)
  {
    if (v17 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v11 + 8))(v14, v10);
    }
    unsigned int v19 = v15[v16];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v21 = v16;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v15;
          goto LABEL_26;
        case 2:
          int v22 = *(unsigned __int16 *)v15;
          goto LABEL_26;
        case 3:
          int v22 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_26;
        case 4:
          int v22 = *(_DWORD *)v15;
LABEL_26:
          int v23 = (v22 | (v20 << (8 * v16))) + 2;
          unsigned int v19 = v22 + 2;
          if (v16 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 != 1) {
      goto LABEL_29;
    }
LABEL_11:
    *uint64_t v14 = *(id *)v15;
    *((unsigned char *)v14 + v16) = 1;
  }
LABEL_30:
  uint64_t v24 = ((v13 + 16) & ~v13) + v16 + 1;
  uint64_t v25 = (_OWORD *)(((unint64_t)a1 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (uint64_t)a2 + v24 + 7;
  unint64_t v27 = (v26 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v25 = *(_OWORD *)(v26 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v28 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v28 = *(_OWORD *)v27;
  swift_release();
  *(_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_219108480(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  __int16 v7 = *(_DWORD *)(v3 + 80) & 0xF8;
  unint64_t v8 = ((((((v4 + ((unsigned __int16)(v7 + 23) & (unsigned __int16)~v7 & 0x1F8) + 8) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  uint64_t v9 = v8 & 0xFFFFFFF8;
  unsigned int v10 = a2 - 2147483646;
  if ((v8 & 0xFFFFFFF8) != 0) {
    unsigned int v10 = 2;
  }
  if (v10 >= 0x10000) {
    int v11 = 4;
  }
  else {
    int v11 = 2;
  }
  if (v10 < 0x100) {
    int v12 = 1;
  }
  else {
    int v12 = v11;
  }
  if (v12 == 4)
  {
    int v13 = *(_DWORD *)((char *)a1 + v8);
    if (!v13) {
      goto LABEL_5;
    }
  }
  else if (v12 == 2)
  {
    int v13 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!v13) {
      goto LABEL_5;
    }
  }
  else
  {
    int v13 = *((unsigned __int8 *)a1 + v8);
    if (!v13)
    {
LABEL_5:
      unint64_t v5 = *(void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v5 >= 0xFFFFFFFF) {
        LODWORD(v5) = -1;
      }
      return (v5 + 1);
    }
  }
  int v14 = v13 - 1;
  if (v9)
  {
    int v14 = 0;
    LODWORD(v9) = *a1;
  }
  return (v9 | v14) ^ 0x80000000;
}

void sub_2191085B0(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = ((((((v6
           + ((unsigned __int16)((*(_WORD *)(v5 + 80) & 0xF8) + 23) & (unsigned __int16)~(*(_WORD *)(v5 + 80) & 0xF8) & 0x1F8)
           + 8) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    unsigned int v9 = a3 - 2147483646;
    if (v7) {
      unsigned int v9 = 2;
    }
    if (v9 >= 0x10000) {
      int v10 = 4;
    }
    else {
      int v10 = 2;
    }
    if (v9 < 0x100) {
      int v8 = 1;
    }
    else {
      int v8 = v10;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v8 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v8)
      {
        case 1:
          a1[v7] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v7] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v7] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v7) {
    int v11 = 1;
  }
  else {
    int v11 = a2 - 0x7FFFFFFF;
  }
  if (v7)
  {
    unsigned int v12 = a2 ^ 0x80000000;
    bzero(a1, v7);
    *(_DWORD *)a1 = v12;
  }
  switch(v8)
  {
    case 1:
      a1[v7] = v11;
      break;
    case 2:
      *(_WORD *)&a1[v7] = v11;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x21910875CLL);
    case 4:
      *(_DWORD *)&a1[v7] = v11;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for _ResultView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21910879C()
{
  return swift_getOpaqueTypeConformance2();
}

int *sub_2191087F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_21915A988();
  sub_21915B378();
  uint64_t v15 = sub_219159188();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a8, a1, v15);
  uint64_t result = (int *)type metadata accessor for _ResultView();
  unsigned int v17 = (void *)(a8 + result[19]);
  void *v17 = a2;
  v17[1] = a3;
  unsigned int v18 = (void *)(a8 + result[20]);
  *unsigned int v18 = a4;
  v18[1] = a5;
  unsigned int v19 = (void *)(a8 + result[21]);
  *unsigned int v19 = a6;
  v19[1] = a7;
  return result;
}

uint64_t sub_21910890C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v62 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (uint64_t)&v58 - v7;
  unsigned int v9 = *(void **)(v8 + 16);
  uint64_t v66 = *(v9 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v65 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 40);
  uint64_t v59 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v58 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v64 = (uint64_t)&v58 - v15;
  uint64_t v17 = *(void *)(v16 + 32);
  uint64_t v18 = sub_2191584D8();
  uint64_t v68 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v70 = (char *)&v58 - v19;
  uint64_t v63 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v20);
  int v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v69 = (char *)&v58 - v24;
  id v67 = v9;
  uint64_t v25 = sub_21915A988();
  uint64_t v26 = sub_21915B378();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (id *)((char *)&v58 - v27);
  uint64_t v71 = v4;
  uint64_t v29 = sub_2191584D8();
  uint64_t v72 = *(void *)(v29 - 8);
  uint64_t v73 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v58 - v30;
  uint64_t v32 = sub_219159188();
  MEMORY[0x21D47FB40](v32);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v28, 1, v25) == 1)
  {
    (*(void (**)(void))(v2 + *(int *)(a1 + 76)))();
    uint64_t v33 = *(void *)(a1 + 56);
    uint64_t v34 = (uint64_t)v69;
    sub_218FFDE04((uint64_t)v22, v17, (uint64_t)v69);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v63 + 8);
    v35(v22, v17);
    sub_218FFDE04(v34, v17, (uint64_t)v22);
    uint64_t v36 = *(void *)(a1 + 64);
    uint64_t v37 = (uint64_t)v70;
    sub_219050FE4((uint64_t)v22, v17);
    v35(v22, v17);
    uint64_t v75 = v33;
    uint64_t v76 = v36;
    swift_getWitnessTable();
    uint64_t v38 = *(void *)(a1 + 48);
    sub_219050FE4(v37, v18);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v37, v18);
    v35(v69, v17);
    uint64_t v39 = v36;
    uint64_t v40 = (uint64_t)v31;
  }
  else
  {
    uint64_t v41 = (uint64_t)v70;
    uint64_t v69 = v31;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v67 = *v28;
      uint64_t v42 = (uint64_t)v58;
      (*(void (**)(void))(v2 + *(int *)(a1 + 80)))();
      uint64_t v39 = *(void *)(a1 + 64);
      uint64_t v43 = v64;
      uint64_t v44 = v12;
      sub_218FFDE04(v42, v12, v64);
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v45(v42, v44);
      sub_218FFDE04(v43, v44, v42);
      uint64_t v33 = *(void *)(a1 + 56);
      sub_218FFCBB0(v42, v17, v44);
      v45(v42, v44);
      uint64_t v77 = v33;
      uint64_t v78 = v39;
      swift_getWitnessTable();
      uint64_t v46 = *(void *)(a1 + 48);
      uint64_t v40 = (uint64_t)v69;
      sub_219050FE4(v41, v18);

      uint64_t v47 = v41;
      uint64_t v38 = v46;
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v47, v18);
      v45(v64, v44);
    }
    else
    {
      uint64_t v48 = v65;
      (*(void (**)(char *, id *, id))(v66 + 32))(v65, v28, v67);
      uint64_t v49 = a1;
      uint64_t v50 = (uint64_t)v61;
      (*(void (**)(char *))(v2 + *(int *)(a1 + 84)))(v48);
      uint64_t v51 = *(void *)(a1 + 48);
      uint64_t v52 = v60;
      uint64_t v53 = v71;
      sub_218FFDE04(v50, v71, v60);
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
      v54(v50, v53);
      sub_218FFDE04(v52, v53, v50);
      uint64_t v33 = *(void *)(v49 + 56);
      uint64_t v39 = *(void *)(v49 + 64);
      uint64_t v83 = v33;
      uint64_t v84 = v39;
      swift_getWitnessTable();
      uint64_t v40 = (uint64_t)v69;
      sub_218FFCBB0(v50, v18, v53);
      v54(v50, v53);
      uint64_t v55 = v53;
      uint64_t v38 = v51;
      v54(v52, v55);
      (*(void (**)(char *, id))(v66 + 8))(v65, v67);
    }
  }
  uint64_t v81 = v33;
  uint64_t v82 = v39;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v80 = v38;
  uint64_t v56 = v73;
  swift_getWitnessTable();
  sub_218FFDE04(v40, v56, v74);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8))(v40, v56);
}

uint64_t sub_219109168()
{
  return swift_getWitnessTable();
}

uint64_t sub_219109200@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v7 = type metadata accessor for DispatcherPerformActionViewModifier();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v35 = a3;
  uint64_t v11 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v29 - v16);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v29 - v19;
  sub_2190082A0();
  if (sub_21915B328())
  {
    uint64_t v30 = v14;
    uint64_t v21 = v10;
    sub_219159D68();
    sub_21915B378();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v31 = v8;
    uint64_t v23 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v24 = v32;
    sub_219159AF8();
    *(uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v17 + v23) = v24;
    uint64_t v10 = v21;
    uint64_t v14 = v30;
    uint64_t v8 = v31;
  }
  else
  {
    uint64_t v25 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
    uint64_t v26 = v35;
    *((void *)v25 + 2) = a2;
    *((void *)v25 + 3) = v26;
    uint64_t v27 = v32;
    *((void *)v25 + 4) = v34;
    *((void *)v25 + 5) = v27;
    void *v17 = sub_21910D84C;
    v17[1] = v25;
  }
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t))(v12 + 32))(v20, v17, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v20, v11);
  sub_219109BDC((uint64_t)v14, (uint64_t)v10);
  swift_retain();
  MEMORY[0x21D47F800](v10, a2, v7, v34);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

uint64_t EnvironmentValues.performAction.getter()
{
  sub_2190F04CC();
  return sub_219158238();
}

uint64_t View.actionDispatcher<A>(_:with:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)@<X0>(uint64_t a1@<X8>)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v41 = a3;
  uint64_t v42 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a6;
  uint64_t v34 = a1;
  uint64_t v9 = type metadata accessor for DispatcherPerformActionViewModifier();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (uint64_t)&v34 - v10;
  uint64_t v11 = sub_219159D68();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v43 = a4;
  uint64_t v16 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v35 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v34 - v20);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v34 - v23;
  sub_2190082A0();
  if (sub_21915B328())
  {
    sub_21915B378();
    uint64_t v25 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t, uint64_t))(v12 + 16))(v21, v34, v11);
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    *(uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v21 + v25) = v37;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v34, v11);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v34 = v7;
    unint64_t v27 = (v13 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = (char *)swift_allocObject();
    uint64_t v29 = v43;
    *((void *)v28 + 2) = v41;
    *((void *)v28 + 3) = v29;
    *((void *)v28 + 4) = v42;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v28[v26], v15, v11);
    *(void *)&v28[v27] = v37;
    *uint64_t v21 = sub_219109B18;
    v21[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v28;
  }
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t))(v17 + 32))(v24, v21, v16);
  uint64_t v30 = (uint64_t)v35;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v35, v24, v16);
  uint64_t v31 = v36;
  sub_219109BDC(v30, v36);
  swift_retain();
  uint64_t v32 = v40;
  MEMORY[0x21D47F800](v31, v41, v40, v42);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v31, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
}

uint64_t type metadata accessor for DispatcherPerformActionViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219109980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_219159D68();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  *(void *)(a3 + v8) = a2;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(a3, 0, 1, TupleTypeMetadata2);
  return swift_retain();
}

uint64_t sub_219109A70()
{
  uint64_t v1 = sub_219159D68();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219109B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_219159D68() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_219109980(v1 + v4, v5, a1);
}

uint64_t sub_219109BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a2 + *(int *)(type metadata accessor for DispatcherPerformActionViewModifier() + 28);
  *(void *)uint64_t v4 = swift_getKeyPath();
  *(unsigned char *)(v4 + 40) = 0;
  uint64_t v5 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  return v6(a2, a1, v5);
}

uint64_t View.actionDispatcher<A>(from:)@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_219159D68();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - v12;
  sub_219159B18();
  View.actionDispatcher<A>(_:with:)((uint64_t)v13, a1, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_219109D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_219159D68();
  char v4 = sub_219159B38();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = TupleTypeMetadata2;
  if (v4)
  {
    uint64_t v7 = *(int *)(TupleTypeMetadata2 + 48);
    sub_219159B18();
    *(void *)(a2 + v7) = a1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
    return swift_retain();
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
    return v9(a2, 1, 1, TupleTypeMetadata2);
  }
}

uint64_t View.actionDispatcher<A>(with:implementations:)@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X8>)@<X0>, void (*a2)(double)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_219159D68();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v18 - v15;
  a2(v14);
  View.actionDispatcher<A>(_:with:)((uint64_t)v16, a1, a3, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t PerformAction.callAsFunction(_:withMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PerformAction._objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerformAction.callAsFunction(_:withMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_21910A024()
{
  return swift_getWitnessTable();
}

uint64_t sub_21910A0B8()
{
  v2[4] = MEMORY[0x263F8EE70] + 64;
  sub_219159D68();
  uint64_t result = sub_21915B378();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_21910A174(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_219159D68();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_21915B378();
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      sub_21915B378();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(uint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(uint64_t *)((char *)a2
                                                                                + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21910A360(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_219159D68();
    uint64_t v3 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    sub_21915B378();
    swift_getTupleTypeMetadata2();
  }
  return swift_release();
}

void *sub_21910A474(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_219159D68();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v6 = sub_21915B378();
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    sub_21915B378();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(void *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(void *)((char *)a2
                                                                            + *(int *)(TupleTypeMetadata2 + 48));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_21910A610(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(void *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_219159D68();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        uint64_t v7 = sub_21915B378();
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      sub_21915B378();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(void *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(void *)((char *)a2
                                                                              + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_21910A7E4(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_219159D68();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_21915B378();
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    sub_21915B378();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(void *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_21910A984(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_219159D68();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_21915B378();
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      sub_21915B378();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(void *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for PerformActionKey()
{
  return &type metadata for PerformActionKey;
}

uint64_t sub_21910AB88()
{
  uint64_t result = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21910AC20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_219159D68();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_21915B378();
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      sub_21915B378();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(uint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(uint64_t *)((char *)a2
                                                                                + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 28);
    double v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (*((unsigned char *)a2 + v13 + 40))
    {
      uint64_t v16 = *((void *)v15 + 3);
      if (v16)
      {
        uint64_t v17 = *((void *)v15 + 4);
        *((void *)v14 + 3) = v16;
        *((void *)v14 + 4) = v17;
        (**(void (***)(char *))(v16 - 8))(v14);
      }
      else
      {
        long long v18 = *((_OWORD *)v15 + 1);
        *(_OWORD *)double v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v18;
        *((void *)v14 + 4) = *((void *)v15 + 4);
      }
      v14[40] = 1;
    }
    else
    {
      *(void *)double v14 = *(void *)v15;
      v14[40] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_21910AEA4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_219159D68();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    sub_21915B378();
    swift_getTupleTypeMetadata2();
  }
  swift_release();
  uint64_t result = a1 + *(int *)(a2 + 28);
  if (*(unsigned char *)(result + 40))
  {
    if (*(void *)(result + 24))
    {
      return __swift_destroy_boxed_opaque_existential_1(result);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_21910B02C(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_219159D68();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_21915B378();
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    sub_21915B378();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(void *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(void *)((char *)a2
                                                                            + *(int *)(TupleTypeMetadata2 + 48));
    swift_retain();
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (*((unsigned char *)a2 + v11 + 40))
  {
    uint64_t v14 = *((void *)v13 + 3);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(char *))(v14 - 8))(v12);
    }
    else
    {
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
    v12[40] = 1;
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    v12[40] = 0;
    swift_retain();
  }
  return a1;
}

void *sub_21910B260(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
    (*(void (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_219159D68();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_21915B378();
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      sub_21915B378();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(void *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(void *)((char *)a2
                                                                              + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_218FFE158((uint64_t)a1 + v12, &qword_26AD012A8);
    if (v14[40])
    {
      uint64_t v15 = *((void *)v14 + 3);
      if (v15)
      {
        *((void *)v13 + 3) = v15;
        *((void *)v13 + 4) = *((void *)v14 + 4);
        (**(void (***)(char *, char *))(v15 - 8))(v13, v14);
      }
      else
      {
        long long v16 = *(_OWORD *)v14;
        long long v17 = *((_OWORD *)v14 + 1);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *(_OWORD *)uint64_t v13 = v16;
        *((_OWORD *)v13 + 1) = v17;
      }
      char v13[40] = 1;
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      char v13[40] = 0;
      swift_retain();
    }
  }
  return a1;
}

char *sub_21910B4E4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_219159D68();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_21915B378();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    sub_21915B378();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(void *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *(_OWORD *)(v12 + 25) = *(_OWORD *)(v13 + 25);
  return a1;
}

char *sub_21910B6B8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_219159D68();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = sub_21915B378();
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      sub_21915B378();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(void *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = &a2[v12];
    long long v14 = &a1[v12];
    sub_218FFE158((uint64_t)&a1[v12], &qword_26AD012A8);
    long long v15 = *((_OWORD *)v13 + 1);
    *(_OWORD *)long long v14 = *(_OWORD *)v13;
    *((_OWORD *)v14 + 1) = v15;
    *(_OWORD *)(v14 + 25) = *(_OWORD *)(v13 + 25);
  }
  return a1;
}

uint64_t sub_21910B8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21910B904);
}

uint64_t sub_21910B904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 40);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_21910B9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21910B9DC);
}

uint64_t sub_21910B9DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28) + 40) = -(char)a2;
  }
  return result;
}

double sub_21910BAA0@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_21910BAB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21910BAF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_219159F18();
  uint64_t v3 = MEMORY[0x263F50AD8];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1Tm(a1);
  return sub_219159F08();
}

uint64_t sub_21910BB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - v6;
  uint64_t v8 = sub_219159D68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - v10;
  sub_219159B18();
  sub_219159C28();
  if (sub_219159B38())
  {
    uint64_t v12 = sub_21915A198();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v7, a2, v12);
    uint64_t v13 = (unsigned int *)MEMORY[0x263F50A18];
  }
  else
  {
    uint64_t v13 = (unsigned int *)MEMORY[0x263F50A20];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v13, v4);
  sub_219159D58();
  sub_219030940(a1, (uint64_t)v18);
  uint64_t v14 = swift_allocObject();
  sub_219018288(v18, v14 + 16);
  sub_219030940(a1, (uint64_t)v18);
  uint64_t v15 = swift_allocObject();
  sub_219018288(v18, v15 + 16);
  v17[3] = sub_219159F18();
  v17[4] = MEMORY[0x263F50AD8];
  __swift_allocate_boxed_opaque_existential_1Tm(v17);
  sub_219159F08();
  sub_21915A9A8();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_21910BE34(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_2191595A8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_21915AB08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_219159888();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x263F50970], v8, v10);
  char v13 = sub_219159878();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v13)
  {
    sub_21915AA58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915D6B0;
    sub_219159598();
    sub_219159588();
    uint64_t v15 = a2[3];
    long long v16 = __swift_project_boxed_opaque_existential_1(a2, v15);
    v18[3] = v15;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v18);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(boxed_opaque_existential_1Tm, v16, v15);
    sub_219159578();
    sub_218FFE158((uint64_t)v18, qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    sub_219159528();
    sub_21915A6C8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_21910C1AC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_2191595A8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_21915AB08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21915AA58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  uint64_t v8 = a2[3];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v18 = v8;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v17);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1Tm, v9, v8);
  sub_219159578();
  sub_218FFE158((uint64_t)v17, qword_26AD03AB8);
  sub_219159588();
  swift_getErrorValue();
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  uint64_t v18 = v16;
  char v13 = __swift_allocate_boxed_opaque_existential_1Tm(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v13, v11, v12);
  sub_219159558();
  sub_218FFE158((uint64_t)v17, qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_21915A6C8();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21910C4AC()
{
  return swift_retain();
}

uint64_t sub_21910C4B4(uint64_t a1, uint64_t a2)
{
  return sub_21910BB38(a1, a2);
}

uint64_t sub_21910C4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v72 = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_219159D68();
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)v59 - v7;
  uint64_t v66 = v8;
  uint64_t v9 = sub_21915B378();
  uint64_t v64 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)v59 - v12;
  swift_getWitnessTable();
  uint64_t v14 = sub_2191585B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01398);
  uint64_t v68 = v14;
  uint64_t v15 = sub_219157F48();
  uint64_t v67 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v59 - v19;
  uint64_t v75 = v5;
  uint64_t v21 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (void *)((char *)v59 - v23);
  uint64_t v25 = sub_2191584D8();
  uint64_t v70 = *(void *)(v25 - 8);
  uint64_t v71 = v25;
  double v26 = MEMORY[0x270FA5388](v25);
  uint64_t v74 = (char *)v59 - v27;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, double))(v22 + 16))(v24, v3, v21, v26);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v59[0] = a2;
    v59[1] = v3;
    uint64_t v61 = v20;
    uint64_t v62 = *(uint64_t *)((char *)v24 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    uint64_t v28 = v64;
    (*(void (**)(char *, uint64_t *, uint64_t))(v64 + 32))(v13, v24, v9);
    uint64_t v29 = v73;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v73, v13, v9);
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v29, 1, v66);
    uint64_t v31 = v67;
    uint64_t v32 = (uint64_t)v74;
    uint64_t v33 = v9;
    uint64_t v60 = v13;
    if (v30 == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v73, v9);
      uint64_t v34 = 0;
      uint64_t v35 = v75;
    }
    else
    {
      uint64_t v43 = v65;
      uint64_t v44 = (uint64_t)v63;
      uint64_t v45 = v66;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v63, v73, v66);
      uint64_t v46 = v62;
      swift_retain();
      sub_2190FB834((uint64_t)v78);
      uint64_t v35 = v75;
      uint64_t v34 = sub_21910D154(v44, v46, (uint64_t)v78);
      uint64_t v32 = (uint64_t)v74;
      swift_release();
      uint64_t v47 = v44;
      uint64_t v28 = v64;
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v47, v45);
    }
    uint64_t v74 = (char *)v34;
    swift_getKeyPath();
    uint64_t v75 = v33;
    uint64_t v48 = swift_allocObject();
    uint64_t v49 = v28;
    *(void *)(v48 + 16) = v35;
    *(void *)(v48 + 24) = v34;
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_219158C58();
    swift_release();
    swift_release();
    unint64_t v51 = sub_21910D0F8();
    uint64_t v83 = WitnessTable;
    unint64_t v84 = v51;
    swift_getWitnessTable();
    uint64_t v52 = (uint64_t)v61;
    sub_218FFDE04((uint64_t)v17, v15, (uint64_t)v61);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v31 + 8);
    v53(v17, v15);
    sub_218FFDE04(v52, v15, (uint64_t)v17);
    sub_218FFCBB0((uint64_t)v17, v15, v15);
    swift_release();
    swift_release();
    v53(v17, v15);
    v53((char *)v52, v15);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v60, v75);
    uint64_t v42 = v72;
  }
  else
  {
    uint64_t v36 = *v24;
    uint64_t v37 = v24[1];
    swift_getKeyPath();
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = v75;
    v38[3] = v36;
    v38[4] = v37;
    swift_retain();
    uint64_t v39 = swift_getWitnessTable();
    sub_219158C58();
    swift_release();
    swift_release();
    unint64_t v40 = sub_21910D0F8();
    uint64_t v76 = v39;
    unint64_t v77 = v40;
    swift_getWitnessTable();
    sub_218FFDE04((uint64_t)v17, v15, (uint64_t)v20);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v67 + 8);
    v41(v17, v15);
    sub_218FFDE04((uint64_t)v20, v15, (uint64_t)v17);
    uint64_t v32 = (uint64_t)v74;
    sub_219050FE4((uint64_t)v17, v15);
    swift_release();
    v41(v17, v15);
    v41(v20, v15);
    uint64_t v42 = v72;
  }
  uint64_t v55 = v70;
  uint64_t v54 = v71;
  uint64_t v56 = swift_getWitnessTable();
  unint64_t v57 = sub_21910D0F8();
  uint64_t v81 = v56;
  unint64_t v82 = v57;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v80 = v79;
  swift_getWitnessTable();
  sub_218FFDE04(v32, v54, v42);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v32, v54);
}

uint64_t sub_21910CDA4(uint64_t a1, void (*a2)(double))
{
  uint64_t v18 = a1;
  uint64_t v3 = sub_219159D68();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_21915B378();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19[-1] - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  double v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v19[-1] - v12;
  a2(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v8, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5); {
  uint64_t v15 = *(void *)&v8[*(int *)(TupleTypeMetadata2 + 48)];
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v8, v3);
  uint64_t v16 = v18;
  sub_2190F2300(v18, (uint64_t)v19);
  swift_retain();
  uint64_t v17 = sub_21910D154((uint64_t)v13, v15, (uint64_t)v19);
  swift_release();
  v19[3] = type metadata accessor for DispatcherPerformAction();
  v19[4] = swift_getWitnessTable();
  swift_release();
  v19[0] = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v3);
  return sub_2190F2300((uint64_t)v19, v16);
}

uint64_t sub_21910D028(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)result;
    swift_retain();
    sub_218FFE158((uint64_t)v3, &qword_26AD010B8);
    v3[3] = type metadata accessor for DispatcherPerformAction();
    uint64_t result = swift_getWitnessTable();
    v3[4] = result;
    *uint64_t v3 = a2;
  }
  return result;
}

uint64_t sub_21910D0B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21910D0F0(uint64_t a1)
{
  return sub_21910D028(a1, *(void *)(v1 + 24));
}

unint64_t sub_21910D0F8()
{
  unint64_t result = qword_26AD01390;
  if (!qword_26AD01390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD01390);
  }
  return result;
}

uint64_t sub_21910D154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a2;
  uint64_t v49 = sub_219159518();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21915A4A8();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v36 = (char *)&v35 - v7;
  uint64_t v8 = sub_21915A618();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v41 = (char *)&v35 - v9;
  uint64_t v10 = sub_21915A5E8();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v42 = (char *)&v35 - v11;
  uint64_t v12 = sub_219159D68();
  uint64_t v13 = sub_21915B378();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v35 - v22;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v45((char *)&v35 - v22, a1, v12, v21);
  sub_2190F2368(a3, (uint64_t)v50);
  if (v50[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD010B0);
    type metadata accessor for DispatcherPerformAction();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_219159B18();
      swift_release();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v15, 0, 1, v12);
      sub_219159D28();
      swift_release();
    }
  }
  else
  {
    sub_218FFE158((uint64_t)v50, &qword_26AD010B8);
  }
  uint64_t v24 = a3;
  uint64_t v25 = v49;
  if (!*(void *)(a3 + 24))
  {
    sub_2191598A8();
    if ((sub_219159D08() & 1) == 0)
    {
      sub_21910BAF4(v50);
      double v26 = v42;
      sub_21915A5D8();
      uint64_t v27 = v44;
      swift_getWitnessTable();
      sub_219159D18();
      uint64_t v28 = v26;
      uint64_t v25 = v49;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v27);
    }
    if (!*(void *)(v24 + 24))
    {
      sub_219159A38();
      if ((sub_219159D08() & 1) == 0)
      {
        sub_21915A608();
        uint64_t v29 = v40;
        swift_getWitnessTable();
        sub_219159D18();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v29);
      }
      if (!*(void *)(v24 + 24))
      {
        sub_219159648();
        if ((sub_219159D08() & 1) == 0)
        {
          int v30 = v36;
          sub_21915A498();
          uint64_t v31 = v38;
          swift_getWitnessTable();
          sub_219159D18();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v31);
        }
      }
    }
  }
  ((void (*)(char *, char *, uint64_t))v45)(v19, v23, v12);
  swift_retain();
  uint64_t v32 = v46;
  sub_2191594E8();
  uint64_t v33 = sub_219159BA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v25);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v12);
  sub_218FFE158(v24, &qword_26AD010B8);
  return v33;
}

uint64_t sub_21910D7B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21910D7F0(uint64_t a1)
{
  return sub_21910CDA4(a1, *(void (**)(double))(v1 + 24));
}

uint64_t type metadata accessor for DispatcherPerformAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21910D814()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21910D84C@<X0>(uint64_t a1@<X8>)
{
  return sub_219109D90(*(void *)(v1 + 40), a1);
}

uint64_t sub_21910D858()
{
  return swift_getWitnessTable();
}

uint64_t sub_21910D964()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_21910D99C(uint64_t a1)
{
  return sub_21910BE34(a1, (void *)(v1 + 16));
}

uint64_t sub_21910D9A4(uint64_t a1)
{
  return sub_21910C1AC(a1, (void *)(v1 + 16));
}

uint64_t sub_21910D9B0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06CC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21915D680;
  uint64_t v5 = v0[1];
  uint64_t v14 = *v0;
  uint64_t v15 = v5;
  swift_bridgeObjectRetain();
  sub_21915B458();
  uint64_t v6 = v0[3];
  uint64_t v14 = v0[2];
  uint64_t v15 = v6;
  swift_bridgeObjectRetain();
  sub_21915B458();
  uint64_t v7 = _s13PopupHUDModelC8RowModelVMa(0);
  sub_2190090C4((uint64_t)v0 + *(int *)(v7 + 24), (uint64_t)v3, &qword_267C06C98);
  uint64_t v8 = sub_2191598E8();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8);
  if (v10 == 1)
  {
    sub_218FFE158((uint64_t)v3, &qword_267C06C98);
    uint64_t v11 = 0;
  }
  else
  {
    sub_2191598B8();
    uint64_t v11 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
  }
  uint64_t v14 = v11;
  LOBYTE(v15) = v10 == 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06CC8);
  sub_219018344(&qword_267C06CD0, &qword_267C06CC8);
  sub_21915B458();
  uint64_t v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C03780);
  sub_219018344(&qword_267C03788, &qword_267C03780);
  return sub_21915B458();
}

uint64_t sub_21910DC40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21910DCB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21910DD2C()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizerP33_71C7C2830233A285322DF4F35DFC4EC113PopupHUDModel__title;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06CE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizerP33_71C7C2830233A285322DF4F35DFC4EC113PopupHUDModel__rows;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06CF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_21910DE18()
{
  return _s13PopupHUDModelCMa(0);
}

uint64_t _s13PopupHUDModelCMa(uint64_t a1)
{
  return sub_219007C50(a1, (uint64_t *)&unk_267C06C50);
}

void sub_21910DE40()
{
  sub_21910DF0C();
  if (v0 <= 0x3F)
  {
    sub_21910DF64();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_21910DF0C()
{
  if (!qword_267C06C60)
  {
    unint64_t v0 = sub_219157A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C06C60);
    }
  }
}

void sub_21910DF64()
{
  if (!qword_267C06C68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05E60);
    unint64_t v0 = sub_219157A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C06C68);
    }
  }
}

void sub_21910DFC0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  uint64_t v1 = (void *)sub_21915AD18();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_267C06C38 = (uint64_t)v0;
}

uint64_t sub_21910E03C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v130 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v131 = (char *)&v123 - v7;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v123 - v9;
  uint64_t v11 = sub_2191576E8();
  uint64_t v133 = *(void *)(v11 - 8);
  uint64_t v134 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v132 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_2191598E8();
  uint64_t v139 = *(void *)(v13 - 8);
  uint64_t v140 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v129 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v138 = (char *)&v123 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v136 = (char *)&v123 - v18;
  MEMORY[0x270FA5388](v19);
  unint64_t v135 = (uint64_t *)((char *)&v123 - v20);
  uint64_t v21 = _s13PopupHUDModelC8RowModelVMa(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v141 = v21;
  uint64_t v142 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v137 = (uint64_t)&v123 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (uint64_t *)((char *)&v123 - v28);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06CB8);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)&v123 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_219159A48();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (void **)((char *)&v123 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v123 - v38;
  sub_219159A58();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1) {
    return sub_218FFE158((uint64_t)v32, &qword_267C06CB8);
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v39, v32, v33);
  uint64_t v143 = a1;
  int v41 = sub_21910F428(a1);
  if (v41)
  {
    if (v41 != 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v39, v33);
    }
    uint64_t v42 = sub_219159A68();
    sub_21910F6BC((uint64_t)v39, v42, v43);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(void **, char *, uint64_t))(v34 + 16))(v36, v39, v33);
  int v44 = (*(uint64_t (**)(void **, uint64_t))(v34 + 88))(v36, v33);
  if (v44 != *MEMORY[0x263F509C0])
  {
    uint64_t v56 = v33;
    if (v44 == *MEMORY[0x263F509B8])
    {
      uint64_t v128 = v39;
      uint64_t v57 = v34;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2191579E8();
      swift_release();
      swift_release();
      uint64_t v58 = *(void *)(v144 + 16);
      swift_bridgeObjectRelease();
      int v10 = (char *)v135;
      if (v58 == 4)
      {
        unint64_t KeyPath = swift_getKeyPath();
        uint64_t v59 = (uint64_t *)swift_getKeyPath();
        uint64_t v48 = &v144;
        uint64_t v60 = sub_2191579D8();
        if (!*(void *)(*(void *)v61 + 16)) {
          goto LABEL_68;
        }
        uint64_t v62 = (void (*)(uint64_t *, void))v60;
        sub_219054900(0, 1);
        v62(&v144, 0);
        swift_release();
        swift_release();
      }
      uint64_t v63 = sub_219159A88();
      uint64_t v65 = v64;
      sub_219159A78();
      if (qword_267C03570 != -1) {
LABEL_66:
      }
        swift_once();
      uint64_t v66 = (void *)qword_267C06C38;
      _s21PopupHUDConfigurationVMa(0);
      uint64_t v67 = v132;
      sub_21915A358();
      uint64_t v68 = (void *)sub_2191576B8();
      (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v133 + 8))(v67, v134);
      id v69 = objc_msgSend(v66, sel_stringFromDate_, v68);

      uint64_t v70 = sub_21915AD48();
      uint64_t v71 = v10;
      uint64_t v73 = v72;

      uint64_t v74 = v139;
      uint64_t v75 = v71;
      uint64_t v76 = v140;
      (*(void (**)(char *, uint64_t))(v139 + 8))(v75, v140);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))((char *)v29 + *(int *)(v141 + 24), 1, 1, v76);
      *uint64_t v29 = v63;
      v29[1] = (uint64_t)v65;
      _OWORD v29[2] = v70;
      v29[3] = v73;
      swift_getKeyPath();
      swift_getKeyPath();
      unint64_t v77 = (void (*)(uint64_t *, void))sub_2191579D8();
      uint64_t v79 = v78;
      unint64_t v80 = *v78;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v79 = v80;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v80 = sub_219012C5C(0, *(void *)(v80 + 16) + 1, 1, v80);
        *uint64_t v79 = v80;
      }
      unint64_t v83 = *(void *)(v80 + 16);
      unint64_t v82 = *(void *)(v80 + 24);
      if (v83 >= v82 >> 1)
      {
        unint64_t v80 = sub_219012C5C(v82 > 1, v83 + 1, 1, v80);
        *uint64_t v79 = v80;
      }
      *(void *)(v80 + 16) = v83 + 1;
      sub_21911277C((uint64_t)v29, v80+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(void *)(v142 + 72) * v83);
      v77(&v144, 0);
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v128, v56);
    }
    else
    {
      unint64_t v84 = *(void (**)(char *, uint64_t))(v34 + 8);
      v84(v39, v33);
      return ((uint64_t (*)(void **, uint64_t))v84)(v36, v33);
    }
  }
  uint64_t v128 = v39;
  (*(void (**)(void **, uint64_t))(v34 + 96))(v36, v33);
  uint64_t v45 = *v36;
  uint64_t v127 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  uint64_t v46 = v144;
  uint64_t v47 = *(void **)(v144 + 16);
  if (v47)
  {
    uint64_t v125 = v33;
    uint64_t v126 = v34;
    uint64_t v48 = 0;
    unint64_t v49 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
    uint64_t v142 = *(void *)(v142 + 72);
    unint64_t v124 = v49;
    unint64_t KeyPath = v49 + 24;
    while (1)
    {
      uint64_t v51 = *(void *)(v46 + KeyPath - 24);
      uint64_t v52 = *(void *)(v46 + KeyPath - 16);
      if (v51 == sub_219159A88() && v52 == v53) {
        break;
      }
      char v55 = sub_21915B6C8();
      swift_bridgeObjectRelease();
      if (v55) {
        goto LABEL_31;
      }
      uint64_t v48 = (void *)((char *)v48 + 1);
      KeyPath += v142;
      if (v47 == v48)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = v126;
        uint64_t v33 = v125;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v128;
    uint64_t v85 = sub_219159A88();
    uint64_t v56 = sub_21910FAC4(v85, v86, v45);
    char v88 = v87;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v88) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v57, v125);
    }
    sub_219159A78();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v10, 0, 1, v140);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v123 = (void (*)(uint64_t *, void))sub_2191579D8();
    uint64_t v2 = (uint64_t *)v89;
    uint64_t v59 = *v89;
    char v90 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = (uint64_t)v59;
    if ((v90 & 1) == 0) {
      goto LABEL_69;
    }
LABEL_33:
    if ((unint64_t)v48 >= v59[2])
    {
      __break(1u);
    }
    else
    {
      sub_219112714((uint64_t)v10, (uint64_t)v59 + *(int *)(v141 + 24) + KeyPath - 24);
      v123(&v144, 0);
      swift_release();
      swift_release();
      if (!v56)
      {
        uint64_t v59 = v135;
        sub_219159A78();
        if (qword_267C03570 == -1)
        {
LABEL_41:
          uint64_t v103 = (void *)qword_267C06C38;
          _s21PopupHUDConfigurationVMa(0);
          uint64_t v104 = v132;
          sub_21915A358();
          uint64_t v105 = (void *)sub_2191576B8();
          (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v133 + 8))(v104, v134);
          id v106 = objc_msgSend(v103, sel_stringFromDate_, v105);

          uint64_t v95 = sub_21915AD48();
          uint64_t v57 = v107;

          uint64_t v133 = *(void *)(v139 + 8);
          uint64_t v134 = v139 + 8;
          ((void (*)(uint64_t *, uint64_t))v133)(v59, v140);
          uint64_t v97 = (void (*)(uint64_t *, void))swift_getKeyPath();
          unint64_t v100 = swift_getKeyPath();
          uint64_t v99 = (void *)sub_2191579D8();
          uint64_t v109 = v108;
          unint64_t v96 = *v108;
          char v110 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v109 = v96;
          if ((v110 & 1) == 0)
          {
            unint64_t v96 = sub_2191125E8(v96);
            *uint64_t v109 = v96;
          }
          unint64_t v91 = v124;
          if ((unint64_t)v48 >= *(void *)(v96 + 16))
          {
            __break(1u);
LABEL_74:
            unint64_t v100 = sub_2191125E8(v100);
            *uint64_t v99 = v100;
LABEL_38:
            if ((unint64_t)v48 < *(void *)(v100 + 16))
            {
              uint64_t v102 = (void *)(v100 + KeyPath);
              *(v102 - 1) = 0x8FB8EFA09AE2;
              *uint64_t v102 = 0xA600000000000000;
              swift_bridgeObjectRelease();
              v97(&v144, 0);
              swift_release();
              swift_release();
              return (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v57, v125);
            }
            __break(1u);
            goto LABEL_76;
          }
          uint64_t v111 = (uint64_t *)(v96 + KeyPath);
          *(v111 - 1) = v95;
          *uint64_t v111 = v57;
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, void))v99)(&v144, 0);
          swift_release();
          swift_release();
          swift_getKeyPath();
          swift_getKeyPath();
          sub_2191579E8();
          swift_release();
          swift_release();
          uint64_t v112 = *(uint64_t **)(v144 + 16);
          swift_bridgeObjectRelease();
          uint64_t v65 = v128;
          uint64_t v57 = v140;
          uint64_t v56 = (uint64_t)v131;
          unint64_t v135 = v112;
          if (!v112) {
            return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v65, v125);
          }
          unint64_t KeyPath = 0;
          uint64_t v132 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
          v139 += 32;
          uint64_t v59 = &qword_267C06C98;
          while (1)
          {
            if (!KeyPath) {
              goto LABEL_47;
            }
            uint64_t v2 = v59;
            uint64_t v48 = (void *)v91;
            uint64_t v29 = (uint64_t *)v127[2];
            swift_getKeyPath();
            int v10 = (char *)swift_getKeyPath();
            sub_2191579E8();
            swift_release();
            swift_release();
            uint64_t v63 = v144;
            if (KeyPath >= *(void *)(v144 + 16))
            {
              __break(1u);
              goto LABEL_66;
            }
            unint64_t v91 = (unint64_t)v48;
            uint64_t v113 = v137;
            sub_219112970((uint64_t)v48 + v144, v137, _s13PopupHUDModelC8RowModelVMa);
            swift_bridgeObjectRelease();
            uint64_t v59 = v2;
            sub_2190090C4(v113 + *(int *)(v141 + 24), v56, v2);
            sub_2191127E8(v113, _s13PopupHUDModelC8RowModelVMa);
            if ((*v132)(v56, 1, v57) == 1)
            {
              sub_218FFE158(v56, v2);
              goto LABEL_47;
            }
            (*(void (**)(char *, uint64_t, uint64_t))v139)(v136, v56, v57);
            sub_219159A78();
            sub_2191598C8();
            if (v114 >= 1.0) {
              goto LABEL_54;
            }
            uint64_t v24 = (char *)0xA300000000000000;
            if (v114 < 0.0)
            {
              uint64_t v115 = 9215458;
              goto LABEL_55;
            }
            uint64_t v115 = 9215458;
            if (v114 <= 1.0)
            {
LABEL_54:
              uint64_t v144 = 0;
              unint64_t v145 = 0xE000000000000000;
              sub_21915AD88();
              sub_21915B0B8();
              sub_21915AD88();
              uint64_t v115 = v144;
              uint64_t v24 = (char *)v145;
            }
LABEL_55:
            ((void (*)(char *, uint64_t))v133)(v138, v57);
            swift_getKeyPath();
            uint64_t v57 = swift_getKeyPath();
            int v10 = (char *)sub_2191579D8();
            uint64_t v117 = v116;
            uint64_t v56 = *v116;
            char v118 = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v117 = v56;
            if ((v118 & 1) == 0)
            {
              uint64_t v56 = sub_2191125E8(v56);
              *uint64_t v117 = v56;
            }
            uint64_t v59 = v2;
            if (KeyPath >= *(void *)(v56 + 16))
            {
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              uint64_t v59 = (uint64_t *)sub_2191125E8((unint64_t)v59);
              uint64_t *v2 = (uint64_t)v59;
              goto LABEL_33;
            }
            uint64_t v119 = (char *)v48 + v56;
            *((void *)v119 + 2) = v115;
            *((void *)v119 + 3) = v24;
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t *, void))v10)(&v144, 0);
            unint64_t v91 = (unint64_t)v48;
            swift_release();
            swift_release();
            uint64_t v57 = v140;
            ((void (*)(char *, uint64_t))v133)(v136, v140);
            uint64_t v65 = v128;
            uint64_t v56 = (uint64_t)v131;
LABEL_47:
            ++KeyPath;
            v91 += v142;
            if (v135 == (uint64_t *)KeyPath) {
              return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v65, v125);
            }
          }
        }
LABEL_72:
        swift_once();
        goto LABEL_41;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_2191579E8();
      swift_release();
      swift_release();
      unint64_t v91 = (unint64_t)v135;
      if (*(void *)(v144 + 16))
      {
        sub_219112970(v144 + v124, (uint64_t)v24, _s13PopupHUDModelC8RowModelVMa);
        swift_bridgeObjectRelease();
        uint64_t v92 = v130;
        sub_2190090C4((uint64_t)&v24[*(int *)(v141 + 24)], v130, &qword_267C06C98);
        sub_2191127E8((uint64_t)v24, _s13PopupHUDModelC8RowModelVMa);
        uint64_t v94 = v139;
        uint64_t v93 = v140;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v92, 1, v140) == 1)
        {
          sub_218FFE158(v92, &qword_267C06C98);
          uint64_t v95 = swift_getKeyPath();
          unint64_t v96 = swift_getKeyPath();
          uint64_t v97 = (void (*)(uint64_t *, void))sub_2191579D8();
          uint64_t v99 = v98;
          unint64_t v100 = *v98;
          char v101 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v99 = v100;
          if ((v101 & 1) == 0) {
            goto LABEL_74;
          }
          goto LABEL_38;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v129, v92, v93);
        sub_219159A78();
        uint64_t v95 = sub_2191125FC();
        uint64_t v97 = v120;
        uint64_t v56 = *(void *)(v94 + 8);
        uint64_t v139 = v94 + 8;
        ((void (*)(unint64_t, uint64_t))v56)(v91, v93);
        swift_getKeyPath();
        swift_getKeyPath();
        unint64_t v96 = sub_2191579D8();
        uint64_t v57 = (uint64_t)v121;
        unint64_t v91 = *v121;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v57 = v91;
        if (result) {
          goto LABEL_62;
        }
LABEL_76:
        uint64_t result = sub_2191125E8(v91);
        unint64_t v91 = result;
        *(void *)uint64_t v57 = result;
LABEL_62:
        uint64_t v57 = (uint64_t)v128;
        if ((unint64_t)v48 >= *(void *)(v91 + 16))
        {
          __break(1u);
        }
        else
        {
          uint64_t v122 = (void *)(v91 + KeyPath);
          *(v122 - 1) = v95;
          *uint64_t v122 = v97;
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, void))v96)(&v144, 0);
          swift_release();
          swift_release();
          ((void (*)(char *, uint64_t))v56)(v129, v140);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v57, v125);
        }
        return result;
      }
    }
    __break(1u);
    goto LABEL_72;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  (*(void (**)(char *, uint64_t))(v34 + 8))(v128, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21910F428(uint64_t a1)
{
  uint64_t v3 = sub_219159A98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  if (v8 == sub_219159A68() && v7 == v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    goto LABEL_9;
  }
  char v11 = sub_21915B6C8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  if (v11)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_10;
  }
  uint64_t v12 = (void *)v1[3];
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_219159A68();
  char v15 = sub_21910FBAC(v13, v14, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v15) {
    return 2;
  }
LABEL_10:
  uint64_t v17 = (void **)(v1 + 3);
  uint64_t v18 = (void *)v1[3];
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_219159A68();
  char v21 = sub_21910FBAC(v19, v20, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    return 0;
  }
  if (v18[2] == 4) {
    sub_219054794(0, 1);
  }
  uint64_t v22 = sub_219159A68();
  uint64_t v24 = v23;
  uint64_t v25 = *v17;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v25 = sub_219012B4C(0, v25[2] + 1, 1, v25);
  }
  unint64_t v27 = v25[2];
  unint64_t v26 = v25[3];
  if (v27 >= v26 >> 1) {
    uint64_t v25 = sub_219012B4C((void *)(v26 > 1), v27 + 1, 1, v25);
  }
  void v25[2] = v27 + 1;
  uint64_t v28 = &v25[2 * v27];
  v28[4] = v22;
  v28[5] = v24;
  char *v17 = v25;
  return 1;
}

uint64_t sub_21910F6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a1;
  uint64_t v7 = _s13PopupHUDModelC8RowModelVMa(0);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_219159A48();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v4 = a2;
  v4[1] = a3;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2191579F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v26, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x263F509C0])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    uint64_t v15 = *(void *)v13;
    int64_t v16 = *(void *)(*(void *)v13 + 16);
    if (v16)
    {
      void v25[2] = v4[2];
      uint64_t v29 = MEMORY[0x263F8EE78];
      sub_21906CB54(0, v16, 0);
      uint64_t v17 = v29;
      uint64_t v26 = sub_2191598E8();
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
      v25[1] = v15;
      uint64_t v19 = (uint64_t *)(v15 + 40);
      do
      {
        uint64_t v21 = *(v19 - 1);
        uint64_t v20 = *v19;
        v18(&v9[*(int *)(v28 + 24)], 1, 1, v26);
        *(void *)uint64_t v9 = v21;
        *((void *)v9 + 1) = v20;
        *((void *)v9 + 2) = 0x8FB8EFB18FE2;
        *((void *)v9 + 3) = 0xA600000000000000;
        uint64_t v29 = v17;
        unint64_t v22 = *(void *)(v17 + 16);
        unint64_t v23 = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
        if (v22 >= v23 >> 1)
        {
          sub_21906CB54(v23 > 1, v22 + 1, 1);
          uint64_t v17 = v29;
        }
        v19 += 2;
        *(void *)(v17 + 16) = v22 + 1;
        sub_21911277C((uint64_t)v9, v17+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v22);
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x263F8EE78];
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v29 = v17;
    swift_retain();
  }
  else
  {
    if (v14 != *MEMORY[0x263F509B8]) {
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v29 = MEMORY[0x263F8EE78];
    swift_retain();
  }
  return sub_2191579F8();
}

uint64_t sub_21910FAC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_21915B6C8() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_21915B6C8();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_21910FBAC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_21915B6C8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_21915B6C8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21910FC74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D40);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2191582B8();
  sub_21910FF2C((uint64_t)v28);
  uint64_t v19 = v28[0];
  uint64_t v18 = v28[1];
  char v5 = v29;
  uint64_t v22 = v30;
  uint64_t v21 = v31;
  char v6 = v32;
  int v23 = v33;
  uint64_t v24 = v34;
  char v7 = v35;
  uint64_t v25 = v37;
  uint64_t v26 = v36;
  char v8 = v38;
  uint64_t v27 = v39;
  uint64_t v9 = *MEMORY[0x263F1A5F8];
  uint64_t v10 = sub_2191588D8();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v4, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  uint64_t v12 = sub_2191588F8();
  sub_218FFE158((uint64_t)v4, &qword_267C06D40);
  uint64_t result = swift_getKeyPath();
  char v46 = v6;
  char v43 = v7;
  char v41 = v8;
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 17) = v28[0];
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)v28 + 3);
  uint64_t v14 = v18;
  *(void *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 40) = v5;
  LODWORD(v14) = *(_DWORD *)v47;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a1 + 41) = v14;
  uint64_t v15 = v21;
  *(void *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v15;
  *(unsigned char *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 65) = v23;
  *(_DWORD *)(a1 + 66) = v44;
  *(_WORD *)(a1 + 70) = v45;
  *(void *)(a1 + 72) = v24;
  *(unsigned char *)(a1 + 80) = v43;
  *(_DWORD *)(a1 + 84) = *(_DWORD *)&v42[3];
  *(_DWORD *)(a1 + 81) = *(_DWORD *)v42;
  uint64_t v16 = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v16;
  *(unsigned char *)(a1 + 104) = v41;
  *(_DWORD *)(a1 + 105) = *(_DWORD *)v40;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v40[3];
  *(void *)(a1 + 112) = v27;
  *(void *)(a1 + 120) = result;
  *(void *)(a1 + 128) = v12;
  return result;
}

uint64_t sub_21910FF2C@<X0>(uint64_t a1@<X8>)
{
  sub_219030858();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2191589E8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2191589E8();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v12 & 1;
  *(void *)(a1 + 88) = v14;
  sub_21907E99C(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_21907E99C(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_218FFE148(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_218FFE148(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_219110074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v48[1] = a1;
  void v48[2] = a2;
  uint64_t v51 = a3;
  uint64_t v50 = sub_219158028() - 8;
  MEMORY[0x270FA5388](v50);
  uint64_t v4 = (_OWORD *)((char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = sub_2191592D8();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  char v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E38);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D08);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D10);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_219158338();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D18);
  sub_219110518((uint64_t *)&v10[*(int *)(v22 + 44)]);
  uint64_t v23 = sub_219159308();
  sub_2190C6188(0.0, 1, 0.0, 1, 200.0, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 65.0, 0, v23, v24);
  sub_218FFE158((uint64_t)v10, &qword_267C05E30);
  LOBYTE(v10) = sub_219158838();
  sub_219157A78();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_2190090C4((uint64_t)v13, (uint64_t)v17, &qword_267C05E38);
  unsigned __int8 v33 = &v17[*(int *)(v15 + 44)];
  *unsigned __int8 v33 = (char)v10;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_218FFE158((uint64_t)v13, &qword_267C05E38);
  sub_2191592C8();
  LOBYTE(v15) = sub_219158838();
  uint64_t v34 = &v21[*(int *)(v19 + 44)];
  uint64_t v35 = v49;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v34, v7, v49);
  v34[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C06D20) + 36)] = v15;
  sub_2190090C4((uint64_t)v17, (uint64_t)v21, &qword_267C06D08);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v35);
  sub_218FFE158((uint64_t)v17, &qword_267C06D08);
  uint64_t v36 = (char *)v4 + *(int *)(v50 + 28);
  uint64_t v37 = *MEMORY[0x263F19860];
  uint64_t v38 = sub_219158318();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v4 = _Q0;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D28);
  uint64_t v45 = v51;
  uint64_t v46 = v51 + *(int *)(v44 + 36);
  sub_219112970((uint64_t)v4, v46, MEMORY[0x263F19048]);
  *(_WORD *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C06D30) + 36)) = 256;
  sub_2190090C4((uint64_t)v21, v45, &qword_267C06D10);
  sub_2191127E8((uint64_t)v4, MEMORY[0x263F19048]);
  return sub_218FFE158((uint64_t)v21, &qword_267C06D10);
}

uint64_t sub_219110518@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D38);
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v36 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v34 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (char *)&v32 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D40);
  MEMORY[0x270FA5388](v5 - 8);
  char v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2191579E8();
  swift_release();
  swift_release();
  swift_release();
  sub_219030858();
  uint64_t v8 = sub_2191589E8();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = sub_2191588D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  sub_2191588F8();
  sub_218FFE158((uint64_t)v7, &qword_267C06D40);
  uint64_t v14 = sub_2191589C8();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v33 = v19;
  swift_release();
  char v20 = v18 & 1;
  sub_218FFE148(v8, v10, v12);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_2191579E8();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E60);
  _s20PopupHUDListItemViewVMa(0);
  sub_218FFDF90(&qword_267C06D48, &qword_267C05E60);
  sub_2191129F8(&qword_267C06D50, (void (*)(uint64_t))_s20PopupHUDListItemViewVMa);
  sub_2191129F8(&qword_267C06D58, (void (*)(uint64_t))_s13PopupHUDModelC8RowModelVMa);
  uint64_t v21 = v38;
  sub_2191591D8();
  uint64_t v23 = v34;
  uint64_t v22 = v35;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v25 = v36;
  v24(v34, v21, v36);
  uint64_t v26 = v37;
  *uint64_t v37 = v14;
  v26[1] = v16;
  char v27 = v20;
  *((unsigned char *)v26 + 16) = v20;
  void v26[3] = v33;
  uint64_t v28 = v26;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D60);
  v24((char *)v28 + *(int *)(v29 + 48), v23, v25);
  sub_21907E99C(v14, v16, v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v22 + 8);
  swift_bridgeObjectRetain();
  v30(v38, v25);
  v30(v23, v25);
  sub_218FFE148(v14, v16, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_219110994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_219112970(a1, a2, _s13PopupHUDModelC8RowModelVMa);
}

uint64_t sub_2191109C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E20);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05E28);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  *uint64_t v5 = sub_219159318();
  v5[1] = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06CF8);
  sub_219110074(v10, v9, (uint64_t)v5 + *(int *)(v12 + 44));
  uint64_t v13 = sub_2191592F8();
  sub_2190C612C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0, v13, v14);
  sub_218FFE158((uint64_t)v5, &qword_267C05E20);
  sub_2190090C4((uint64_t)v8, a1, &qword_267C05E28);
  *(void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C06D00) + 36)) = 0x3FE8000000000000;
  return sub_218FFE158((uint64_t)v8, &qword_267C05E28);
}

void sub_219110C10()
{
  uint64_t v1 = v0;
  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v44, sel_viewDidLoad);
  swift_beginAccess();
  _s13PopupHUDModelCMa(0);
  sub_2191129F8(&qword_267C06CD8, (void (*)(uint64_t))_s13PopupHUDModelCMa);
  swift_retain();
  sub_219157E78();
  id v2 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_267C06CE0));
  uint64_t v3 = (void *)sub_2191583E8();
  id v4 = objc_msgSend(v3, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  objc_msgSend(v1, sel_addChildViewController_, v3);
  id v7 = objc_msgSend(v3, sel_view);
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7;
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v3, sel_view);
  if (!v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v11;
  objc_msgSend(v10, sel_addSubview_, v11);

  __swift_instantiateConcreteTypeFromMangledName(&qword_267C03C20);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_219164CC0;
  id v14 = objc_msgSend(v3, sel_view);
  if (!v14)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_topAnchor);

  id v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  char v18 = v17;
  id v19 = objc_msgSend(v17, sel_topAnchor);

  id v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);
  *(void *)(v13 + 32) = v20;
  id v21 = objc_msgSend(v3, sel_view);
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v21, sel_leadingAnchor);

  id v24 = objc_msgSend(v1, sel_view);
  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v25 = v24;
  id v26 = objc_msgSend(v24, sel_leadingAnchor);

  id v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);
  *(void *)(v13 + 40) = v27;
  id v28 = objc_msgSend(v3, sel_view);
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v29 = v28;
  id v30 = objc_msgSend(v28, sel_bottomAnchor);

  id v31 = objc_msgSend(v1, sel_view);
  if (!v31)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v32 = v31;
  id v33 = objc_msgSend(v31, sel_bottomAnchor);

  id v34 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v33);
  *(void *)(v13 + 48) = v34;
  id v35 = objc_msgSend(v3, sel_view);
  if (!v35)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v36 = v35;
  id v37 = objc_msgSend(v35, sel_trailingAnchor);

  id v38 = objc_msgSend(v1, sel_view);
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = self;
    id v41 = objc_msgSend(v39, sel_trailingAnchor);

    id v42 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v41);
    *(void *)(v13 + 56) = v42;
    sub_21915AE98();
    sub_2190CF1BC();
    char v43 = (void *)sub_21915AE78();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_activateConstraints_, v43);

    objc_msgSend(v3, sel_didMoveToParentViewController_, v1);
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_2191111DC()
{
  return _s22PopupHUDViewControllerCMa(0);
}

uint64_t _s22PopupHUDViewControllerCMa(uint64_t a1)
{
  return sub_219007C50(a1, (uint64_t *)&unk_267C06C78);
}

uint64_t sub_219111204()
{
  uint64_t result = _s21PopupHUDConfigurationVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s21PopupHUDConfigurationVMa(uint64_t a1)
{
  return sub_219007C50(a1, (uint64_t *)&unk_267C06C88);
}

uint64_t *sub_2191112B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21915A378();
    id v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_2191113BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_21915A378();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_219111444(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21915A378();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *sub_2191114FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21915A378();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2191115C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_21915A378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_21911164C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_21915A378();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2191116F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21911170C);
}

uint64_t sub_21911170C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21915A378();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2191117BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2191117D0);
}

uint64_t sub_2191117D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21915A378();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_219111878()
{
  uint64_t result = sub_21915A378();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21911192C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_2191598E8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_219111AB8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2191598E8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_219111B90(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2191598E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *sub_219111CCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2191598E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_219111E84(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_2191598E8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_219111F98(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2191598E8();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_219112130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_219112144);
}

uint64_t sub_219112144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2191121F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21911220C);
}

uint64_t sub_21911220C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s13PopupHUDModelC8RowModelVMa(uint64_t a1)
{
  return sub_219007C50(a1, (uint64_t *)&unk_267C06CA0);
}

void sub_2191122D8()
{
  sub_219112370();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_219112370()
{
  if (!qword_267C06CB0)
  {
    sub_2191598E8();
    unint64_t v0 = sub_21915B378();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C06CB0);
    }
  }
}

uint64_t sub_2191123C8()
{
  return MEMORY[0x263F8DB70];
}

uint64_t sub_2191123D4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_219112454()
{
  return sub_2191579F8();
}

uint64_t sub_2191124D0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_219112550()
{
  return sub_2191579F8();
}

void *sub_2191125D4(void *a1)
{
  return sub_219012918(0, a1[2], 0, a1);
}

uint64_t sub_2191125E8(unint64_t a1)
{
  return sub_219012C5C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_2191125FC()
{
  sub_2191598C8();
  if (v0 < 1.0 && (v0 < 0.0 || v0 > 1.0)) {
    return 9215458;
  }
  sub_21915AD88();
  sub_21915B0B8();
  sub_21915AD88();
  return 0;
}

uint64_t sub_219112714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21911277C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13PopupHUDModelC8RowModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2191127E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *_s12PopupHUDViewVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *_s12PopupHUDViewVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t _s12PopupHUDViewVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12PopupHUDViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s12PopupHUDViewVMa()
{
  return &_s12PopupHUDViewVN;
}

uint64_t sub_219112954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219112970(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s20PopupHUDListItemViewVMa(uint64_t a1)
{
  return sub_219007C50(a1, (uint64_t *)&unk_267C06D68);
}

uint64_t sub_2191129F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_219112A40(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = _s13PopupHUDModelC8RowModelVMa(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = *(int *)(v4 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2191598E8();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_219112BD8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  uint64_t v3 = sub_2191598E8();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

void *sub_219112CB4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2191598E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *sub_219112DFC(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2191598E8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_OWORD *sub_219112FB8(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_2191598E8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_2191130D8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2191598E8();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06C98);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_219113274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_219113288);
}

uint64_t sub_219113288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13PopupHUDModelC8RowModelVMa(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_2191132F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219113308);
}

uint64_t sub_219113308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13PopupHUDModelC8RowModelVMa(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_219113378()
{
  uint64_t result = _s13PopupHUDModelC8RowModelVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_219113408()
{
  unint64_t result = qword_267C06D78;
  if (!qword_267C06D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06D00);
    sub_219113484();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06D78);
  }
  return result;
}

unint64_t sub_219113484()
{
  unint64_t result = qword_267C06D80;
  if (!qword_267C06D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05E28);
    sub_218FFDF90(&qword_267C06D88, &qword_267C05E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06D80);
  }
  return result;
}

uint64_t sub_219113524()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219113540@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2191581A8();
  *a1 = result;
  return result;
}

uint64_t sub_21911356C()
{
  return sub_2191581B8();
}

unint64_t sub_21911359C()
{
  unint64_t result = qword_267C06D90;
  if (!qword_267C06D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06D98);
    sub_218FFDF90(&qword_267C06DA0, qword_267C06DA8);
    sub_218FFDF90(&qword_267C05500, &qword_267C05460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06D90);
  }
  return result;
}

uint64_t EnvironmentValues.isFlowStackSheetPresented.getter()
{
  sub_2191136A0();
  sub_219158238();
  return v1;
}

unint64_t sub_2191136A0()
{
  unint64_t result = qword_26AD030D8[0];
  if (!qword_26AD030D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD030D8);
  }
  return result;
}

double sub_2191136F4@<D0>(uint64_t a1@<X8>)
{
  sub_2191136A0();
  sub_219158238();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_21911374C(uint64_t *a1)
{
  return sub_219158248();
}

uint64_t EnvironmentValues.isFlowStackSheetPresented.setter()
{
  return sub_219158248();
}

uint64_t sub_2191137E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  sub_219113924(a2, a3, (uint64_t)v12);
  uint64_t v10 = type metadata accessor for FlowStackSheetViewModifier();
  MEMORY[0x21D47F800](v12, a4, v10, a6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v10 - 8) + 8))(v12, v10);
}

uint64_t sub_219113924@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 64) = swift_getKeyPath();
  *(unsigned char *)(a3 + 104) = 0;
  type metadata accessor for FlowStackSheetAuthority();
  swift_retain();
  swift_getWitnessTable();
  *(void *)a3 = sub_219157E78();
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  swift_retain();
  sub_219158FE8();
  *(unsigned char *)(a3 + 32) = v8;
  *(void *)(a3 + 40) = v9;
  sub_219158FE8();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v9;
  return result;
}

uint64_t sub_219113A6C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v59 = a3;
  uint64_t v46 = a2[2];
  uint64_t v4 = v46;
  sub_21915B378();
  uint64_t v57 = sub_219159188();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  char v55 = (char *)&v46 - v5;
  swift_getWitnessTable();
  uint64_t v6 = sub_2191585B8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06E30);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05918);
  uint64_t v9 = a2[5];
  uint64_t v60 = a2[4];
  uint64_t v10 = v60;
  unint64_t v11 = sub_219115968();
  unint64_t v12 = sub_2190AB290();
  *(void *)&long long v67 = v4;
  *((void *)&v67 + 1) = v7;
  *(void *)&long long v68 = v8;
  *((void *)&v68 + 1) = v10;
  *(void *)&long long v69 = v9;
  *((void *)&v69 + 1) = v11;
  uint64_t v13 = v9;
  *(void *)&long long v70 = v12;
  type metadata accessor for FlowStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01388);
  uint64_t v14 = sub_219157F48();
  uint64_t v48 = v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = WitnessTable;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v75 = v16;
  uint64_t v76 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = sub_218FFDF90(&qword_26AD01380, &qword_26AD01388);
  uint64_t v73 = v18;
  uint64_t v74 = v19;
  uint64_t v20 = v14;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v21 = v46;
  *(void *)&long long v67 = v6;
  *((void *)&v67 + 1) = v46;
  *(void *)&long long v68 = v20;
  *((void *)&v68 + 1) = WitnessTable;
  uint64_t v22 = v13;
  *(void *)&long long v69 = v13;
  *((void *)&v69 + 1) = v49;
  uint64_t v53 = MEMORY[0x263F1B190];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v54 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v47 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v51 = (uint64_t)&v46 - v25;
  uint64_t v26 = v21;
  uint64_t v27 = v60;
  type metadata accessor for FlowStackSheetAuthority();
  swift_getWitnessTable();
  sub_219157E88();
  uint64_t v28 = a2[3];
  uint64_t v62 = v26;
  uint64_t v29 = v26;
  uint64_t v63 = v28;
  uint64_t v64 = v27;
  uint64_t v65 = v22;
  uint64_t v66 = a2[6];
  uint64_t v30 = v66;
  swift_getKeyPath();
  id v31 = v55;
  sub_219157E98();
  swift_release();
  swift_release();
  (*(void (**)(long long *, uint64_t, void *))(*(a2 - 1) + 16))(&v67, v61, a2);
  uint64_t v32 = swift_allocObject();
  long long v33 = v69;
  *(_OWORD *)(v32 + 104) = v70;
  long long v34 = *(_OWORD *)v72;
  *(_OWORD *)(v32 + 120) = v71;
  *(_OWORD *)(v32 + 136) = v34;
  *(_OWORD *)(v32 + 145) = *(_OWORD *)&v72[9];
  long long v35 = v68;
  *(_OWORD *)(v32 + 56) = v67;
  *(_OWORD *)(v32 + 72) = v35;
  uint64_t v36 = v29;
  *(void *)(v32 + 16) = v29;
  *(void *)(v32 + 24) = v28;
  *(void *)(v32 + 32) = v60;
  *(void *)(v32 + 40) = v22;
  *(void *)(v32 + 48) = v30;
  *(_OWORD *)(v32 + 88) = v33;
  uint64_t v37 = swift_checkMetadataState();
  uint64_t v38 = swift_checkMetadataState();
  uint64_t v39 = v49;
  uint64_t v40 = v50;
  uint64_t v41 = (uint64_t)v47;
  sub_219158D58();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v57);
  *(void *)&long long v67 = v37;
  *((void *)&v67 + 1) = v36;
  *(void *)&long long v68 = v38;
  *((void *)&v68 + 1) = v40;
  *(void *)&long long v69 = v22;
  *((void *)&v69 + 1) = v39;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v51;
  uint64_t v43 = OpaqueTypeMetadata2;
  sub_218FFDE04(v41, OpaqueTypeMetadata2, v51);
  objc_super v44 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
  v44(v41, v43);
  sub_218FFDE04(v42, v43, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v44)(v42, v43);
}

uint64_t sub_2191140C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v43 = a2;
  *(void *)&long long v44 = a3;
  *((void *)&v44 + 1) = a4;
  *(void *)&long long v45 = a5;
  *((void *)&v45 + 1) = a6;
  unint64_t v11 = (void *)type metadata accessor for FlowStackSheetViewModifier();
  sub_2191143B4(a1, v11, (uint64_t)&v33);
  uint64_t v20 = v41;
  uint64_t v21 = v40;
  uint64_t v23 = v33;
  long long v24 = v34;
  long long v25 = v35;
  unint64_t v26 = v36;
  unint64_t v27 = v37;
  char v28 = v38;
  uint64_t v29 = v39;
  uint64_t v30 = v40;
  uint64_t v31 = v41;
  char v32 = v42;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06E30);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05918);
  unint64_t v14 = sub_219115968();
  unint64_t v15 = sub_2190AB290();
  uint64_t v43 = a2;
  *(void *)&long long v44 = v12;
  *((void *)&v44 + 1) = v13;
  *(void *)&long long v45 = a4;
  *((void *)&v45 + 1) = a5;
  unint64_t v46 = v14;
  unint64_t v47 = v15;
  type metadata accessor for FlowStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01388);
  uint64_t v16 = sub_219157F48();
  swift_getWitnessTable();
  sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  swift_getWitnessTable();
  sub_218FFDF90(&qword_26AD01380, &qword_26AD01388);
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)&v23, v16, (uint64_t)&v43);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_219006724(v21, v20);
  uint64_t v17 = v50;
  uint64_t v18 = v51;
  long long v34 = v44;
  long long v35 = v45;
  uint64_t v33 = v43;
  unint64_t v36 = v46;
  unint64_t v37 = v47;
  char v38 = v48;
  uint64_t v39 = v49;
  uint64_t v40 = v50;
  uint64_t v41 = v51;
  char v42 = v52;
  sub_218FFDE04((uint64_t)&v33, v16, a7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_219006724(v17, v18);
}

uint64_t sub_2191143B4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v56 = a1;
  uint64_t v5 = a2[2];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_2190D8C0C();
  uint64_t v9 = *(a2 - 1);
  *(void *)&long long v57 = *(void *)(v9 + 16);
  uint64_t v10 = v9 + 16;
  ((void (*)(_OWORD *, uint64_t, void *))v57)(v81, v3, a2);
  uint64_t v52 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v56, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  long long v13 = v83;
  *(_OWORD *)(v12 + 104) = v82;
  *(_OWORD *)(v12 + 120) = v13;
  *(_OWORD *)(v12 + 136) = v84[0];
  *(_OWORD *)(v12 + 145) = *(_OWORD *)((char *)v84 + 9);
  long long v14 = v81[1];
  *(_OWORD *)(v12 + 56) = v81[0];
  uint64_t v16 = a2[4];
  uint64_t v56 = a2[3];
  uint64_t v15 = v56;
  uint64_t v17 = v5;
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v15;
  uint64_t v18 = a2[5];
  uint64_t v19 = a2[6];
  *(void *)&long long v53 = a2;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v18;
  *(void *)(v12 + 48) = v19;
  *(void *)&long long v54 = v19;
  *(_OWORD *)(v12 + 72) = v14;
  *(_OWORD *)(v12 + 88) = v81[2];
  unint64_t v20 = v12 + v11;
  uint64_t v21 = v17;
  (*(void (**)(unint64_t, char *))(v6 + 32))(v20, v8);
  ((void (*)(unsigned char *, void, void *))v57)(v78, v58, a2);
  uint64_t v22 = swift_allocObject();
  long long v23 = *(_OWORD *)&v78[32];
  *(_OWORD *)(v22 + 104) = *(_OWORD *)&v78[48];
  long long v24 = v80[0];
  *(_OWORD *)(v22 + 120) = v79;
  *(_OWORD *)(v22 + 136) = v24;
  *(_OWORD *)(v22 + 145) = *(_OWORD *)((char *)v80 + 9);
  long long v25 = *(_OWORD *)&v78[16];
  *(_OWORD *)(v22 + 56) = *(_OWORD *)v78;
  *(_OWORD *)(v22 + 72) = v25;
  uint64_t v50 = v21;
  uint64_t v26 = v56;
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v26;
  *(void *)(v22 + 32) = v16;
  *(void *)(v22 + 40) = v18;
  *(void *)(v22 + 48) = v19;
  *(_OWORD *)(v22 + 88) = v23;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06E30);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05918);
  unint64_t v29 = sub_219115968();
  unint64_t v48 = sub_2190AB290();
  sub_2190F78CC((uint64_t)sub_219115C20, v12, (uint64_t)sub_219115C70, v22, (uint64_t *)v85);
  long long v86 = v85[0];
  *(_OWORD *)uint64_t v78 = v85[0];
  *(_OWORD *)&v78[16] = v85[1];
  *(_OWORD *)&v78[32] = v85[2];
  LOBYTE(v73) = 2;
  *(void *)&v81[0] = v21;
  *((void *)&v81[0] + 1) = v27;
  *(void *)&v81[1] = v28;
  *((void *)&v81[1] + 1) = v16;
  *(void *)&v81[2] = v18;
  *((void *)&v81[2] + 1) = v29;
  *(void *)&long long v82 = v48;
  type metadata accessor for FlowStack();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.presentedBy(_:)();
  sub_2190AB7DC((uint64_t)&v86);
  swift_release();
  swift_release();
  uint64_t v73 = v61;
  long long v74 = v62;
  long long v75 = v63;
  long long v76 = v64;
  char v77 = v65;
  swift_getKeyPath();
  ((void (*)(_OWORD *, void, void))v57)(v81, v58, v53);
  sub_21915AF98();
  uint64_t v31 = sub_21915AF88();
  uint64_t v32 = swift_allocObject();
  long long v33 = v81[2];
  *(_OWORD *)(v32 + 120) = v82;
  long long v34 = v84[0];
  *(_OWORD *)(v32 + 136) = v83;
  *(_OWORD *)(v32 + 152) = v34;
  *(_OWORD *)(v32 + 161) = *(_OWORD *)((char *)v84 + 9);
  long long v35 = v81[1];
  *(_OWORD *)(v32 + 72) = v81[0];
  *(_OWORD *)(v32 + 88) = v35;
  uint64_t v36 = MEMORY[0x263F8F500];
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v36;
  uint64_t v37 = v56;
  *(void *)(v32 + 32) = v50;
  *(void *)(v32 + 40) = v37;
  *(void *)(v32 + 48) = v16;
  *(void *)(v32 + 56) = v18;
  *(void *)(v32 + 64) = v54;
  *(_OWORD *)(v32 + 104) = v33;
  uint64_t v38 = sub_21915AF88();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v38;
  *(void *)(v39 + 24) = v36;
  sub_219159158();
  long long v71 = v81[0];
  char v72 = v81[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05930);
  sub_219157F48();
  *(void *)&long long v58 = MEMORY[0x263F1A420];
  uint64_t v40 = sub_218FFDF90((unint64_t *)&qword_267C05928, &qword_267C05930);
  uint64_t v69 = WitnessTable;
  uint64_t v70 = v40;
  *(void *)&long long v57 = MEMORY[0x263F18E48];
  uint64_t v56 = swift_getWitnessTable();
  sub_219158AA8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = *((void *)&v79 + 1);
  uint64_t v42 = *(void *)&v80[0];
  uint64_t v61 = *(void *)v78;
  long long v54 = *(_OWORD *)&v78[8];
  long long v53 = *(_OWORD *)&v78[24];
  long long v62 = *(_OWORD *)&v78[8];
  long long v63 = *(_OWORD *)&v78[24];
  long long v64 = *(_OWORD *)&v78[40];
  char v65 = v78[56];
  long long v66 = v79;
  uint64_t v67 = *(void *)&v80[0];
  char v68 = BYTE8(v80[0]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD01388);
  uint64_t v43 = sub_219157F48();
  uint64_t v44 = sub_218FFDF90(&qword_26AD01380, &qword_26AD01388);
  uint64_t v59 = v56;
  uint64_t v60 = v44;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)&v61, v43, (uint64_t)v81);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_219006724(v41, v42);
  uint64_t v45 = *((void *)&v83 + 1);
  uint64_t v46 = *(void *)&v84[0];
  long long v58 = *(_OWORD *)((char *)v81 + 8);
  *(_OWORD *)&v78[8] = *(_OWORD *)((char *)v81 + 8);
  long long v57 = *(_OWORD *)((char *)&v81[1] + 8);
  *(_OWORD *)&v78[24] = *(_OWORD *)((char *)&v81[1] + 8);
  *(void *)uint64_t v78 = *(void *)&v81[0];
  *(void *)&unsigned char v78[40] = *((void *)&v81[2] + 1);
  *(void *)&v78[48] = v82;
  v78[56] = BYTE8(v82);
  long long v79 = v83;
  *(void *)&v80[0] = *(void *)&v84[0];
  BYTE8(v80[0]) = BYTE8(v84[0]);
  sub_218FFDE04((uint64_t)v78, v43, v55);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_219006724(v45, v46);
}

double sub_219114AD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v56 = a7;
  uint64_t v55 = a6;
  uint64_t v47 = a4;
  uint64_t v49 = a2;
  uint64_t v50 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v14 = (char *)&v47 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v51 = (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190FBA6C((uint64_t)v68);
  uint64_t KeyPath = v69;
  uint64_t v54 = v70;
  uint64_t v52 = __swift_project_boxed_opaque_existential_1(v68, v69);
  uint64_t v17 = *(void (**)(char *))(a1 + 16);
  sub_219159BF8();
  v17(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  char v64 = 0;
  uint64_t v18 = *(void *)(a1 + 40);
  LOBYTE(v57) = *(unsigned char *)(a1 + 32);
  *((void *)&v57 + 1) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03A88);
  sub_219158FF8();
  LODWORD(v49) = v65;
  uint64_t v19 = *(void *)(a1 + 56);
  LOBYTE(v57) = *(unsigned char *)(a1 + 48);
  *((void *)&v57 + 1) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06E70);
  sub_219158FF8();
  v63[0] = v63[1];
  *(void *)&long long v57 = a3;
  uint64_t v20 = v47;
  *((void *)&v57 + 1) = v47;
  uint64_t v21 = a5;
  uint64_t v48 = a5;
  uint64_t v22 = v55;
  *(void *)&long long v58 = a5;
  *((void *)&v58 + 1) = v55;
  uint64_t v23 = v56;
  *(void *)&long long v59 = v56;
  uint64_t v24 = type metadata accessor for FlowStackSheetViewModifier();
  long long v25 = *(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  v25(&v57, a1, v24);
  uint64_t v26 = swift_allocObject();
  long long v27 = v59;
  *(_OWORD *)(v26 + 104) = v60;
  long long v28 = *(_OWORD *)v62;
  *(_OWORD *)(v26 + 120) = v61;
  *(_OWORD *)(v26 + 136) = v28;
  *(_OWORD *)(v26 + 145) = *(_OWORD *)&v62[9];
  long long v29 = v58;
  *(_OWORD *)(v26 + 56) = v57;
  *(_OWORD *)(v26 + 72) = v29;
  *(void *)(v26 + 16) = a3;
  *(void *)(v26 + 24) = v20;
  *(void *)(v26 + 32) = v21;
  *(void *)(v26 + 40) = v22;
  *(void *)(v26 + 48) = v23;
  *(_OWORD *)(v26 + 88) = v27;
  uint64_t v30 = v20;
  sub_2190E0BD0(v51, 1, &v64, v49, v63, (uint64_t)sub_2191160EC, v26, v20, (uint64_t)&v65);
  *(void *)&long long v57 = v65;
  DWORD2(v57) = v66;
  long long v58 = v67;
  uint64_t v54 = sub_2190E0C8C((uint64_t *)&v57, KeyPath, v54);
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  v25(&v57, a1, v24);
  uint64_t v31 = swift_allocObject();
  long long v32 = v59;
  *(_OWORD *)(v31 + 104) = v60;
  long long v33 = *(_OWORD *)v62;
  *(_OWORD *)(v31 + 120) = v61;
  *(_OWORD *)(v31 + 136) = v33;
  *(_OWORD *)(v31 + 145) = *(_OWORD *)&v62[9];
  long long v34 = v58;
  *(_OWORD *)(v31 + 56) = v57;
  *(_OWORD *)(v31 + 72) = v34;
  uint64_t v35 = a3;
  *(void *)(v31 + 16) = a3;
  *(void *)(v31 + 24) = v30;
  uint64_t v36 = v30;
  uint64_t v37 = v48;
  uint64_t v38 = v55;
  *(void *)(v31 + 32) = v48;
  *(void *)(v31 + 40) = v38;
  uint64_t v39 = v56;
  *(void *)(v31 + 48) = v56;
  *(_OWORD *)(v31 + 88) = v32;
  v25(&v57, a1, v24);
  uint64_t v40 = swift_allocObject();
  long long v41 = v59;
  *(_OWORD *)(v40 + 104) = v60;
  long long v42 = *(_OWORD *)v62;
  *(_OWORD *)(v40 + 120) = v61;
  *(_OWORD *)(v40 + 136) = v42;
  *(_OWORD *)(v40 + 145) = *(_OWORD *)&v62[9];
  double result = *(double *)&v57;
  long long v44 = v58;
  *(_OWORD *)(v40 + 56) = v57;
  *(_OWORD *)(v40 + 72) = v44;
  *(void *)(v40 + 16) = v35;
  *(void *)(v40 + 24) = v36;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v38;
  *(void *)(v40 + 48) = v39;
  *(_OWORD *)(v40 + 88) = v41;
  uint64_t v45 = v50;
  uint64_t v46 = KeyPath;
  *uint64_t v50 = v54;
  v45[1] = v46;
  *((unsigned char *)v45 + 16) = 2;
  v45[3] = sub_219115D98;
  v45[4] = v31;
  v45[5] = sub_219115E60;
  v45[6] = v40;
  return result;
}

uint64_t sub_219115010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14 = a1;
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190FBA6C((uint64_t)v42);
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  v28[1] = __swift_project_boxed_opaque_existential_1(v42, v43);
  (*(void (**)(uint64_t))(a2 + 16))(v14);
  char v38 = 0;
  uint64_t v18 = *(void *)(a2 + 40);
  LOBYTE(v31) = *(unsigned char *)(a2 + 32);
  *((void *)&v31 + 1) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03A88);
  sub_219158FF8();
  LOBYTE(v14) = v39;
  uint64_t v19 = *(void *)(a2 + 56);
  LOBYTE(v31) = *(unsigned char *)(a2 + 48);
  *((void *)&v31 + 1) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06E70);
  sub_219158FF8();
  v37[0] = v37[1];
  *(void *)&long long v31 = a3;
  *((void *)&v31 + 1) = a4;
  *(void *)&long long v32 = a5;
  *((void *)&v32 + 1) = a6;
  *(void *)&long long v33 = a7;
  uint64_t v20 = type metadata accessor for FlowStackSheetViewModifier();
  (*(void (**)(long long *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(&v31, a2, v20);
  uint64_t v21 = swift_allocObject();
  long long v22 = v33;
  *(_OWORD *)(v21 + 104) = v34;
  long long v23 = *(_OWORD *)v36;
  *(_OWORD *)(v21 + 120) = v35;
  *(_OWORD *)(v21 + 136) = v23;
  *(_OWORD *)(v21 + 145) = *(_OWORD *)&v36[9];
  long long v24 = v32;
  *(_OWORD *)(v21 + 56) = v31;
  *(_OWORD *)(v21 + 72) = v24;
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  *(void *)(v21 + 32) = a5;
  *(void *)(v21 + 40) = a6;
  *(void *)(v21 + 48) = a7;
  *(_OWORD *)(v21 + 88) = v22;
  sub_2190E0BD0((uint64_t)v17, 0, &v38, v14, v37, (uint64_t)sub_219115D64, v21, a4, (uint64_t)&v39);
  *(void *)&long long v31 = v39;
  DWORD2(v31) = v40;
  long long v32 = v41;
  uint64_t v25 = sub_2190E0C8C((uint64_t *)&v31, v29, v30);
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  *(void *)a8 = v25;
  *(void *)(a8 + 8) = KeyPath;
  *(unsigned char *)(a8 + 16) = 2;
  return result;
}

void sub_2191152F4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

void (*EnvironmentValues.isFlowStackSheetPresented.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((void *)v3 + 6) = v1;
  *((void *)v3 + 7) = sub_2191136A0();
  sub_219158238();
  char v4 = v3[40];
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v4;
  return sub_21911538C;
}

void sub_21911538C(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  uint64_t v5 = v3[1];
  v3[3] = v4;
  char v6 = *((unsigned char *)v3 + 16);
  v3[4] = v5;
  *((unsigned char *)v3 + 40) = v6;
  if (a2)
  {
    sub_219006450(v4, v5);
    sub_219158248();
    sub_219006724(*v3, v3[1]);
  }
  else
  {
    sub_219158248();
  }
  free(v3);
}

double sub_219115430@<D0>(uint64_t a1@<X8>)
{
  sub_2191136A0();
  sub_219158238();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

ValueMetadata *type metadata accessor for FlowStackSheetIsPresentedKey()
{
  return &type metadata for FlowStackSheetIsPresentedKey;
}

uint64_t type metadata accessor for FlowStackSheetViewModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2191154BC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(a1 + 104))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_219115538(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = (void *)(a1 + 64);
  char v6 = (void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    long long v8 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 88) = v8;
    (**(void (***)(void *, void *))(v8 - 8))(v5, v6);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  *(unsigned char *)(a1 + 104) = v7;
  return a1;
}

uint64_t sub_219115630(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    sub_219115754(a1 + 64);
    if (*(unsigned char *)(a2 + 104))
    {
      uint64_t v5 = *(void *)(a2 + 88);
      *(void *)(a1 + 88) = v5;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 64, a2 + 64);
      *(unsigned char *)(a1 + 104) = 1;
    }
    else
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 104) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_219115754(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_267C05890);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_2191157E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  if (a1 != a2)
  {
    sub_219115754(a1 + 64);
    long long v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  return a1;
}

uint64_t sub_219115878(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2191158C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_21911591C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_219115968()
{
  unint64_t result = qword_267C06E38;
  if (!qword_267C06E38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06E30);
    sub_219115A08();
    sub_218FFDF90(&qword_267C06E60, &qword_267C06E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06E38);
  }
  return result;
}

unint64_t sub_219115A08()
{
  unint64_t result = qword_267C06E40;
  if (!qword_267C06E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06E48);
    sub_2190AB290();
    sub_218FFDF90(&qword_267C06E50, &qword_267C06E58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06E40);
  }
  return result;
}

uint64_t sub_219115AA8()
{
  return sub_2190D8D24();
}

uint64_t sub_219115ACC(uint64_t a1)
{
  return sub_2190D946C(a1);
}

uint64_t sub_219115AF0()
{
  return 40;
}

__n128 sub_219115AFC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_219115B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2191140C0(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_219115B28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 160)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  }
  else {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 161) & ~v3), v1);
  return swift_deallocObject();
}

double sub_219115C20@<D0>(void *a1@<X8>)
{
  return sub_219114AD8((uint64_t)(v1 + 7), (uint64_t)v1+ ((*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80)), v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_219115C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_219115010(a1, (uint64_t)(v2 + 7), v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_219115C84()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 176)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  }
  else {
    swift_release();
  }
  return swift_deallocObject();
}

BOOL sub_219115CF8@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2190D8AF0();
  *a1 = result;
  return result;
}

uint64_t sub_219115D28()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_219115D64()
{
  return sub_2190D8458();
}

uint64_t sub_219115D98()
{
  return sub_219159008();
}

uint64_t objectdestroyTm_6()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 160)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  }
  else {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_219115E60()
{
  return sub_219159008();
}

uint64_t sub_219115EB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t Button.init<>(_:action:)()
{
  return swift_release();
}

unint64_t sub_219116178()
{
  unint64_t result = qword_267C06E78;
  if (!qword_267C06E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06E78);
  }
  return result;
}

uint64_t Button.init<>(_:role:action:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v4 - 8);
  sub_2190090C4(a2, (uint64_t)&v7[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_267C047B0);
  uint64_t v8 = a1;
  sub_219116178();
  sub_219159048();
  sub_218FFE158(a2, &qword_267C047B0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Button.init<>(_:localizer:action:)(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t Text.init(_:localizer:)(uint64_t (**a1)(uint64_t), uint64_t a2)
{
  uint64_t v3 = (*a1)(a2);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v3;
}

uint64_t Button.init<>(_:localizer:role:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v6 - 8);
  sub_2190090C4(a3, (uint64_t)&v9[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_267C047B0);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  sub_219159048();
  sub_218FFE158(a3, &qword_267C047B0);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Label.init<>(_:image:)()
{
  return sub_219116544();
}

uint64_t Label.init<>(_:systemImage:)()
{
  return sub_219116544();
}

uint64_t sub_219116544()
{
  return swift_release();
}

uint64_t sub_2191165E4@<X0>(uint64_t a1@<X8>)
{
  return sub_219116EF0(*(uint64_t **)(v1 + 16), a1);
}

uint64_t Label.init<>(_:localizer:image:)(uint64_t a1, uint64_t a2)
{
  return sub_2191166A4(a1, a2);
}

uint64_t sub_219116630@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_219158FA8();
  *a1 = result;
  return result;
}

uint64_t Label.init<>(_:localizer:systemImage:)(uint64_t a1, uint64_t a2)
{
  return sub_2191166A4(a1, a2);
}

uint64_t sub_2191166A4(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t sub_219116740@<X0>(uint64_t a1@<X8>)
{
  return sub_219117004(*(uint64_t (***)(unsigned char *))(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_21911675C@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_219158F08();
  *a1 = result;
  return result;
}

uint64_t Picker.init<>(_:selection:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v10 = sub_219159188();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v17 - v13, a2, v10, v12);
  uint64_t v19 = a1;
  unint64_t v15 = sub_219116178();
  sub_219116914((uint64_t)v14, a3, v17, (uint64_t)sub_2191188D4, v18, a6, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_219116914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  v14[4] = a3;
  v14[5] = a5;
  v14[0] = a4;
  v14[1] = a6;
  void v14[2] = a2;
  v14[3] = a7;
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = sub_219159188();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)v14 - v11, a1, v8, v10);
  ((void (*)(uint64_t))v14[0])(v12);
  sub_2191590C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

uint64_t Picker.init<>(_:localizer:selection:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v18 = a4;
  uint64_t v11 = sub_219159188();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v17 - v14, a3, v11, v13);
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  sub_219116914((uint64_t)v15, v18, v19, (uint64_t)sub_2191188DC, v20, a7, MEMORY[0x263F1A820]);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Section<>.init<A>(_:localizer:content:)(void (**a1)(uint64_t), uint64_t a2)
{
  return swift_release();
}

{
  (*a1)(a2);
  sub_219030858();
  sub_219159228();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Section<>.init(_:localizer:content:)(void (**a1)(uint64_t), uint64_t a2)
{
  return swift_release();
}

uint64_t Toggle.init<>(_:isOn:)()
{
  return swift_release();
}

uint64_t sub_219116EF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_219094EF0();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2191580D8();
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = result;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v5;
  return result;
}

uint64_t Toggle.init<>(_:localizer:isOn:)(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t sub_219117004@<X0>(uint64_t (**a1)(unsigned char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  sub_219030940(a2, (uint64_t)v9);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = v4(v9);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t View.navigationTitle(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_219117710(a1, a2, a3, (uint64_t)&type metadata for LocalizedNavigationTitleViewModifier);
}

uint64_t sub_2191170B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06E90);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06E98);
  MEMORY[0x270FA5388](v40);
  uint64_t v41 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06EA0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v10);
  char v38 = (char *)&v33 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - v13;
  long long v15 = v2[1];
  long long v54 = *v2;
  long long v55 = v15;
  long long v56 = v2[2];
  uint64_t v57 = *((void *)v2 + 6);
  uint64_t v16 = v15;
  char v17 = BYTE8(v15);
  sub_218FFE128(v15, SBYTE8(v15));
  char v18 = sub_2190FAE64(v16, v17);
  sub_218FFDDBC(v16, v17);
  if (v18)
  {
    type metadata accessor for _LocalizerOwner();
    sub_219094EF0();
    sub_2191580A8();
    swift_getKeyPath();
    sub_2191580C8();
    swift_release();
    swift_release();
    uint64_t v37 = v3;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    long long v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = v39;
    v19(v14, v39, v7);
    unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v36 = swift_allocObject();
    uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
    v22(v36 + v21, v14, v7);
    long long v23 = v38;
    v19(v38, v20, v7);
    uint64_t v35 = swift_allocObject();
    v22(v35 + v21, v23, v7);
    long long v24 = v34;
    v19(v34, v20, v7);
    uint64_t v25 = swift_allocObject();
    v22(v25 + v21, v24, v7);
    unint64_t v26 = v25 + ((v21 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v27 = v55;
    *(_OWORD *)unint64_t v26 = v54;
    *(_OWORD *)(v26 + 16) = v27;
    *(_OWORD *)(v26 + 32) = v56;
    *(void *)(v26 + 48) = v57;
    v46[0] = v43;
    v46[1] = v44;
    v47[0] = v45[0];
    *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)((char *)v45 + 9);
    uint64_t v48 = sub_219118314;
    uint64_t v49 = v36;
    uint64_t v50 = sub_219118348;
    uint64_t v51 = v35;
    uint64_t v52 = sub_21911837C;
    uint64_t v53 = v25;
    long long v28 = &qword_267C06EA8;
    sub_2190090C4((uint64_t)v46, v41, &qword_267C06EA8);
    swift_storeEnumTagMultiPayload();
    sub_2190FD254((uint64_t)&v54);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06EA8);
    sub_218FFDF90(&qword_267C06EB0, &qword_267C06EA8);
    sub_218FFDF90(&qword_267C06EB8, &qword_267C06E90);
    sub_2191584C8();
    uint64_t v29 = (char *)v46;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v39, v7);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = 0xD000000000000022;
    *(void *)(v30 + 24) = 0x80000002191811D0;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v14, v7);
    long long v31 = (uint64_t (**)())&v5[*(int *)(v3 + 52)];
    *long long v31 = sub_219008318;
    v31[1] = (uint64_t (*)())v30;
    long long v28 = &qword_267C06E90;
    sub_2190090C4((uint64_t)v5, v41, &qword_267C06E90);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06EA8);
    sub_218FFDF90(&qword_267C06EB0, &qword_267C06EA8);
    sub_218FFDF90(&qword_267C06EB8, &qword_267C06E90);
    sub_2191584C8();
    uint64_t v29 = v5;
  }
  return sub_218FFE158((uint64_t)v29, v28);
}

uint64_t View.navigationSubtitle(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_219117710(a1, a2, a3, (uint64_t)&type metadata for LocalizedNavigationSubtitleViewModifier);
}

uint64_t sub_219117710(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_219094EF0();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_2191580D8();
  uint64_t v11 = v10;
  uint64_t KeyPath = swift_getKeyPath();
  v15[0] = v9;
  v15[1] = v11;
  void v15[2] = KeyPath;
  char v16 = 0;
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  uint64_t v19 = v8;
  MEMORY[0x21D47F800](v15, a2, a4, a3);
  swift_release();
  sub_218FFDDBC(KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_219117804(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx011_JetEngine_aB0024LocalizedNavigationTitleC8Modifier33_2360066CC44703D6FE8597C16DE4267ELLVGAaBHPxAaBHD1__AhA0cK0HPyHCHCTm(a1, (uint64_t)&type metadata for LocalizedNavigationTitleViewModifier, (void (*)(void))sub_219117824);
}

unint64_t sub_219117824()
{
  unint64_t result = qword_267C06E80;
  if (!qword_267C06E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06E80);
  }
  return result;
}

uint64_t sub_219117878(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx011_JetEngine_aB0024LocalizedNavigationTitleC8Modifier33_2360066CC44703D6FE8597C16DE4267ELLVGAaBHPxAaBHD1__AhA0cK0HPyHCHCTm(a1, (uint64_t)&type metadata for LocalizedNavigationSubtitleViewModifier, (void (*)(void))sub_219117908);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx011_JetEngine_aB0024LocalizedNavigationTitleC8Modifier33_2360066CC44703D6FE8597C16DE4267ELLVGAaBHPxAaBHD1__AhA0cK0HPyHCHCTm(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return swift_getWitnessTable();
}

unint64_t sub_219117908()
{
  unint64_t result = qword_267C06E88;
  if (!qword_267C06E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06E88);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedNavigationSubtitleViewModifier()
{
  return &type metadata for LocalizedNavigationSubtitleViewModifier;
}

ValueMetadata *type metadata accessor for LocalizedNavigationTitleViewModifier()
{
  return &type metadata for LocalizedNavigationTitleViewModifier;
}

uint64_t sub_219117994()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2191179B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06EC8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06ED0);
  MEMORY[0x270FA5388](v40);
  uint64_t v41 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06ED8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v10);
  char v38 = (char *)&v33 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - v13;
  long long v15 = v2[1];
  long long v54 = *v2;
  long long v55 = v15;
  long long v56 = v2[2];
  uint64_t v57 = *((void *)v2 + 6);
  uint64_t v16 = v15;
  char v17 = BYTE8(v15);
  sub_218FFE128(v15, SBYTE8(v15));
  char v18 = sub_2190FAE64(v16, v17);
  sub_218FFDDBC(v16, v17);
  if (v18)
  {
    type metadata accessor for _LocalizerOwner();
    sub_219094EF0();
    sub_2191580A8();
    swift_getKeyPath();
    sub_2191580C8();
    swift_release();
    swift_release();
    uint64_t v37 = v3;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    long long v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = v39;
    v19(v14, v39, v7);
    unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v36 = swift_allocObject();
    uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
    v22(v36 + v21, v14, v7);
    long long v23 = v38;
    v19(v38, v20, v7);
    uint64_t v35 = swift_allocObject();
    v22(v35 + v21, v23, v7);
    long long v24 = v34;
    v19(v34, v20, v7);
    uint64_t v25 = swift_allocObject();
    v22(v25 + v21, v24, v7);
    unint64_t v26 = v25 + ((v21 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v27 = v55;
    *(_OWORD *)unint64_t v26 = v54;
    *(_OWORD *)(v26 + 16) = v27;
    *(_OWORD *)(v26 + 32) = v56;
    *(void *)(v26 + 48) = v57;
    v46[0] = v43;
    v46[1] = v44;
    v47[0] = v45[0];
    *(_OWORD *)((char *)v47 + 9) = *(_OWORD *)((char *)v45 + 9);
    uint64_t v48 = sub_2191183B0;
    uint64_t v49 = v36;
    uint64_t v50 = sub_2191184EC;
    uint64_t v51 = v35;
    uint64_t v52 = sub_219118668;
    uint64_t v53 = v25;
    long long v28 = &qword_267C06EE0;
    sub_2190090C4((uint64_t)v46, v41, &qword_267C06EE0);
    swift_storeEnumTagMultiPayload();
    sub_2190FD254((uint64_t)&v54);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06EE0);
    sub_218FFDF90(&qword_267C06EE8, &qword_267C06EE0);
    sub_218FFDF90(&qword_267C06EF0, &qword_267C06EC8);
    sub_2191584C8();
    uint64_t v29 = (char *)v46;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v39, v7);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = 0xD000000000000022;
    *(void *)(v30 + 24) = 0x80000002191811D0;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v14, v7);
    long long v31 = (uint64_t (**)())&v5[*(int *)(v3 + 52)];
    *long long v31 = sub_219030C8C;
    v31[1] = (uint64_t (*)())v30;
    long long v28 = &qword_267C06EC8;
    sub_2190090C4((uint64_t)v5, v41, &qword_267C06EC8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06EE0);
    sub_218FFDF90(&qword_267C06EE8, &qword_267C06EE0);
    sub_218FFDF90(&qword_267C06EF0, &qword_267C06EC8);
    sub_2191584C8();
    uint64_t v29 = v5;
  }
  return sub_218FFE158((uint64_t)v29, v28);
}

uint64_t sub_219117FF8(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = sub_219158308();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v15 = sub_218FFDF90(a3, a2);
  a4(v7, v9, v11 & 1, v13, v14, v15);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2191180D8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = sub_219158308();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v16 = sub_218FFDF90(a4, a3);
  a5(v8, v10, v12 & 1, v14, v15, v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2191181B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, void (*a6)(void *, uint64_t, void, uint64_t, unint64_t))
{
  long long v19 = *(_OWORD *)(a3 + 32);
  uint64_t v20 = *(void *)(a3 + 48);
  uint64_t v10 = (uint64_t (*)(uint64_t))v19;
  sub_2190FDFD8((uint64_t)&v19);
  uint64_t v11 = v10(a1);
  uint64_t v13 = v12;
  sub_2190FE010((uint64_t)&v19);
  v18[0] = v11;
  v18[1] = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v15 = sub_218FFDF90(a5, a4);
  unint64_t v16 = sub_219030858();
  a6(v18, v14, MEMORY[0x263F8D310], v15, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2191182AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2191182C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_219118308()
{
  return objectdestroy_9Tm_2(&qword_267C06EA0);
}

uint64_t sub_219118314()
{
  return sub_2191183CC(&qword_267C06EA0, &qword_267C06EC0, MEMORY[0x263F1AB80]);
}

uint64_t sub_21911833C()
{
  return objectdestroy_9Tm_2(&qword_267C06EA0);
}

uint64_t sub_219118348(uint64_t a1)
{
  return sub_219118508(a1, &qword_267C06EA0, &qword_267C06EC0, MEMORY[0x263F1AB80]);
}

uint64_t sub_219118370()
{
  return objectdestroy_15Tm_0(&qword_267C06EA0);
}

uint64_t sub_21911837C(uint64_t a1)
{
  return sub_219118684(a1, &qword_267C06EA0, &qword_267C06EC0, MEMORY[0x263F1ABA0]);
}

uint64_t sub_2191183A4()
{
  return objectdestroy_9Tm_2(&qword_267C06ED8);
}

uint64_t sub_2191183B0()
{
  return sub_2191183CC(&qword_267C06ED8, &qword_267C06EF8, MEMORY[0x270FADC78]);
}

uint64_t sub_2191183CC(uint64_t *a1, unint64_t *a2, void (*a3)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  return sub_219117FF8(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a1, a2, a3);
}

uint64_t sub_219118454()
{
  return objectdestroy_9Tm_2(&qword_267C06ED8);
}

uint64_t objectdestroy_9Tm_2(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_2191184EC(uint64_t a1)
{
  return sub_219118508(a1, &qword_267C06ED8, &qword_267C06EF8, MEMORY[0x270FADC78]);
}

uint64_t sub_219118508(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_2191180D8(a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

uint64_t sub_21911859C()
{
  return objectdestroy_15Tm_0(&qword_267C06ED8);
}

uint64_t objectdestroy_15Tm_0(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  sub_218FFDDBC(*(void *)(v1 + v5 + 16), *(unsigned char *)(v1 + v5 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_219118668(uint64_t a1)
{
  return sub_219118684(a1, &qword_267C06ED8, &qword_267C06EF8, MEMORY[0x270FADC88]);
}

uint64_t sub_219118684(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(void *, uint64_t, void, uint64_t, unint64_t))
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_2191181B4(a1, v4 + v10, v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8), a2, a3, a4);
}

unint64_t sub_219118748()
{
  unint64_t result = qword_267C06F00;
  if (!qword_267C06F00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06F08);
    sub_218FFDF90(&qword_267C06EB0, &qword_267C06EA8);
    sub_218FFDF90(&qword_267C06EB8, &qword_267C06E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06F00);
  }
  return result;
}

unint64_t sub_219118810()
{
  unint64_t result = qword_267C06F10;
  if (!qword_267C06F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267C06F18);
    sub_218FFDF90(&qword_267C06EE8, &qword_267C06EE0);
    sub_218FFDF90(&qword_267C06EF0, &qword_267C06EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C06F10);
  }
  return result;
}

uint64_t ShelfGridPadding.init(leading:trailing:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4 & 1;
  return result;
}

void ShelfGridPadding.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a2;
  *(unsigned char *)(a1 + 24) = 0;
}

uint64_t ShelfGridPadding.leading.getter()
{
  return *(void *)v0;
}

uint64_t ShelfGridPadding.leading.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridPadding.leading.modify())()
{
  return nullsub_1;
}

uint64_t ShelfGridPadding.trailing.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ShelfGridPadding.trailing.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridPadding.trailing.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for ShelfGridPadding()
{
  return &type metadata for ShelfGridPadding;
}

uint64_t static Transaction._loading.getter()
{
  sub_219159338();
  return sub_219157BA8();
}

uint64_t static Transaction.appleServicesLoading.getter()
{
  sub_219159338();
  return sub_219157BA8();
}

id ExternalURLActionImplementation.init()@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t ExternalURLActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21911982C(a1, a3);
}

uint64_t sub_219118A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_219159888();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_21915AF98();
  v4[18] = sub_21915AF88();
  uint64_t v7 = sub_21915AF48();
  v4[19] = v7;
  v4[20] = v6;
  return MEMORY[0x270FA2498](sub_219118B7C, v7, v6);
}

uint64_t sub_219118B7C()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F018D8]), sel_init);
  *(void *)(v0 + 168) = v1;
  objc_msgSend(v1, sel_setSensitive_, sub_21915A878() & 1);
  uint64_t v2 = sub_21915AF88();
  *(void *)(v0 + 176) = v2;
  if (v2)
  {
    swift_getObjectType();
    uint64_t v3 = sub_21915AF48();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  return MEMORY[0x270FA2498](sub_219118C58, v3, v5);
}

uint64_t sub_219118C58()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[16];
  uint64_t v3 = (void *)v0[12];
  uint64_t v4 = v0[11];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_219118D1C;
  uint64_t v5 = swift_continuation_init();
  sub_219118F64(v5, v3, v4, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_219118D1C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = v1[19];
    uint64_t v4 = v1[20];
    uint64_t v5 = sub_219118EDC;
  }
  else
  {
    (*(void (**)(void, void, void))(v1[15] + 32))(v1[10], v1[16], v1[14]);
    swift_release();
    uint64_t v3 = v1[19];
    uint64_t v4 = v1[20];
    uint64_t v5 = sub_219118E60;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_219118E60()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_219118EDC()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_219118F64(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_219157688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21915A888();
  uint64_t v11 = (void *)sub_219157648();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  aBlock[4] = sub_219119D98;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_219119274;
  aBlock[3] = &block_descriptor_4;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_openURL_configuration_completionHandler_, v11, a4, v13);
  _Block_release(v13);
}

uint64_t sub_219119100(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_219159888();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26AD03900);
    uint64_t v10 = swift_allocError();
    *uint64_t v11 = a2;
    id v12 = a2;
    return MEMORY[0x270FA2410](a3, v10);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x263F50978], v5, v7);
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(*(void *)(*(void *)(a3 + 64) + 40), v9, v5);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_219119274(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_21915AC28();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219119320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21911982C(a1, a3);
}

uint64_t sub_219119328(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a6;
  uint64_t v8 = sub_219159888();
  v6[3] = v8;
  v6[4] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  id v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  void v6[6] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_21911946C;
  return v12(v9);
}

uint64_t sub_21911946C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_219119610;
  }
  else {
    uint64_t v2 = sub_219119580;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_219119580()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_21915A9C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_219119610()
{
  uint64_t v1 = *(void **)(v0 + 56);
  sub_21915A9B8();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_219119688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21915B018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21915B008();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_21907A204(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21915AF48();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21911982C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04280);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21915A898();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  double v11 = MEMORY[0x270FA5388](v8);
  id v12 = *v2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = *(void *)(a2 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C04798);
  id v15 = v12;
  uint64_t v16 = sub_21915A9D8();
  uint64_t v17 = sub_21915B018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  char v18 = (void *)swift_allocObject();
  void v18[2] = 0;
  v18[3] = 0;
  uint64_t v18[4] = &unk_267C06FA8;
  v18[5] = v14;
  v18[6] = v16;
  swift_retain();
  sub_219119688((uint64_t)v7, (uint64_t)&unk_267C047A0, (uint64_t)v18);
  swift_release();
  return v16;
}

uint64_t sub_219119A70()
{
  return MEMORY[0x263F50D98];
}

uint64_t type metadata accessor for ExternalURLActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219119A94()
{
  uint64_t v1 = sub_21915A898();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_219119B38(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(sub_21915A898() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_218FF9AE0;
  return sub_219118A80(a1, v7, v8, v4);
}

uint64_t sub_219119C50()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219119C98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219119CD0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_21901C978;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_267C06FB8 + dword_267C06FB8);
  return v6(a1, v4);
}

uint64_t sub_219119D88()
{
  return swift_deallocObject();
}

uint64_t sub_219119D98(uint64_t a1, void *a2)
{
  return sub_219119100(a1, a2, *(void *)(v2 + 16));
}

id sub_219119DA0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x263F83930], 0);

  id v4 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x263F83958], 0);

  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_219119EB0(uint64_t a1)
{
  return sub_219119F48(a1, MEMORY[0x263F50D18]);
}

uint64_t sub_219119F30(uint64_t a1)
{
  return sub_219119F48(a1, MEMORY[0x263F50D20]);
}

uint64_t sub_219119F48(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return a2(ObjectType, v3);
}

uint64_t sub_219119FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_218FF96E8(a1, a2, a3, a4, MEMORY[0x263F50AD0]);
}

uint64_t View.dataObject<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DataObjectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a3);
  sub_21911A1C4((uint64_t)v7);
  swift_getWitnessTable();
  sub_219158B98();
  return swift_release();
}

uint64_t type metadata accessor for DataObjectBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21911A164()
{
  type metadata accessor for DataObjectBox();
  swift_getWitnessTable();
  return sub_2191580D8();
}

uint64_t sub_21911A1C4(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 88), a1);
  return v2;
}

uint64_t sub_21911A258()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_21911A2EC()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_21911A398()
{
  return swift_getWitnessTable();
}

void *sub_21911A444(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *sub_21911A474(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *sub_21911A4C4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_21911A504(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_21911A560(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for DataObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21911A5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  type metadata accessor for DataObjectBox();
  swift_getWitnessTable();
  if (a1)
  {
    uint64_t v6 = a1 + *(void *)(*(void *)a1 + 88);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
    return v7(a3, v6, a2);
  }
  else
  {
    uint64_t result = sub_2191580B8();
    __break(1u);
  }
  return result;
}

uint64_t sub_21911A6A8()
{
  return sub_21911AF14();
}

uint64_t EnvironmentValues.dispatchIntent.getter()
{
  sub_21907A990();
  return sub_219158238();
}

uint64_t IntentDispatchAction.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[9] = a3;
  v5[10] = a4;
  v5[7] = a1;
  v5[8] = a2;
  v5[11] = *v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04AA8);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[12] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_21911A7D4;
  return MEMORY[0x270F45790](v5 + 2, v6, v6);
}

uint64_t sub_21911A7D4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21911AB24;
  }
  else {
    uint64_t v2 = sub_21911A8E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21911A8E8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_21911A9AC;
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[7];
  return MEMORY[0x270F458F8](v8, v6, v4, v7, v5, v1, v2);
}

uint64_t sub_21911A9AC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_21911AB3C;
  }
  else {
    uint64_t v2 = sub_21911AAC0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21911AAC0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_21911AB24()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21911AB3C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t View.intentDispatcher(_:with:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  sub_219030940(a1, (uint64_t)v6);
  uint64_t v4 = swift_allocObject();
  sub_219018288(v6, v4 + 16);
  *(void *)(v4 + 56) = a2;
  swift_retain();
  sub_219158C58();
  swift_release();
  return swift_release();
}

uint64_t sub_21911AC80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_219159518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219030940(a2, (uint64_t)v15);
  uint64_t v8 = swift_allocObject();
  sub_219018288(v15, v8 + 16);
  uint64_t v9 = *a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04AA8);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = &unk_267C07118;
  v11[3] = v8;
  void v11[4] = v9;
  swift_retain();
  swift_retain();
  MEMORY[0x21D47FF00](v10, &unk_267C07120, v11, v10);
  uint64_t v12 = sub_219159BA8();
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = v12;
  return result;
}

uint64_t sub_21911AE2C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21911AE6C(uint64_t *a1)
{
  return sub_21911AC80(a1, v1 + 16);
}

uint64_t sub_21911AE78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_21911AE98, 0, 0);
}

uint64_t sub_21911AE98()
{
  sub_219030940(v0[3], v0[2]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t View.intentDispatcher(from:)()
{
  return sub_21911AF14();
}

uint64_t sub_21911AF14()
{
  swift_getKeyPath();
  swift_retain();
  sub_219158C58();
  swift_release();
  return swift_release();
}

uint64_t sub_21911AFAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_219159518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04AA8);
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = &unk_267C07108;
  void v10[3] = a2;
  void v10[4] = v8;
  swift_retain_n();
  MEMORY[0x21D47FF00](v9, &unk_267C04AB0, v10, v9);
  uint64_t v11 = sub_219159BA8();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = v11;
  return result;
}

uint64_t sub_21911B10C(uint64_t *a1)
{
  return sub_21911AFAC(a1, v1);
}

uint64_t sub_21911B114(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04AA8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_21901C978;
  return MEMORY[0x270F45790](a1, v3, v3);
}

uint64_t sub_21911B1D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_219159518();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04AA8);
  uint64_t result = sub_219159B38();
  if (result)
  {
    uint64_t v10 = *a1;
    uint64_t v11 = (void *)swift_allocObject();
    _OWORD v11[2] = &unk_267C07130;
    v11[3] = a2;
    void v11[4] = v10;
    swift_retain_n();
    MEMORY[0x21D47FF00](v8, &unk_267C07138, v11, v8);
    uint64_t v12 = sub_219159BA8();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *a1 = v12;
  }
  return result;
}

uint64_t View.intentDispatcher(with:implementations:)(uint64_t a1, void (*a2)(void))
{
  v5[3] = sub_21915A3C8();
  v5[4] = MEMORY[0x263F50BC8];
  __swift_allocate_boxed_opaque_existential_1Tm(v5);
  a2();
  View.intentDispatcher(_:with:)((uint64_t)v5, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

ValueMetadata *type metadata accessor for IntentDispatchAction()
{
  return &type metadata for IntentDispatchAction;
}

uint64_t sub_21911B3FC()
{
  return swift_getWitnessTable();
}

unint64_t sub_21911B46C()
{
  unint64_t result = qword_267C04300;
  if (!qword_267C04300)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C042D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C04300);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentDispatchActionKey()
{
  return &type metadata for IntentDispatchActionKey;
}

uint64_t sub_21911B4D8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_21911B4F8, 0, 0);
}

uint64_t sub_21911B4F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = &type metadata for _NoIntentDispatcherSet;
  *(void *)(v1 + 32) = sub_21911BE10();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_21911B56C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  v6[27] = a1;
  v6[28] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C070E0);
  v6[29] = swift_task_alloc();
  uint64_t v8 = sub_21915A3C8();
  v6[30] = v8;
  v6[31] = *(void *)(v8 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v9 = (void *)swift_task_alloc();
  v6[33] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_21911B6E4;
  return v11(a1);
}

uint64_t sub_21911B6E4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_21911B828, 0, 0);
  }
}

uint64_t sub_21911B828()
{
  if (v0[28])
  {
    uint64_t v1 = v0[31];
    sub_219030940(v0[27], (uint64_t)(v0 + 2));
    swift_retain();
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04AA8);
    int v3 = swift_dynamicCast();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    if (v3)
    {
      uint64_t v6 = v0[31];
      uint64_t v5 = v0[32];
      uint64_t v8 = v0[29];
      uint64_t v7 = v0[30];
      v4(v8, 0, 1, v7);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
      swift_retain();
      uint64_t v9 = (void *)swift_task_alloc();
      v0[34] = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_21911BA7C;
      return MEMORY[0x270F45790](v0 + 7, v2, v2);
    }
    else
    {
      uint64_t v11 = v0[29];
      v4(v11, 1, 1, v0[30]);
      sub_218FFE158(v11, &qword_267C070E0);
      return sub_21915B5B8();
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_21911BA7C()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_21911BD00;
  }
  else {
    uint64_t v2 = sub_21911BBAC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_21911BBAC()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[27];
  sub_219030940((uint64_t)(v0 + 7), (uint64_t)(v0 + 17));
  uint64_t v5 = MEMORY[0x263F50BC8];
  v0[15] = v3;
  v0[16] = v5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v0 + 12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_1Tm, v2, v3);
  sub_21911BDA8((uint64_t)(v0 + 17), (uint64_t)(v0 + 22));
  sub_21915A388();
  swift_release();
  sub_218FFE158((uint64_t)(v0 + 17), &qword_267C070E8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_219018288((long long *)v0 + 6, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_21911BD00()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[27];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_21911BDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C070E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21911BE10()
{
  unint64_t result = qword_267C070F8;
  if (!qword_267C070F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267C070F8);
  }
  return result;
}

uint64_t sub_21911BE64(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_21901C978;
  return sub_21911B114(a1);
}

uint64_t sub_21911BF04()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_21911BF3C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1 + 16;
  v4[1] = sub_21901C978;
  return MEMORY[0x270FA2498](sub_21911AE98, 0, 0);
}

uint64_t sub_21911BFF0(uint64_t *a1)
{
  return sub_21911B1D4(a1, v1);
}

uint64_t sub_21911BFF8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_21901C978;
  return sub_21911B114(a1);
}

ValueMetadata *type metadata accessor for _NoIntentDispatcherSet()
{
  return &type metadata for _NoIntentDispatcherSet;
}

uint64_t sub_21911C0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  long long v6[2] = a2;
  v6[3] = a4;
  return MEMORY[0x270FA2498](sub_21911C0CC, 0, 0);
}

uint64_t sub_21911C0CC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  sub_219159FC8();
  swift_task_dealloc();
  uint64_t v4 = sub_21915A2B8();
  sub_21911C4E4();
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, *MEMORY[0x263F50B80], v4);
  swift_willThrow();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_21911C1F4()
{
  return 0;
}

uint64_t sub_21911C318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v11;
  *uint64_t v11 = v6;
  void v11[4] = a5;
  v11[5] = a6;
  _OWORD v11[2] = a2;
  v11[3] = a4;
  v11[1] = sub_218FF9AE0;
  return MEMORY[0x270FA2498](sub_21911C0CC, 0, 0);
}

uint64_t sub_21911C3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *id v15 = v7;
  v15[1] = sub_21901C978;
  return MEMORY[0x270F45910](a1, a2, a3, a6, a4, a7, a5);
}

uint64_t sub_21911C4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270F45908](a1, a2, a5, a3, a6, a4);
}

uint64_t sub_21911C4D8()
{
  return sub_21911C1F4();
}

unint64_t sub_21911C4E4()
{
  unint64_t result = qword_267C07158[0];
  if (!qword_267C07158[0])
  {
    sub_21915A2B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267C07158);
  }
  return result;
}

uint64_t sub_21911C53C()
{
  sub_21911D548();
  sub_219158238();
  return v1;
}

double sub_21911C57C@<D0>(uint64_t a1@<X8>)
{
  sub_21911D548();
  sub_219158238();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_21911C5D4(uint64_t *a1)
{
  return sub_219158248();
}

uint64_t View.onViewAppearanceChange(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[0] = a1;
  v7[1] = a2;
  void v7[2] = swift_getKeyPath();
  v7[3] = 0;
  __int16 v8 = 0;
  MEMORY[0x21D47F800](v7, a3, &type metadata for _OnViewAppearanceChangeViewModifier, a4);
  return swift_release();
}

double sub_21911C6C0@<D0>(uint64_t a1@<X8>)
{
  sub_21911D548();
  sub_219158238();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t View.viewAppearance(_:)()
{
  return swift_release();
}

uint64_t sub_21911C7A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_21911C840()
{
  return swift_getWitnessTable();
}

uint64_t destroy for _OnViewAppearanceChangeViewModifier(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 33);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 32);
  return sub_219006718(v2, v3, v5, v4);
}

uint64_t initializeWithCopy for _OnViewAppearanceChangeViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 33);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 32);
  swift_retain();
  sub_219006444(v4, v5, v7, v6);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 33) = v6;
  return a1;
}

uint64_t assignWithCopy for _OnViewAppearanceChangeViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 32);
  sub_219006444(v5, v6, v8, v7);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 33);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v12 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = v7;
  sub_219006718(v9, v10, v12, v11);
  return a1;
}

uint64_t assignWithTake for _OnViewAppearanceChangeViewModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 33);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 33) = v5;
  sub_219006718(v6, v7, v9, v8);
  return a1;
}

ValueMetadata *type metadata accessor for _OnViewAppearanceChangeViewModifier()
{
  return &type metadata for _OnViewAppearanceChangeViewModifier;
}

uint64_t sub_21911CA50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21911CA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD031E8);
  MEMORY[0x270FA5388](v48);
  char v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03228);
  MEMORY[0x270FA5388](v59);
  uint64_t v49 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)&v47 - v7;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03240);
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD031F8);
  MEMORY[0x270FA5388](v51);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03238);
  MEMORY[0x270FA5388](v57);
  uint64_t v52 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (uint64_t)&v47 - v13;
  uint64_t v14 = *(void *)(v2 + 16);
  uint64_t v15 = *(void *)(v2 + 24);
  uint64_t v16 = *(unsigned __int8 *)(v2 + 32);
  int v17 = *(unsigned __int8 *)(v2 + 33);
  sub_219006444(v14, v15, v16, *(unsigned char *)(v2 + 33));
  uint64_t v18 = sub_2190F9FF0(v14, v15, v16 | (v17 << 8));
  uint64_t v20 = v19;
  char v22 = v21;
  sub_219006718(v14, v15, v16, v17);
  if (v20)
  {
    char v23 = v22 & 1;
    uint64_t v50 = *(void *)(v2 + 8);
    uint64_t v24 = swift_allocObject();
    long long v25 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v24 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v24 + 32) = v25;
    *(_WORD *)(v24 + 48) = *(_WORD *)(v2 + 32);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03290);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v10, v54, v26);
    long long v27 = &v10[*(int *)(v51 + 36)];
    *(void *)long long v27 = v18;
    *((void *)v27 + 1) = v20;
    v27[16] = v23;
    *((void *)v27 + 3) = sub_21911D4A0;
    *((void *)v27 + 4) = v24;
    v27[40] = 1;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v18;
    *(void *)(v28 + 24) = v20;
    *(unsigned char *)(v28 + 32) = v23;
    long long v29 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v28 + 40) = *(_OWORD *)v2;
    *(_OWORD *)(v28 + 56) = v29;
    *(_WORD *)(v28 + 72) = *(_WORD *)(v2 + 32);
    uint64_t v30 = v52;
    sub_2190090C4((uint64_t)v10, v52, &qword_26AD031F8);
    long long v31 = (void *)(v30 + *(int *)(v57 + 36));
    *long long v31 = 0;
    v31[1] = 0;
    void v31[2] = sub_21911D538;
    v31[3] = v28;
    sub_219006444(v14, v15, v16, v17);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_219006444(v14, v15, v16, v17);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_218FFE158((uint64_t)v10, &qword_26AD031F8);
    long long v32 = &qword_26AD03238;
    uint64_t v33 = v53;
    sub_219024A0C(v30, v53, &qword_26AD03238);
    sub_2190090C4(v33, v58, &qword_26AD03238);
    swift_storeEnumTagMultiPayload();
    sub_21911D334(&qword_26AD03230, &qword_26AD03238, (void (*)(void))sub_21911D270);
    sub_21911D334(&qword_26AD03220, &qword_26AD03228, (void (*)(void))sub_21911D3B4);
    sub_2191584C8();
    swift_release();
    swift_release();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v35 = swift_allocObject();
    long long v36 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v35 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v35 + 32) = v36;
    *(_WORD *)(v35 + 48) = *(_WORD *)(v2 + 32);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03290);
    uint64_t v38 = (uint64_t)v4;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v4, v54, v37);
    uint64_t v39 = (uint64_t (**)())&v4[*(int *)(v48 + 36)];
    *uint64_t v39 = sub_21911D214;
    v39[1] = (uint64_t (*)())v35;
    v39[2] = 0;
    void v39[3] = 0;
    uint64_t v40 = swift_allocObject();
    long long v41 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v40 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v40 + 32) = v41;
    *(_WORD *)(v40 + 48) = *(_WORD *)(v2 + 32);
    uint64_t v42 = (uint64_t)v4;
    uint64_t v43 = v49;
    sub_2190090C4(v42, v49, &qword_26AD031E8);
    long long v44 = (void *)(v43 + *(int *)(v59 + 36));
    void *v44 = 0;
    v44[1] = 0;
    _OWORD v44[2] = sub_21911D244;
    _OWORD v44[3] = v40;
    sub_219006444(v14, v15, v16, v17);
    swift_retain();
    sub_219006444(v14, v15, v16, v17);
    swift_retain();
    sub_218FFE158(v38, &qword_26AD031E8);
    long long v32 = &qword_26AD03228;
    uint64_t v45 = v50;
    sub_219024A0C(v43, v50, &qword_26AD03228);
    sub_2190090C4(v45, v58, &qword_26AD03228);
    swift_storeEnumTagMultiPayload();
    sub_21911D334(&qword_26AD03230, &qword_26AD03238, (void (*)(void))sub_21911D270);
    sub_21911D334(&qword_26AD03220, &qword_26AD03228, (void (*)(void))sub_21911D3B4);
    sub_2191584C8();
    uint64_t v34 = v45;
  }
  return sub_218FFE158(v34, v32);
}

uint64_t sub_21911D12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(void))
{
  sub_2190082A0();
  if (sub_21915B318() & 1) != 0 || (sub_21915B308() & 1) != 0 || (uint64_t result = sub_21915B328(), (result))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03698);
    uint64_t result = (uint64_t)MEMORY[0x21D47FB40](&v7, v6);
    if (v7 == 1) {
      return (*a4)(0);
    }
  }
  return result;
}

uint64_t sub_21911D1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21911CA6C(a1, a2);
}

uint64_t sub_21911D214()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_21911D244()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

unint64_t sub_21911D270()
{
  unint64_t result = qword_26AD031F0;
  if (!qword_26AD031F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD031F8);
    sub_218FFDF90(&qword_26AD03288, &qword_26AD03290);
    sub_218FFDF90(&qword_26AD03160, &qword_26AD03168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD031F0);
  }
  return result;
}

uint64_t sub_21911D334(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21911D3B4()
{
  unint64_t result = qword_26AD031E0;
  if (!qword_26AD031E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD031E8);
    sub_218FFDF90(&qword_26AD03288, &qword_26AD03290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD031E0);
  }
  return result;
}

uint64_t objectdestroyTm_7()
{
  swift_release();
  sub_219006718(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned char *)(v0 + 49));
  return swift_deallocObject();
}

unsigned __int8 *sub_21911D4A0(unsigned __int8 *result, unsigned char *a2)
{
  int v3 = *result;
  if ((v3 & 1) != 0 || *a2) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(v2 + 16))(*a2 | v3 ^ 1u);
  }
  return result;
}

uint64_t sub_21911D4E0()
{
  swift_release();
  swift_release();
  swift_release();
  sub_219006718(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(unsigned char *)(v0 + 73));
  return swift_deallocObject();
}

uint64_t sub_21911D538()
{
  return sub_21911D12C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (uint64_t (**)(void))(v0 + 40));
}

unint64_t sub_21911D548()
{
  unint64_t result = qword_26AD02CE0[0];
  if (!qword_26AD02CE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD02CE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for _IsViewAppearedKey()
{
  return &type metadata for _IsViewAppearedKey;
}

unint64_t sub_21911D5B0()
{
  unint64_t result = qword_26AD03248;
  if (!qword_26AD03248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD03250);
    sub_21911D334(&qword_26AD03230, &qword_26AD03238, (void (*)(void))sub_21911D270);
    sub_21911D334(&qword_26AD03220, &qword_26AD03228, (void (*)(void))sub_21911D3B4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD03248);
  }
  return result;
}

uint64_t sub_21911D674@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *a3;
  char v7 = *((unsigned char *)a3 + 8);
  uint64_t v8 = a3[2];
  char v9 = *((unsigned char *)a3 + 24);
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = v6;
  *(unsigned char *)(a6 + 24) = v7;
  *(void *)(a6 + 32) = v8;
  *(unsigned char *)(a6 + 40) = v9;
  *(void *)(a6 + 48) = a4;
  *(void *)(a6 + 56) = a5;
  return result;
}

uint64_t sub_21911D6A0()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_21911D6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_21911D72C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_21911D7C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_21911D830(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_21911D878(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for _ResolvedHorizontalShelfLayout()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21911D8E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21911D924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v4 = sub_219158578();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v43 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_219159288();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v8 = (_OWORD *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_219159298();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v38 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04D20);
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v12 = v40;
  unint64_t v13 = sub_21911E224();
  *(void *)&long long v51 = v11;
  *((void *)&v51 + 1) = MEMORY[0x263F8DB68];
  *(void *)&long long v52 = v12;
  *((void *)&v52 + 1) = v13;
  *(void *)&long long v53 = MEMORY[0x263F8DB70];
  uint64_t v35 = sub_2191591E8();
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v50 = v37;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_219159388();
  uint64_t v41 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v33 = (char *)v30 - v15;
  uint64_t v32 = swift_getWitnessTable();
  *(void *)&long long v51 = v14;
  *((void *)&v51 + 1) = v32;
  uint64_t v36 = MEMORY[0x263F1AD90];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v39 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v31 = (uint64_t)v30 - v20;
  long long v21 = v2[1];
  long long v51 = *v2;
  long long v52 = v21;
  long long v22 = v2[3];
  long long v53 = v2[2];
  long long v54 = v22;
  v30[1] = v53;
  char v55 = BYTE8(v53);
  sub_219159328();
  *uint64_t v8 = xmmword_21915F580;
  (*(void (**)(_OWORD *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B8C8], v42);
  uint64_t v23 = (uint64_t)v38;
  sub_2191592A8();
  if (*((uint64_t *)&v51 + 1) >= *(void *)(v51 + 16)) {
    uint64_t v24 = *(void *)(v51 + 16);
  }
  else {
    uint64_t v24 = *((void *)&v51 + 1);
  }
  sub_21906BFDC(v23, v24);
  sub_2191582A8();
  uint64_t v45 = v40;
  uint64_t v46 = v37;
  uint64_t v47 = &v51;
  sub_21906C67C();
  long long v25 = v33;
  sub_219159378();
  uint64_t v26 = v32;
  sub_219158BD8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v14);
  uint64_t v48 = v14;
  uint64_t v49 = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v31;
  sub_218FFDE04((uint64_t)v18, OpaqueTypeMetadata2, v31);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v39 + 8);
  v28(v18, OpaqueTypeMetadata2);
  sub_218FFDE04(v27, OpaqueTypeMetadata2, v44);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v27, OpaqueTypeMetadata2);
}

uint64_t sub_21911DE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04D20);
  unint64_t v21 = sub_21911E224();
  uint64_t v25 = v22;
  uint64_t v26 = MEMORY[0x263F8DB68];
  uint64_t v27 = a2;
  unint64_t v28 = v21;
  uint64_t v29 = MEMORY[0x263F8DB70];
  uint64_t v7 = sub_2191591E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&KeyPath - v12;
  uint64_t v25 = *(void *)a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 48) = v15;
  long long v16 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 80) = v16;
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a2;
  uint64_t v17[3] = a3;
  v17[4] = sub_21911E2D0;
  uint64_t v17[5] = v14;
  swift_bridgeObjectRetain();
  sub_21911E320(a1);
  sub_2191591C8();
  uint64_t v24 = a3;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v10, v7, (uint64_t)v13);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  sub_218FFDE04((uint64_t)v13, v7, v23);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v7);
}

uint64_t sub_21911E0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(uint64_t))(v12 + 48))(v9);
  sub_218FFDE04((uint64_t)v8, a2, (uint64_t)v11);
  unint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  sub_218FFDE04((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

unint64_t sub_21911E224()
{
  unint64_t result = qword_267C04D28;
  if (!qword_267C04D28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C04D28);
  }
  return result;
}

uint64_t sub_21911E280@<X0>(uint64_t a1@<X8>)
{
  return sub_21911DE84(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_21911E290()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21911E2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21911E0EC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_21911E2DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21911E314(void *a1)
{
  return sub_21906C648(a1, *(uint64_t (**)(void, void *))(v1 + 32));
}

uint64_t sub_21911E320(uint64_t a1)
{
  return a1;
}

uint64_t sub_21911E358()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21911E440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + *(int *)(sub_219159028() + 28)) = 0;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v6(a3, a1, a2);
}

uint64_t _TaskViewDefaultFailed.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _TaskViewPlaceholderWorking.init(placeholder:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_21915B378();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for _TaskViewPlaceholderWorking();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 44));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t type metadata accessor for _TaskViewPlaceholderWorking()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TaskView.init(_:task:working:failed:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15)
{
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  long long v38 = a12;
  long long v39 = a13;
  uint64_t v42 = a10;
  uint64_t v43 = a4;
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_21915A988();
  uint64_t v18 = sub_21915B378();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v35 - v20;
  long long v37 = *a1;
  uint64_t v36 = *((void *)a1 + 2);
  uint64_t v48 = a11;
  long long v49 = a12;
  long long v50 = a13;
  uint64_t v51 = a14;
  uint64_t v52 = a15;
  uint64_t v22 = (int *)type metadata accessor for TaskView();
  uint64_t v23 = a9 + v22[19];
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v24(v21, 1, 1, v17);
  sub_21911E838((uint64_t)v21);
  *(_OWORD *)a9 = v37;
  *(void *)(a9 + 16) = v36;
  v24(v21, 1, 1, v17);
  uint64_t v25 = sub_219159028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v23, v25);
  *(void *)(v23 + *(int *)(v25 + 28)) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v23, v21, v18);
  uint64_t v27 = (void *)(a9 + v22[20]);
  uint64_t v28 = v41;
  void *v27 = v40;
  v27[1] = v28;
  uint64_t v29 = (void *)(a9 + v22[21]);
  uint64_t v30 = v44;
  *uint64_t v29 = v43;
  v29[1] = v30;
  uint64_t v31 = (void *)(a9 + v22[22]);
  uint64_t v32 = v46;
  *uint64_t v31 = v45;
  v31[1] = v32;
  uint64_t v33 = (void *)(a9 + v22[23]);
  uint64_t v34 = v42;
  *uint64_t v33 = v47;
  v33[1] = v34;
  return result;
}

uint64_t type metadata accessor for TaskView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21911E838(uint64_t a1)
{
  swift_getTupleTypeMetadata2();
  sub_21915A988();
  uint64_t v2 = sub_21915B378();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - v5, a1, v2, v4);
  sub_219158FE8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_21911E958(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  swift_getTupleTypeMetadata2();
  sub_21915A988();
  sub_21915B378();
  uint64_t v3 = sub_219159028();
  return a2(v3);
}

uint64_t TaskView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v72 = a2;
  uint64_t v71 = sub_21915B018();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v69 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = *(void *)(a1 + 16);
  swift_getTupleTypeMetadata2();
  sub_21915A988();
  sub_21915B378();
  uint64_t v65 = sub_219159188();
  uint64_t v61 = *(void *)(v65 - 8);
  uint64_t v63 = *(void *)(v61 + 64);
  MEMORY[0x270FA5388](v65);
  long long v62 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v73 = (char *)&v51 - v8;
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v11 = sub_219159738();
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v91 = MEMORY[0x263F8E980];
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v88 = v10;
  *((void *)&v88 + 1) = v11;
  uint64_t v14 = v10;
  uint64_t v57 = v10;
  uint64_t v89 = v12;
  uint64_t v90 = WitnessTable;
  uint64_t v54 = v12;
  sub_2191590B8();
  uint64_t v56 = v9;
  uint64_t v53 = sub_2191584D8();
  uint64_t v55 = *(void *)(a1 + 40);
  uint64_t v15 = v55;
  sub_2191584D8();
  uint64_t v60 = sub_219158ED8();
  uint64_t v67 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)&v51 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C071E0);
  uint64_t v66 = sub_219157F48();
  uint64_t v68 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v59 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v64 = (uint64_t)&v51 - v19;
  uint64_t v75 = v74;
  uint64_t v76 = v14;
  uint64_t v77 = v9;
  uint64_t v78 = v15;
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v79 = v12;
  uint64_t v80 = v21;
  uint64_t v81 = v20;
  long long v82 = v3;
  uint64_t v22 = swift_getWitnessTable();
  v87[3] = v21;
  v87[4] = v22;
  v87[1] = swift_getWitnessTable();
  v87[2] = v20;
  uint64_t v53 = swift_getWitnessTable();
  sub_219158EC8();
  uint64_t v23 = *((void *)v3 + 2);
  long long v88 = *v3;
  uint64_t v89 = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04F68);
  MEMORY[0x21D47FB40](v87, v24);
  v86[1] = v87[0];
  uint64_t v25 = v73;
  sub_21911E958(a1, MEMORY[0x263F1B5C0]);
  uint64_t v26 = (uint64_t *)((char *)v3 + *(int *)(a1 + 80));
  uint64_t v27 = v26[1];
  uint64_t v52 = *v26;
  uint64_t v28 = *((void *)v3 + 2);
  long long v88 = *v3;
  uint64_t v89 = v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04F68);
  MEMORY[0x21D47FB40](v86, v29);
  uint64_t v30 = v86[0];
  uint64_t v31 = v61;
  uint64_t v32 = v62;
  uint64_t v33 = v25;
  uint64_t v34 = v65;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v62, v33, v65);
  unint64_t v35 = (*(unsigned __int8 *)(v31 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v36 = (v63 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v37 = (char *)swift_allocObject();
  uint64_t v38 = v57;
  *((void *)v37 + 2) = v74;
  *((void *)v37 + 3) = v38;
  uint64_t v39 = v55;
  *((void *)v37 + 4) = v56;
  *((void *)v37 + 5) = v39;
  *((void *)v37 + 6) = v54;
  *((void *)v37 + 7) = v21;
  *((void *)v37 + 8) = v20;
  *((void *)v37 + 9) = v30;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v37[v35], v32, v34);
  uint64_t v40 = &v37[v36];
  *(void *)uint64_t v40 = v52;
  *((void *)v40 + 1) = v27;
  uint64_t v85 = v53;
  swift_retain();
  uint64_t v41 = v60;
  uint64_t v42 = swift_getWitnessTable();
  sub_219120A5C();
  uint64_t v43 = v69;
  sub_21915AFB8();
  uint64_t v44 = (uint64_t)v59;
  uint64_t v45 = v58;
  sub_219158CF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v71);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v73, v34);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v41);
  uint64_t v46 = sub_218FFDF90(&qword_267C07200, &qword_267C071E0);
  uint64_t v83 = v42;
  uint64_t v84 = v46;
  uint64_t v47 = v66;
  swift_getWitnessTable();
  uint64_t v48 = v64;
  sub_218FFDE04(v44, v47, v64);
  long long v49 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
  v49(v44, v47);
  sub_218FFDE04(v48, v47, v72);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v48, v47);
}

uint64_t sub_21911F1B8@<X0>(uint64_t a1@<X0>, void (**a2)(void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v112 = a9;
  uint64_t v125 = a2;
  uint64_t v126 = a3;
  uint64_t v127 = a4;
  uint64_t v128 = a5;
  uint64_t v129 = a6;
  uint64_t v130 = a7;
  uint64_t v107 = a7;
  uint64_t v111 = a8;
  uint64_t v131 = a8;
  uint64_t v104 = type metadata accessor for TaskView();
  uint64_t v90 = *(void *)(v104 - 8);
  uint64_t v86 = *(void *)(v90 + 64);
  MEMORY[0x270FA5388](v104);
  uint64_t v89 = (char *)v83 - v14;
  uint64_t v94 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = (char *)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v92 = (uint64_t)v83 - v18;
  uint64_t v87 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v85 = (char *)v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_219159738();
  uint64_t v124 = MEMORY[0x263F8E980];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v99 = a3;
  uint64_t v125 = (void (**)(void, void))a3;
  uint64_t v126 = v21;
  v83[2] = v21;
  uint64_t v98 = a6;
  uint64_t v127 = a6;
  uint64_t v128 = WitnessTable;
  v83[1] = WitnessTable;
  uint64_t v23 = sub_2191590B8();
  uint64_t v91 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v84 = (char *)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v88 = (uint64_t)v83 - v26;
  uint64_t v97 = (uint64_t)*(a2 - 1);
  MEMORY[0x270FA5388](v27);
  unint64_t v96 = (char *)v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = v29;
  uint64_t v30 = sub_2191584D8();
  char v101 = *(void (***)(void, void))(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v100 = (char *)v83 - v31;
  uint64_t v32 = a4;
  uint64_t v95 = *(char **)(a4 - 8);
  MEMORY[0x270FA5388](v33);
  unint64_t v35 = (char *)v83 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v103 = (char *)v83 - v37;
  uint64_t v102 = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v39 = sub_21915A988();
  uint64_t v40 = sub_21915B378();
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v42 = (char *)v83 - v41;
  uint64_t v110 = a5;
  uint64_t v109 = sub_2191584D8();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v44 = (char *)v83 - v43;
  uint64_t v45 = v104;
  uint64_t v46 = v105;
  sub_21911E958(v104, MEMORY[0x263F1B5B8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v42, 1, v39) == 1)
  {
    (*(void (**)(void))(v46 + *(int *)(v45 + 84)))();
    uint64_t v47 = (uint64_t)v103;
    uint64_t v48 = v107;
    sub_218FFDE04((uint64_t)v35, v32, (uint64_t)v103);
    long long v49 = (void (*)(char *, uint64_t))*((void *)v95 + 1);
    v49(v35, v32);
    sub_218FFDE04(v47, v32, (uint64_t)v35);
    uint64_t v50 = swift_getWitnessTable();
    uint64_t v51 = (uint64_t)v100;
    sub_219050FE4((uint64_t)v35, v32);
    v49(v35, v32);
    uint64_t v113 = v48;
    uint64_t v114 = v50;
    swift_getWitnessTable();
    uint64_t v52 = v111;
    sub_219050FE4(v51, v30);
    v101[1](v51, v30);
    v49(v103, v32);
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v54 = v46;
    uint64_t v55 = v45;
    uint64_t v95 = v44;
    uint64_t v103 = (char *)v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v101 = *(void (***)(void, void))v42;
      uint64_t v56 = v101;
      uint64_t v57 = v55;
      unint64_t v100 = *(char **)(v54 + *(int *)(v55 + 88));
      uint64_t v58 = v90;
      uint64_t v59 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v54, v57);
      unint64_t v60 = (*(unsigned __int8 *)(v58 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      uint64_t v61 = (char *)swift_allocObject();
      uint64_t v62 = v99;
      *((void *)v61 + 2) = v102;
      *((void *)v61 + 3) = v62;
      uint64_t v63 = v110;
      *((void *)v61 + 4) = v32;
      *((void *)v61 + 5) = v63;
      uint64_t v48 = v107;
      *((void *)v61 + 6) = v98;
      *((void *)v61 + 7) = v48;
      uint64_t v53 = v111;
      *((void *)v61 + 8) = v111;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v61[v60], v59, v57);
      uint64_t v64 = (uint64_t)v93;
      ((void (*)(void (**)(void, void), uint64_t (*)(), char *))v100)(v56, sub_219125108, v61);
      swift_release();
      uint64_t v65 = v92;
      sub_218FFDE04(v64, v63, v92);
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
      v66(v64, v63);
      sub_218FFDE04(v65, v63, v64);
      uint64_t v67 = swift_getWitnessTable();
      uint64_t v122 = v48;
      uint64_t v123 = v67;
      uint64_t v68 = (uint64_t)v103;
      swift_getWitnessTable();
      uint64_t v44 = v95;
      sub_218FFCBB0(v64, v68, v63);

      v66(v64, v63);
      v66(v65, v63);
    }
    else
    {
      uint64_t v69 = *(void (***)(void, void))v42;
      uint64_t v70 = v96;
      (*(void (**)(char *, char *, void (**)(void, void)))(v97 + 32))(v96, &v42[*(int *)(TupleTypeMetadata2 + 48)], v102);
      uint64_t v71 = v85;
      (*(void (**)(char *))(v54 + *(int *)(v55 + 92)))(v70);
      uint64_t v117 = v69;
      sub_219159748();
      uint64_t v117 = v125;
      uint64_t v72 = (uint64_t)v84;
      uint64_t v73 = v99;
      sub_219158CC8();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v71, v73);
      uint64_t v74 = v106;
      uint64_t v75 = swift_getWitnessTable();
      uint64_t v76 = v88;
      sub_218FFDE04(v72, v74, v88);
      uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      v77(v72, v74);
      sub_218FFDE04(v76, v74, v72);
      uint64_t v78 = (uint64_t)v100;
      uint64_t v48 = v107;
      sub_218FFCBB0(v72, v32, v74);
      v77(v72, v74);
      uint64_t v115 = v48;
      uint64_t v116 = v75;
      uint64_t v79 = (uint64_t)v103;
      swift_getWitnessTable();
      uint64_t v44 = v95;
      uint64_t v53 = v111;
      sub_219050FE4(v78, v79);
      v101[1](v78, v79);
      v77(v76, v74);
      (*(void (**)(char *, void))(v97 + 8))(v96, v102);
    }
  }
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v120 = v48;
  uint64_t v121 = v80;
  uint64_t v118 = swift_getWitnessTable();
  uint64_t v119 = v53;
  uint64_t v81 = v109;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v44, v81, v112);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v44, v81);
}

uint64_t sub_21911FE8C@<X0>(uint64_t a1@<X8>)
{
  return sub_21911F1B8(*(void *)(v1 + 72), *(void (***)(void, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

uint64_t sub_21911FEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a8;
  uint64_t v23 = a1;
  swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_21915A988();
  uint64_t v15 = sub_21915B378();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v21 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(void *)(v14 - 8) + 56))((char *)&v21 - v18, 1, 1, v14, v17);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v30 = v22;
  type metadata accessor for TaskView();
  sub_2191251D0((uint64_t)v19);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_219120024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  v5[7] = swift_getTupleTypeMetadata2();
  v5[8] = sub_21915A988();
  uint64_t v6 = sub_21915B378();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  sub_21915AF98();
  v5[14] = sub_21915AF88();
  uint64_t v8 = sub_21915AF48();
  v5[15] = v8;
  v5[16] = v7;
  return MEMORY[0x270FA2498](sub_219120174, v8, v7);
}

uint64_t sub_219120174()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  v0[17] = sub_219159188();
  MEMORY[0x21D47FB40]();
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = (uint64_t *)v0[13];
  if (v4 == 1)
  {
    (*(void (**)(void, void))(v0[10] + 8))(v0[13], v0[9]);
LABEL_10:
    uint64_t v12 = (void *)v0[12];
    unint64_t v13 = (int *)v0[4];
    uint64_t v14 = (char *)v12 + *(int *)(v0[7] + 48);
    *uint64_t v12 = v0[2];
    uint64_t v16 = (uint64_t (*)(char *))((char *)v13 + *v13);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[19] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_219120414;
    return v16(v14);
  }
  uint64_t v6 = v0[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v6);
    goto LABEL_10;
  }
  uint64_t v7 = *v5;
  uint64_t v8 = (char *)v5 + *(int *)(v0[7] + 48);
  if (v7 != v0[2])
  {
    (*(void (**)(char *))(*(void *)(v0[6] - 8) + 8))(v8);
    goto LABEL_10;
  }
  uint64_t v9 = v0[6];
  swift_release();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_219120414()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_219120628;
  }
  else {
    uint64_t v5 = sub_219120550;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_219120550()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  swift_release();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v3);
  sub_219159128();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_219120628()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = (void *)v0[11];
  uint64_t v4 = v0[8];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v4);
  sub_219159128();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_219120708()
{
  uint64_t v1 = *(void *)(v0 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = sub_21915A988();
  sub_21915B378();
  uint64_t v4 = (int *)(sub_219159188() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  swift_release();
  swift_release();
  uint64_t v6 = (id *)(v0 + v5 + v4[10]);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v6, 1, v3))
  {
    if (swift_getEnumCaseMultiPayload() == 1) {

    }
    else {
      (*(void (**)(char *, uint64_t))(*(void *)(v1 - 8) + 8))((char *)v6 + *(int *)(TupleTypeMetadata2 + 48), v1);
    }
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2191208C4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_getTupleTypeMetadata2();
  sub_21915A988();
  sub_21915B378();
  uint64_t v3 = *(void *)(sub_219159188() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = v0 + v4;
  uint64_t v7 = (uint64_t *)(v0 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_218FF9AE0;
  return sub_219120024(v5, v6, v8, v9, v2);
}

unint64_t sub_219120A5C()
{
  unint64_t result = qword_267C071F8;
  if (!qword_267C071F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C071F8);
  }
  return result;
}

uint64_t _TaskViewDefaultWorking.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_219158298();
  uint64_t v22 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04380);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - v10;
  char v23 = 0;
  sub_219158FE8();
  int v21 = v24;
  unint64_t v20 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v17 = swift_getKeyPath();
  uint64_t v16 = swift_getKeyPath();
  sub_219158288();
  sub_219159338();
  sub_219157BA8();
  if (sub_219157B98())
  {
    sub_219159348();
    swift_release();
  }
  swift_release();
  unint64_t v12 = sub_219101C28();
  sub_219157AF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  uint64_t v24 = v2;
  unint64_t v25 = v12;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = sub_219157C98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(void *)a1 = sub_218FFB724;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(unsigned char *)(a1 + 24) = v21;
  uint64_t v15 = KeyPath;
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 40) = v15;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v18;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v17;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = v16;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = v13;
  return result;
}

uint64_t sub_219120E08@<X0>(uint64_t a1@<X8>)
{
  return _TaskViewDefaultWorking.body.getter(a1);
}

uint64_t _TaskViewPlaceholderWorking.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v40 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (uint64_t)&v33 - v8;
  uint64_t v37 = v9;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = sub_21915B378();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v34 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2191584D8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v38 = v18;
  uint64_t v39 = v19;
  double v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v33 - v21;
  uint64_t v23 = v3;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v14, v3, v11, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v24 = *(void *)(v37 + 32);
    unint64_t v25 = sub_219121258();
    sub_218FFCBB0(v25, v4, (uint64_t)&type metadata for _TaskViewDefaultWorking);
  }
  else
  {
    uint64_t v26 = v34;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v34, v14, v10);
    uint64_t v27 = v37;
    (*(void (**)(char *))(v23 + *(int *)(v37 + 44)))(v26);
    uint64_t v24 = *(void *)(v27 + 32);
    uint64_t v28 = v35;
    sub_218FFDE04((uint64_t)v6, v4, v35);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v36 + 8);
    v29(v6, v4);
    sub_218FFDE04(v28, v4, (uint64_t)v6);
    sub_219121258();
    sub_219050FE4((uint64_t)v6, v4);
    v29(v6, v4);
    v29((char *)v28, v4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v26, v10);
  }
  unint64_t v30 = sub_219121258();
  uint64_t v41 = v24;
  unint64_t v42 = v30;
  uint64_t v31 = v38;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v22, v31, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v22, v31);
}

unint64_t sub_219121258()
{
  unint64_t result = qword_267C07208;
  if (!qword_267C07208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07208);
  }
  return result;
}

uint64_t _TaskViewDefaultFailed.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  id v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  sub_219047F50((uint64_t)v5, a1);
  uint64_t v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C04588) + 36);
  *(void *)uint64_t v11 = KeyPath;
  *(unsigned char *)(v11 + 8) = 2;
  return sub_219101DB0((uint64_t)v5);
}

uint64_t sub_2191213A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03478);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v1;
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  id v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  uint64_t KeyPath = swift_getKeyPath();
  sub_219047F50((uint64_t)v5, a1);
  uint64_t v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C04588) + 36);
  *(void *)uint64_t v11 = KeyPath;
  *(unsigned char *)(v11 + 8) = 2;
  return sub_219101DB0((uint64_t)v5);
}

uint64_t TaskView.init<>(_:task:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15 = *(void *)(a1 + 16);
  long long v25 = *(_OWORD *)a1;
  uint64_t v26 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04390);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04398);
  uint64_t v18 = sub_218FFDF90(&qword_267C043A0, &qword_267C04390);
  uint64_t v19 = sub_218FFDF90(&qword_267C043A8, &qword_267C04398);
  *(void *)&long long v22 = v17;
  *((void *)&v22 + 1) = a8;
  *(void *)&long long v21 = a7;
  *((void *)&v21 + 1) = v16;
  return TaskView.init(_:task:working:failed:content:)(&v25, a2, a3, (uint64_t)j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, (uint64_t)sub_219046140, 0, a4, a9, a5, a6, v21, v22, v18, v19);
}

uint64_t TaskView.init<>(_:task:placeholder:content:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v48 = a4;
  uint64_t v49 = a9;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v42 = a10;
  uint64_t v13 = sub_21915B378();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  double v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v19 = a1;
  uint64_t v47 = a1;
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = v19[2];
  *(void *)&long long v54 = v21;
  *((void *)&v54 + 1) = v20;
  uint64_t v55 = v22;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  uint64_t v41 = v13;
  v23(v18, a4, v13, v16);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v25 = (v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = a7;
  uint64_t v27 = v43;
  *((void *)v26 + 3) = v43;
  *((void *)v26 + 4) = a10;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v26[v24], v18, v13);
  uint64_t v28 = (uint64_t *)&v26[v25];
  uint64_t v30 = v44;
  uint64_t v29 = v45;
  *uint64_t v28 = v44;
  v28[1] = v29;
  swift_retain();
  swift_retain();
  uint64_t v31 = v29;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04390);
  uint64_t v32 = sub_2191584D8();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04398);
  uint64_t v34 = sub_218FFDF90(&qword_267C043A0, &qword_267C04390);
  uint64_t v35 = v42;
  uint64_t v52 = v42;
  uint64_t v53 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = sub_218FFDF90(&qword_267C043A8, &qword_267C04398);
  *(void *)&long long v40 = v33;
  *((void *)&v40 + 1) = v35;
  *(void *)&long long v39 = v27;
  *((void *)&v39 + 1) = v32;
  TaskView.init(_:task:working:failed:content:)(&v54, v50, v51, (uint64_t)sub_219121F4C, (uint64_t)v26, (uint64_t)sub_219046140, 0, v30, v49, v31, v46, v39, v40, WitnessTable, v37);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v48, v41);
  swift_release();
  return swift_release();
}

uint64_t sub_2191218A4@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v43 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v42 = a7;
  uint64_t v37 = *(void *)(a5 - 8);
  uint64_t v38 = a1;
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_21915B378();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04390);
  uint64_t v22 = sub_2191584D8();
  uint64_t v40 = *(void *)(v22 - 8);
  uint64_t v41 = v22;
  double v23 = MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v35 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v17, v38, v14, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    char v46 = 0;
    sub_219158FE8();
    char v26 = (char)v47;
    uint64_t v27 = v48;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v29 = swift_getKeyPath();
    uint64_t v30 = (void *)swift_getKeyPath();
    uint64_t v47 = sub_218FFB724;
    uint64_t v48 = 0;
    char v49 = 1;
    char v50 = v26;
    uint64_t v51 = v27;
    uint64_t v52 = KeyPath;
    char v53 = 0;
    uint64_t v54 = v29;
    char v55 = 0;
    uint64_t v56 = v30;
    char v57 = 0;
    sub_218FFDF90(&qword_267C043A0, &qword_267C04390);
    sub_218FFCBB0((uint64_t)&v47, a5, v39);
    sub_218FFDDB4();
    swift_release();
    sub_218FFDDBC(KeyPath, 0);
    j__swift_release(v29, 0);
    sub_218FFDD40(v30, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, a4);
    v36(v21);
    sub_218FFDE04((uint64_t)v10, a5, (uint64_t)v13);
    uint64_t v31 = *(void (**)(char *, uint64_t))(v37 + 8);
    v31(v10, a5);
    sub_218FFDE04((uint64_t)v13, a5, (uint64_t)v10);
    sub_218FFDF90(&qword_267C043A0, &qword_267C04390);
    sub_219050FE4((uint64_t)v10, a5);
    v31(v10, a5);
    v31(v13, a5);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, a4);
  }
  uint64_t v32 = sub_218FFDF90(&qword_267C043A0, &qword_267C04390);
  uint64_t v44 = v43;
  uint64_t v45 = v32;
  uint64_t v33 = v41;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v25, v33, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v25, v33);
}

uint64_t sub_219121E00()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_21915B378() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, v1)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219121F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(sub_21915B378() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void (**)(char *))((char *)v1 + v8);
  uint64_t v10 = *(void *)((char *)v1 + v8 + 8);
  return sub_2191218A4((uint64_t)v1 + v7, v9, v10, v3, v4, v5, a1);
}

uint64_t TaskView.init<>(task:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_219159168();
  return TaskView.init<>(_:task:content:)((uint64_t)v17, a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t TaskView.init<>(task:placeholder:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v21 = a5;
  uint64_t v22 = a7;
  uint64_t v16 = sub_21915B378();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v21 - v18;
  uint64_t v23 = 0;
  sub_219159168();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a3, v16);
  TaskView.init<>(_:task:placeholder:content:)(v24, a1, a2, (uint64_t)v19, a4, v21, a6, v22, a9, a8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
}

uint64_t TaskView.init<A>(task:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  sub_219159168();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  void v19[5] = a8;
  v19[6] = a10;
  v19[7] = a1;
  v19[8] = a2;
  return TaskView.init<>(_:task:content:)((uint64_t)v21, (uint64_t)&unk_267C07218, (uint64_t)v19, a3, a4, a5, a6, a8, a9);
}

uint64_t sub_2191222E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a6;
  v8[6] = a8;
  v8[3] = a2;
  void v8[4] = a3;
  void v8[2] = a1;
  sub_21915AF98();
  v8[7] = sub_21915AF88();
  uint64_t v10 = sub_21915AF48();
  v8[8] = v10;
  v8[9] = v9;
  return MEMORY[0x270FA2498](sub_219122388, v10, v9);
}

uint64_t sub_219122388()
{
  *(void *)(v0 + 80) = (*(uint64_t (**)(void))(v0 + 24))();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_219122438;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x270F462E0](v4, v2, v3);
}

uint64_t sub_219122438()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_2191252EC;
  }
  else {
    uint64_t v5 = sub_2191252E8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_219122574()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2191225AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_21901C978;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267C07210 + dword_267C07210);
  return v12(a1, v9, v10, v4, v5, v6, v7, v8);
}

uint64_t TaskView.init<A>(task:placeholder:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v22 = a2;
  uint64_t v23 = a8;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v24 = a9;
  uint64_t v15 = sub_21915B378();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v21 - v17;
  uint64_t v27 = 0;
  sub_219159168();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a6;
  v19[3] = a7;
  v19[4] = v23;
  void v19[5] = a10;
  v19[6] = a11;
  v19[7] = a1;
  v19[8] = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
  TaskView.init<>(_:task:placeholder:content:)(v28, (uint64_t)&unk_267C07228, (uint64_t)v19, (uint64_t)v18, v25, v26, a6, a7, v24, a10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
}

uint64_t sub_219122834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a6;
  v8[6] = a8;
  v8[3] = a2;
  void v8[4] = a3;
  void v8[2] = a1;
  sub_21915AF98();
  v8[7] = sub_21915AF88();
  uint64_t v10 = sub_21915AF48();
  v8[8] = v10;
  v8[9] = v9;
  return MEMORY[0x270FA2498](sub_2191228D4, v10, v9);
}

uint64_t sub_2191228D4()
{
  *(void *)(v0 + 80) = (*(uint64_t (**)(void))(v0 + 24))();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_219122984;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x270F462E0](v4, v2, v3);
}

uint64_t sub_219122984()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_219122B30;
  }
  else {
    uint64_t v5 = sub_219122AC0;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_219122AC0()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_219122B30()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_219122BA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_218FF9AE0;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_267C07220 + dword_267C07220);
  return v12(a1, v9, v10, v4, v5, v6, v7, v8);
}

uint64_t sub_219122C90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219122CE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219122D00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219122D4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219122D68()
{
  swift_getTupleTypeMetadata2();
  sub_21915A988();
  sub_21915B378();
  uint64_t result = sub_219159028();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_219122E4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  unint64_t v7 = v5 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v5 + 8;
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v4 + 64) <= 8) {
    unint64_t v9 = 8;
  }
  else {
    unint64_t v9 = ((v5 + 8) & ~(unint64_t)v5) + *(void *)(v4 + 64);
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  BOOL v11 = v5 <= 7u && (v5 & 0x100000) == 0;
  if (v11
    && (((((((v7 & (v5 + 24)) + (v9 & 0xFFFFFFFFFFFFFFF8) + 16 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 <= 0x18)
  {
    uint64_t v12 = a1;
    uint64_t v33 = v3;
    uint64_t v13 = a2[2];
    a1[1] = a2[1];
    a1[2] = v13;
    uint64_t v14 = v7 & ((unint64_t)a1 + 31);
    uint64_t v15 = v7 & ((unint64_t)a2 + 31);
    unsigned int v16 = *(unsigned __int8 *)(v15 + v9);
    swift_retain();
    swift_retain();
    if (v16 > 1)
    {
      unint64_t v18 = v9 + 1;
      memcpy((void *)v14, (const void *)v15, v9 + 1);
      unint64_t v17 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else
    {
      unint64_t v18 = v9 + 1;
      unint64_t v17 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v16 == 1)
      {
        id v19 = *(id *)v15;
        id v20 = *(id *)v15;
        *(void *)uint64_t v14 = v19;
        *(unsigned char *)(v14 + v9) = 1;
      }
      else
      {
        *(void *)uint64_t v14 = *(void *)v15;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))((v8 + v14) & ~v6, (v8 + v15) & ~v6, v33);
        *(unsigned char *)(v14 + v9) = 0;
      }
    }
    *(void *)(((v14 | 7) + v18) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v15 | 7) + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)(v17 + v14);
    uint64_t v22 = *(void *)(v17 + v15 + 8);
    *uint64_t v21 = *(void *)(v17 + v15);
    v21[1] = v22;
    uint64_t v23 = (void *)((v17 + v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((v17 + v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v12 = (uint64_t *)(v10 + (v7 & (v5 + 16)));
  }
  swift_retain();
  return v12;
}

uint64_t sub_2191230B8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (id *)((a1 + (v5 | 7) + 24) & ~(v5 | 7));
  if (((v5 + 8) & (unint64_t)~v5) + *(void *)(v4 + 64) <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = ((v5 + 8) & ~v5) + *(void *)(v4 + 64);
  }
  unsigned int v8 = *((unsigned __int8 *)v6 + v7);
  if (v8 <= 1)
  {
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unint64_t))(v4 + 8))(((unint64_t)v6 + v5 + 8) & ~v5);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_2191231F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 | 7) + 24;
  unint64_t v9 = (void *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  uint64_t v10 = (id *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  if (((v7 + 8) & (unint64_t)~v7) + *(void *)(v6 + 64) <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = ((v7 + 8) & ~v7) + *(void *)(v6 + 64);
  }
  unsigned int v12 = *((unsigned __int8 *)v10 + v11);
  swift_retain();
  swift_retain();
  if (v12 > 1)
  {
    memcpy(v9, v10, v11 + 1);
  }
  else if (v12 == 1)
  {
    id v13 = *v10;
    id v14 = *v10;
    *unint64_t v9 = v13;
    *((unsigned char *)v9 + v11) = 1;
  }
  else
  {
    *unint64_t v9 = *v10;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v9 + v7 + 8) & ~v7, ((unint64_t)v10 + v7 + 8) & ~v7, v5);
    *((unsigned char *)v9 + v11) = 0;
  }
  *(void *)(((unint64_t)v9 + v11 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + v11 + 8) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (v11 & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v16 = (void *)((char *)v9 + v15);
  unint64_t v17 = (id *)((char *)v10 + v15);
  uint64_t v18 = v17[1];
  *unsigned int v16 = *v17;
  v16[1] = v18;
  id v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = v20[1];
  *id v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2191233E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 24;
  uint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  uint64_t v12 = ~v8;
  uint64_t v13 = v8 + 8;
  unint64_t v14 = ((v8 + 8) & ~v8) + *(void *)(v7 + 64);
  if (v14 <= 8) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = v14;
  }
  unsigned int v16 = *((unsigned __int8 *)v10 + v15);
  unsigned int v17 = v11[v15];
  if (v16 > 1)
  {
    if (v17 <= 1)
    {
      if (v17 != 1)
      {
LABEL_29:
        *uint64_t v10 = *(void *)v11;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v10 + v13) & v12, (unint64_t)&v11[v13] & v12, v6);
        *((unsigned char *)v10 + v15) = 0;
        goto LABEL_30;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v10, v11, v15 + 1);
    goto LABEL_30;
  }
  if (v17 > 1)
  {
    if (v16 == 1) {

    }
    else {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    }
    goto LABEL_15;
  }
  if (v10 != (void *)v11)
  {
    if (v16 == 1) {

    }
    else {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    }
    unsigned int v20 = v11[v15];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *v11;
          goto LABEL_26;
        case 2:
          int v23 = *(unsigned __int16 *)v11;
          goto LABEL_26;
        case 3:
          int v23 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_26;
        case 4:
          int v23 = *(_DWORD *)v11;
LABEL_26:
          int v24 = (v23 | (v21 << (8 * v15))) + 2;
          unsigned int v20 = v23 + 2;
          if (v15 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    if (v20 != 1) {
      goto LABEL_29;
    }
LABEL_11:
    uint64_t v18 = *(void *)v11;
    id v19 = *(id *)v11;
    *uint64_t v10 = v18;
    *((unsigned char *)v10 + v15) = 1;
  }
LABEL_30:
  *(void *)(((unint64_t)v10 + v15 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v11[v15 + 8] & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v25 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v26 = (void *)((char *)v10 + v25);
  uint64_t v27 = &v11[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *uint64_t v26 = *(void *)v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  uint64_t v29 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((unint64_t)(v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  uint64_t v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  uint64_t v35 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = (void *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_219123740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 | 7) + 24;
  uint64_t v7 = (void *)((v6 + a1) & ~(v5 | 7));
  uint64_t v8 = (void *)((v6 + a2) & ~(v5 | 7));
  if (((v5 + 8) & (unint64_t)~v5) + *(void *)(v4 + 64) <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = ((v5 + 8) & ~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v10 = *((unsigned __int8 *)v8 + v9);
  if (v10 > 1)
  {
    memcpy(v7, v8, v9 + 1);
  }
  else
  {
    *uint64_t v7 = *v8;
    if (v10 == 1)
    {
      *((unsigned char *)v7 + v9) = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v7 + v5 + 8) & ~v5, ((unint64_t)v8 + v5 + 8) & ~v5);
      *((unsigned char *)v7 + v9) = 0;
    }
  }
  *(void *)(((unint64_t)v7 + v9 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v9 + 8) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v12 = (_OWORD *)((char *)v7 + v11);
  uint64_t v13 = (_OWORD *)((char *)v8 + v11);
  *uint64_t v12 = *v13;
  unint64_t v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v14 = *v15;
  unsigned int v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v16 = *v17;
  *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_2191238C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 | 7) + 24;
  unsigned int v10 = (void *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  unint64_t v11 = (unsigned __int8 *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  uint64_t v12 = ~v8;
  uint64_t v13 = v8 + 8;
  if (((v8 + 8) & (unint64_t)~v8) + *(void *)(v7 + 64) <= 8) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = ((v8 + 8) & ~v8) + *(void *)(v7 + 64);
  }
  unsigned int v15 = *((unsigned __int8 *)v10 + v14);
  unsigned int v16 = v11[v14];
  if (v15 > 1)
  {
    if (v16 <= 1)
    {
      if (v16 != 1)
      {
LABEL_29:
        *unsigned int v10 = *(void *)v11;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)v10 + v13) & v12, (unint64_t)&v11[v13] & v12, v6);
        *((unsigned char *)v10 + v14) = 0;
        goto LABEL_30;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v10, v11, v14 + 1);
    goto LABEL_30;
  }
  if (v16 > 1)
  {
    if (v15 == 1) {

    }
    else {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    }
    goto LABEL_15;
  }
  if (v10 != (void *)v11)
  {
    if (v15 == 1) {

    }
    else {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    }
    unsigned int v17 = v11[v14];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v19 = v14;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v11;
          goto LABEL_26;
        case 2:
          int v20 = *(unsigned __int16 *)v11;
          goto LABEL_26;
        case 3:
          int v20 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_26;
        case 4:
          int v20 = *(_DWORD *)v11;
LABEL_26:
          int v21 = (v20 | (v18 << (8 * v14))) + 2;
          unsigned int v17 = v20 + 2;
          if (v14 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 != 1) {
      goto LABEL_29;
    }
LABEL_11:
    *unsigned int v10 = *(void *)v11;
    *((unsigned char *)v10 + v14) = 1;
  }
LABEL_30:
  *(void *)(((unint64_t)v10 + v14 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v11[v14 + 8] & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v22 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  int v23 = (_OWORD *)((char *)v10 + v22);
  int v24 = &v11[v22];
  *int v23 = *(_OWORD *)v24;
  swift_release();
  unint64_t v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (_OWORD *)((unint64_t)(v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v25 = *v26;
  swift_release();
  uint64_t v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v27 = *v28;
  swift_release();
  *(_OWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_219123BD0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = ((v4 + 8) & ~v4) + *(void *)(v3 + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  unint64_t v8 = ((((((((((v4 + 24) & (~(_BYTE)v4 | 0xFFFFFFFFFFFFFF07)) + (v5 & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  uint64_t v9 = v8 & 0xFFFFFFF8;
  unsigned int v10 = a2 - 2147483646;
  if ((v8 & 0xFFFFFFF8) != 0) {
    unsigned int v10 = 2;
  }
  if (v10 >= 0x10000) {
    int v11 = 4;
  }
  else {
    int v11 = 2;
  }
  if (v10 < 0x100) {
    int v12 = 1;
  }
  else {
    int v12 = v11;
  }
  if (v12 == 4)
  {
    int v13 = *(_DWORD *)(a1 + v8);
    if (!v13) {
      goto LABEL_5;
    }
  }
  else if (v12 == 2)
  {
    int v13 = *(unsigned __int16 *)(a1 + v8);
    if (!v13) {
      goto LABEL_5;
    }
  }
  else
  {
    int v13 = *(unsigned __int8 *)(a1 + v8);
    if (!v13)
    {
LABEL_5:
      unint64_t v6 = *(void *)(a1 + 8);
      if (v6 >= 0xFFFFFFFF) {
        LODWORD(v6) = -1;
      }
      return (v6 + 1);
    }
  }
  int v14 = v13 - 1;
  if (v9)
  {
    int v14 = 0;
    LODWORD(v9) = *(_DWORD *)a1;
  }
  return (v9 | v14) ^ 0x80000000;
}

void sub_219123D10(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  size_t v8 = ((((((((((v6 + 24) & (~(_BYTE)v6 | 0xFFFFFFFFFFFFFF07)) + (v7 & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    unsigned int v10 = a3 - 2147483646;
    if (v8) {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v9 = 1;
    }
    else {
      int v9 = v11;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v9 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v9)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *((void *)a1 + 1) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v8) {
    int v12 = 1;
  }
  else {
    int v12 = a2 - 0x7FFFFFFF;
  }
  if (v8)
  {
    unsigned int v13 = a2 ^ 0x80000000;
    bzero(a1, v8);
    *(_DWORD *)a1 = v13;
  }
  switch(v9)
  {
    case 1:
      a1[v8] = v12;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v12;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x219123ECCLL);
    case 4:
      *(_DWORD *)&a1[v8] = v12;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for _TaskViewDefaultWorking()
{
  return &type metadata for _TaskViewDefaultWorking;
}

uint64_t sub_219123F04()
{
  uint64_t result = sub_21915B378();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_219123FA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  int v8 = *(_DWORD *)(v6 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    int v11 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    unsigned int v13 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v13 = *v11;
    v13[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_21912410C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return swift_release();
}

char *sub_2191241E4(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    int v11 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  size_t v13 = v12 + 7;
  unint64_t v14 = (unint64_t)&a1[v13];
  unsigned int v15 = (uint64_t *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  unsigned int v18 = (void *)(v14 & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v18 = v17;
  v18[1] = v16;
  swift_retain();
  return a1;
}

void *sub_21912430C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = v13 + 7;
  unsigned int v15 = (void *)(((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *unsigned int v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_2191244C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  *(_OWORD *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_2191245E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  *(_OWORD *)(((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_219124790(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x219124918);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_27:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v19 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v19 >= 0xFFFFFFFF) {
      LODWORD(v19) = -1;
    }
    return (v19 + 1);
  }
  else
  {
    unsigned int v18 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v18 >= 2) {
      return v18 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_21912492C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  size_t v11 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v11;
  }
  size_t v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 < a3)
  {
    unsigned int v13 = a3 - v10;
    if (((v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v6 = v15;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v16 = a2 - v10;
    }
    else {
      int v16 = 1;
    }
    if (((v11 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v17 = ~v10 + a2;
      bzero(a1, v12);
      *(_DWORD *)a1 = v17;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v16;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v12] = v16;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x219124BB4);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if (v9 < 0x7FFFFFFF)
        {
          int v21 = (void *)((unint64_t)&a1[v11 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *int v21 = a2 ^ 0x80000000;
            v21[1] = 0;
          }
          else
          {
            *int v21 = a2 - 1;
          }
        }
        else if (v9 >= a2)
        {
          unint64_t v22 = *(void (**)(void))(v7 + 56);
          v22();
        }
        else
        {
          if (v11 <= 3) {
            int v18 = ~(-1 << (8 * v11));
          }
          else {
            int v18 = -1;
          }
          if (v11)
          {
            int v19 = v18 & (~v9 + a2);
            if (v11 <= 3) {
              int v20 = v11;
            }
            else {
              int v20 = 4;
            }
            bzero(a1, v11);
            switch(v20)
            {
              case 2:
                *(_WORD *)a1 = v19;
                break;
              case 3:
                *(_WORD *)a1 = v19;
                a1[2] = BYTE2(v19);
                break;
              case 4:
                *(_DWORD *)a1 = v19;
                break;
              default:
                *a1 = v19;
                break;
            }
          }
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for _TaskViewDefaultFailed()
{
  return &type metadata for _TaskViewDefaultFailed;
}

uint64_t sub_219124BFC()
{
  return swift_getWitnessTable();
}

unint64_t sub_219124DE8()
{
  unint64_t result = qword_267C07330;
  if (!qword_267C07330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07338);
    sub_21904C6E0();
    sub_218FFDF90(&qword_267C04470, &qword_267C04478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07330);
  }
  return result;
}

uint64_t sub_219124E88()
{
  return swift_getWitnessTable();
}

uint64_t sub_219124EF0()
{
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = type metadata accessor for TaskView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = (id *)(v2 + *(int *)(v1 + 76));
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_21915A988();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload() == 1) {

    }
    else {
      (*(void (**)(char *, void))(*(void *)(v7 - 8) + 8))((char *)v3 + *(int *)(TupleTypeMetadata2 + 48), v7);
    }
  }
  sub_21915B378();
  sub_219159028();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219125108()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v8 = *(void *)(type metadata accessor for TaskView() - 8);
  uint64_t v9 = (uint64_t)v0 + ((*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_21911FEA0(v9, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2191251D0(uint64_t a1)
{
  swift_getTupleTypeMetadata2();
  sub_21915A988();
  uint64_t v2 = sub_21915B378();
  double v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v7 - v4, a1, v2, v3);
  sub_219159028();
  return sub_219159008();
}

uint64_t _JetLocalizeDefaultFailed.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t JetLocalize.init(working:failed:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  type metadata accessor for _LocalizerOwner();
  sub_219126E10((unint64_t *)&qword_267C05568, (void (*)(uint64_t))type metadata accessor for _LocalizerOwner);
  uint64_t v14 = sub_2191580D8();
  uint64_t v16 = v15;
  uint64_t result = swift_getKeyPath();
  *(void *)a7 = v14;
  *(void *)(a7 + 8) = v16;
  *(void *)(a7 + 16) = result;
  *(unsigned char *)(a7 + 24) = 0;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  *(void *)(a7 + 48) = a1;
  *(void *)(a7 + 56) = a2;
  *(void *)(a7 + 64) = a3;
  *(void *)(a7 + 72) = a4;
  return result;
}

uint64_t sub_2191253D8()
{
  type metadata accessor for _LocalizerOwner();
  sub_219126E10((unint64_t *)&qword_267C05568, (void (*)(uint64_t))type metadata accessor for _LocalizerOwner);
  return sub_2191580A8();
}

uint64_t sub_219125460()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  sub_218FFE128(v1, v2);
  char v3 = sub_2190FAE64(v1, v2);
  sub_218FFDDBC(v1, v2);
  return v3 & 1;
}

uint64_t JetLocalize.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = v2[1];
  long long v5 = v2[3];
  long long v76 = v2[2];
  long long v77 = v5;
  long long v6 = v2[3];
  long long v78 = v2[4];
  long long v7 = v2[1];
  long long v74 = *v2;
  long long v75 = v7;
  long long v71 = v76;
  long long v72 = v6;
  long long v73 = v2[4];
  long long v69 = v74;
  long long v70 = v4;
  if (sub_219125460())
  {
    long long v71 = v76;
    long long v72 = v77;
    long long v73 = v78;
    long long v69 = v74;
    long long v70 = v75;
    sub_2191253D8();
    swift_getKeyPath();
    sub_219126E10((unint64_t *)&qword_267C05568, (void (*)(uint64_t))type metadata accessor for _LocalizerOwner);
    sub_2191580C8();
    swift_release();
    swift_release();
    uint64_t v8 = swift_allocObject();
    uint64_t v10 = a1[2];
    uint64_t v9 = a1[3];
    *(void *)(v8 + 16) = v10;
    *(void *)(v8 + 24) = v9;
    uint64_t v12 = a1[4];
    uint64_t v11 = a1[5];
    *(void *)(v8 + 32) = v12;
    *(void *)(v8 + 40) = v11;
    uint64_t v51 = a1;
    uint64_t v13 = a1[6];
    uint64_t v14 = v51[7];
    *(void *)(v8 + 48) = v13;
    *(void *)(v8 + 56) = v14;
    long long v15 = v77;
    *(_OWORD *)(v8 + 96) = v76;
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 128) = v78;
    long long v16 = v75;
    *(_OWORD *)(v8 + 64) = v74;
    *(_OWORD *)(v8 + 80) = v16;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v10;
    *(void *)(v17 + 24) = v9;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = v11;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v14;
    long long v18 = v77;
    *(_OWORD *)(v17 + 96) = v76;
    *(_OWORD *)(v17 + 112) = v18;
    *(_OWORD *)(v17 + 128) = v78;
    long long v19 = v75;
    *(_OWORD *)(v17 + 64) = v74;
    *(_OWORD *)(v17 + 80) = v19;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v10;
    *(void *)(v20 + 24) = v9;
    *(void *)(v20 + 32) = v12;
    *(void *)(v20 + 40) = v11;
    *(void *)(v20 + 48) = v13;
    *(void *)(v20 + 56) = v14;
    long long v21 = v77;
    *(_OWORD *)(v20 + 96) = v76;
    *(_OWORD *)(v20 + 112) = v21;
    *(_OWORD *)(v20 + 128) = v78;
    long long v22 = v75;
    *(_OWORD *)(v20 + 64) = v74;
    *(_OWORD *)(v20 + 80) = v22;
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05660);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05610);
    uint64_t v23 = sub_219157F48();
    uint64_t v52 = v11;
    uint64_t v55 = v11;
    uint64_t v56 = sub_218FFDF90(&qword_267C05618, &qword_267C05610);
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_2191087F0((uint64_t)&v57, (uint64_t)sub_219126CD0, v8, (uint64_t)sub_219126CE8, v17, (uint64_t)sub_219126D5C, v20, (uint64_t)&v69);
    uint64_t v57 = v49;
    uint64_t v58 = v23;
    uint64_t v24 = v13;
    a1 = v51;
    *(void *)&long long v59 = v9;
    *((void *)&v59 + 1) = v12;
    unint64_t v60 = (uint64_t (*)())WitnessTable;
    uint64_t v61 = v24;
    uint64_t v62 = v14;
    uint64_t v25 = type metadata accessor for _ResultView();
    swift_getWitnessTable();
    sub_218FFDE04((uint64_t)&v69, v25, (uint64_t)&v57);
    sub_219126D70((uint64_t)&v74);
    sub_219126D70((uint64_t)&v74);
    sub_219126D70((uint64_t)&v74);
    uint64_t v26 = *(void (**)(long long *, uint64_t))(*(void *)(v25 - 8) + 8);
    v26(&v69, v25);
    sub_218FFDE04((uint64_t)&v57, v25, (uint64_t)v54);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C03E88);
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    sub_219050FE4((uint64_t)v54, v25);
    v26(v54, v25);
    v26((long long *)&v57, v25);
  }
  else
  {
    *(void *)&long long v69 = 0xD000000000000022;
    *((void *)&v69 + 1) = 0x80000002191811D0;
    sub_219030858();
    uint64_t v50 = sub_2191589E8();
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0xD000000000000022;
    *(void *)(v33 + 24) = 0x80000002191811D0;
    uint64_t v57 = v50;
    uint64_t v58 = v28;
    LOBYTE(v59) = v32;
    *((void *)&v59 + 1) = v30;
    unint64_t v60 = sub_219008318;
    uint64_t v61 = v33;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05660);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05610);
    uint64_t v35 = sub_219157F48();
    uint64_t v52 = a1[5];
    uint64_t v67 = v52;
    uint64_t v68 = sub_218FFDF90(&qword_267C05618, &qword_267C05610);
    uint64_t v36 = swift_getWitnessTable();
    uint64_t v37 = a1[6];
    uint64_t v14 = a1[7];
    *(void *)&long long v69 = v34;
    *((void *)&v69 + 1) = v35;
    long long v70 = *(_OWORD *)(a1 + 3);
    *(void *)&long long v71 = v36;
    *((void *)&v71 + 1) = v37;
    *(void *)&long long v72 = v14;
    uint64_t v38 = type metadata accessor for _ResultView();
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03E88);
    swift_getWitnessTable();
    uint64_t v24 = v37;
    sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
    sub_218FFCBB0((uint64_t)&v57, v38, v39);
    sub_218FFE148(v50, v28, v32);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05660);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05610);
  uint64_t v41 = sub_219157F48();
  uint64_t v42 = sub_218FFDF90(&qword_267C05618, &qword_267C05610);
  uint64_t v65 = v52;
  uint64_t v66 = v42;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v57 = v40;
  uint64_t v58 = v41;
  long long v59 = *(_OWORD *)(a1 + 3);
  unint64_t v60 = (uint64_t (*)())v43;
  uint64_t v61 = v24;
  uint64_t v62 = v14;
  type metadata accessor for _ResultView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C03E88);
  uint64_t v44 = sub_2191584D8();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = sub_218FFDF90((unint64_t *)&qword_267C03E90, &qword_267C03E88);
  uint64_t v63 = v45;
  uint64_t v64 = v46;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)&v69, v44, a2);
  return (*(uint64_t (**)(long long *, uint64_t))(*(void *)(v44 - 8) + 8))(&v69, v44);
}

uint64_t sub_219125C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(void))(v9 + 48))();
  sub_218FFDE04((uint64_t)v8, a2, (uint64_t)v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_218FFDE04((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

uint64_t sub_219125D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v12 + 64);
  long long v15 = _taskRetry(for:)(v14);
  v13(a1, v15, v16);
  swift_release();
  sub_218FFDE04((uint64_t)v8, a2, (uint64_t)v11);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v8, a2);
  sub_218FFDE04((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, a2);
}

uint64_t sub_219125EA0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v33 = a5;
  uint64_t v32 = sub_219157728();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v27 = a3;
  uint64_t v28 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05610);
  uint64_t v14 = sub_219157F48();
  uint64_t v29 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v26 - v19;
  (*(void (**)(void *, double))(a2 + 32))(a1, v18);
  swift_getKeyPath();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21915AB58();
  uint64_t v21 = v27;
  uint64_t v22 = v31;
  sub_219158AA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v32);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v21);
  uint64_t v23 = sub_218FFDF90(&qword_267C05618, &qword_267C05610);
  uint64_t v34 = v22;
  uint64_t v35 = v23;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v16, v14, (uint64_t)v20);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v16, v14);
  sub_218FFDE04((uint64_t)v20, v14, v33);
  return ((uint64_t (*)(char *, uint64_t))v24)(v20, v14);
}

uint64_t _JetLocalizeDefaultWorking.body.getter()
{
  uint64_t v0 = sub_219158018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  char v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219158308();
  if (qword_26AD03AA0 != -1) {
    swift_once();
  }
  id v4 = (id)qword_26AD03A98;
  uint64_t v10 = sub_2191589D8();
  uint64_t v11 = v5;
  char v12 = v6 & 1;
  uint64_t v13 = v7;
  sub_219158008();
  sub_219158E18();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_218FFE148(v10, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2191263AC()
{
  return _JetLocalizeDefaultWorking.body.getter();
}

uint64_t _JetLocalizeDefaultFailed.body.getter@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  v19[0] = sub_219158558();
  uint64_t v2 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  id v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = swift_allocObject();
  long long v11 = *v1;
  *(_OWORD *)(v10 + 16) = *v1;
  *(void *)(v10 + 32) = v9;
  id v12 = (id)v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C07348);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C065F8);
  uint64_t v14 = sub_2191582F8();
  uint64_t v15 = sub_218FFDF90(&qword_267C06600, &qword_267C065F8);
  uint64_t v16 = sub_219126E10(&qword_267C05D00, MEMORY[0x263F197E0]);
  void v19[2] = v13;
  v19[3] = v14;
  v19[4] = v15;
  void v19[5] = v16;
  swift_getOpaqueTypeConformance2();
  sub_219159058();
  sub_219158548();
  sub_218FFDF90(qword_267C07350, &qword_267C07340);
  sub_219126E10(qword_267C05470, MEMORY[0x263F19CE8]);
  uint64_t v17 = v19[0];
  sub_219158A78();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2191266E4()
{
  uint64_t v0 = sub_2191582F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C065F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219158FB8();
  sub_2191582E8();
  sub_218FFDF90(&qword_267C06600, &qword_267C065F8);
  sub_219126E10(&qword_267C05D00, MEMORY[0x263F197E0]);
  sub_219158A48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_219126924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158F08();
  *a1 = result;
  return result;
}

uint64_t sub_21912696C@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  v19[0] = sub_219158558();
  uint64_t v2 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = swift_allocObject();
  long long v11 = *v1;
  *(_OWORD *)(v10 + 16) = *v1;
  *(void *)(v10 + 32) = v9;
  id v12 = (id)v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C07348);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C065F8);
  uint64_t v14 = sub_2191582F8();
  uint64_t v15 = sub_218FFDF90(&qword_267C06600, &qword_267C065F8);
  uint64_t v16 = sub_219126E10(&qword_267C05D00, MEMORY[0x263F197E0]);
  void v19[2] = v13;
  v19[3] = v14;
  v19[4] = v15;
  void v19[5] = v16;
  swift_getOpaqueTypeConformance2();
  sub_219159058();
  sub_219158548();
  sub_218FFDF90(qword_267C07350, &qword_267C07340);
  sub_219126E10(qword_267C05470, MEMORY[0x263F19CE8]);
  uint64_t v17 = v19[0];
  sub_219158A78();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_219126C8C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_219126CD0@<X0>(uint64_t a1@<X8>)
{
  return sub_219125C0C(v1 + 64, *(void *)(v1 + 24), a1);
}

uint64_t sub_219126CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_219125D40(a1, *(void *)(v2 + 32), a2);
}

uint64_t objectdestroy_6Tm()
{
  swift_release();
  sub_218FFDDBC(*(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219126D5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_219125EA0(a1, v2 + 64, *(void *)(v2 + 16), *(void *)(v2 + 40), a2);
}

uint64_t sub_219126D70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  swift_retain();
  sub_218FFE128(v2, v3);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_219126DE8()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_219126E10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_219126E58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219126EA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219126EC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219126EDC(uint64_t a1)
{
  swift_release();
  sub_218FFDDBC(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_219126F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_218FFE128(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_219126FD4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_218FFE128(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_218FFDDBC(v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_219127094(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_218FFDDBC(v5, v6);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_219127118(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_219127160(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for JetLocalize()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for _JetLocalizeDefaultWorking()
{
  return &type metadata for _JetLocalizeDefaultWorking;
}

ValueMetadata *type metadata accessor for _JetLocalizeDefaultFailed()
{
  return &type metadata for _JetLocalizeDefaultFailed;
}

uint64_t sub_2191271EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_21912735C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2191273AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t objectdestroy_15Tm_1()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t ActionButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for ActionButton();
  uint64_t v11 = a5 + v10[11];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 40) = 0;
  id v12 = (uint64_t *)(a5 + v10[12]);
  *id v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a5 + v10[13];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  sub_219024A0C(a1, a5, &qword_267C047B0);
  uint64_t result = sub_219024A0C(a2, a5 + v10[9], &qword_267C047B8);
  uint64_t v15 = (void *)(a5 + v10[10]);
  *uint64_t v15 = a3;
  v15[1] = a4;
  return result;
}

uint64_t type metadata accessor for ActionButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2191275E4()
{
  return sub_219158238();
}

uint64_t sub_219127624()
{
  return sub_219158238();
}

uint64_t sub_219127664(uint64_t a1)
{
  sub_2190090C4(a1, (uint64_t)v3, &qword_26AD010B8);
  sub_2190090C4((uint64_t)v3, (uint64_t)&v2, &qword_26AD010B8);
  sub_2190F04CC();
  sub_219158248();
  return sub_218FFE158((uint64_t)v3, &qword_26AD010B8);
}

uint64_t ActionButton.init<A>(_:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a4 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v14 + v13, a1, a4);
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_267C073D8);
  uint64_t v16 = a6 + v15[11];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 40) = 0;
  uint64_t v17 = (uint64_t *)(a6 + v15[12]);
  uint64_t *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a6 + v15[13];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 0;
  sub_219024A0C(a2, a6, &qword_267C047B0);
  uint64_t result = sub_219024A0C(a3, a6 + v15[9], &qword_267C047B8);
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a6 + v15[10]);
  *uint64_t v20 = sub_21912818C;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

{
  uint64_t v12;
  uint64_t v13;
  unsigned char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  unsigned char *v19;
  unsigned char v22[40];

  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v15 = *(void *)(a4 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16))(v19, a1, a4, v17);
  sub_2190090C4(a2, (uint64_t)v14, &qword_267C047B0);
  sub_219030940(a3, (uint64_t)v22);
  ActionButton.init<A>(_:role:action:)((uint64_t)v19, (uint64_t)v14, (uint64_t)v22, a4, a5, a6);
  __swift_destroy_boxed_opaque_existential_1(a3);
  sub_218FFE158(a2, &qword_267C047B0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a1, a4);
}

uint64_t sub_21912787C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v3 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_2191589E8();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  return result;
}

uint64_t ActionButton.init<>(_:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(unsigned char *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_267C073D8);
  uint64_t v16 = a7 + v15[11];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 40) = 0;
  uint64_t v17 = (uint64_t *)(a7 + v15[12]);
  uint64_t *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a7 + v15[13];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 0;
  sub_219024A0C(a5, a7, &qword_267C047B0);
  uint64_t result = sub_219024A0C(a6, a7 + v15[9], &qword_267C047B8);
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a7 + v15[10]);
  *uint64_t v20 = sub_2191281D0;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

{
  uint64_t v13;
  int *v14;
  uint64_t v15;
  unsigned char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned char *v19;
  uint64_t v20;
  unsigned char *v21;
  uint64_t *v22;
  unsigned char *v23;
  uint64_t (**v24)@<X0>(uint64_t@<X8>);
  uint64_t v26;
  unsigned char v27[40];

  uint64_t v26 = a7;
  unint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C073D8);
  uint64_t v14 = (int *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = &v27[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2190090C4(a5, (uint64_t)v19, &qword_267C047B0);
  sub_219030940(a6, (uint64_t)v27);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(unsigned char *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  uint64_t v21 = &v16[v14[13]];
  *(void *)uint64_t v21 = swift_getKeyPath();
  v21[40] = 0;
  uint64_t v22 = (uint64_t *)&v16[v14[14]];
  *uint64_t v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = &v16[v14[15]];
  *(void *)uint64_t v23 = swift_getKeyPath();
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  sub_219024A0C((uint64_t)v19, (uint64_t)v16, &qword_267C047B0);
  sub_219024A0C((uint64_t)v27, (uint64_t)&v16[v14[11]], &qword_267C047B8);
  uint64_t v24 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v16[v14[12]];
  *uint64_t v24 = sub_21912A7A4;
  v24[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v20;
  sub_219024A0C((uint64_t)v16, v26, &qword_267C073D8);
  __swift_destroy_boxed_opaque_existential_1(a6);
  return sub_218FFE158(a5, &qword_267C047B0);
}

uint64_t sub_219127A90@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_2191589D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t ActionButton.init<>(_:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(void *)(v8 + 32) = *(void *)(a1 + 16);
  uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_267C073E0);
  uint64_t v10 = a4 + v9[11];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(unsigned char *)(v10 + 40) = 0;
  uint64_t v11 = (uint64_t *)(a4 + v9[12]);
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a4 + v9[13];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(void *)(v12 + 8) = 0;
  *(unsigned char *)(v12 + 16) = 0;
  sub_219024A0C(a2, a4, &qword_267C047B0);
  uint64_t result = sub_219024A0C(a3, a4 + v9[9], &qword_267C047B8);
  uint64_t v14 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a4 + v9[10]);
  *uint64_t v14 = sub_219128220;
  v14[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_219127C50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_219094EF0();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2191580D8();
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = result;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v5;
  return result;
}

uint64_t ActionButton.init<>(_:localizer:role:action:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(void *)(v10 + 32) = *(void *)(a1 + 16);
  sub_219018288(a2, v10 + 40);
  uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_267C073D8);
  uint64_t v12 = a5 + v11[11];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 40) = 0;
  unint64_t v13 = (uint64_t *)(a5 + v11[12]);
  *unint64_t v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a5 + v11[13];
  *(void *)uint64_t v14 = swift_getKeyPath();
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 0;
  sub_219024A0C(a3, a5, &qword_267C047B0);
  uint64_t result = sub_219024A0C(a4, a5 + v11[9], &qword_267C047B8);
  uint64_t v16 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a5 + v11[10]);
  *uint64_t v16 = sub_219128270;
  v16[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v10;
  return result;
}

uint64_t (*sub_219127E18(uint64_t a1))()
{
  uint64_t v2 = v1 + *(int *)(a1 + 52);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  sub_2190782EC(*(void *)v2, v4, v5);
  uint64_t v6 = sub_2190FC864(v3, v4, v5);
  uint64_t v8 = v7;
  sub_219074AD8(v3, v4, v5);
  if (!v6) {
    return 0;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v8;
  return sub_21912A710;
}

uint64_t sub_219127ECC@<X0>(uint64_t a1@<X8>)
{
  return _s7SwiftUI17EnvironmentValuesV011_JetEngine_aB0E20metricsFieldsContextAD013OpaqueMetricshI0Vvg_0(a1);
}

uint64_t sub_219127EF0@<X0>(uint64_t a1@<X8>)
{
  return _s7SwiftUI17EnvironmentValuesV011_JetEngine_aB0E20metricsFieldsContextAD013OpaqueMetricshI0Vvg_0(a1);
}

uint64_t (*sub_219127F14())()
{
  sub_21912A740();
  sub_219158238();
  if (!v2) {
    return 0;
  }
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  return sub_21912A7BC;
}

double sub_219127F9C@<D0>(_OWORD *a1@<X8>)
{
  sub_21912A740();
  sub_219158238();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_219127FEC@<D0>(_OWORD *a1@<X8>)
{
  sub_21912A740();
  sub_219158238();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_21912803C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_21912A7BC;
    *(void *)(v4 + 24) = v3;
  }
  sub_219062A84(v1);
  sub_21912A740();
  return sub_219158248();
}

uint64_t sub_219128104()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_21912818C@<X0>(uint64_t a1@<X8>)
{
  return sub_21912787C(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), a1);
}

uint64_t sub_2191281D0@<X0>(uint64_t a1@<X8>)
{
  return sub_219127A90(a1);
}

uint64_t sub_2191281E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_219128220@<X0>(uint64_t a1@<X8>)
{
  return sub_219127C50((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_219128228()
{
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_219128270@<X0>(uint64_t a1@<X8>)
{
  return sub_219117004((uint64_t (**)(unsigned char *))(v1 + 16), v1 + 40, a1);
}

uint64_t sub_21912827C(uint64_t a1)
{
  uint64_t v3 = sub_21915A198();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190090C4(v1 + *(int *)(a1 + 36), (uint64_t)&v16, &qword_267C047B8);
  if (!v17) {
    return sub_218FFE158((uint64_t)&v16, &qword_267C047B8);
  }
  sub_219018288(&v16, (uint64_t)v19);
  sub_2190FB834((uint64_t)&v14);
  if (v15)
  {
    sub_219018288(&v14, (uint64_t)&v16);
    uint64_t v7 = sub_219127E18(a1);
    if (v7)
    {
      uint64_t v8 = (uint64_t)v7;
      ((void (*)(unsigned char *))v7)(v19);
      sub_21903F788(v8);
    }
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, v17);
    sub_2190F9F54((uint64_t)v6);
    (*(void (**)(unsigned char *, char *, uint64_t, uint64_t))(v10 + 24))(v19, v6, v9, v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t v11 = &v16;
  }
  else
  {
    sub_218FFE158((uint64_t)&v14, &qword_26AD010B8);
    sub_219159FC8();
    uint64_t v11 = (long long *)v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

unint64_t sub_219128490()
{
  return 0xD000000000000029;
}

uint64_t ActionButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v9 = sub_219159088();
  uint64_t v22 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04560);
  uint64_t v12 = sub_219157F48();
  uint64_t v23 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v22 - v16;
  sub_2190090C4(v2, (uint64_t)v6, &qword_267C047B0);
  sub_2191287F0(v2, v8, v7);
  sub_219159048();
  sub_2190090C4(v2 + *(int *)(a1 + 36), (uint64_t)v27, &qword_267C047B8);
  sub_218FFE158((uint64_t)v27, &qword_267C047B8);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158DC8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  uint64_t v19 = sub_218FFDF90(&qword_267C04558, &qword_267C04560);
  uint64_t v25 = WitnessTable;
  uint64_t v26 = v19;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v14, v12, (uint64_t)v17);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v23 + 8);
  v20(v14, v12);
  sub_218FFDE04((uint64_t)v17, v12, v24);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v12);
}

uint64_t (*sub_2191287F0(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = type metadata accessor for ActionButton();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return sub_21912A6AC;
}

uint64_t View.beforePerformingAction(perform:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    uint64_t v5 = sub_21901327C;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_219062A84(a1);
  sub_219158AA8();
  swift_release();
  return sub_21903F788((uint64_t)v5);
}

uint64_t sub_219128A10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t ActionButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_219018288(a2, (uint64_t)v10);
  return ActionButton.init(role:action:label:)(a1, (uint64_t)v10, a3, a4, a5);
}

uint64_t objectdestroy_9Tm_3()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_219128EB8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_219128EFC()
{
  sub_21912A2E8(319, &qword_26AD03188, MEMORY[0x263F18380], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_21912A2E8(319, (unint64_t *)&qword_26AD036D0, MEMORY[0x263F50B68], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_21912904C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_219157A58();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[9];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 24);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(void))(v14 - 8))();
    }
    else
    {
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = (char *)a2 + v18;
    char v24 = *((unsigned char *)a2 + v18 + 40);
    swift_retain();
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 3);
      if (v25)
      {
        uint64_t v26 = *((void *)v23 + 4);
        *((void *)v22 + 3) = v25;
        *((void *)v22 + 4) = v26;
        (**(void (***)(char *, char *))(v25 - 8))(v22, v23);
      }
      else
      {
        long long v27 = *((_OWORD *)v23 + 1);
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v27;
        *((void *)v22 + 4) = *((void *)v23 + 4);
      }
      v22[40] = 1;
    }
    else
    {
      *(void *)uint64_t v22 = *(void *)v23;
      v22[40] = 0;
      swift_retain();
    }
    uint64_t v28 = a3[12];
    uint64_t v29 = (uint64_t *)((char *)a1 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_21915A198();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *uint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = a3[13];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = *(void *)v34;
    uint64_t v36 = *((void *)v34 + 1);
    char v37 = v34[16];
    sub_2190782EC(*(void *)v34, v36, v37);
    *(void *)uint64_t v33 = v35;
    *((void *)v33 + 1) = v36;
    v33[16] = v37;
  }
  return a1;
}

uint64_t sub_21912936C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_219157A58();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[9];
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v6);
  }
  swift_release();
  uint64_t v7 = a1 + a2[11];
  if (*(unsigned char *)(v7 + 40))
  {
    if (*(void *)(v7 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_21915A198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[13];
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  return sub_219074AD8(v11, v12, v13);
}

char *sub_2191294F8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[9];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)&a2[v9 + 24];
  if (v12)
  {
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = v12;
    *((void *)v10 + 4) = v13;
    (**(void (***)(void))(v12 - 8))();
  }
  else
  {
    long long v14 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v14;
    *((void *)v10 + 4) = *((void *)v11 + 4);
  }
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = &a1[v16];
  uint64_t v21 = &a2[v16];
  char v22 = a2[v16 + 40];
  swift_retain();
  if (v22)
  {
    uint64_t v23 = *((void *)v21 + 3);
    if (v23)
    {
      uint64_t v24 = *((void *)v21 + 4);
      *((void *)v20 + 3) = v23;
      *((void *)v20 + 4) = v24;
      (**(void (***)(char *, char *))(v23 - 8))(v20, v21);
    }
    else
    {
      long long v25 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v25;
      *((void *)v20 + 4) = *((void *)v21 + 4);
    }
    v20[40] = 1;
  }
  else
  {
    *(void *)uint64_t v20 = *(void *)v21;
    v20[40] = 0;
    swift_retain();
  }
  uint64_t v26 = a3[12];
  long long v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_21915A198();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *(void *)long long v27 = *(void *)v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[13];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = *((void *)v32 + 1);
  char v35 = v32[16];
  sub_2190782EC(*(void *)v32, v34, v35);
  *(void *)uint64_t v31 = v33;
  *((void *)v31 + 1) = v34;
  v31[16] = v35;
  return a1;
}

char *sub_2191297C8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[9];
  uint64_t v13 = (uint64_t)&a1[v12];
  long long v14 = (uint64_t *)&a2[v12];
  uint64_t v15 = *(void *)&a2[v12 + 24];
  if (*(void *)&a1[v12 + 24])
  {
    if (v15)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v13, v14);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v13);
  }
  else if (v15)
  {
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = v14[4];
    (**(void (***)(uint64_t, char *))(v15 - 8))(v13, (char *)v14);
    goto LABEL_14;
  }
  long long v16 = *(_OWORD *)v14;
  long long v17 = *((_OWORD *)v14 + 1);
  *(void *)(v13 + 32) = v14[4];
  *(_OWORD *)uint64_t v13 = v16;
  *(_OWORD *)(v13 + 16) = v17;
LABEL_14:
  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v22 = a3[11];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    sub_218FFE158((uint64_t)&a1[v22], &qword_26AD012A8);
    if (v24[40])
    {
      uint64_t v25 = *((void *)v24 + 3);
      if (v25)
      {
        *((void *)v23 + 3) = v25;
        *((void *)v23 + 4) = *((void *)v24 + 4);
        (**(void (***)(char *, char *))(v25 - 8))(v23, v24);
      }
      else
      {
        long long v26 = *(_OWORD *)v24;
        long long v27 = *((_OWORD *)v24 + 1);
        *((void *)v23 + 4) = *((void *)v24 + 4);
        *(_OWORD *)uint64_t v23 = v26;
        *((_OWORD *)v23 + 1) = v27;
      }
      unsigned char v23[40] = 1;
    }
    else
    {
      *(void *)uint64_t v23 = *(void *)v24;
      unsigned char v23[40] = 0;
      swift_retain();
    }
    uint64_t v28 = a3[12];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    sub_218FFE158((uint64_t)&a1[v28], &qword_26AD03198);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_21915A198();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *(void *)uint64_t v29 = *(void *)v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = a3[13];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  uint64_t v36 = *((void *)v34 + 1);
  char v37 = v34[16];
  sub_2190782EC(*(void *)v34, v36, v37);
  uint64_t v38 = *(void *)v33;
  uint64_t v39 = *((void *)v33 + 1);
  char v40 = v33[16];
  *(void *)uint64_t v33 = v35;
  *((void *)v33 + 1) = v36;
  v33[16] = v37;
  sub_219074AD8(v38, v39, v40);
  return a1;
}

char *sub_219129B74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v14 = a3[11];
  uint64_t v15 = a3[12];
  long long v16 = &a1[v14];
  long long v17 = &a2[v14];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *(_OWORD *)(v16 + 25) = *(_OWORD *)(v17 + 25);
  uint64_t v19 = &a1[v15];
  uint64_t v20 = &a2[v15];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_21915A198();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[13];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  return a1;
}

char *sub_219129D88(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219157A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[9];
  uint64_t v13 = (uint64_t)&a1[v12];
  uint64_t v14 = &a2[v12];
  if (*(void *)&a1[v12 + 24]) {
    __swift_destroy_boxed_opaque_existential_1(v13);
  }
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *((void *)v14 + 4);
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v16 = a3[11];
    long long v17 = &a2[v16];
    long long v18 = &a1[v16];
    sub_218FFE158((uint64_t)&a1[v16], &qword_26AD012A8);
    long long v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)long long v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
    uint64_t v20 = a3[12];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    sub_218FFE158((uint64_t)&a1[v20], &qword_26AD03198);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_21915A198();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[13];
  long long v26 = &a1[v25];
  long long v27 = &a2[v25];
  char v28 = v27[16];
  uint64_t v29 = *(void *)v26;
  uint64_t v30 = *((void *)v26 + 1);
  char v31 = v26[16];
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  v26[16] = v28;
  sub_219074AD8(v29, v30, v31);
  return a1;
}

uint64_t sub_21912A058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21912A06C);
}

uint64_t sub_21912A06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 48);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_21912A1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21912A1B4);
}

uint64_t sub_21912A1B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 48);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_21912A2E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_21912A34C()
{
  return swift_getWitnessTable();
}

uint64_t sub_21912A414()
{
  return swift_getWitnessTable();
}

uint64_t sub_21912A4B0()
{
  unint64_t v1 = (int *)type metadata accessor for ActionButton();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_219157A58();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  uint64_t v6 = v3 + v1[9];
  if (*(void *)(v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v6);
  }
  swift_release();
  uint64_t v7 = v3 + v1[11];
  if (*(unsigned char *)(v7 + 40))
  {
    if (*(void *)(v7 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_21915A198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  sub_219074AD8(*(void *)(v3 + v1[13]), *(void *)(v3 + v1[13] + 8), *(unsigned char *)(v3 + v1[13] + 16));
  return swift_deallocObject();
}

uint64_t sub_21912A6AC()
{
  uint64_t v0 = type metadata accessor for ActionButton();
  return sub_21912827C(v0);
}

uint64_t sub_21912A710()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_21912A740()
{
  unint64_t result = qword_267C07478;
  if (!qword_267C07478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07478);
  }
  return result;
}

ValueMetadata *type metadata accessor for _ActionPreflightKey()
{
  return &type metadata for _ActionPreflightKey;
}

uint64_t View.onRawDeepLink(action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  _OWORD v10[2] = KeyPath;
  char v11 = 0;
  swift_retain();
  MEMORY[0x21D47F800](v10, a3, &type metadata for OnRawDeepLinkViewModifier, a4);
  swift_release();
  return j_j__swift_release(KeyPath, 0);
}

uint64_t sub_21912A86C()
{
  return swift_getWitnessTable();
}

unint64_t sub_21912A8D0()
{
  unint64_t result = qword_267C07480;
  if (!qword_267C07480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07480);
  }
  return result;
}

uint64_t destroy for OnRawDeepLinkViewModifier(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 24);
  return j_j__swift_release(v2, v3);
}

uint64_t initializeWithCopy for OnRawDeepLinkViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_retain();
  j__swift_retain(v4);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for OnRawDeepLinkViewModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  j__swift_retain(v5);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  j_j__swift_release(v6, v7);
  return a1;
}

uint64_t assignWithTake for OnRawDeepLinkViewModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  j_j__swift_release(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnRawDeepLinkViewModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnRawDeepLinkViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnRawDeepLinkViewModifier()
{
  return &type metadata for OnRawDeepLinkViewModifier;
}

uint64_t sub_21912AB18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21912AB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v43 = a2;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07488);
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07490);
  MEMORY[0x270FA5388](v42);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07498);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_21915B018();
  uint64_t v7 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074A0);
  MEMORY[0x270FA5388](v38);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = *v2;
  uint64_t v16 = v2[1];
  uint64_t v17 = v2[2];
  uint64_t v18 = *((unsigned __int8 *)v2 + 24);
  j__swift_retain(v17);
  sub_2190FCA8C(v17, v18, &v44);
  j_j__swift_release(v17, v18);
  uint64_t v19 = v44;
  if (v44)
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = v15;
    *(void *)(v20 + 32) = v16;
    *(void *)(v20 + 40) = v17;
    *(unsigned char *)(v20 + 48) = v18;
    swift_retain();
    swift_retain();
    j__swift_retain(v17);
    sub_21915AFB8();
    uint64_t v21 = &v11[*(int *)(v38 + 36)];
    uint64_t v22 = sub_219157D48();
    uint64_t v23 = v35;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v21[*(int *)(v22 + 20)], v9, v35);
    *(void *)uint64_t v21 = &unk_267C074C8;
    *((void *)v21 + 1) = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v11, v36, v40);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
    sub_21912BB30((uint64_t)v11, (uint64_t)v14);
    uint64_t v24 = &qword_267C074A0;
    sub_2190090C4((uint64_t)v14, v41, &qword_267C074A0);
    swift_storeEnumTagMultiPayload();
    sub_21912B930();
    sub_218FFDF90(&qword_267C074B8, &qword_267C07490);
    sub_2191584C8();
    swift_release();
    uint64_t v25 = (uint64_t)v14;
  }
  else
  {
    uint64_t v26 = v37;
    long long v27 = v34;
    uint64_t v28 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v34, v36, v40);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0xD000000000000073;
    *(void *)(v29 + 24) = 0x8000000219183120;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v5, v27, v28);
    uint64_t v30 = v41;
    char v31 = (uint64_t (**)())&v5[*(int *)(v42 + 52)];
    *char v31 = sub_219008318;
    v31[1] = (uint64_t (*)())v29;
    uint64_t v24 = &qword_267C07490;
    sub_2190090C4((uint64_t)v5, v30, &qword_267C07490);
    swift_storeEnumTagMultiPayload();
    sub_21912B930();
    sub_218FFDF90(&qword_267C074B8, &qword_267C07490);
    sub_2191584C8();
    uint64_t v25 = (uint64_t)v5;
  }
  return sub_218FFE158(v25, v24);
}

uint64_t sub_21912B038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_21915AA48();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C074D0);
  v3[11] = swift_task_alloc();
  v3[12] = sub_21915AF98();
  v3[13] = sub_21915AF88();
  uint64_t v6 = sub_21915AF48();
  v3[14] = v6;
  v3[15] = v5;
  return MEMORY[0x270FA2498](sub_21912B164, v6, v5);
}

uint64_t sub_21912B164()
{
  v0[3] = v0[5];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C05370);
  sub_218FFDF90(&qword_267C074D8, &qword_267C05370);
  sub_21915B058();
  v0[16] = sub_21915AF88();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074E0);
  uint64_t v2 = sub_218FFDF90(&qword_267C074E8, &qword_267C074E0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_21912B2B4;
  uint64_t v4 = v0[11];
  return MEMORY[0x270FA1E80](v4, v1, v2);
}

uint64_t sub_21912B2B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_21915AF48();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_21912B640;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_21915AF48();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_21912B44C;
  }
  return MEMORY[0x270FA2498](v7, v4, v6);
}

uint64_t sub_21912B44C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return MEMORY[0x270FA2498](sub_21912B4B0, v1, v2);
}

uint64_t sub_21912B4B0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[6];
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[10], v1, v2);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[19] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_21912B6C4;
    uint64_t v8 = v0[10];
    return v9(v8);
  }
}

uint64_t sub_21912B640()
{
  *(void *)(v0 + 32) = *(void *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD03900);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_21912B6C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return MEMORY[0x270FA2498](sub_21912B7E4, v3, v2);
}

uint64_t sub_21912B7E4()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  v0[16] = sub_21915AF88();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074E0);
  uint64_t v2 = sub_218FFDF90(&qword_267C074E8, &qword_267C074E0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_21912B2B4;
  uint64_t v4 = v0[11];
  return MEMORY[0x270FA1E80](v4, v1, v2);
}

uint64_t sub_21912B8F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21912B930()
{
  unint64_t result = qword_267C074A8;
  if (!qword_267C074A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C074A0);
    sub_218FFDF90(&qword_267C074B0, &qword_267C07488);
    sub_21912B9D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C074A8);
  }
  return result;
}

unint64_t sub_21912B9D0()
{
  unint64_t result = qword_26AD03990[0];
  if (!qword_26AD03990[0])
  {
    sub_219157D48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AD03990);
  }
  return result;
}

uint64_t sub_21912BA28()
{
  swift_release();
  swift_release();
  j_j__swift_release(*(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_21912BA74()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_218FF9AE0;
  return sub_21912B038(v2, v3, v4);
}

uint64_t sub_21912BB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21912BB9C()
{
  unint64_t result = qword_267C074F0;
  if (!qword_267C074F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_267C074F8);
    sub_21912B930();
    sub_218FFDF90(&qword_267C074B8, &qword_267C07490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C074F0);
  }
  return result;
}

uint64_t sub_21912BC3C()
{
  uint64_t result = sub_21915B378();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21912BCE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 80);
  uint64_t v7 = v6;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v8 = *(void *)(v4 + 64);
  }
  else {
    size_t v8 = *(void *)(v4 + 64) + 1;
  }
  size_t v9 = v8 + 7;
  unint64_t v10 = ((((((v8 + 7 + ((v6 + 17) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  int v11 = v6 & 0x100000;
  uint64_t v12 = *a2;
  *(void *)a1 = *a2;
  if (v7 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v15 = v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
  }
  else
  {
    uint64_t v15 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    __dst = (void *)((a1 + v7 + 17) & ~v7);
    uint64_t v16 = (const void *)(((unint64_t)a2 + v7 + 17) & ~v7);
    uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v4 + 48);
    swift_retain();
    swift_retain();
    if (v17(v16, 1, v3))
    {
      memcpy(__dst, v16, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(__dst, v16, v3);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(__dst, 0, 1, v3);
    }
    uint64_t v19 = (void *)(((unint64_t)__dst + v9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)v16 + v9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v15;
}

uint64_t sub_21912BF04(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21912C010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  size_t v8 = (void *)((v7 + 17 + a1) & ~v7);
  size_t v9 = (const void *)((v7 + 17 + a2) & ~v7);
  unint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  swift_retain();
  swift_retain();
  if (v10(v9, 1, v5))
  {
    int v11 = *(_DWORD *)(v6 + 84);
    uint64_t v12 = *(void *)(v6 + 64);
    if (v11) {
      size_t v13 = *(void *)(v6 + 64);
    }
    else {
      size_t v13 = v12 + 1;
    }
    memcpy(v8, v9, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    uint64_t v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v14 = v6 + 56;
    v15(v8, 0, 1, v5);
    int v11 = *(_DWORD *)(v14 + 28);
    uint64_t v12 = *(void *)(v14 + 8);
  }
  if (v11) {
    uint64_t v16 = v12;
  }
  else {
    uint64_t v16 = v12 + 1;
  }
  uint64_t v17 = (void *)(((unint64_t)v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(((unint64_t)v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_21912C1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  size_t v9 = (void *)((v8 + 17 + a1) & ~v8);
  unint64_t v10 = (void *)((v8 + 17 + a2) & ~v8);
  int v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v9, v10, v16);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v18 = (void *)(((unint64_t)v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21912C408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)((v6 + 17 + a1) & ~v6);
  uint64_t v8 = (const void *)((v6 + 17 + a2) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    int v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  size_t v15 = (_OWORD *)(((unint64_t)v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v16 = (_OWORD *)(((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v15 = *v16;
  uint64_t v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v17 = *v18;
  *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21912C57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)((v8 + 17 + a1) & ~v8);
  size_t v10 = (void *)((v8 + 17 + a2) & ~v8);
  size_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(v9, v10, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v9, v10, v16);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v18 = (_OWORD *)(((unint64_t)v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (uint64_t)v10 + v17 + 7;
  unint64_t v20 = (v19 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v18 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v21 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v21 = *(_OWORD *)v20;
  swift_release();
  *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_21912C798(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = 7;
  if (!v6) {
    uint64_t v10 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v11 = ((((((v10 + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v9 + 17) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unsigned int v12 = a2 - v8;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *(unsigned __int8 *)(a1 + v11);
        if (!v17) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)(a1 + v11);
        if (v17) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21912C940);
      case 4:
        int v17 = *(_DWORD *)(a1 + v11);
        if (!v17) {
          break;
        }
LABEL_27:
        int v19 = v17 - 1;
        if (v13)
        {
          int v19 = 0;
          LODWORD(v13) = *(_DWORD *)a1;
        }
        return v8 + (v13 | v19) + 1;
      default:
        break;
    }
  }
  if ((v7 & 0x80000000) != 0)
  {
    unsigned int v21 = (*(uint64_t (**)(uint64_t))(v5 + 48))((a1 + v9 + 17) & ~v9);
    if (v21 >= 2) {
      return v21 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v20 = *(void *)(a1 + 8);
    if (v20 >= 0xFFFFFFFF) {
      LODWORD(v20) = -1;
    }
    return (v20 + 1);
  }
}

void sub_21912C954(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((((((v12 + ((v11 + 17) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v10 < a3)
  {
    unsigned int v14 = a3 - v10;
    if (((((((v12 + ((v11 + 17) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v6 = v16;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((((((v12 + ((v11 + 17) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v17 = a2 - v10;
    }
    else {
      int v17 = 1;
    }
    if (((((((v12 + ((v11 + 17) & ~v11) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v18 = ~v10 + a2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v17;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v13] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x21912CBFCLL);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if ((v9 & 0x80000000) != 0)
        {
          int v19 = (unsigned char *)((unint64_t)&a1[v11 + 17] & ~v11);
          if (v9 >= a2)
          {
            uint64_t v23 = a2 + 1;
            uint64_t v24 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v25 = (unint64_t)&a1[v11 + 17] & ~v11;
            v24(v25, v23);
          }
          else
          {
            if (v12 <= 3) {
              int v20 = ~(-1 << (8 * v12));
            }
            else {
              int v20 = -1;
            }
            if (v12)
            {
              int v21 = v20 & (~v9 + a2);
              if (v12 <= 3) {
                int v22 = v12;
              }
              else {
                int v22 = 4;
              }
              bzero(v19, v12);
              switch(v22)
              {
                case 2:
                  *(_WORD *)int v19 = v21;
                  break;
                case 3:
                  *(_WORD *)int v19 = v21;
                  void v19[2] = BYTE2(v21);
                  break;
                case 4:
                  *(_DWORD *)int v19 = v21;
                  break;
                default:
                  *int v19 = v21;
                  break;
              }
            }
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          a1[16] = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for _FlowToastView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21912CC4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21912CCA0(uint64_t a1)
{
  double v1 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_219157C98();
  sub_219158A68();
  return swift_release();
}

uint64_t sub_21912CD9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v34 = a1[3];
  uint64_t v33 = a1[4];
  uint64_t v32 = a1[5];
  uint64_t v31 = a1[6];
  uint64_t v30 = a1[7];
  uint64_t v29 = a1[8];
  uint64_t v61 = v30;
  uint64_t v62 = v29;
  type metadata accessor for _FlowToastContentView();
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07580);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04478);
  sub_219157F48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v56 = MEMORY[0x263F19100];
  uint64_t v3 = MEMORY[0x263F18E48];
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = sub_218FFDF90(&qword_267C07588, &qword_267C07580);
  uint64_t v36 = v3;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = sub_218FFDF90(&qword_267C04470, &qword_267C04478);
  swift_getWitnessTable();
  uint64_t v4 = sub_219159088();
  uint64_t v26 = sub_219157FF8();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v5 = sub_21912F794(&qword_267C07590, MEMORY[0x263F18FD0]);
  uint64_t v57 = v4;
  uint64_t v58 = v26;
  uint64_t v59 = v25;
  uint64_t v60 = v5;
  swift_getOpaqueTypeMetadata2();
  sub_21915B378();
  uint64_t v6 = sub_219158ED8();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v24 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07598);
  uint64_t v9 = sub_219157F48();
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unsigned int v14 = (char *)&v24 - v13;
  uint64_t v38 = a1[2];
  uint64_t v39 = v34;
  uint64_t v40 = v33;
  uint64_t v41 = v32;
  uint64_t v42 = v31;
  uint64_t v43 = v30;
  uint64_t v15 = v35;
  uint64_t v44 = v29;
  uint64_t v45 = v35;
  uint64_t v57 = v4;
  uint64_t v58 = v26;
  uint64_t v59 = v25;
  uint64_t v60 = v5;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v16 = swift_getWitnessTable();
  sub_219158EC8();
  sub_219159368();
  uint64_t v17 = *(void *)(v15 + 8);
  char v18 = *(unsigned char *)(v15 + 16);
  uint64_t v57 = *(void *)v15;
  uint64_t v58 = v17;
  LOBYTE(v59) = v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03698);
  MEMORY[0x21D47FB40](&v49, v19);
  LOBYTE(v57) = v49;
  uint64_t v48 = v16;
  uint64_t v20 = swift_getWitnessTable();
  sub_219158E28();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  uint64_t v21 = sub_218FFDF90(&qword_267C075A0, &qword_267C07598);
  uint64_t v46 = v20;
  uint64_t v47 = v21;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v11, v9, (uint64_t)v14);
  int v22 = *(void (**)(char *, uint64_t))(v28 + 8);
  v22(v11, v9);
  sub_218FFDE04((uint64_t)v14, v9, v37);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v9);
}

uint64_t sub_21912D3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v105 = a9;
  uint64_t v106 = (char *)a1;
  uint64_t v16 = sub_219157FF8();
  uint64_t v94 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v93 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = a2;
  uint64_t v119 = a3;
  uint64_t v120 = a4;
  uint64_t v121 = a5;
  uint64_t v122 = a6;
  uint64_t v123 = a7;
  uint64_t v124 = a8;
  uint64_t OpaqueTypeConformance2 = type metadata accessor for _FlowToastView();
  uint64_t v88 = *(void *)(OpaqueTypeConformance2 - 8);
  uint64_t v87 = *(void *)(v88 + 64);
  MEMORY[0x270FA5388](OpaqueTypeConformance2);
  uint64_t v97 = (char *)&v78 - v18;
  uint64_t v98 = a3;
  uint64_t v118 = a3;
  uint64_t v119 = a4;
  uint64_t v89 = a4;
  uint64_t v90 = a5;
  uint64_t v120 = a5;
  uint64_t v121 = a6;
  uint64_t v91 = a6;
  uint64_t v92 = a7;
  uint64_t v122 = a7;
  uint64_t v123 = a8;
  uint64_t v99 = a8;
  type metadata accessor for _FlowToastContentView();
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07580);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04478);
  uint64_t v19 = sub_219157F48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v117 = MEMORY[0x263F19100];
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_218FFDF90(&qword_267C07588, &qword_267C07580);
  uint64_t v114 = v20;
  uint64_t v115 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_218FFDF90(&qword_267C04470, &qword_267C04478);
  uint64_t v112 = v22;
  uint64_t v113 = v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v86 = v19;
  uint64_t v83 = v24;
  uint64_t v25 = sub_219159088();
  uint64_t v85 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v84 = (char *)&v78 - v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = sub_21912F794(&qword_267C07590, MEMORY[0x263F18FD0]);
  uint64_t v103 = v25;
  uint64_t v118 = v25;
  uint64_t v119 = v16;
  uint64_t v104 = v16;
  uint64_t v108 = v28;
  uint64_t v109 = v27;
  uint64_t v120 = v27;
  uint64_t v121 = v28;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v30 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v96 = (uint64_t)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v82 = (uint64_t)&v78 - v33;
  uint64_t v34 = sub_21915B378();
  uint64_t v95 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v78 - v35;
  uint64_t v107 = a2;
  uint64_t v101 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v100 = (char *)&v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_21915B378();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v78 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v78 - v44;
  uint64_t v46 = *((void *)v106 + 1);
  uint64_t v47 = (uint64_t)v106;
  char v48 = v106[16];
  uint64_t v118 = *(void *)v106;
  uint64_t v119 = v46;
  LOBYTE(v120) = v48;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03698);
  MEMORY[0x21D47FB40](&v111, v49);
  if (v111 == 1)
  {
    uint64_t v79 = v30;
    uint64_t v80 = OpaqueTypeMetadata2;
    uint64_t v81 = v45;
    uint64_t v50 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v36, v47 + *(int *)(OpaqueTypeConformance2 + 76), v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v36, 1, v107) != 1)
    {
      uint64_t v54 = v107;
      (*(void (**)(char *, char *))(v101 + 32))(v100, v36);
      uint64_t v55 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v97, v47, OpaqueTypeConformance2);
      unint64_t v56 = (*(unsigned __int8 *)(v55 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v57 = (char *)swift_allocObject();
      uint64_t v58 = v98;
      *((void *)v57 + 2) = v54;
      *((void *)v57 + 3) = v58;
      uint64_t v59 = v89;
      uint64_t v60 = v90;
      *((void *)v57 + 4) = v89;
      *((void *)v57 + 5) = v60;
      uint64_t v61 = v91;
      uint64_t v62 = v92;
      *((void *)v57 + 6) = v91;
      *((void *)v57 + 7) = v62;
      *((void *)v57 + 8) = v99;
      uint64_t v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(&v57[v56], v97, OpaqueTypeConformance2);
      MEMORY[0x270FA5388](v63);
      uint64_t v64 = v98;
      *(&v78 - 10) = v107;
      *(&v78 - 9) = v64;
      *(&v78 - 8) = v59;
      *(&v78 - 7) = v60;
      uint64_t v65 = v109;
      *(&v78 - 6) = v61;
      *(&v78 - 5) = v62;
      uint64_t v66 = (uint64_t)v106;
      *(&v78 - 4) = v99;
      *(&v78 - 3) = v66;
      *(&v78 - 2) = (uint64_t)v100;
      uint64_t v67 = v84;
      sub_219159058();
      uint64_t v68 = v93;
      sub_219157FE8();
      uint64_t v53 = v103;
      uint64_t v52 = v104;
      uint64_t v69 = v108;
      sub_219158A78();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v68, v52);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v67, v53);
      uint64_t v118 = v53;
      uint64_t v119 = v52;
      uint64_t v120 = v65;
      uint64_t v121 = v69;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v106 = v42;
      uint64_t v70 = v82;
      uint64_t v71 = v96;
      uint64_t v72 = v80;
      sub_218FFDE04(v96, v80, v82);
      uint64_t v73 = v79;
      long long v74 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
      v74(v71, v72);
      uint64_t v75 = (uint64_t)v106;
      sub_218FFDE04(v70, v72, (uint64_t)v106);
      v74(v70, v72);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v75, 0, 1, v72);
      uint64_t v45 = v81;
      uint64_t v76 = v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v81, v75, v39);
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v51(v76, v39);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v107);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v34);
    uint64_t v45 = v81;
    OpaqueTypeMetadata2 = v80;
    uint64_t v30 = v79;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v42, 1, 1, OpaqueTypeMetadata2);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v45, v42, v39);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v51((uint64_t)v42, v39);
  uint64_t v52 = v104;
  uint64_t v53 = v103;
LABEL_6:
  uint64_t v118 = v53;
  uint64_t v119 = v52;
  uint64_t v120 = v109;
  uint64_t v121 = v108;
  uint64_t v110 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v45, v39, v105);
  return ((uint64_t (*)(char *, uint64_t))v51)(v45, v39);
}

uint64_t sub_21912DF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v165 = a1;
  uint64_t v166 = a2;
  uint64_t v147 = a9;
  uint64_t v16 = sub_219158298();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v143 = v16;
  uint64_t v144 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v140 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_219157F98();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v141 = v19;
  uint64_t v142 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v138 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C075A8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v145 = v22;
  uint64_t v146 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v139 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2191592D8();
  uint64_t v132 = *(void *)(v25 - 8);
  uint64_t v133 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v129 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_219158028() - 8;
  MEMORY[0x270FA5388](v126);
  uint64_t v125 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C075B0);
  MEMORY[0x270FA5388](v128);
  uint64_t v127 = (uint64_t)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = a3;
  uint64_t v167 = *(void *)(a3 - 8);
  uint64_t v29 = *(void *)(v167 + 64);
  MEMORY[0x270FA5388](v30);
  uint64_t v123 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v121 = (char *)&v117 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v157 = a8;
  uint64_t v158 = (char *)&v117 - v34;
  *(void *)&long long v195 = v35;
  *((void *)&v195 + 1) = a4;
  uint64_t v163 = a4;
  uint64_t v164 = a5;
  uint64_t v36 = a5;
  *(void *)&long long v196 = a5;
  *((void *)&v196 + 1) = a6;
  uint64_t v37 = a6;
  uint64_t v155 = a6;
  uint64_t v156 = a7;
  *(void *)&long long v197 = a7;
  *((void *)&v197 + 1) = a8;
  uint64_t v161 = a10;
  *(void *)&long long v198 = a10;
  uint64_t v162 = type metadata accessor for _FlowToastView();
  uint64_t v168 = *(void **)(v162 - 8);
  uint64_t v38 = v168[8];
  MEMORY[0x270FA5388](v162);
  uint64_t v120 = (char *)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v159 = (char *)&v117 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v117 - v42;
  uint64_t v148 = (char *)&v117 - v42;
  *(void *)&long long v195 = a4;
  *((void *)&v195 + 1) = v36;
  *(void *)&long long v196 = v37;
  *((void *)&v196 + 1) = a7;
  *(void *)&long long v197 = a8;
  *((void *)&v197 + 1) = a10;
  uint64_t v122 = type metadata accessor for _FlowToastContentView();
  uint64_t v124 = sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07580);
  uint64_t v131 = sub_219157F48();
  uint64_t v136 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v160 = (char *)&v117 - v44;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04478);
  uint64_t v135 = sub_219157F48();
  uint64_t v137 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v130 = (char *)&v117 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v47 = MEMORY[0x270FA5388](v46);
  uint64_t v134 = (uint64_t)&v117 - v48;
  uint64_t v49 = v168;
  uint64_t v50 = (void (*)(char *, uint64_t, uint64_t))v168[2];
  uint64_t v153 = v168 + 2;
  uint64_t v154 = v50;
  ((void (*)(char *, uint64_t, uint64_t, double))v50)(v43, v165, v162, v47);
  uint64_t v51 = v167;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v167 + 16);
  uint64_t v151 = v167 + 16;
  uint64_t v152 = v52;
  uint64_t v53 = v119;
  v52(v158, v166, v119);
  uint64_t v54 = *((unsigned __int8 *)v49 + 80);
  uint64_t v55 = (v54 + 72) & ~v54;
  uint64_t v56 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v57 = v51;
  uint64_t v118 = v55;
  uint64_t v58 = (v38 + v56 + v55) & ~v56;
  uint64_t v149 = v54 | v56 | 7;
  uint64_t v150 = v58 + v29;
  uint64_t v59 = (char *)swift_allocObject();
  uint64_t v60 = v53;
  uint64_t v61 = v163;
  *((void *)v59 + 2) = v53;
  *((void *)v59 + 3) = v61;
  uint64_t v62 = v155;
  uint64_t v63 = v156;
  *((void *)v59 + 4) = v164;
  *((void *)v59 + 5) = v62;
  uint64_t v64 = v157;
  *((void *)v59 + 6) = v63;
  *((void *)v59 + 7) = v64;
  uint64_t v65 = v162;
  *((void *)v59 + 8) = v161;
  uint64_t v117 = (void (*)(char *, char *, uint64_t))v168[4];
  v168 += 4;
  v117(&v59[v55], v148, v65);
  uint64_t v66 = *(char **)(v57 + 32);
  uint64_t v167 = v57 + 32;
  uint64_t v148 = v66;
  ((void (*)(char *, char *, uint64_t))v66)(&v59[v58], v158, v60);
  v154(v159, v165, v65);
  uint64_t v67 = v121;
  v152(v121, v166, v60);
  uint64_t v68 = (void *)swift_allocObject();
  uint64_t v69 = v163;
  v68[2] = v60;
  void v68[3] = v69;
  v68[4] = v164;
  v68[5] = v62;
  v68[6] = v63;
  v68[7] = v64;
  uint64_t v71 = v117;
  uint64_t v70 = v118;
  uint64_t v72 = (char *)v68 + v118;
  v68[8] = v161;
  uint64_t v73 = v65;
  v71(v72, v159, v65);
  ((void (*)(char *, char *, uint64_t))v148)((char *)v68 + v58, v67, v60);
  long long v74 = v120;
  v154(v120, v165, v73);
  uint64_t v75 = v123;
  v152(v123, v166, v60);
  uint64_t v76 = (char *)swift_allocObject();
  uint64_t v77 = v162;
  uint64_t v78 = v163;
  *((void *)v76 + 2) = v60;
  *((void *)v76 + 3) = v78;
  uint64_t v79 = v155;
  *((void *)v76 + 4) = v164;
  *((void *)v76 + 5) = v79;
  uint64_t v80 = v157;
  *((void *)v76 + 6) = v156;
  *((void *)v76 + 7) = v80;
  *((void *)v76 + 8) = v161;
  v71(&v76[v70], v74, v77);
  ((void (*)(char *, char *, uint64_t))v148)(&v76[v58], v75, v60);
  *(void *)&long long v195 = sub_21912F3E8;
  *((void *)&v195 + 1) = v59;
  *(void *)&long long v196 = sub_21912F404;
  *((void *)&v196 + 1) = v68;
  *(void *)&long long v197 = sub_21912F604;
  *((void *)&v197 + 1) = v76;
  sub_219159318();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158D48();
  swift_release();
  swift_release();
  swift_release();
  long long v181 = v191;
  long long v182 = v192;
  long long v183 = v193;
  long long v184 = v194;
  long long v177 = v187;
  long long v178 = v188;
  long long v179 = v189;
  long long v180 = v190;
  long long v175 = v185;
  long long v176 = v186;
  uint64_t v81 = v125;
  uint64_t v82 = &v125[*(int *)(v126 + 28)];
  uint64_t v83 = *MEMORY[0x263F19860];
  uint64_t v84 = sub_219158318();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 104))(v82, v83, v84);
  __asm { FMOV            V0.2D, #9.0 }
  *uint64_t v81 = _Q0;
  uint64_t v90 = v129;
  sub_2191592B8();
  uint64_t v91 = v127;
  sub_2190649E8((uint64_t)v81, v127);
  uint64_t v92 = v128;
  uint64_t v93 = v132;
  uint64_t v94 = v90;
  uint64_t v95 = v90;
  uint64_t v96 = v133;
  (*(void (**)(uint64_t, char *, uint64_t))(v132 + 16))(v91 + *(int *)(v128 + 52), v94, v133);
  *(_WORD *)(v91 + *(int *)(v92 + 56)) = 256;
  (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v96);
  sub_219064D3C((uint64_t)v81);
  sub_219159318();
  uint64_t v173 = WitnessTable;
  uint64_t v174 = MEMORY[0x263F19100];
  uint64_t v168 = (void *)MEMORY[0x263F18E48];
  uint64_t v97 = swift_getWitnessTable();
  sub_218FFDF90(&qword_267C075B8, &qword_267C075B0);
  sub_219158A28();
  sub_218FFE158(v91, &qword_267C075B0);
  long long v201 = v181;
  long long v202 = v182;
  long long v203 = v183;
  long long v204 = v184;
  long long v197 = v177;
  long long v198 = v178;
  long long v199 = v179;
  long long v200 = v180;
  long long v195 = v175;
  long long v196 = v176;
  sub_21912F748((uint64_t)&v195);
  sub_2191593D8();
  uint64_t v98 = v138;
  sub_219157FA8();
  uint64_t v99 = v140;
  sub_219158288();
  uint64_t v100 = sub_21912F794(qword_267C075C0, MEMORY[0x263F18E80]);
  uint64_t v101 = sub_21912F794((unint64_t *)&qword_267C04388, MEMORY[0x263F196B8]);
  uint64_t v102 = (uint64_t)v139;
  uint64_t v103 = v141;
  uint64_t v104 = v143;
  sub_219157AE8();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v99, v104);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v98, v103);
  uint64_t v105 = sub_218FFDF90(&qword_267C07588, &qword_267C07580);
  uint64_t v171 = v97;
  uint64_t v172 = v105;
  uint64_t v106 = v131;
  uint64_t v107 = swift_getWitnessTable();
  *(void *)&long long v185 = v103;
  *((void *)&v185 + 1) = v104;
  *(void *)&long long v186 = v100;
  *((void *)&v186 + 1) = v101;
  swift_getOpaqueTypeConformance2();
  uint64_t v108 = (uint64_t)v130;
  uint64_t v109 = v145;
  uint64_t v110 = v160;
  sub_21912CCA0(v102);
  (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v102, v109);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v110, v106);
  uint64_t v111 = sub_218FFDF90(&qword_267C04470, &qword_267C04478);
  uint64_t v169 = v107;
  uint64_t v170 = v111;
  uint64_t v112 = v135;
  swift_getWitnessTable();
  uint64_t v113 = v134;
  sub_218FFDE04(v108, v112, v134);
  uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
  v114(v108, v112);
  sub_218FFDE04(v113, v112, v147);
  return ((uint64_t (*)(uint64_t, uint64_t))v114)(v113, v112);
}

uint64_t sub_21912ECE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v24 - v12;
  v24[1] = v14;
  v24[2] = v15;
  void v24[3] = v16;
  v24[4] = v17;
  v24[5] = v18;
  v24[6] = v19;
  v24[7] = v20;
  uint64_t v21 = type metadata accessor for _FlowToastView();
  (*(void (**)(uint64_t))(a1 + *(int *)(v21 + 80)))(a2);
  sub_218FFDE04((uint64_t)v10, a3, (uint64_t)v13);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, a3);
  sub_218FFDE04((uint64_t)v13, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, a3);
}

uint64_t sub_21912EE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v24 - v12;
  v24[1] = v14;
  v24[2] = v15;
  void v24[3] = v16;
  v24[4] = v17;
  v24[5] = v18;
  v24[6] = v19;
  v24[7] = v20;
  uint64_t v21 = type metadata accessor for _FlowToastView();
  (*(void (**)(uint64_t))(a1 + *(int *)(v21 + 84)))(a2);
  sub_218FFDE04((uint64_t)v10, a3, (uint64_t)v13);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, a3);
  sub_218FFDE04((uint64_t)v13, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, a3);
}

uint64_t sub_21912EFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v24 - v13;
  v24[1] = v15;
  v24[2] = v16;
  void v24[3] = v17;
  v24[4] = v18;
  v24[5] = v19;
  v24[6] = v20;
  v24[7] = a5;
  uint64_t v21 = type metadata accessor for _FlowToastView();
  (*(void (**)(uint64_t))(a1 + *(int *)(v21 + 88)))(a2);
  sub_218FFDE04((uint64_t)v11, a3, (uint64_t)v14);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v11, a3);
  sub_218FFDE04((uint64_t)v14, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, a3);
}

uint64_t type metadata accessor for _FlowToastContentView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21912F15C@<X0>(uint64_t a1@<X8>)
{
  return sub_21912D3B4(v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_21912F170()
{
  long long v6 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = type metadata accessor for _FlowToastView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 76);
  uint64_t v4 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, void))(v4 + 48))(v3, 1, v6)) {
    (*(void (**)(uint64_t, void))(v4 + 8))(v3, v6);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21912F300()
{
  return sub_219159128();
}

uint64_t sub_21912F3AC@<X0>(uint64_t a1@<X8>)
{
  return sub_21912DF2C(v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1, v1[8]);
}

uint64_t sub_21912F3E8()
{
  return sub_21912F61C((uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21912ECE8);
}

uint64_t sub_21912F404()
{
  return sub_21912F61C((uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21912EE5C);
}

uint64_t objectdestroy_3Tm_0()
{
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = type metadata accessor for _FlowToastView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v3 = *(void *)(v7 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  unint64_t v5 = v0 + v2 + *(int *)(v1 + 76);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, void))(v3 + 48))(v5, 1, v7)) {
    (*(void (**)(unint64_t, void))(v3 + 8))(v5, v7);
  }
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, void))(v3 + 8))(v0 + ((v2 + v8 + v4) & ~v4), v7);
  return swift_deallocObject();
}

uint64_t sub_21912F604()
{
  return sub_21912F61C((uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21912EFD0);
}

uint64_t sub_21912F61C(uint64_t (*a1)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = *((void *)v1 + 3);
  uint64_t v5 = *((void *)v1 + 4);
  uint64_t v6 = *((void *)v1 + 5);
  uint64_t v7 = *((void *)v1 + 6);
  uint64_t v8 = *((void *)v1 + 7);
  uint64_t v9 = *((void *)v1 + 8);
  uint64_t v10 = *(void *)(type metadata accessor for _FlowToastView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return a1(&v1[v11], &v1[(v11 + *(void *)(v10 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)], v3, v4, v5, v6, v7, v8, v9, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_21912F748(uint64_t a1)
{
  return a1;
}

uint64_t sub_21912F794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21912F7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v20 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07648);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05460);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C10);
  sub_219157F48();
  sub_219157F48();
  sub_219157F48();
  uint64_t v19 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06638);
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05468);
  sub_219157F48();
  sub_219157F48();
  sub_219157F48();
  uint64_t v18 = *(void *)(a1 + 32);
  sub_219157F48();
  sub_219157F48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C28);
  sub_219157F48();
  sub_219157F48();
  sub_219157F48();
  swift_getTupleTypeMetadata3();
  sub_2191593B8();
  swift_getWitnessTable();
  uint64_t v3 = sub_2191590F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_219157F48();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - v12;
  sub_219158338();
  uint64_t v23 = v20;
  uint64_t v24 = v19;
  uint64_t v25 = v18;
  long long v26 = *(_OWORD *)(a1 + 40);
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v28 = v21;
  sub_2191590E8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158D88();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v29 = WitnessTable;
  uint64_t v30 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v10, v7, (uint64_t)v13);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  sub_218FFDE04((uint64_t)v13, v7, v22);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v7);
}

uint64_t sub_21912FC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v152 = a7;
  uint64_t v139 = a6;
  uint64_t v161 = a5;
  uint64_t v162 = a1;
  uint64_t v159 = a8;
  uint64_t v145 = a4;
  uint64_t v150 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v146 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C06638);
  uint64_t v143 = sub_219157F48();
  uint64_t v148 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v141 = (char *)&v117 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05468);
  uint64_t v144 = sub_219157F48();
  uint64_t v151 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v140 = (char *)&v117 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C28);
  uint64_t v149 = sub_219157F48();
  uint64_t v156 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v142 = (char *)&v117 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C05460);
  uint64_t v153 = sub_219157F48();
  uint64_t v158 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  uint64_t v147 = (char *)&v117 - v14;
  uint64_t v155 = sub_219157F48();
  uint64_t v157 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v171 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v154 = (uint64_t)&v117 - v17;
  uint64_t v131 = a3;
  uint64_t v134 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v129 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_219157F48();
  uint64_t v135 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v127 = (char *)&v117 - v20;
  uint64_t v133 = sub_219157F48();
  uint64_t v137 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v128 = (char *)&v117 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C10);
  uint64_t v136 = sub_219157F48();
  uint64_t v138 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v130 = (char *)&v117 - v22;
  uint64_t v167 = sub_219157F48();
  uint64_t v170 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v166 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v169 = (uint64_t)&v117 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C06D40);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v172 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04D98);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = a2;
  uint64_t v31 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07648);
  uint64_t v35 = sub_219157F48();
  uint64_t v120 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v117 - v36;
  uint64_t v38 = sub_219157F48();
  uint64_t v123 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v118 = (char *)&v117 - v39;
  uint64_t v121 = sub_219157F48();
  uint64_t v125 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v119 = (char *)&v117 - v40;
  uint64_t v124 = sub_219157F48();
  uint64_t v126 = *(void (***)(char *, uint64_t))(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v122 = (char *)&v117 - v41;
  uint64_t v160 = sub_219157F48();
  uint64_t v168 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v173 = (char *)&v117 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v44 = MEMORY[0x270FA5388](v43);
  uint64_t v174 = (uint64_t)&v117 - v45;
  (*(void (**)(double))v162)(v44);
  sub_219158378();
  uint64_t v46 = sub_2191583B8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v30, 0, 1, v46);
  uint64_t v47 = v165;
  uint64_t v48 = v161;
  sub_219158C08();
  sub_218FFE158((uint64_t)v30, &qword_267C04D98);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v47);
  uint64_t v164 = sub_2191588D8();
  uint64_t v49 = *(void *)(v164 - 8);
  uint64_t v163 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
  uint64_t v165 = v49 + 56;
  uint64_t v50 = (uint64_t)v172;
  v163(v172, 1, 1, v164);
  sub_2191588F8();
  sub_218FFE158(v50, &qword_267C06D40);
  uint64_t v51 = sub_218FFDF90(&qword_267C07650, &qword_267C07648);
  v179[29] = v48;
  v179[30] = v51;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v53 = v118;
  sub_219158CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v37, v35);
  sub_219158EA8();
  sub_219158E98();
  swift_release();
  uint64_t v161 = sub_218FFDF90(&qword_267C05500, &qword_267C05460);
  v179[27] = WitnessTable;
  v179[28] = v161;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = v119;
  sub_219158B18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v53, v38);
  sub_219159318();
  uint64_t v123 = sub_218FFDF90((unint64_t *)&qword_267C04C08, &qword_267C04C10);
  v179[25] = v54;
  v179[26] = v123;
  uint64_t v115 = v121;
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v56 = v122;
  sub_219158D48();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v55, v115);
  sub_219158858();
  v179[23] = v116;
  v179[24] = MEMORY[0x263F19100];
  uint64_t v57 = v124;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = (uint64_t)v173;
  sub_219158D98();
  v126[1](v56, v57);
  v179[21] = v58;
  v179[22] = MEMORY[0x263F18C10];
  uint64_t v60 = v160;
  uint64_t v124 = swift_getWitnessTable();
  sub_218FFDE04(v59, v60, v174);
  uint64_t v61 = *(void (***)(char *, uint64_t))(v168 + 8);
  uint64_t v125 = v168 + 8;
  uint64_t v126 = v61;
  uint64_t v62 = ((uint64_t (*)(uint64_t, uint64_t))v61)(v59, v60);
  uint64_t v63 = v162;
  uint64_t v64 = v129;
  (*(void (**)(uint64_t))(v162 + 16))(v62);
  uint64_t v65 = v127;
  uint64_t v66 = v131;
  uint64_t v67 = v139;
  sub_219158C78();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v64, v66);
  uint64_t v68 = sub_218FFDF90(&qword_267C06650, &qword_267C06638);
  v179[19] = v67;
  v179[20] = v68;
  uint64_t v69 = v132;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v71 = v128;
  sub_219158E38();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v65, v69);
  sub_219158EA8();
  uint64_t v135 = sub_218FFDF90(&qword_267C05508, &qword_267C05468);
  v179[17] = v70;
  v179[18] = v135;
  uint64_t v72 = v133;
  uint64_t v73 = swift_getWitnessTable();
  long long v74 = v130;
  sub_219158B18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v71, v72);
  sub_2191588E8();
  uint64_t v75 = (uint64_t)v172;
  v163(v172, 1, 1, v164);
  sub_2191588F8();
  sub_218FFE158(v75, &qword_267C06D40);
  v179[15] = v73;
  v179[16] = v123;
  uint64_t v76 = v136;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = (uint64_t)v166;
  sub_219158CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v74, v76);
  v179[13] = v77;
  v179[14] = v161;
  uint64_t v79 = v167;
  uint64_t v137 = swift_getWitnessTable();
  sub_218FFDE04(v78, v79, v169);
  uint64_t v80 = *(void (**)(void, void))(v170 + 8);
  uint64_t v138 = v170 + 8;
  uint64_t v139 = v80;
  uint64_t v81 = ((uint64_t (*)(uint64_t, uint64_t))v80)(v78, v79);
  uint64_t v82 = *(void (**)(uint64_t))(v63 + 32);
  uint64_t v83 = v146;
  v82(v81);
  uint64_t v84 = v141;
  uint64_t v85 = v145;
  uint64_t v86 = v152;
  sub_219158C78();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v83, v85);
  v179[11] = v86;
  v179[12] = v68;
  uint64_t v87 = v143;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v89 = v140;
  sub_219158E38();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v84, v87);
  LODWORD(v179[0]) = sub_2191585E8();
  v179[9] = v88;
  v179[10] = v135;
  uint64_t v90 = v144;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = v142;
  sub_219158B28();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v89, v90);
  uint64_t v93 = (uint64_t)v172;
  v163(v172, 1, 1, v164);
  sub_2191588F8();
  sub_218FFE158(v93, &qword_267C06D40);
  uint64_t v94 = sub_218FFDF90(&qword_267C04C20, &qword_267C04C28);
  v179[7] = v91;
  v179[8] = v94;
  uint64_t v95 = v149;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v97 = v147;
  sub_219158CE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v156 + 8))(v92, v95);
  sub_219158848();
  v179[5] = v96;
  v179[6] = v161;
  uint64_t v98 = v153;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v100 = (uint64_t)v171;
  sub_219158D98();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v97, v98);
  v179[3] = v99;
  v179[4] = MEMORY[0x263F18C10];
  uint64_t v101 = v155;
  uint64_t v165 = swift_getWitnessTable();
  uint64_t v102 = v154;
  sub_218FFDE04(v100, v101, v154);
  uint64_t v103 = v157;
  uint64_t v172 = *(char **)(v157 + 8);
  ((void (*)(uint64_t, uint64_t))v172)(v100, v101);
  uint64_t v104 = v173;
  uint64_t v105 = v160;
  (*(void (**)(char *, uint64_t, uint64_t))(v168 + 16))(v173, v174, v160);
  v179[0] = v104;
  uint64_t v106 = v169;
  uint64_t v107 = v78;
  uint64_t v108 = v78;
  uint64_t v109 = v167;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 16))(v108, v169, v167);
  v179[1] = v107;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v100, v102, v101);
  v179[2] = v100;
  v178[0] = v105;
  v178[1] = v109;
  v178[2] = v101;
  uint64_t v175 = v124;
  uint64_t v176 = v137;
  uint64_t v177 = v165;
  sub_218FFC48C((uint64_t)v179, 3uLL, (uint64_t)v178);
  uint64_t v110 = (void (*)(char *, uint64_t))v172;
  ((void (*)(uint64_t, uint64_t))v172)(v102, v101);
  uint64_t v111 = v106;
  uint64_t v112 = (void (*)(char *, uint64_t))v139;
  v139(v111, v109);
  uint64_t v113 = v126;
  ((void (*)(uint64_t, uint64_t))v126)(v174, v105);
  v110(v171, v101);
  v112(v166, v109);
  return ((uint64_t (*)(char *, uint64_t))v113)(v173, v105);
}

uint64_t sub_219131090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21912F7DC(a1, a2);
}

uint64_t sub_2191310CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2191313E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21913142C@<X0>(uint64_t a1@<X8>)
{
  return sub_21912FC3C(*(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(void, void))(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_219131440()
{
  return swift_getWitnessTable();
}

uint64_t View.impressionableLayout<A>(_:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v19 = a6;
  int v18 = a5;
  char v12 = a4 & 1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21915ABF8();
  sub_2190C28BC();
  View.impressionableLayout<A>(for:impressions:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)((uint64_t)&type metadata for ComponentModelViewID, (uint64_t)v15, a1, a2, a3, v12, v18, v19, a7, (uint64_t)&type metadata for ComponentModelViewID, a8);
  return sub_218FFE158((uint64_t)v15, &qword_26AD03338);
}

uint64_t View.impressionableLayoutItem(_:configuration:position:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  char v11 = a3 & 1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21915ABF8();
  unint64_t v15 = sub_2190C28BC();
  View.impressionableLayoutItem<A>(itemId:impressions:position:)((uint64_t)v18, (uint64_t)v14, a2, v11, a4, (uint64_t)&type metadata for ComponentModelViewID, a5, v15, a6);
  sub_218FFE158((uint64_t)v14, &qword_26AD03338);
  return sub_21909F0E8((uint64_t)v18);
}

uint64_t sub_2191318EC()
{
  uint64_t v0 = sub_21915B258();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21915B238();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_219159428();
  MEMORY[0x270FA5388](v5 - 8);
  sub_218FFE628(0, (unint64_t *)&qword_26AD01078);
  sub_219159418();
  v7[1] = MEMORY[0x263F8EE78];
  sub_21913E52C(&qword_267C07890, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C07898);
  sub_218FFDF90(qword_267C078A0, &qword_267C07898);
  sub_21915B3D8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_21915B288();
  qword_267C07658 = result;
  return result;
}

uint64_t View.impressionableLayoutItem<A>(itemId:impressions:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v41 = a7;
  uint64_t v35 = a5;
  uint64_t v36 = a8;
  uint64_t v40 = a3;
  uint64_t v38 = a1;
  uint64_t v42 = a9;
  unsigned int v39 = a4 & 1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ImpressionableLayoutItemViewModifier();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v22 = sub_219157F48();
  uint64_t v37 = *(void *)(v22 - 8);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v34 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, v38, a6, v23);
  sub_2190090C4(a2, (uint64_t)v13, &qword_26AD03338);
  uint64_t v26 = (uint64_t)v17;
  uint64_t v27 = (uint64_t)v13;
  uint64_t v28 = v40;
  uint64_t v29 = v39;
  sub_219131E74(v26, v27, v40, v39, a6, (uint64_t)v21);
  uint64_t v30 = v41;
  MEMORY[0x21D47F800](v21, v35, v18, v41);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = v30;
  uint64_t v44 = WitnessTable;
  uint64_t v32 = swift_getWitnessTable();
  View.impressionableClickLocation(impressionMetrics:position:)(a2, v28, v29, v22, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v25, v22);
}

uint64_t sub_219131E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_219157718();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for ImpressionableLayoutItemViewModifier();
  sub_219157708();
  sub_2191323BC((uint64_t)v14);
  uint64_t v16 = (uint64_t *)(a6 + v15[12]);
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03190);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)(a6 + v15[13]);
  uint64_t *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t result = sub_21913BB9C(a2, a6 + v15[9]);
  uint64_t v19 = a6 + v15[10];
  *(void *)uint64_t v19 = a3;
  *(unsigned char *)(v19 + 8) = a4 & 1;
  return result;
}

uint64_t View.impressionableLayout<A>(for:impressions:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v37 = a8;
  int v35 = a7;
  uint64_t v32 = a1;
  uint64_t v33 = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v34 = a9;
  uint64_t v36 = a11;
  uint64_t v27 = a10;
  uint64_t v28 = a2;
  int v31 = a6 & 1;
  uint64_t v11 = sub_21915A2A8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ImpressionableLayoutViewModifier();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t *)((char *)&v27 - v23);
  sub_2190090C4(v28, (uint64_t)v20, &qword_26AD03338);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v25(v17, v29, v11);
  v25(v14, v30, v11);
  sub_219132278(v32, (uint64_t)v20, (uint64_t)v17, v33, v31, (uint64_t)v14, v35, v24);
  MEMORY[0x21D47F800](v24, v37, v21, v36);
  return (*(uint64_t (**)(void *, uint64_t))(v22 + 8))(v24, v21);
}

uint64_t sub_219132278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, void *a8@<X8>)
{
  uint64_t v15 = (int *)type metadata accessor for ImpressionableLayoutViewModifier();
  uint64_t v16 = (void *)((char *)a8 + v15[14]);
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  *a8 = a1;
  sub_21913BB9C(a2, (uint64_t)a8 + v15[9]);
  uint64_t v17 = (char *)a8 + v15[10];
  uint64_t v18 = sub_21915A2A8();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v17, a3, v18);
  uint64_t v20 = (char *)a8 + v15[12];
  *(void *)uint64_t v20 = a4;
  v20[8] = a5 & 1;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)((char *)a8 + v15[11], a6, v18);
  *((unsigned char *)a8 + v15[13]) = a7;
  return result;
}

uint64_t sub_2191323BC(uint64_t a1)
{
  uint64_t v2 = sub_219157718();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_219158FE8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_2191324B4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03350);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21915A198();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2190F9F54((uint64_t)v7);
  sub_21915A148();
  uint64_t v8 = sub_219157718();
  MEMORY[0x21D480BE0](v3, v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_219132654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v62 = a1;
  uint64_t v65 = a3;
  uint64_t v6 = sub_219157718();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v64 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD036B0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v63 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)&v47 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v57 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *(void *)(a2 + 16);
  uint64_t v54 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a2 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  sub_2191585B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD014F8);
  uint64_t v53 = sub_219157F48();
  uint64_t v59 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v66 = (char *)&v47 - v20;
  uint64_t v50 = *(void *)(a2 + 24);
  uint64_t v21 = v50;
  uint64_t v55 = type metadata accessor for _ImpressionableLayoutItemViewModifier();
  uint64_t v58 = sub_219157F48();
  uint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v51 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v56 = (uint64_t)&v47 - v24;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v4, a2);
  unint64_t v25 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v48;
  *(void *)(v26 + 16) = v48;
  *(void *)(v26 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v26 + v25, v19, a2);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158C58();
  swift_release();
  swift_release();
  uint64_t v28 = (uint64_t)v52;
  uint64_t v29 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v52, v4, v27);
  uint64_t v30 = v57;
  sub_2190090C4(v4 + *(int *)(a2 + 36), v57, &qword_26AD03338);
  uint64_t v31 = v4 + *(int *)(a2 + 40);
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *(unsigned __int8 *)(v31 + 8);
  uint64_t v34 = (uint64_t)v61;
  sub_2191324B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD032E8);
  uint64_t v35 = (uint64_t)v64;
  sub_219158FF8();
  uint64_t v36 = v63;
  sub_2190F9F8C(v63);
  uint64_t v71 = sub_219132DD0(v28, v30, v32, v33, v34, v35, v36, v29, v50);
  uint64_t v37 = sub_218FFDF90(&qword_26AD014F0, &qword_26AD014F8);
  uint64_t v69 = WitnessTable;
  uint64_t v70 = v37;
  uint64_t v38 = v53;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = (uint64_t)v51;
  uint64_t v41 = v66;
  MEMORY[0x21D47F800](&v71, v38, v55, v39);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v38);
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v67 = v39;
  uint64_t v68 = v42;
  uint64_t v43 = v58;
  swift_getWitnessTable();
  uint64_t v44 = v56;
  sub_218FFDE04(v40, v43, v56);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v45(v40, v43);
  sub_218FFDE04(v44, v43, v65);
  return ((uint64_t (*)(uint64_t, uint64_t))v45)(v44, v43);
}

uint64_t sub_219132D18(uint64_t a1)
{
  sub_218FFE158(a1, &qword_26AD036B0);
  type metadata accessor for ImpressionableLayoutItemViewModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD032E8);
  sub_219158FF8();
  uint64_t v2 = sub_219157718();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 0, 1, v2);
}

uint64_t sub_219132DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v73 = a1;
  uint64_t v74 = a8;
  uint64_t v79 = a7;
  uint64_t v80 = a6;
  uint64_t v76 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v68 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_219159ED8();
  uint64_t v70 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v69 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD036B0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v67 - v18;
  uint64_t v20 = sub_219159F98();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v67 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v67 - v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v77 = (char *)v67 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v78 = (char *)v67 - v33;
  sub_219159F88();
  sub_219159F48();
  v67[0] = v21;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v81 = v20;
  uint64_t v82 = v21 + 8;
  uint64_t v83 = v34;
  v34(v23, v20);
  uint64_t v72 = a5;
  sub_2190090C4(a5, (uint64_t)v19, &qword_26AD036B0);
  uint64_t v35 = sub_219157718();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v19, 1, v35);
  uint64_t v75 = v36;
  if (v38 == 1)
  {
    sub_218FFE158((uint64_t)v19, &qword_26AD036B0);
  }
  else
  {
    sub_2191576F8();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v35);
  }
  v67[1] = a9;
  sub_219159F28();
  swift_bridgeObjectRelease();
  uint64_t v39 = v26;
  uint64_t v40 = v81;
  uint64_t v41 = v83;
  v83(v39, v81);
  sub_2191576F8();
  sub_219159F58();
  swift_bridgeObjectRelease();
  v41(v29, v40);
  sub_2190090C4(v79, (uint64_t)v16, &qword_26AD036B0);
  uint64_t v42 = (char *)v35;
  if (v37(v16, 1, v35) == 1)
  {
    sub_218FFE158((uint64_t)v16, &qword_26AD036B0);
    uint64_t v43 = v75;
    uint64_t v44 = v76;
  }
  else
  {
    sub_2191576F8();
    uint64_t v43 = v75;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v16, v35);
    uint64_t v44 = v76;
  }
  uint64_t v45 = (uint64_t)v68;
  uint64_t v46 = v78;
  uint64_t v47 = v77;
  sub_219159F68();
  swift_bridgeObjectRelease();
  uint64_t v48 = v81;
  v83(v47, v81);
  sub_2190090C4(v44, v45, &qword_26AD03338);
  uint64_t v50 = v70;
  uint64_t v49 = v71;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v45, 1, v71) == 1)
  {
    sub_218FFE158(v45, &qword_26AD03338);
    type metadata accessor for LayoutItemImpressionInformation();
    uint64_t v51 = v74;
    swift_getTupleTypeMetadata2();
    sub_21915AED8();
    uint64_t v52 = sub_21915AC38();
    sub_218FFE158(v79, &qword_26AD036B0);
    (*(void (**)(uint64_t, char *))(v43 + 8))(v80, v42);
    sub_218FFE158(v72, &qword_26AD036B0);
    sub_218FFE158(v44, &qword_26AD03338);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v73, v51);
  }
  else
  {
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
    uint64_t v77 = v42;
    v53(v69, v45, v49);
    uint64_t v54 = v49;
    uint64_t v55 = type metadata accessor for LayoutItemImpressionInformation();
    uint64_t v56 = v74;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_21915B678();
    swift_allocObject();
    uint64_t v58 = sub_21915AEA8();
    uint64_t v60 = v59 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v61 = *(void *)(v56 - 8);
    uint64_t v62 = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v59, v73, v56);
    uint64_t v63 = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v60, v69, v54);
    uint64_t v64 = v60 + *(int *)(v55 + 20);
    uint64_t v48 = v81;
    (*(void (**)(uint64_t, char *, uint64_t))(v67[0] + 16))(v64, v78, v81);
    sub_2190D966C(v58);
    uint64_t v52 = sub_21915AC38();
    sub_218FFE158(v79, &qword_26AD036B0);
    (*(void (**)(uint64_t, char *))(v75 + 8))(v80, v77);
    sub_218FFE158(v72, &qword_26AD036B0);
    sub_218FFE158(v76, &qword_26AD03338);
    uint64_t v65 = v62;
    uint64_t v46 = v78;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v65, v56);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v63, v54);
  }
  v83(v46, v48);
  return v52;
}

uint64_t sub_2191335DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v14[0] = a2;
  type metadata accessor for _ImpressionableLayoutItemViewModifier();
  swift_getWitnessTable();
  sub_2191585B8();
  type metadata accessor for ImpressionPreferenceKey();
  swift_getWitnessTable();
  sub_219158738();
  uint64_t v3 = sub_219157F48();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v14 - v8;
  v14[3] = a1;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_219158A58();
  uint64_t v11 = swift_getWitnessTable();
  v14[1] = WitnessTable;
  void v14[2] = v11;
  swift_getWitnessTable();
  sub_218FFDE04((uint64_t)v6, v3, (uint64_t)v9);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v6, v3);
  sub_218FFDE04((uint64_t)v9, v3, v14[0]);
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
}

uint64_t sub_21913383C@<X0>(uint64_t a1@<X8>)
{
  return sub_2191335DC(*v1, a1);
}

uint64_t sub_21913384C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v77 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v74 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03358);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03360);
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = sub_21915A198();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v67 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v51[-v12];
  uint64_t v14 = sub_21915A2A8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v51[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = &v51[-v19];
  uint64_t v56 = &v51[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = &v51[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v57 = v23;
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v63 = *(void *)(a2 + 24);
  uint64_t v64 = v24;
  uint64_t v61 = type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v66 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v60 = &v51[-v25];
  swift_getWitnessTable();
  uint64_t v59 = sub_2191585B8();
  uint64_t v26 = sub_219157F48();
  uint64_t v65 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v58 = &v51[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v28);
  uint64_t v62 = &v51[-v29];
  sub_2190090C4(v3 + *(int *)(a2 + 36), (uint64_t)v23, &qword_26AD03338);
  uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  v30(v20, v3 + *(int *)(a2 + 40), v14);
  uint64_t v31 = *(int *)(a2 + 44);
  uint64_t v32 = v3 + *(int *)(a2 + 48);
  uint64_t v54 = *(void *)v32;
  int v55 = *(unsigned __int8 *)(v32 + 8);
  v30(v17, v3 + v31, v14);
  int v52 = *(unsigned __int8 *)(v3 + *(int *)(a2 + 52));
  sub_2190F9F54((uint64_t)v13);
  sub_21915A128();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03340);
  MEMORY[0x21D480BD0](v80, v9, v33);
  (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v9, v71);
  uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v68 + 8);
  uint64_t v35 = v70;
  v34(v13, v70);
  uint64_t v36 = v80[0];
  uint64_t v37 = v80[1];
  int v38 = v67;
  sub_2190F9F54((uint64_t)v67);
  uint64_t v39 = v72;
  sub_21915A118();
  uint64_t v40 = sub_21915A628();
  uint64_t v41 = (uint64_t)v74;
  MEMORY[0x21D480BE0](v39, v40);
  (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v39, v75);
  v34(v38, v35);
  uint64_t v42 = v60;
  sub_219133FAC((uint64_t)v57, (uint64_t)v56, v54, v55, (uint64_t)v53, v52, v36, (uint64_t)v60, v37, v41);
  uint64_t v43 = v59;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = (uint64_t)v58;
  uint64_t v46 = v61;
  MEMORY[0x21D47F800](v42, v43, v61, WitnessTable);
  (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v42, v46);
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v78 = WitnessTable;
  uint64_t v79 = v47;
  swift_getWitnessTable();
  uint64_t v48 = v62;
  sub_218FFDE04(v45, v26, (uint64_t)v62);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v49(v45, v26);
  sub_218FFDE04((uint64_t)v48, v26, v77);
  return ((uint64_t (*)(unsigned char *, uint64_t))v49)(v48, v26);
}

uint64_t sub_219133FAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (int *)type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v15 = a8 + v14[14];
  uint64_t v16 = sub_21915A628();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = a8 + v14[15];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = (uint64_t *)(a8 + v14[16]);
  type metadata accessor for LayoutItemImpressionInformation();
  swift_getTupleTypeMetadata2();
  sub_21915AED8();
  sub_21915AC38();
  *uint64_t v18 = sub_2191341D8();
  v18[1] = v19;
  uint64_t v20 = (uint64_t *)(a8 + v14[17]);
  sub_21915AC08();
  *uint64_t v20 = sub_219134238();
  v20[1] = v21;
  sub_21913BB9C(a1, a8);
  uint64_t v22 = a8 + v14[9];
  uint64_t v23 = sub_21915A2A8();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v22, a2, v23);
  uint64_t v25 = a8 + v14[10];
  *(void *)uint64_t v25 = a3;
  *(unsigned char *)(v25 + 8) = a4 & 1;
  v24(a8 + v14[11], a5, v23);
  *(unsigned char *)(a8 + v14[12]) = a6;
  uint64_t v26 = (void *)(a8 + v14[13]);
  *uint64_t v26 = a7;
  v26[1] = a9;
  return sub_21913BC04(a10, v15);
}

uint64_t sub_2191341D8()
{
  type metadata accessor for LayoutItemImpressionInformation();
  sub_21915AC58();
  sub_219158FE8();
  return v1;
}

uint64_t sub_219134238()
{
  sub_21915B108();
  sub_219158FE8();
  return v1;
}

uint64_t sub_219134274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v177 = a1;
  uint64_t v180 = a3;
  swift_getWitnessTable();
  uint64_t v4 = sub_2191585B8();
  uint64_t v147 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v146 = (uint64_t)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v153 = (uint64_t)&v142 - v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v211 = v4;
  uint64_t v212 = MEMORY[0x263F1A830];
  uint64_t v184 = v4;
  uint64_t v213 = WitnessTable;
  uint64_t v214 = MEMORY[0x263F1A820];
  uint64_t v187 = type metadata accessor for _RequirementFailureView();
  uint64_t v143 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  uint64_t v149 = (char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v145 = (uint64_t)&v142 - v11;
  uint64_t v155 = sub_21915A628();
  uint64_t v152 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v144 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03390);
  MEMORY[0x270FA5388](v150);
  uint64_t v151 = (uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v148 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v172 = (uint64_t)&v142 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v154 = (uint64_t)&v142 - v19;
  type metadata accessor for ImpressionableViewModifier(255);
  sub_219157F48();
  type metadata accessor for ClickLocationViewModifier();
  sub_219157F48();
  sub_219157F48();
  type metadata accessor for _OnScenePhaseChange(255);
  uint64_t v186 = sub_219157F48();
  sub_2191584D8();
  long long v181 = (int *)a2;
  uint64_t v21 = *(void *)(a2 + 16);
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v22 = type metadata accessor for ImpressionPreferenceKey();
  uint64_t v23 = swift_getWitnessTable();
  type metadata accessor for LayoutItemImpressionInformation();
  sub_21915AC58();
  uint64_t v210 = sub_21913E52C(&qword_267C07880, (void (*)(uint64_t))type metadata accessor for LayoutItemImpressionInformation);
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v167 = v22;
  uint64_t v168 = v23;
  uint64_t v166 = v24;
  sub_2191586F8();
  uint64_t v25 = sub_219157F48();
  uint64_t v26 = sub_21913E52C(&qword_26AD013C0, (void (*)(uint64_t))type metadata accessor for ImpressionableViewModifier);
  uint64_t v182 = WitnessTable;
  uint64_t v208 = WitnessTable;
  uint64_t v209 = v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = sub_21913E52C(&qword_26AD02FA0, (void (*)(uint64_t))type metadata accessor for ClickLocationViewModifier);
  uint64_t v206 = v27;
  uint64_t v207 = v28;
  uint64_t v29 = swift_getWitnessTable();
  unint64_t v30 = sub_219008100();
  uint64_t v204 = v29;
  unint64_t v205 = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = sub_21913E52C(&qword_26AD036F8, (void (*)(uint64_t))type metadata accessor for _OnScenePhaseChange);
  uint64_t v156 = v29;
  uint64_t v202 = v29;
  uint64_t v203 = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v200 = v31;
  uint64_t v201 = v33;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v181;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v164 = v34;
  uint64_t v198 = v34;
  uint64_t v199 = v36;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v211 = v25;
  uint64_t v212 = v21;
  uint64_t v179 = v21;
  uint64_t v183 = v37;
  uint64_t v213 = v37;
  uint64_t v214 = v20;
  uint64_t v185 = v20;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v39 = v184;
  uint64_t v40 = sub_2191584D8();
  uint64_t v171 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v170 = (char *)&v142 - v41;
  uint64_t v42 = swift_checkMetadataState();
  uint64_t v157 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v142 - v43;
  uint64_t v160 = swift_checkMetadataState();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v46 = (char *)&v142 - v45;
  uint64_t v47 = v173;
  uint64_t v48 = swift_checkMetadataState();
  uint64_t v161 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v142 - v49;
  uint64_t v169 = OpaqueTypeMetadata2;
  uint64_t v165 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v162 = (uint64_t)&v142 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v158 = (char *)&v142 - v54;
  MEMORY[0x270FA5388](v55);
  uint64_t v163 = (uint64_t)&v142 - v56;
  uint64_t v178 = v40;
  uint64_t v57 = sub_2191584D8();
  uint64_t v175 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v174 = (char *)&v142 - v58;
  uint64_t v59 = *(void *)(v47 + v35[13]);
  uint64_t v176 = v60;
  uint64_t v186 = v48;
  if (!v59)
  {
    uint64_t v68 = (uint64_t)v148;
    uint64_t v69 = v154;
    sub_2190090C4(v47 + v35[14], v154, &qword_26AD03388);
    uint64_t v70 = v152;
    uint64_t v71 = v172;
    uint64_t v72 = v155;
    (*(void (**)(uint64_t, void, uint64_t))(v152 + 104))(v172, *MEMORY[0x263F50CF8], v155);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v72);
    uint64_t v73 = v151;
    uint64_t v74 = v151 + *(int *)(v150 + 48);
    sub_2190090C4(v69, v151, &qword_26AD03388);
    sub_2190090C4(v71, v74, &qword_26AD03388);
    uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    if (v75(v73, 1, v72) == 1)
    {
      sub_218FFE158(v172, &qword_26AD03388);
      sub_218FFE158(v69, &qword_26AD03388);
      int v76 = v75(v74, 1, v72);
      uint64_t v77 = v180;
      uint64_t v78 = v147;
      uint64_t v79 = (uint64_t)v149;
      if (v76 == 1)
      {
        sub_218FFE158(v73, &qword_26AD03388);
        uint64_t v80 = v182;
        uint64_t v81 = v183;
        uint64_t v82 = v184;
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v110 = v68;
      sub_2190090C4(v73, v68, &qword_26AD03388);
      int v111 = v75(v74, 1, v72);
      uint64_t v79 = (uint64_t)v149;
      if (v111 != 1)
      {
        uint64_t v112 = v144;
        uint64_t v113 = v155;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v144, v74, v155);
        sub_21913E52C(&qword_267C03690, MEMORY[0x263F50D08]);
        int v114 = sub_21915AD08();
        uint64_t v115 = v184;
        LODWORD(v181) = v114;
        uint64_t v116 = *(void (**)(char *, uint64_t))(v70 + 8);
        v116(v112, v113);
        sub_218FFE158(v172, &qword_26AD03388);
        sub_218FFE158(v154, &qword_26AD03388);
        uint64_t v117 = v110;
        uint64_t v82 = v115;
        v116((char *)v117, v113);
        sub_218FFE158(v73, &qword_26AD03388);
        uint64_t v77 = v180;
        uint64_t v80 = v182;
        uint64_t v81 = v183;
        uint64_t v78 = v147;
        if (v181)
        {
LABEL_13:
          sub_218FFE628(0, (unint64_t *)&qword_26AD037A0);
          if ((sub_21915B328() & 1) == 0)
          {
            uint64_t v126 = v153;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v153, v177, v82);
            _RequirementFailureView.init<>(_:_:)(v126, 0xD00000000000002CLL, 0x8000000219180010, v82, v79);
            uint64_t v127 = v79;
            uint64_t v128 = v187;
            uint64_t v129 = swift_getWitnessTable();
            uint64_t v130 = v145;
            sub_218FFDE04(v127, v128, v145);
            long long v181 = *(int **)(v143 + 8);
            ((void (*)(uint64_t, uint64_t))v181)(v127, v128);
            sub_218FFDE04(v130, v128, v127);
            uint64_t v107 = v179;
            uint64_t v211 = v186;
            uint64_t v212 = v179;
            uint64_t v213 = v81;
            uint64_t v214 = v185;
            uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
            uint64_t v132 = (uint64_t)v170;
            sub_218FFCBB0(v127, v169, v128);
            uint64_t v133 = v181;
            ((void (*)(uint64_t, uint64_t))v181)(v127, v128);
            uint64_t v190 = OpaqueTypeConformance2;
            uint64_t v191 = v129;
            uint64_t v134 = v178;
            swift_getWitnessTable();
            uint64_t v104 = (uint64_t)v174;
            uint64_t v135 = v134;
            uint64_t v136 = v134;
            uint64_t v109 = v183;
            uint64_t v137 = v182;
            sub_219050FE4(v132, v135);
            (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v132, v136);
            ((void (*)(uint64_t, uint64_t))v133)(v145, v128);
            uint64_t v108 = v137;
            goto LABEL_16;
          }
        }
LABEL_14:
        uint64_t v118 = v153;
        sub_218FFDE04(v177, v82, v153);
        uint64_t v119 = v146;
        sub_218FFDE04(v118, v82, v146);
        uint64_t v120 = v82;
        uint64_t v107 = v179;
        uint64_t v211 = v186;
        uint64_t v212 = v179;
        uint64_t v213 = v81;
        uint64_t v214 = v185;
        uint64_t v121 = swift_getOpaqueTypeConformance2();
        uint64_t v122 = swift_getWitnessTable();
        uint64_t v196 = v121;
        uint64_t v197 = v122;
        uint64_t v108 = v80;
        uint64_t v123 = v178;
        swift_getWitnessTable();
        uint64_t v104 = (uint64_t)v174;
        sub_218FFCBB0(v119, v123, v120);
        uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
        v124(v119, v120);
        uint64_t v125 = v120;
        uint64_t v77 = v180;
        v124(v118, v125);
        uint64_t v109 = v183;
        goto LABEL_16;
      }
      sub_218FFE158(v172, &qword_26AD03388);
      sub_218FFE158(v154, &qword_26AD03388);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v110, v155);
      uint64_t v78 = v147;
    }
    sub_218FFE158(v73, &qword_26AD03390);
    uint64_t v80 = v182;
    uint64_t v81 = v183;
    uint64_t v82 = v184;
    goto LABEL_14;
  }
  View.impressionable(_:configuration:position:definesParentContext:)(v47, v47 + v35[9], *(void *)(v47 + v35[10]), *(unsigned __int8 *)(v47 + v35[10] + 8), *(unsigned __int8 *)(v47 + v35[12]), v39, v182, (uint64_t)v44);
  uint64_t v61 = v35[15];
  uint64_t v62 = v47;
  uint64_t v63 = (uint64_t *)(v47 + v61);
  uint64_t v64 = *v63;
  uint64_t v65 = *((unsigned __int8 *)v63 + 8);
  j__swift_retain(*v63);
  uint64_t v66 = sub_2190F9FC0(v64, v65);
  j__swift_release(v64, v65);
  if (v66)
  {
    uint64_t v67 = (void *)MEMORY[0x21D482C30](v66 + 16);
    swift_release();
  }
  else
  {
    uint64_t v67 = 0;
  }
  uint64_t v83 = v156;
  uint64_t v84 = v179;
  uint64_t v85 = v185;
  uint64_t v86 = sub_2191358D0(v62, v179, v185);
  sub_219088E1C(v67, (uint64_t)v86, v87, v42, v83, (uint64_t)v46);
  swift_release();

  (*(void (**)(char *, uint64_t))(v157 + 8))(v44, v42);
  swift_checkMetadataState();
  uint64_t v88 = sub_219135A08(v62, v84, v85);
  uint64_t v90 = v89;
  uint64_t v91 = (void *)swift_allocObject();
  v91[2] = v84;
  v91[3] = v85;
  v91[4] = v88;
  v91[5] = v90;
  uint64_t v92 = v160;
  sub_219158BB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v46, v92);
  sub_21915A248();
  sub_219135C40(v62, v84, v85);
  uint64_t v93 = (uint64_t)v158;
  uint64_t v94 = v186;
  uint64_t v95 = v183;
  sub_219158CD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v50, v94);
  uint64_t v211 = v94;
  uint64_t v212 = v84;
  uint64_t v213 = v95;
  uint64_t v214 = v85;
  uint64_t v96 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v163;
  uint64_t v98 = v169;
  sub_218FFDE04(v93, v169, v163);
  uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
  v99(v93, v98);
  uint64_t v100 = v162;
  sub_218FFDE04(v97, v98, v162);
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v102 = (uint64_t)v170;
  sub_219050FE4(v100, v98);
  v99(v100, v98);
  uint64_t v188 = v96;
  uint64_t v189 = v101;
  uint64_t v103 = v178;
  swift_getWitnessTable();
  uint64_t v104 = (uint64_t)v174;
  uint64_t v105 = v182;
  sub_219050FE4(v102, v103);
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v102, v103);
  uint64_t v106 = v97;
  uint64_t v107 = v84;
  uint64_t v108 = v105;
  v99(v106, v98);
  uint64_t v109 = v183;
  uint64_t v77 = v180;
LABEL_16:
  uint64_t v211 = v186;
  uint64_t v212 = v107;
  uint64_t v213 = v109;
  uint64_t v214 = v185;
  uint64_t v138 = swift_getOpaqueTypeConformance2();
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v194 = v138;
  uint64_t v195 = v139;
  uint64_t v192 = swift_getWitnessTable();
  uint64_t v193 = v108;
  uint64_t v140 = v176;
  swift_getWitnessTable();
  sub_218FFDE04(v104, v140, v77);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 8))(v104, v140);
}

uint64_t (*sub_2191358D0(uint64_t a1, uint64_t a2, uint64_t a3))(void)
{
  uint64_t v6 = type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return nullsub_1;
}

uint64_t (*sub_219135A08(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return sub_21913E578;
}

uint64_t sub_219135B40()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_219135C40(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return sub_21913DF7C;
}

uint64_t sub_219135D78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v99 = a1;
  uint64_t v5 = sub_21915AB08();
  uint64_t v96 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2191593F8();
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v92 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_219159428();
  uint64_t v91 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v90 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = (void *)sub_2191593E8();
  uint64_t v88 = *(v89 - 1);
  MEMORY[0x270FA5388](v89);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_219159448();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v102 = v13;
  uint64_t v103 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v87 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v101 = (char *)&v74 - v17;
  uint64_t v18 = sub_2191576E8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v21);
  uint64_t v100 = (char *)&v74 - v22;
  uint64_t v23 = *(void *)(a2 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v74 - v30;
  uint64_t v33 = (uint64_t *)(v3 + *(int *)(v32 + 60));
  uint64_t v34 = *v33;
  if (!*v33)
  {
    sub_21915AAC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159528();
    sub_21915A6D8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v7, v5);
  }
  uint64_t v82 = v29;
  uint64_t v85 = v28;
  uint64_t v83 = v19;
  uint64_t v98 = v27;
  uint64_t v81 = v33[1];
  uint64_t v35 = *(void *)(a2 + 16);
  uint64_t v86 = v34;
  swift_unknownObjectRetain();
  uint64_t v36 = v99;
  uint64_t v37 = MEMORY[0x21D481930](v99, v35);
  int v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  uint64_t v80 = v23 + 16;
  uint64_t v79 = v38;
  v38((uint64_t)v31, v3, a2);
  uint64_t v84 = v23;
  if (v37 < 1)
  {
    uint64_t v40 = &v31[*(int *)(a2 + 68)];
    uint64_t v42 = *(void *)v40;
    uint64_t v41 = *((void *)v40 + 1);
    uint64_t aBlock = v42;
    uint64_t v105 = v41;
    uint64_t v43 = v3;
    sub_21915B108();
    sub_219159028();
    sub_219158FF8();
    uint64_t v44 = sub_21915B0E8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, a2);
    BOOL v45 = v44 < 1;
    uint64_t v3 = v43;
    uint64_t v36 = v99;
    if (v45) {
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, a2);
  }
  uint64_t v97 = v3;
  uint64_t v77 = v12;
  uint64_t aBlock = v36;
  sub_21915AF18();
  uint64_t v46 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v47 = sub_21915B118();
  uint64_t v48 = (uint64_t *)(v3 + *(int *)(a2 + 68));
  uint64_t v49 = v48[1];
  uint64_t aBlock = *v48;
  uint64_t v50 = aBlock;
  uint64_t v105 = v49;
  sub_21915B108();
  sub_219159028();
  sub_219158FF8();
  uint64_t v75 = sub_21915B0D8();
  uint64_t aBlock = v50;
  uint64_t v105 = v49;
  swift_bridgeObjectRetain();
  sub_219158FF8();
  uint64_t v78 = v47;
  uint64_t v99 = v46;
  uint64_t v74 = sub_21915B0D8();
  swift_bridgeObjectRelease();
  uint64_t v51 = v100;
  sub_2191576C8();
  uint64_t v96 = v35;
  if (qword_267C03578 != -1) {
    swift_once();
  }
  uint64_t v76 = qword_267C07658;
  uint64_t v52 = v87;
  sub_219159438();
  uint64_t v53 = v77;
  *uint64_t v77 = 500;
  uint64_t v54 = v88;
  uint64_t v55 = v89;
  (*(void (**)(void *, void, void *))(v88 + 104))(v53, *MEMORY[0x263F8F000], v89);
  MEMORY[0x21D47FE80](v52, v53);
  (*(void (**)(void *, void *))(v54 + 8))(v53, v55);
  uint64_t v56 = *(void **)(v103 + 8);
  v103 += 8;
  uint64_t v89 = v56;
  ((void (*)(char *, uint64_t))v56)(v52, v102);
  uint64_t v57 = v82;
  v79(v82, v97, a2);
  uint64_t v58 = v83;
  uint64_t v59 = v85;
  uint64_t v60 = v98;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v85, v51, v98);
  uint64_t v88 = a2;
  uint64_t v61 = v84;
  unint64_t v62 = (*(unsigned __int8 *)(v84 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  unint64_t v63 = (v24 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (*(unsigned __int8 *)(v58 + 80) + v63 + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v65 = (char *)swift_allocObject();
  uint64_t v66 = v99;
  *((void *)v65 + 2) = v96;
  *((void *)v65 + 3) = v66;
  *((void *)v65 + 4) = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(&v65[v62], v57, v88);
  uint64_t v67 = &v65[v63];
  uint64_t v68 = v81;
  *(void *)uint64_t v67 = v86;
  *((void *)v67 + 1) = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(&v65[v64], v59, v60);
  *(void *)&v65[(v20 + v64 + 7) & 0xFFFFFFFFFFFFFFF8] = v74;
  uint64_t v108 = sub_21913E2C0;
  uint64_t v109 = v65;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v105 = 1107296256;
  uint64_t v106 = sub_218FF9868;
  uint64_t v107 = &block_descriptor_5;
  uint64_t v69 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  uint64_t v70 = v90;
  sub_219159408();
  uint64_t v110 = MEMORY[0x263F8EE78];
  sub_21913E52C((unint64_t *)&qword_26AD01060, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD01068);
  sub_218FFDF90((unint64_t *)&qword_26AD01070, &qword_26AD01068);
  uint64_t v71 = v92;
  uint64_t v72 = v95;
  sub_21915B3D8();
  uint64_t v73 = v101;
  MEMORY[0x21D481C70](v101, v70, v71, v69);
  _Block_release(v69);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v71, v72);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v93);
  ((void (*)(char *, uint64_t))v89)(v73, v102);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v100, v98);
  swift_release();
  sub_2191368D8();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2191368D8()
{
  return sub_219159008();
}

uint64_t sub_219136970()
{
  return sub_21915AE38();
}

uint64_t sub_219136A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v39 = a4;
  uint64_t v40 = a8;
  uint64_t v36 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = sub_219159F98();
  uint64_t v35 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v34 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2191595A8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v42 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_21915AB08();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v41 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07888);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LayoutItemImpressionInformation();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(int *)(type metadata accessor for _ImpressionableLayoutViewModifier() + 64);
  uint64_t v33 = a2;
  uint64_t v24 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  v46[0] = v26;
  v46[1] = v25;
  sub_21915AC58();
  sub_219159028();
  sub_219158FF8();
  uint64_t v44 = a1;
  MEMORY[0x21D481690](a1, v46[5], a6, v19, a7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_218FFE158((uint64_t)v18, &qword_267C07888);
    uint64_t v27 = v41;
    sub_21915AAC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    sub_2191595F8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159598();
    sub_219159588();
    v46[3] = a6;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v46);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(boxed_opaque_existential_1Tm, v44, a6);
    sub_219159558();
    sub_218FFE158((uint64_t)v46, qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    uint64_t v29 = v45;
    sub_21915A6D8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v27, v29);
  }
  else
  {
    sub_21913E46C((uint64_t)v18, (uint64_t)v22);
    uint64_t ObjectType = swift_getObjectType();
    sub_21915A298();
    uint64_t v32 = v34;
    sub_219159F38();
    swift_bridgeObjectRelease();
    v40(v22, v36, v32, ObjectType, v39);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v38);
    return sub_21913E4D0((uint64_t)v22);
  }
}

uint64_t sub_219136FB4()
{
  if (MEMORY[0x21D4808D0]())
  {
    JUMPOUT(0x21D4809A0);
  }
  return 0;
}

uint64_t sub_21913701C()
{
  type metadata accessor for LayoutItemImpressionInformation();
  swift_getTupleTypeMetadata2();
  sub_21915AED8();
  return sub_21915AC38();
}

uint64_t sub_219137094(uint64_t a1, void (*a2)(void))
{
  return sub_21915AC48();
}

uint64_t sub_219137124@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_21913E610(a1, a2);
}

uint64_t sub_219137154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21913701C();
  *a1 = result;
  return result;
}

uint64_t sub_219137184(uint64_t a1)
{
  return sub_219137094(a1, (void (*)(void))sub_21913EE68);
}

uint64_t ComponentModelViewID.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_219020260(v1, a1);
}

uint64_t ComponentModelViewID.id.setter(uint64_t a1)
{
  return sub_219137244(a1, v1);
}

uint64_t (*ComponentModelViewID.id.modify())()
{
  return nullsub_1;
}

__n128 ComponentModelViewID.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  return result;
}

uint64_t type metadata accessor for ImpressionableLayoutItemViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ImpressionableLayoutViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219137244(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ComponentModelViewID.hashValue.getter()
{
  return sub_21915B7D8();
}

uint64_t sub_2191372E8@<X0>(uint64_t a1@<X8>)
{
  return sub_219020260(v1, a1);
}

unint64_t sub_2191372FC()
{
  unint64_t result = qword_267C07660[0];
  if (!qword_267C07660[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267C07660);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentModelViewID()
{
  return &type metadata for ComponentModelViewID;
}

uint64_t sub_219137364()
{
  return swift_getWitnessTable();
}

uint64_t sub_219137464()
{
  return swift_getWitnessTable();
}

uint64_t sub_21913756C()
{
  return swift_getWitnessTable();
}

uint64_t sub_219137600()
{
  return swift_getWitnessTable();
}

void sub_2191376A0()
{
  sub_21913DBAC(319, qword_267C076E8, MEMORY[0x263F50AB8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_21915A2A8();
    if (v1 <= 0x3F)
    {
      sub_21913DBAC(319, (unint64_t *)&qword_26AD036D0, MEMORY[0x263F50B68], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

char *sub_219137828(char *a1, char *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[9];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_219159ED8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = a3[10];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_21915A2A8();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&a1[a3[11]], &a2[a3[11]], v17);
    uint64_t v19 = a3[12];
    uint64_t v20 = a3[13];
    uint64_t v21 = &a1[v19];
    uint64_t v22 = &a2[v19];
    *(void *)uint64_t v21 = *(void *)v22;
    char v23 = a2[v20];
    v21[8] = v22[8];
    a1[v20] = v23;
    uint64_t v24 = a3[14];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_21915A198();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *(void *)uint64_t v25 = *(void *)v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_219137ACC(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_219159ED8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = sub_21915A2A8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[11], v8);
  uint64_t v10 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_21915A198();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v10, v11);
  }
  else
  {
    return swift_release();
  }
}

char *sub_219137C80(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_219159ED8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_21915A2A8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(&a1[a3[11]], &a2[a3[11]], v15);
  uint64_t v17 = a3[12];
  uint64_t v18 = a3[13];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)uint64_t v19 = *(void *)v20;
  char v21 = a2[v18];
  v19[8] = v20[8];
  a1[v18] = v21;
  uint64_t v22 = a3[14];
  char v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_21915A198();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *(void *)char v23 = *(void *)v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_219137EC0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_219159ED8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_21915A2A8();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(&a1[a3[11]], &a2[a3[11]], v18);
  uint64_t v20 = a3[12];
  char v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  v21[8] = v22[8];
  *(void *)char v21 = v23;
  a1[a3[13]] = a2[a3[13]];
  if (a1 != a2)
  {
    uint64_t v24 = a3[14];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    sub_218FFE158((uint64_t)&a1[v24], &qword_26AD03198);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_21915A198();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *(void *)uint64_t v25 = *(void *)v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_219138180(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_219159ED8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_21915A2A8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[a3[11]], &a2[a3[11]], v15);
  uint64_t v17 = a3[12];
  uint64_t v18 = a3[13];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)uint64_t v19 = *(void *)v20;
  char v21 = a2[v18];
  v19[8] = v20[8];
  a1[v18] = v21;
  uint64_t v22 = a3[14];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_21915A198();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  return a1;
}

char *sub_2191383D0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_219159ED8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_21915A2A8();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(&a1[a3[11]], &a2[a3[11]], v18);
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  a1[v21] = a2[v21];
  if (a1 != a2)
  {
    uint64_t v24 = a3[14];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    sub_218FFE158((uint64_t)&a1[v24], &qword_26AD03198);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_21915A198();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21913869C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2191386B0);
}

uint64_t sub_2191386B0(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_21915A2A8();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = &a1[a3[14]];
  return v15(v17, a2, v16);
}

uint64_t sub_219138830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219138844);
}

char *sub_219138844(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)unint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_21915A2A8();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[14]];
  return (char *)v15(v17, a2, a2, v16);
}

void sub_2191389C4()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_21913DBAC(319, qword_267C076E8, MEMORY[0x263F50AB8], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_21913DBAC(319, &qword_26AD036D8, MEMORY[0x263F07508], MEMORY[0x263F1B5D0]);
      if (v2 <= 0x3F)
      {
        sub_219050234();
        if (v3 <= 0x3F)
        {
          sub_21913DBAC(319, (unint64_t *)&qword_26AD036D0, MEMORY[0x263F50B68], MEMORY[0x263F185C8]);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *sub_219138BDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v58 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v58 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v62 = sub_219159ED8();
  uint64_t v5 = *(void *)(v62 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v57 = v4 + v6;
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v7 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v5 + 64) + 1;
  }
  size_t __n = v7;
  unint64_t v8 = (v7 + ((v4 + v6) & ~(unint64_t)v6) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v65 = sub_219157718();
  uint64_t v9 = *(void *)(v65 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v59 = v12 + 7;
  unint64_t v61 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
  uint64_t v13 = (v61 + ((v11 + v8 + 9) & ~v11)) & ~v11;
  uint64_t v63 = v9;
  if (*(_DWORD *)(v9 + 84)) {
    unint64_t v14 = *(void *)(*(void *)(v65 - 8) + 64);
  }
  else {
    unint64_t v14 = v12 + 1;
  }
  uint64_t v15 = 8;
  size_t v56 = v14;
  if (v14 <= 8) {
    unint64_t v14 = 8;
  }
  unint64_t v69 = v14;
  unint64_t v16 = v14 + 1;
  uint64_t v17 = *(void *)(sub_21915A198() - 8);
  int v18 = *(_DWORD *)(v17 + 80);
  uint64_t v19 = v18 & 0xF8 | 7;
  unint64_t v64 = v16;
  uint64_t v68 = v19;
  if (*(void *)(v17 + 64) > 8uLL) {
    uint64_t v15 = *(void *)(v17 + 64);
  }
  unsigned int v20 = v6 | v10 & 0xF8 | *(_DWORD *)(v17 + 80) & 0xF8 | *(_DWORD *)(v3 + 80) & 0xF8;
  int v21 = (v10 | v6 | v18 | *(_DWORD *)(v3 + 80)) & 0x100000;
  if (v15 + ((v16 + v19 + v13) & ~v19) + 1 > 0x18 || v21 != 0 || v20 > 7)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v25 = (uint64_t *)(v24 + (((v20 | 7) + 16) & ~(unint64_t)(v20 | 7)));
LABEL_55:
    swift_retain();
    return v25;
  }
  uint64_t v55 = v17;
  unint64_t v26 = ~(unint64_t)v6;
  uint64_t v27 = ~v11;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v58);
  uint64_t v28 = (void *)(((unint64_t)a1 + v57) & v26);
  uint64_t v29 = (const void *)(((unint64_t)a2 + v57) & v26);
  int v30 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v29, 1, v62);
  uint64_t v25 = a1;
  uint64_t v31 = v15;
  if (v30)
  {
    size_t v32 = __n;
    memcpy(v28, v29, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v28, v29, v62);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v28, 0, 1, v62);
    size_t v32 = __n;
  }
  unint64_t v33 = ((unint64_t)v28 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v29 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  *(void *)unint64_t v33 = v35;
  uint64_t v36 = (v33 + v11 + 9) & v27;
  uint64_t v37 = (v34 + v11 + 9) & v27;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
  v38(v36, v37, v65);
  *(void *)((v59 + v36) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v59 + v37) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v39 = (void *)((v61 + v36) & v27);
  uint64_t v40 = (unsigned __int8 *)((v61 + v37) & v27);
  unsigned int v41 = v40[v69];
  swift_retain();
  if (v41 >= 2)
  {
    if (v69 <= 3) {
      uint64_t v42 = v69;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *v40;
        goto LABEL_32;
      case 2:
        int v43 = *(unsigned __int16 *)v40;
        goto LABEL_32;
      case 3:
        int v43 = *(unsigned __int16 *)v40 | (v40[2] << 16);
        goto LABEL_32;
      case 4:
        int v43 = *(_DWORD *)v40;
LABEL_32:
        int v44 = (v43 | ((v41 - 2) << (8 * v69))) + 2;
        unsigned int v45 = v43 + 2;
        if (v69 >= 4) {
          unsigned int v41 = v45;
        }
        else {
          unsigned int v41 = v44;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v46 = ~v68;
  if (v41 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(v40, 1, v65))
    {
      memcpy(v39, v40, v56);
    }
    else
    {
      v38((uint64_t)v39, (uint64_t)v40, v65);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v39, 0, 1, v65);
    }
    *((unsigned char *)v39 + v69) = 1;
  }
  else
  {
    *uint64_t v39 = *(void *)v40;
    *((unsigned char *)v39 + v69) = 0;
    swift_retain();
  }
  uint64_t v47 = (void *)(((unint64_t)v39 + v64 + v68) & v46);
  uint64_t v48 = (unsigned __int8 *)((unint64_t)&v40[v64 + v68] & v46);
  unsigned int v49 = v48[v31];
  unsigned int v50 = v49 - 2;
  if (v49 >= 2)
  {
    if (v31 <= 3) {
      uint64_t v51 = v31;
    }
    else {
      uint64_t v51 = 4;
    }
    switch(v51)
    {
      case 1:
        int v52 = *v48;
        goto LABEL_50;
      case 2:
        int v52 = *(unsigned __int16 *)v48;
        goto LABEL_50;
      case 3:
        int v52 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(((unint64_t)&v40[v64 + v68] & v46) + 2) << 16);
        goto LABEL_50;
      case 4:
        int v52 = *(_DWORD *)v48;
LABEL_50:
        int v53 = (v52 | (v50 << (8 * v31))) + 2;
        unsigned int v49 = v52 + 2;
        if (v31 < 4) {
          unsigned int v49 = v53;
        }
        break;
      default:
        break;
    }
  }
  if (v49 != 1)
  {
    *uint64_t v47 = *(void *)v48;
    *((unsigned char *)v47 + v31) = 0;
    goto LABEL_55;
  }
  (*(void (**)(unint64_t))(v55 + 16))(((unint64_t)v39 + v64 + v68) & v46);
  *((unsigned char *)v47 + v31) = 1;
  return v25;
}

uint64_t sub_2191391F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_219159ED8();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = sub_219157718();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  uint64_t v13 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  uint64_t v14 = v9 + v13 + 9;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v15(v14 & ~v13, v10);
  unint64_t v16 = *(void *)(v11 + 64);
  swift_release();
  unint64_t v17 = ((v14 | v13) + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v13;
  if (*(_DWORD *)(v12 + 84)) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = v16 + 1;
  }
  if (v18 <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = v18;
  }
  unsigned int v20 = *(unsigned __int8 *)(v17 + v19);
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *(unsigned __int8 *)v17;
        goto LABEL_20;
      case 2:
        int v23 = *(unsigned __int16 *)v17;
        goto LABEL_20;
      case 3:
        int v23 = *(unsigned __int16 *)v17 | (*(unsigned __int8 *)((((v14 | v13) + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v13)
                                                             + 2) << 16);
        goto LABEL_20;
      case 4:
        int v23 = *(_DWORD *)v17;
LABEL_20:
        int v24 = (v23 | (v21 << (8 * v19))) + 2;
        unsigned int v20 = v23 + 2;
        if (v19 < 4) {
          unsigned int v20 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(((v14 | v13) + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v13, 1, v10))v15(((v14 | v13) + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v13, v10); {
  }
    }
  else
  {
    swift_release();
  }
  uint64_t v25 = *(void *)(sub_21915A198() - 8);
  uint64_t v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  uint64_t v27 = (unsigned __int8 *)(((v17 | 1) + v19 + v26) & ~v26);
  uint64_t v28 = 8;
  if (*(void *)(v25 + 64) > 8uLL) {
    uint64_t v28 = *(void *)(v25 + 64);
  }
  unsigned int v29 = v27[v28];
  unsigned int v30 = v29 - 2;
  if (v29 >= 2)
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *v27;
        goto LABEL_37;
      case 2:
        int v32 = *(unsigned __int16 *)v27;
        goto LABEL_37;
      case 3:
        int v32 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_37;
      case 4:
        int v32 = *(_DWORD *)v27;
LABEL_37:
        int v33 = (v32 | (v30 << (8 * v28))) + 2;
        unsigned int v29 = v32 + 2;
        if (v28 < 4) {
          unsigned int v29 = v33;
        }
        break;
      default:
        break;
    }
  }
  if (v29 == 1)
  {
    unint64_t v34 = *(uint64_t (**)(void))(v25 + 8);
    return v34();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_21913960C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_219159ED8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    unint64_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v16 = v8 + 56;
    v17(v11, 0, 1, v7);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  uint64_t v19 = (uint64_t)v11 + v18 + 7;
  unint64_t v20 = ((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  unint64_t v22 = v19 & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v22 = v21;
  uint64_t v23 = sub_219157718();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24;
  uint64_t v26 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v27 = v26 | 7;
  v26 += 16;
  unint64_t v28 = (v26 + v22) & ~v27;
  unint64_t v29 = (v26 + v20) & ~v27;
  unsigned int v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16);
  v30(v28, v29, v23);
  size_t v31 = *(void *)(v24 + 64);
  *(void *)((v31 + 7 + v28) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v31 + 7 + v29) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + v27 + 8;
  int v33 = (void *)((v32 + v28) & ~v27);
  unint64_t v34 = (unsigned __int8 *)((v32 + v29) & ~v27);
  if (*(_DWORD *)(v25 + 84)) {
    size_t v35 = v31;
  }
  else {
    size_t v35 = v31 + 1;
  }
  if (v35 <= 8) {
    uint64_t v36 = 8;
  }
  else {
    uint64_t v36 = v35;
  }
  unsigned int v37 = v34[v36];
  swift_retain();
  if (v37 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v38 = v36;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *v34;
        goto LABEL_25;
      case 2:
        int v39 = *(unsigned __int16 *)v34;
        goto LABEL_25;
      case 3:
        int v39 = *(unsigned __int16 *)v34 | (v34[2] << 16);
        goto LABEL_25;
      case 4:
        int v39 = *(_DWORD *)v34;
LABEL_25:
        int v40 = (v39 | ((v37 - 2) << (8 * v36))) + 2;
        unsigned int v41 = v39 + 2;
        if (v36 >= 4) {
          unsigned int v37 = v41;
        }
        else {
          unsigned int v37 = v40;
        }
        break;
      default:
        break;
    }
  }
  if (v37 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v25 + 48))(v34, 1, v23))
    {
      memcpy(v33, v34, v35);
    }
    else
    {
      v30((unint64_t)v33, (unint64_t)v34, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v33, 0, 1, v23);
    }
    *((unsigned char *)v33 + v36) = 1;
  }
  else
  {
    *int v33 = *(void *)v34;
    *((unsigned char *)v33 + v36) = 0;
    swift_retain();
  }
  uint64_t v42 = *(void *)(sub_21915A198() - 8);
  uint64_t v43 = v42;
  uint64_t v44 = *(_DWORD *)(v42 + 80) & 0xF8 | 7;
  uint64_t v45 = v36 + v44 + 1;
  uint64_t v46 = (void *)(((unint64_t)v33 + v45) & ~v44);
  uint64_t v47 = (unsigned __int8 *)((unint64_t)&v34[v45] & ~v44);
  if (*(void *)(v42 + 64) <= 8uLL) {
    uint64_t v48 = 8;
  }
  else {
    uint64_t v48 = *(void *)(v42 + 64);
  }
  unsigned int v49 = v47[v48];
  unsigned int v50 = v49 - 2;
  if (v49 >= 2)
  {
    if (v48 <= 3) {
      uint64_t v51 = v48;
    }
    else {
      uint64_t v51 = 4;
    }
    switch(v51)
    {
      case 1:
        int v52 = *v47;
        goto LABEL_46;
      case 2:
        int v52 = *(unsigned __int16 *)v47;
        goto LABEL_46;
      case 3:
        int v52 = *(unsigned __int16 *)v47 | (v47[2] << 16);
        goto LABEL_46;
      case 4:
        int v52 = *(_DWORD *)v47;
LABEL_46:
        int v53 = (v52 | (v50 << (8 * v48))) + 2;
        unsigned int v49 = v52 + 2;
        if (v48 < 4) {
          unsigned int v49 = v53;
        }
        break;
      default:
        break;
    }
  }
  if (v49 == 1)
  {
    (*(void (**)(void *))(v43 + 16))(v46);
    char v54 = 1;
  }
  else
  {
    *uint64_t v46 = *(void *)v47;
    swift_retain();
    char v54 = 0;
  }
  *((unsigned char *)v46 + v48) = v54;
  return a1;
}

uint64_t sub_219139AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_219159ED8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v20 = (uint64_t)v11 + v19 + 7;
  unint64_t v21 = ((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 8);
  unint64_t v23 = v20 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v21;
  *(unsigned char *)(v23 + 8) = v22;
  uint64_t v24 = sub_219157718();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25;
  uint64_t v27 = *(_DWORD *)(v25 + 80) & 0xF8;
  uint64_t v28 = v27 | 7;
  v27 += 16;
  unint64_t v29 = (v27 + v23) & ~v28;
  unint64_t v30 = (v27 + v21) & ~v28;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 24))(v29, v30, v24);
  size_t v31 = *(void *)(v25 + 64);
  *(void *)((v31 + 7 + v29) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v31 + 7 + v30) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v32 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + v28 + 8;
  int v33 = (unsigned __int8 *)((v32 + v29) & ~v28);
  unint64_t v34 = (unsigned __int8 *)((v32 + v30) & ~v28);
  int v35 = *(_DWORD *)(v26 + 84);
  if (v33 != v34)
  {
    if (v35) {
      size_t v36 = v31;
    }
    else {
      size_t v36 = v31 + 1;
    }
    if (v36 <= 8) {
      uint64_t v37 = 8;
    }
    else {
      uint64_t v37 = v36;
    }
    unsigned int v38 = v33[v37];
    unsigned int v39 = v38 - 2;
    if (v38 >= 2)
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      switch(v40)
      {
        case 1:
          int v41 = *v33;
          goto LABEL_31;
        case 2:
          int v41 = *(unsigned __int16 *)v33;
          goto LABEL_31;
        case 3:
          int v41 = *(unsigned __int16 *)v33 | (v33[2] << 16);
          goto LABEL_31;
        case 4:
          int v41 = *(_DWORD *)v33;
LABEL_31:
          int v42 = (v41 | (v39 << (8 * v37))) + 2;
          unsigned int v38 = v41 + 2;
          if (v37 < 4) {
            unsigned int v38 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v38 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v33, 1, v24)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v26 + 8))(v33, v24);
      }
    }
    else
    {
      swift_release();
    }
    unsigned int v43 = v34[v37];
    unsigned int v44 = v43 - 2;
    if (v43 >= 2)
    {
      if (v37 <= 3) {
        uint64_t v45 = v37;
      }
      else {
        uint64_t v45 = 4;
      }
      switch(v45)
      {
        case 1:
          int v46 = *v34;
          goto LABEL_46;
        case 2:
          int v46 = *(unsigned __int16 *)v34;
          goto LABEL_46;
        case 3:
          int v46 = *(unsigned __int16 *)v34 | (v34[2] << 16);
          goto LABEL_46;
        case 4:
          int v46 = *(_DWORD *)v34;
LABEL_46:
          int v47 = (v46 | (v44 << (8 * v37))) + 2;
          unsigned int v43 = v46 + 2;
          if (v37 < 4) {
            unsigned int v43 = v47;
          }
          break;
        default:
          break;
      }
    }
    if (v43 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v34, 1, v24))
      {
        memcpy(v33, v34, v36);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v26 + 16))(v33, v34, v24);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v26 + 56))(v33, 0, 1, v24);
      }
      v33[v37] = 1;
    }
    else
    {
      *(void *)int v33 = *(void *)v34;
      v33[v37] = 0;
      swift_retain();
    }
  }
  if (v35) {
    unint64_t v48 = v31;
  }
  else {
    unint64_t v48 = v31 + 1;
  }
  if (v48 <= 8) {
    uint64_t v49 = 8;
  }
  else {
    uint64_t v49 = v48;
  }
  uint64_t v50 = sub_21915A198();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(_DWORD *)(v51 + 80) & 0xF8 | 7;
  uint64_t v53 = v49 + v52 + 1;
  char v54 = (unsigned __int8 *)((unint64_t)&v33[v53] & ~v52);
  uint64_t v55 = (unsigned __int8 *)((unint64_t)&v34[v53] & ~v52);
  if (v54 != v55)
  {
    uint64_t v56 = v50;
    uint64_t v57 = *(void *)(v50 - 8);
    if (*(void *)(v51 + 64) <= 8uLL) {
      uint64_t v58 = 8;
    }
    else {
      uint64_t v58 = *(void *)(v51 + 64);
    }
    unsigned int v59 = v54[v58];
    unsigned int v60 = v59 - 2;
    if (v59 >= 2)
    {
      if (v58 <= 3) {
        uint64_t v61 = v58;
      }
      else {
        uint64_t v61 = 4;
      }
      switch(v61)
      {
        case 1:
          int v62 = *v54;
          goto LABEL_73;
        case 2:
          int v62 = *(unsigned __int16 *)v54;
          goto LABEL_73;
        case 3:
          int v62 = *(unsigned __int16 *)v54 | (v54[2] << 16);
          goto LABEL_73;
        case 4:
          int v62 = *(_DWORD *)v54;
LABEL_73:
          int v63 = (v62 | (v60 << (8 * v58))) + 2;
          unsigned int v59 = v62 + 2;
          if (v58 < 4) {
            unsigned int v59 = v63;
          }
          break;
        default:
          break;
      }
    }
    if (v59 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(v54, v50);
    }
    else {
      swift_release();
    }
    unsigned int v64 = v55[v58];
    unsigned int v65 = v64 - 2;
    if (v64 >= 2)
    {
      if (v58 <= 3) {
        uint64_t v66 = v58;
      }
      else {
        uint64_t v66 = 4;
      }
      switch(v66)
      {
        case 1:
          int v67 = *v55;
          goto LABEL_87;
        case 2:
          int v67 = *(unsigned __int16 *)v55;
          goto LABEL_87;
        case 3:
          int v67 = *(unsigned __int16 *)v55 | (v55[2] << 16);
          goto LABEL_87;
        case 4:
          int v67 = *(_DWORD *)v55;
LABEL_87:
          int v68 = (v67 | (v65 << (8 * v58))) + 2;
          unsigned int v64 = v67 + 2;
          if (v58 < 4) {
            unsigned int v64 = v68;
          }
          break;
        default:
          break;
      }
    }
    if (v64 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v57 + 16))(v54, v55, v56);
      v54[v58] = 1;
    }
    else
    {
      *(void *)char v54 = *(void *)v55;
      v54[v58] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_21913A1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_219159ED8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    size_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v16 = v8 + 56;
    v17(v11, 0, 1, v7);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  uint64_t v19 = (uint64_t)v11 + v18 + 7;
  unint64_t v20 = ((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  unint64_t v22 = v19 & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v22 = v21;
  uint64_t v23 = sub_219157718();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = v24;
  uint64_t v26 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v27 = v26 | 7;
  v26 += 16;
  unint64_t v28 = (v26 + v22) & ~v27;
  unint64_t v29 = (v26 + v20) & ~v27;
  unint64_t v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 32);
  v30(v28, v29, v23);
  size_t v31 = *(void *)(v24 + 64);
  *(void *)((v31 + 7 + v28) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v31 + 7 + v29) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + v27 + 8;
  int v33 = (void *)((v32 + v28) & ~v27);
  unint64_t v34 = (unsigned __int8 *)((v32 + v29) & ~v27);
  if (*(_DWORD *)(v25 + 84)) {
    size_t v35 = v31;
  }
  else {
    size_t v35 = v31 + 1;
  }
  if (v35 <= 8) {
    uint64_t v36 = 8;
  }
  else {
    uint64_t v36 = v35;
  }
  unsigned int v37 = v34[v36];
  unsigned int v38 = v37 - 2;
  if (v37 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *v34;
        goto LABEL_25;
      case 2:
        int v40 = *(unsigned __int16 *)v34;
        goto LABEL_25;
      case 3:
        int v40 = *(unsigned __int16 *)v34 | (v34[2] << 16);
        goto LABEL_25;
      case 4:
        int v40 = *(_DWORD *)v34;
LABEL_25:
        int v41 = (v40 | (v38 << (8 * v36))) + 2;
        unsigned int v37 = v40 + 2;
        if (v36 < 4) {
          unsigned int v37 = v41;
        }
        break;
      default:
        break;
    }
  }
  if (v37 == 1)
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v25 + 48))(v34, 1, v23))
    {
      memcpy(v33, v34, v35);
      char v42 = 1;
    }
    else
    {
      v30((unint64_t)v33, (unint64_t)v34, v23);
      char v42 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v33, 0, 1, v23);
    }
  }
  else
  {
    char v42 = 0;
    *int v33 = *(void *)v34;
  }
  *((unsigned char *)v33 + v36) = v42;
  uint64_t v43 = *(void *)(sub_21915A198() - 8);
  uint64_t v44 = v43;
  uint64_t v45 = *(_DWORD *)(v43 + 80) & 0xF8 | 7;
  uint64_t v46 = v36 + v45 + 1;
  int v47 = (void *)(((unint64_t)v33 + v46) & ~v45);
  unint64_t v48 = (unsigned __int8 *)((unint64_t)&v34[v46] & ~v45);
  if (*(void *)(v43 + 64) <= 8uLL) {
    uint64_t v49 = 8;
  }
  else {
    uint64_t v49 = *(void *)(v43 + 64);
  }
  unsigned int v50 = v48[v49];
  unsigned int v51 = v50 - 2;
  if (v50 >= 2)
  {
    if (v49 <= 3) {
      uint64_t v52 = v49;
    }
    else {
      uint64_t v52 = 4;
    }
    switch(v52)
    {
      case 1:
        int v53 = *v48;
        goto LABEL_44;
      case 2:
        int v53 = *(unsigned __int16 *)v48;
        goto LABEL_44;
      case 3:
        int v53 = *(unsigned __int16 *)v48 | (v48[2] << 16);
        goto LABEL_44;
      case 4:
        int v53 = *(_DWORD *)v48;
LABEL_44:
        int v54 = (v53 | (v51 << (8 * v49))) + 2;
        unsigned int v50 = v53 + 2;
        if (v49 < 4) {
          unsigned int v50 = v54;
        }
        break;
      default:
        break;
    }
  }
  if (v50 == 1)
  {
    (*(void (**)(void *))(v44 + 32))(v47);
    char v55 = 1;
  }
  else
  {
    char v55 = 0;
    *int v47 = *(void *)v48;
  }
  *((unsigned char *)v47 + v49) = v55;
  return a1;
}

uint64_t sub_21913A6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_219159ED8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  int v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v20 = (uint64_t)v11 + v19 + 7;
  unint64_t v21 = ((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 8);
  unint64_t v23 = v20 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v21;
  *(unsigned char *)(v23 + 8) = v22;
  uint64_t v24 = sub_219157718();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25;
  uint64_t v27 = *(_DWORD *)(v25 + 80) & 0xF8;
  uint64_t v28 = v27 | 7;
  v27 += 16;
  unint64_t v29 = (v27 + v23) & ~v28;
  unint64_t v30 = (v27 + v21) & ~v28;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 40))(v29, v30, v24);
  size_t v31 = *(void *)(v25 + 64);
  *(void *)((v31 + 7 + v29) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v31 + 7 + v30) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v32 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + v28 + 8;
  int v33 = (unsigned __int8 *)((v32 + v29) & ~v28);
  unint64_t v34 = (unsigned __int8 *)((v32 + v30) & ~v28);
  int v35 = *(_DWORD *)(v26 + 84);
  if (v33 != v34)
  {
    if (v35) {
      size_t v36 = v31;
    }
    else {
      size_t v36 = v31 + 1;
    }
    if (v36 <= 8) {
      uint64_t v37 = 8;
    }
    else {
      uint64_t v37 = v36;
    }
    unsigned int v38 = v33[v37];
    unsigned int v39 = v38 - 2;
    if (v38 >= 2)
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      switch(v40)
      {
        case 1:
          int v41 = *v33;
          goto LABEL_31;
        case 2:
          int v41 = *(unsigned __int16 *)v33;
          goto LABEL_31;
        case 3:
          int v41 = *(unsigned __int16 *)v33 | (v33[2] << 16);
          goto LABEL_31;
        case 4:
          int v41 = *(_DWORD *)v33;
LABEL_31:
          int v42 = (v41 | (v39 << (8 * v37))) + 2;
          unsigned int v38 = v41 + 2;
          if (v37 < 4) {
            unsigned int v38 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v38 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v33, 1, v24)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v26 + 8))(v33, v24);
      }
    }
    else
    {
      swift_release();
    }
    unsigned int v43 = v34[v37];
    unsigned int v44 = v43 - 2;
    if (v43 >= 2)
    {
      if (v37 <= 3) {
        uint64_t v45 = v37;
      }
      else {
        uint64_t v45 = 4;
      }
      switch(v45)
      {
        case 1:
          int v46 = *v34;
          goto LABEL_46;
        case 2:
          int v46 = *(unsigned __int16 *)v34;
          goto LABEL_46;
        case 3:
          int v46 = *(unsigned __int16 *)v34 | (v34[2] << 16);
          goto LABEL_46;
        case 4:
          int v46 = *(_DWORD *)v34;
LABEL_46:
          int v47 = (v46 | (v44 << (8 * v37))) + 2;
          unsigned int v43 = v46 + 2;
          if (v37 < 4) {
            unsigned int v43 = v47;
          }
          break;
        default:
          break;
      }
    }
    if (v43 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v26 + 48))(v34, 1, v24))
      {
        memcpy(v33, v34, v36);
        char v48 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v26 + 32))(v33, v34, v24);
        char v48 = 1;
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v26 + 56))(v33, 0, 1, v24);
      }
    }
    else
    {
      char v48 = 0;
      *(void *)int v33 = *(void *)v34;
    }
    v33[v37] = v48;
  }
  if (v35) {
    unint64_t v49 = v31;
  }
  else {
    unint64_t v49 = v31 + 1;
  }
  if (v49 <= 8) {
    uint64_t v50 = 8;
  }
  else {
    uint64_t v50 = v49;
  }
  uint64_t v51 = sub_21915A198();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(_DWORD *)(v52 + 80) & 0xF8 | 7;
  uint64_t v54 = v50 + v53 + 1;
  char v55 = (unsigned __int8 *)((unint64_t)&v33[v54] & ~v53);
  uint64_t v56 = (unsigned __int8 *)((unint64_t)&v34[v54] & ~v53);
  if (v55 != v56)
  {
    uint64_t v57 = v51;
    uint64_t v58 = *(void *)(v51 - 8);
    if (*(void *)(v52 + 64) <= 8uLL) {
      uint64_t v59 = 8;
    }
    else {
      uint64_t v59 = *(void *)(v52 + 64);
    }
    unsigned int v60 = v55[v59];
    unsigned int v61 = v60 - 2;
    if (v60 >= 2)
    {
      if (v59 <= 3) {
        uint64_t v62 = v59;
      }
      else {
        uint64_t v62 = 4;
      }
      switch(v62)
      {
        case 1:
          int v63 = *v55;
          goto LABEL_73;
        case 2:
          int v63 = *(unsigned __int16 *)v55;
          goto LABEL_73;
        case 3:
          int v63 = *(unsigned __int16 *)v55 | (v55[2] << 16);
          goto LABEL_73;
        case 4:
          int v63 = *(_DWORD *)v55;
LABEL_73:
          int v64 = (v63 | (v61 << (8 * v59))) + 2;
          unsigned int v60 = v63 + 2;
          if (v59 < 4) {
            unsigned int v60 = v64;
          }
          break;
        default:
          break;
      }
    }
    if (v60 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v58 + 8))(v55, v51);
    }
    else {
      swift_release();
    }
    unsigned int v65 = v56[v59];
    unsigned int v66 = v65 - 2;
    if (v65 >= 2)
    {
      if (v59 <= 3) {
        uint64_t v67 = v59;
      }
      else {
        uint64_t v67 = 4;
      }
      switch(v67)
      {
        case 1:
          int v68 = *v56;
          goto LABEL_87;
        case 2:
          int v68 = *(unsigned __int16 *)v56;
          goto LABEL_87;
        case 3:
          int v68 = *(unsigned __int16 *)v56 | (v56[2] << 16);
          goto LABEL_87;
        case 4:
          int v68 = *(_DWORD *)v56;
LABEL_87:
          int v69 = (v68 | (v66 << (8 * v59))) + 2;
          unsigned int v65 = v68 + 2;
          if (v59 < 4) {
            unsigned int v65 = v69;
          }
          break;
        default:
          break;
      }
    }
    if (v65 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v58 + 32))(v55, v56, v57);
      char v70 = 1;
    }
    else
    {
      char v70 = 0;
      *(void *)char v55 = *(void *)v56;
    }
    v55[v59] = v70;
  }
  return a1;
}

uint64_t sub_21913ADA0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v40 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v40 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v38 = sub_219159ED8();
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  unsigned int v8 = v7 - 1;
  if (!v7) {
    unsigned int v8 = 0;
  }
  unsigned int v41 = v5;
  unsigned int v39 = v8;
  if (v8 > v5) {
    unsigned int v5 = v8;
  }
  uint64_t v37 = sub_219157718();
  uint64_t v42 = *(void *)(v37 - 8);
  uint64_t v9 = *(unsigned int *)(v42 + 84);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v42 + 84);
  }
  if (v10 <= v5) {
    unsigned int v11 = v5;
  }
  else {
    unsigned int v11 = v10;
  }
  unint64_t v12 = *(void *)(*(void *)(v37 - 8) + 64);
  uint64_t v13 = *(void *)(sub_21915A198() - 8);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v13 + 64);
  }
  uint64_t v15 = *(void *)(v6 + 64);
  if (!v7) {
    ++v15;
  }
  if (v9) {
    unint64_t v16 = v12;
  }
  else {
    unint64_t v16 = v12 + 1;
  }
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(v4 + 64) + v18;
  uint64_t v20 = v15 + 7;
  unint64_t v21 = (unint64_t)a1;
  uint64_t v22 = *(_DWORD *)(v42 + 80) & 0xF8 | 7;
  unint64_t v23 = v12 + 7;
  if (a2 > v11)
  {
    uint64_t v24 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
    unint64_t v25 = v14
        + ((v17
          + v24
          + (((v23 & 0xFFFFFFFFFFFFFFF8) + v22 + ((v22 + ((v20 + (v19 & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v22) + 8) & ~v22)
          + 1) & ~v24)
        + 1;
    char v26 = 8 * v25;
    if (v25 > 3) {
      goto LABEL_25;
    }
    unsigned int v28 = ((a2 - v11 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_40;
      }
      goto LABEL_32;
    }
    if (v28 > 0xFF)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_40;
      }
      goto LABEL_32;
    }
    if (v28 >= 2)
    {
LABEL_25:
      int v27 = *((unsigned __int8 *)a1 + v25);
      if (!*((unsigned char *)a1 + v25)) {
        goto LABEL_40;
      }
LABEL_32:
      int v29 = (v27 - 1) << v26;
      if (v25 > 3) {
        int v29 = 0;
      }
      if (v25)
      {
        if (v25 > 3) {
          LODWORD(v25) = 4;
        }
        switch((int)v25)
        {
          case 2:
            LODWORD(v25) = *a1;
            break;
          case 3:
            LODWORD(v25) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v25) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v25) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v11 + (v25 | v29) + 1;
    }
  }
LABEL_40:
  if (v41 == v11)
  {
    uint64_t v30 = v40;
    size_t v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v32 = v41;
    return v31(v21, v32, v30);
  }
  unint64_t v34 = ((unint64_t)a1 + v19) & ~v18;
  if (v39 == v11)
  {
    if (v7 < 2) {
      return 0;
    }
    unsigned int v35 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v34, v7, v38);
    if (v35 >= 2) {
      return v35 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v21 = (((v20 + v34) & 0xFFFFFFFFFFFFFFF8) + v22 + 9) & ~v22;
    if (v9 >= 0x7FFFFFFE)
    {
      size_t v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v42 + 48);
      uint64_t v32 = v9;
      uint64_t v30 = v37;
      return v31(v21, v32, v30);
    }
    unint64_t v36 = *(void *)((v23 + v21) & 0xFFFFFFFFFFFFFFF8);
    if (v36 >= 0xFFFFFFFF) {
      LODWORD(v36) = -1;
    }
    if ((v36 + 1) >= 2) {
      return v36;
    }
    else {
      return 0;
    }
  }
}

void sub_21913B204(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v43 = *(void *)(a4 + 16);
  uint64_t v4 = *(void *)(v43 - 8);
  uint64_t v42 = v4;
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v40 = sub_219159ED8();
  uint64_t v6 = *(void *)(v40 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 <= v5) {
    unsigned int v9 = v5;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v39 = sub_219157718();
  uint64_t v44 = *(void *)(v39 - 8);
  uint64_t v10 = *(unsigned int *)(v44 + 84);
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v44 + 84);
  }
  unsigned int v41 = v11;
  if (v11 > v9) {
    unsigned int v9 = v11;
  }
  unint64_t v12 = *(void *)(*(void *)(v39 - 8) + 64);
  uint64_t v13 = sub_21915A198();
  uint64_t v14 = v7;
  int v15 = 0;
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t v17 = 8;
  if (*(void *)(v16 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(v16 + 64);
  }
  uint64_t v19 = *(void *)(v6 + 64);
  if (!v14) {
    ++v19;
  }
  uint64_t v20 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = *(void *)(v4 + 64) + v20;
  uint64_t v22 = v19 + 7;
  uint64_t v23 = *(_DWORD *)(v44 + 80) & 0xF8 | 7;
  size_t v24 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v10) {
    unint64_t v25 = v12;
  }
  else {
    unint64_t v25 = v12 + 1;
  }
  if (v25 > 8) {
    uint64_t v17 = v25;
  }
  uint64_t v26 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  size_t v27 = v18
      + ((v17 + v26 + ((v24 + v23 + ((v23 + ((v19 + 7 + (v21 & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v23)) & ~v23) + 1) & ~v26)
      + 1;
  if (a3 > v9)
  {
    if (v27 <= 3)
    {
      unsigned int v28 = ((a3 - v9 + ~(-1 << (8 * v27))) >> (8 * v27)) + 1;
      if (HIWORD(v28))
      {
        int v15 = 4;
      }
      else if (v28 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v28 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  if (v9 < a2)
  {
    unsigned int v29 = ~v9 + a2;
    if (v27 < 4)
    {
      int v30 = (v29 >> (8 * v27)) + 1;
      if (v27)
      {
        int v33 = v29 & ~(-1 << (8 * v27));
        bzero(a1, v27);
        if (v27 == 3)
        {
          *(_WORD *)a1 = v33;
          a1[2] = BYTE2(v33);
        }
        else if (v27 == 2)
        {
          *(_WORD *)a1 = v33;
        }
        else
        {
          *a1 = v33;
        }
      }
    }
    else
    {
      bzero(a1, v27);
      *(_DWORD *)a1 = v29;
      int v30 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v27] = v30;
        return;
      case 2:
        *(_WORD *)&a1[v27] = v30;
        return;
      case 3:
        goto LABEL_68;
      case 4:
        *(_DWORD *)&a1[v27] = v30;
        return;
      default:
        return;
    }
  }
  uint64_t v31 = ~v20;
  unint64_t v32 = (unint64_t)a1;
  switch(v15)
  {
    case 1:
      a1[v27] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_42;
    case 2:
      *(_WORD *)&a1[v27] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_42;
    case 3:
LABEL_68:
      __break(1u);
      JUMPOUT(0x21913B6FCLL);
    case 4:
      *(_DWORD *)&a1[v27] = 0;
      goto LABEL_41;
    default:
LABEL_41:
      if (!a2) {
        return;
      }
LABEL_42:
      if (v5 == v9)
      {
        uint64_t v34 = v43;
        unsigned int v35 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        uint64_t v36 = a2;
        uint64_t v14 = v5;
        goto LABEL_46;
      }
      unint64_t v32 = (unint64_t)&a1[v21] & v31;
      if (v8 == v9)
      {
        uint64_t v36 = a2 + 1;
        unsigned int v35 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        uint64_t v34 = v40;
LABEL_46:
LABEL_48:
        v35(v32, v36, v14, v34);
        return;
      }
      uint64_t v37 = (_DWORD *)((((v22 + v32) & 0xFFFFFFFFFFFFFFF8) + v23 + 9) & ~v23);
      if (v41 >= a2)
      {
        if (v10 >= 0x7FFFFFFE)
        {
          unsigned int v35 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
          unint64_t v32 = (((v22 + v32) & 0xFFFFFFFFFFFFFFF8) + v23 + 9) & ~v23;
          uint64_t v36 = a2;
          uint64_t v14 = v10;
          uint64_t v34 = v39;
          goto LABEL_48;
        }
        uint64_t v38 = (void *)(((unint64_t)v37 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
        if (a2 > 0x7FFFFFFE)
        {
          *uint64_t v38 = 0;
          *(_DWORD *)uint64_t v38 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *uint64_t v38 = a2;
        }
      }
      else if (((v12 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        bzero((void *)((((v22 + v32) & 0xFFFFFFFFFFFFFFF8) + v23 + 9) & ~v23), v24);
        *uint64_t v37 = ~v41 + a2;
      }
      return;
  }
}

uint64_t sub_21913B724()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21913B768()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for _ImpressionableLayoutItemViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21913B7CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (int *)type metadata accessor for ImpressionableLayoutItemViewModifier();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  uint64_t v4 = v3 + v2[9];
  uint64_t v5 = sub_219159ED8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v3 + v2[11];
  uint64_t v8 = sub_219157718();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD032E8);
  swift_release();
  uint64_t v11 = v3 + v2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
      v10(v11, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v3 + v2[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_21915A198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_21913BAA4(uint64_t a1)
{
  type metadata accessor for ImpressionableLayoutItemViewModifier();
  return sub_219132D18(a1);
}

uint64_t type metadata accessor for LayoutItemImpressionInformation()
{
  uint64_t result = qword_267C07770;
  if (!qword_267C07770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for _ImpressionableLayoutViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21913BB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21913BC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_21913BC74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_219159ED8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_219159F98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_21913BD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159ED8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_219159F98();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_21913BE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219159ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_219159F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_21913BEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219159ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_219159F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_21913BF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219159ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_219159F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_21913C04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219159ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_219159F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_21913C104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21913C118);
}

uint64_t sub_21913C118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_219159ED8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_219159F98();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_21913C210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21913C224);
}

uint64_t sub_21913C224(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_219159ED8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_219159F98();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_21913C328()
{
  uint64_t result = sub_219159ED8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_219159F98();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_21913C3F0()
{
  sub_21913DBAC(319, qword_267C076E8, MEMORY[0x263F50AB8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_21915A2A8();
    if (v1 <= 0x3F)
    {
      sub_21913DBAC(319, &qword_26AD013B0, MEMORY[0x263F50D08], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

char *sub_21913C588(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_219159ED8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[9];
    uint64_t v12 = &v4[v11];
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_21915A2A8();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    uint64_t v16 = a3[10];
    uint64_t v17 = a3[11];
    uint64_t v18 = &v4[v16];
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    v15(&v4[v17], (char *)a2 + v17, v14);
    uint64_t v20 = a3[13];
    v4[a3[12]] = *((unsigned char *)a2 + a3[12]);
    *(_OWORD *)&v4[v20] = *(_OWORD *)((char *)a2 + v20);
    uint64_t v21 = a3[14];
    uint64_t v22 = &v4[v21];
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_21915A628();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_unknownObjectRetain();
    if (v26(v23, 1, v24))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v28 = a3[15];
    unsigned int v29 = &v4[v28];
    int v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)v30;
    char v32 = v30[8];
    j__swift_retain(*(void *)v30);
    *(void *)unsigned int v29 = v31;
    v29[8] = v32;
    uint64_t v33 = a3[16];
    uint64_t v34 = a3[17];
    unsigned int v35 = &v4[v33];
    uint64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *(void *)unsigned int v35 = *v36;
    *((void *)v35 + 1) = v37;
    uint64_t v38 = &v4[v34];
    uint64_t v39 = (uint64_t *)((char *)a2 + v34);
    uint64_t v40 = v39[1];
    *(void *)uint64_t v38 = *v39;
    *((void *)v38 + 1) = v40;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_21913C8EC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_219159ED8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = sub_21915A2A8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[11], v7);
  swift_unknownObjectRelease();
  uint64_t v9 = a1 + a2[14];
  uint64_t v10 = sub_21915A628();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  j__swift_release(*(void *)(a1 + a2[15]), *(unsigned __int8 *)(a1 + a2[15] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

char *sub_21913CADC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219159ED8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[9];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_21915A2A8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  v13(&a1[v15], &a2[v15], v12);
  uint64_t v18 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[14];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_21915A628();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_unknownObjectRetain();
  if (v24(v21, 1, v22))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v26 = a3[15];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *(void *)v28;
  char v30 = v28[8];
  j__swift_retain(*(void *)v28);
  *(void *)uint64_t v27 = v29;
  v27[8] = v30;
  uint64_t v31 = a3[16];
  uint64_t v32 = a3[17];
  uint64_t v33 = &a1[v31];
  uint64_t v34 = &a2[v31];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  uint64_t v36 = &a1[v32];
  uint64_t v37 = &a2[v32];
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_21913CDF4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219159ED8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_21915A2A8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  uint64_t v17 = a3[10];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  v16(&a1[a3[11]], &a2[a3[11]], v15);
  a1[a3[12]] = a2[a3[12]];
  uint64_t v21 = a3[13];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v22 + 1) = v24;
  uint64_t v25 = a3[14];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_21915A628();
  uint64_t v29 = *(void *)(v28 - 8);
  char v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  LODWORD(v16) = v30(v26, 1, v28);
  int v31 = v30(v27, 1, v28);
  if (!v16)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_13:
  uint64_t v33 = a3[15];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)v35;
  char v37 = v35[8];
  j__swift_retain(*(void *)v35);
  uint64_t v38 = *(void *)v34;
  uint64_t v39 = v34[8];
  *(void *)uint64_t v34 = v36;
  v34[8] = v37;
  j__swift_release(v38, v39);
  uint64_t v40 = a3[16];
  unsigned int v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  *(void *)&a1[v40] = *(void *)&a2[v40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v41 + 1) = *((void *)v42 + 1);
  swift_retain();
  swift_release();
  uint64_t v43 = a3[17];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_21913D214(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219159ED8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[9];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_21915A2A8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  v13(&a1[v15], &a2[v15], v12);
  uint64_t v18 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[14];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_21915A628();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[15];
  uint64_t v26 = a3[16];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  *(_OWORD *)&a1[a3[17]] = *(_OWORD *)&a2[a3[17]];
  return a1;
}

char *sub_21913D4D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_219159ED8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_21915A2A8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  uint64_t v17 = a3[10];
  uint64_t v18 = a3[11];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  v16(&a1[v18], &a2[v18], v15);
  uint64_t v21 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = *(void *)&a2[v21 + 8];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  swift_unknownObjectRelease();
  *((void *)v22 + 1) = v23;
  uint64_t v24 = a3[14];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_21915A628();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v16) = v29(v25, 1, v27);
  int v30 = v29(v26, 1, v27);
  if (!v16)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_13:
  uint64_t v32 = a3[15];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = v34[8];
  uint64_t v36 = *(void *)v33;
  uint64_t v37 = v33[8];
  *(void *)uint64_t v33 = v35;
  v33[8] = (char)v34;
  j__swift_release(v36, v37);
  uint64_t v38 = a3[16];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  *(void *)&a1[v38] = *(void *)&a2[v38];
  swift_bridgeObjectRelease();
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_release();
  uint64_t v41 = a3[17];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  *(void *)&a1[v41] = *(void *)v43;
  swift_bridgeObjectRelease();
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_release();
  return a1;
}

uint64_t sub_21913D8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21913D8CC);
}

uint64_t sub_21913D8CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_21915A2A8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[9];
LABEL_7:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[16]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_21913DA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21913DA48);
}

uint64_t sub_21913DA48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03338);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_21915A2A8();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[9];
    }
    else
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03388);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[16]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[14];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21913DBAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_21913DC10()
{
  return swift_getWitnessTable();
}

uint64_t sub_21913DD78()
{
  return swift_getWitnessTable();
}

uint64_t sub_21913DE74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21913DEB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ImpressionPreferenceKey()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21913DF14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21913DF4C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1);
}

uint64_t sub_21913DF7C(uint64_t a1)
{
  return sub_21913E590(a1, sub_219135D78);
}

uint64_t sub_21913DF94()
{
  uint64_t v1 = (int *)type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v16 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v16 + 40) & ~v16;
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v17 = sub_2191576E8();
  uint64_t v3 = *(void *)(v17 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = sub_219159ED8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v2, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v2, v6);
  }
  uint64_t v8 = v5 + v1[9];
  uint64_t v9 = sub_21915A2A8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v5 + v1[11], v9);
  swift_unknownObjectRelease();
  uint64_t v11 = v5 + v1[14];
  uint64_t v12 = sub_21915A628();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  j__swift_release(*(void *)(v5 + v1[15]), *(unsigned __int8 *)(v5 + v1[15] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + ((((v15 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 16) & ~v4), v17);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21913E2C0()
{
  type metadata accessor for _ImpressionableLayoutViewModifier();
  sub_2191576E8();
  return sub_219136970();
}

uint64_t sub_21913E3EC(uint64_t a1)
{
  return sub_21913E444(a1, MEMORY[0x263F50AF8]);
}

uint64_t sub_21913E418(uint64_t a1)
{
  return sub_21913E444(a1, MEMORY[0x263F50AF0]);
}

uint64_t sub_21913E444(uint64_t a1, void (*a2)(char *, uint64_t, char *, uint64_t, uint64_t))
{
  return sub_219136A7C(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t sub_21913E46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayoutItemImpressionInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21913E4D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutItemImpressionInformation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21913E52C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21913E578(uint64_t a1)
{
  return sub_21913E590(a1, (uint64_t (*)(uint64_t, uint64_t))sub_219135B40);
}

uint64_t sub_21913E590(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for _ImpressionableLayoutViewModifier();
  return a2(a1, v4);
}

uint64_t sub_21913E610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayoutItemImpressionInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v1 = (int *)type metadata accessor for _ImpressionableLayoutViewModifier();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_219159ED8();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  uint64_t v7 = v4 + v1[9];
  uint64_t v8 = sub_21915A2A8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v4 + v1[11], v8);
  swift_unknownObjectRelease();
  uint64_t v10 = v4 + v1[14];
  uint64_t v11 = sub_21915A628();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  j__swift_release(*(void *)(v4 + v1[15]), *(unsigned __int8 *)(v4 + v1[15] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21913E8D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_21913EA04()
{
  return swift_getWitnessTable();
}

uint64_t sub_21913EE68()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 32))(&v2);
  return v2;
}

uint64_t sub_21913EEA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_219137124(a1, a2);
}

uint64_t _RequirementFailureView.init<>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for _RequirementFailureView();
  uint64_t v12 = (void *)(a5 + *(int *)(result + 52));
  *uint64_t v12 = sub_2191407E0;
  v12[1] = v10;
  return result;
}

uint64_t _RequirementFailureView.init<>(fatal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_219030858();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2191589E8();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v10 & 1;
  *(void *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = sub_21913F2A8;
  *(void *)(a3 + 40) = result;
  return result;
}

uint64_t _RequirementFailureView.init(_:message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for _RequirementFailureView();
  char v9 = (void *)(a5 + *(int *)(result + 52));
  *char v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t sub_21913F108()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _RequirementFailureView.init<>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  *(unsigned char *)(v14 + 32) = a4;
  *(void *)(v14 + 40) = a5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  uint64_t result = type metadata accessor for _RequirementFailureView();
  uint64_t v16 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a7 + *(int *)(result + 52));
  *uint64_t v16 = sub_2191281D0;
  v16[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

uint64_t sub_21913F23C@<X0>(uint64_t a1@<X8>)
{
  sub_219030858();
  swift_bridgeObjectRetain();
  uint64_t result = sub_2191589E8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_21913F2A8@<X0>(uint64_t a1@<X8>)
{
  return sub_21913F23C(a1);
}

uint64_t type metadata accessor for _RequirementFailureView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_21913F2DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _RequirementFailureView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = a1[2];
  uint64_t v87 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v86 = (uint64_t)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v85 = (uint64_t)v67 - v6;
  uint64_t v7 = sub_219158698();
  uint64_t v92 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v91 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_219158608();
  uint64_t v89 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v95 = a1;
  uint64_t v12 = a1[5];
  uint64_t v78 = v11;
  uint64_t v108 = v11;
  uint64_t v109 = MEMORY[0x263F1B570];
  uint64_t v79 = v12;
  uint64_t v110 = v12;
  unint64_t v111 = MEMORY[0x263F1B558];
  uint64_t v13 = sub_219158FD8();
  uint64_t v83 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v77 = (char *)v67 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C10);
  uint64_t v15 = sub_219157F48();
  uint64_t v80 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (char *)v67 - v16;
  uint64_t v17 = sub_219157F48();
  uint64_t v82 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v76 = (char *)v67 - v18;
  uint64_t v84 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v20 = sub_21913FF28();
  void v67[2] = WitnessTable;
  uint64_t v106 = WitnessTable;
  unint64_t v107 = v20;
  uint64_t v81 = v15;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v104 = v68;
  unint64_t v105 = v20;
  uint64_t v21 = swift_getWitnessTable();
  unint64_t v22 = sub_21913FF84();
  uint64_t v108 = v17;
  uint64_t v109 = v9;
  uint64_t v110 = v21;
  unint64_t v111 = v22;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v73 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v71 = (char *)v67 - v24;
  uint64_t v108 = v17;
  uint64_t v109 = v9;
  uint64_t v90 = v9;
  uint64_t v70 = v21;
  uint64_t v110 = v21;
  unint64_t v111 = v22;
  unint64_t v69 = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = OpaqueTypeMetadata2;
  uint64_t v99 = v7;
  uint64_t v108 = OpaqueTypeMetadata2;
  uint64_t v109 = v7;
  uint64_t v96 = OpaqueTypeConformance2;
  uint64_t v110 = OpaqueTypeConformance2;
  unint64_t v111 = MEMORY[0x263F1A0D8];
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v74 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v72 = (uint64_t)v67 - v30;
  uint64_t v31 = sub_21915A478();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)v67 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)v67 - v36;
  uint64_t v38 = sub_2191584D8();
  uint64_t v93 = *(void *)(v38 - 8);
  uint64_t v94 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v101 = (uint64_t)v67 - v39;
  sub_21915A468();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v34, *MEMORY[0x263F50C38], v31);
  LOBYTE(v9) = sub_21915A458();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v32 + 8);
  v40(v34, v31);
  uint64_t v41 = ((uint64_t (*)(char *, uint64_t))v40)(v37, v31);
  if (v9)
  {
    MEMORY[0x270FA5388](v41);
    v67[1] = v3;
    uint64_t v42 = v78;
    v67[-6] = v3;
    v67[-5] = v42;
    uint64_t v95 = (void *)v95[4];
    uint64_t v43 = v79;
    v67[-4] = v95;
    v67[-3] = v43;
    v67[-2] = v97;
    uint64_t v44 = v77;
    sub_219158FB8();
    sub_219158E78();
    uint64_t v45 = v75;
    uint64_t v46 = v84;
    sub_219158D18();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v44, v46);
    sub_219158E78();
    int v47 = v76;
    uint64_t v48 = v81;
    sub_219158B18();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v45, v48);
    unint64_t v49 = v88;
    sub_2191585F8();
    uint64_t v50 = v71;
    uint64_t v51 = v90;
    sub_219158A48();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v51);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v17);
    uint64_t v52 = v91;
    sub_219158688();
    uint64_t v54 = v98;
    uint64_t v53 = v99;
    uint64_t v55 = v96;
    unint64_t v56 = MEMORY[0x263F1A0D8];
    sub_219158AD8();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v53);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v54);
    uint64_t v108 = v54;
    uint64_t v109 = v53;
    uint64_t v110 = v55;
    unint64_t v111 = v56;
    swift_getOpaqueTypeConformance2();
    uint64_t v57 = v72;
    sub_218FFDE04((uint64_t)v28, v26, v72);
    uint64_t v58 = *(void (**)(char *, uint64_t))(v74 + 8);
    v58(v28, v26);
    sub_218FFDE04(v57, v26, (uint64_t)v28);
    uint64_t v59 = v95;
    sub_219050FE4((uint64_t)v28, v26);
    v58(v28, v26);
    v58((char *)v57, v26);
  }
  else
  {
    unsigned int v60 = (void *)v95[4];
    uint64_t v61 = v85;
    sub_218FFDE04(v97, v3, v85);
    uint64_t v62 = v86;
    sub_218FFDE04(v61, v3, v86);
    uint64_t v54 = v98;
    uint64_t v53 = v99;
    uint64_t v108 = v98;
    uint64_t v109 = v99;
    uint64_t v55 = v96;
    uint64_t v110 = v96;
    unint64_t v56 = MEMORY[0x263F1A0D8];
    unint64_t v111 = MEMORY[0x263F1A0D8];
    swift_getOpaqueTypeConformance2();
    sub_218FFCBB0(v62, v26, v3);
    int v63 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    v63(v62, v3);
    v63(v61, v3);
    uint64_t v59 = v60;
  }
  uint64_t v108 = v54;
  uint64_t v109 = v53;
  uint64_t v110 = v55;
  unint64_t v111 = v56;
  uint64_t v102 = swift_getOpaqueTypeConformance2();
  uint64_t v103 = v59;
  uint64_t v64 = v94;
  swift_getWitnessTable();
  uint64_t v65 = v101;
  sub_218FFDE04(v101, v64, v100);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8))(v65, v64);
}

unint64_t sub_21913FF28()
{
  unint64_t result = qword_267C04C08;
  if (!qword_267C04C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C04C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C04C08);
  }
  return result;
}

unint64_t sub_21913FF84()
{
  unint64_t result = qword_267C05CF0;
  if (!qword_267C05CF0)
  {
    sub_219158608();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C05CF0);
  }
  return result;
}

uint64_t sub_21913FFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v19 - v10;
  v19[0] = v12;
  v19[1] = v13;
  void v19[2] = v14;
  v19[3] = v15;
  uint64_t v16 = type metadata accessor for _RequirementFailureView();
  (*(void (**)(void))(a1 + *(int *)(v16 + 52)))();
  sub_218FFDE04((uint64_t)v8, a2, (uint64_t)v11);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v8, a2);
  sub_218FFDE04((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, a2);
}

uint64_t sub_219140134@<X0>(uint64_t a1@<X8>)
{
  return sub_21913FFDC(*(void *)(v1 + 48), *(void *)(v1 + 24), a1);
}

uint64_t sub_219140144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158F08();
  *a1 = result;
  return result;
}

uint64_t sub_219140184()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2191401CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_219140268(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2191403B4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2191403C8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2191405A8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2191405D0()
{
  return swift_getWitnessTable();
}

uint64_t ViewWillDisappearReason.init(initialPathCount:pageMetricsNavigationPath:isFlowStackSheetPresented:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v32 = a1;
  uint64_t v11 = sub_219157E68();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308);
  MEMORY[0x270FA5388](v13 - 8);
  int v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03300);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v28 = (uint64_t)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    uint64_t v33 = a4;
    uint64_t v34 = a5;
    char v35 = a6 & 1;
    swift_retain();
    swift_retain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03698);
    MEMORY[0x21D47FB40](&v36, v19);
    swift_release();
    swift_release();
    if ((v36 & 1) == 0)
    {
      sub_21915A408();
LABEL_13:
      sub_219006724(a4, a5);
      uint64_t v26 = &qword_26AD03308;
      uint64_t v27 = a3;
      return sub_218FFE158(v27, v26);
    }
  }
  if (a2)
  {
LABEL_12:
    sub_21915A3F8();
    goto LABEL_13;
  }
  sub_219140B14(a3, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    unint64_t v20 = &qword_26AD03308;
    uint64_t v21 = (uint64_t)v15;
LABEL_11:
    sub_218FFE158(v21, v20);
    goto LABEL_12;
  }
  uint64_t v22 = v28;
  sub_219140B7C((uint64_t)v15, v28);
  uint64_t v23 = v29;
  MEMORY[0x21D47FB40](v16);
  uint64_t v24 = sub_219157E28();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v23, v31);
  if (!__OFSUB__(v32, 1))
  {
    if (v24 == v32 - 1)
    {
      sub_21915A418();
      sub_219006724(a4, a5);
      sub_218FFE158(a3, &qword_26AD03308);
      uint64_t v26 = &qword_26AD03300;
      uint64_t v27 = v22;
      return sub_218FFE158(v27, v26);
    }
    unint64_t v20 = &qword_26AD03300;
    uint64_t v21 = v22;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_219140B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_219140B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ViewWillDisappearReason.init(_:where:)(unsigned char *a1, char a2)
{
  switch(*a1)
  {
    case 1:
      if (a2) {
        goto LABEL_5;
      }
      uint64_t result = sub_21915A418();
      break;
    case 3:
    case 4:
      goto LABEL_5;
    default:
      if (a2) {
LABEL_5:
      }
        uint64_t result = sub_21915A3F8();
      else {
        uint64_t result = sub_21915A408();
      }
      break;
  }
  return result;
}

uint64_t sub_219140C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  type metadata accessor for FlowAlertAuthority(0);
  sub_219140F28();
  swift_retain();
  v9[0] = sub_219157E78();
  v9[1] = v7;
  _OWORD v9[2] = KeyPath;
  char v10 = 0;
  uint64_t v11 = v6;
  char v12 = 0;
  MEMORY[0x21D47F800](v9, a2, &type metadata for FlowAlertViewModifier, a3);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t View.alertIconBackgroundColor(_:)()
{
  return swift_release();
}

uint64_t sub_219140D8C()
{
  sub_219140F80();
  sub_219158238();
  return v1;
}

uint64_t sub_219140DC8@<X0>(void *a1@<X8>)
{
  sub_219140F80();
  uint64_t result = sub_219158238();
  *a1 = v3;
  return result;
}

uint64_t sub_219140E18()
{
  return sub_219158248();
}

uint64_t sub_219140E7C()
{
  return swift_getWitnessTable();
}

unint64_t sub_219140F28()
{
  unint64_t result = qword_267C07938;
  if (!qword_267C07938)
  {
    type metadata accessor for FlowAlertAuthority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07938);
  }
  return result;
}

unint64_t sub_219140F80()
{
  unint64_t result = qword_267C07940;
  if (!qword_267C07940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07940);
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertIconBackgroundColorKey()
{
  return &type metadata for AlertIconBackgroundColorKey;
}

uint64_t destroy for FlowAlertViewModifier(uint64_t a1)
{
  swift_release();
  sub_21903AC64(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  return sub_218FFDDBC(v2, v3);
}

uint64_t initializeWithCopy for FlowAlertViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_21903AB98(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(v2 + 32);
  LOBYTE(v2) = *(unsigned char *)(v2 + 40);
  sub_218FFE128(v7, v2);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for FlowAlertViewModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = v2[2];
  char v5 = *((unsigned char *)v2 + 24);
  sub_21903AB98(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_21903AC64(v6, v7);
  uint64_t v8 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_218FFE128(v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_218FFDDBC(v9, v10);
  return a1;
}

uint64_t assignWithTake for FlowAlertViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_21903AC64(v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  sub_218FFDDBC(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowAlertViewModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowAlertViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowAlertViewModifier()
{
  return &type metadata for FlowAlertViewModifier;
}

uint64_t sub_219141258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_219158E68();
  *a1 = result;
  return result;
}

uint64_t sub_219141280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_219145198();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_2191412E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219141300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v145 = a1;
  uint64_t v161 = a2;
  uint64_t v128 = sub_21915A7A8();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v122 = (char *)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C04870);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v126 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07948);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v157 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_219157D88();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v158 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_219159828();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07950);
  MEMORY[0x270FA5388](v10);
  uint64_t v163 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v147 = (uint64_t)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v149 = (char *)&v122 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v142 = (uint64_t)&v122 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v144 = (char *)&v122 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v122 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v138 = (char *)&v122 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v122 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v122 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07958);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v146 = (char *)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v148 = (char *)&v122 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v141 = (char *)&v122 - v36;
  MEMORY[0x270FA5388](v37);
  uint64_t v143 = (uint64_t)&v122 - v38;
  MEMORY[0x270FA5388](v39);
  uint64_t v137 = (char *)&v122 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v139 = (uint64_t)&v122 - v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v122 - v44;
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v122 - v47;
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07960);
  uint64_t v140 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v166 = (char *)&v122 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07968);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  uint64_t v167 = (char *)&v122 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07970);
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  uint64_t v152 = (char *)&v122 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07978);
  MEMORY[0x270FA5388](v150);
  uint64_t v151 = (char *)&v122 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = *v2;
  uint64_t v169 = v2;
  uint64_t v53 = v2[1];
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v170 = v53;
  sub_2191579E8();
  swift_release();
  swift_release();
  sub_21907C43C((uint64_t)v30, (uint64_t)v27);
  uint64_t v171 = v12;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_219144EE4((uint64_t)v27, type metadata accessor for FlowAlertAuthority.Presented);
    uint64_t v54 = sub_21915A7C8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v45, 1, 1, v54);
  }
  else
  {
    uint64_t v55 = (uint64_t)&v27[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05020) + 48)];
    uint64_t v54 = sub_21915A7C8();
    uint64_t v56 = *(void *)(v54 - 8);
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v45, v27, v54);
    sub_218FFE158(v55, &qword_26AD010B8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v45, 0, 1, v54);
  }
  sub_219024A0C((uint64_t)v45, (uint64_t)v48, &qword_267C07958);
  sub_219144EE4((uint64_t)v30, type metadata accessor for FlowAlertAuthority.Presented);
  sub_21915A7C8();
  uint64_t v57 = *(void *)(v54 - 8);
  uint64_t v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  uint64_t v165 = v57 + 48;
  if (v164(v48, 1, v54) == 1)
  {
    sub_218FFE158((uint64_t)v48, &qword_267C07958);
  }
  else
  {
    uint64_t v58 = sub_21915A728();
    unint64_t v60 = v59;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v54);
    if (v60) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = 0;
  unint64_t v60 = 0xE000000000000000;
LABEL_8:
  uint64_t v181 = v58;
  unint64_t v182 = v60;
  type metadata accessor for FlowAlertAuthority(0);
  sub_219140F28();
  sub_219157E88();
  swift_getKeyPath();
  uint64_t v61 = (uint64_t)v163;
  sub_219157E98();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_219159138();
  swift_release();
  sub_218FFE158(v61, &qword_267C07950);
  uint64_t v131 = v172;
  uint64_t v130 = v173;
  int v129 = v174;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v62 = (uint64_t)v138;
  sub_2191579E8();
  swift_release();
  swift_release();
  sub_21907C43C(v62, (uint64_t)v22);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v162 = v57;
  if (EnumCaseMultiPayload)
  {
    sub_219144EE4((uint64_t)v22, type metadata accessor for FlowAlertAuthority.Presented);
    uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    uint64_t v65 = (uint64_t)v137;
    unsigned int v66 = v137;
    uint64_t v67 = 1;
  }
  else
  {
    uint64_t v68 = (uint64_t)&v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05020) + 48)];
    uint64_t v65 = (uint64_t)v137;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v137, v22, v54);
    sub_218FFE158(v68, &qword_26AD010B8);
    uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    unsigned int v66 = (char *)v65;
    uint64_t v67 = 0;
  }
  uint64_t v163 = v64;
  v64((uint64_t)v66, v67, 1, v54);
  uint64_t v69 = v139;
  sub_219024A0C(v65, v139, &qword_267C07958);
  uint64_t v70 = sub_219144EE4(v62, type metadata accessor for FlowAlertAuthority.Presented);
  MEMORY[0x270FA5388](v70);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07980);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07988);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07990);
  uint64_t v74 = sub_218FFDF90(&qword_267C07998, &qword_267C07980);
  unint64_t v75 = sub_219030858();
  unint64_t v76 = sub_219143BD0();
  unint64_t v132 = sub_219143D08();
  unint64_t v133 = v76;
  unint64_t v134 = v75;
  uint64_t v135 = v74;
  uint64_t v136 = v73;
  uint64_t v137 = (char *)v72;
  uint64_t v77 = MEMORY[0x263F8D310];
  uint64_t v138 = (char *)v71;
  sub_219158D28();
  swift_release();
  swift_release();
  sub_218FFE158(v69, &qword_267C07958);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v78 = (uint64_t)v144;
  sub_2191579E8();
  swift_release();
  swift_release();
  uint64_t v79 = v142;
  sub_21907C43C(v78, v142);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_219144EE4(v79, type metadata accessor for FlowAlertAuthority.Presented);
    uint64_t v80 = 1;
    uint64_t v81 = v162;
    uint64_t v82 = (uint64_t)v141;
  }
  else
  {
    uint64_t v83 = v79 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05020) + 48);
    uint64_t v81 = v162;
    uint64_t v82 = (uint64_t)v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v141, v79, v54);
    sub_218FFE158(v83, &qword_26AD010B8);
    uint64_t v80 = 0;
  }
  v163(v82, v80, 1, v54);
  uint64_t v84 = v143;
  sub_219024A0C(v82, v143, &qword_267C07958);
  sub_219144EE4(v78, type metadata accessor for FlowAlertAuthority.Presented);
  if (v164((char *)v84, 1, v54) == 1)
  {
    sub_218FFE158(v84, &qword_267C07958);
  }
  else
  {
    uint64_t v85 = v123;
    sub_21915A718();
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v84, v54);
    uint64_t v86 = (uint64_t)v169;
    uint64_t v87 = v169[2];
    char v88 = *((unsigned char *)v169 + 24);
    sub_21903AB98(v87, v88);
    uint64_t v89 = sub_2190FA9B4(v87, v88);
    sub_21903AC64(v87, v88);
    uint64_t v90 = *(void *)(v86 + 32);
    char v91 = *(unsigned char *)(v86 + 40);
    sub_218FFE128(v90, v91);
    sub_2190FA7A8(v90, v91);
    sub_218FFDDBC(v90, v91);
    sub_219143DE0(v89);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v85, v125);
  }
  uint64_t v92 = (uint64_t)v148;
  uint64_t v172 = v138;
  uint64_t v173 = v77;
  uint64_t v174 = v137;
  uint64_t v175 = v136;
  uint64_t v176 = v54;
  uint64_t v177 = v135;
  unint64_t v178 = v134;
  unint64_t v179 = v133;
  unint64_t v180 = v132;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v94 = v168;
  uint64_t v95 = v166;
  sub_219158A38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v95, v94);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v96 = (uint64_t)v149;
  sub_2191579E8();
  swift_release();
  swift_release();
  uint64_t v97 = v147;
  sub_21907C43C(v96, v147);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_219144EE4(v97, type metadata accessor for FlowAlertAuthority.Presented);
    uint64_t v98 = 1;
    uint64_t v99 = v160;
    uint64_t v100 = v159;
    uint64_t v101 = (uint64_t)v146;
  }
  else
  {
    uint64_t v102 = v97 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05020) + 48);
    uint64_t v101 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v146, v97, v54);
    sub_218FFE158(v102, &qword_26AD010B8);
    uint64_t v98 = 0;
    uint64_t v99 = v160;
    uint64_t v100 = v159;
  }
  v163(v101, v98, 1, v54);
  sub_219024A0C(v101, v92, &qword_267C07958);
  sub_219144EE4(v96, type metadata accessor for FlowAlertAuthority.Presented);
  if (v164((char *)v92, 1, v54) == 1)
  {
    uint64_t v103 = &qword_267C07958;
    uint64_t v104 = v92;
LABEL_24:
    sub_218FFE158(v104, v103);
    uint64_t v108 = v158;
    uint64_t v109 = (uint64_t)v157;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v157, 1, 1, v99);
    goto LABEL_25;
  }
  unint64_t v105 = v126;
  sub_21915A7B8();
  (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v92, v54);
  uint64_t v106 = v127;
  uint64_t v107 = v128;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v105, 1, v128) == 1)
  {
    uint64_t v103 = &qword_267C04870;
    uint64_t v104 = (uint64_t)v105;
    goto LABEL_24;
  }
  uint64_t v120 = v122;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v122, v105, v107);
  int v121 = (*(uint64_t (**)(char *, uint64_t))(v106 + 88))(v120, v107);
  uint64_t v108 = v158;
  uint64_t v109 = (uint64_t)v157;
  if (v121 == *MEMORY[0x263F50D50])
  {
    sub_219157D58();
LABEL_31:
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v109, 0, 1, v99);
    goto LABEL_33;
  }
  if (v121 == *MEMORY[0x263F50D58])
  {
    sub_219157D68();
    goto LABEL_31;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v157, 1, 1, v99);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v120, v107);
LABEL_33:
  (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v109, 1, v99) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v108, v109, v99);
    goto LABEL_26;
  }
LABEL_25:
  sub_219157D78();
  sub_218FFE158(v109, &qword_267C07948);
LABEL_26:
  uint64_t v172 = (char *)v168;
  uint64_t v173 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v110 = v152;
  uint64_t v111 = v154;
  uint64_t v112 = v167;
  sub_219158AF8();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v108, v99);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v112, v111);
  uint64_t v113 = sub_219159318();
  uint64_t v115 = v114;
  uint64_t v116 = (uint64_t)v151;
  uint64_t v117 = (uint64_t)&v151[*(int *)(v150 + 36)];
  sub_219143300((uint64_t)v169, v117);
  uint64_t v118 = (uint64_t *)(v117 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C079C8) + 36));
  *uint64_t v118 = v113;
  v118[1] = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v155 + 32))(v116, v110, v156);
  return sub_219024A0C(v116, v161, &qword_267C07978);
}

uint64_t sub_21914288C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21907C43C(a1, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t result = sub_219144EE4((uint64_t)v6, type metadata accessor for FlowAlertAuthority.Presented);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05020);
    sub_218FFE158((uint64_t)&v6[*(int *)(v9 + 48)], &qword_26AD010B8);
    uint64_t v10 = sub_21915A7C8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
  }
  *a2 = EnumCaseMultiPayload == 0;
  return result;
}

uint64_t sub_2191429AC(uint64_t a1, long long *a2)
{
  sub_21915A788();
  swift_getKeyPath();
  long long v11 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v7 = *((void *)a2 + 4);
  char v8 = *((unsigned char *)a2 + 40);
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = a2[1];
  v3[1] = *a2;
  v3[2] = v4;
  *(_OWORD *)((char *)v3 + 41) = *(long long *)((char *)a2 + 25);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_219144FE0;
  *(void *)(v5 + 24) = v3;
  sub_2190F97C4((uint64_t)&v11);
  sub_219144F7C((uint64_t)&v9);
  sub_219144FAC((uint64_t)&v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C079F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C079B0);
  sub_218FFDF90(&qword_267C079F8, &qword_267C079F0);
  sub_219143C44();
  return sub_2191591C8();
}

uint64_t sub_219142B28@<X0>(long long *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_219159868();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C047B0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_267C073D8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C079B0);
  MEMORY[0x270FA5388](v45);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_21915A758();
  uint64_t v46 = v16;
  uint64_t v47 = v15;
  uint64_t v17 = sub_21915A738();
  if (!v18)
  {
    uint64_t v23 = sub_219157A58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    uint64_t v24 = v45;
    goto LABEL_15;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  uint64_t v43 = v6;
  uint64_t v21 = sub_21915A6F8();
  uint64_t v44 = a2;
  if (v21 == v19 && v20 == v22)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_219157A48();
    uint64_t v26 = sub_219157A58();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 0, 1, v26);
    swift_bridgeObjectRelease();
    a2 = v44;
    uint64_t v24 = v45;
    goto LABEL_15;
  }
  char v25 = sub_21915B6C8();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_7;
  }
  if (sub_21915A6E8() == v19 && v20 == v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v45;
  }
  else
  {
    char v28 = sub_21915B6C8();
    swift_bridgeObjectRelease();
    uint64_t v24 = v45;
    if ((v28 & 1) == 0)
    {
      uint64_t v30 = sub_219157A58();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 1, 1, v30);
      goto LABEL_14;
    }
  }
  sub_219157A38();
  uint64_t v29 = sub_219157A58();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);
LABEL_14:
  swift_bridgeObjectRelease();
  a2 = v44;
LABEL_15:
  sub_21915A768();
  if (v49)
  {
    sub_219018288(&v48, (uint64_t)&v50);
  }
  else
  {
    sub_219159858();
    uint64_t v51 = sub_219159648();
    uint64_t v52 = MEMORY[0x263F508D0];
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v50);
    sub_219159638();
    sub_218FFE158((uint64_t)&v48, &qword_267C047B8);
  }
  uint64_t v32 = v46;
  uint64_t v31 = v47;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v31;
  *(void *)(v33 + 24) = v32;
  uint64_t v34 = &v12[v10[11]];
  *(void *)uint64_t v34 = swift_getKeyPath();
  unsigned char v34[40] = 0;
  uint64_t v35 = (uint64_t *)&v12[v10[12]];
  *uint64_t v35 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = &v12[v10[13]];
  *(void *)uint64_t v36 = swift_getKeyPath();
  *((void *)v36 + 1) = 0;
  v36[16] = 0;
  sub_219024A0C((uint64_t)v9, (uint64_t)v12, &qword_267C047B0);
  sub_219024A0C((uint64_t)&v50, (uint64_t)&v12[v10[9]], &qword_267C047B8);
  uint64_t v37 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v12[v10[10]];
  *uint64_t v37 = sub_2191450B8;
  v37[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v33;
  uint64_t KeyPath = swift_getKeyPath();
  long long v50 = *a1;
  *(void *)&long long v48 = *((void *)a1 + 2);
  BYTE8(v48) = *((unsigned char *)a1 + 24);
  uint64_t v53 = *((void *)a1 + 4);
  char v54 = *((unsigned char *)a1 + 40);
  uint64_t v39 = (_OWORD *)swift_allocObject();
  long long v40 = a1[1];
  v39[1] = *a1;
  v39[2] = v40;
  *(_OWORD *)((char *)v39 + 41) = *(long long *)((char *)a1 + 25);
  sub_219145130((uint64_t)v12, (uint64_t)v14);
  uint64_t v41 = (uint64_t *)&v14[*(int *)(v24 + 36)];
  *uint64_t v41 = KeyPath;
  v41[1] = (uint64_t)sub_219145128;
  v41[2] = (uint64_t)v39;
  sub_2190F97C4((uint64_t)&v50);
  sub_219144F7C((uint64_t)&v48);
  sub_219144FAC((uint64_t)&v53);
  sub_218FFE158((uint64_t)v12, &qword_267C073D8);
  return sub_219024A0C((uint64_t)v14, a2, &qword_267C079B0);
}

uint64_t sub_219143084(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  sub_21907C43C((uint64_t)v7, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_219144EE4((uint64_t)v4, type metadata accessor for FlowAlertAuthority.Presented);
    memset(v14, 0, sizeof(v14));
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C05020);
    sub_219024A0C((uint64_t)&v4[*(int *)(v8 + 48)], (uint64_t)v14, &qword_26AD010B8);
    uint64_t v9 = sub_21915A7C8();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
  }
  sub_219024A0C((uint64_t)v14, (uint64_t)&v12, &qword_26AD010B8);
  sub_219144EE4((uint64_t)v7, type metadata accessor for FlowAlertAuthority.Presented);
  if (!v13) {
    return sub_218FFE158((uint64_t)&v12, &qword_26AD010B8);
  }
  sub_218FFE158(a1, &qword_26AD010B8);
  sub_219018288(&v12, (uint64_t)v14);
  return sub_219018288(v14, a1);
}

uint64_t sub_219143294@<X0>(uint64_t *a1@<X8>)
{
  sub_21915A798();
  if (v2)
  {
    sub_219030858();
    uint64_t result = sub_2191589E8();
    uint64_t v6 = v5 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v6 = 0;
    uint64_t v4 = 0;
  }
  *a1 = result;
  a1[1] = v2;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_219143300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C079E0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07950);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C079E8);
  MEMORY[0x270FA5388](v43);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v40 = (uint64_t)&v36 - v15;
  uint64_t v16 = *(void *)(a1 + 8);
  type metadata accessor for FlowAlertAuthority(0);
  sub_219140F28();
  sub_219157E88();
  swift_getKeyPath();
  sub_219157E98();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_219159138();
  swift_release();
  sub_218FFE158((uint64_t)v11, &qword_267C07950);
  uint64_t v17 = v46;
  uint64_t v38 = v45;
  char v18 = v47;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v42 = v16;
  sub_2191579E8();
  swift_release();
  swift_release();
  uint64_t v19 = (uint64_t)v8;
  uint64_t v20 = (uint64_t)v8;
  uint64_t v21 = v37;
  sub_21907C43C(v20, v37);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05018) + 48);
    uint64_t v23 = sub_21915A7F8();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v41, v22, v23);
    uint64_t v26 = sub_219157718();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v21, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v25, 0, 1, v23);
  }
  else
  {
    sub_219144EE4(v21, type metadata accessor for FlowAlertAuthority.Presented);
    uint64_t v27 = sub_21915A7F8();
    uint64_t v25 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v41, 1, 1, v27);
  }
  sub_219144EE4(v19, type metadata accessor for FlowAlertAuthority.Presented);
  uint64_t v50 = *(void *)(a1 + 16);
  char v51 = *(unsigned char *)(a1 + 24);
  uint64_t v48 = *(void *)(a1 + 32);
  char v49 = *(unsigned char *)(a1 + 40);
  char v28 = (_OWORD *)swift_allocObject();
  long long v29 = *(_OWORD *)(a1 + 16);
  v28[1] = *(_OWORD *)a1;
  void v28[2] = v29;
  *(_OWORD *)((char *)v28 + 41) = *(_OWORD *)(a1 + 25);
  *(void *)uint64_t v13 = v38;
  *((void *)v13 + 1) = v17;
  unsigned char v13[16] = v18;
  uint64_t v30 = (int *)v43;
  sub_219024A0C(v25, (uint64_t)&v13[*(int *)(v43 + 76)], &qword_267C079E0);
  uint64_t v31 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[v30[20]];
  *uint64_t v31 = sub_219144F74;
  v31[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v28;
  uint64_t v32 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[v30[21]];
  *uint64_t v32 = sub_219143AE0;
  v32[1] = 0;
  uint64_t v33 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[v30[22]];
  *uint64_t v33 = sub_219143AF8;
  v33[1] = 0;
  uint64_t v34 = v40;
  sub_219024A0C((uint64_t)v13, v40, &qword_267C079E8);
  sub_219024A0C(v34, v44, &qword_267C079E8);
  swift_retain();
  sub_219144F7C((uint64_t)&v50);
  return sub_219144FAC((uint64_t)&v48);
}

uint64_t sub_21914382C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21907C43C(a1, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C05018) + 48)];
    uint64_t v9 = sub_21915A7F8();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = sub_219157718();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
  }
  else
  {
    uint64_t result = sub_219144EE4((uint64_t)v6, type metadata accessor for FlowAlertAuthority.Presented);
  }
  *a2 = EnumCaseMultiPayload == 1;
  return result;
}

uint64_t sub_21914397C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_219159828();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21915A7D8();
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  sub_21903AB98(v8, v9);
  uint64_t v10 = sub_2190FA9B4(v8, v9);
  sub_21903AC64(v8, v9);
  uint64_t v11 = *(void *)(a1 + 32);
  LOBYTE(a1) = *(unsigned char *)(a1 + 40);
  sub_218FFE128(v11, a1);
  sub_2190FA7A8(v11, a1);
  sub_218FFDDBC(v11, a1);
  uint64_t v12 = sub_219143DE0(v10);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v12;
  return result;
}

uint64_t sub_219143AE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_219143B10(MEMORY[0x263F50D70], a1);
}

uint64_t sub_219143AF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_219143B10(MEMORY[0x263F50D78], a1);
}

uint64_t sub_219143B10@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4) {
    uint64_t v6 = result;
  }
  else {
    uint64_t v6 = 0;
  }
  *a2 = v6;
  a2[1] = v4;
  if (!v4) {
    uint64_t v5 = 0;
  }
  a2[2] = 0;
  a2[3] = v5;
  return result;
}

uint64_t sub_219143B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_219141300(a1, a2);
}

uint64_t sub_219143BA0(char *a1)
{
  return sub_21908DA60(*a1);
}

uint64_t sub_219143BC8(uint64_t a1)
{
  return sub_2191429AC(a1, *(long long **)(v1 + 16));
}

unint64_t sub_219143BD0()
{
  unint64_t result = qword_267C079A0;
  if (!qword_267C079A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07988);
    sub_219143C44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C079A0);
  }
  return result;
}

unint64_t sub_219143C44()
{
  unint64_t result = qword_267C079A8;
  if (!qword_267C079A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C079B0);
    sub_218FFDF90(&qword_267C079B8, &qword_267C073D8);
    sub_218FFDF90((unint64_t *)&qword_26AD01390, &qword_26AD01398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C079A8);
  }
  return result;
}

unint64_t sub_219143D08()
{
  unint64_t result = qword_267C079C0;
  if (!qword_267C079C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C079C0);
  }
  return result;
}

uint64_t sub_219143D74@<X0>(uint64_t a1@<X8>)
{
  sub_219030858();
  swift_bridgeObjectRetain();
  uint64_t result = sub_2191589E8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_219143DE0(uint64_t a1)
{
  uint64_t v2 = sub_2191595A8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v90 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21915AB08();
  uint64_t v92 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v91 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C079D0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v101 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  char v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_219158F28();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03C28);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v98 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v85 - v14;
  uint64_t v16 = sub_219159938();
  uint64_t v105 = *(void *)(v16 - 8);
  uint64_t v106 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v97 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v102 = (char *)&v85 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v85 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C079D8);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v104 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v93 = (uint64_t)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052F8);
  MEMORY[0x270FA5388](v27 - 8);
  long long v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_219157688();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v107 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE5SizedV9_resource9withScaleAA0cD8Resource_pSg12CoreGraphics7CGFloatV_tF_0();
  uint64_t v33 = v31;
  uint64_t v34 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  if (!v113)
  {
    sub_218FFE158((uint64_t)v112, &qword_267C04288);
    (*v34)(v29, 1, 1, v30);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C06188);
  int v35 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, v35 ^ 1u, 1, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v30) == 1)
  {
LABEL_9:
    uint64_t v40 = &qword_267C052F8;
    uint64_t v41 = (uint64_t)v29;
LABEL_36:
    sub_218FFE158(v41, v40);
    return 0;
  }
  uint64_t v87 = v9;
  uint64_t v85 = v4;
  uint64_t v88 = v33;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v89 = v30;
  v36(v107, v29, v30);
  uint64_t v37 = *(uint64_t **)(a1 + 16);
  if (v37)
  {
    uint64_t v38 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v39 = 0;
    while (1)
    {
      sub_219030940(v38, (uint64_t)v112);
      sub_219030940((uint64_t)v112, (uint64_t)v111);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C03BB8);
      LOBYTE(v110) = swift_dynamicCast() ^ 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
      swift_bridgeObjectRelease();
      if (v110 != 1) {
        break;
      }
      uint64_t v39 = (uint64_t *)((char *)v39 + 1);
      v38 += 40;
      if (v37 == v39) {
        goto LABEL_13;
      }
    }
    if (v37 == v39)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    if (v39 < v37)
    {
      sub_219030940(v38, (uint64_t)v112);
      sub_219030940((uint64_t)v112, (uint64_t)v111);
      LOBYTE(v110) = swift_dynamicCast() ^ 1;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
      if ((v110 & 1) == 0) {
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_49;
    }
    __break(1u);
    goto LABEL_47;
  }
LABEL_14:
  if (qword_267C03528 != -1) {
    swift_once();
  }
  uint64_t v86 = sub_219159968();
  __swift_project_value_buffer(v86, (uint64_t)qword_267C04D68);
  sub_219159958();
  uint64_t v43 = v105;
  uint64_t v44 = v106;
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
  if (v45(v15, 1, v106) == 1)
  {
    sub_218FFE158((uint64_t)v15, &qword_267C03C28);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v25, 1, 1, v104);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v22, v15, v44);
    uint64_t v46 = (uint64_t)v102;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v102, v22, v44);
    sub_21906D874(v46, (uint64_t)v25);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v44);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v103 + 48))(v25, 1, v104) != 1)
    {
      uint64_t v51 = v93;
      sub_219144E7C((uint64_t)v25, v93, (uint64_t (*)(void))type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol);
      sub_21906E124(v51);
      uint64_t v52 = v95;
      uint64_t v53 = v94;
      uint64_t v54 = v96;
      (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F1B4B8], v96);
      uint64_t v55 = sub_219158F98();
      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
      uint64_t v56 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol;
      uint64_t v57 = v51;
      goto LABEL_45;
    }
  }
  char v47 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v45;
  sub_218FFE158((uint64_t)v25, &qword_267C079D8);
  if (!v37)
  {
LABEL_29:
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C03C20);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_21915D5D0;
    *(void *)(v58 + 32) = objc_msgSend(self, sel_mainBundle);
    v112[0] = v58;
    sub_21915AE98();
    uint64_t v59 = v112[0];
    unint64_t v60 = v87;
LABEL_30:
    uint64_t v61 = (uint64_t)v98;
    if (qword_267C03520 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v86, (uint64_t)qword_267C03C08);
    sub_219159958();
    if (v47(v61, 1, v44) == 1)
    {
      sub_218FFE158(v61, &qword_267C03C28);
      uint64_t v62 = v101;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v101, 1, 1, v100);
      uint64_t v63 = v89;
      uint64_t v64 = v88;
LABEL_35:
      (*(void (**)(char *, uint64_t))(v64 + 8))(v107, v63);
      swift_bridgeObjectRelease();
      uint64_t v40 = &qword_267C079D0;
      uint64_t v41 = v62;
      goto LABEL_36;
    }
    uint64_t v65 = v105;
    unsigned int v66 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v97, v61, v44);
    uint64_t v67 = (uint64_t)v102;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v102, v66, v44);
    uint64_t v62 = v101;
    sub_2190196E8(v67, v101);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v44);
    int v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v62, 1, v100);
    uint64_t v63 = v89;
    uint64_t v64 = v88;
    if (v68 == 1) {
      goto LABEL_35;
    }
    sub_219144E7C(v62, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource);
    v112[0] = v59;
    sub_21901A168(v60);
    swift_bridgeObjectRelease();
    uint64_t v82 = v95;
    uint64_t v83 = v94;
    uint64_t v84 = v96;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F1B4B8], v96);
    uint64_t v55 = sub_219158F98();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
    uint64_t v56 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource;
    uint64_t v57 = (uint64_t)v60;
LABEL_45:
    sub_219144EE4(v57, (uint64_t (*)(void))v56);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v107, v89);
    return v55;
  }
  uint64_t v48 = a1 + 32;
  swift_bridgeObjectRetain();
  char v49 = 0;
  uint64_t v25 = &qword_267C03BB8;
  while (1)
  {
    sub_219030940(v48, (uint64_t)v112);
    sub_219030940((uint64_t)v112, (uint64_t)v111);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C03BB8);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v110 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
    swift_bridgeObjectRelease();
    uint64_t v50 = v110;
    swift_bridgeObjectRelease();
    if (v50) {
      break;
    }
    char v49 = (uint64_t *)((char *)v49 + 1);
    v48 += 40;
    if (v37 == v49) {
      goto LABEL_28;
    }
  }
  if (v37 == v49)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v44 = v106;
    goto LABEL_29;
  }
  if (v49 >= v37)
  {
LABEL_47:
    __break(1u);
    swift_once();
    uint64_t v69 = v85;
    uint64_t v70 = __swift_project_value_buffer(v85, (uint64_t)qword_267C0EDC8);
    uint64_t v71 = v92;
    uint64_t v72 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v70, v69);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    uint64_t v73 = *(void *)(sub_2191595F8() - 8);
    unint64_t v74 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_21915C970;
    uint64_t v106 = v75 + v74;
    sub_219159598();
    sub_219159588();
    uint64_t v77 = *v37;
    uint64_t v76 = v37[1];
    uint64_t v113 = MEMORY[0x263F8D310];
    v112[0] = v77;
    v112[1] = v76;
    swift_bridgeObjectRetain();
    sub_219159548();
    sub_218FFE158((uint64_t)v112, qword_26AD03AB8);
    sub_219159588();
    swift_getErrorValue();
    uint64_t v78 = v108;
    uint64_t v79 = v109;
    uint64_t v113 = v109;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v112);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(boxed_opaque_existential_1Tm, v78, v79);
    sub_219159558();
    sub_218FFE158((uint64_t)v112, qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    sub_21915A6C8();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v69);
    sub_219144EE4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v107, v89);
    return 0;
  }
  sub_219030940(v48, (uint64_t)v112);
  sub_219030940((uint64_t)v112, (uint64_t)v111);
  char v81 = swift_dynamicCast();
  unint64_t v60 = v87;
  uint64_t v44 = v106;
  if ((v81 & 1) == 0) {
    uint64_t v110 = 0;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
  uint64_t v59 = v110;
  if (v110)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_219144E7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_219144EE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_219144F48(char *a1)
{
  return sub_21908DBB4(*a1);
}

uint64_t sub_219144F74@<X0>(uint64_t *a1@<X8>)
{
  return sub_21914397C(v1 + 16, a1);
}

uint64_t sub_219144F7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_219144FAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_219144FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_219142B28((long long *)(v1 + 16), a1);
}

uint64_t sub_219144FE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219145020(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07A00);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_219145080()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2191450B8@<X0>(uint64_t a1@<X8>)
{
  return sub_219143D74(a1);
}

uint64_t objectdestroyTm_8()
{
  swift_release();
  sub_21903AC64(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_218FFDDBC(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_219145128(uint64_t a1)
{
  return sub_219143084(a1);
}

uint64_t sub_219145130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C073D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_219145198()
{
  unint64_t result = qword_267C07A08;
  if (!qword_267C07A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07A08);
  }
  return result;
}

unint64_t sub_2191451F0()
{
  unint64_t result = qword_267C07A10;
  if (!qword_267C07A10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07978);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07968);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07960);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07980);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07988);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07990);
    sub_21915A7C8();
    sub_218FFDF90(&qword_267C07998, &qword_267C07980);
    sub_219030858();
    sub_219143BD0();
    sub_219143D08();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_218FFDF90(&qword_267C07A18, &qword_267C079C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C07A10);
  }
  return result;
}

uint64_t MediaArtwork.PrefetchConfiguration.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_2190925D0(*v3, a1, a2, a3);
}

uint64_t MediaArtwork.Sized.format(_:withQuality:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_219159828();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21903F08C(v1, a1);
  sub_2191597D8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(a1, v6, v3);
}

uint64_t type metadata accessor for MediaArtwork.Sized()
{
  uint64_t result = qword_267C07A20;
  if (!qword_267C07A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MediaArtwork.resize(_:croppedTo:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_219159828();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v15 - v11, v2, v5, v10);
  id v13 = a1;
  sub_2191597E8();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
}

uint64_t dispatch thunk of ModelWithMediaArtwork.prefetchableMediaArtwork(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for MediaArtwork.PrefetchConfiguration()
{
  return &type metadata for MediaArtwork.PrefetchConfiguration;
}

uint64_t _s5SizedVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s5SizedVwxx(uint64_t a1)
{
  uint64_t v2 = sub_219159828();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s5SizedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_219145920);
}

uint64_t sub_219145920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s5SizedVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2191459A0);
}

uint64_t sub_2191459A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_219159828();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_219145A10()
{
  uint64_t result = sub_219159828();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MediaArtworkProtocol.cache<A>(_:allowStandaloneFetches:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v15 = *(void *)(a3 - 8);
  double v16 = MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v15 + 16))(v18, v7, v16);
  v21[0] = a3;
  v21[1] = a4;
  void v21[2] = a5;
  v21[3] = a6;
  uint64_t v19 = _s22_CacheProtocolModifierVMa();
  *(void *)(a7 + *(int *)(v19 + 52)) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a7, v18, a3);
  *(unsigned char *)(a7 + *(int *)(v19 + 56)) = a2;
  return swift_unknownObjectRetain();
}

uint64_t sub_219145BD0()
{
  return swift_getWitnessTable();
}

uint64_t _s22_CacheProtocolModifierVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_219145C34()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_219145CD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_219145DDC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_unknownObjectRelease();
}

uint64_t sub_219145E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_219145ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_219145F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_219145FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  swift_unknownObjectRelease();
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_219146078(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2191461E0);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2191461F4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = a2 - 1;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              uint64_t v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x219146404);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t sub_21914642C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_21914644C()
{
  return swift_getWitnessTable();
}

uint64_t sub_219146468()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_219146488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))() & 1;
}

uint64_t sub_2191464C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(a2 + 32) + 80))(a1, *(void *)(a2 + 16));
}

uint64_t sub_2191464E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for MediaArtwork.ProtocolRequest();
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v105 = v8;
  uint64_t v102 = *(void *)(v104 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v113 = (char *)v94 - v9;
  uint64_t v106 = v3;
  uint64_t v10 = *(void *)(v3 - 8);
  v3 -= 8;
  uint64_t v103 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v100 = v12;
  uint64_t v110 = (char *)v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_219157848();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v111 = v13;
  uint64_t v112 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int v18 = (char *)v94 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v98 = (char *)v94 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v94 - v22;
  uint64_t v24 = *(int *)(v3 + 60);
  uint64_t v101 = v2;
  uint64_t v99 = v24;
  uint64_t v25 = *(void *)(v3 + 32);
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v3 + 48);
  uint64_t v107 = v6;
  uint64_t v108 = v5;
  uint64_t v28 = v26;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = a1;
  uint64_t v114 = v25;
  uint64_t v115 = v27;
  uint64_t v109 = AssociatedTypeWitness;
  unint64_t v31 = sub_2190DB210(a1, v25, v28, AssociatedTypeWitness, v27, AssociatedConformanceWitness, 0.01);
  if (!(v31 >> 62))
  {
    uint64_t v96 = (char *)v31;
    if (qword_267C03560 != -1) {
      swift_once();
    }
    v94[1] = v28;
    uint64_t v97 = AssociatedConformanceWitness;
    uint64_t v43 = sub_219157878();
    __swift_project_value_buffer(v43, (uint64_t)qword_267C0EDE0);
    sub_219157838();
    uint64_t v44 = sub_219157868();
    os_signpost_type_t v45 = sub_21915B2B8();
    if (sub_21915B368())
    {
      uint64_t v47 = v111;
      uint64_t v46 = v112;
      uint64_t v48 = v98;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v98, v18, v111);
      char v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v49 = 0;
      os_signpost_id_t v50 = sub_219157828();
      _os_signpost_emit_with_name_impl(&dword_218FF7000, v44, v45, v50, "Image.CacheFoundClosestMatch", "", v49, 2u);
      MEMORY[0x21D482B50](v49, -1, -1);

      uint64_t v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v51(v18, v47);
      v51(v48, v47);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v112 + 8))(v18, v111);
    }
    uint64_t v112 = *(void *)(v101 + v99);
    uint64_t v62 = v106;
    LODWORD(v111) = *(unsigned __int8 *)(v101 + *(int *)(v106 + 56));
    uint64_t v63 = v103;
    (*(void (**)(char *))(v103 + 16))(v110);
    uint64_t v64 = v104;
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
    uint64_t v95 = v30;
    uint64_t v66 = v105;
    v65(v113, v30, v105);
    unint64_t v67 = (*(unsigned __int8 *)(v63 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    unint64_t v68 = (v100 + v67 + *(unsigned __int8 *)(v64 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    uint64_t v69 = (char *)swift_allocObject();
    uint64_t v70 = v108;
    uint64_t v71 = v114;
    *((void *)v69 + 2) = v107;
    *((void *)v69 + 3) = v71;
    uint64_t v72 = v115;
    *((void *)v69 + 4) = v70;
    *((void *)v69 + 5) = v72;
    *((void *)v69 + 6) = v96;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v69[v67], v110, v62);
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v69[v68], v113, v66);
    uint64_t v73 = sub_21915A528();
    uint64_t v74 = swift_getAssociatedTypeWitness();
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v76 = swift_getAssociatedConformanceWitness();
    uint64_t v116 = v73;
    uint64_t v117 = v74;
    uint64_t v118 = WitnessTable;
    uint64_t v119 = v76;
    uint64_t v77 = sub_21915A2E8();
    uint64_t v78 = swift_getWitnessTable();
    uint64_t v32 = sub_2190DBA24(v95, (v111 & 1) == 0, (uint64_t)sub_2191473C4, (uint64_t)v69, v114, v77, v109, v115, v78, v97);
    swift_release();
    goto LABEL_20;
  }
  if (v31 >> 62 != 1)
  {
    if (qword_267C03560 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_219157878();
    __swift_project_value_buffer(v52, (uint64_t)qword_267C0EDE0);
    sub_219157838();
    uint64_t v53 = sub_219157868();
    os_signpost_type_t v54 = sub_21915B2B8();
    char v55 = sub_21915B368();
    uint64_t v97 = AssociatedConformanceWitness;
    if (v55)
    {
      uint64_t v57 = v111;
      uint64_t v56 = v112;
      uint64_t v58 = v98;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v98, v23, v111);
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      os_signpost_id_t v60 = sub_219157828();
      _os_signpost_emit_with_name_impl(&dword_218FF7000, v53, v54, v60, "Image.CacheMiss", "", v59, 2u);
      MEMORY[0x21D482B50](v59, -1, -1);

      uint64_t v61 = *(void (**)(char *, uint64_t))(v56 + 8);
      v61(v23, v57);
      v61(v58, v57);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v112 + 8))(v23, v111);
    }
    uint64_t v112 = *(void *)(v101 + v99);
    uint64_t v79 = v106;
    LODWORD(v111) = *(unsigned __int8 *)(v101 + *(int *)(v106 + 56));
    uint64_t v80 = v103;
    char v81 = v110;
    (*(void (**)(char *))(v103 + 16))(v110);
    uint64_t v82 = v104;
    uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
    uint64_t v95 = v30;
    uint64_t v84 = v105;
    v83(v113, v30, v105);
    unint64_t v85 = (*(unsigned __int8 *)(v80 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    unint64_t v86 = (v100 + v85 + *(unsigned __int8 *)(v82 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    uint64_t v87 = (char *)swift_allocObject();
    uint64_t v88 = v108;
    uint64_t v89 = v114;
    *((void *)v87 + 2) = v107;
    *((void *)v87 + 3) = v89;
    uint64_t v90 = v115;
    *((void *)v87 + 4) = v88;
    *((void *)v87 + 5) = v90;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v87[v85], v81, v79);
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v87[v86], v113, v84);
    uint64_t v91 = swift_getAssociatedTypeWitness();
    uint64_t v92 = swift_getAssociatedConformanceWitness();
    uint64_t v32 = sub_2190DBA24(v95, (v111 & 1) == 0, (uint64_t)sub_2191476E0, (uint64_t)v87, v114, v91, v109, v115, v92, v97);
LABEL_20:
    swift_release();
    return v32;
  }
  uint64_t v32 = v31 & 0x3FFFFFFFFFFFFFFFLL;
  if (qword_267C03560 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_219157878();
  __swift_project_value_buffer(v33, (uint64_t)qword_267C0EDE0);
  uint64_t v34 = v96;
  sub_219157838();
  int v35 = sub_219157868();
  os_signpost_type_t v36 = sub_21915B2B8();
  if (sub_21915B368())
  {
    uint64_t v38 = v111;
    uint64_t v37 = v112;
    uint64_t v39 = v98;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v98, v34, v111);
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    os_signpost_id_t v41 = sub_219157828();
    _os_signpost_emit_with_name_impl(&dword_218FF7000, v35, v36, v41, "Image.CacheFoundExactMatch", "", v40, 2u);
    MEMORY[0x21D482B50](v40, -1, -1);

    uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v34, v38);
    v42(v39, v38);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v112 + 8))(v34, v111);
  }
  return v32;
}

uint64_t sub_219146F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  double v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v14 = (char *)v16 - v13;
  v16[1] = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(a6 + 88))(a3, a4, a6, v12);
  sub_21915A528();
  swift_getWitnessTable();
  swift_getAssociatedConformanceWitness();
  sub_21915A998();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

uint64_t sub_219147164(uint64_t a1, uint64_t a2)
{
  return sub_219146488(*(void *)(a1 + 16), a2, *(void *)(a1 + 32));
}

uint64_t sub_219147178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2191464E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2191471A0()
{
  return sub_21915AD08() & 1;
}

uint64_t sub_2191471CC()
{
  return sub_2191471A0();
}

uint64_t sub_2191471D8()
{
  long long v8 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(_s22_CacheProtocolModifierVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = (int *)(type metadata accessor for MediaArtwork.ProtocolRequest() - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, void))(*(void *)(v8 - 8) + 8))(v0 + v2, v8);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v6 + v5[9], AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2191473C4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void *)(_s22_CacheProtocolModifierVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(type metadata accessor for MediaArtwork.ProtocolRequest() - 8);
  uint64_t v8 = v0[6];
  uint64_t v9 = (uint64_t)v0 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_219146F94(v8, (uint64_t)v0 + v5, v9, v1, v2, v3);
}

uint64_t sub_2191474FC()
{
  long long v8 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(_s22_CacheProtocolModifierVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v5 = (int *)(type metadata accessor for MediaArtwork.ProtocolRequest() - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(*(void *)v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  (*(void (**)(unint64_t, void))(*(void *)(v8 - 8) + 8))(v0 + v2, v8);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v6 + v5[9], AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2191476E0()
{
  long long v5 = *(_OWORD *)(v0 + 16);
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v1 = *(void *)(_s22_CacheProtocolModifierVMa() - 8);
  unint64_t v2 = ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
     + *(void *)(v1 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(type metadata accessor for MediaArtwork.ProtocolRequest() - 8);
  return (*(uint64_t (**)(unint64_t, void, void))(v6 + 88))(v0 + ((v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v5, v6);
}

void *sub_219147818(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_219159968();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_219147900(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_219159968();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_219147978(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_219159968();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_219147A10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_219159968();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_219147AA4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_219159968();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_219147B20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_219159968();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_219147BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_219147BC0);
}

uint64_t sub_219147BC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_219159968();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_219147C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219147C84);
}

void *sub_219147C84(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_219159968();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s22_OneShotActionProtocolVMa()
{
  uint64_t result = qword_267C07AB0;
  if (!qword_267C07AB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_219147D78()
{
  uint64_t result = sub_219159968();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_219147E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_219147E38, 0, 0);
}

uint64_t sub_219147E38()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(**(void **)(v0 + 24) + ***(int ***)(v0 + 24));
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_219147F0C;
  uint64_t v2 = *(void *)(v0 + 32);
  return v4(v2);
}

uint64_t sub_219147F0C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_219148058, 0, 0);
  }
}

uint64_t sub_219148058()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21914807C()
{
  return sub_219159958();
}

uint64_t sub_2191480A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C052B0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21907EF80(v2, (uint64_t)v11);
  sub_2190886DC(a1, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v13 = (v9 + v12 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  sub_219148418((uint64_t)v11, v14 + v12);
  sub_2190888EC((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  return sub_2191594B8();
}

uint64_t sub_219148260()
{
  uint64_t v1 = (int *)(_s22_OneShotActionProtocolVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = v2 + *(void *)(*(void *)v1 + 64);
  uint64_t v4 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052B0) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  swift_release();
  unint64_t v6 = v0 + v2 + v1[7];
  uint64_t v7 = sub_219159968();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  unint64_t v8 = v0 + v5 + v4[9];
  uint64_t v9 = sub_219159938();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_219148418(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s22_OneShotActionProtocolVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21914847C(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s22_OneShotActionProtocolVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C052B0) - 8);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  void v10[3] = v8;
  void v10[4] = v9;
  v10[1] = sub_218FF9AE0;
  _OWORD v10[2] = a1;
  return MEMORY[0x270FA2498](sub_219147E38, 0, 0);
}

uint64_t sub_2191485CC()
{
  uint64_t result = sub_219157E68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_219148668()
{
  uint64_t v0 = sub_219157E68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v14[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_219159C18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159528();
  sub_21915AA68();
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F50A10], v4);
  sub_21915A698();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  uint64_t v8 = v13;
  swift_bridgeObjectRelease();
  uint64_t v9 = v8 + qword_267C0EDF8;
  swift_beginAccess();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v10(v3, v9, v0);
  char v11 = sub_219157E48();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v11 & 1) == 0)
  {
    v10(v3, v9, v0);
    sub_219157DD8();
    return sub_2191495BC((uint64_t)v3);
  }
  return result;
}

uint64_t sub_219148960()
{
  uint64_t v15 = sub_219157E68();
  uint64_t v0 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v14 - v4;
  uint64_t v6 = sub_219159C18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159528();
  sub_21915AA68();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F50A10], v6);
  sub_21915A698();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_bridgeObjectRelease();
  uint64_t v10 = v14[1] + qword_267C0EDF8;
  swift_beginAccess();
  char v11 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 16);
  uint64_t v12 = v15;
  v11(v5, v10, v15);
  sub_219157E28();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v5, v12);
  v11(v2, v10, v12);
  sub_219157DD8();
  return sub_2191495BC((uint64_t)v2);
}

uint64_t sub_219148C78(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = sub_219157E68();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *(void *)(v3[10] - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v34 - v7;
  uint64_t v38 = v1;
  uint64_t v8 = v3[11];
  uint64_t v9 = v3[12];
  uint64_t v34 = v10;
  uint64_t v35 = v9;
  uint64_t v11 = v10;
  uint64_t v12 = v8;
  uint64_t v13 = type metadata accessor for FlowStackAuthority.PathComponent();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v36 = (uint64_t)&v34 - v15;
  uint64_t v16 = sub_219159C18();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2191595A8();
  MEMORY[0x270FA5388](v20 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  uint64_t v23 = v12;
  uint64_t v24 = v35;
  uint64_t v25 = sub_21914A37C(a1, v21, v23, v35);
  uint64_t v46 = MEMORY[0x263F8D310];
  v45[0] = v25;
  v45[1] = v26;
  sub_219159548();
  sub_218FFE158((uint64_t)v45, qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_21915AA68();
  __swift_project_boxed_opaque_existential_1(v45, v46);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F50A10], v16);
  sub_21915A698();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t)v37;
  uint64_t v28 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, a1, v34);
  uint64_t v29 = v36;
  sub_2191496EC(v27, v28, v22, v24, v36);
  uint64_t v30 = (char *)v38 + qword_267C0EDF8;
  swift_beginAccess();
  uint64_t v31 = (uint64_t)v42;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v42, v30, v44);
  uint64_t v32 = v40;
  swift_getWitnessTable();
  sub_219157E38();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v29, v32);
  return sub_2191495BC(v31);
}

uint64_t sub_2191491A0()
{
  uint64_t v1 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - v5;
  if (*(void *)(v0 + 24))
  {
    uint64_t v7 = *(void *)(v0 + 24);
  }
  else
  {
    type metadata accessor for FlowAlertAuthority(0);
    uint64_t v7 = swift_allocObject();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_21907C43C((uint64_t)v6, (uint64_t)v3);
    sub_2191579A8();
    sub_21907C4A0((uint64_t)v6);
    swift_endAccess();
    *(void *)(v0 + 24) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_2191492E4()
{
  uint64_t v0 = swift_allocObject();
  sub_2191499C8();
  return v0;
}

uint64_t sub_21914931C()
{
  if (sub_2191493F4())
  {
    uint64_t v0 = sub_2190D8C0C();
    swift_release();
    return v0;
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_21914937C()
{
  uint64_t v0 = sub_21914964C();
  if (!sub_2190D8AF0()) {
    return v0;
  }
  do
  {
    sub_2190D8C0C();
    uint64_t v1 = sub_21914964C();
    swift_release();
    swift_release();
  }
  while (sub_2190D8AF0());
  return v1;
}

uint64_t sub_2191493F4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_retain_n();
    BOOL v2 = sub_2190D8AF0();
    swift_release();
    if (v2)
    {
      uint64_t v3 = *(void *)(sub_2190D8C0C() + 16);
      swift_retain();
      swift_release();
      if (v3)
      {
        uint64_t v4 = v1;
        while (1)
        {
          uint64_t v1 = v3;
          if (!sub_2190D8AF0()) {
            break;
          }
          swift_release();
          uint64_t v3 = *(void *)(sub_2190D8C0C() + 16);
          swift_retain();
          swift_release();
          uint64_t v4 = v1;
          if (!v3) {
            return v1;
          }
        }
        swift_release();
        return v4;
      }
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_2191494C0()
{
  if (sub_2191493F4())
  {
    sub_2190D8C0C();
    uint64_t v0 = sub_2191491A0();
    swift_release();
    swift_release();
    return v0;
  }
  else
  {
    return sub_2191491A0();
  }
}

uint64_t sub_219149538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_267C0EDF8;
  swift_beginAccess();
  uint64_t v4 = sub_219157E68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2191495BC(uint64_t a1)
{
  sub_219149A9C();
  uint64_t v3 = v1 + qword_267C0EDF8;
  swift_beginAccess();
  uint64_t v4 = sub_219157E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_21914964C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for FlowStackSheetAuthority();
    uint64_t v1 = sub_2190D8CE4();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2191496EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_21915B498();
  uint64_t v10 = type metadata accessor for FlowStackAuthority.PathComponent();
  sub_219159BF8();
  uint64_t v11 = sub_21914A37C(a1, a2, a3, a4);
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  uint64_t v15 = (uint64_t *)(a5 + *(int *)(v10 + 48));
  *uint64_t v15 = v11;
  v15[1] = v13;
  return result;
}

uint64_t sub_2191497BC()
{
  return sub_21915AD08() & 1;
}

uint64_t sub_219149854()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_21915AC88();
}

uint64_t sub_2191498EC()
{
  return sub_21915B7D8();
}

uint64_t sub_21914993C()
{
  return sub_21915B7D8();
}

uint64_t sub_219149980(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2191499B8()
{
  return sub_2191497BC();
}

uint64_t sub_2191499C8()
{
  uint64_t v1 = sub_219157E68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  sub_219157E58();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0 + qword_267C0EDF8, v4, v1);
  return v0;
}

uint64_t sub_219149A9C()
{
  uint64_t v1 = sub_219157E68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + qword_267C0EDF8;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  sub_21914A5B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_getWitnessTable();
  sub_219157988();
  sub_219157998();
  return swift_release();
}

uint64_t sub_219149C18()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_267C0EDF8;
  uint64_t v2 = sub_219157E68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_219149C8C()
{
  sub_219149C18();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FlowStackAuthority()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219149CFC()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  sub_219157E18();
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C06768);
    sub_2190F370C();
    sub_21915ACC8();
    swift_bridgeObjectRelease();
    sub_21915AD88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21915AD88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 91;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 23899;
  }
}

uint64_t sub_219149E20(uint64_t a1, void **a2)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_219157DF8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07B68);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = v4 + 16;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v43(v10, a1, v3, v12);
  sub_21907C508();
  sub_21915B148();
  *(void *)&v10[*(int *)(v8 + 44)] = *(void *)&v51[0];
  sub_21914A8F8((uint64_t)v10, (uint64_t)v14);
  uint64_t v16 = &v14[*(int *)(v8 + 44)];
  uint64_t v17 = *(void *)v16;
  sub_21915B178();
  if (v17 != v48[0])
  {
    uint64_t v19 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v42 = v6;
    uint64_t v41 = v19;
    do
    {
      uint64_t v22 = (void (*)(void *, void))sub_21915B1F8();
      sub_219030940(v23, (uint64_t)v51);
      v22(v48, 0);
      ((void (*)(char *, char *, uint64_t))v43)(v6, v14, v3);
      sub_21915B188();
      (*v19)(v6, v3);
      sub_219018288(v51, (uint64_t)v47);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C05038);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C07B70);
      if (swift_dynamicCast())
      {
        uint64_t v24 = v15;
        sub_219018288(v45, (uint64_t)v48);
        uint64_t v25 = v49;
        uint64_t v26 = v50;
        __swift_project_boxed_opaque_existential_1(v48, v49);
        uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
        uint64_t v29 = v28;
        uint64_t v30 = v44;
        uint64_t v31 = *v44;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v30 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v31 = sub_219012F00(0, v31[2] + 1, 1, v31);
          NSObject *v44 = v31;
        }
        unint64_t v34 = v31[2];
        unint64_t v33 = v31[3];
        if (v34 >= v33 >> 1)
        {
          uint64_t v31 = sub_219012F00((void *)(v33 > 1), v34 + 1, 1, v31);
          NSObject *v44 = v31;
        }
        void v31[2] = v34 + 1;
        uint64_t v35 = &v31[2 * v34];
        v35[4] = v27;
        v35[5] = v29;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
        uint64_t v15 = v24;
        uint64_t v6 = v42;
        uint64_t v19 = v41;
      }
      else
      {
        uint64_t v46 = 0;
        memset(v45, 0, sizeof(v45));
        sub_218FFE158((uint64_t)v45, &qword_267C07B78);
        uint64_t v36 = v44;
        uint64_t v37 = *v44;
        char v38 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v36 = v37;
        if ((v38 & 1) == 0)
        {
          uint64_t v37 = sub_219012F00(0, v37[2] + 1, 1, v37);
          NSObject *v44 = v37;
        }
        unint64_t v40 = v37[2];
        unint64_t v39 = v37[3];
        if (v40 >= v39 >> 1)
        {
          uint64_t v37 = sub_219012F00((void *)(v39 > 1), v40 + 1, 1, v37);
          NSObject *v44 = v37;
        }
        char v37[2] = v40 + 1;
        uint64_t v20 = &v37[2 * v40];
        v20[4] = 0x296D65746928;
        v20[5] = 0xE600000000000000;
      }
      uint64_t v21 = *(void *)v16;
      sub_21915B178();
    }
    while (v21 != v48[0]);
  }
  return sub_218FFE158((uint64_t)v14, &qword_267C07B68);
}

uint64_t sub_21914A2AC()
{
  uint64_t v0 = sub_21915A0A8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07B80);
  __swift_allocate_value_buffer(v1, qword_267C07AD0);
  __swift_project_value_buffer(v1, (uint64_t)qword_267C07AD0);
  sub_21915A098();
  return sub_2191598F8();
}

uint64_t sub_21914A37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a2);
  sub_219159DB8();
  sub_219159DA8();
  if (qword_267C03580 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07B80);
  __swift_project_value_buffer(v7, (uint64_t)qword_267C07AD0);
  sub_219159728();
  swift_release();
  if (LOBYTE(v10[0]) != 2 && (v10[0] & 1) != 0)
  {
    sub_21914ABAC((uint64_t)v13, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(qword_267C07B88);
    uint64_t v8 = sub_21915AD68();
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_21915AD88();
    __swift_project_boxed_opaque_existential_1(v13, v14);
    void v10[3] = swift_getAssociatedTypeWitness();
    void v10[4] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1Tm(v10);
    sub_21915B498();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C05038);
    sub_21915B588();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    sub_21915AD88();
    uint64_t v8 = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v8;
}

uint64_t sub_21914A5B0()
{
  uint64_t v0 = sub_219159C18();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2191595A8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_219149CFC();
  unint64_t v7 = v6;
  uint64_t v8 = sub_219149CFC();
  unint64_t v10 = v9;
  uint64_t v11 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11) {
    goto LABEL_8;
  }
  uint64_t v12 = v8;
  uint64_t v13 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v13 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
    uint64_t v14 = *(unsigned __int8 *)(*(void *)(sub_2191595F8() - 8) + 80);
    uint64_t v21 = v0;
    uint64_t v15 = (v14 + 32) & ~v14;
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_21915C970;
    v20[1] = v16 + v15;
    sub_219159598();
    sub_219159588();
    uint64_t v17 = MEMORY[0x263F8D310];
    uint64_t v24 = MEMORY[0x263F8D310];
    uint64_t v22 = v5;
    unint64_t v23 = v7;
    sub_219159578();
    sub_218FFE158((uint64_t)&v22, qword_26AD03AB8);
    sub_219159588();
    uint64_t v24 = v17;
    uint64_t v22 = v12;
    unint64_t v23 = v10;
    sub_219159578();
    sub_218FFE158((uint64_t)&v22, qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    sub_21915AA68();
    __swift_project_boxed_opaque_existential_1(&v22, v24);
    uint64_t v18 = v21;
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F50A10], v21);
    sub_21915A698();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21914A8F0(uint64_t a1)
{
  return sub_219149E20(a1, *(void ***)(v1 + 16));
}

uint64_t sub_21914A8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21914A960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2191595A8();
  MEMORY[0x270FA5388](v4 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  sub_2191595F8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  v8[3] = MEMORY[0x263F8D310];
  v8[0] = a1;
  v8[1] = a2;
  swift_bridgeObjectRetain();
  sub_219159548();
  sub_218FFE158((uint64_t)v8, qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  if ((sub_219159538() & 1) == 0)
  {
    sub_219159DB8();
    sub_219159DA8();
    if (qword_267C03580 != -1) {
      swift_once();
    }
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C07B80);
    __swift_project_value_buffer(v5, (uint64_t)qword_267C07AD0);
    sub_219159728();
    swift_release();
  }
  uint64_t v6 = sub_2191595D8();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for FlowStackAuthority.PathComponent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21914ABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21914AC10()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21914AD14(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (v6 + v9) & ~v9;
  uint64_t v12 = *(void *)(v8 + 64) + 7;
  unint64_t v13 = ((v12 + v11) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v14 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v14 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v18 = v7;
    uint64_t v19 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v20 = ((unint64_t)a2 + v10) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v19, v20, v18);
    uint64_t v21 = (void *)((v12 + (((unint64_t)a1 + v10) & v19)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_21914AF08(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))((v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80), v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21914B010(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  unsigned int v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21914B140(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  uint64_t v13 = *(void *)(v9 + 40) + 7;
  unsigned int v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21914B27C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21914B3A0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  uint64_t v13 = *(void *)(v9 + 24) + 7;
  unsigned int v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21914B4D4(int *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(v5 + 64) + v10;
  uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
  if (v11 < a2)
  {
    unint64_t v14 = ((v13 + (v12 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v11 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v14);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x21914B78CLL);
      case 4:
        int v19 = *(int *)((char *)a1 + v14);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v11)
  {
    unint64_t v23 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48);
    return v23(a1, v6, AssociatedTypeWitness);
  }
  else
  {
    unint64_t v24 = ((unint64_t)a1 + v12) & ~v10;
    if (v9 == v11)
    {
      uint64_t v25 = *(uint64_t (**)(unint64_t))(v8 + 48);
      return v25(v24);
    }
    else
    {
      unint64_t v26 = *(void *)(((v13 + v24) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v26 >= 0xFFFFFFFF) {
        LODWORD(v26) = -1;
      }
      return (v26 + 1);
    }
  }
}

void sub_21914B7A0(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(v7 + 64) + v11;
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      uint64_t v20 = ~v11;
      switch(v18)
      {
        case 1:
          *((unsigned char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_48;
        case 4:
          *(_DWORD *)((char *)a1 + v15) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v8 == v12)
            {
              unint64_t v23 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v7 + 56);
              v23(a1, a2, v8, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v24 = ((unint64_t)a1 + v13) & v20;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t, uint64_t))(v9 + 56);
                v25(v24, a2);
              }
              else
              {
                unint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  *unint64_t v26 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  v26[1] = (a2 - 1);
                }
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v16 = a3 - v12 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v19;
  }
  else {
    int v21 = 1;
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v22;
  }
  switch(v18)
  {
    case 1:
      *((unsigned char *)a1 + v15) = v21;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v15) = v21;
      break;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x21914BABCLL);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_21914BAE4()
{
  return swift_getWitnessTable();
}

uint64_t ShelfGridItem.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_219030940(v1 + 8, a1);
}

uint64_t ShelfGridItem.offset.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t ShelfGridItem.layout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_2190C7E88(v2, v3, v4, v5);
}

BOOL ShelfGridItem.isInFirstRow.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  switch(*(unsigned __int8 *)(v0 + 80) >> 6)
  {
    case 1:
    case 3:
      if (v1 == 1) {
        goto LABEL_9;
      }
      int v6 = *(unsigned __int8 *)(v0 + 81);
      if (v6 == 2 || (v6 & 1) != 0) {
        return *(void *)(v0 + 48) < v1;
      }
      if (!v1) {
        goto LABEL_25;
      }
      if (*(void *)v0 == 0x8000000000000000 && v1 == -1) {
        goto LABEL_26;
      }
      if (*(void *)v0 % v1 == 1)
      {
LABEL_9:
        uint64_t v4 = *(void *)(v0 + 48);
        return v4 == 0;
      }
      return *(void *)(v0 + 48) < v1;
    default:
      if (!v1)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v2 = *(void *)(v0 + 48);
      if (v1 == -1 && v2 == 0x8000000000000000)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x21914BBF4);
      }
      uint64_t v4 = v2 % v1;
      return v4 == 0;
  }
}

uint64_t ShelfGridItem.isInLastRow.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  switch(*(unsigned __int8 *)(v0 + 80) >> 6)
  {
    case 1:
    case 3:
      if (v1 == 1)
      {
        if (!__OFSUB__(*(void *)v0, 1)) {
          return *(void *)(v0 + 48) == *(void *)v0 - 1;
        }
        goto LABEL_40;
      }
      uint64_t v8 = *(void *)v0;
      double v9 = ceil((double)*(uint64_t *)v0 / (double)v1);
      if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (v9 <= -9.22337204e18)
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (v9 >= 9.22337204e18)
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      int v10 = *(unsigned __int8 *)(v0 + 81);
      if (v10 == 2 || (v10 & 1) != 0) {
        goto LABEL_26;
      }
      if (!v1)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      if (v8 == 0x8000000000000000 && v1 == -1) {
        goto LABEL_49;
      }
      if (v8 % v1 != 1)
      {
LABEL_26:
        uint64_t v14 = (uint64_t)v9 - 1;
        if (__OFSUB__((uint64_t)v9, 1))
        {
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        if ((unsigned __int128)(v14 * (__int128)v1) >> 64 != (v14 * v1) >> 63)
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        BOOL v13 = *(void *)(v0 + 48) < v14 * v1;
      }
      else
      {
        BOOL v11 = __OFSUB__(v8, v1);
        uint64_t v12 = v8 - v1;
        if (v11)
        {
LABEL_50:
          __break(1u);
          JUMPOUT(0x21914BDE4);
        }
        BOOL v13 = *(void *)(v0 + 48) < v12;
      }
      return !v13;
    default:
      if (v1 == 1) {
        return 1;
      }
      if (!v1)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      uint64_t v2 = *(void *)(v0 + 48);
      if (v1 == -1 && v2 == 0x8000000000000000) {
        goto LABEL_46;
      }
      uint64_t v4 = v1 - 1;
      if (__OFSUB__(v1, 1)) {
        goto LABEL_39;
      }
      uint64_t v5 = v2 % v1;
      sub_21914BDF4(v0, (uint64_t)v17);
      if (v5 != v4)
      {
        uint64_t v15 = v17[6];
        uint64_t v16 = v17[0];
        sub_2190C9E54((uint64_t)v17);
        if (!__OFSUB__(v16, 1)) {
          return v15 == v16 - 1;
        }
        goto LABEL_48;
      }
      sub_2190C9E54((uint64_t)v17);
      return 1;
  }
}

uint64_t sub_21914BDF4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for ShelfGridItem(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 80);
  return sub_2190C7FE8(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for ShelfGridItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 80);
  sub_2190C7E88(v5, v6, v7, v8);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t assignWithCopy for ShelfGridItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 80);
  sub_2190C7E88(v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v7;
  sub_2190C7FE8(v8, v9, v10, v11);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ShelfGridItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  char v4 = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v4;
  sub_2190C7FE8(v5, v6, v7, v9);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 82)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 82) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridItem()
{
  return &type metadata for ShelfGridItem;
}

ValueMetadata *_s19_ProtocolDispatcherVMa()
{
  return &_s19_ProtocolDispatcherVN;
}

uint64_t sub_21914C104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = v3;
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v43 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v44 = (char *)&v41 - v11;
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - v14;
  if ((*(uint64_t (**)(uint64_t, uint64_t, double))(v16 + 64))(v17, v16, v13))
  {
    uint64_t v18 = *(void *)(v8 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v18)(v15, a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C07C48);
    if (swift_dynamicCast())
    {
      uint64_t v19 = sub_219018288(v45, (uint64_t)v47);
      MEMORY[0x270FA5388](v19);
      *(&v41 - 2) = (uint64_t)v47;
      uint64_t v20 = sub_21914DCC8(sub_21914DFF4);
      int64_t v21 = *(void *)(*v3 + 16);
      if (v21 < v20) {
        goto LABEL_48;
      }
      sub_219054614(v20, v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    }
    else
    {
      uint64_t v46 = 0;
      memset(v45, 0, sizeof(v45));
      sub_21914DF94((uint64_t)v45);
    }
    uint64_t v27 = v44;
    goto LABEL_18;
  }
  uint64_t v22 = *v3;
  uint64_t v18 = *(void *)(*v3 + 16);
  if (!v18)
  {
    int64_t v26 = 0;
    uint64_t v27 = v44;
    goto LABEL_17;
  }
  uint64_t v42 = v8;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  uint64_t v24 = 72;
  while (1)
  {
    sub_219030940(v22 + v24 - 40, (uint64_t)v47);
    char v25 = sub_21914C604((uint64_t)v47, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if (v25) {
      break;
    }
    ++v23;
    v24 += 40;
    if (v18 == v23)
    {
      swift_bridgeObjectRelease();
      int64_t v26 = *(void *)(*v4 + 16);
      uint64_t v8 = v42;
LABEL_16:
      uint64_t v27 = v44;
      if (v26 < v18) {
        goto LABEL_47;
      }
LABEL_17:
      sub_219054614(v18, v26);
      uint64_t v18 = *(void *)(v8 + 16);
LABEL_18:
      ((void (*)(char *, uint64_t, uint64_t))v18)(v27, a1, a2);
      unint64_t v23 = *v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *char v4 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
LABEL_41:
        unint64_t v23 = (unint64_t)sub_219012918(0, *(void *)(v23 + 16) + 1, 1, (void *)v23);
        *char v4 = v23;
      }
      unint64_t v32 = *(void *)(v23 + 16);
      unint64_t v31 = *(void *)(v23 + 24);
      if (v32 >= v31 >> 1) {
        *char v4 = (uint64_t)sub_219012918((void *)(v31 > 1), v32 + 1, 1, (void *)v23);
      }
      uint64_t v33 = (uint64_t)v43;
      ((void (*)(char *, char *, uint64_t))v18)(v43, v27, a2);
      sub_21914DEFC(v32, v33, v4, a2, a3);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v27, a2);
    }
  }
  swift_bridgeObjectRelease();
  int64_t v26 = v23 + 1;
  if (__OFADD__(v23, 1)) {
    goto LABEL_49;
  }
  uint64_t v28 = *v4;
  unint64_t v29 = *(void *)(*v4 + 16);
  uint64_t v8 = v42;
  if (v26 == v29)
  {
LABEL_15:
    uint64_t v18 = v23;
    goto LABEL_16;
  }
  uint64_t v27 = (char *)(v23 + 1);
  while (1)
  {
    if ((unint64_t)v27 >= v29)
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_219030940(v28 + v24, (uint64_t)v47);
    uint64_t v18 = sub_21914C604((uint64_t)v47, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if ((v18 & 1) == 0) {
      break;
    }
LABEL_35:
    int64_t v26 = (int64_t)(v27 + 1);
    if (__OFADD__(v27, 1)) {
      goto LABEL_39;
    }
    uint64_t v28 = *v4;
    unint64_t v29 = *(void *)(*v4 + 16);
    ++v27;
    v24 += 40;
    if (v26 == v29) {
      goto LABEL_15;
    }
  }
  if (v27 == (char *)v23)
  {
LABEL_34:
    if (__OFADD__(v23++, 1)) {
      goto LABEL_40;
    }
    goto LABEL_35;
  }
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = (void *)*v4;
    unint64_t v36 = *(void *)(*v4 + 16);
    if (v23 >= v36) {
      goto LABEL_43;
    }
    sub_219030940((uint64_t)&v35[5 * v23 + 4], (uint64_t)v47);
    if ((unint64_t)v27 >= v36) {
      goto LABEL_44;
    }
    sub_219030940((uint64_t)&v35[(unint64_t)v24 / 8], (uint64_t)v45);
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    *char v4 = (uint64_t)v35;
    if ((v37 & 1) == 0)
    {
      uint64_t v35 = sub_2191125D4(v35);
      *char v4 = (uint64_t)v35;
    }
    uint64_t v8 = v42;
    if (v23 >= v35[2]) {
      goto LABEL_45;
    }
    uint64_t v38 = (uint64_t)&v35[5 * v23 + 4];
    __swift_destroy_boxed_opaque_existential_1(v38);
    sub_219018288(v45, v38);
    uint64_t v39 = *v4;
    if ((unint64_t)v27 >= *(void *)(*v4 + 16)) {
      goto LABEL_46;
    }
    uint64_t v18 = v39 + v24;
    __swift_destroy_boxed_opaque_existential_1(v39 + v24);
    sub_219018288(v47, v18);
    goto LABEL_34;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_21914C604(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_219030940(v6, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C03BB8);
  uint64_t v7 = swift_dynamicCast();
  if (v7) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  }
  return v7;
}

uint64_t sub_21914C700(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a2, v3);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03BB8);
  return sub_21914C774((uint64_t)v5, a1, v3, v6, v4) & 1;
}

uint64_t sub_21914C774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v25[1] = a5;
  uint64_t v8 = sub_21915B378();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v25 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 - 8);
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v14, a2, a4, v17);
  int v21 = swift_dynamicCast();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v21)
  {
    v22(v11, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v11, a3);
    char v23 = sub_21915AD08();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a3);
  }
  else
  {
    v22(v11, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_21914CA08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v30 = a7;
  *(void *)&long long v34 = a5;
  LODWORD(v37) = a4;
  *(void *)&long long v36 = a3;
  *(void *)&long long v32 = a1;
  *(void *)&long long v33 = sub_21915B018();
  uint64_t v12 = *(void *)(v33 - 8);
  *(void *)&long long v35 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v33);
  unint64_t v31 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a6 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v16);
  v29[0] = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v51 = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a6;
  *(void *)(v17 + 24) = a7;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C07C10);
  *(void *)&long long v55 = a6;
  *((void *)&v55 + 1) = MEMORY[0x263F1B570];
  v29[1] = swift_getExtendedExistentialTypeMetadata();
  sub_218FFDF90(&qword_267C07C18, &qword_267C07C10);
  sub_21915B628();
  swift_release();
  swift_bridgeObjectRelease();
  long long v51 = v44;
  long long v52 = v45;
  long long v53 = v46;
  uint64_t v54 = v47;
  (*(void (**)(char *, void, uint64_t))(v14 + 16))((char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v32, a6);
  uint64_t v18 = v12;
  uint64_t v19 = *(void (**)(char *, void, void))(v12 + 16);
  uint64_t v20 = v31;
  uint64_t v21 = v33;
  v19(v31, v34, v33);
  unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (*(unsigned __int8 *)(v18 + 80) + v23 + 9) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  char v25 = (char *)swift_allocObject();
  uint64_t v26 = v30;
  *((void *)v25 + 2) = a6;
  *((void *)v25 + 3) = v26;
  *((void *)v25 + 4) = v36;
  (*(void (**)(char *, void, uint64_t))(v14 + 32))(&v25[v22], v29[0], a6);
  uint64_t v27 = (double *)&v25[v23];
  double *v27 = a8;
  *((unsigned char *)v27 + 8) = v37;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v25[v24], v20, v21);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07C20);
  sub_21915B378();
  sub_218FFDF90(&qword_267C07C28, &qword_267C07C20);
  sub_21915B578();
  swift_getWitnessTable();
  sub_21915B5C8();
  swift_getWitnessTable();
  sub_21915B578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C07C30);
  swift_getWitnessTable();
  sub_21915B628();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  long long v36 = v56;
  long long v37 = v55;
  long long v44 = v55;
  long long v45 = v56;
  long long v34 = v58;
  long long v35 = v57;
  long long v46 = v57;
  long long v47 = v58;
  long long v32 = v60;
  long long v33 = v59;
  long long v48 = v59;
  long long v49 = v60;
  uint64_t v50 = v61;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C07C38);
  swift_getWitnessTable();
  sub_21915B578();
  swift_getWitnessTable();
  sub_21915B5C8();
  swift_getWitnessTable();
  sub_21915B578();
  uint64_t v43 = sub_218FFDF90(&qword_267C07C40, &qword_267C07C20);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v38 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_21915B1C8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v51;
}

double sub_21914D078@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_219030940(a1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C03BB8);
  swift_getExtendedExistentialTypeMetadata();
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_21914D114()
{
  return swift_deallocObject();
}

double sub_21914D124@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21914D078(a1, a2);
}

uint64_t sub_21914D12C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_21915B018();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t (*sub_21914D288@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80);
  unint64_t v6 = (*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_21915B018() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v10 = v2 + v5;
  double v11 = *(double *)(v2 + v6);
  LODWORD(v6) = *(unsigned __int8 *)(v2 + v6 + 8);
  uint64_t v12 = v2 + v8;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  double result = sub_21914D3C0(v9, v10, v6, v12, v13, v14, v11);
  if (result) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  *a2 = result;
  a2[1] = v17;
  return result;
}

uint64_t (*sub_21914D3C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7))()
{
  uint64_t v57 = a2;
  uint64_t v48 = a4;
  uint64_t v50 = a1;
  uint64_t v56 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v54 = v11;
  long long v55 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_21915B018();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  long long v46 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = type metadata accessor for MediaArtwork.ProtocolRequest();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  uint64_t v15 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v14);
  long long v49 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  long long v44 = (uint64_t *)((char *)&v43 - v17);
  uint64_t v18 = sub_21915B378();
  uint64_t v43 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26.n128_f64[0] = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v43 - v27;
  int v51 = a3;
  if ((a3 & 1) == 0 && ((*(uint64_t (**)(uint64_t, double))(v59 + 72))(a5, v26.n128_f64[0]) & 1) == 0) {
    return 0;
  }
  unint64_t v29 = v58;
  (*(void (**)(uint64_t, uint64_t, __n128))(v59 + 80))(v57, a5, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v18);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v28, v20, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v28, AssociatedTypeWitness);
  unint64_t v31 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v46, v48, v47);
  uint64_t v32 = swift_bridgeObjectRetain();
  long long v33 = v44;
  sub_2190ACCE8(v32, (uint64_t)v24, v51 & 1, v31, AssociatedTypeWitness, v44, a7);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v28, AssociatedTypeWitness);
  long long v35 = v55;
  uint64_t v34 = v56;
  (*(void (**)(char *, void, uint64_t))(v56 + 16))(v55, v29, a5);
  uint64_t v36 = v53;
  uint64_t v37 = v52 + 32;
  long long v58 = *(void (**)(void, void, void))(v52 + 32);
  uint64_t v38 = v49;
  v58(v49, v33, v53);
  unint64_t v39 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v40 = (v54 + v39 + *(unsigned __int8 *)(v37 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 48);
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v59;
  *(void *)(v41 + 16) = a5;
  *(void *)(v41 + 24) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v41 + v39, v35, a5);
  v58(v41 + v40, v38, v36);
  return sub_21914DBC4;
}

uint64_t sub_21914D900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(a4 + 88))(a2, a3, a4, v8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_219159468();
}

uint64_t sub_21914DA28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = (int *)(type metadata accessor for MediaArtwork.ProtocolRequest() - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(*(void *)v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v7 + v6[9], AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21914DBC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v4 = v3 + *(void *)(*(void *)(v1 - 8) + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(type metadata accessor for MediaArtwork.ProtocolRequest() - 8);
  uint64_t v6 = v0 + ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_21914D900(v0 + v3, v6, v1, v2);
}

uint64_t sub_21914DCC8(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  for (uint64_t i = 72; ; i += 40)
  {
    char v8 = a1(v3 + i - 40);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v8) {
      break;
    }
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v6, 1))
  {
    unint64_t v10 = *(void *)(v3 + 16);
    if (v6 + 1 == v10) {
      return v6;
    }
    for (unint64_t j = v6 + 1; j < v10; ++j)
    {
      sub_219030940(v3 + i, (uint64_t)v21);
      char v12 = a1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if ((v12 & 1) == 0)
      {
        if (j != v6)
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          uint64_t v13 = (void *)*v1;
          unint64_t v14 = *(void *)(*v1 + 16);
          if (v6 >= v14) {
            goto LABEL_32;
          }
          uint64_t result = sub_219030940((uint64_t)&v13[5 * v6 + 4], (uint64_t)v21);
          if (j >= v14) {
            goto LABEL_33;
          }
          sub_219030940((uint64_t)&v13[(unint64_t)i / 8], (uint64_t)v20);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v1 = (uint64_t)v13;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_2191125D4(v13);
            uint64_t v13 = (void *)result;
            *uint64_t v1 = result;
          }
          if (v6 >= v13[2]) {
            goto LABEL_34;
          }
          uint64_t v15 = (uint64_t)&v13[5 * v6 + 4];
          __swift_destroy_boxed_opaque_existential_1(v15);
          uint64_t result = sub_219018288(v20, v15);
          uint64_t v16 = *v1;
          if (j >= *(void *)(*v1 + 16)) {
            goto LABEL_35;
          }
          uint64_t v17 = v16 + i;
          __swift_destroy_boxed_opaque_existential_1(v16 + i);
          uint64_t result = sub_219018288(v21, v17);
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v19 = j + 1;
      if (__OFADD__(j, 1)) {
        goto LABEL_29;
      }
      uint64_t v3 = *v1;
      unint64_t v10 = *(void *)(*v1 + 16);
      i += 40;
      if (v19 == v10) {
        return v6;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21914DEFC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1Tm, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_219018288(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_21914DF94(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_267C07C50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21914DFF4(uint64_t a1)
{
  return sub_21914C700(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t View.intentImplementation<A>(for:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t KeyPath = swift_getKeyPath();
  v13[0] = a2;
  v13[1] = a3;
  void v13[2] = KeyPath;
  char v14 = 0;
  uint64_t v11 = type metadata accessor for IntentImplementationViewModifier();
  swift_retain();
  MEMORY[0x21D47F800](v13, a4, v11, a6);
  swift_release();
  return j__swift_release(KeyPath, 0);
}

uint64_t type metadata accessor for IntentImplementationViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21914E0F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_21914E184(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 24);
  return j__swift_release(v2, v3);
}

uint64_t sub_21914E1C4(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  j__swift_retain(v5);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  j__swift_release(v6, v7);
  return a1;
}

uint64_t sub_21914E234(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  j__swift_release(v5, v6);
  return a1;
}

uint64_t sub_21914E288()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21914E2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v54 = a3;
  swift_getWitnessTable();
  uint64_t v48 = a2;
  uint64_t v5 = sub_2191585B8();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v43 - v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  v63[0] = v5;
  v63[1] = MEMORY[0x263F1A830];
  uint64_t v53 = WitnessTable;
  char v63[2] = WitnessTable;
  v63[3] = MEMORY[0x263F1A820];
  uint64_t v8 = type metadata accessor for _RequirementFailureView();
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v45 = (uint64_t)&v43 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C042D8);
  uint64_t v13 = sub_219157F48();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_2191584D8();
  uint64_t v51 = *(void *)(v20 - 8);
  uint64_t v52 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v50 = (char *)&v43 - v21;
  long long v47 = *v3;
  uint64_t v22 = *((void *)v3 + 2);
  uint64_t v23 = *((unsigned __int8 *)v3 + 24);
  j__swift_retain(v22);
  sub_2190FB068(v22, v23, v63);
  uint64_t v24 = j__swift_release(v22, v23);
  uint64_t v25 = v63[0];
  if (v63[0])
  {
    MEMORY[0x270FA5388](v24);
    long long v26 = v47;
    *((_OWORD *)&v43 - 3) = *(_OWORD *)(v48 + 16);
    *((_OWORD *)&v43 - 2) = v26;
    *(&v43 - 2) = (char *)v22;
    *((unsigned char *)&v43 - 8) = v23;
    uint64_t v27 = v53;
    View.intentDispatcher(with:implementations:)(v25, (void (*)(void))sub_21914EB10);
    unint64_t v28 = sub_21911B46C();
    uint64_t v55 = v27;
    unint64_t v56 = v28;
    swift_getWitnessTable();
    sub_218FFDE04((uint64_t)v16, v13, (uint64_t)v19);
    unint64_t v29 = *(void (**)(char *, uint64_t))(v14 + 8);
    v29(v16, v13);
    sub_218FFDE04((uint64_t)v19, v13, (uint64_t)v16);
    swift_getWitnessTable();
    uint64_t v30 = (uint64_t)v50;
    sub_219050FE4((uint64_t)v16, v13);
    swift_release();
    v29(v16, v13);
    v29(v19, v13);
  }
  else
  {
    uint64_t v31 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v49, v5);
    uint64_t v32 = v5;
    uint64_t v27 = v53;
    _RequirementFailureView.init<>(_:_:)(v31, 0xD00000000000002ALL, 0x8000000219183430, v32, (uint64_t)v10);
    swift_getWitnessTable();
    uint64_t v33 = v45;
    sub_218FFDE04((uint64_t)v10, v8, v45);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v46 + 8);
    v34(v10, v8);
    sub_218FFDE04(v33, v8, (uint64_t)v10);
    unint64_t v35 = sub_21911B46C();
    uint64_t v61 = v27;
    unint64_t v62 = v35;
    swift_getWitnessTable();
    uint64_t v36 = v50;
    sub_218FFCBB0((uint64_t)v10, v13, v8);
    uint64_t v37 = v10;
    uint64_t v30 = (uint64_t)v36;
    v34(v37, v8);
    v34((char *)v33, v8);
  }
  unint64_t v38 = sub_21911B46C();
  uint64_t v59 = v27;
  unint64_t v60 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v57 = v39;
  uint64_t v58 = v40;
  uint64_t v41 = v52;
  swift_getWitnessTable();
  sub_218FFDE04(v30, v41, v54);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v30, v41);
}

uint64_t sub_21914E934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A3C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = a1;
  v11[1] = a2;
  type metadata accessor for _DelegatingIntentImplementation();
  swift_retain();
  swift_getWitnessTable();
  sub_21915A398();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(qword_267C07CD8);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v9 + v8, v7, v4);
  sub_21915A3B8();
  sub_21915A3A8();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21914EB10()
{
  return sub_21914E934(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t type metadata accessor for _DelegatingIntentImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21914EB44()
{
  return swift_getWitnessTable();
}

uint64_t sub_21914EC98(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unint64_t v8 = v4;
  v8[1] = sub_218FF9AE0;
  return v10(a1, a2, a3);
}

uint64_t sub_21914ED8C()
{
  return sub_21914EFD0();
}

uint64_t sub_21914ED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = *v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_21901C978;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v10 = (void *)swift_task_alloc();
  _OWORD v9[2] = v10;
  *uint64_t v10 = v9;
  v10[1] = sub_218FF9AE0;
  return v12(a1, a2, a3);
}

uint64_t sub_21914EED4()
{
  return sub_21914EEE0();
}

uint64_t sub_21914EEE0()
{
  return 0x6C6261646E655340;
}

uint64_t sub_21914EFD0()
{
  sub_219159668();
  return v1;
}

uint64_t sub_21914F004()
{
  type metadata accessor for FlowStackTabsAuthority.Tab();
  sub_21915AF18();
  uint64_t result = sub_219157A08();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_219159188();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_21914F124(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = &v12[-v8];
  uint64_t v17 = sub_21914FB58();
  uint64_t v13 = v5;
  uint64_t v14 = *(void *)(v3 + 88);
  uint64_t v15 = v4;
  uint64_t v16 = a1;
  type metadata accessor for FlowStackTabsAuthority.Tab();
  sub_21915AF18();
  swift_getWitnessTable();
  char v10 = sub_21915AE48();
  swift_bridgeObjectRelease();
  if (v10)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, AssociatedTypeWitness);
    sub_219159188();
    sub_219159128();
  }
  return v10 & 1;
}

uint64_t sub_21914F318(void (*a1)(void, void), int a2)
{
  int v28 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void (**)(void, void))(*v2 + 96);
  uint64_t v6 = *(void (**)(void, void))(*v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v26 = (char *)&v19 - v7;
  uint64_t v33 = v6;
  uint64_t v34 = *(void (**)(void, void))(v4 + 88);
  uint64_t v8 = v34;
  unint64_t v35 = v5;
  uint64_t v36 = a1;
  sub_21915A9E8();
  uint64_t v38 = sub_21914FB58();
  unint64_t v29 = v6;
  uint64_t v30 = v8;
  uint64_t v31 = v5;
  uint64_t v32 = a1;
  uint64_t v9 = type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v10 = sub_21915AF18();
  swift_getWitnessTable();
  sub_21915B198();
  uint64_t v11 = swift_bridgeObjectRelease();
  int v12 = v40;
  if ((v40 & 1) == 0)
  {
    uint64_t v24 = &v19;
    unint64_t v21 = v39;
    int v25 = v40;
    MEMORY[0x270FA5388](v11);
    uint64_t v23 = 0;
    uint64_t v22 = &v19 - 6;
    *(&v19 - 4) = (void (*)(char *, void))v6;
    *(&v19 - 3) = (void (*)(char *, void))v8;
    *(&v19 - 2) = (void (*)(char *, void))v5;
    *(&v19 - 1) = (void (*)(char *, void))a1;
    MEMORY[0x270FA5388](v13);
    *(&v19 - 4) = (void (*)(char *, void))v6;
    *(&v19 - 3) = (void (*)(char *, void))v8;
    *(&v19 - 2) = (void (*)(char *, void))v5;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v19 - 4) = (void (*)(char *, void))v6;
    *(&v19 - 3) = (void (*)(char *, void))v8;
    *(&v19 - 2) = (void (*)(char *, void))v5;
    swift_getKeyPath();
    unint64_t v19 = (void (*)(char *, void))sub_2191579D8();
    uint64_t v15 = v14;
    sub_21915AEC8();
    uint64_t v16 = *v15;
    unint64_t v17 = v21;
    sub_21915228C(v21, *v15);
    sub_21915226C(v16+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80))+ *(void *)(*(void *)(v9 - 8) + 72) * v17);
    nullsub_1(v10);
    v19(v37, 0);
    swift_release();
    swift_release();
    int v12 = v25;
    if (v28)
    {
      sub_21915B498();
      sub_219159188();
      sub_219159128();
      int v12 = v25;
    }
  }
  return v12 ^ 1u;
}

uint64_t sub_21914F758(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned __int8 v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_21915B158();
  if (!v18) {
    return sub_21915AED8();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_21915B518();
  uint64_t v32 = sub_21915B528();
  sub_21915B4F8();
  uint64_t v36 = v8;
  uint64_t result = sub_21915B148();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    unint64_t v35 = v14;
    ++v33;
    while (1)
    {
      unint64_t v21 = (void (*)(char *, void))sub_21915B1F8();
      uint64_t v22 = v11;
      uint64_t v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_21915B508();
      sub_21915B188();
      --v19;
      uint64_t v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_21914FB58()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2191579E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21914FC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_21915003C(a1, a2);
  return v4;
}

uint64_t sub_21914FC80()
{
  uint64_t v0 = type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - v2;
  sub_219150514();
  sub_21914FB58();
  sub_21915AF38();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)&v3[*(int *)(v0 + 52)];
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_retain();
  v5(v3, v0);
  return v4;
}

uint64_t sub_21914FDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_21915A9E8();
  sub_21915B498();
  uint64_t v6 = type metadata accessor for FlowStackTabsAuthority.Tab();
  sub_219159628();
  sub_219159BF8();
  type metadata accessor for FlowStackAuthority();
  *(void *)(a3 + *(int *)(v6 + 52)) = sub_2191492E4();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *(void *)(a3 + *(int *)(v6 + 56)) = 0;
  return result;
}

uint64_t sub_21914FF10()
{
  uint64_t v0 = sub_219159C08();
  uint64_t v2 = v1;
  if (v0 == sub_21915A348() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_21915B6C8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_21914FFA0()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_21914FFBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t *sub_21915003C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v16 = *(void *)(*v2 + 80);
  uint64_t v17 = *(void *)(v6 + 88);
  uint64_t v18 = *(void *)(v6 + 96);
  uint64_t v19 = a2;
  sub_21915A9E8();
  uint64_t v20 = a2;
  long long v15[2] = v16;
  void v15[3] = v17;
  v15[4] = v18;
  uint64_t v7 = sub_21915AF18();
  uint64_t v8 = type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_21914F758((void (*)(char *, char *))sub_21915220C, (uint64_t)v15, v7, v8, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v10);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_2191503F0(v11);
  swift_endAccess();
  uint64_t v12 = (uint64_t)v3 + *(void *)(*v3 + 112);
  swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_219159188();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a1, v13);
  return v3;
}

BOOL sub_219150284()
{
  return (sub_21915B1D8() & 1) == 0;
}

unint64_t sub_2191502EC()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_219150308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v7, v5);
  return sub_21914FDBC((uint64_t)v7, a2, a3);
}

uint64_t sub_2191503F0(uint64_t a1)
{
  uint64_t v3 = a1;
  type metadata accessor for FlowStackTabsAuthority.Tab();
  uint64_t v1 = sub_21915AF18();
  return sub_2190D8368((uint64_t)&v3, v1);
}

uint64_t sub_219150440()
{
  return sub_2191579F8();
}

uint64_t sub_219150514()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = &v11[-v6];
  uint64_t v8 = sub_219159188();
  MEMORY[0x21D47FB40](v8);
  uint64_t v16 = sub_21914FB58();
  uint64_t v12 = v3;
  uint64_t v13 = *(void *)(v1 + 88);
  uint64_t v14 = v2;
  uint64_t v15 = v7;
  type metadata accessor for FlowStackTabsAuthority.Tab();
  sub_21915AF18();
  swift_getWitnessTable();
  sub_21915B198();
  swift_bridgeObjectRelease();
  if (v18 == 1)
  {
    sub_21914FB58();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = v17;
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  return v9;
}

uint64_t sub_219150718()
{
  return sub_21915AD08() & 1;
}

uint64_t sub_2191507C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_219159C08();
  uint64_t v9 = v8;
  if (v7 == sub_21915A318() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
LABEL_11:
    char v17 = 1;
    goto LABEL_12;
  }
  char v11 = sub_21915B6C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  if (v11) {
    goto LABEL_11;
  }
  uint64_t v12 = sub_219159C08();
  uint64_t v14 = v13;
  if (v12 == sub_21915A328() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v17 = sub_21915B6C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  return v17 & 1;
}

unint64_t sub_2191509A4()
{
  return 0xD000000000000064;
}

uint64_t sub_2191509C0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v3 = (char *)&v6 - v2;
  sub_21915B498();
  swift_getAssociatedConformanceWitness();
  char v4 = sub_21915AD08();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4 & 1;
}

uint64_t sub_219150B08(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = (char *)&v8 - v4;
  sub_219159BF8();
  uint64_t v6 = type metadata accessor for FlowStackTabsAuthority.Tab();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(a1 + *(int *)(v6 + 48), v5, AssociatedTypeWitness);
  ++*(void *)(a1 + *(int *)(v6 + 56));
  return sub_219148960();
}

uint64_t sub_219150C50()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  type metadata accessor for FlowStackTabsAuthority.Tab();
  sub_21915AF18();
  uint64_t v2 = sub_219157A08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_219159188();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_219150D9C()
{
  sub_219150C50();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FlowStackTabsAuthority()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FlowStackTabsAuthority.Tab()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219150E24()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_219159868();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_219150F78(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v28 = sub_219159868();
  uint64_t v5 = *(void *)(v28 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v4 + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64) + 7;
  unsigned int v14 = v11 | *(_DWORD *)(v3 + 80) & 0xF8 | v6;
  if (v14 > 7
    || ((*(_DWORD *)(v10 + 80) | v6 | *(_DWORD *)(v3 + 80)) & 0x100000) != 0
    || ((((v13 + ((v12 + (v7 & ~(unint64_t)v6)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    unint64_t v18 = ~(unint64_t)v6;
    uint64_t v26 = ~v11;
    uint64_t v27 = v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v19 = ((unint64_t)a1 + v7) & v18;
    unint64_t v20 = ((unint64_t)a2 + v7) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v19, v20, v28);
    unint64_t v21 = (v19 + v12) & v26;
    unint64_t v22 = (v20 + v12) & v26;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v21, v22, v27);
    uint64_t v23 = (void *)((v13 + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((v13 + v22) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v23 = *v24;
    *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_219151220(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_219159868();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))((v8 + v9 + *(unsigned __int8 *)(*(void *)(v10 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80), v10);
  return swift_release();
}

uint64_t sub_21915137C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_219159868();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 48);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (v14 + v18 + v12) & ~v18;
  uint64_t v20 = (v14 + v18 + v13) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v20, v15);
  uint64_t v21 = *(void *)(v17 + 48) + 7;
  unint64_t v22 = (void *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v22 = *v23;
  *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_21915150C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_219159868();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 40);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 24;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (v14 + v18 + v12) & ~v18;
  uint64_t v20 = (v14 + v18 + v13) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(v19, v20, v15);
  uint64_t v21 = *(void *)(v17 + 40) + 7;
  unint64_t v22 = (void *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = v21 + v20;
  unint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v22 = *(void *)(v23 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v24 & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2191516A8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_219159868();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 32;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (v14 + v18 + v12) & ~v18;
  uint64_t v20 = (v14 + v18 + v13) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v20, v15);
  uint64_t v21 = *(void *)(v17 + 32) + 7;
  unint64_t v22 = (void *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v22 = *v23;
  *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_219151834(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_219159868();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = v16 + 40;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (v14 + v18 + v12) & ~v18;
  uint64_t v20 = (v14 + v18 + v13) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(v19, v20, v15);
  uint64_t v21 = *(void *)(v17 + 24) + 7;
  unint64_t v22 = (void *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v22 = *v23;
  swift_release();
  *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2191519C8(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v34 = sub_219159868();
  uint64_t v6 = *(void *)(v34 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = v5;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v8) {
    unsigned int v15 = v8;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = *(void *)(v4 + 64) + v12;
  uint64_t v17 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  uint64_t v18 = a1;
  if (v15 < a2)
  {
    unint64_t v19 = ((((v17 + ((v13 + v14 + (v16 & ~v12)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v20 = v19 & 0xFFFFFFF8;
    if ((v19 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = 2;
    }
    else {
      unsigned int v21 = a2 - v15 + 1;
    }
    if (v21 >= 0x10000) {
      unsigned int v22 = 4;
    }
    else {
      unsigned int v22 = 2;
    }
    if (v21 < 0x100) {
      unsigned int v22 = 1;
    }
    if (v21 >= 2) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    switch(v23)
    {
      case 1:
        int v24 = *((unsigned __int8 *)a1 + v19);
        if (!v24) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v24 = *(unsigned __int16 *)((char *)a1 + v19);
        if (v24) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x219151D5CLL);
      case 4:
        int v24 = *(_DWORD *)((char *)a1 + v19);
        if (!v24) {
          break;
        }
LABEL_27:
        int v26 = v24 - 1;
        if (v20)
        {
          int v26 = 0;
          int v27 = *a1;
        }
        else
        {
          int v27 = 0;
        }
        return v15 + (v27 | v26) + 1;
      default:
        break;
    }
  }
  if (v5 == v15)
  {
    uint64_t v28 = v35;
    uint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v30 = v5;
    return v29(v18, v30, v28);
  }
  uint64_t v18 = (_DWORD *)(((unint64_t)a1 + v16) & ~v12);
  if (v7 == v15)
  {
    uint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v30 = v7;
    uint64_t v28 = v34;
    return v29(v18, v30, v28);
  }
  unint64_t v31 = ((unint64_t)v18 + v13 + v14) & ~v14;
  if (v11 == v15)
  {
    uint64_t v32 = *(uint64_t (**)(unint64_t))(v10 + 48);
    return v32(v31);
  }
  else
  {
    unint64_t v33 = *(void *)((v17 + v31) & 0xFFFFFFFFFFFFFFF8);
    if (v33 >= 0xFFFFFFFF) {
      LODWORD(v33) = -1;
    }
    return (v33 + 1);
  }
}

void sub_219151D70(_DWORD *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(sub_219159868() - 8);
  uint64_t v29 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = v5;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v8) {
    unsigned int v15 = v8;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  uint64_t v16 = *(void *)(v4 + 64) + v12;
  uint64_t v17 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7;
  unint64_t v18 = ((((v17 + ((v13 + v14 + (v16 & ~v12)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 >= a3)
  {
    int v21 = 0;
  }
  else
  {
    if (((((v17 + ((v13 + v14 + (v16 & ~v12)) & ~v14)) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v19 = a3 - v15 + 1;
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
  }
  if (a2 > v15)
  {
    if (((((v17 + ((v13 + v14 + (v16 & ~v12)) & ~v14)) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v22 = a2 - v15;
    else {
      int v22 = 1;
    }
    if (((((v17 + ((v13 + v14 + (v16 & ~v12)) & ~v14)) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v23 = ~v15 + a2;
      bzero(a1, ((((v17 + ((v13 + v14 + (v16 & ~v12)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v23;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)a1 + v18) = v22;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v18) = v22;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)((char *)a1 + v18) = v22;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)((char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x21915211CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v18) = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      if (v5 == v15)
      {
        int v24 = *(void (**)(_DWORD *))(v4 + 56);
        uint64_t v25 = a1;
LABEL_41:
        v24(v25);
        return;
      }
      uint64_t v25 = (_DWORD *)(((unint64_t)a1 + v16) & ~v12);
      if (v7 == v15)
      {
        int v24 = *(void (**)(_DWORD *))(v29 + 56);
        goto LABEL_41;
      }
      unint64_t v26 = ((unint64_t)v25 + v13 + v14) & ~v14;
      if (v11 == v15)
      {
        int v27 = *(void (**)(unint64_t))(v10 + 56);
        v27(v26);
      }
      else
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v28 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v28 = a2 - 1;
        }
        *(void *)((v17 + v26) & 0xFFFFFFFFFFFFFFF8) = v28;
      }
      return;
  }
}

uint64_t sub_219152144()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_219152164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21914FB58();
  *a1 = result;
  return result;
}

uint64_t sub_219152190()
{
  return sub_219150440();
}

uint64_t sub_2191521BC()
{
  return 24;
}

__n128 sub_2191521C8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2191521DC()
{
  return sub_219150718() & 1;
}

BOOL sub_219152200()
{
  return sub_219150284();
}

uint64_t sub_21915220C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_219150308(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_219152230()
{
  return sub_21914FF10();
}

uint64_t sub_21915223C()
{
  return sub_2191507C0(*(void *)(v0 + 40), *(void *)(v0 + 16));
}

uint64_t sub_219152248()
{
  return sub_2191509C0() & 1;
}

uint64_t sub_21915226C(uint64_t a1)
{
  return sub_219150B08(a1);
}

uint64_t sub_21915228C(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_2191522E0()
{
  return sub_2191521DC() & 1;
}

uint64_t sub_219152300(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0) {
    return swift_unknownObjectRetain();
  }
  else {
    return sub_21905E7B8(a1, a2, a3 & 1);
  }
}

uint64_t sub_219152318(uint64_t a1)
{
  return sub_219152328(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_219152328(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0) {
    return swift_unknownObjectRelease();
  }
  else {
    return sub_21905EA50(a1, a2, a3 & 1);
  }
}

uint64_t sub_219152340(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_219152300(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_21915238C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_219152300(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_219152328(v6, v7, v8);
  return a1;
}

uint64_t sub_2191523E4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_219152328(v4, v5, v6);
  return a1;
}

uint64_t sub_21915242C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_21915247C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_2191524D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_2191524DC(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_2191524EC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (a2 << 7);
  return result;
}

uint64_t type metadata accessor for _StateOrObservedObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t EnvironmentValues.pageMetricsNavigationPath.getter()
{
  sub_219152560();
  return sub_219158238();
}

unint64_t sub_219152560()
{
  unint64_t result = qword_26AD02FA8;
  if (!qword_26AD02FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD02FA8);
  }
  return result;
}

uint64_t sub_2191525B4()
{
  return sub_219158238();
}

uint64_t sub_2191525F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_219140B14(a1, (uint64_t)&v9 - v6);
  sub_219140B14((uint64_t)v7, (uint64_t)v4);
  sub_219152560();
  sub_219158248();
  return sub_2190F96E0((uint64_t)v7);
}

uint64_t EnvironmentValues.pageMetricsNavigationPath.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308);
  MEMORY[0x270FA5388](v2 - 8);
  sub_219140B14(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_219152560();
  sub_219158248();
  return sub_2190F96E0(a1);
}

uint64_t sub_21915276C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03300);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

void (*EnvironmentValues.pageMetricsNavigationPath.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD03308) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_219152560();
  sub_219158238();
  return sub_21915289C;
}

void sub_21915289C(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_219140B14((*a1)[3], (*a1)[2]);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = (void *)v3[2];
  if (a2)
  {
    sub_219140B14(v3[2], v3[1]);
    sub_219158248();
    sub_2190F96E0((uint64_t)v6);
  }
  else
  {
    sub_219158248();
  }
  sub_2190F96E0((uint64_t)v4);
  free(v4);
  free(v6);
  free(v5);
  free(v3);
}

uint64_t sub_21915296C()
{
  return sub_219158238();
}

ValueMetadata *type metadata accessor for PageMetricsNavigationPath()
{
  return &type metadata for PageMetricsNavigationPath;
}

uint64_t View.onDeepLink<A>(prepare:recover:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a7;
  uint64_t v17 = a5;
  uint64_t v11 = type metadata accessor for OnDeepLinkViewModifier();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v16 - v13;
  sub_219152B1C(a1, a2, a3, a4, (uint64_t)&v16 - v13);
  swift_retain();
  swift_retain();
  MEMORY[0x21D47F800](v14, v17, v11, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for OnDeepLinkViewModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219152B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 32) = swift_getKeyPath();
  *(unsigned char *)(a5 + 40) = 0;
  *(void *)(a5 + 48) = swift_getKeyPath();
  *(unsigned char *)(a5 + 56) = 0;
  *(void *)(a5 + 64) = swift_getKeyPath();
  *(unsigned char *)(a5 + 104) = 0;
  uint64_t v10 = (uint64_t *)(a5 + *(int *)(type metadata accessor for OnDeepLinkViewModifier() + 52));
  *uint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t View.onDeepLink<A>(prepare:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return View.onDeepLink<A>(prepare:recover:)(a1, a2, (uint64_t)sub_219152C20, 0, a3, a4, a5);
}

void sub_219152C20(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_21915A7C8();
  uint64_t v9 = MEMORY[0x263F50D60];
  a4[3] = v8;
  a4[4] = v9;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a4);
  id v11 = a1;
  swift_retain();
  Models.AlertAction.init(contentUnavailableError:retry:)(a1, a2, a3, (uint64_t)boxed_opaque_existential_1Tm);
}

uint64_t View.onDeepLink()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21915A808();
  return View.onDeepLink<A>(prepare:recover:)((uint64_t)&unk_267C07EF0, 0, (uint64_t)sub_219152C20, 0, a1, v4, a2);
}

uint64_t sub_219152D28(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_21915AA48();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  void v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_219152DE8, 0, 0);
}

uint64_t sub_219152DE8()
{
  (*(void (**)(void, void, void))(v0[5] + 16))(v0[6], v0[3], v0[4]);
  sub_21915A818();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_219152E74()
{
  return swift_getWitnessTable();
}

uint64_t sub_219152F08()
{
  return swift_getWitnessTable();
}

void sub_219152FA4()
{
  sub_219081030();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_219153058(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)a1 = v5;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    char v9 = *((unsigned char *)a2 + 40);
    swift_retain();
    swift_retain();
    j__swift_retain(v8);
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v9;
    uint64_t v10 = a2[6];
    LOBYTE(v8) = *((unsigned char *)a2 + 56);
    j__swift_retain(v10);
    *(void *)(a1 + 48) = v10;
    *(unsigned char *)(a1 + 56) = v8;
    id v11 = a2 + 8;
    if (a2[13])
    {
      uint64_t v12 = (_OWORD *)(a1 + 64);
      uint64_t v13 = a2[11];
      if (v13)
      {
        uint64_t v14 = a2[12];
        *(void *)(a1 + 88) = v13;
        *(void *)(a1 + 96) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v12, v11);
      }
      else
      {
        long long v15 = *((_OWORD *)a2 + 5);
        *uint64_t v12 = *v11;
        *(_OWORD *)(a1 + 80) = v15;
        *(void *)(a1 + 96) = a2[12];
      }
      *(unsigned char *)(a1 + 104) = 1;
    }
    else
    {
      *(void *)(a1 + 64) = *(void *)v11;
      *(unsigned char *)(a1 + 104) = 0;
      swift_retain();
    }
    uint64_t v16 = *(int *)(a3 + 52);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_21915A198();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      void *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21915324C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  j_j__swift_release(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  j_j__swift_release(*(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  if (*(unsigned char *)(a1 + 104))
  {
    if (*(void *)(a1 + 88)) {
      __swift_destroy_boxed_opaque_existential_1(a1 + 64);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_21915A198();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_219153348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  j__swift_retain(v6);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  LOBYTE(v6) = *(unsigned char *)(a2 + 56);
  j__swift_retain(v8);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v6;
  char v9 = (_OWORD *)(a2 + 64);
  if (*(unsigned char *)(a2 + 104))
  {
    uint64_t v10 = (_OWORD *)(a1 + 64);
    uint64_t v11 = *(void *)(a2 + 88);
    if (v11)
    {
      uint64_t v12 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v11;
      *(void *)(a1 + 96) = v12;
      (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v10, v9);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 80);
      *uint64_t v10 = *v9;
      *(_OWORD *)(a1 + 80) = v13;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
    }
    *(unsigned char *)(a1 + 104) = 1;
  }
  else
  {
    *(void *)(a1 + 64) = *(void *)v9;
    *(unsigned char *)(a1 + 104) = 0;
    swift_retain();
  }
  uint64_t v14 = *(int *)(a3 + 52);
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_21915A198();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *long long v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2191534E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  j__swift_retain(v8);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  j_j__swift_release(v10, v11);
  uint64_t v12 = *(void *)(a2 + 48);
  char v13 = *(unsigned char *)(a2 + 56);
  j__swift_retain(v12);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(unsigned __int8 *)(a1 + 56);
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v13;
  j_j__swift_release(v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = (long long *)(a2 + 64);
    sub_218FFE158(a1 + 64, &qword_26AD012A8);
    if (*(unsigned char *)(a2 + 104))
    {
      uint64_t v17 = *(void *)(a2 + 88);
      if (v17)
      {
        *(void *)(a1 + 88) = v17;
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        long long v18 = *v16;
        long long v19 = *(_OWORD *)(a2 + 80);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(_OWORD *)(a1 + 64) = v18;
        *(_OWORD *)(a1 + 80) = v19;
      }
      *(unsigned char *)(a1 + 104) = 1;
    }
    else
    {
      *(void *)(a1 + 64) = *(void *)v16;
      *(unsigned char *)(a1 + 104) = 0;
      swift_retain();
    }
    uint64_t v20 = *(int *)(a3 + 52);
    int v21 = (void *)(a1 + v20);
    int v22 = (void *)(a2 + v20);
    sub_218FFE158(a1 + v20, &qword_26AD03198);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_21915A198();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *int v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2191536E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_21915A198();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2191537E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  char v6 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v6;
  j_j__swift_release(v7, v8);
  char v9 = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v9;
  j_j__swift_release(v10, v11);
  if (a1 != a2)
  {
    sub_218FFE158(a1 + 64, &qword_26AD012A8);
    long long v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    uint64_t v13 = *(int *)(a3 + 52);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_218FFE158(a1 + v13, &qword_26AD03198);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_21915A198();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_219153948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21915395C);
}

uint64_t sub_21915395C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
    char v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_219153A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219153A24);
}

void *sub_219153A24(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C03680);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_219153AD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219153B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v131 = a1;
  uint64_t v140 = a3;
  swift_getWitnessTable();
  uint64_t v4 = sub_2191585B8();
  uint64_t v139 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v126 = (char *)&v104 - v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v146 = v4;
  uint64_t v147 = MEMORY[0x263F1A830];
  uint64_t v141 = WitnessTable;
  uint64_t v148 = WitnessTable;
  uint64_t v149 = MEMORY[0x263F1A820];
  uint64_t v7 = type metadata accessor for _RequirementFailureView();
  uint64_t v129 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v127 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v128 = (uint64_t)&v104 - v10;
  uint64_t v118 = sub_21915B018();
  uint64_t v116 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v115 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = a2;
  uint64_t v114 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v112 = v13;
  uint64_t v113 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219157D48();
  uint64_t v132 = v4;
  uint64_t v14 = sub_219157F48();
  uint64_t v120 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v119 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v117 = (uint64_t)&v104 - v17;
  uint64_t v137 = v18;
  uint64_t v19 = sub_2191584D8();
  uint64_t v125 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v124 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v123 = (char *)&v104 - v22;
  uint64_t v136 = v23;
  uint64_t v130 = v7;
  uint64_t v135 = sub_2191584D8();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  unint64_t v133 = (char *)&v104 - v24;
  uint64_t v25 = sub_2191595A8();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v26 = sub_21915AB08();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_219157718();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219157708();
  uint64_t v34 = sub_2191576F8();
  uint64_t v36 = v35;
  uint64_t v37 = v30;
  uint64_t v38 = v36;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v37);
  sub_21915AA58();
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  uint64_t v40 = *(void *)(sub_2191595F8() - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = ((v41 + 32) & ~v41) + *(void *)(v40 + 72);
  uint64_t v107 = v39;
  uint64_t v106 = v42;
  uint64_t v105 = v41 | 7;
  uint64_t v43 = swift_allocObject();
  long long v104 = xmmword_21915C970;
  *(_OWORD *)(v43 + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  uint64_t v149 = MEMORY[0x263F8D310];
  uint64_t v108 = v34;
  uint64_t v146 = v34;
  uint64_t v147 = v38;
  swift_bridgeObjectRetain();
  sub_219159558();
  sub_218FFE158((uint64_t)&v146, qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_21915A6B8();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v111 = v26;
  uint64_t v109 = v27 + 8;
  v44(v29, v26);
  uint64_t v45 = *(void *)(v138 + 32);
  uint64_t v46 = v138;
  uint64_t v47 = *(unsigned __int8 *)(v138 + 40);
  j__swift_retain(v45);
  sub_2190FCA8C(v45, v47, &v146);
  j_j__swift_release(v45, v47);
  if (v146)
  {
    uint64_t v110 = v38;
    uint64_t v122 = v146;
    uint64_t v48 = v139;
    uint64_t v49 = *(void *)(v46 + 48);
    uint64_t v50 = *(unsigned __int8 *)(v46 + 56);
    j__swift_retain(v49);
    sub_2190FB068(v49, v50, &v146);
    j_j__swift_release(v49, v50);
    uint64_t v51 = v146;
    if (v146)
    {
      sub_2190FB834((uint64_t)&v144);
      if (v145)
      {
        sub_219018288(&v144, (uint64_t)&v146);
        sub_21915AA58();
        *(_OWORD *)(swift_allocObject() + 16) = v104;
        sub_219159598();
        sub_219159588();
        uint64_t v145 = MEMORY[0x263F8D310];
        uint64_t v139 = v51;
        uint64_t v52 = v108;
        *(void *)&long long v144 = v108;
        uint64_t v53 = v110;
        *((void *)&v144 + 1) = v110;
        swift_bridgeObjectRetain();
        sub_219159558();
        sub_218FFE158((uint64_t)&v144, qword_26AD03AB8);
        sub_219159588();
        sub_2191595B8();
        uint64_t v54 = v111;
        sub_21915A6B8();
        swift_bridgeObjectRelease();
        v44(v29, v54);
        uint64_t v55 = v114;
        unint64_t v56 = v113;
        uint64_t v57 = v121;
        (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v46, v121);
        sub_219030940((uint64_t)&v146, (uint64_t)&v144);
        unint64_t v58 = (*(unsigned __int8 *)(v55 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        unint64_t v59 = (v112 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = *(_OWORD *)(v57 + 16);
        *(void *)(v60 + 32) = v52;
        *(void *)(v60 + 40) = v53;
        *(void *)(v60 + 48) = v122;
        (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v60 + v58, v56, v57);
        *(void *)(v60 + v59) = v139;
        sub_219018288(&v144, v60 + ((v59 + 15) & 0xFFFFFFFFFFFFFFF8));
        swift_retain();
        swift_retain();
        uint64_t v61 = v115;
        uint64_t v62 = v141;
        sub_218FFE1B4();
        uint64_t v63 = (uint64_t)v119;
        sub_219158D08();
        swift_release();
        (*(void (**)(char *, uint64_t))(v116 + 8))(v61, v118);
        unint64_t v64 = sub_21912B9D0();
        uint64_t v142 = v62;
        unint64_t v143 = v64;
        uint64_t v65 = v137;
        swift_getWitnessTable();
        uint64_t v66 = v117;
        sub_218FFDE04(v63, v65, v117);
        unint64_t v67 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
        v67(v63, v65);
        sub_218FFDE04(v66, v65, v63);
        swift_getWitnessTable();
        uint64_t v68 = (uint64_t)v123;
        uint64_t v69 = v62;
        sub_219050FE4(v63, v65);
        swift_release();
        v67(v63, v65);
        v67(v66, v65);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v146);
LABEL_9:
        uint64_t v94 = v136;
        uint64_t v82 = v135;
        uint64_t v83 = v134;
        uint64_t v80 = (uint64_t)v133;
        unint64_t v95 = sub_21912B9D0();
        uint64_t v152 = v69;
        unint64_t v153 = v95;
        uint64_t v96 = swift_getWitnessTable();
        uint64_t v97 = swift_getWitnessTable();
        uint64_t v150 = v96;
        uint64_t v151 = v97;
        swift_getWitnessTable();
        uint64_t v98 = v124;
        sub_218FFDE04(v68, v94, v124);
        sub_219050FE4(v98, v94);
        swift_release();
        uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
        v99(v98, v94);
        v99(v68, v94);
        uint64_t v73 = v141;
        uint64_t v81 = v140;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_218FFE158((uint64_t)&v144, &qword_26AD010B8);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
    uint64_t v85 = (uint64_t)v126;
    uint64_t v86 = v132;
    v84(v126, v131, v132);
    uint64_t v87 = v127;
    uint64_t v88 = v141;
    _RequirementFailureView.init<>(_:_:)(v85, 0xD00000000000006CLL, 0x8000000219183670, v86, v127);
    uint64_t v89 = v130;
    swift_getWitnessTable();
    uint64_t v90 = v128;
    sub_218FFDE04(v87, v89, v128);
    uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
    v91(v87, v89);
    sub_218FFDE04(v90, v89, v87);
    unint64_t v92 = sub_21912B9D0();
    uint64_t v154 = v88;
    unint64_t v155 = v92;
    uint64_t v93 = v137;
    swift_getWitnessTable();
    uint64_t v68 = (uint64_t)v123;
    uint64_t v69 = v88;
    sub_218FFCBB0(v87, v93, v89);
    v91(v87, v89);
    v91(v90, v89);
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v126;
  uint64_t v71 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v126, v131, v132);
  uint64_t v72 = v127;
  uint64_t v73 = v141;
  _RequirementFailureView.init<>(_:_:)(v70, 0xD000000000000079, 0x80000002191835F0, v71, v127);
  uint64_t v74 = v130;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v76 = v128;
  sub_218FFDE04(v72, v74, v128);
  uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
  v77(v72, v74);
  sub_218FFDE04(v76, v74, v72);
  unint64_t v78 = sub_21912B9D0();
  uint64_t v164 = v73;
  unint64_t v165 = v78;
  uint64_t v162 = swift_getWitnessTable();
  uint64_t v163 = v75;
  uint64_t v79 = v136;
  swift_getWitnessTable();
  uint64_t v80 = (uint64_t)v133;
  sub_218FFCBB0(v72, v79, v74);
  v77(v72, v74);
  v77(v76, v74);
  uint64_t v81 = v140;
  uint64_t v82 = v135;
  uint64_t v83 = v134;
LABEL_10:
  unint64_t v100 = sub_21912B9D0();
  uint64_t v160 = v73;
  unint64_t v161 = v100;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v102 = swift_getWitnessTable();
  uint64_t v158 = v101;
  uint64_t v159 = v102;
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v157 = v102;
  swift_getWitnessTable();
  sub_218FFDE04(v80, v82, v81);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v80, v82);
}

uint64_t sub_219154C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[36] = a7;
  v8[37] = a8;
  v8[34] = a5;
  v8[35] = a6;
  v8[32] = a3;
  v8[33] = a4;
  v8[30] = a1;
  v8[31] = a2;
  v8[38] = *(void *)(a7 - 8);
  v8[39] = swift_task_alloc();
  uint64_t v9 = sub_21915AA48();
  v8[40] = v9;
  v8[41] = *(void *)(v9 - 8);
  v8[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C074D0);
  v8[43] = swift_task_alloc();
  sub_2191595A8();
  v8[44] = swift_task_alloc();
  v8[45] = swift_task_alloc();
  uint64_t v10 = sub_21915AB08();
  v8[46] = v10;
  v8[47] = *(void *)(v10 - 8);
  v8[48] = swift_task_alloc();
  v8[49] = sub_21915AF98();
  v8[50] = sub_21915AF88();
  uint64_t v12 = sub_21915AF48();
  v8[51] = v12;
  v8[52] = v11;
  return MEMORY[0x270FA2498](sub_219154EAC, v12, v11);
}

uint64_t sub_219154EAC()
{
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 240);
  sub_21915AA58();
  *(void *)(v0 + 424) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD037A8);
  uint64_t v6 = *(void *)(sub_2191595F8() - 8);
  *(void *)(v0 + 432) = *(void *)(v6 + 72);
  *(_DWORD *)(v0 + 520) = *(_DWORD *)(v6 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
  sub_219159598();
  sub_219159588();
  *(void *)(v0 + 80) = MEMORY[0x263F8D310];
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 64) = v4;
  swift_bridgeObjectRetain();
  sub_219159558();
  sub_218FFE158(v0 + 56, qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_21915A6B8();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 440) = v7;
  *(void *)(v0 + 448) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v1, v3);
  *(void *)(v0 + 216) = sub_219159978();
  *(void *)(v0 + 456) = sub_21915AF88();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074E0);
  uint64_t v9 = sub_218FFDF90(&qword_267C074E8, &qword_267C074E0);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_21915513C;
  uint64_t v11 = *(void *)(v0 + 344);
  return MEMORY[0x270FA1E80](v11, v8, v9);
}

uint64_t sub_21915513C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 456);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_21915AF48();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_21915562C;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_21915AF48();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_2191552D4;
  }
  return MEMORY[0x270FA2498](v7, v4, v6);
}

uint64_t sub_2191552D4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  return MEMORY[0x270FA2498](sub_219155338, v1, v2);
}

uint64_t sub_219155338()
{
  uint64_t v1 = v0[43];
  uint64_t v3 = v0[40];
  uint64_t v2 = v0[41];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[55];
    uint64_t v6 = v0[48];
    uint64_t v12 = v0[46];
    uint64_t v13 = (void *)v0[33];
    uint64_t v10 = v0[30];
    uint64_t v11 = v0[31];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[42], v1, v3);
    sub_21915AA58();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915C970;
    sub_219159598();
    sub_219159588();
    v0[22] = MEMORY[0x263F8D310];
    v0[19] = v10;
    v0[20] = v11;
    swift_bridgeObjectRetain();
    sub_219159558();
    sub_218FFE158((uint64_t)(v0 + 19), qword_26AD03AB8);
    sub_219159588();
    sub_2191595B8();
    sub_21915A6B8();
    swift_bridgeObjectRelease();
    v14(v6, v12);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))(*v13 + *(int *)*v13);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[60] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_2191556B0;
    uint64_t v8 = v0[42];
    uint64_t v9 = v0[39];
    return v15(v9, v8);
  }
}

uint64_t sub_21915562C()
{
  *(void *)(v0 + 208) = *(void *)(v0 + 472);
  __swift_instantiateConcreteTypeFromMangledName(qword_26AD03900);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_2191556B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 296);
  uint64_t v3 = *(void *)(*v0 + 272);
  uint64_t v10 = *v0;
  swift_task_dealloc();
  *(void *)(v1 + 232) = v3;
  uint64_t v4 = (void *)(v1 + 232);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[32] = v5;
  uint64_t v6 = *(void *)(v2 + 8);
  *uint64_t v5 = v10;
  v5[1] = sub_219155828;
  uint64_t v7 = v4[10];
  uint64_t v8 = v4[7];
  return IntentDispatchAction.callAsFunction<A>(_:)((uint64_t)(v4 - 27), v7, v8, v6);
}

uint64_t sub_219155828()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 408);
    uint64_t v4 = *(void *)(v2 + 416);
    uint64_t v5 = sub_219155BB8;
  }
  else
  {
    uint64_t v5 = sub_219155944;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_219155944()
{
  *(void *)(v0 + 504) = sub_21915AF88();
  uint64_t v2 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_2191559D0, v2, v1);
}

uint64_t sub_2191559D0()
{
  uint64_t v1 = (void *)v0[35];
  swift_release();
  sub_21915609C(v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[52];
  return MEMORY[0x270FA2498](sub_219155A74, v2, v3);
}

uint64_t sub_219155A74()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[36]);
  sub_21915674C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[57] = sub_21915AF88();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074E0);
  uint64_t v5 = sub_218FFDF90(&qword_267C074E8, &qword_267C074E0);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[58] = v6;
  void *v6 = v0;
  v6[1] = sub_21915513C;
  uint64_t v7 = v0[43];
  return MEMORY[0x270FA1E80](v7, v4, v5);
}

uint64_t sub_219155BB8()
{
  uint64_t v7 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v5 = v0[48];
  uint64_t v6 = v0[46];
  (*(void (**)(uint64_t, uint64_t))(v0[38] + 8))(v0[39], v0[36]);
  sub_21915AA58();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21915D6B0;
  sub_219159598();
  sub_219159588();
  v0[18] = sub_219157688();
  __swift_allocate_boxed_opaque_existential_1Tm(v0 + 15);
  sub_21915AA28();
  sub_219159548();
  sub_218FFE158((uint64_t)(v0 + 15), qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_219159598();
  sub_219159588();
  swift_getErrorValue();
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  v0[14] = v2;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v0 + 11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(boxed_opaque_existential_1Tm, v1, v2);
  sub_219159558();
  sub_218FFE158((uint64_t)(v0 + 11), qword_26AD03AB8);
  sub_219159588();
  sub_2191595B8();
  sub_21915A6C8();
  swift_bridgeObjectRelease();
  v7(v5, v6);
  return MEMORY[0x270FA2498](sub_219155E3C, 0, 0);
}

uint64_t sub_219155E3C()
{
  *(void *)(v0 + 512) = sub_21915AF88();
  uint64_t v2 = sub_21915AF48();
  return MEMORY[0x270FA2498](sub_219155EC8, v2, v1);
}

uint64_t sub_219155EC8()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[42];
  uint64_t v4 = v0[36];
  uint64_t v3 = v0[37];
  uint64_t v5 = (void *)v0[35];
  uint64_t v7 = v0[32];
  uint64_t v6 = v0[33];
  swift_release();
  sub_2191561E8(v6, v1, v7, v2, v5, v4, v3);
  uint64_t v8 = v0[51];
  uint64_t v9 = v0[52];
  return MEMORY[0x270FA2498](sub_219155F7C, v8, v9);
}

uint64_t sub_219155F7C()
{
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 456) = sub_21915AF88();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C074E0);
  uint64_t v5 = sub_218FFDF90(&qword_267C074E8, &qword_267C074E0);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v6;
  void *v6 = v0;
  v6[1] = sub_21915513C;
  uint64_t v7 = *(void *)(v0 + 344);
  return MEMORY[0x270FA1E80](v7, v4, v5);
}

uint64_t sub_21915609C(void *a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v3 = sub_21915A198();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  type metadata accessor for OnDeepLinkViewModifier();
  sub_2190F9F54((uint64_t)v6);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v7 + 24))(v11, v6, v8, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2191561E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t (*)(), uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void v23[2];
  void (*v24)(void *__return_ptr, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void v31[5];

  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  uint64_t v10 = sub_21915A198();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21915AA48();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  double v16 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t (*)(), uint64_t))(a1 + 16);
  v23[1] = *(void *)(a1 + 24);
  uint64_t v24 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v13, v16);
  uint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  swift_retain();
  v24(v31, v26, sub_21915686C, v19);
  swift_release();
  uint64_t v20 = a5[3];
  uint64_t v21 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v20);
  type metadata accessor for OnDeepLinkViewModifier();
  sub_2190F9F54((uint64_t)v12);
  (*(void (**)(void *, char *, uint64_t, uint64_t))(v21 + 24))(v31, v12, v20, v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_219156460()
{
  uint64_t v1 = type metadata accessor for OnDeepLinkViewModifier();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = v0 + v2;
  swift_release();
  swift_release();
  j_j__swift_release(*(void *)(v4 + 32), *(unsigned __int8 *)(v4 + 40));
  j_j__swift_release(*(void *)(v4 + 48), *(unsigned __int8 *)(v4 + 56));
  if (*(unsigned char *)(v0 + v2 + 104))
  {
    if (*(void *)(v4 + 88)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 64);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v4 + *(int *)(v1 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD03198);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_21915A198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + ((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_219156600()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(type metadata accessor for OnDeepLinkViewModifier() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v10 = (uint64_t)v0 + v5;
  uint64_t v11 = *(void *)((char *)v0 + v6);
  uint64_t v12 = (uint64_t)v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_218FF9AE0;
  return sub_219154C90(v7, v8, v9, v10, v11, v12, v3, v2);
}

uint64_t sub_21915674C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2191567A0()
{
  uint64_t v1 = sub_21915AA48();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21915686C()
{
  return sub_2191599A8();
}

uint64_t sub_2191568F0()
{
  return swift_getWitnessTable();
}

uint64_t ComponentView.init(_:content:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_219018288(a1, a4);
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t ComponentView.init(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_219030940(a1 + 8, (uint64_t)v9);
  sub_2190C9E54(a1);
  uint64_t result = sub_219018288(v9, a4);
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t ComponentView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x270FA5388](v13);
  double v16 = (char *)&v19 - v15;
  (*(void (**)(double))(v2 + 40))(v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v2, v3, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_getAssociatedConformanceWitness();
  sub_218FFDE04((uint64_t)v12, AssociatedTypeWitness, (uint64_t)v16);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, AssociatedTypeWitness);
  sub_218FFDE04((uint64_t)v16, AssociatedTypeWitness, v20);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, AssociatedTypeWitness);
}

uint64_t sub_219156D4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_219156D94(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t sub_219156DCC(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  return a1;
}

uint64_t *sub_219156E34(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_219156E78(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_219156EC4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_219156F0C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ComponentView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_219156F70()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_267C0EDB8 == -1)
  {
    if (qword_267C0EDC0) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_267C0EDB8, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_267C0EDC0) {
      return _availability_version_check();
    }
  }
  if (qword_267C0EDB0 == -1)
  {
    BOOL v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_267C0EDB0, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    BOOL v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_267C0EDA4 > a3) {
    return 1;
  }
  return dword_267C0EDA4 >= a3 && dword_267C0EDA8 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v1 = qword_267C0EDC0;
  if (qword_267C0EDC0) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (MEMORY[0x263EF8368])
    {
      uint64_t v1 = MEMORY[0x270FA5398];
      qword_267C0EDC0 = MEMORY[0x270FA5398];
    }
    if (!v1 || result != 0)
    {
      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        long long v4 = *(unsigned __int8 **)result;
        uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            uint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    uint64_t v11 = (uint64_t (*)(void))result;
                    uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    uint64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        uint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          uint64_t v13 = (FILE *)result;
                          uint64_t v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = MEMORY[0x21D482420](v13);
                          if (v14 < 0)
                          {
                            double v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            double v16 = malloc(v15);
                            if (v16)
                            {
                              uint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  uint64_t v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_267C0EDA4, &dword_267C0EDA8);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    uint64_t v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  uint64_t v19 = v13;
                                }
                                double v16 = v26;
                              }
                              else
                              {
                                double v16 = v26;
                                uint64_t v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          uint64_t v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2191574C8()
{
  return MEMORY[0x270EED980]();
}

uint64_t sub_2191574D8()
{
  return MEMORY[0x270EE41C8]();
}

uint64_t sub_2191574E8()
{
  return MEMORY[0x270EEDA90]();
}

uint64_t sub_2191574F8()
{
  return MEMORY[0x270EEDAA0]();
}

uint64_t sub_219157508()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_219157518()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_219157528()
{
  return MEMORY[0x270EEE438]();
}

uint64_t sub_219157538()
{
  return MEMORY[0x270EEE450]();
}

uint64_t sub_219157548()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_219157558()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_219157568()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_219157578()
{
  return MEMORY[0x270EEEE58]();
}

uint64_t sub_219157588()
{
  return MEMORY[0x270EEEE60]();
}

uint64_t sub_219157598()
{
  return MEMORY[0x270EEEE68]();
}

uint64_t sub_2191575A8()
{
  return MEMORY[0x270EEEE70]();
}

uint64_t sub_2191575B8()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_2191575C8()
{
  return MEMORY[0x270EEF128]();
}

uint64_t sub_2191575D8()
{
  return MEMORY[0x270EEF760]();
}

uint64_t sub_2191575E8()
{
  return MEMORY[0x270EEF800]();
}

uint64_t sub_2191575F8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_219157608()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_219157618()
{
  return MEMORY[0x270EEFA78]();
}

uint64_t sub_219157628()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_219157638()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_219157648()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_219157658()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_219157668()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_219157678()
{
  return MEMORY[0x270EEFF58]();
}

uint64_t sub_219157688()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_219157698()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_2191576A8()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2191576B8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_2191576C8()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_2191576D8()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_2191576E8()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_2191576F8()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_219157708()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_219157718()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_219157728()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_219157738()
{
  return MEMORY[0x270EF1650]();
}

uint64_t sub_219157748()
{
  return MEMORY[0x270EF1660]();
}

uint64_t sub_219157758()
{
  return MEMORY[0x270EF16A8]();
}

uint64_t sub_219157768()
{
  return MEMORY[0x270EF16B0]();
}

uint64_t sub_219157778()
{
  return MEMORY[0x270EF16B8]();
}

uint64_t sub_219157788()
{
  return MEMORY[0x270EF16C8]();
}

uint64_t sub_219157798()
{
  return MEMORY[0x270FA11F8]();
}

uint64_t sub_2191577A8()
{
  return MEMORY[0x270FA1208]();
}

uint64_t sub_2191577B8()
{
  return MEMORY[0x270FA1238]();
}

uint64_t sub_2191577C8()
{
  return MEMORY[0x270FA1250]();
}

uint64_t sub_2191577E8()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_2191577F8()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_219157808()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_219157818()
{
  return MEMORY[0x270FA2CC0]();
}

uint64_t sub_219157828()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_219157838()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_219157848()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_219157858()
{
  return MEMORY[0x270FA2D48]();
}

uint64_t sub_219157868()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_219157878()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_219157888()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_219157898()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_2191578A8()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_2191578B8()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_2191578C8()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_2191578D8()
{
  return MEMORY[0x270F81CF8]();
}

uint64_t sub_2191578E8()
{
  return MEMORY[0x270F81D10]();
}

uint64_t sub_2191578F8()
{
  return MEMORY[0x270F821E8]();
}

uint64_t sub_219157908()
{
  return MEMORY[0x270F821F0]();
}

uint64_t sub_219157918()
{
  return MEMORY[0x270F821F8]();
}

uint64_t sub_219157928()
{
  return MEMORY[0x270F82200]();
}

uint64_t sub_219157938()
{
  return MEMORY[0x270F82220]();
}

uint64_t sub_219157948()
{
  return MEMORY[0x270F82228]();
}

uint64_t sub_219157958()
{
  return MEMORY[0x270F82230]();
}

uint64_t sub_219157968()
{
  return MEMORY[0x270F82238]();
}

uint64_t sub_219157978()
{
  return MEMORY[0x270F82248]();
}

uint64_t sub_219157988()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_219157998()
{
  return MEMORY[0x270EE3CE0]();
}

uint64_t sub_2191579A8()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_2191579B8()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_2191579C8()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t sub_2191579D8()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t sub_2191579E8()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_2191579F8()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_219157A08()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_219157A18()
{
  return MEMORY[0x270EFEC48]();
}

uint64_t sub_219157A28()
{
  return MEMORY[0x270EFEC58]();
}

uint64_t sub_219157A38()
{
  return MEMORY[0x270EFEC68]();
}

uint64_t sub_219157A48()
{
  return MEMORY[0x270EFEC70]();
}

uint64_t sub_219157A58()
{
  return MEMORY[0x270EFEC88]();
}

uint64_t sub_219157A68()
{
  return MEMORY[0x270EFECE8]();
}

uint64_t sub_219157A78()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_219157A88()
{
  return MEMORY[0x270EFEDA0]();
}

uint64_t sub_219157A98()
{
  return MEMORY[0x270EFEDA8]();
}

uint64_t sub_219157AA8()
{
  return MEMORY[0x270EFEDD0]();
}

uint64_t sub_219157AB8()
{
  return MEMORY[0x270EFEDE0]();
}

uint64_t sub_219157AC8()
{
  return MEMORY[0x270EFEDF0]();
}

uint64_t sub_219157AD8()
{
  return MEMORY[0x270EFEDF8]();
}

uint64_t sub_219157AE8()
{
  return MEMORY[0x270EFEEA0]();
}

uint64_t sub_219157AF8()
{
  return MEMORY[0x270EFEEA8]();
}

uint64_t sub_219157B08()
{
  return MEMORY[0x270EFEF50]();
}

uint64_t sub_219157B18()
{
  return MEMORY[0x270EFEFC0]();
}

uint64_t sub_219157B28()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_219157B38()
{
  return MEMORY[0x270EFEFD8]();
}

uint64_t sub_219157B48()
{
  return MEMORY[0x270EFEFE8]();
}

uint64_t sub_219157B58()
{
  return MEMORY[0x270EFF100]();
}

uint64_t sub_219157B68()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_219157B78()
{
  return MEMORY[0x270EFF118]();
}

uint64_t sub_219157B88()
{
  return MEMORY[0x270EFF170]();
}

uint64_t sub_219157B98()
{
  return MEMORY[0x270EFF1D0]();
}

uint64_t sub_219157BA8()
{
  return MEMORY[0x270EFF1E0]();
}

uint64_t sub_219157BB8()
{
  return MEMORY[0x270EFF208]();
}

uint64_t sub_219157BC8()
{
  return MEMORY[0x270EFF218]();
}

uint64_t sub_219157BD8()
{
  return MEMORY[0x270EFF220]();
}

uint64_t sub_219157BE8()
{
  return MEMORY[0x270EFF3B8]();
}

uint64_t sub_219157BF8()
{
  return MEMORY[0x270EFF3E0]();
}

uint64_t sub_219157C08()
{
  return MEMORY[0x270EFF408]();
}

uint64_t sub_219157C18()
{
  return MEMORY[0x270EFF418]();
}

uint64_t sub_219157C28()
{
  return MEMORY[0x270EFF448]();
}

uint64_t sub_219157C38()
{
  return MEMORY[0x270EFF450]();
}

uint64_t sub_219157C48()
{
  return MEMORY[0x270EFF458]();
}

uint64_t sub_219157C58()
{
  return MEMORY[0x270EFF510]();
}

uint64_t sub_219157C68()
{
  return MEMORY[0x270EFF520]();
}

uint64_t sub_219157C78()
{
  return MEMORY[0x270EFF538]();
}

uint64_t sub_219157C88()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_219157C98()
{
  return MEMORY[0x270EFF648]();
}

uint64_t sub_219157CA8()
{
  return MEMORY[0x270EFF6C0]();
}

uint64_t sub_219157CB8()
{
  return MEMORY[0x270EFF6C8]();
}

uint64_t sub_219157CC8()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_219157CD8()
{
  return MEMORY[0x270EFF6E0]();
}

uint64_t sub_219157CE8()
{
  return MEMORY[0x270EFF6E8]();
}

uint64_t sub_219157CF8()
{
  return MEMORY[0x270EFF6F8]();
}

uint64_t sub_219157D08()
{
  return MEMORY[0x270EFF800]();
}

uint64_t sub_219157D18()
{
  return MEMORY[0x270EFF850]();
}

uint64_t sub_219157D28()
{
  return MEMORY[0x270EFF888]();
}

uint64_t sub_219157D38()
{
  return MEMORY[0x270EFF898]();
}

uint64_t sub_219157D48()
{
  return MEMORY[0x270EFF908]();
}

uint64_t sub_219157D58()
{
  return MEMORY[0x270EFF980]();
}

uint64_t sub_219157D68()
{
  return MEMORY[0x270EFF988]();
}

uint64_t sub_219157D78()
{
  return MEMORY[0x270EFF990]();
}

uint64_t sub_219157D88()
{
  return MEMORY[0x270EFF998]();
}

uint64_t sub_219157D98()
{
  return MEMORY[0x270EFF9A0]();
}

uint64_t sub_219157DB8()
{
  return MEMORY[0x270EFFA08]();
}

uint64_t sub_219157DC8()
{
  return MEMORY[0x270EFFA10]();
}

uint64_t sub_219157DD8()
{
  return MEMORY[0x270EFFB08]();
}

uint64_t sub_219157DE8()
{
  return MEMORY[0x270EFFB10]();
}

uint64_t sub_219157DF8()
{
  return MEMORY[0x270EFFB18]();
}

uint64_t sub_219157E08()
{
  return MEMORY[0x270EFFB20]();
}

uint64_t sub_219157E18()
{
  return MEMORY[0x270EFFB28]();
}

uint64_t sub_219157E28()
{
  return MEMORY[0x270EFFB30]();
}

uint64_t sub_219157E38()
{
  return MEMORY[0x270EFFB38]();
}

uint64_t sub_219157E48()
{
  return MEMORY[0x270EFFB48]();
}

uint64_t sub_219157E58()
{
  return MEMORY[0x270EFFB50]();
}

uint64_t sub_219157E68()
{
  return MEMORY[0x270EFFB58]();
}

uint64_t sub_219157E78()
{
  return MEMORY[0x270EFFB80]();
}

uint64_t sub_219157E88()
{
  return MEMORY[0x270EFFB88]();
}

uint64_t sub_219157E98()
{
  return MEMORY[0x270EFFBA0]();
}

uint64_t sub_219157EA8()
{
  return MEMORY[0x270EFFBA8]();
}

uint64_t sub_219157EB8()
{
  return MEMORY[0x270EFFBB0]();
}

uint64_t sub_219157EC8()
{
  return MEMORY[0x270EFFDC8]();
}

uint64_t sub_219157ED8()
{
  return MEMORY[0x270EFFDD0]();
}

uint64_t sub_219157EE8()
{
  return MEMORY[0x270EFFDD8]();
}

uint64_t sub_219157EF8()
{
  return MEMORY[0x270EFFE28]();
}

uint64_t sub_219157F08()
{
  return MEMORY[0x270EFFE40]();
}

uint64_t sub_219157F28()
{
  return MEMORY[0x270EFFE90]();
}

uint64_t sub_219157F38()
{
  return MEMORY[0x270EFFEA8]();
}

uint64_t sub_219157F48()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_219157F58()
{
  return MEMORY[0x270F001B8]();
}

uint64_t sub_219157F68()
{
  return MEMORY[0x270F001D8]();
}

uint64_t sub_219157F78()
{
  return MEMORY[0x270F00220]();
}

uint64_t sub_219157F88()
{
  return MEMORY[0x270F00230]();
}

uint64_t sub_219157F98()
{
  return MEMORY[0x270F00240]();
}

uint64_t sub_219157FA8()
{
  return MEMORY[0x270F00248]();
}

uint64_t sub_219157FB8()
{
  return MEMORY[0x270F00340]();
}

uint64_t sub_219157FC8()
{
  return MEMORY[0x270F003C0]();
}

uint64_t sub_219157FD8()
{
  return MEMORY[0x270F003C8]();
}

uint64_t sub_219157FE8()
{
  return MEMORY[0x270F004D0]();
}

uint64_t sub_219157FF8()
{
  return MEMORY[0x270F004E8]();
}

uint64_t sub_219158008()
{
  return MEMORY[0x270F00560]();
}

uint64_t sub_219158018()
{
  return MEMORY[0x270F00578]();
}

uint64_t sub_219158028()
{
  return MEMORY[0x270F00598]();
}

uint64_t sub_219158038()
{
  return MEMORY[0x270F005D0]();
}

uint64_t sub_219158048()
{
  return MEMORY[0x270F005D8]();
}

uint64_t sub_219158058()
{
  return MEMORY[0x270F005E8]();
}

uint64_t sub_219158068()
{
  return MEMORY[0x270F005F0]();
}

uint64_t sub_219158078()
{
  return MEMORY[0x270F00608]();
}

uint64_t sub_219158088()
{
  return MEMORY[0x270F00618]();
}

uint64_t sub_219158098()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_2191580A8()
{
  return MEMORY[0x270F00820]();
}

uint64_t sub_2191580B8()
{
  return MEMORY[0x270F00828]();
}

uint64_t sub_2191580C8()
{
  return MEMORY[0x270F00838]();
}

uint64_t sub_2191580D8()
{
  return MEMORY[0x270F00840]();
}