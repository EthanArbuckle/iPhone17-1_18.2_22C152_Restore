@interface NPKPaymentWebServiceCompanionTargetDevice
+ (id)bridgedClientInfoHTTPHeader;
- (BOOL)_deviceIsConnected;
- (BOOL)_isAutoTopUpSupported;
- (BOOL)_isParallelProvisioningSupported;
- (BOOL)_isUnifiedAccessProvisioningSupported;
- (BOOL)_supportsFeaturesForWebService:(id)a3;
- (BOOL)areUnifiedAccessPassesSupported;
- (BOOL)claimSecureElementForCurrentUser;
- (BOOL)deviceSupportMultipleExpressPasses;
- (BOOL)deviceSupportTransitReminderSetting;
- (BOOL)felicaSecureElementIsAvailable;
- (BOOL)paymentWebService:(id)a3 canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)a4;
- (BOOL)paymentWebService:(id)a3 hasPassesOfType:(unint64_t)a4;
- (BOOL)paymentWebServiceSupportsAccounts:(id)a3;
- (BOOL)paymentWebServiceSupportsPeerPaymentRegistration:(id)a3;
- (BOOL)secureElementIsAvailable;
- (BOOL)supportsAutomaticPassPresentation;
- (BOOL)supportsCredentialType:(int64_t)a3;
- (BOOL)supportsExpressForAutomaticSelectionTechnologyType:(int64_t)a3;
- (BOOL)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)a3;
- (IDSService)provisioningService;
- (NPKCompanionAgentConnection)companionAgentConnection;
- (NPKCompanionPasscodeChangeCoordinatorProtocol)passcodeChangeCoordinator;
- (NPKPaymentWebServiceCompanionTargetDevice)init;
- (NPKPaymentWebServiceCompanionTargetDevice)initWithContext:(unint64_t)a3 responseQueue:(id)a4;
- (NPKPaymentWebServiceCompanionTargetDeviceDelegate)delegate;
- (NPKSubcredentialInvitationCoordinator)subcredentialInvitationCoordinator;
- (NPKTapToRadarManager)manager;
- (NPKTargetDeviceAssertionManager)remoteDeviceAssertionManager;
- (NRActiveDeviceAssertion)provisioningActiveDeviceAssertion;
- (NSMutableDictionary)outstandingRequests;
- (OS_dispatch_queue)internalQueue;
- (OS_dispatch_queue)responseQueue;
- (PUConnection)passcodeConnection;
- (id)_categoryIdentifierForPass:(id)a3;
- (id)_deviceSupportedFeatureIdentifiers;
- (id)_dummyExpressPassInformationForPass:(id)a3 fromUpgradeRequest:(id)a4;
- (id)_eligibleExpressUpgradeRequestsForPass:(id)a3;
- (id)_expressModesFromExpressPassConfigurations:(id)a3;
- (id)_expressPassConfigurationForPaymentPass:(id)a3;
- (id)_expressPassesConfigurationFromDataArray:(id)a3;
- (id)_expressPassesInformationFromDataArray:(id)a3;
- (id)_idsShortSendTimeoutProvisioningOptions;
- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4;
- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4 extraOptions:(id)a5;
- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4 extraOptions:(id)a5 priority:(int64_t)a6;
- (id)_sendProtobuf:(id)a3 responseIdentifier:(id)a4;
- (id)_serialNumbersOfAllPairedDevices;
- (id)_statusUpdaterWithResponseClass:(Class)a3 type:(unsigned __int16)a4 responseIdentifier:(id)a5;
- (id)_supportedRegionsForWebService:(id)a3;
- (id)_synthesizedExpressPassStateForExpressPassConfiguration:(id)a3 otherPaymentPasses:(id)a4;
- (id)appleAccountInformation;
- (id)bridgedClientInfo;
- (id)deviceClass;
- (id)deviceDescriptionForPaymentWebService:(id)a3;
- (id)deviceIDSIdentifier;
- (id)deviceName;
- (id)deviceSerialNumber;
- (id)deviceVersion;
- (id)osVersion;
- (id)passcodeUpgradeFlowController;
- (id)paymentWebService:(id)a3 filterVerificationChannels:(id)a4;
- (id)paymentWebService:(id)a3 passesOfType:(unint64_t)a4;
- (id)paymentWebService:(id)a3 supportedRegionFeatureOfType:(int64_t)a4;
- (id)supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:(id)a3;
- (id)supportedFeatureIdentifiersWithPaymentWebService:(id)a3;
- (id)trustedDeviceEnrollmentInfoForWebService:(id)a3;
- (id)upgradeRequestForPass:(id)a3;
- (unint64_t)context;
- (unint64_t)currentPassbookState;
- (unint64_t)paymentSupportedInCurrentRegionForWebService:(id)a3;
- (unint64_t)registrationSupportedInCurrentRegionForWebService:(id)a3;
- (unint64_t)secureElementOwnershipStateForCurrentUser;
- (void)_acquireAssertionOfType:(unint64_t)a3;
- (void)_addCompanionDevicePhoneNumberDataIfNeededWithFields:(unint64_t)a3 toDeviceMetadata:(id)a4;
- (void)_canAddSecureElementPassWithConfiguration:(id)a3 completion:(id)a4;
- (void)_checkConflictsForPass:(id)a3 withConfiguration:(id)a4 webService:(id)a5 hasDisqualifyingConflicts:(id)a6;
- (void)_checkUpgradedPasscodePolicyByApplyingRestrictions:(BOOL)a3 applyBackgroundEnforcementIfNecessary:(BOOL)a4 completion:(id)a5;
- (void)_displayableEntitlementsForPassIdentifier:(id)a3 completion:(id)a4;
- (void)_displayableSharesForPassIdentifier:(id)a3 completion:(id)a4;
- (void)_getPairingInfoAndSetAuthRandomIfNotPaired:(BOOL)a3 completion:(id)a4;
- (void)_handleOpenLoopPassUpgradeWithPass:(id)a3 webService:(id)a4 completion:(id)a5;
- (void)_invalidateAssertionOfType:(unint64_t)a3;
- (void)_multipleExpressTransitPassPaymentWebService:(id)a3 handlePotentialExpressPassConfiguration:(id)a4 pass:(id)a5 withCompletionHandler:(id)a6;
- (void)_paymentWebService:(id)a3 presentStandaloneTransaction:(int64_t)a4 forPassUniqueIdentifier:(id)a5 terminalReaderIdentifier:(id)a6 validUntilDate:(id)a7 completion:(id)a8;
- (void)_paymentWebService:(id)a3 registrationDataWithAuthToken:(id)a4 completionHandler:(id)a5;
- (void)_setNewAuthRandomIfNecessaryReturningPairingState:(id)a3;
- (void)_setNewAuthRandomReturningPairingState:(id)a3;
- (void)_singleExpressTransitPassPaymentWebService:(id)a3 handlePotentialExpressPassConfiguration:(id)a4 withCompletionHandler:(id)a5;
- (void)_trackOutstandingRequestWithMessageIdentifier:(id)a3 completionHandler:(id)a4 errorHandler:(id)a5;
- (void)_updateDataAccessorForPass:(id)a3;
- (void)acceptCarKeyShareForMessage:(id)a3 activationCode:(id)a4 completion:(id)a5;
- (void)acceptCarKeyShareForMessageResponse:(id)a3;
- (void)acceptSubcredentialInvitationResponse:(id)a3;
- (void)accountAttestationAnonymizationSaltResponse:(id)a3;
- (void)accountWithIdentifier:(id)a3 completion:(id)a4;
- (void)accountWithIdentifierResponse:(id)a3;
- (void)addISO18013Blobs:(id)a3 cardType:(int64_t)a4 completion:(id)a5;
- (void)addISO18013BlobsResponse:(id)a3;
- (void)addPendingProvisionings:(id)a3 completion:(id)a4;
- (void)addPendingProvisioningsRequest:(id)a3;
- (void)addPendingProvisioningsResponse:(id)a3;
- (void)addSecureElementPassWithPropertiesResponse:(id)a3;
- (void)archiveBackgroundContext:(id)a3;
- (void)archiveContext:(id)a3;
- (void)availableHomeKeyPassesResponse:(id)a3;
- (void)availableHomeKeyPassesWithCompletionHandler:(id)a3;
- (void)availableProductsResponse:(id)a3;
- (void)availableProductsWithCompletion:(id)a3;
- (void)balanceReminderForBalance:(id)a3 pass:(id)a4 completion:(id)a5;
- (void)balanceReminderWithBalanceAndPassResponse:(id)a3;
- (void)cacheSharingMessageFromMailboxAddress:(id)a3 message:(id)a4;
- (void)canAcceptInvitationRequest:(id)a3;
- (void)canAcceptInvitationResponse:(id)a3;
- (void)canAddSecureElementPassWithConfigurationResponse:(id)a3;
- (void)cancelAutoTopUpForPassWithUniqueIdentifier:(id)a3 balanceIdentifiers:(id)a4 completion:(id)a5;
- (void)cancelAutoTopUpResponse:(id)a3;
- (void)cancelOutstandingEnableServiceModeRequests;
- (void)cancelOutstandingRemotePassUpdateRequest:(id)a3 pass:(id)a4;
- (void)cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:(id)a3;
- (void)carKeyAcceptInvitationResponse:(id)a3;
- (void)carKeyAcceptInvitationWithInvitationIdentifier:(id)a3 activationCode:(id)a4 completion:(id)a5;
- (void)carKeyAccountAttestationRequestForCredential:(id)a3 completion:(id)a4;
- (void)carKeyAccountAttestationResponse:(id)a3;
- (void)carKeyDecryptData:(id)a3 credential:(id)a4 ephemeralPublicKey:(id)a5 completion:(id)a6;
- (void)carKeyDecryptDataResponse:(id)a3;
- (void)carKeyGetPretrackRequestForKeyWithInvitationIdentifier:(id)a3 completion:(id)a4;
- (void)carKeyGetPretrackResponse:(id)a3;
- (void)carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier:(id)a3 transportIdentifier:(id)a4 completion:(id)a5;
- (void)carKeyGetProductPlanIdentifierResponse:(id)a3;
- (void)carKeyHandleRecipientMessage:(id)a3 forInvitationIdentifier:(id)a4 completion:(id)a5;
- (void)carKeyHandleRecipientMessageResponse:(id)a3;
- (void)carKeyRejectInvitation:(id)a3 completion:(id)a4;
- (void)carKeyRejectInvitationResponse:(id)a3;
- (void)carKeyRetryActivationCodeResponse:(id)a3;
- (void)carKeyRetryActivationCodeWithInvitationIdentifier:(id)a3 activationCode:(id)a4 completion:(id)a5;
- (void)carKeyRoutingInformationForInvitationWithIdentifier:(id)a3 transportIdentifier:(id)a4 completion:(id)a5;
- (void)carKeyRoutingInformationResponse:(id)a3;
- (void)carKeySetAccountAttestation:(id)a3 forCredential:(id)a4 completion:(id)a5;
- (void)carKeySetAccountAttestationResponse:(id)a3;
- (void)carKeySetEncryptedProductPlanIdentifierContainer:(id)a3 invitationIdentifier:(id)a4 completion:(id)a5;
- (void)carKeySetEncryptedProductPlanIdentifierContainerResponse:(id)a3;
- (void)carKeyStartShareAcceptanceFlow:(id)a3 transportIdentifier:(id)a4 completion:(id)a5;
- (void)carKeyStartShareAcceptanceFlowResponse:(id)a3;
- (void)carKeyUpdateTrackingAttestation:(id)a3 forCredential:(id)a4 encryptedContainer:(id)a5 completion:(id)a6;
- (void)carKeyUpdateTrackingAttestationResponse:(id)a3;
- (void)checkCompanionPeerPaymentRegistrationState:(id)a3;
- (void)checkFidoKeyPresenceForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 fidoKeyHash:(id)a5 completion:(id)a6;
- (void)checkFidoKeyResponse:(id)a3;
- (void)checkInvitationStatusForMailboxAddress:(id)a3 completion:(id)a4;
- (void)checkInvitationStatusForMailboxAddressResponse:(id)a3;
- (void)checkTLKsMissingResponse:(id)a3;
- (void)checkTLKsMissingWithCompletion:(id)a3;
- (void)claimSecureElementForCurrentUserWithCompletion:(id)a3;
- (void)cloudStoreStatusResponse:(id)a3;
- (void)cloudStoreStatusWithCompletion:(id)a3;
- (void)commutePlanReminderForCommutePlan:(id)a3 pass:(id)a4 withCompletion:(id)a5;
- (void)commutePlanReminderWithCommutePlanAndPassResponse:(id)a3;
- (void)configurationDataResponse:(id)a3;
- (void)conflictingExpressPassIdentifiersForPassConfiguration:(id)a3 completion:(id)a4;
- (void)conflictingExpressPassIdentifiersForPassConfiguration:(id)a3 withReferenceExpressState:(id)a4 completion:(id)a5;
- (void)conflictingExpressPassIdentifiersForPassInformationResponse:(id)a3;
- (void)consistencyCheck;
- (void)createFidoKeyForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 challenge:(id)a5 externalizedAuth:(id)a6 completion:(id)a7;
- (void)createFidoKeyResponse:(id)a3;
- (void)createShareForPartialShareInvitation:(id)a3 authorization:(id)a4 completion:(id)a5;
- (void)createShareForPartialShareInvitationResponse:(id)a3;
- (void)currentPasscodeMeetsUpgradedPasscodePolicy:(id)a3;
- (void)currentSecureElementSnapshot:(id)a3;
- (void)currentSecureElementSnapshotResponse:(id)a3;
- (void)declineRelatedSharingInvitationsIfNecessaryRequest:(id)a3;
- (void)declineRelatedSharingInvitationsIfNecessaryResponse:(id)a3;
- (void)deleteKeyMaterialForSubCredentialId:(id)a3;
- (void)deleteReservation:(id)a3 completion:(id)a4;
- (void)deleteReservationResponse:(id)a3;
- (void)deviceMetadataResponse:(id)a3;
- (void)didRegisterResponse:(id)a3;
- (void)dismissRemoteDevicePasscodeUpgradePromptWithCompletion:(id)a3;
- (void)displayableEntitlementsForPassIdentifier:(id)a3 completion:(id)a4;
- (void)displayableEntitlementsForPassIdentifierResponse:(id)a3;
- (void)displayableSharesForPassIdentifier:(id)a3 completion:(id)a4;
- (void)displayableSharesForPassIdentifierResponse:(id)a3;
- (void)downloadAllPaymentPasses:(id)a3;
- (void)downloadAllPaymentPassesForPaymentWebService:(id)a3;
- (void)dumpLogsResponse:(id)a3;
- (void)dumpLogsWithCompletion:(id)a3;
- (void)enableServiceModeForPassWithUniqueIdentifier:(id)a3 completion:(id)a4;
- (void)enableServiceModeResponse:(id)a3;
- (void)encryptedServiceProviderDataForSecureElementPass:(id)a3 completion:(id)a4;
- (void)endRequiringUpgradedPasscodeIfNecessary;
- (void)enforceUpgradedPasscodePolicyWithCompletion:(id)a3;
- (void)exitPasscodeUpgradeForPasscodeUpgradeFlowController:(id)a3 withShouldContinue:(BOOL)a4 error:(id)a5;
- (void)expressModeEnabledForPassIdentifier:(id)a3 completion:(id)a4;
- (void)familyMembersWithCompletion:(id)a3;
- (void)featureApplicationsForAccountIdentifier:(id)a3 completion:(id)a4;
- (void)featureApplicationsForAccountIdentifierResponse:(id)a3;
- (void)fetchOrInitializeAccountAttestationAnonymizationSaltRequest:(id)a3;
- (void)fetchRemoteDevicePasscodeStateWithCompletion:(id)a3;
- (void)generateAuxiliaryCapabilitiesForRequirements:(id)a3 completion:(id)a4;
- (void)generateAuxiliaryCapabilitiesResponse:(id)a3;
- (void)generateISOEncryptionCertificateForSubCredentialId:(id)a3 completion:(id)a4;
- (void)generateISOEncryptionCertificateForSubCredentialIdResponse:(id)a3;
- (void)generateSEEncryptionCertificateForSubCredentialId:(id)a3 completion:(id)a4;
- (void)generateSEEncryptionCertificateForSubCredentialIdResponse:(id)a3;
- (void)generateTransactionKeyWithParametersResponse:(id)a3;
- (void)getPairingInfoResponse:(id)a3;
- (void)handleAcceptSubcredentialProvisioningForMailboxAddressRequest:(id)a3;
- (void)handleAcceptSubcredentialProvisioningRequest:(id)a3;
- (void)handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse:(id)a3;
- (void)handleBalanceChange:(id)a3;
- (void)handleBalanceReminderWithBalanceAndPassRequest:(id)a3;
- (void)handleCheckUpgradedPasscodePolicyResponse:(id)a3;
- (void)handleCompanionMigrationResponse:(id)a3;
- (void)handleCompanionMigrationWithCompletion:(id)a3;
- (void)handleCompanionPeerPaymentRegistration;
- (void)handleCompanioniCloudSignout;
- (void)handleCredentialsChange:(id)a3;
- (void)handleDeletePaymentTransactionWithIdentifier:(id)a3 passUniqueIdentifier:(id)a4;
- (void)handleDeviceUnlockedForPendingProvisioningRequest:(id)a3;
- (void)handlePasscodeUpgradeFlowShouldExitRequest:(id)a3;
- (void)handlePaymentTransactions:(id)a3;
- (void)handlePeerPaymentTermsAndConditionsAcceptanceRequest:(id)a3;
- (void)handlePendingRemovalOfPaymentPass:(id)a3 uniqueID:(id)a4 completion:(id)a5;
- (void)handlePreferredAID:(id)a3 forPassWithUniqueID:(id)a4 completion:(id)a5;
- (void)handleRemoteDevicePasscodeStateResponse:(id)a3;
- (void)handleRemoteDevicePasscodeUpgradePresentationPromptResponse:(id)a3;
- (void)handleRemovedTransaction:(id)a3;
- (void)handleShowPaymentSetupRequest:(id)a3;
- (void)handleTransactionDefaultsNeededRequest:(id)a3;
- (void)handleUpdatedAppletState:(id)a3;
- (void)handleUpdatedPeerPaymentWebServiceContext:(id)a3;
- (void)handleValueAddedServiceTransactions:(id)a3;
- (void)handleWebServiceContextDidChangeRequest:(id)a3;
- (void)handleWebServiceContextNeededRequest:(id)a3;
- (void)hasActiveExternallySharedPasses:(id)a3;
- (void)hasActiveExternallySharedPassesResponse:(id)a3;
- (void)hasActiveExternallySharedPassesWithCompletion:(id)a3;
- (void)initializeCloudStoreIfNecessaryResponse:(id)a3;
- (void)initializeCloudStoreIfNecessaryWithCompletion:(id)a3;
- (void)initializeCloudStoreIfNecessaryWithHandler:(id)a3;
- (void)initializeCloudStoreIfNecessaryWithHandlerResponse:(id)a3;
- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(id)a3 reuseExisting:(BOOL)a4 completion:(id)a5;
- (void)longTermPrivacyKeyForCredentialGroupIdentifierResponse:(id)a3;
- (void)markAllAppletsForDeletionResponse:(id)a3;
- (void)markAllAppletsForDeletionWithCompletion:(id)a3;
- (void)matchingCredentialOnDeviceResponse:(id)a3;
- (void)noteForegroundVerificationObserverActive:(BOOL)a3;
- (void)noteProvisioningDidBegin;
- (void)noteProvisioningDidEnd;
- (void)noteProvisioningUserInterfaceDidAppear;
- (void)noteProvisioningUserInterfaceDidDisappear;
- (void)openURLWithRequest:(id)a3;
- (void)passSharesForCredentialIdentifierResponse:(id)a3;
- (void)passcodeChangeCoordinator:(id)a3 checkRemoteDeviceLockStateWithCompletion:(id)a4;
- (void)passcodeChangeCoordinator:(id)a3 remoteDeviceShouldCancelPasscodeChangeWithCompletion:(id)a4;
- (void)passcodeChangeCoordinator:(id)a3 remoteDeviceShouldInitiatePasscodeChangeForType:(unint64_t)a4 completion:(id)a5;
- (void)paymentSetupFeaturesForConfiguration:(id)a3 completion:(id)a4;
- (void)paymentSetupFeaturesForConfigurationResponse:(id)a3;
- (void)paymentWebService:(id)a3 acceptSubcredentialInvitation:(id)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 acceptSubcredentialInvitationWithIdentifier:(id)a4 metadata:(id)a5 completion:(id)a6;
- (void)paymentWebService:(id)a3 accountAttestationAnonymizationSaltWithCompletion:(id)a4;
- (void)paymentWebService:(id)a3 addPaymentPass:(id)a4 withCompletionHandler:(id)a5;
- (void)paymentWebService:(id)a3 addSecureElementPass:(id)a4 properties:(id)a5 completion:(id)a6;
- (void)paymentWebService:(id)a3 canAcceptInvitation:(id)a4 withCompletionV2:(id)a5;
- (void)paymentWebService:(id)a3 canAddSecureElementPassWithConfiguration:(id)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 canHandlePotentialExpressPass:(id)a4 withCompletionHandler:(id)a5;
- (void)paymentWebService:(id)a3 configurationDataWithCompletionHandler:(id)a4;
- (void)paymentWebService:(id)a3 declineRelatedSharingInvitationsIfNecessary:(id)a4 withCompletion:(id)a5;
- (void)paymentWebService:(id)a3 deleteApplicationWithAID:(id)a4;
- (void)paymentWebService:(id)a3 deviceMetadataWithFields:(unint64_t)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 didRegisterWithRegionMap:(id)a4;
- (void)paymentWebService:(id)a3 didRegisterWithRegionMap:(id)a4 primaryRegionTopic:(id)a5;
- (void)paymentWebService:(id)a3 generateTransactionKeyWithParameters:(id)a4 withCompletion:(id)a5;
- (void)paymentWebService:(id)a3 handlePotentialExpressPass:(id)a4 withCompletionHandler:(id)a5;
- (void)paymentWebService:(id)a3 matchingInvitationOnDevice:(id)a4 withTimeout:(unint64_t)a5 completion:(id)a6;
- (void)paymentWebService:(id)a3 passOwnershipTokenWithIdentifier:(id)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 passSharesForCredentialIdentifier:(id)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 presentStandaloneTransaction:(int64_t)a4 forPassUniqueIdentifier:(id)a5 terminalReaderIdentifier:(id)a6 completion:(id)a7;
- (void)paymentWebService:(id)a3 provisioningDataIncludingDeviceMetadata:(BOOL)a4 withCompletionHandler:(id)a5;
- (void)paymentWebService:(id)a3 queueConnectionToTrustedServiceManagerForPushTopic:(id)a4 withCompletion:(id)a5;
- (void)paymentWebService:(id)a3 registrationDataWithCompletionHandler:(id)a4;
- (void)paymentWebService:(id)a3 removePass:(id)a4 withCompletionHandler:(id)a5;
- (void)paymentWebService:(id)a3 removeSharingInvitation:(id)a4 withCompletion:(id)a5;
- (void)paymentWebService:(id)a3 requestPassUpgrade:(id)a4 pass:(id)a5 completion:(id)a6;
- (void)paymentWebService:(id)a3 requestSubcredentialInvitation:(id)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 setAccountAttestationAnonymizationSalt:(id)a4 withCompletion:(id)a5;
- (void)paymentWebService:(id)a3 setDefaultPaymentPassUniqueIdentifier:(id)a4;
- (void)paymentWebService:(id)a3 setNewAuthRandom:(id)a4;
- (void)paymentWebService:(id)a3 setNewAuthRandomIfNecessaryReturningPairingState:(id)a4;
- (void)paymentWebService:(id)a3 signData:(id)a4 signatureEntanglementMode:(unint64_t)a5 withCompletionHandler:(id)a6;
- (void)paymentWebService:(id)a3 signData:(id)a4 withCompletionHandler:(id)a5;
- (void)paymentWebService:(id)a3 subcredentialInvitationsWithCompletion:(id)a4;
- (void)paymentWebService:(id)a3 updateAccountWithIdentifier:(id)a4 completion:(id)a5;
- (void)paymentWebService:(id)a3 updateMetadataOnPass:(id)a4 withCredential:(id)a5 completion:(id)a6;
- (void)paymentWebService:(id)a3 validateAddBiometricPassPreconditionsWithCompletion:(id)a4;
- (void)paymentWebService:(id)a3 validateAddPreconditionsWithCompletion:(id)a4;
- (void)paymentWebService:(id)a3 validateTransferPreconditionsWithCompletion:(id)a4;
- (void)paymentWebServiceDidUpdateConfiguration:(id)a3;
- (void)paymentWebServiceOwnershipTokenResponse:(id)a3;
- (void)paymentWebServiceRegisterResponse:(id)a3;
- (void)peerPaymentRegisterResponse:(id)a3;
- (void)peerPaymentRegisterWithURL:(id)a3 forceReRegistration:(BOOL)a4 completion:(id)a5;
- (void)peerPaymentUnregisterResponse:(id)a3;
- (void)peerPaymentUnregisterWithCompletion:(id)a3;
- (void)pendingRemovalResponse:(id)a3;
- (void)performDeviceCheckInResponse:(id)a3;
- (void)performDeviceCheckInWithCompletion:(id)a3;
- (void)performDeviceRegistrationForReason:(id)a3 brokerURL:(id)a4 completion:(id)a5;
- (void)performProductActionRequest:(id)a3 completion:(id)a4;
- (void)performProductActionResponse:(id)a3;
- (void)photosForFamilyMembersWithDSIDs:(id)a3 completion:(id)a4;
- (void)photosForFamilyMembersWithDSIDsResponse:(id)a3;
- (void)preconditionNotMet:(id)a3;
- (void)preferredAIDRequest:(id)a3;
- (void)preferredAIDResponse:(id)a3;
- (void)prepareProvisioningTarget:(id)a3 checkFamilyCircle:(BOOL)a4 completion:(id)a5;
- (void)prepareProvisioningTargetResponse:(id)a3;
- (void)presentRemoteDevicePasscodeUpgradePromptForChangeType:(unint64_t)a3 completion:(id)a4;
- (void)presentStandaloneTransactionForPassUniqueIdentifierResponse:(id)a3;
- (void)prewarmCreateShareForPassIdentifier:(id)a3 completion:(id)a4;
- (void)prewarmCreateShareForPassIdentifierResponse:(id)a3;
- (void)productsWithRequest:(id)a3 completion:(id)a4;
- (void)provisionHomeKeyPassForSerialNumbers:(id)a3 completionHandler:(id)a4;
- (void)provisionHomeKeyPassForSerialNumbersResponse:(id)a3;
- (void)provisionPassForRemoteCredentialWithType:(int64_t)a3 andIdentifier:(id)a4 completion:(id)a5;
- (void)provisionPassForRemoteCredentialWithTypeAndIdentifierResponse:(id)a3;
- (void)provisionPeerPaymentPassResponse:(id)a3;
- (void)provisionPeerPaymentPassWithCompletion:(id)a3;
- (void)provisioningDataResponse:(id)a3;
- (void)queueTSMConnectionResponse:(id)a3;
- (void)registerCredentialsResponse:(id)a3;
- (void)registerCredentialsWithIdentifiers:(id)a3 completion:(id)a4;
- (void)registrationDataResponse:(id)a3;
- (void)remotePassUpgradeResponse:(id)a3;
- (void)remotePassUpgradeWithRequest:(id)a3 pass:(id)a4 requireAuthorization:(BOOL)a5 notifyUserOnPairedDevice:(BOOL)a6 updateBlock:(id)a7;
- (void)removeAIDsFromSecureElement:(id)a3 withCompletion:(id)a4;
- (void)removeExpressPassWithUniqueIdentifier:(id)a3 completion:(id)a4;
- (void)removeExpressPassWithUniqueIdentifierResponse:(id)a3;
- (void)removeSharingInvitationResponse:(id)a3;
- (void)renewAppleAccountWithCompletionHandler:(id)a3;
- (void)requestAndStoreExternalizedAuthWithCompletion:(id)a3;
- (void)requestAndStoreExternalizedAuthWithCompletionResponse:(id)a3;
- (void)requestAutomaticProvisioningForCompanionPaymentPass:(id)a3;
- (void)requestPasscodeUpgradeForPasscodeUpgradeFlowController:(id)a3 withVisibleViewController:(id)a4 completion:(id)a5;
- (void)requestSubcredentialInvitationResponse:(id)a3;
- (void)reserveStorageForAppletTypes:(id)a3 metadata:(id)a4 completion:(id)a5;
- (void)reserveStorageForAppletTypesResponse:(id)a3;
- (void)resetApplePayManateeViewResponse:(id)a3;
- (void)resetApplePayManateeViewWithCompletion:(id)a3;
- (void)retrieveShareInvitationForMailboxAddress:(id)a3 completion:(id)a4;
- (void)retrieveShareInvitationForMailboxAddressResponse:(id)a3;
- (void)retrieveTransactionsForPassWithUniqueID:(id)a3;
- (void)revokeCredentialsResponse:(id)a3;
- (void)revokeCredentialsWithIdentifiers:(id)a3 completion:(id)a4;
- (void)revokeShareForPassIdentifier:(id)a3 share:(id)a4 shouldCascade:(BOOL)a5 completion:(id)a6;
- (void)revokeShareForPassIdentifierResponse:(id)a3;
- (void)secureElementAppletsWithCompletion:(id)a3;
- (void)secureElementGetAppletsResponse:(id)a3;
- (void)secureElementRemoveAppletsResponse:(id)a3;
- (void)sendPaymentOptionsDefaultsToWatch;
- (void)sendWebServiceContextToWatch:(id)a3;
- (void)service:(id)a3 account:(id)a4 identifier:(id)a5 didSendWithSuccess:(BOOL)a6 error:(id)a7;
- (void)service:(id)a3 account:(id)a4 incomingUnhandledProtobuf:(id)a5 fromID:(id)a6 context:(id)a7;
- (void)service:(id)a3 activeAccountsChanged:(id)a4;
- (void)service:(id)a3 devicesChanged:(id)a4;
- (void)serviceProviderDataForPassWithUniqueIdentifier:(id)a3 encrypted:(BOOL)a4 completion:(id)a5;
- (void)serviceProviderDataForPassWithUniqueIdentifierResponse:(id)a3;
- (void)serviceProviderDataForSecureElementPass:(id)a3 encrypted:(BOOL)a4 completion:(id)a5;
- (void)setAccountAttestationAnonymizationSaltResponse:(id)a3;
- (void)setBalanceReminder:(id)a3 forBalance:(id)a4 pass:(id)a5 completion:(id)a6;
- (void)setBalanceReminderWithBalanceAndPassResponse:(id)a3;
- (void)setCommutePlanReminder:(id)a3 forCommutePlan:(id)a4 pass:(id)a5 completion:(id)a6;
- (void)setCommutePlanReminderWithCommutePlanAndPassResponse:(id)a3;
- (void)setCompanionAgentConnection:(id)a3;
- (void)setContext:(unint64_t)a3;
- (void)setDelegate:(id)a3;
- (void)setExpressPassResponse:(id)a3;
- (void)setExpressWithPassConfiguration:(id)a3 requestAuthorization:(BOOL)a4 completion:(id)a5;
- (void)setInternalQueue:(id)a3;
- (void)setManager:(id)a3;
- (void)setMaximumPaymentCards:(unint64_t)a3;
- (void)setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:(id)a3;
- (void)setNewAuthRandomResponse:(id)a3;
- (void)setOutstandingRequests:(id)a3;
- (void)setPasscodeChangeCoordinator:(id)a3;
- (void)setPasscodeConnection:(id)a3;
- (void)setPasscodeUpgradeFlowController:(id)a3;
- (void)setPeerPaymentPreferences:(id)a3 completion:(id)a4;
- (void)setPeerPaymentPreferencesResponse:(id)a3;
- (void)setProvisioningActiveDeviceAssertion:(id)a3;
- (void)setProvisioningService:(id)a3;
- (void)setRemoteDeviceAssertionManager:(id)a3;
- (void)setResponseQueue:(id)a3;
- (void)setSubcredentialInvitationCoordinator:(id)a3;
- (void)signDataResponse:(id)a3;
- (void)signWithFidoKeyForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 fidoKeyHash:(id)a5 challenge:(id)a6 publicKeyIdentifier:(id)a7 externalizedAuth:(id)a8 completion:(id)a9;
- (void)signWithFidoKeyResponse:(id)a3;
- (void)startBackgroundVerificationObserverForPass:(id)a3 verificationMethod:(id)a4;
- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(BOOL)a3;
- (void)statusForShareableCredentials:(id)a3 completion:(id)a4;
- (void)statusForShareableCredentialsResponse:(id)a3;
- (void)subcredentialInvitationsResponse:(id)a3;
- (void)triggerCloudStoreZoneCreationForAccount:(id)a3 withCompletion:(id)a4;
- (void)triggerCloudStoreZoneCreationForAccountResponse:(id)a3;
- (void)updateAccountWithIdentifierResponse:(id)a3;
- (void)updatePaymentPass:(id)a3;
- (void)updatePeerPaymentAccountResponse:(id)a3;
- (void)updatePeerPaymentAccountWithCompletion:(id)a3;
- (void)updatePushToken:(id)a3;
- (void)updateShareForPassIdentifier:(id)a3 share:(id)a4 authorization:(id)a5 completion:(id)a6;
- (void)updateShareForPassIdentifierResponse:(id)a3;
- (void)updateSubcredentialMetadataResponse:(id)a3;
- (void)updatedAccountsForProvisioningWithCompletion:(id)a3;
@end

@implementation NPKPaymentWebServiceCompanionTargetDevice

- (BOOL)_isUnifiedAccessProvisioningSupported
{
  v2 = NPKPairedOrPairingDevice();
  v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"AD3C8B62-1FB2-4A7A-ABF1-EBD5AF574209"];
  char v4 = [v2 supportsCapability:v3];

  return v4;
}

- (BOOL)_isParallelProvisioningSupported
{
  v2 = NPKPairedOrPairingDevice();
  v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"94251CFF-6FD3-4126-9C80-71C8FC8F9F6C"];
  char v4 = [v2 supportsCapability:v3];

  return v4;
}

- (BOOL)_isAutoTopUpSupported
{
  v2 = NPKPairedOrPairingDevice();
  v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"763A8A6B-1D96-4298-878A-A0FF3C627D79"];
  char v4 = [v2 supportsCapability:v3];

  return v4;
}

+ (id)bridgedClientInfoHTTPHeader
{
  v2 = NPKPairedOrPairingDevice();
  v21 = [v2 valueForProperty:*MEMORY[0x263F57628]];
  v20 = [v2 valueForProperty:*MEMORY[0x263F57660]];
  v19 = [v2 valueForProperty:*MEMORY[0x263F57668]];
  v18 = [v2 valueForProperty:*MEMORY[0x263F57658]];
  v17 = [NSString stringWithFormat:@"%@", v21];
  v3 = [NSString stringWithFormat:@"%@;%@;%@", v20, v19, v18];
  char v4 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
  v5 = [v4 infoDictionary];
  uint64_t v6 = *MEMORY[0x263EFFB70];
  v7 = [v5 objectForKey:*MEMORY[0x263EFFB70]];

  v8 = [MEMORY[0x263F086E0] mainBundle];
  v9 = [v8 infoDictionary];
  v10 = [v9 objectForKey:v6];

  v11 = NSString;
  v12 = [v4 bundleIdentifier];
  v13 = [v8 bundleIdentifier];
  v14 = [v11 stringWithFormat:@"%@/%@ (%@/%@)", v12, v7, v13, v10];

  v15 = [NSString stringWithFormat:@"<%@> <%@> <%@>", v17, v3, v14];

  return v15;
}

- (NPKPaymentWebServiceCompanionTargetDevice)init
{
  return [(NPKPaymentWebServiceCompanionTargetDevice *)self initWithContext:0 responseQueue:MEMORY[0x263EF83A0]];
}

- (NPKPaymentWebServiceCompanionTargetDevice)initWithContext:(unint64_t)a3 responseQueue:(id)a4
{
  id v6 = a4;
  v16.receiver = self;
  v16.super_class = (Class)NPKPaymentWebServiceCompanionTargetDevice;
  v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)&v16 init];
  v8 = v7;
  if (v7)
  {
    [(NPKPaymentWebServiceCompanionTargetDevice *)v7 setResponseQueue:v6];
    [(NPKPaymentWebServiceCompanionTargetDevice *)v8 setContext:a3];
    if (a3 == 1) {
      v9 = @"com.apple.private.alloy.passbook.maintenance";
    }
    else {
      v9 = @"com.apple.private.alloy.passbook.provisioning";
    }
    v10 = (void *)[objc_alloc(MEMORY[0x263F4A0C0]) initWithService:v9];
    [v10 setProtobufAction:sel_queueTSMConnectionResponse_ forIncomingResponsesOfType:1];
    [v10 setProtobufAction:sel_provisioningDataResponse_ forIncomingResponsesOfType:2];
    [v10 setProtobufAction:sel_registrationDataResponse_ forIncomingResponsesOfType:3];
    [v10 setProtobufAction:sel_configurationDataResponse_ forIncomingResponsesOfType:4];
    [v10 setProtobufAction:sel_signDataResponse_ forIncomingResponsesOfType:14];
    [v10 setProtobufAction:sel_secureElementGetAppletsResponse_ forIncomingResponsesOfType:5];
    [v10 setProtobufAction:sel_secureElementRemoveAppletsResponse_ forIncomingResponsesOfType:6];
    [v10 setProtobufAction:sel_setNewAuthRandomResponse_ forIncomingResponsesOfType:7];
    [v10 setProtobufAction:sel_didRegisterResponse_ forIncomingResponsesOfType:8];
    [v10 setProtobufAction:sel_dumpLogsResponse_ forIncomingResponsesOfType:9];
    [v10 setProtobufAction:sel_pendingRemovalResponse_ forIncomingResponsesOfType:12];
    [v10 setProtobufAction:sel_updatePaymentPass_ forIncomingRequestsOfType:10];
    [v10 setProtobufAction:sel_updatePushToken_ forIncomingRequestsOfType:11];
    [v10 setProtobufAction:sel_preconditionNotMet_ forIncomingRequestsOfType:13];
    [v10 setProtobufAction:sel_handleValueAddedServiceTransactions_ forIncomingRequestsOfType:15];
    [v10 setProtobufAction:sel_preferredAIDRequest_ forIncomingRequestsOfType:16];
    [v10 setProtobufAction:sel_preferredAIDResponse_ forIncomingResponsesOfType:16];
    [v10 setProtobufAction:sel_handleWebServiceContextDidChangeRequest_ forIncomingRequestsOfType:17];
    [v10 setProtobufAction:sel_handleWebServiceContextNeededRequest_ forIncomingRequestsOfType:18];
    [v10 setProtobufAction:sel_handlePaymentTransactions_ forIncomingRequestsOfType:19];
    [v10 setProtobufAction:sel_handlePaymentTransactions_ forIncomingResponsesOfType:20];
    [v10 setProtobufAction:sel_handleRemovedTransaction_ forIncomingRequestsOfType:26];
    [v10 setProtobufAction:sel_setExpressPassResponse_ forIncomingResponsesOfType:22];
    [v10 setProtobufAction:sel_removeExpressPassWithUniqueIdentifierResponse_ forIncomingResponsesOfType:46];
    [v10 setProtobufAction:sel_conflictingExpressPassIdentifiersForPassInformationResponse_ forIncomingResponsesOfType:53];
    [v10 setProtobufAction:sel_handleBalanceReminderWithBalanceAndPassRequest_ forIncomingRequestsOfType:57];
    [v10 setProtobufAction:sel_setBalanceReminderWithBalanceAndPassResponse_ forIncomingResponsesOfType:57];
    [v10 setProtobufAction:sel_setCommutePlanReminderWithCommutePlanAndPassResponse_ forIncomingResponsesOfType:58];
    [v10 setProtobufAction:sel_balanceReminderWithBalanceAndPassResponse_ forIncomingResponsesOfType:65];
    [v10 setProtobufAction:sel_commutePlanReminderWithCommutePlanAndPassResponse_ forIncomingResponsesOfType:66];
    [v10 setProtobufAction:sel_handleUpdatedAppletState_ forIncomingRequestsOfType:25];
    [v10 setProtobufAction:sel_getPairingInfoResponse_ forIncomingResponsesOfType:21];
    [v10 setProtobufAction:sel_handleShowPaymentSetupRequest_ forIncomingRequestsOfType:24];
    [v10 setProtobufAction:sel_enableServiceModeResponse_ forIncomingResponsesOfType:27];
    [v10 setProtobufAction:sel_handleTransactionDefaultsNeededRequest_ forIncomingRequestsOfType:28];
    [v10 setProtobufAction:sel_handleCompanionMigrationResponse_ forIncomingResponsesOfType:30];
    [v10 setProtobufAction:sel_peerPaymentRegisterResponse_ forIncomingResponsesOfType:31];
    [v10 setProtobufAction:sel_peerPaymentUnregisterResponse_ forIncomingResponsesOfType:32];
    [v10 setProtobufAction:sel_handleUpdatedPeerPaymentWebServiceContext_ forIncomingRequestsOfType:33];
    [v10 setProtobufAction:sel_provisionPeerPaymentPassResponse_ forIncomingResponsesOfType:34];
    [v10 setProtobufAction:sel_updatePeerPaymentAccountResponse_ forIncomingResponsesOfType:48];
    [v10 setProtobufAction:sel_setPeerPaymentPreferencesResponse_ forIncomingResponsesOfType:88];
    [v10 setProtobufAction:sel_triggerCloudStoreZoneCreationForAccountResponse_ forIncomingResponsesOfType:130];
    [v10 setProtobufAction:sel_provisionPassForRemoteCredentialWithTypeAndIdentifierResponse_ forIncomingResponsesOfType:131];
    [v10 setProtobufAction:sel_openURLWithRequest_ forIncomingRequestsOfType:60];
    [v10 setProtobufAction:sel_handlePeerPaymentTermsAndConditionsAcceptanceRequest_ forIncomingRequestsOfType:40];
    [v10 setProtobufAction:sel_deviceMetadataResponse_ forIncomingResponsesOfType:54];
    [v10 setProtobufAction:sel_updateAccountWithIdentifierResponse_ forIncomingResponsesOfType:55];
    [v10 setProtobufAction:sel_accountWithIdentifierResponse_ forIncomingResponsesOfType:133];
    [v10 setProtobufAction:sel_handleDeviceUnlockedForPendingProvisioningRequest_ forIncomingRequestsOfType:56];
    [v10 setProtobufAction:sel_performDeviceCheckInResponse_ forIncomingResponsesOfType:62];
    [v10 setProtobufAction:sel_availableProductsResponse_ forIncomingResponsesOfType:63];
    [v10 setProtobufAction:sel_performProductActionResponse_ forIncomingResponsesOfType:64];
    [v10 setProtobufAction:sel_checkTLKsMissingResponse_ forIncomingResponsesOfType:41];
    [v10 setProtobufAction:sel_initializeCloudStoreIfNecessaryWithHandlerResponse_ forIncomingResponsesOfType:42];
    [v10 setProtobufAction:sel_resetApplePayManateeViewResponse_ forIncomingResponsesOfType:43];
    [v10 setProtobufAction:sel_downloadAllPaymentPasses_ forIncomingRequestsOfType:35];
    [v10 setProtobufAction:sel_checkCompanionPeerPaymentRegistrationState_ forIncomingRequestsOfType:37];
    [v10 setProtobufAction:sel_initializeCloudStoreIfNecessaryResponse_ forIncomingResponsesOfType:38];
    [v10 setProtobufAction:sel_cloudStoreStatusResponse_ forIncomingResponsesOfType:39];
    [v10 setProtobufAction:sel_markAllAppletsForDeletionResponse_ forIncomingResponsesOfType:44];
    [v10 setProtobufAction:sel_handleBalanceChange_ forIncomingRequestsOfType:47];
    [v10 setProtobufAction:sel_remotePassUpgradeResponse_ forIncomingResponsesOfType:50];
    [v10 setProtobufAction:sel_handleCheckUpgradedPasscodePolicyResponse_ forIncomingResponsesOfType:61];
    [v10 setProtobufAction:sel_handleRemoteDevicePasscodeUpgradePresentationPromptResponse_ forIncomingResponsesOfType:108];
    [v10 setProtobufAction:sel_handlePasscodeUpgradeFlowShouldExitRequest_ forIncomingRequestsOfType:67];
    [v10 setProtobufAction:sel_handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse_ forIncomingResponsesOfType:68];
    [v10 setProtobufAction:sel_handleRemoteDevicePasscodeStateResponse_ forIncomingResponsesOfType:109];
    [v10 setProtobufAction:sel_subcredentialInvitationsResponse_ forIncomingResponsesOfType:70];
    [v10 setProtobufAction:sel_acceptSubcredentialInvitationResponse_ forIncomingResponsesOfType:71];
    [v10 setProtobufAction:sel_acceptSubcredentialInvitationResponse_ forIncomingResponsesOfType:122];
    [v10 setProtobufAction:sel_matchingCredentialOnDeviceResponse_ forIncomingResponsesOfType:72];
    [v10 setProtobufAction:sel_canAddSecureElementPassWithConfigurationResponse_ forIncomingResponsesOfType:90];
    [v10 setProtobufAction:sel_canAcceptInvitationRequest_ forIncomingRequestsOfType:73];
    [v10 setProtobufAction:sel_canAcceptInvitationResponse_ forIncomingResponsesOfType:73];
    [v10 setProtobufAction:sel_handleAcceptSubcredentialProvisioningRequest_ forIncomingRequestsOfType:122];
    [v10 setProtobufAction:sel_handleAcceptSubcredentialProvisioningRequest_ forIncomingRequestsOfType:71];
    [v10 setProtobufAction:sel_fetchOrInitializeAccountAttestationAnonymizationSaltRequest_ forIncomingRequestsOfType:74];
    [v10 setProtobufAction:sel_accountAttestationAnonymizationSaltResponse_ forIncomingResponsesOfType:74];
    [v10 setProtobufAction:sel_setAccountAttestationAnonymizationSaltResponse_ forIncomingResponsesOfType:75];
    [v10 setProtobufAction:sel_requestSubcredentialInvitationResponse_ forIncomingResponsesOfType:76];
    [v10 setProtobufAction:sel_updateSubcredentialMetadataResponse_ forIncomingResponsesOfType:77];
    [v10 setProtobufAction:sel_registerCredentialsResponse_ forIncomingResponsesOfType:78];
    [v10 setProtobufAction:sel_revokeCredentialsResponse_ forIncomingResponsesOfType:79];
    [v10 setProtobufAction:sel_removeSharingInvitationResponse_ forIncomingResponsesOfType:80];
    [v10 setProtobufAction:sel_handleCredentialsChange_ forIncomingRequestsOfType:81];
    [v10 setProtobufAction:sel_declineRelatedSharingInvitationsIfNecessaryRequest_ forIncomingRequestsOfType:82];
    [v10 setProtobufAction:sel_declineRelatedSharingInvitationsIfNecessaryResponse_ forIncomingResponsesOfType:82];
    [v10 setProtobufAction:sel_photosForFamilyMembersWithDSIDsResponse_ forIncomingResponsesOfType:87];
    [v10 setProtobufAction:sel_featureApplicationsForAccountIdentifierResponse_ forIncomingResponsesOfType:89];
    [v10 setProtobufAction:sel_provisionHomeKeyPassForSerialNumbersResponse_ forIncomingResponsesOfType:92];
    [v10 setProtobufAction:sel_availableHomeKeyPassesResponse_ forIncomingResponsesOfType:93];
    [v10 setProtobufAction:sel_paymentWebServiceRegisterResponse_ forIncomingResponsesOfType:94];
    [v10 setProtobufAction:sel_createFidoKeyResponse_ forIncomingResponsesOfType:95];
    [v10 setProtobufAction:sel_checkFidoKeyResponse_ forIncomingResponsesOfType:96];
    [v10 setProtobufAction:sel_signWithFidoKeyResponse_ forIncomingResponsesOfType:97];
    [v10 setProtobufAction:sel_generateISOEncryptionCertificateForSubCredentialIdResponse_ forIncomingResponsesOfType:98];
    [v10 setProtobufAction:sel_requestAndStoreExternalizedAuthWithCompletionResponse_ forIncomingResponsesOfType:99];
    [v10 setProtobufAction:sel_generateTransactionKeyWithParametersResponse_ forIncomingResponsesOfType:100];
    [v10 setProtobufAction:sel_generateSEEncryptionCertificateForSubCredentialIdResponse_ forIncomingResponsesOfType:101];
    [v10 setProtobufAction:sel_addISO18013BlobsResponse_ forIncomingResponsesOfType:107];
    [v10 setProtobufAction:sel_presentStandaloneTransactionForPassUniqueIdentifierResponse_ forIncomingResponsesOfType:103];
    [v10 setProtobufAction:sel_serviceProviderDataForPassWithUniqueIdentifierResponse_ forIncomingResponsesOfType:104];
    [v10 setProtobufAction:sel_generateAuxiliaryCapabilitiesResponse_ forIncomingResponsesOfType:152];
    [v10 setProtobufAction:sel_longTermPrivacyKeyForCredentialGroupIdentifierResponse_ forIncomingResponsesOfType:110];
    [v10 setProtobufAction:sel_retrieveShareInvitationForMailboxAddressResponse_ forIncomingResponsesOfType:111];
    [v10 setProtobufAction:sel_revokeShareForPassIdentifierResponse_ forIncomingResponsesOfType:112];
    [v10 setProtobufAction:sel_passSharesForCredentialIdentifierResponse_ forIncomingResponsesOfType:113];
    [v10 setProtobufAction:sel_displayableSharesForPassIdentifierResponse_ forIncomingResponsesOfType:114];
    [v10 setProtobufAction:sel_displayableEntitlementsForPassIdentifierResponse_ forIncomingResponsesOfType:115];
    [v10 setProtobufAction:sel_createShareForPartialShareInvitationResponse_ forIncomingResponsesOfType:116];
    [v10 setProtobufAction:sel_prewarmCreateShareForPassIdentifierResponse_ forIncomingResponsesOfType:127];
    [v10 setProtobufAction:sel_statusForShareableCredentialsResponse_ forIncomingResponsesOfType:117];
    [v10 setProtobufAction:sel_prepareProvisioningTargetResponse_ forIncomingResponsesOfType:118];
    [v10 setProtobufAction:sel_acceptCarKeyShareForMessageResponse_ forIncomingResponsesOfType:121];
    [v10 setProtobufAction:sel_checkInvitationStatusForMailboxAddress_completion_ forIncomingResponsesOfType:123];
    [v10 setProtobufAction:sel_updateShareForPassIdentifier_share_authorization_completion_ forIncomingResponsesOfType:124];
    [v10 setProtobufAction:sel_handleAcceptSubcredentialProvisioningForMailboxAddressRequest_ forIncomingRequestsOfType:126];
    [v10 setProtobufAction:sel_carKeyStartShareAcceptanceFlowResponse_ forIncomingResponsesOfType:140];
    [v10 setProtobufAction:sel_carKeyRoutingInformationResponse_ forIncomingResponsesOfType:141];
    [v10 setProtobufAction:sel_carKeyGetProductPlanIdentifierResponse_ forIncomingResponsesOfType:142];
    [v10 setProtobufAction:sel_carKeySetEncryptedProductPlanIdentifierContainerResponse_ forIncomingResponsesOfType:143];
    [v10 setProtobufAction:sel_carKeyAccountAttestationResponse_ forIncomingResponsesOfType:144];
    [v10 setProtobufAction:sel_carKeyGetPretrackResponse_ forIncomingResponsesOfType:145];
    [v10 setProtobufAction:sel_carKeySetAccountAttestationResponse_ forIncomingResponsesOfType:146];
    [v10 setProtobufAction:sel_carKeyUpdateTrackingAttestationResponse_ forIncomingResponsesOfType:147];
    [v10 setProtobufAction:sel_carKeyAcceptInvitationResponse_ forIncomingResponsesOfType:148];
    [v10 setProtobufAction:sel_carKeyHandleRecipientMessageResponse_ forIncomingResponsesOfType:149];
    [v10 setProtobufAction:sel_carKeyRetryActivationCodeResponse_ forIncomingResponsesOfType:150];
    [v10 setProtobufAction:sel_carKeyDecryptDataResponse_ forIncomingResponsesOfType:151];
    [v10 setProtobufAction:sel_carKeyRejectInvitationResponse_ forIncomingResponsesOfType:153];
    [v10 setProtobufAction:sel_addSecureElementPassWithPropertiesResponse_ forIncomingResponsesOfType:154];
    [v10 setProtobufAction:sel_paymentWebServiceOwnershipTokenResponse_ forIncomingResponsesOfType:119];
    [v10 setProtobufAction:sel_paymentSetupFeaturesForConfigurationResponse_ forIncomingResponsesOfType:120];
    [v10 setProtobufAction:sel_hasActiveExternallySharedPassesResponse_ forIncomingResponsesOfType:132];
    [v10 setProtobufAction:sel_currentSecureElementSnapshotResponse_ forIncomingResponsesOfType:134];
    [v10 setProtobufAction:sel_reserveStorageForAppletTypesResponse_ forIncomingResponsesOfType:135];
    [v10 setProtobufAction:sel_deleteReservationResponse_ forIncomingResponsesOfType:136];
    [v10 setProtobufAction:sel_addPendingProvisioningsRequest_ forIncomingRequestsOfType:137];
    [v10 setProtobufAction:sel_addPendingProvisioningsResponse_ forIncomingResponsesOfType:137];
    [v10 setProtobufAction:sel_cancelAutoTopUpResponse_ forIncomingResponsesOfType:138];
    [v10 addDelegate:v8 queue:v6];
    [(NPKPaymentWebServiceCompanionTargetDevice *)v8 setProvisioningService:v10];
    v11 = [[NPKTargetDeviceAssertionManager alloc] initWithTransportationService:v10];
    remoteDeviceAssertionManager = v8->_remoteDeviceAssertionManager;
    v8->_remoteDeviceAssertionManager = v11;

    v13 = [MEMORY[0x263EFF9A0] dictionary];
    [(NPKPaymentWebServiceCompanionTargetDevice *)v8 setOutstandingRequests:v13];

    dispatch_queue_t v14 = dispatch_queue_create("com.apple.NPKPaymentWebServiceCompanionTargetDevice", 0);
    [(NPKPaymentWebServiceCompanionTargetDevice *)v8 setInternalQueue:v14];
  }
  return v8;
}

- (void)service:(id)a3 activeAccountsChanged:(id)a4
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v4 = a4;
  v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412290;
      id v9 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Active accounts changed: %@", (uint8_t *)&v8, 0xCu);
    }
  }
}

- (void)service:(id)a3 devicesChanged:(id)a4
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v4 = a4;
  v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412290;
      id v9 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Devices changed: %@", (uint8_t *)&v8, 0xCu);
    }
  }
}

- (void)service:(id)a3 account:(id)a4 incomingUnhandledProtobuf:(id)a5 fromID:(id)a6 context:(id)a7
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  id v15 = a7;
  objc_super v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);

  if (v17)
  {
    v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138413314;
      id v20 = v11;
      __int16 v21 = 2112;
      id v22 = v12;
      __int16 v23 = 2112;
      id v24 = v13;
      __int16 v25 = 2112;
      id v26 = v14;
      __int16 v27 = 2112;
      id v28 = v15;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_ERROR, "Error: Incoming unhandled protobuf: %@ %@ %@ %@ %@", (uint8_t *)&v19, 0x34u);
    }
  }
}

- (void)service:(id)a3 account:(id)a4 identifier:(id)a5 didSendWithSuccess:(BOOL)a6 error:(id)a7
{
  BOOL v8 = a6;
  uint64_t v36 = *MEMORY[0x263EF8340];
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a7;
  objc_super v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138413314;
      id v27 = v12;
      __int16 v28 = 2112;
      id v29 = v13;
      __int16 v30 = 2112;
      id v31 = v14;
      __int16 v32 = 1024;
      BOOL v33 = v8;
      __int16 v34 = 2112;
      id v35 = v15;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Service sent with success: %@ %@ %@ %d %@", buf, 0x30u);
    }
  }
  int v19 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  v22[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke;
  v22[3] = &unk_2644D76A0;
  v22[4] = self;
  id v23 = v14;
  BOOL v25 = v8;
  id v24 = v15;
  id v20 = v15;
  id v21 = v14;
  dispatch_async(v19, v22);
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 40);
      BOOL v8 = [v3 errorHandler];
      id v9 = (void *)MEMORY[0x223C37380]();
      *(_DWORD *)buf = 138412802;
      uint64_t v30 = v7;
      __int16 v31 = 2112;
      __int16 v32 = v3;
      __int16 v33 = 2112;
      __int16 v34 = v9;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: identifier %@ request %@ error handler %@", buf, 0x20u);
    }
  }
  if (v3 && !*(unsigned char *)(a1 + 56))
  {
    uint64_t v10 = NPKGetIDSCommunicationError();
    uint64_t v11 = *MEMORY[0x263F08608];
    v28[0] = *(void *)(a1 + 48);
    uint64_t v12 = *MEMORY[0x263F08320];
    v27[0] = v11;
    v27[1] = v12;
    id v13 = [v10 localizedDescription];
    v28[1] = v13;
    id v14 = [NSDictionary dictionaryWithObjects:v28 forKeys:v27 count:2];

    id v15 = (void *)MEMORY[0x263F087E8];
    objc_super v16 = [v10 domain];
    BOOL v17 = objc_msgSend(v15, "errorWithDomain:code:userInfo:", v16, objc_msgSend(v10, "code"), v14);

    v18 = [v3 errorHandler];
    if (v18)
    {
      int v19 = dispatch_get_global_queue(0, 0);
      uint64_t v21 = MEMORY[0x263EF8330];
      uint64_t v22 = 3221225472;
      id v23 = __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke_347;
      id v24 = &unk_2644D3FF0;
      id v26 = v18;
      id v25 = v17;
      dispatch_async(v19, &v21);
    }
    id v20 = objc_msgSend(*(id *)(a1 + 32), "outstandingRequests", v21, v22, v23, v24);
    [v20 removeObjectForKey:*(void *)(a1 + 40)];
  }
}

uint64_t __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke_347(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

- (BOOL)supportsAutomaticPassPresentation
{
  return 0;
}

- (id)bridgedClientInfo
{
  v2 = objc_opt_class();
  return (id)[v2 bridgedClientInfoHTTPHeader];
}

- (unint64_t)currentPassbookState
{
  if (!PKPassbookIsSupported()) {
    return 0;
  }
  v2 = NPKPairedOrPairingDevice();
  v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"A3D877D2-408A-43F1-9CA4-39C9F3609A93"];
  int v4 = [v2 supportsCapability:v3];

  if (!v4) {
    return 1;
  }
  if (NPKPairedWatchHasWalletInstalled()) {
    return 1;
  }
  return 3;
}

- (void)noteProvisioningDidBegin
{
  v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    BOOL v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v6 = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning began", v6, 2u);
    }
  }
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _acquireAssertionOfType:1];
}

- (void)noteProvisioningDidEnd
{
  v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    BOOL v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v6 = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning ended", v6, 2u);
    }
  }
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _invalidateAssertionOfType:1];
}

- (void)startBackgroundVerificationObserverForPass:(id)a3 verificationMethod:(id)a4
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = [v6 uniqueID];
      uint64_t v12 = [v7 identifier];
      int v14 = 138412546;
      id v15 = v11;
      __int16 v16 = 2112;
      BOOL v17 = v12;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Starting background verification observer for %@ with verification method %@", (uint8_t *)&v14, 0x16u);
    }
  }
  id v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v13 startBackgroundVerificationObserverForPass:v6 verificationMethod:v7];
}

- (void)noteForegroundVerificationObserverActive:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v10 = *MEMORY[0x263EF8340];
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109120;
      v9[1] = v3;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Noting foreground verification observer active: %d", (uint8_t *)v9, 8u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v8 noteForegroundVerificationObserverActive:v3];
}

- (void)noteProvisioningUserInterfaceDidAppear
{
  BOOL v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    BOOL v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that the provisioning UI appeared", buf, 2u);
    }
  }
  BOOL v6 = NPKPairedOrPairingDevice();
  if (v6)
  {
    id v7 = [MEMORY[0x263F57730] sharedInstance];
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    v8[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_noteProvisioningUserInterfaceDidAppear__block_invoke;
    v8[3] = &unk_2644D76C8;
    v8[4] = self;
    [v7 setActivePairedDevice:v6 withActiveDeviceAssertionHandler:v8];
  }
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_noteProvisioningUserInterfaceDidAppear__block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    BOOL v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412546;
      id v12 = v5;
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: error %@ assertion %@", (uint8_t *)&v11, 0x16u);
    }
  }
  if (v6)
  {
    uint64_t v10 = [*(id *)(a1 + 32) provisioningActiveDeviceAssertion];
    [v10 invalidate];

    [*(id *)(a1 + 32) setProvisioningActiveDeviceAssertion:v6];
  }
}

- (void)noteProvisioningUserInterfaceDidDisappear
{
  BOOL v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that the provisioning UI disappeared", v7, 2u);
    }
  }
  id v6 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningActiveDeviceAssertion];
  [v6 invalidate];

  [(NPKPaymentWebServiceCompanionTargetDevice *)self setProvisioningActiveDeviceAssertion:0];
}

- (void)setMaximumPaymentCards:(unint64_t)a3
{
}

- (void)archiveContext:(id)a3
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 138412290;
      id v11 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Archiving web service context: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v8 archiveWebServiceContext:v4];

  BOOL v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v9 sendWebServiceContextToWatch];
}

- (void)archiveBackgroundContext:(id)a3
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138412290;
      id v10 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Archiving web service background context: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v8 archiveWebServiceBackgroundContext:v4];
}

- (BOOL)paymentWebService:(id)a3 hasPassesOfType:(unint64_t)a4
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v6 = a3;
  uint64_t v15 = 0;
  __int16 v16 = &v15;
  uint64_t v17 = 0x2020000000;
  char v18 = 0;
  if (a4 == 1)
  {
    id v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 3221225472;
    v14[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_hasPassesOfType___block_invoke;
    v14[3] = &unk_2644D76F0;
    v14[4] = &v15;
    [v7 paymentPassUniqueIDsSynchronous:1 reply:v14];
  }
  BOOL v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *((unsigned __int8 *)v16 + 24);
      *(_DWORD *)buf = 134218240;
      unint64_t v20 = a4;
      __int16 v21 = 1024;
      int v22 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service has passes of type %lu? %d", buf, 0x12u);
    }
  }
  BOOL v12 = *((unsigned char *)v16 + 24) != 0;
  _Block_object_dispose(&v15, 8);

  return v12;
}

uint64_t __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_hasPassesOfType___block_invoke(uint64_t a1, void *a2)
{
  uint64_t result = [a2 count];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result != 0;
  return result;
}

- (id)paymentWebService:(id)a3 passesOfType:(unint64_t)a4
{
  id v6 = objc_msgSend(MEMORY[0x263EFF980], "array", a3);
  if (a4 == 1)
  {
    id v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    _DWORD v9[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke;
    v9[3] = &unk_2644D5670;
    v9[4] = self;
    id v10 = v6;
    [v7 paymentPassUniqueIDsSynchronous:1 reply:v9];
  }
  return v6;
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke(uint64_t a1, void *a2)
{
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 3221225472;
  v4[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_2;
  v4[3] = &unk_2644D6EB8;
  BOOL v3 = *(void **)(a1 + 40);
  v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [a2 enumerateObjectsUsingBlock:v4];
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_2(uint64_t a1, void *a2)
{
  BOOL v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 companionAgentConnection];
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_3;
  v6[3] = &unk_2644D7718;
  id v7 = *(id *)(a1 + 40);
  [v5 paymentPassWithUniqueID:v4 synchronous:1 reply:v6];
}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_3(uint64_t result, uint64_t a2)
{
  if (a2) {
    return [*(id *)(result + 32) addObject:a2];
  }
  return result;
}

- (BOOL)paymentWebService:(id)a3 canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)a4
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Can provision payment pass with primary account identifier %@", (uint8_t *)&buf, 0xCu);
    }
  }
  if (v7)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
    dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v29 = 0x3032000000;
    uint64_t v30 = __Block_byref_object_copy__23;
    __int16 v31 = __Block_byref_object_dispose__23;
    id v32 = 0;
    v24[0] = MEMORY[0x263EF8330];
    v24[1] = 3221225472;
    v24[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canProvisionPaymentPassWithPrimaryAccountIdentifier___block_invoke;
    v24[3] = &unk_2644D7740;
    p_long long buf = &buf;
    __int16 v13 = v12;
    id v25 = v13;
    [v11 paymentPassesWithPrimaryAccountIdentifier:v7 completion:v24];
    dispatch_semaphore_wait(v13, 0xFFFFFFFFFFFFFFFFLL);
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v14 = *(id *)(*((void *)&buf + 1) + 40);
    uint64_t v15 = [v14 countByEnumeratingWithState:&v20 objects:v27 count:16];
    if (v15)
    {
      uint64_t v16 = *(void *)v21;
      while (2)
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v21 != v16) {
            objc_enumerationMutation(v14);
          }
          if ((unint64_t)objc_msgSend(*(id *)(*((void *)&v20 + 1) + 8 * i), "activationState", (void)v20) < 4)
          {
            BOOL v18 = 0;
            goto LABEL_16;
          }
        }
        uint64_t v15 = [v14 countByEnumeratingWithState:&v20 objects:v27 count:16];
        if (v15) {
          continue;
        }
        break;
      }
    }
    BOOL v18 = 1;
LABEL_16:

    _Block_object_dispose(&buf, 8);
  }
  else
  {
    BOOL v18 = 1;
  }

  return v18;
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canProvisionPaymentPassWithPrimaryAccountIdentifier___block_invoke(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

- (void)paymentWebService:(id)a3 validateAddPreconditionsWithCompletion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = (void *)MEMORY[0x263F5C058];
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddPreconditionsWithCompletion___block_invoke;
  v11[3] = &unk_2644D2B40;
  id v12 = v6;
  __int16 v13 = self;
  id v14 = v7;
  id v9 = v7;
  id v10 = v6;
  [v8 configureWebServiceIfNecessary:v10 completion:v11];
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddPreconditionsWithCompletion___block_invoke(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = pk_Payment_log();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      id v6 = pk_Payment_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 138412290;
        id v13 = v3;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: Web service configuration failed (%@). Continuing preflight anyway.", (uint8_t *)&v12, 0xCu);
      }
    }
  }
  id v7 = [NPKPaymentPreflighter alloc];
  uint64_t v8 = a1[4];
  id v9 = (void *)a1[5];
  id v10 = [v9 companionAgentConnection];
  int v11 = [(NPKPaymentPreflighter *)v7 initWithWebService:v8 targetDevice:v9 companionAgentConnection:v10];

  [(NPKPaymentPreflighter *)v11 addCardPreflightWithCompletion:a1[6]];
}

- (void)paymentWebService:(id)a3 validateTransferPreconditionsWithCompletion:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = [NPKPaymentPreflighter alloc];
  id v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  id v10 = [(NPKPaymentPreflighter *)v8 initWithWebService:v7 targetDevice:self companionAgentConnection:v9];

  [(NPKPaymentPreflighter *)v10 transferToCompanionPreflightWithCompletion:v6];
}

- (void)paymentWebService:(id)a3 validateAddBiometricPassPreconditionsWithCompletion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Requested BiometricPassPreconditions", buf, 2u);
    }
  }
  int v11 = (void *)MEMORY[0x263F5C058];
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 3221225472;
  v14[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke;
  v14[3] = &unk_2644D2B40;
  id v15 = v6;
  uint64_t v16 = self;
  id v17 = v7;
  id v12 = v7;
  id v13 = v6;
  [v11 configureWebServiceIfNecessary:v13 completion:v14];
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = pk_Payment_log();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      id v6 = pk_Payment_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v15 = v3;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: Web service configuration for Biometric Pass Precondition failed (%@). Continue preflight anyway", buf, 0xCu);
      }
    }
  }
  id v7 = [NPKPaymentPreflighter alloc];
  uint64_t v8 = *(void *)(a1 + 32);
  BOOL v9 = *(void **)(a1 + 40);
  id v10 = [v9 companionAgentConnection];
  int v11 = [(NPKPaymentPreflighter *)v7 initWithWebService:v8 targetDevice:v9 companionAgentConnection:v10];

  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke_362;
  v12[3] = &unk_2644D28C0;
  id v13 = *(id *)(a1 + 48);
  [(NPKPaymentPreflighter *)v11 addBiometricPassPreflightWithCompletion:v12];
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke_362(uint64_t a1, int a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v5 = a3;
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    uint64_t v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = a2;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Finish BiometricPassPreconditions successful:%d error:%@", (uint8_t *)v9, 0x12u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)setNewAuthRandomResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  __int16 v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__364;
  v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v36 = 0;
  v37 = &v36;
  uint64_t v38 = 0x2020000000;
  char v39 = 0;
  uint64_t v30 = 0;
  __int16 v31 = &v30;
  uint64_t v32 = 0x3032000000;
  uint64_t v33 = __Block_byref_object_copy__23;
  __int16 v34 = __Block_byref_object_dispose__23;
  id v35 = 0;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  id v27 = __Block_byref_object_copy__23;
  __int16 v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomResponse___block_invoke;
    block[3] = &unk_2644D7768;
    block[4] = self;
    id v18 = v10;
    id v19 = v4;
    long long v20 = &v36;
    long long v21 = &v30;
    long long v22 = &v24;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v37 + 24), v31[5], v25[5], 0);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomResponse___block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSecureElementSetNewAuthRandomResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSecureElementSetNewAuthRandomResponse *)v4 initWithData:v5];

    if ([(NPKProtoSecureElementSetNewAuthRandomResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(NPKProtoSecureElementSetNewAuthRandomResponse *)v6 success];
      uint64_t v10 = [(NPKProtoSecureElementSetNewAuthRandomResponse *)v6 cryptogram];
      uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8);
      uint64_t v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;

      uint64_t v13 = [(NPKProtoSecureElementSetNewAuthRandomResponse *)v6 challengeResponse];
      uint64_t v14 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;

      uint64_t v16 = [*(id *)(a1 + 32) outstandingRequests];
      [v16 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v17 = [v3 completionHandler];
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8);
      id v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;
    }
  }
  else
  {
    BOOL v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      BOOL v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long v20 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
      }
    }
  }
}

- (void)_setNewAuthRandomReturningPairingState:(id)a3
{
  id v4 = a3;
  id v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke;
  v7[3] = &unk_2644D2E58;
  v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  dispatch_sync(v5, v7);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoSecureElementSetNewAuthRandomRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoSecureElementSetNewAuthRandomRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:7 isResponse:0];

  id v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    BOOL v7 = *(void **)(a1 + 40);
    if (v7)
    {
      v24[0] = MEMORY[0x263EF8330];
      v24[1] = 3221225472;
      v24[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_2;
      v24[3] = &unk_2644D7790;
      id v25 = v7;
      id v8 = (void *)MEMORY[0x223C37380](v24);
      uint64_t v19 = MEMORY[0x263EF8330];
      uint64_t v20 = 3221225472;
      long long v21 = __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_3;
      long long v22 = &unk_2644D2B90;
      id v23 = *(id *)(a1 + 40);
      BOOL v9 = (void *)MEMORY[0x223C37380](&v19);
      uint64_t v10 = *(void **)(a1 + 32);
      uint64_t v11 = (void *)MEMORY[0x223C37380](v8);
      objc_msgSend(v10, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v11, v9, v19, v20, v21, v22);
    }
    else
    {
      uint64_t v16 = pk_Payment_log();
      BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (v17)
      {
        uint64_t v18 = pk_Payment_log();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          id v27 = v6;
          _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
        }
      }
    }
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v27 = v5;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }
    }
    uint64_t v15 = *(void *)(a1 + 40);
    if (v15) {
      (*(void (**)(uint64_t, void, void, void))(v15 + 16))(v15, 0, 0, 0);
    }
  }
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)getPairingInfoResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__364;
  v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v36 = 0;
  v37 = &v36;
  uint64_t v38 = 0x2020000000;
  char v39 = 0;
  uint64_t v30 = 0;
  __int16 v31 = &v30;
  uint64_t v32 = 0x3032000000;
  uint64_t v33 = __Block_byref_object_copy__23;
  __int16 v34 = __Block_byref_object_dispose__23;
  id v35 = 0;
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000;
  id v27 = __Block_byref_object_copy__23;
  uint64_t v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_getPairingInfoResponse___block_invoke;
    block[3] = &unk_2644D7768;
    block[4] = self;
    id v18 = v10;
    id v19 = v4;
    uint64_t v20 = &v36;
    long long v21 = &v30;
    long long v22 = &v24;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v37 + 24), v31[5], v25[5], 0);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);
}

void __68__NPKPaymentWebServiceCompanionTargetDevice_getPairingInfoResponse___block_invoke(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSecureElementGetPairingInfoResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSecureElementGetPairingInfoResponse *)v4 initWithData:v5];

    if ([v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v6 success];
      uint64_t v9 = [v6 cryptogram];
      uint64_t v10 = *(void *)(*(void *)(a1 + 64) + 8);
      uint64_t v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;

      uint64_t v12 = [v6 challengeResponse];
      uint64_t v13 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      uint64_t v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (v16)
      {
        BOOL v17 = pk_Payment_log();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          v22[0] = 67109120;
          v22[1] = [v6 authRandomSet];
          _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Pairing info response: set auth random %d", (uint8_t *)v22, 8u);
        }
      }
      id v18 = [*(id *)(a1 + 32) outstandingRequests];
      [v18 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v19 = [v3 completionHandler];
      uint64_t v20 = *(void *)(*(void *)(a1 + 80) + 8);
      long long v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;
    }
LABEL_12:

    goto LABEL_13;
  }
  BOOL v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v22[0]) = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v22, 2u);
    }
    goto LABEL_12;
  }
LABEL_13:
}

- (void)_getPairingInfoAndSetAuthRandomIfNotPaired:(BOOL)a3 completion:(id)a4
{
  id v6 = a4;
  BOOL v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke;
  block[3] = &unk_2644D3680;
  BOOL v11 = a3;
  block[4] = self;
  id v10 = v6;
  id v8 = v6;
  dispatch_sync(v7, block);
}

void __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoSecureElementGetPairingInfoRequest);
  [(NPKProtoSecureElementGetPairingInfoRequest *)v2 setSetAuthRandomIfNotPaired:*(unsigned __int8 *)(a1 + 48)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoSecureElementGetPairingInfoRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:21 isResponse:0];

  id v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    BOOL v7 = *(void **)(a1 + 40);
    if (v7)
    {
      v24[0] = MEMORY[0x263EF8330];
      v24[1] = 3221225472;
      v24[2] = __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_2;
      v24[3] = &unk_2644D7790;
      id v25 = v7;
      id v8 = (void *)MEMORY[0x223C37380](v24);
      uint64_t v19 = MEMORY[0x263EF8330];
      uint64_t v20 = 3221225472;
      long long v21 = __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_3;
      long long v22 = &unk_2644D2B90;
      id v23 = *(id *)(a1 + 40);
      uint64_t v9 = (void *)MEMORY[0x223C37380](&v19);
      id v10 = *(void **)(a1 + 32);
      BOOL v11 = (void *)MEMORY[0x223C37380](v8);
      objc_msgSend(v10, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v11, v9, v19, v20, v21, v22);
    }
    else
    {
      BOOL v16 = pk_Payment_log();
      BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (v17)
      {
        id v18 = pk_Payment_log();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          id v27 = v6;
          _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
        }
      }
    }
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v27 = v5;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }
    }
    uint64_t v15 = *(void *)(a1 + 40);
    if (v15) {
      (*(void (**)(uint64_t, void, void, void))(v15 + 16))(v15, 0, 0, 0);
    }
  }
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)_setNewAuthRandomIfNecessaryReturningPairingState:(id)a3
{
}

- (void)setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:(id)a3
{
  id v4 = a3;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow___block_invoke;
  v6[3] = &unk_2644D77B8;
  id v7 = v4;
  id v5 = v4;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _setNewAuthRandomIfNecessaryReturningPairingState:v6];
}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow___block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)paymentWebService:(id)a3 setNewAuthRandomIfNecessaryReturningPairingState:(id)a4
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v5 = a4;
  int v6 = NPKIsCurrentlyPairing();
  id v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    uint64_t v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v13[0] = 67109120;
      v13[1] = v6;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: currentlyPairing %d", (uint8_t *)v13, 8u);
    }
  }
  if (v6)
  {
    [(NPKPaymentWebServiceCompanionTargetDevice *)self _setNewAuthRandomIfNecessaryReturningPairingState:v5];
  }
  else
  {
    id v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      uint64_t v12 = pk_Payment_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v13[0]) = 0;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Do not need to set auth random from PassKit request; returning pairing info",
          (uint8_t *)v13,
          2u);
      }
    }
    [(NPKPaymentWebServiceCompanionTargetDevice *)self _getPairingInfoAndSetAuthRandomIfNotPaired:0 completion:v5];
  }
}

- (void)paymentWebService:(id)a3 setNewAuthRandom:(id)a4
{
  id v5 = a4;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setNewAuthRandom___block_invoke;
  v7[3] = &unk_2644D77B8;
  id v8 = v5;
  id v6 = v5;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _setNewAuthRandomReturningPairingState:v7];
}

uint64_t __80__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setNewAuthRandom___block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)queueTSMConnectionResponse:(id)a3
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v22 = 0x3032000000;
  id v23 = __Block_byref_object_copy__364;
  uint64_t v24 = __Block_byref_object_dispose__365;
  id v25 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __72__NPKPaymentWebServiceCompanionTargetDevice_queueTSMConnectionResponse___block_invoke;
    block[3] = &unk_2644D77E0;
    block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, void))(v15 + 16))(v15, 1, 0);
  }
  _Block_object_dispose(&buf, 8);
}

void __72__NPKPaymentWebServiceCompanionTargetDevice_queueTSMConnectionResponse___block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoQueueTSMConnectionResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoQueueTSMConnectionResponse *)v4 initWithData:v5];

    if ([(NPKProtoQueueTSMConnectionResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      uint64_t v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 queueConnectionToTrustedServiceManagerForPushTopic:(id)a4 withCompletion:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  uint64_t v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke;
  block[3] = &unk_2644D3388;
  id v13 = v7;
  uint64_t v14 = self;
  id v15 = v8;
  id v10 = v8;
  id v11 = v7;
  dispatch_sync(v9, block);
}

void __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoQueueTSMConnectionRequest);
  [(NPKProtoQueueTSMConnectionRequest *)v2 setPushTopic:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoQueueTSMConnectionRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:1 isResponse:0];

  BOOL v6 = [*(id *)(a1 + 40) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 48))
    {
      id v7 = MEMORY[0x223C37380]();
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke_2;
      v17[3] = &unk_2644D2B90;
      id v18 = *(id *)(a1 + 48);
      id v8 = (void *)MEMORY[0x223C37380](v17);
      uint64_t v9 = *(void **)(a1 + 40);
      id v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];
    }
    else
    {
      id v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16) {
        goto LABEL_11;
      }
      id v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v20 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    id v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v20 = v5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v14 = *(void *)(a1 + 48);
  if (v14)
  {
    id v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:
  }
LABEL_11:
}

uint64_t __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)markAllAppletsForDeletionResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  id v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoMarkAllAppletsForDeletionResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoMarkAllAppletsForDeletionResponse *)v5 initWithData:v6];

    if ([(NPKProtoMarkAllAppletsForDeletionResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      id v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoMarkAllAppletsForDeletionResponse *)v7 success];
      BOOL v15 = [(NPKProtoMarkAllAppletsForDeletionResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoMarkAllAppletsForDeletionResponse *)v7 errorData];
        BOOL v16 = objc_opt_class();
        BOOL v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        BOOL v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
    }
  }
  else
  {
    id v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      id v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)markAllAppletsForDeletionWithCompletion:(id)a3
{
  id v4 = a3;
  id v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke;
  v7[3] = &unk_2644D2E58;
  void v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  dispatch_sync(v5, v7);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoMarkAllAppletsForDeletionRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoMarkAllAppletsForDeletionRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:44 isResponse:0];

  id v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 40))
    {
      id v7 = MEMORY[0x223C37380]();
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke_2;
      v17[3] = &unk_2644D2B90;
      id v18 = *(id *)(a1 + 40);
      id v8 = (void *)MEMORY[0x223C37380](v17);
      BOOL v9 = *(void **)(a1 + 32);
      id v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];
    }
    else
    {
      BOOL v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16) {
        goto LABEL_11;
      }
      id v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v20 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    uint64_t v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v20 = v5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14)
  {
    id v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:
  }
LABEL_11:
}

uint64_t __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)handleBalanceChange:(id)a3
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = [NPKProtoHandleBalanceChangeRequest alloc];
  id v6 = [v4 data];

  id v7 = [(NPKProtoHandleBalanceChangeRequest *)v5 initWithData:v6];
  id v8 = [(NPKProtoHandleBalanceChangeRequest *)v7 passID];
  BOOL v9 = [MEMORY[0x263EFF9C0] set];
  id v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v22 = v8;
      __int16 v23 = 1024;
      LODWORD(v24) = [(NPKProtoHandleBalanceChangeRequest *)v7 balanceBytesCount];
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Got balance update for unique ID %@ with %u balances", buf, 0x12u);
    }
  }
  uint64_t v13 = [(NPKProtoHandleBalanceChangeRequest *)v7 balanceBytes];
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 3221225472;
  v19[2] = __65__NPKPaymentWebServiceCompanionTargetDevice_handleBalanceChange___block_invoke;
  v19[3] = &unk_2644D7830;
  id v14 = v9;
  id v20 = v14;
  [v13 enumerateObjectsUsingBlock:v19];

  BOOL v15 = pk_General_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    BOOL v17 = pk_General_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v22 = v14;
      __int16 v23 = 2112;
      uint64_t v24 = v8;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Handling balance update %@ for unique ID %@", buf, 0x16u);
    }
  }
  id v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v18 handleBalanceUpdate:v14 forUniqueID:v8];
}

void __65__NPKPaymentWebServiceCompanionTargetDevice_handleBalanceChange___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  id v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    id v5 = v6;
  }
}

- (void)registrationDataResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  char v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_registrationDataResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    id v20 = &v23;
    uint64_t v21 = &v29;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v15 + 16))(v15, v30[5], v24[5], 0);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_registrationDataResponse___block_invoke(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoRegistrationDataResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoRegistrationDataResponse *)v4 initWithData:v5];

    if ([v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v9 = pk_Payment_log();
      BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        BOOL v11 = pk_Payment_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          BOOL v12 = [v6 pushToken];
          int v33 = 138412290;
          id v34 = v12;
          _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Push token from gizmo is %@", (uint8_t *)&v33, 0xCu);
        }
      }
      uint64_t v13 = [v6 pushToken];
      uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;

      BOOL v16 = [v6 registrationDataBytes];
      BOOL v17 = objc_opt_class();
      uint64_t v18 = NPKSecureUnarchiveObject(v16, v17);
      uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8);
      id v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;

      if (!*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
      {
        uint64_t v21 = pk_Payment_log();
        BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

        if (v22)
        {
          uint64_t v23 = pk_Payment_log();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          {
            LOWORD(v33) = 0;
            _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_ERROR, "Error: Received nil SE registration data!", (uint8_t *)&v33, 2u);
          }
        }
      }
      uint64_t v24 = (void *)MGCopyAnswer();
      [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setCompanionSerialNumber:v24];

      uint64_t v25 = [*(id *)(a1 + 32) _serialNumbersOfAllPairedDevices];
      uint64_t v26 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) deviceSerialNumber];

      if (v26)
      {
        id v27 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) deviceSerialNumber];
        uint64_t v28 = objc_msgSend(v25, "pk_arrayByRemovingObject:", v27);

        uint64_t v25 = (void *)v28;
      }
      [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setAdditionalDeviceSerialNumbers:v25];
      uint64_t v29 = [*(id *)(a1 + 32) outstandingRequests];
      [v29 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v30 = [v3 completionHandler];
      uint64_t v31 = *(void *)(*(void *)(a1 + 72) + 8);
      char v32 = *(void **)(v31 + 40);
      *(void *)(v31 + 40) = v30;
    }
LABEL_19:

    goto LABEL_20;
  }
  id v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v33) = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)&v33, 2u);
    }
    goto LABEL_19;
  }
LABEL_20:
}

- (id)appleAccountInformation
{
  v2 = [MEMORY[0x263F5BD50] sharedInstance];
  id v3 = [v2 appleAccountInformation];

  return v3;
}

- (void)renewAppleAccountWithCompletionHandler:(id)a3
{
  id v3 = (void *)MEMORY[0x263F5BD50];
  id v4 = a3;
  id v5 = [v3 sharedInstance];
  [v5 renewAppleAccountWithCompletionHandler:v4];
}

- (void)paymentWebService:(id)a3 registrationDataWithCompletionHandler:(id)a4
{
  id v6 = a4;
  id v7 = a3;
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self appleAccountInformation];
  id v9 = [v8 authorizationHeader];

  [(NPKPaymentWebServiceCompanionTargetDevice *)self _paymentWebService:v7 registrationDataWithAuthToken:v9 completionHandler:v6];
}

- (void)_paymentWebService:(id)a3 registrationDataWithAuthToken:(id)a4 completionHandler:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  id v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke;
  block[3] = &unk_2644D3388;
  id v13 = v7;
  uint64_t v14 = self;
  id v15 = v8;
  id v10 = v8;
  id v11 = v7;
  dispatch_sync(v9, block);
}

void __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke(uint64_t a1)
{
  location[3] = *(id *)MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoRegistrationDataRequest);
  [(NPKProtoRegistrationDataRequest *)v2 setAuthToken:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoRegistrationDataRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:3 isResponse:0];

  id v6 = [*(id *)(a1 + 40) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 48))
    {
      id v7 = (void **)(a1 + 40);
      objc_initWeak(location, *(id *)(a1 + 40));
      v22[0] = MEMORY[0x263EF8330];
      v22[1] = 3221225472;
      _DWORD v22[2] = __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_2;
      v22[3] = &unk_2644D7858;
      objc_copyWeak(&v24, location);
      id v23 = *(id *)(a1 + 48);
      id v8 = (void *)MEMORY[0x223C37380](v22);
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      v20[2] = __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_3;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 48);
      id v9 = (void *)MEMORY[0x223C37380](v20);
      id v10 = *v7;
      id v11 = (void *)MEMORY[0x223C37380](v8);
      [v10 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v11 errorHandler:v9];

      objc_destroyWeak(&v24);
      objc_destroyWeak(location);
    }
    else
    {
      BOOL v17 = pk_Payment_log();
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (v18)
      {
        uint64_t v19 = pk_Payment_log();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(location[0]) = 138412290;
          *(id *)((char *)location + 4) = v6;
          _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", (uint8_t *)location, 0xCu);
        }
      }
    }
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        LODWORD(location[0]) = 138412290;
        *(id *)((char *)location + 4) = v5;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)location, 0xCu);
      }
    }
    uint64_t v15 = *(void *)(a1 + 48);
    if (v15)
    {
      BOOL v16 = NPKGetIDSCommunicationError();
      (*(void (**)(uint64_t, void, void *))(v15 + 16))(v15, 0, v16);
    }
  }
}

void __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_2(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v12 = a2;
  id v7 = a3;
  id v8 = a4;
  if (v7)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v10 = [WeakRetained delegate];
    [v10 handlePushToken:v7];
  }
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, id, id))(v11 + 16))(v11, v12, v8);
  }
}

uint64_t __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)provisioningDataResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_provisioningDataResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    id v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, void))(v15 + 16))(v15, v23[5], 0);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_provisioningDataResponse___block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoProvisioningDataResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoProvisioningDataResponse *)v4 initWithData:v5];

    if ([(NPKProtoProvisioningDataResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [(NPKProtoProvisioningDataResponse *)v6 provisioningDataBytes];
      uint64_t v11 = objc_opt_class();
      uint64_t v12 = NPKSecureUnarchiveObject(v10, v11);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      uint64_t v15 = [*(id *)(a1 + 32) outstandingRequests];
      [v15 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v16 = [v3 completionHandler];
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
      id v18 = *(void **)(v17 + 40);
      *(void *)(v17 + 40) = v16;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 provisioningDataIncludingDeviceMetadata:(BOOL)a4 withCompletionHandler:(id)a5
{
  id v7 = a5;
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke;
  block[3] = &unk_2644D3680;
  BOOL v12 = a4;
  void block[4] = self;
  id v11 = v7;
  id v9 = v7;
  dispatch_sync(v8, block);
}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke(uint64_t a1)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoProvisioningDataRequest);
  [(NPKProtoProvisioningDataRequest *)v2 setIncludeDeviceMetadata:*(unsigned __int8 *)(a1 + 48)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoProvisioningDataRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:2 isResponse:0];

  BOOL v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 40))
    {
      *(void *)&long long buf = 0;
      *((void *)&buf + 1) = &buf;
      uint64_t v49 = 0x3032000000;
      v50 = __Block_byref_object_copy__23;
      v51 = __Block_byref_object_dispose__23;
      id v52 = 0;
      v46[0] = 0;
      v46[1] = v46;
      v46[2] = 0x3032000000;
      v46[3] = __Block_byref_object_copy__23;
      v46[4] = __Block_byref_object_dispose__23;
      id v47 = 0;
      v44[0] = 0;
      v44[1] = v44;
      v44[2] = 0x3032000000;
      v44[3] = __Block_byref_object_copy__23;
      v44[4] = __Block_byref_object_dispose__23;
      id v45 = 0;
      id v7 = dispatch_group_create();
      if (*(unsigned char *)(a1 + 48))
      {
        BOOL v8 = objc_alloc_init(NPKOneShotLocationFetcher);
        dispatch_group_enter(v7);
        v40[0] = MEMORY[0x263EF8330];
        v40[1] = 3221225472;
        v40[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_2;
        v40[3] = &unk_2644D78A8;
        p_long long buf = &buf;
        id v9 = v8;
        uint64_t v41 = v9;
        v42 = v7;
        [(NPKOneShotLocationFetcher *)v9 fetchLocationWithCompletion:v40];
      }
      dispatch_group_enter(v7);
      v37[0] = MEMORY[0x263EF8330];
      v37[1] = 3221225472;
      v37[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_394;
      v37[3] = &unk_2644D78D0;
      id v39 = v46;
      id v10 = v7;
      uint64_t v38 = v10;
      id v11 = (void *)MEMORY[0x223C37380](v37);
      v34[0] = MEMORY[0x263EF8330];
      v34[1] = 3221225472;
      v34[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_396;
      v34[3] = &unk_2644D78F8;
      uint64_t v36 = v44;
      BOOL v12 = v10;
      uint64_t v35 = v12;
      uint64_t v13 = (void *)MEMORY[0x223C37380](v34);
      uint64_t v14 = [*(id *)(a1 + 32) responseQueue];
      uint64_t v25 = MEMORY[0x263EF8330];
      uint64_t v26 = 3221225472;
      id v27 = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_397;
      uint64_t v28 = &unk_2644D7930;
      char v33 = *(unsigned char *)(a1 + 48);
      uint64_t v30 = v46;
      uint64_t v31 = &buf;
      id v29 = *(id *)(a1 + 40);
      id v32 = v44;
      dispatch_group_notify(v12, v14, &v25);

      uint64_t v15 = *(void **)(a1 + 32);
      uint64_t v16 = (void *)MEMORY[0x223C37380](v11);
      objc_msgSend(v15, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v16, v13, v25, v26, v27, v28);

      _Block_object_dispose(v44, 8);
      _Block_object_dispose(v46, 8);

      _Block_object_dispose(&buf, 8);
    }
    else
    {
      uint64_t v22 = pk_Payment_log();
      BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

      if (v23)
      {
        uint64_t v24 = pk_Payment_log();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 138412290;
          *(void *)((char *)&buf + 4) = v6;
          _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", (uint8_t *)&buf, 0xCu);
        }
      }
    }
  }
  else
  {
    uint64_t v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_ERROR);

    if (v18)
    {
      id v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v5;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&buf, 0xCu);
      }
    }
    uint64_t v20 = *(void *)(a1 + 40);
    if (v20)
    {
      id v21 = NPKGetIDSCommunicationError();
      (*(void (**)(uint64_t, void, void *))(v20 + 16))(v20, 0, v21);
    }
  }
}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Fetcher %@ fetched location %@", (uint8_t *)&v10, 0x16u);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_394(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412290;
      id v9 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Fetched provisioning data %@", (uint8_t *)&v8, 0xCu);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_396(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412290;
      id v9 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Got provisioning error %@", (uint8_t *)&v8, 0xCu);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_397(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v2 && *(unsigned char *)(a1 + 64))
  {
    if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
    {
      objc_msgSend(v2, "setLocation:");
      v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    }
    id v3 = PKDevicePhoneNumber();
    [v2 setPhoneNumber:v3];

    v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  id v4 = [v2 deviceName];

  id v5 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) phoneNumber];

  BOOL v6 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) location];

  id v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    id v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = off_2644D7918[v4 != 0];
      uint64_t v11 = off_2644D7918[v5 != 0];
      __int16 v12 = off_2644D7918[v6 != 0];
      int v14 = 136315650;
      uint64_t v15 = v10;
      __int16 v16 = 2080;
      uint64_t v17 = v11;
      __int16 v18 = 2080;
      id v19 = v12;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Device provisioning data:\n\tdevice name is %s\n\tphone number is %s\n\tlocation is %s", (uint8_t *)&v14, 0x20u);
    }
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
  }
  return result;
}

- (void)configurationDataResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  BOOL v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_configurationDataResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    uint64_t v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    __int16 v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      int v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int16 v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, void))(v15 + 16))(v15, v23[5], 0);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_configurationDataResponse___block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoConfigurationDataResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoConfigurationDataResponse *)v4 initWithData:v5];

    if ([(NPKProtoConfigurationDataResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v10 = [(NPKProtoConfigurationDataResponse *)v6 configurationDataBytes];
      uint64_t v11 = objc_opt_class();
      uint64_t v12 = NPKSecureUnarchiveObject(v10, v11);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      int v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      uint64_t v15 = [*(id *)(a1 + 32) outstandingRequests];
      [v15 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v16 = [v3 completionHandler];
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
      id v18 = *(void **)(v17 + 40);
      *(void *)(v17 + 40) = v16;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 configurationDataWithCompletionHandler:(id)a4
{
  id v5 = a4;
  BOOL v6 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke;
  v8[3] = &unk_2644D2E58;
  v8[4] = self;
  id v9 = v5;
  id v7 = v5;
  dispatch_sync(v6, v8);
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoConfigurationDataRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoConfigurationDataRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:4 isResponse:0];

  BOOL v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 40))
    {
      id v7 = MEMORY[0x223C37380]();
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke_2;
      v17[3] = &unk_2644D2B90;
      id v18 = *(id *)(a1 + 40);
      BOOL v8 = (void *)MEMORY[0x223C37380](v17);
      id v9 = *(void **)(a1 + 32);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];
    }
    else
    {
      uint64_t v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16) {
        goto LABEL_11;
      }
      id v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v20 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    uint64_t v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v20 = v5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14)
  {
    id v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:
  }
LABEL_11:
}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (id)trustedDeviceEnrollmentInfoForWebService:(id)a3
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a3;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 138412290;
      id v18 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Requested Trusted Device Enrollment Info for WebService: %@", (uint8_t *)&v17, 0xCu);
    }
  }
  id v7 = [MEMORY[0x263F57730] sharedInstance];
  BOOL v8 = [v7 getActivePairedDevice];

  if (v8)
  {
    id v9 = objc_alloc_init(MEMORY[0x263F5C2D0]);
    uint64_t v10 = [v8 valueForProperty:*MEMORY[0x263F57610]];
    [v9 setDeviceName:v10];

    uint64_t v11 = [v8 valueForProperty:*MEMORY[0x263F57648]];
    [v9 setDeviceSerialNumber:v11];

    BOOL v12 = [v8 valueForProperty:*MEMORY[0x263F57678]];
    [v9 setDeviceUDID:v12];

    uint64_t v13 = [v8 valueForProperty:*MEMORY[0x263F57628]];
    [v9 setProductType:v13];

    uint64_t v14 = [v8 valueForProperty:*MEMORY[0x263F57630]];
    [v9 setSecureElementIdentifier:v14];

    uint64_t v15 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"6BD289D4-EFF7-4E48-A3AD-776E924C8723"];
    objc_msgSend(v9, "setSupportsAccessExpressMode:", objc_msgSend(v8, "supportsCapability:", v15));
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

- (void)signDataResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __62__NPKPaymentWebServiceCompanionTargetDevice_signDataResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    uint64_t v20 = &v29;
    uint64_t v21 = &v23;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v15 + 16))(v15, v30[5], v24[5], 0);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __62__NPKPaymentWebServiceCompanionTargetDevice_signDataResponse___block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSignDataResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSignDataResponse *)v4 initWithData:v5];

    if ([(NPKProtoSignDataResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v10 = [(NPKProtoSignDataResponse *)v6 signedData];
      uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;

      if ([(NPKProtoSignDataResponse *)v6 hasSignatureInfoBytes])
      {
        BOOL v13 = [(NPKProtoSignDataResponse *)v6 signatureInfoBytes];
        uint64_t v14 = objc_opt_class();
        uint64_t v15 = NPKSecureUnarchiveObject(v13, v14);
        uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8);
        int v17 = *(void **)(v16 + 40);
        *(void *)(v16 + 40) = v15;
      }
      id v18 = [*(id *)(a1 + 32) outstandingRequests];
      [v18 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v19 = [v3 completionHandler];
      uint64_t v20 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v22, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 signData:(id)a4 signatureEntanglementMode:(unint64_t)a5 withCompletionHandler:(id)a6
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v9 = a4;
  id v10 = a6;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 134218240;
      uint64_t v23 = [v9 length];
      __int16 v24 = 1024;
      int v25 = a5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Request to sign data of length %lu with signature entanglement mode %d", buf, 0x12u);
    }
  }
  uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 3221225472;
  v17[2] = __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke;
  v17[3] = &unk_2644D6850;
  id v18 = v9;
  uint64_t v19 = self;
  id v20 = v10;
  unint64_t v21 = a5;
  id v15 = v10;
  id v16 = v9;
  dispatch_sync(v14, v17);
}

void __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoSignDataRequest);
  [(NPKProtoSignDataRequest *)v2 setDataToSign:*(void *)(a1 + 32)];
  [(NPKProtoSignDataRequest *)v2 setEntanglementMode:*(void *)(a1 + 56) == 1];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoSignDataRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:14 isResponse:0];

  BOOL v6 = [*(id *)(a1 + 40) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 48))
    {
      id v7 = MEMORY[0x223C37380]();
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke_2;
      v17[3] = &unk_2644D2B90;
      id v18 = *(id *)(a1 + 48);
      BOOL v8 = (void *)MEMORY[0x223C37380](v17);
      id v9 = *(void **)(a1 + 40);
      id v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];
    }
    else
    {
      id v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16) {
        goto LABEL_11;
      }
      id v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v20 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v20 = v5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v14 = *(void *)(a1 + 48);
  if (v14)
  {
    id v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, void, NSObject *))(v14 + 16))(v14, 0, 0, v7);
LABEL_10:
  }
LABEL_11:
}

uint64_t __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(result + 16))(result, 0, 0, a2);
  }
  return result;
}

- (void)paymentWebService:(id)a3 signData:(id)a4 withCompletionHandler:(id)a5
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 134217984;
      uint64_t v20 = [v7 length];
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Request to sign data of length %lu", buf, 0xCu);
    }
  }
  BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke;
  block[3] = &unk_2644D3388;
  id v16 = v7;
  int v17 = self;
  id v18 = v8;
  id v13 = v8;
  id v14 = v7;
  dispatch_sync(v12, block);
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke(id *a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  v2 = objc_alloc_init(NPKProtoSignDataRequest);
  id v3 = [a1[4] SHA256Hash];
  [(NPKProtoSignDataRequest *)v2 setDigestToSign:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v5 = [(NPKProtoSignDataRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:14 isResponse:0];

  id v7 = [a1[5] _sendProtobuf:v6 responseExpected:1];
  if (v7)
  {
    if (a1[6])
    {
      id v8 = MEMORY[0x223C37380]();
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke_2;
      v18[3] = &unk_2644D2B90;
      id v19 = a1[6];
      id v9 = (void *)MEMORY[0x223C37380](v18);
      id v10 = a1[5];
      uint64_t v11 = (void *)MEMORY[0x223C37380](v8);
      [v10 _trackOutstandingRequestWithMessageIdentifier:v7 completionHandler:v11 errorHandler:v9];
    }
    else
    {
      id v16 = pk_Payment_log();
      BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (!v17) {
        goto LABEL_11;
      }
      id v8 = pk_Payment_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v21 = v7;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  BOOL v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

  if (v13)
  {
    id v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v21 = v6;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  id v15 = a1[6];
  if (v15)
  {
    id v8 = NPKGetIDSCommunicationError();
    (*((void (**)(id, void, void, NSObject *))v15 + 2))(v15, 0, 0, v8);
LABEL_10:
  }
LABEL_11:
}

uint64_t __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(result + 16))(result, 0, 0, a2);
  }
  return result;
}

- (void)didRegisterResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __65__NPKPaymentWebServiceCompanionTargetDevice_didRegisterResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    uint64_t v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24), 0);
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __65__NPKPaymentWebServiceCompanionTargetDevice_didRegisterResponse___block_invoke(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoDeviceDidRegisterResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoDeviceDidRegisterResponse *)v4 initWithData:v5];

    if ([(NPKProtoDeviceDidRegisterResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(NPKProtoDeviceDidRegisterResponse *)v6 success];
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 didRegisterWithRegionMap:(id)a4
{
}

- (void)paymentWebService:(id)a3 didRegisterWithRegionMap:(id)a4 primaryRegionTopic:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  v15[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke;
  v15[3] = &unk_2644D3BE0;
  id v16 = v9;
  id v17 = v10;
  id v18 = v8;
  id v19 = self;
  id v12 = v8;
  id v13 = v10;
  id v14 = v9;
  dispatch_sync(v11, v15);
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  v2 = pk_Payment_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_Payment_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v24 = v5;
      __int16 v25 = 2112;
      uint64_t v26 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: did register with region map %@ (primary topic %@)", buf, 0x16u);
    }
  }
  id v7 = objc_alloc_init(NPKProtoDeviceDidRegisterRequest);
  id v8 = *(void **)(a1 + 32);
  v21[0] = MEMORY[0x263EF8330];
  v21[1] = 3221225472;
  v21[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_412;
  v21[3] = &unk_2644D6A50;
  id v9 = v7;
  uint64_t v22 = v9;
  [v8 enumerateKeysAndObjectsUsingBlock:v21];
  [(NPKProtoDeviceDidRegisterRequest *)v9 setPrimaryRegionTopic:*(void *)(a1 + 40)];
  id v10 = [*(id *)(a1 + 48) context];
  uint64_t v11 = [v10 regions];
  id v12 = [v11 allKeys];
  id v13 = (void *)[v12 mutableCopy];
  [(NPKProtoDeviceDidRegisterRequest *)v9 setBrokerRegionPushTopics:v13];

  id v14 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v15 = [(NPKProtoDeviceDidRegisterRequest *)v9 data];
  id v16 = (void *)[v14 initWithProtobufData:v15 type:8 isResponse:0];

  id v17 = [*(id *)(a1 + 56) _sendProtobuf:v16 responseExpected:1];
  if (v17)
  {
    [*(id *)(a1 + 56) _trackOutstandingRequestWithMessageIdentifier:v17 completionHandler:&__block_literal_global_30 errorHandler:&__block_literal_global_416];
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      uint64_t v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v24 = v16;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }
    }
  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_412(uint64_t a1, uint64_t a2, void *a3)
{
  BOOL v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 addTsmRegionPushTopics:a2];
  [*(id *)(a1 + 32) addTsmRegionURLs:v6];
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_2(uint64_t a1, int a2, void *a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109378;
      v8[1] = a2;
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: completed %d %@", (uint8_t *)v8, 0x12u);
    }
  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_414(uint64_t a1, void *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = a2;
  BOOL v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    BOOL v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 138412290;
      id v7 = v2;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: error %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (id)_supportedRegionsForWebService:(id)a3
{
  BOOL v3 = [a3 context];
  BOOL v4 = [v3 configuration];
  BOOL v5 = NPKSupportedRegionsForWebServiceConfiguration(v4);

  return v5;
}

- (BOOL)_supportsFeaturesForWebService:(id)a3
{
  BOOL v3 = [a3 context];
  BOOL v4 = [v3 configuration];
  char v5 = NPKSupportsFeaturesForWebServiceConfiguration(v4);

  return v5;
}

- (void)paymentWebServiceDidUpdateConfiguration:(id)a3
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v4 = a3;
  char v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _supportedRegionsForWebService:v4];
  int v6 = [v4 context];

  id v7 = [v6 configuration];
  uint64_t v8 = [v7 configuration];

  __int16 v9 = pk_Payment_log();
  LODWORD(v7) = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v21 = v8;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service updated configuration: %@", buf, 0xCu);
    }
  }
  uint64_t v11 = NPKDomainAccessorForDomain(@"com.apple.nanopassbook");
  id v12 = v11;
  if (v5)
  {
    [v11 setObject:v8 forKey:@"Configuration"];
    uint64_t v13 = *MEMORY[0x263F5C850];
    [v12 setObject:v5 forKey:*MEMORY[0x263F5C850]];
  }
  else
  {
    [v11 removeObjectForKey:@"Configuration"];
    uint64_t v13 = *MEMORY[0x263F5C850];
    [v12 removeObjectForKey:*MEMORY[0x263F5C850]];
  }
  id v14 = (id)[v12 synchronize];
  id v15 = objc_alloc_init(MEMORY[0x263F57528]);
  id v16 = (void *)MEMORY[0x263EFFA08];
  v19[0] = @"Configuration";
  v19[1] = v13;
  id v17 = [MEMORY[0x263EFF8C0] arrayWithObjects:v19 count:2];
  id v18 = [v16 setWithArray:v17];
  [v15 synchronizeNanoDomain:@"com.apple.nanopassbook" keys:v18];
}

- (id)paymentWebService:(id)a3 filterVerificationChannels:(id)a4
{
  id v4 = a4;
  return v4;
}

- (unint64_t)paymentSupportedInCurrentRegionForWebService:(id)a3
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v4 = a3;
  char v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceRegion];
  if (v5)
  {
    int v6 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _supportedRegionsForWebService:v4];
    if (v6) {
      unint64_t v7 = PKStockholmSetupSupportedInRegion();
    }
    else {
      unint64_t v7 = 0;
    }
  }
  else
  {
    unint64_t v7 = 0;
  }
  uint64_t v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      if (v7 > 2) {
        uint64_t v11 = @"unknown";
      }
      else {
        uint64_t v11 = off_2644D8468[v7];
      }
      int v13 = 138412546;
      id v14 = v5;
      __int16 v15 = 2112;
      id v16 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: region %@ support %@", (uint8_t *)&v13, 0x16u);
    }
  }
  return v7;
}

- (unint64_t)registrationSupportedInCurrentRegionForWebService:(id)a3
{
  id v4 = a3;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self paymentSupportedInCurrentRegionForWebService:v4] == 1)
  {
    unint64_t v5 = 1;
  }
  else if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _supportsFeaturesForWebService:v4])
  {
    unint64_t v5 = 1;
  }
  else
  {
    unint64_t v5 = 2;
  }

  return v5;
}

- (id)paymentWebService:(id)a3 supportedRegionFeatureOfType:(int64_t)a4
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v6 = [a3 context];
  unint64_t v7 = [v6 configuration];

  if (v7)
  {
    uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceRegion];
    BOOL v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceClass];
    id v10 = [v7 featureWithType:a4 inRegion:v8];
    if (v10)
    {
      uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceVersion];
      id v12 = [v10 versionRange];
      int v13 = [v12 versionMeetsRequirements:v11 deviceClass:v9];

      if (v13)
      {
        id v14 = v10;
LABEL_17:

LABEL_18:
LABEL_19:

        goto LABEL_20;
      }
      BOOL v19 = pk_Payment_log();
      BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

      if (v20)
      {
        uint64_t v21 = pk_Payment_log();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          int v23 = 134217984;
          int64_t v24 = a4;
          _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Unsupported OS version for feature with type %ld", (uint8_t *)&v23, 0xCu);
        }
      }
    }
    else
    {
      uint64_t v17 = pk_Payment_log();
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (!v18)
      {
        id v14 = 0;
        goto LABEL_18;
      }
      uint64_t v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v23 = 134217984;
        int64_t v24 = a4;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: No feature of type %ld found", (uint8_t *)&v23, 0xCu);
      }
    }
    id v14 = 0;
    goto LABEL_17;
  }
  __int16 v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    uint64_t v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 134217984;
      int64_t v24 = a4;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: No feature of type %ld found - device not registered", (uint8_t *)&v23, 0xCu);
    }
    id v14 = 0;
    goto LABEL_19;
  }
  id v14 = 0;
LABEL_20:

  return v14;
}

- (id)deviceDescriptionForPaymentWebService:(id)a3
{
  BOOL v3 = NPKPairedOrPairingDevice();
  id v4 = [v3 valueForProperty:*MEMORY[0x263F57610]];

  return v4;
}

- (id)deviceName
{
  id v2 = NPKPairedOrPairingDevice();
  BOOL v3 = [v2 valueForProperty:*MEMORY[0x263F575F0]];

  return v3;
}

- (id)deviceSerialNumber
{
  id v2 = NPKPairedOrPairingDevice();
  BOOL v3 = [v2 valueForProperty:*MEMORY[0x263F57648]];

  return v3;
}

- (id)deviceClass
{
  id v2 = NPKPairedOrPairingDevice();
  BOOL v3 = NPKDeviceClassFromDevice(v2);

  return v3;
}

- (id)osVersion
{
  id v2 = NPKPairedOrPairingDevice();
  BOOL v3 = [v2 valueForProperty:*MEMORY[0x263F57668]];

  return v3;
}

- (id)deviceVersion
{
  id v2 = NPKPairedOrPairingDevice();
  BOOL v3 = NPKDeviceOSVersionRequirementFromDevice(v2);

  return v3;
}

- (void)paymentWebService:(id)a3 deleteApplicationWithAID:(id)a4
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v5 = a4;
  int v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    uint64_t v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v14 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Delete application with AID %@", buf, 0xCu);
    }
  }
  if (v5)
  {
    id v12 = v5;
    BOOL v9 = [MEMORY[0x263EFF8C0] arrayWithObjects:&v12 count:1];
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deleteApplicationWithAID___block_invoke;
    v10[3] = &unk_2644D7978;
    id v11 = v5;
    [(NPKPaymentWebServiceCompanionTargetDevice *)self removeAIDsFromSecureElement:v9 withCompletion:v10];
  }
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deleteApplicationWithAID___block_invoke(uint64_t a1, int a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v5 = a3;
  int v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    uint64_t v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412802;
      uint64_t v11 = v9;
      __int16 v12 = 1024;
      int v13 = a2;
      __int16 v14 = 2112;
      id v15 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Delete AID %@ completed %d %@", (uint8_t *)&v10, 0x1Cu);
    }
  }
}

- (void)paymentWebService:(id)a3 addPaymentPass:(id)a4 withCompletionHandler:(id)a5
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    int v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v14 = [v9 uniqueID];
      *(_DWORD *)long long buf = 138412290;
      id v28 = v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Add payment pass: %@", buf, 0xCu);
    }
  }
  id v15 = [v8 context];
  [(NPKPaymentWebServiceCompanionTargetDevice *)self archiveContext:v15];

  double v16 = NPKGizmoScreenScale();
  uint64_t v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  [v17 setQueueAppropriateFailedActions:1];
  BOOL v18 = [MEMORY[0x263F5BDF8] sharedInstance];
  BOOL v19 = [v9 dataAccessor];
  v23[0] = MEMORY[0x263EF8330];
  v23[1] = 3221225472;
  v23[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke;
  v23[3] = &unk_2644D4018;
  id v24 = v17;
  id v25 = v9;
  id v26 = v10;
  id v20 = v10;
  id v21 = v9;
  id v22 = v17;
  [v19 downloadRemoteAssetsWithScreenScale:@"~watch" suffix:v18 cloudStoreCoordinatorDelegate:v23 completion:v16];
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke(uint64_t a1, int a2, void *a3, float a4)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v7 = a3;
  id v8 = pk_General_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_General_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109634;
      int v17 = a2;
      __int16 v18 = 2048;
      double v19 = a4;
      __int16 v20 = 2112;
      id v21 = v7;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: finished %d progress %f error %@", buf, 0x1Cu);
    }
  }
  if (a2)
  {
    uint64_t v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    int v13 = NPKPairedOrPairingDevice();
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 3221225472;
    v14[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_424;
    v14[3] = &unk_2644D4150;
    id v15 = *(id *)(a1 + 48);
    [v11 savePaymentPass:v12 forDevice:v13 completion:v14];
  }
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_424(uint64_t a1)
{
  id v2 = dispatch_get_global_queue(0, 0);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_2;
  block[3] = &unk_2644D2B10;
  id v4 = *(id *)(a1 + 32);
  dispatch_async(v2, block);
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)paymentWebService:(id)a3 addSecureElementPass:(id)a4 properties:(id)a5 completion:(id)a6
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  id v30 = a3;
  id v10 = a4;
  id v29 = a5;
  id v11 = a6;
  uint64_t v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    __int16 v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = [v10 uniqueID];
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v15;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v29;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Add secure element pass pass: %@, with properties: %@", buf, 0x16u);
    }
  }
  if (v10)
  {
    if ([(NPKPaymentWebServiceCompanionTargetDevice *)self supportsSharingInAChain]) {
      int v16 = [v10 isCarKeyPass];
    }
    else {
      int v16 = 0;
    }
    __int16 v20 = [v10 paymentPass];
    objc_initWeak(&location, self);
    v48[0] = MEMORY[0x263EF8330];
    v48[1] = 3221225472;
    v48[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke;
    v48[3] = &unk_2644D79C8;
    objc_copyWeak(&v51, &location);
    id v21 = v20;
    id v49 = v21;
    id v22 = v11;
    id v50 = v22;
    int v23 = (void *)MEMORY[0x223C37380](v48);
    id v24 = v23;
    if (v16)
    {
      id v25 = dispatch_group_create();
      dispatch_group_enter(v25);
      v46[0] = MEMORY[0x263EF8330];
      v46[1] = 3221225472;
      v46[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_428;
      v46[3] = &unk_2644D2910;
      id v26 = v25;
      id v47 = v26;
      [(NPKPaymentWebServiceCompanionTargetDevice *)self paymentWebService:v30 addPaymentPass:v21 withCompletionHandler:v46];
      *(void *)long long buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x3032000000;
      v54 = __Block_byref_object_copy__23;
      v55 = __Block_byref_object_dispose__23;
      id v56 = 0;
      dispatch_group_enter(v26);
      uint64_t v27 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2;
      block[3] = &unk_2644D7A38;
      id v40 = v10;
      id v41 = v29;
      v42 = v26;
      v43 = self;
      id v44 = v22;
      id v45 = buf;
      id v28 = v26;
      dispatch_sync(v27, block);

      v34[0] = MEMORY[0x263EF8330];
      v34[1] = 3221225472;
      v34[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_439;
      v34[3] = &unk_2644D7A88;
      uint64_t v38 = buf;
      id v35 = v21;
      uint64_t v36 = self;
      id v37 = v24;
      dispatch_group_notify(v28, MEMORY[0x263EF83A0], v34);

      _Block_object_dispose(buf, 8);
    }
    else
    {
      v31[0] = MEMORY[0x263EF8330];
      v31[1] = 3221225472;
      v31[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_441;
      v31[3] = &unk_2644D3FF0;
      uint64_t v33 = v23;
      id v32 = v21;
      [(NPKPaymentWebServiceCompanionTargetDevice *)self paymentWebService:v30 addPaymentPass:v32 withCompletionHandler:v31];

      id v28 = v33;
    }

    objc_destroyWeak(&v51);
    objc_destroyWeak(&location);
  }
  else
  {
    int v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      double v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Unable to find pass to add!", buf, 2u);
      }
    }
    if (v11) {
      (*((void (**)(id, void))v11 + 2))(v11, 0);
    }
  }
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke(id *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  BOOL v3 = [a1[4] uniqueID];
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    int v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v12 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Add secure element pass: %@ did finish.", buf, 0xCu);
    }
  }
  id v7 = [WeakRetained companionAgentConnection];
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  _DWORD v8[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_427;
  v8[3] = &unk_2644D79A0;
  id v10 = a1[5];
  id v9 = a1[4];
  [v7 paymentPassWithUniqueID:v3 synchronous:0 reply:v8];
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_427(uint64_t a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    if (v5)
    {
      int v6 = pk_Payment_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 138412290;
        id v13 = v3;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Replying with updated payment pass: %@", (uint8_t *)&v12, 0xCu);
      }
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      id v8 = *(void (**)(void))(v7 + 16);
LABEL_14:
      v8();
    }
  }
  else
  {
    if (v5)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = *(void **)(a1 + 32);
        int v12 = 138412290;
        id v13 = v10;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Unable to fetch updated payment pass; Replying with original payment pass: %@",
          (uint8_t *)&v12,
          0xCu);
      }
    }
    uint64_t v11 = *(void *)(a1 + 40);
    if (v11)
    {
      id v8 = *(void (**)(void))(v11 + 16);
      goto LABEL_14;
    }
  }
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_428(uint64_t a1)
{
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  id v2 = pk_Payment_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_Payment_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = [*(id *)(a1 + 32) uniqueID];
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      v54 = v5;
      __int16 v55 = 2112;
      uint64_t v56 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to add secure element pass: %@, with properties: %@", buf, 0x16u);
    }
  }
  uint64_t v7 = objc_alloc_init(NPKProtoAddSecureElementPassWithPropertiesRequest);
  id v8 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoAddSecureElementPassWithPropertiesRequest *)v7 setPassUniqueID:v8];

  [*(id *)(a1 + 32) flushLoadedImageSets];
  id v9 = (void *)[objc_alloc(MEMORY[0x263F5BF70]) initWithPass:*(void *)(a1 + 32)];
  id v10 = v9;
  if (v9)
  {
    [v9 setProperties:*(void *)(a1 + 40)];
    id v52 = v10;
    uint64_t v11 = [MEMORY[0x263EFF8C0] arrayWithObjects:&v52 count:1];
    int v12 = objc_msgSend(v11, "pk_arrayBySafelyApplyingBlock:", &__block_literal_global_434);
    id v13 = (void *)[v12 mutableCopy];
    [(NPKProtoAddSecureElementPassWithPropertiesRequest *)v7 setPayloadDatas:v13];

    id v14 = objc_alloc(MEMORY[0x263F4A228]);
    id v15 = [(NPKProtoAddSecureElementPassWithPropertiesRequest *)v7 data];
    int v16 = (void *)[v14 initWithProtobufData:v15 type:154 isResponse:0];

    int v17 = *(void **)(a1 + 56);
    uint64_t v50 = *MEMORY[0x263F49F80];
    id v51 = &unk_26D0439E0;
    BOOL v18 = [NSDictionary dictionaryWithObjects:&v51 forKeys:&v50 count:1];
    double v19 = [v17 _sendProtobuf:v16 responseExpected:1 extraOptions:v18 priority:200];

    if (v19)
    {
      if (*(void *)(a1 + 64))
      {
        v47[0] = MEMORY[0x263EF8330];
        v47[1] = 3221225472;
        v47[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_435;
        v47[3] = &unk_2644D3E38;
        v48 = *(id *)(a1 + 32);
        id v49 = *(id *)(a1 + 48);
        __int16 v20 = (void *)MEMORY[0x223C37380](v47);
        v44[0] = MEMORY[0x263EF8330];
        v44[1] = 3221225472;
        v44[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_436;
        v44[3] = &unk_2644D7A10;
        uint64_t v46 = *(void *)(a1 + 72);
        id v21 = v20;
        id v45 = v21;
        id v22 = (void *)MEMORY[0x223C37380](v44);
        v42[0] = MEMORY[0x263EF8330];
        v42[1] = 3221225472;
        v42[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2_438;
        v42[3] = &unk_2644D2B90;
        id v43 = v21;
        id v41 = v21;
        int v23 = v16;
        id v24 = v12;
        id v25 = v11;
        id v26 = (void *)MEMORY[0x223C37380](v42);
        uint64_t v27 = *(void **)(a1 + 56);
        id v28 = (void *)MEMORY[0x223C37380](v22);
        [v27 _trackOutstandingRequestWithMessageIdentifier:v19 completionHandler:v28 errorHandler:v26];

        uint64_t v11 = v25;
        int v12 = v24;
        int v16 = v23;

        id v29 = v48;
LABEL_23:

        goto LABEL_24;
      }
      id v39 = pk_Payment_log();
      BOOL v40 = os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT);

      if (v40)
      {
        id v29 = pk_Payment_log();
        if (!os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        v54 = v19;
        uint64_t v36 = "Warning: No response expected for message with identifier %@";
        id v37 = v29;
        os_log_type_t v38 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      id v34 = pk_Payment_log();
      BOOL v35 = os_log_type_enabled(v34, OS_LOG_TYPE_ERROR);

      if (v35)
      {
        id v29 = pk_Payment_log();
        if (!os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        v54 = v16;
        uint64_t v36 = "Error: No message identifier for protobuf %@";
        id v37 = v29;
        os_log_type_t v38 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_21E92F000, v37, v38, v36, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    goto LABEL_25;
  }
  id v30 = pk_General_log();
  BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);

  if (v31)
  {
    id v32 = pk_General_log();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v32, OS_LOG_TYPE_ERROR, "Error: Target device - unable to add secure element pass - no payload found", buf, 2u);
    }
  }
  uint64_t v33 = *(void *)(a1 + 64);
  if (v33) {
    (*(void (**)(uint64_t, void))(v33 + 16))(v33, 0);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
LABEL_25:
}

id __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_431(uint64_t a1, void *a2)
{
  return NPKSecureArchiveObject(a2);
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_435(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v2 = pk_Payment_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_Payment_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = NSStringFromBOOL();
      int v7 = 138412546;
      uint64_t v8 = v5;
      __int16 v9 = 2112;
      id v10 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Finished handling request to add secure element pass: %@ with success: %@", (uint8_t *)&v7, 0x16u);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_436(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
  id v5 = obj;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2_438(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v7, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_439(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if ([*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count])
  {
    id v2 = [*(id *)(a1 + 32) uniqueID];
    id v3 = pk_General_log();
    BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v4)
    {
      BOOL v5 = pk_General_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        *(_DWORD *)long long buf = 138412546;
        uint64_t v18 = v6;
        __int16 v19 = 2112;
        __int16 v20 = v2;
        _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Handling credentials update %@ for unique ID %@", buf, 0x16u);
      }
    }
    int v7 = [*(id *)(a1 + 40) delegate];
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v9 = *(void *)(*(void *)(v8 + 8) + 40);
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 3221225472;
    v12[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_440;
    v12[3] = &unk_2644D7A60;
    uint64_t v16 = v8;
    id v13 = v2;
    id v15 = *(id *)(a1 + 48);
    id v14 = *(id *)(a1 + 32);
    id v10 = v2;
    [v7 handleCredentialsUpdate:v9 forUniqueID:v10 completion:v12];
  }
  else
  {
    uint64_t v11 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v11();
  }
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_440(void *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v3 = a2;
  BOOL v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    uint64_t v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(*(void *)(a1[7] + 8) + 40);
      uint64_t v8 = a1[4];
      int v9 = 138412802;
      uint64_t v10 = v7;
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      __int16 v13 = 2112;
      id v14 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Did complete credentials update %@ for unique ID %@. Error: %@", (uint8_t *)&v9, 0x20u);
    }
  }
  (*(void (**)(void, BOOL))(a1[6] + 16))(a1[6], a1[5] != 0);
}

uint64_t __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_441(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32) != 0);
}

- (void)addSecureElementPassWithPropertiesResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target addSecureElementPassWithPropertiesResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  int v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  BOOL v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    __int16 v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoAddSecureElementPassWithPropertiesResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoAddSecureElementPassWithPropertiesResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v6 success];
    __int16 v11 = [MEMORY[0x263EFF9C0] set];
    uint64_t v12 = [v6 credentialsBytes];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    v20[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke_2;
    v20[3] = &unk_2644D7830;
    id v13 = v11;
    id v21 = v13;
    [v12 enumerateObjectsUsingBlock:v20];

    uint64_t v14 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;
    id v16 = v13;
  }
  else
  {
    int v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (!v18) {
      goto LABEL_4;
    }
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
    }
  }

LABEL_4:
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  BOOL v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    BOOL v5 = v6;
  }
}

- (void)paymentWebService:(id)a3 removePass:(id)a4 withCompletionHandler:(id)a5
{
  id v7 = a5;
  id v8 = a4;
  id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  [v11 setQueueAppropriateFailedActions:1];
  uint64_t v9 = [v8 uniqueID];

  uint64_t v10 = NPKPairedOrPairingDevice();
  [v11 removePaymentPassWithUniqueID:v9 forDevice:v10 waitForConfirmation:0 completion:v7];
}

- (void)downloadAllPaymentPassesForPaymentWebService:(id)a3
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v13 = v4;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Redownloading all payment passes as requested by web service %@", buf, 0xCu);
    }
  }
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_downloadAllPaymentPassesForPaymentWebService___block_invoke;
  v10[3] = &unk_2644D2910;
  id v11 = v4;
  id v9 = v4;
  [v5 redownloadAllPaymentPassesWithCompletion:v10];
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_downloadAllPaymentPassesForPaymentWebService___block_invoke(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = pk_Payment_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_Payment_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Redownload of all payment passes complete as requested by web service %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (BOOL)claimSecureElementForCurrentUser
{
  return 1;
}

- (unint64_t)secureElementOwnershipStateForCurrentUser
{
  return 3;
}

- (BOOL)secureElementIsAvailable
{
  return 1;
}

- (void)secureElementGetAppletsResponse:(id)a3
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__364;
  id v26 = __Block_byref_object_dispose__365;
  id v27 = 0;
  id v11 = [MEMORY[0x263EFF980] array];
  if (v10)
  {
    uint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_secureElementGetAppletsResponse___block_invoke;
    block[3] = &unk_2644D7AB0;
    void block[4] = self;
    id v19 = v10;
    id v20 = v4;
    id v21 = v11;
    p_long long buf = &buf;
    dispatch_sync(v12, block);
  }
  else
  {
    id v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int v17 = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v17, 2u);
      }
    }
  }
  uint64_t v16 = *(void *)(*((void *)&buf + 1) + 40);
  if (v16) {
    (*(void (**)(uint64_t, void *, void))(v16 + 16))(v16, v11, 0);
  }

  _Block_object_dispose(&buf, 8);
}

void __77__NPKPaymentWebServiceCompanionTargetDevice_secureElementGetAppletsResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  BOOL v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSecureElementGetAppletsResponse alloc];
    uint64_t v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSecureElementGetAppletsResponse *)v4 initWithData:v5];

    if ([(NPKProtoSecureElementGetAppletsResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      if ([(NPKProtoSecureElementGetAppletsResponse *)v6 appletsBytesCount])
      {
        unint64_t v10 = 0;
        do
        {
          id v11 = [(NPKProtoSecureElementGetAppletsResponse *)v6 appletsBytes];
          uint64_t v12 = [v11 objectAtIndexedSubscript:v10];
          id v13 = objc_opt_class();
          BOOL v14 = NPKSecureUnarchiveObject(v12, v13);

          if (v14) {
            [*(id *)(a1 + 56) addObject:v14];
          }

          ++v10;
        }
        while (v10 < [(NPKProtoSecureElementGetAppletsResponse *)v6 appletsBytesCount]);
      }
      uint64_t v15 = [*(id *)(a1 + 32) outstandingRequests];
      [v15 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v16 = [v3 completionHandler];
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v18 = *(void **)(v17 + 40);
      *(void *)(v17 + 40) = v16;
    }
  }
  else
  {
    uint64_t v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)secureElementAppletsWithCompletion:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke;
  v7[3] = &unk_2644D2E58;
  void v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  dispatch_sync(v5, v7);
}

void __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSecureElementGetAppletsRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoSecureElementGetAppletsRequest *)v2 data];
  uint64_t v5 = (void *)[v3 initWithProtobufData:v4 type:5 isResponse:0];

  id v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v7 = MEMORY[0x223C37380]();
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke_2;
      v17[3] = &unk_2644D2B90;
      id v18 = *(id *)(a1 + 40);
      id v8 = (void *)MEMORY[0x223C37380](v17);
      id v9 = *(void **)(a1 + 32);
      unint64_t v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];
    }
    else
    {
      uint64_t v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16) {
        goto LABEL_11;
      }
      uint64_t v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v20 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    id v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v20 = v5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14)
  {
    uint64_t v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:
  }
LABEL_11:
}

uint64_t __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)secureElementRemoveAppletsResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  unint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementRemoveAppletsResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    id v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24), 0);
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementRemoveAppletsResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSecureElementRemoveAppletsResponse alloc];
    uint64_t v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSecureElementRemoveAppletsResponse *)v4 initWithData:v5];

    if ([(NPKProtoSecureElementRemoveAppletsResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(NPKProtoSecureElementRemoveAppletsResponse *)v6 success];
      unint64_t v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
  }
  else
  {
    uint64_t v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)removeAIDsFromSecureElement:(id)a3 withCompletion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke;
  block[3] = &unk_2644D3388;
  id v12 = v6;
  BOOL v13 = self;
  id v14 = v7;
  id v9 = v7;
  id v10 = v6;
  dispatch_sync(v8, block);
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke(id *a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSecureElementRemoveAppletsRequest);
  id v3 = (void *)[a1[4] mutableCopy];
  [(NPKProtoSecureElementRemoveAppletsRequest *)v2 setCardAIDs:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v5 = [(NPKProtoSecureElementRemoveAppletsRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:6 isResponse:0];

  id v7 = [a1[5] _sendProtobuf:v6 responseExpected:1];
  if (v7)
  {
    if (a1[6])
    {
      BOOL v8 = MEMORY[0x223C37380]();
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke_2;
      v18[3] = &unk_2644D2B90;
      id v19 = a1[6];
      id v9 = (void *)MEMORY[0x223C37380](v18);
      id v10 = a1[5];
      uint64_t v11 = (void *)MEMORY[0x223C37380](v8);
      [v10 _trackOutstandingRequestWithMessageIdentifier:v7 completionHandler:v11 errorHandler:v9];
    }
    else
    {
      BOOL v16 = pk_Payment_log();
      BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (!v17) {
        goto LABEL_11;
      }
      BOOL v8 = pk_Payment_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v21 = v7;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  id v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

  if (v13)
  {
    id v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v21 = v6;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v15 = (void (**)(id, void, NSObject *))a1[6];
  if (v15)
  {
    BOOL v8 = NPKGetIDSCommunicationError();
    v15[2](v15, 0, v8);
LABEL_10:
  }
LABEL_11:
}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)dumpLogsResponse:(id)a3
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v21 = 0x3032000000;
  uint64_t v22 = __Block_byref_object_copy__364;
  uint64_t v23 = __Block_byref_object_dispose__365;
  id v24 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __62__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsResponse___block_invoke;
    block[3] = &unk_2644D5B30;
    void block[4] = self;
    id v18 = v10;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, void))(v15 + 16))(v15, 1, 0);
  }
  _Block_object_dispose(&buf, 8);
}

void __62__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) outstandingRequests];
    [v4 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v5 = [v3 completionHandler];
    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }
  else
  {
    BOOL v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      id v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v11, 2u);
      }
    }
  }
}

- (void)dumpLogsWithCompletion:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke;
  v7[3] = &unk_2644D2E58;
  void v7[4] = self;
  id v8 = v4;
  id v6 = v4;
  dispatch_sync(v5, v7);
}

void __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoDumpLogsRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoDumpLogsRequest *)v2 data];
  uint64_t v5 = (void *)[v3 initWithProtobufData:v4 type:9 isResponse:0];

  id v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 40))
    {
      id v7 = MEMORY[0x223C37380]();
      v17[0] = MEMORY[0x263EF8330];
      v17[1] = 3221225472;
      v17[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke_2;
      v17[3] = &unk_2644D2B90;
      id v18 = *(id *)(a1 + 40);
      id v8 = (void *)MEMORY[0x223C37380](v17);
      BOOL v9 = *(void **)(a1 + 32);
      id v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];
    }
    else
    {
      uint64_t v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16) {
        goto LABEL_11;
      }
      id v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v20 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v20 = v5;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14)
  {
    id v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:
  }
LABEL_11:
}

uint64_t __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)pendingRemovalResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_pendingRemovalResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24), 0);
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __68__NPKPaymentWebServiceCompanionTargetDevice_pendingRemovalResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoMarkPaymentPassForDeleteResponse alloc];
    uint64_t v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoMarkPaymentPassForDeleteResponse *)v4 initWithData:v5];

    if ([(NPKProtoMarkPaymentPassForDeleteResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoMarkPaymentPassForDeleteResponse *)v6 success];
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      BOOL v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)handlePendingRemovalOfPaymentPass:(id)a3 uniqueID:(id)a4 completion:(id)a5
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v24 = v8;
      __int16 v25 = 2112;
      id v26 = v9;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Handle pending removal of pass %@ with unique ID %@", buf, 0x16u);
    }
  }
  uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke;
  v18[3] = &unk_2644D3540;
  id v19 = v9;
  id v20 = v8;
  uint64_t v21 = self;
  id v22 = v10;
  id v15 = v10;
  id v16 = v8;
  id v17 = v9;
  dispatch_sync(v14, v18);
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoMarkPaymentPassForDeleteRequest);
  [(NPKProtoMarkPaymentPassForDeleteRequest *)v2 setPassID:*(void *)(a1 + 32)];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v29 = a1;
  id v3 = [*(id *)(a1 + 40) devicePaymentApplications];
  uint64_t v4 = [v3 countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v33;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v33 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = [*(id *)(*((void *)&v32 + 1) + 8 * i) applicationIdentifier];
        if (v8)
        {
          [(NPKProtoMarkPaymentPassForDeleteRequest *)v2 addPaymentApplicationAIDs:v8];
          id v9 = pk_Payment_log();
          BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

          if (v10)
          {
            uint64_t v11 = pk_Payment_log();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)long long buf = 138412290;
              id v39 = v8;
              _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Requesting deletion of AID %@", buf, 0xCu);
            }
          }
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v32 objects:v40 count:16];
    }
    while (v5);
  }

  id v12 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v13 = [(NPKProtoMarkPaymentPassForDeleteRequest *)v2 data];
  uint64_t v14 = (void *)[v12 initWithProtobufData:v13 type:12 isResponse:0];

  id v15 = *(void **)(v29 + 48);
  uint64_t v36 = *MEMORY[0x263F49ED8];
  uint64_t v37 = MEMORY[0x263EFFA88];
  id v16 = [NSDictionary dictionaryWithObjects:&v37 forKeys:&v36 count:1];
  id v17 = [v15 _sendProtobuf:v14 responseExpected:1 extraOptions:v16];

  if (v17)
  {
    if (*(void *)(v29 + 56))
    {
      id v18 = MEMORY[0x223C37380]();
      v30[0] = MEMORY[0x263EF8330];
      v30[1] = 3221225472;
      v30[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke_452;
      v30[3] = &unk_2644D2B90;
      id v31 = *(id *)(v29 + 56);
      id v19 = (void *)MEMORY[0x223C37380](v30);
      id v20 = *(void **)(v29 + 48);
      uint64_t v21 = (void *)MEMORY[0x223C37380](v18);
      [v20 _trackOutstandingRequestWithMessageIdentifier:v17 completionHandler:v21 errorHandler:v19];

LABEL_23:
      goto LABEL_24;
    }
    uint64_t v27 = pk_Payment_log();
    BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

    if (v28)
    {
      id v18 = pk_Payment_log();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_23;
      }
      *(_DWORD *)long long buf = 138412290;
      id v39 = v17;
      id v24 = "Warning: No response expected for message with identifier %@";
      __int16 v25 = v18;
      os_log_type_t v26 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_22;
    }
  }
  else
  {
    id v22 = pk_Payment_log();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

    if (v23)
    {
      id v18 = pk_Payment_log();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_23;
      }
      *(_DWORD *)long long buf = 138412290;
      id v39 = v14;
      id v24 = "Error: No message identifier for protobuf %@";
      __int16 v25 = v18;
      os_log_type_t v26 = OS_LOG_TYPE_ERROR;
LABEL_22:
      _os_log_impl(&dword_21E92F000, v25, v26, v24, buf, 0xCu);
      goto LABEL_23;
    }
  }
LABEL_24:
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke_452(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)preferredAIDRequest:(id)a3
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      int v18 = 138412290;
      id v19 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&v18, 0xCu);
    }
  }
  id v9 = [NPKProtoSetPreferredPaymentApplicationRequest alloc];
  BOOL v10 = [v4 data];
  uint64_t v11 = [(NPKProtoSetPreferredPaymentApplicationRequest *)v9 initWithData:v10];

  id v12 = [(NPKProtoSetPreferredPaymentApplicationRequest *)v11 passID];
  BOOL v13 = [(NPKProtoSetPreferredPaymentApplicationRequest *)v11 preferredApplicationAID];
  uint64_t v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    id v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = 138412546;
      id v19 = v12;
      __int16 v20 = 2112;
      uint64_t v21 = v13;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: unique ID %@ AID %@", (uint8_t *)&v18, 0x16u);
    }
  }
  if (v12)
  {
    id v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
    [v17 handlePreferredAID:v13 forPassWithUniqueID:v12];
  }
}

- (void)preferredAIDResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__364;
  id v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  BOOL v23 = &v22;
  uint64_t v24 = 0x3032000000;
  __int16 v25 = __Block_byref_object_copy__23;
  os_log_type_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __66__NPKPaymentWebServiceCompanionTargetDevice_preferredAIDResponse___block_invoke;
    block[3] = &unk_2644D7AD8;
    void block[4] = self;
    id v18 = v10;
    p_long long buf = &buf;
    id v19 = v4;
    uint64_t v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, 1, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __66__NPKPaymentWebServiceCompanionTargetDevice_preferredAIDResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) outstandingRequests];
    [v4 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v5 = [v3 completionHandler];
    uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v8 = [NPKProtoSetPreferredPaymentApplicationResponse alloc];
    id v9 = [*(id *)(a1 + 48) data];
    BOOL v10 = [(NPKProtoSetPreferredPaymentApplicationResponse *)v8 initWithData:v9];

    uint64_t v11 = [(NPKProtoSetPreferredPaymentApplicationResponse *)v10 preferredApplicationAID];
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
  else
  {
    uint64_t v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      id v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v17 = 0;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v17, 2u);
      }
    }
  }
}

- (void)handlePreferredAID:(id)a3 forPassWithUniqueID:(id)a4 completion:(id)a5
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v24 = v8;
      __int16 v25 = 2112;
      id v26 = v9;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Handle preferred AID %@ for unique ID %@", buf, 0x16u);
    }
  }
  uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke;
  v18[3] = &unk_2644D3540;
  id v19 = v9;
  id v20 = v8;
  uint64_t v21 = self;
  id v22 = v10;
  id v15 = v10;
  id v16 = v8;
  id v17 = v9;
  dispatch_sync(v14, v18);
}

void __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSetPreferredPaymentApplicationRequest);
  [(NPKProtoSetPreferredPaymentApplicationRequest *)v2 setPassID:*(void *)(a1 + 32)];
  [(NPKProtoSetPreferredPaymentApplicationRequest *)v2 setPreferredApplicationAID:*(void *)(a1 + 40)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoSetPreferredPaymentApplicationRequest *)v2 data];
  uint64_t v5 = (void *)[v3 initWithProtobufData:v4 type:16 isResponse:0];

  uint64_t v6 = *(void **)(a1 + 48);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 56))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      v20[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 56);
      id v10 = (void *)MEMORY[0x223C37380](v20);
      uint64_t v11 = *(void **)(a1 + 48);
      BOOL v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      BOOL v23 = v8;
      id v15 = "Warning: No response expected for message with identifier %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      BOOL v23 = v5;
      id v15 = "Error: No message identifier for protobuf %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

- (void)updatePaymentPass:(id)a3
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = [NPKProtoUpdatePaymentPassRequest alloc];
  uint64_t v6 = [v4 data];

  id v7 = [(NPKProtoUpdatePaymentPassRequest *)v5 initWithData:v6];
  id v8 = [(NPKProtoUpdatePaymentPassRequest *)v7 passTypeIdentifier];
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138412290;
      id v15 = v8;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Incoming update payment pass protobuf: %@", (uint8_t *)&v14, 0xCu);
    }
  }
  BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  BOOL v13 = [(NPKProtoUpdatePaymentPassRequest *)v7 passTypeIdentifier];
  [v12 handleUpdatePaymentPassWithTypeIdentifier:v13];
}

- (void)updatePushToken:(id)a3
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = [NPKProtoUpdatePushTokenRequest alloc];
  uint64_t v6 = [v4 data];

  id v7 = [(NPKProtoUpdatePushTokenRequest *)v5 initWithData:v6];
  id v8 = [(NPKProtoUpdatePushTokenRequest *)v7 pushToken];
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 138412290;
      int v14 = v8;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Incoming update push token protobuf: %@", (uint8_t *)&v13, 0xCu);
    }
  }
  BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v12 handlePushToken:v8];
}

- (void)preconditionNotMet:(id)a3
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = [NPKProtoPaymentPreconditionsNotMetRequest alloc];
  uint64_t v6 = [v4 data];

  id v7 = [(NPKProtoPaymentPreconditionsNotMetRequest *)v5 initWithData:v6];
  unsigned int v8 = [(NPKProtoPaymentPreconditionsNotMetRequest *)v7 failedPrecondition];
  id v9 = [(NPKProtoPaymentPreconditionsNotMetRequest *)v7 passIDs];
  BOOL v10 = (void *)[v9 copy];

  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    int v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v16[0] = 67109634;
      v16[1] = v8;
      __int16 v17 = 2112;
      id v18 = v10;
      __int16 v19 = 1024;
      BOOL v20 = v8 != 2;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Precondition not met: %d unique IDs %@ should unregister %d", (uint8_t *)v16, 0x18u);
    }
  }
  if (v8 > 2) {
    int v14 = 0;
  }
  else {
    int v14 = off_2644D8480[v8];
  }
  uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v15 handlePreconditionNotMetWithUniqueIDs:v10 preconditionDescription:v14 shouldUnregister:v8 != 2];
}

- (void)handleValueAddedServiceTransactions:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v3 = a3;
  id v4 = [NPKProtoHandleValueAddedServiceTransactionsRequest alloc];
  uint64_t v5 = [v3 data];
  uint64_t v6 = [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v4 initWithData:v5];

  id v7 = [MEMORY[0x263EFF980] array];
  unsigned int v8 = [MEMORY[0x263EFF980] array];
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109120;
      int v30 = [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionsBytesCount];
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %u transactions", buf, 8u);
    }
  }
  if ([(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionsBytesCount])
  {
    unint64_t v12 = 0;
    while (v12 < [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionPassIDsCount])
    {
      int v13 = [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionsBytes];
      int v14 = [v13 objectAtIndexedSubscript:v12];
      uint64_t v15 = objc_opt_class();
      uint64_t v16 = NPKSecureUnarchiveObject(v14, v15);

      if (v16)
      {
        [v7 addObject:v16];
        __int16 v17 = [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionPassIDs];
        id v18 = [v17 objectAtIndexedSubscript:v12];
        [v8 addObject:v18];
      }
      if (++v12 >= [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionsBytesCount])goto LABEL_16; {
    }
      }
    __int16 v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      uint64_t v21 = pk_Payment_log();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        int v22 = [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionsBytesCount];
        int v23 = [(NPKProtoHandleValueAddedServiceTransactionsRequest *)v6 transactionPassIDsCount];
        *(_DWORD *)long long buf = 67109376;
        int v30 = v22;
        __int16 v31 = 1024;
        int v32 = v23;
        _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: VAS transaction protobuf does not have matching array lengths (%u %u)!", buf, 0xEu);
      }
    }
  }
LABEL_16:
  if ([v7 count])
  {
    id v24 = objc_alloc_init(MEMORY[0x263F5C0A8]);
    v26[0] = MEMORY[0x263EF8330];
    v26[1] = 3221225472;
    v26[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_handleValueAddedServiceTransactions___block_invoke;
    v26[3] = &unk_2644D4810;
    id v27 = v8;
    id v28 = v24;
    id v25 = v24;
    [v7 enumerateObjectsUsingBlock:v26];
  }
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_handleValueAddedServiceTransactions___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  uint64_t v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  if (![v5 length])
  {

    uint64_t v5 = 0;
  }
  [*(id *)(a1 + 40) insertOrUpdateValueAddedServiceTransaction:v6 forPassUniqueIdentifier:v5 paymentTransaction:0 completion:0];
}

- (void)handlePaymentTransactions:(id)a3
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  id v3 = a3;
  id v4 = [NPKProtoHandlePaymentTransactionsRequest alloc];
  id v47 = v3;
  uint64_t v5 = [v3 data];
  id v6 = [(NPKProtoHandlePaymentTransactionsRequest *)v4 initWithData:v5];

  id v7 = [MEMORY[0x263EFF980] array];
  unsigned int v8 = [MEMORY[0x263EFF980] array];
  id v9 = [MEMORY[0x263EFF9A0] dictionary];
  BOOL v10 = pk_Payment_log();
  LODWORD(v5) = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)id v49 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionsBytesCount];
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %u transactions", buf, 8u);
    }
  }
  if ([(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionsBytesCount])
  {
    unint64_t v12 = 0;
    while (v12 < [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionPassIDsCount])
    {
      int v13 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionsBytes];
      int v14 = [v13 objectAtIndexedSubscript:v12];
      uint64_t v15 = objc_opt_class();
      uint64_t v16 = NPKSecureUnarchiveObject(v14, v15);

      if (v16)
      {
        __int16 v17 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionPassIDs];
        id v18 = [v17 objectAtIndexedSubscript:v12];

        [v7 addObject:v16];
        [v8 addObject:v18];
        __int16 v19 = pk_Payment_log();
        BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

        if (v20)
        {
          uint64_t v21 = pk_Payment_log();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 138412546;
            *(void *)id v49 = v16;
            *(_WORD *)&v49[8] = 2112;
            uint64_t v50 = v18;
            _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Transaction: %@ for unique ID %@", buf, 0x16u);
          }
        }
      }

      if (++v12 >= [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionsBytesCount]) {
        goto LABEL_20;
      }
    }
    int v22 = pk_Payment_log();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

    if (v23)
    {
      id v24 = pk_Payment_log();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        int v25 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionsBytesCount];
        int v26 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionPassIDsCount];
        *(_DWORD *)long long buf = 67109376;
        *(_DWORD *)id v49 = v25;
        *(_WORD *)&v49[4] = 1024;
        *(_DWORD *)&v49[6] = v26;
        _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_ERROR, "Error: Payment transaction protobuf does not have matching array lengths (%u %u)!", buf, 0xEu);
      }
    }
  }
LABEL_20:
  if ([(NPKProtoHandlePaymentTransactionsRequest *)v6 passAppletStatesCount])
  {
    unint64_t v27 = 0;
    while (v27 < [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionPassIDsCount])
    {
      id v28 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 passAppletStates];
      uint64_t v29 = [v28 objectAtIndexedSubscript:v27];

      if ([v29 length])
      {
        int v30 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 passAppletStates];
        __int16 v31 = [v30 objectAtIndexedSubscript:v27];
        int v32 = objc_opt_class();
        uint64_t v33 = NPKSecureUnarchiveObject(v31, v32);

        if (v33)
        {
          long long v34 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionPassIDs];
          long long v35 = [v34 objectAtIndexedSubscript:v27];

          [v9 setObject:v33 forKey:v35];
        }
      }

      if (++v27 >= [(NPKProtoHandlePaymentTransactionsRequest *)v6 passAppletStatesCount]) {
        goto LABEL_32;
      }
    }
    uint64_t v36 = pk_Payment_log();
    BOOL v37 = os_log_type_enabled(v36, OS_LOG_TYPE_ERROR);

    if (v37)
    {
      uint64_t v38 = pk_Payment_log();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      {
        int v39 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionsBytesCount];
        int v40 = [(NPKProtoHandlePaymentTransactionsRequest *)v6 transactionPassIDsCount];
        *(_DWORD *)long long buf = 67109376;
        *(_DWORD *)id v49 = v39;
        *(_WORD *)&v49[4] = 1024;
        *(_DWORD *)&v49[6] = v40;
        _os_log_impl(&dword_21E92F000, v38, OS_LOG_TYPE_ERROR, "Error: Applet state protobuf does not have matching array lengths (%u %u)!", buf, 0xEu);
      }
    }
  }
LABEL_32:
  if ([v7 count] || objc_msgSend(v9, "count"))
  {
    uint64_t v41 = pk_General_log();
    BOOL v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);

    if (v42)
    {
      id v43 = pk_General_log();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412802;
        *(void *)id v49 = v7;
        *(_WORD *)&v49[8] = 2112;
        uint64_t v50 = v9;
        __int16 v51 = 2112;
        id v52 = v8;
        _os_log_impl(&dword_21E92F000, v43, OS_LOG_TYPE_DEFAULT, "Notice: Will handle Transactions: %@ appletStates: %@ for uniqueIDs:%@", buf, 0x20u);
      }
    }
    id v44 = [v46 delegate];
    [v44 handlePaymentTransactions:v7 appletStates:v9 forUniqueIDs:v8];
  }
}

- (void)handleRemovedTransaction:(id)a3
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = [NPKProtoHandleRemoveTransactionsRequest alloc];
  id v6 = [v4 data];

  id v7 = [(NPKProtoHandleRemoveTransactionsRequest *)v5 initWithData:v6];
  unsigned int v8 = [(NPKProtoHandleRemoveTransactionsRequest *)v7 identifiers];
  id v9 = pk_General_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_General_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 138412290;
      int v14 = v8;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Request to remove transactions with identfiers: %@", (uint8_t *)&v13, 0xCu);
    }
  }
  unint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v12 handleRemoveTransactionsWithIdentifiers:v8];
}

- (void)retrieveTransactionsForPassWithUniqueID:(id)a3
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v23 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Retrieving transactions for unique ID %@", buf, 0xCu);
    }
  }
  unsigned int v8 = objc_alloc_init(NPKProtoRetrievePaymentTransactionsRequest);
  [(NPKProtoRetrievePaymentTransactionsRequest *)v8 setPassID:v4];
  id v9 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v10 = [(NPKProtoRetrievePaymentTransactionsRequest *)v8 data];
  uint64_t v11 = (void *)[v9 initWithProtobufData:v10 type:20 isResponse:0];

  v20[0] = *MEMORY[0x263F49F80];
  unint64_t v12 = [NSNumber numberWithDouble:*MEMORY[0x263F4A150]];
  v21[0] = v12;
  v20[1] = *MEMORY[0x263F49F60];
  int v13 = [NSString stringWithFormat:@"retrieveTransactions-%@", v4];
  v21[1] = v13;
  int v14 = [NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:2];

  uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_retrieveTransactionsForPassWithUniqueID___block_invoke;
  v18[3] = &unk_2644D29D0;
  id v19 = v11;
  id v16 = v11;
  id v17 = NPKProtoSendWithOptions(v15, v16, 200, 0, 0, v18, v14);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_retrieveTransactionsForPassWithUniqueID___block_invoke(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_ERROR, "Error: IDS failed to send protobuf %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (void)handleDeletePaymentTransactionWithIdentifier:(id)a3 passUniqueIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_handleDeletePaymentTransactionWithIdentifier_passUniqueIdentifier___block_invoke;
  block[3] = &unk_2644D31B0;
  id v12 = v6;
  id v13 = v7;
  int v14 = self;
  id v9 = v7;
  id v10 = v6;
  dispatch_async(v8, block);
}

void __111__NPKPaymentWebServiceCompanionTargetDevice_handleDeletePaymentTransactionWithIdentifier_passUniqueIdentifier___block_invoke(void *a1)
{
  v17[1] = *MEMORY[0x263EF8340];
  id v2 = objc_opt_new();
  BOOL v3 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithObjects:", a1[4], 0);
  [v2 setIdentifiers:v3];

  if (a1[5])
  {
    id v4 = [MEMORY[0x263EFF980] arrayWithObjects:0];
    [v2 setPassIDs:v4];
  }
  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [v2 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:26 isResponse:0];

  uint64_t v8 = (void *)a1[6];
  uint64_t v16 = *MEMORY[0x263F49F80];
  v17[0] = &unk_26D043940;
  id v9 = [NSDictionary dictionaryWithObjects:v17 forKeys:&v16 count:1];
  id v10 = [v8 _sendProtobuf:v7 responseExpected:0 extraOptions:v9];

  if (!v10)
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

    if (v12)
    {
      id v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v15 = v7;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }
    }
  }
}

- (void)handleUpdatedAppletState:(id)a3
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = [NPKProtoHandleAppletStateChangeRequest alloc];
  id v6 = [v4 data];

  id v7 = [(NPKProtoHandleAppletStateChangeRequest *)v5 initWithData:v6];
  uint64_t v8 = [(NPKProtoHandleAppletStateChangeRequest *)v7 passID];
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 138412290;
      BOOL v20 = v8;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Received updated applet state for pass with unique ID %@", (uint8_t *)&v19, 0xCu);
    }
  }
  BOOL v12 = [(NPKProtoHandleAppletStateChangeRequest *)v7 passAppletState];
  if ([v12 length])
  {
    id v13 = objc_opt_class();
    int v14 = NPKSecureUnarchiveObject(v12, v13);
  }
  else
  {
    int v14 = 0;
  }
  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    id v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 138412290;
      BOOL v20 = v14;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Decoded applet state: %@", (uint8_t *)&v19, 0xCu);
    }
  }
  if (v8)
  {
    id v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
    [v18 handleAppletState:v14 forUniqueID:v8];
  }
}

- (void)setExpressPassResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  BOOL v42 = __Block_byref_object_copy__23;
  id v43 = __Block_byref_object_dispose__23;
  id v44 = 0;
  uint64_t v34 = 0;
  long long v35 = &v34;
  uint64_t v36 = 0x3032000000;
  BOOL v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = &v28;
  uint64_t v30 = 0x3032000000;
  __int16 v31 = __Block_byref_object_copy__23;
  int v32 = __Block_byref_object_dispose__23;
  id v33 = 0;
  uint64_t v24 = 0;
  int v25 = &v24;
  uint64_t v26 = 0x2020000000;
  uint64_t v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_setExpressPassResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    BOOL v20 = &v34;
    uint64_t v21 = &v28;
    p_long long buf = &buf;
    id v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      int v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = v35[5];
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v15 + 16))(v15, v25[3], v29[5], *(void *)(*((void *)&buf + 1) + 40));
  }
  _Block_object_dispose(&v24, 8);
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);
}

void __68__NPKPaymentWebServiceCompanionTargetDevice_setExpressPassResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  BOOL v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSetExpressPassResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSetExpressPassResponse *)v4 initWithData:v5];

    if ([(NPKProtoSetExpressPassResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
    uint64_t v14 = [(NPKProtoSetExpressPassResponse *)v6 actualUniqueID];
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    id v17 = [(NPKProtoSetExpressPassResponse *)v6 actualExpressPassInformation];
    id v18 = objc_opt_class();
    id v19 = NPKSecureUnarchiveObject(v17, v18);

    if (v19)
    {
      BOOL v20 = [MEMORY[0x263EFFA08] setWithObject:v19];
      uint64_t v22 = NPKExpressConfigurationFromInformation(v20, v21);
    }
    else
    {
      uint64_t v25 = [(NPKProtoSetExpressPassResponse *)v6 currentExpressPassesInformationsCount];
      uint64_t v26 = *(void **)(a1 + 32);
      if (v25)
      {
        BOOL v20 = [(NPKProtoSetExpressPassResponse *)v6 currentExpressPassesInformations];
        uint64_t v24 = [v26 _expressPassesInformationFromDataArray:v20];
        uint64_t v28 = NPKExpressConfigurationFromInformation(v24, v27);
        uint64_t v29 = *(void *)(*(void *)(a1 + 72) + 8);
        uint64_t v30 = *(void **)(v29 + 40);
        *(void *)(v29 + 40) = v28;

LABEL_14:
        if ([(NPKProtoSetExpressPassResponse *)v6 success])
        {
          uint64_t v31 = *(void *)(*(void *)(a1 + 80) + 8);
          uint64_t v32 = 1;
        }
        else if ([(NPKProtoSetExpressPassResponse *)v6 cancelled])
        {
          uint64_t v31 = *(void *)(*(void *)(a1 + 80) + 8);
          uint64_t v32 = 2;
        }
        else
        {
          BOOL v33 = [(NPKProtoSetExpressPassResponse *)v6 needsUnlock];
          uint64_t v31 = *(void *)(*(void *)(a1 + 80) + 8);
          if (!v33)
          {
            *(void *)(v31 + 24) = 0;
            goto LABEL_21;
          }
          uint64_t v32 = 3;
        }
        *(void *)(v31 + 24) = v32;
LABEL_21:

        goto LABEL_22;
      }
      BOOL v20 = [(NPKProtoSetExpressPassResponse *)v6 expressPassConfigurations];
      uint64_t v22 = [v26 _expressPassesConfigurationFromDataArray:v20];
    }
    uint64_t v23 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v24 = *(void **)(v23 + 40);
    *(void *)(v23 + 40) = v22;
    goto LABEL_14;
  }
  id v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    id v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v34[0] = 0;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v34, 2u);
    }
  }
LABEL_22:
}

- (void)setExpressWithPassConfiguration:(id)a3 requestAuthorization:(BOOL)a4 completion:(id)a5
{
  BOOL v6 = a4;
  uint64_t v37 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a5;
  BOOL v10 = [v8 passInformation];
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = [v10 expressMode];
      uint64_t v15 = [v10 passUniqueIdentifier];
      BOOL v16 = [v10 paymentApplicationIdentifier];
      *(_DWORD *)long long buf = 138413314;
      id v28 = v8;
      __int16 v29 = 2112;
      uint64_t v30 = v14;
      __int16 v31 = 2112;
      uint64_t v32 = v15;
      __int16 v33 = 2112;
      uint64_t v34 = v16;
      __int16 v35 = 1024;
      BOOL v36 = v6;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: set express with configuration %@\n mode: %@\n unique ID %@\n, AID %@\n, request authorization %d", buf, 0x30u);
    }
  }
  id v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke;
  block[3] = &unk_2644D7B28;
  BOOL v26 = v6;
  id v22 = v10;
  id v23 = v8;
  uint64_t v24 = self;
  id v25 = v9;
  id v18 = v9;
  id v19 = v8;
  id v20 = v10;
  dispatch_sync(v17, block);
}

void __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke(uint64_t a1)
{
  v37[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSetExpressPassRequest);
  BOOL v3 = [*(id *)(a1 + 32) passUniqueIdentifier];
  [(NPKProtoSetExpressPassRequest *)v2 setUniqueID:v3];

  id v4 = [*(id *)(a1 + 32) paymentApplicationIdentifier];
  [(NPKProtoSetExpressPassRequest *)v2 setApplicationIdentifier:v4];

  [(NPKProtoSetExpressPassRequest *)v2 setRequestAuthorization:*(unsigned __int8 *)(a1 + 64)];
  id v5 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoSetExpressPassRequest *)v2 setExpressPassInformation:v5];

  BOOL v6 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoSetExpressPassRequest *)v2 setExpressPassConfiguration:v6];

  id v7 = NSString;
  id v8 = [*(id *)(a1 + 32) expressMode];
  id v9 = [v7 stringWithFormat:@"SetExpressPassIdentifier-%@", v8];

  id v10 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v11 = [(NPKProtoSetExpressPassRequest *)v2 data];
  BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:22 isResponse:0];

  BOOL v13 = *(void **)(a1 + 48);
  uint64_t v14 = *MEMORY[0x263F49F60];
  v36[0] = *MEMORY[0x263F49ED8];
  v36[1] = v14;
  v37[0] = MEMORY[0x263EFFA88];
  v37[1] = v9;
  uint64_t v15 = [NSDictionary dictionaryWithObjects:v37 forKeys:v36 count:2];
  BOOL v16 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v15];

  if (v16)
  {
    if (*(void *)(a1 + 56))
    {
      v31[0] = MEMORY[0x263EF8330];
      v31[1] = 3221225472;
      v31[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_2;
      v31[3] = &unk_2644D7B00;
      uint64_t v32 = *(id *)(a1 + 32);
      id v33 = *(id *)(a1 + 56);
      id v17 = (void *)MEMORY[0x223C37380](v31);
      v29[0] = MEMORY[0x263EF8330];
      v29[1] = 3221225472;
      v29[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_3;
      v29[3] = &unk_2644D2B90;
      id v30 = *(id *)(a1 + 56);
      id v18 = (void *)MEMORY[0x223C37380](v29);
      id v19 = *(void **)(a1 + 48);
      id v20 = (void *)MEMORY[0x223C37380](v17);
      [v19 _trackOutstandingRequestWithMessageIdentifier:v16 completionHandler:v20 errorHandler:v18];

      uint64_t v21 = v32;
LABEL_11:

      goto LABEL_12;
    }
    uint64_t v27 = pk_Payment_log();
    BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

    if (v28)
    {
      uint64_t v21 = pk_Payment_log();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v35 = v16;
      uint64_t v24 = "Warning: No response expected for message with identifier %@";
      id v25 = v21;
      os_log_type_t v26 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v22 = pk_Payment_log();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

    if (v23)
    {
      uint64_t v21 = pk_Payment_log();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v35 = v12;
      uint64_t v24 = "Error: No message identifier for protobuf %@";
      id v25 = v21;
      os_log_type_t v26 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v25, v26, v24, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

void __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_2(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  if (!v6)
  {
    id v7 = (objc_class *)MEMORY[0x263F5BE68];
    id v8 = a3;
    id v9 = [v7 alloc];
    id v10 = [*(id *)(a1 + 32) expressMode];
    uint64_t v11 = [*(id *)(a1 + 32) paymentApplicationIdentifier];
    BOOL v12 = (void *)[v9 initForExpressMode:v10 withPassUniqueIdentifier:v8 paymentApplicationIdentifier:v11];

    if (v12)
    {
      BOOL v13 = [MEMORY[0x263EFFA08] setWithObject:v12];
      NPKExpressConfigurationFromInformation(v13, v14);
      id v15 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v15 = 0;
    }

    id v6 = v15;
  }
  id v16 = v6;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

- (void)removeExpressPassWithUniqueIdentifierResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: remove express pass with unique identifier: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  __int16 v35 = __Block_byref_object_copy__364;
  BOOL v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v27 = 0;
  BOOL v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__23;
  __int16 v31 = __Block_byref_object_dispose__23;
  id v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v27;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v24 + 24), v28[5]);
  }
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&buf, 8);
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifierResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  BOOL v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoRemoveExpressPassWithUniqueIdentifierResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v4 initWithData:v5];

    if ([(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
    uint64_t v14 = [(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v6 actualExpressPassInformation];
    uint64_t v15 = objc_opt_class();
    id v16 = NPKSecureUnarchiveObject(v14, v15);

    if (v16)
    {
      id v17 = [MEMORY[0x263EFFA08] setWithObject:v16];
      uint64_t v19 = NPKExpressConfigurationFromInformation(v17, v18);
    }
    else
    {
      uint64_t v22 = [(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v6 currentExpressPassesInformationsCount];
      uint64_t v23 = *(void **)(a1 + 32);
      if (v22)
      {
        id v17 = [(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v6 currentExpressPassesInformations];
        uint64_t v21 = [v23 _expressPassesInformationFromDataArray:v17];
        uint64_t v25 = NPKExpressConfigurationFromInformation(v21, v24);
        uint64_t v26 = *(void *)(*(void *)(a1 + 64) + 8);
        uint64_t v27 = *(void **)(v26 + 40);
        *(void *)(v26 + 40) = v25;

        goto LABEL_14;
      }
      id v17 = [(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v6 expressPassConfigurations];
      uint64_t v19 = [v23 _expressPassesConfigurationFromDataArray:v17];
    }
    uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v21 = *(void **)(v20 + 40);
    *(void *)(v20 + 40) = v19;
LABEL_14:

    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [(NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *)v6 success];
    goto LABEL_15;
  }
  id v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    id v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v28 = 0;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v28, 2u);
    }
  }
LABEL_15:
}

- (void)removeExpressPassWithUniqueIdentifier:(id)a3 completion:(id)a4
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v19 = v6;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device: remove express pass with unique ID: %@", buf, 0xCu);
    }
  }
  uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke;
  block[3] = &unk_2644D3388;
  id v15 = v6;
  id v16 = self;
  id v17 = v7;
  id v12 = v7;
  id v13 = v6;
  dispatch_sync(v11, block);
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke(uint64_t a1)
{
  void v27[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoRemoveExpressPassWithUniqueIdentifierRequest);
  [(NPKProtoRemoveExpressPassWithUniqueIdentifierRequest *)v2 setUniqueID:*(void *)(a1 + 32)];
  BOOL v3 = [NSString stringWithFormat:@"RemoveExpressPass-%@", *(void *)(a1 + 32)];
  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoRemoveExpressPassWithUniqueIdentifierRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:46 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v8 = *MEMORY[0x263F49F60];
  v26[0] = *MEMORY[0x263F49ED8];
  v26[1] = v8;
  v27[0] = MEMORY[0x263EFFA88];
  v27[1] = v3;
  BOOL v9 = [NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];
  id v10 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v11 = MEMORY[0x223C37380]();
      v22[0] = MEMORY[0x263EF8330];
      v22[1] = 3221225472;
      _DWORD v22[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke_2;
      v22[3] = &unk_2644D2B90;
      id v23 = *(id *)(a1 + 48);
      id v12 = (void *)MEMORY[0x223C37380](v22);
      id v13 = *(void **)(a1 + 40);
      uint64_t v14 = (void *)MEMORY[0x223C37380](v11);
      [v13 _trackOutstandingRequestWithMessageIdentifier:v10 completionHandler:v14 errorHandler:v12];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v25 = v10;
      id v17 = "Warning: No response expected for message with identifier %@";
      id v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v25 = v6;
      id v17 = "Error: No message identifier for protobuf %@";
      id v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v18, v19, v17, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v5 = v3;
    if (v3)
    {
      id v4 = 0;
    }
    else
    {
      id v4 = [MEMORY[0x263EFFA08] set];
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

    id v3 = v5;
  }
}

- (void)conflictingExpressPassIdentifiersForPassConfiguration:(id)a3 completion:(id)a4
{
  id v6 = a4;
  id v7 = v6;
  if (v6)
  {
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    _DWORD v8[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_completion___block_invoke;
    v8[3] = &unk_2644D7B50;
    id v9 = v6;
    [(NPKPaymentWebServiceCompanionTargetDevice *)self conflictingExpressPassIdentifiersForPassConfiguration:a3 withReferenceExpressState:0 completion:v8];
  }
}

uint64_t __110__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_completion___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)conflictingExpressPassIdentifiersForPassConfiguration:(id)a3 withReferenceExpressState:(id)a4 completion:(id)a5
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    id v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v24 = v8;
      __int16 v25 = 2112;
      id v26 = v9;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: conflicting express pass identifiers with passConfig %@, referenceExpressPassConfigurations:%@", buf, 0x16u);
    }
  }
  uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke;
  v18[3] = &unk_2644D3540;
  id v19 = v8;
  id v20 = v9;
  BOOL v21 = self;
  id v22 = v10;
  id v15 = v10;
  id v16 = v9;
  id v17 = v8;
  dispatch_sync(v14, v18);
}

void __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke(uint64_t a1)
{
  void v36[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest);
  id v3 = [*(id *)(a1 + 32) passInformation];
  id v4 = NPKSecureArchiveObject(v3);
  [(NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest *)v2 setExpressPassInformation:v4];

  id v5 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest *)v2 setExpressPassConfiguration:v5];

  id v6 = *(void **)(a1 + 40);
  v31[0] = MEMORY[0x263EF8330];
  v31[1] = 3221225472;
  v31[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_2;
  v31[3] = &unk_2644D7B78;
  id v7 = v2;
  id v32 = v7;
  [v6 enumerateObjectsUsingBlock:v31];
  id v8 = NSString;
  id v9 = [*(id *)(a1 + 32) passUniqueIdentifier];
  id v10 = [v8 stringWithFormat:@"ConflictingPassIdentifiers-%@", v9];

  id v11 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v12 = [(NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest *)v7 data];
  id v13 = (void *)[v11 initWithProtobufData:v12 type:53 isResponse:0];

  uint64_t v14 = *(void **)(a1 + 48);
  uint64_t v15 = *MEMORY[0x263F49F60];
  v35[0] = *MEMORY[0x263F49ED8];
  v35[1] = v15;
  v36[0] = MEMORY[0x263EFFA88];
  v36[1] = v10;
  id v16 = [NSDictionary dictionaryWithObjects:v36 forKeys:v35 count:2];
  id v17 = [v14 _sendProtobuf:v13 responseExpected:1 extraOptions:v16];

  if (v17)
  {
    if (*(void *)(a1 + 56))
    {
      id v18 = MEMORY[0x223C37380]();
      v29[0] = MEMORY[0x263EF8330];
      v29[1] = 3221225472;
      v29[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_3;
      v29[3] = &unk_2644D2B90;
      id v30 = *(id *)(a1 + 56);
      id v19 = (void *)MEMORY[0x223C37380](v29);
      id v20 = *(void **)(a1 + 48);
      BOOL v21 = (void *)MEMORY[0x223C37380](v18);
      [v20 _trackOutstandingRequestWithMessageIdentifier:v17 completionHandler:v21 errorHandler:v19];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v27 = pk_Payment_log();
    BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

    if (v28)
    {
      id v18 = pk_Payment_log();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v34 = v17;
      id v24 = "Warning: No response expected for message with identifier %@";
      __int16 v25 = v18;
      os_log_type_t v26 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v22 = pk_Payment_log();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

    if (v23)
    {
      id v18 = pk_Payment_log();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v34 = v13;
      id v24 = "Error: No message identifier for protobuf %@";
      __int16 v25 = v18;
      os_log_type_t v26 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v25, v26, v24, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

void __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = NPKSecureArchiveObject(v4);
  [v3 addReferenceExpressPassConfigurations:v5];

  id v6 = *(void **)(a1 + 32);
  id v8 = [v4 passInformation];

  id v7 = NPKSecureArchiveObject(v8);
  [v6 addReferenceExpressPassesInformation:v7];
}

uint64_t __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

- (void)conflictingExpressPassIdentifiersForPassInformationResponse:(id)a3
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: conflicting express pass identifiers incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v44 = 0x3032000000;
  uint64_t v45 = __Block_byref_object_copy__364;
  uint64_t v46 = __Block_byref_object_dispose__365;
  id v47 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = &v33;
  uint64_t v35 = 0x3032000000;
  BOOL v36 = __Block_byref_object_copy__23;
  id v37 = __Block_byref_object_dispose__23;
  id v38 = 0;
  uint64_t v27 = 0;
  BOOL v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__23;
  __int16 v31 = __Block_byref_object_dispose__23;
  id v32 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    void v21[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassInformationResponse___block_invoke;
    v21[3] = &unk_2644D7808;
    void v21[4] = self;
    id v22 = v10;
    id v23 = v4;
    p_long long buf = &buf;
    __int16 v25 = &v33;
    os_log_type_t v26 = &v27;
    dispatch_sync(v11, v21);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v39 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v39, 2u);
      }
    }
  }
  uint64_t v15 = pk_General_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    id v17 = pk_General_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = v34[5];
      uint64_t v19 = v28[5];
      *(_DWORD *)id v39 = 138412546;
      uint64_t v40 = v18;
      __int16 v41 = 2112;
      uint64_t v42 = v19;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device: Received conflictingPassesUniqueIDs:%@ conflictingReferencePassIdentifier:%@", v39, 0x16u);
    }
  }
  uint64_t v20 = *(void *)(*((void *)&buf + 1) + 40);
  if (v20) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v20, v34[5], v28[5]);
  }
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&v33, 8);
  _Block_object_dispose(&buf, 8);
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassInformationResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *)v4 initWithData:v5];

    if ([(NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
    uint64_t v14 = [(NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *)v6 conflictingExpressPassIdentifiers];

    if (v14)
    {
      uint64_t v15 = (void *)MEMORY[0x263EFFA08];
      BOOL v16 = [(NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *)v6 conflictingExpressPassIdentifiers];
      uint64_t v17 = [v15 setWithArray:v16];
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8);
      uint64_t v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;
    }
    uint64_t v20 = [(NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *)v6 conflictingReferenceExpressPassIdentifiers];

    if (v20)
    {
      BOOL v21 = (void *)MEMORY[0x263EFFA08];
      id v22 = [(NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *)v6 conflictingReferenceExpressPassIdentifiers];
      uint64_t v23 = [v21 setWithArray:v22];
      uint64_t v24 = *(void *)(*(void *)(a1 + 72) + 8);
      __int16 v25 = *(void **)(v24 + 40);
      *(void *)(v24 + 40) = v23;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)os_log_type_t v26 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v26, 2u);
      }
    }
  }
}

- (void)handleBalanceReminderWithBalanceAndPassRequest:(id)a3
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = [NPKProtoSetBalanceReminderForBalanceAndPassRequest alloc];
  BOOL v6 = [v4 data];

  id v7 = [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v5 initWithData:v6];
  BOOL v8 = [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v7 uniqueID];
  id v9 = [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v7 balanceBytes];
  id v10 = objc_opt_class();
  uint64_t v11 = NPKSecureUnarchiveObject(v9, v10);

  uint64_t v12 = [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v7 balanceReminderBytes];
  BOOL v13 = objc_opt_class();
  uint64_t v14 = NPKSecureUnarchiveObject(v12, v13);

  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    uint64_t v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 138412802;
      uint64_t v20 = v14;
      __int16 v21 = 2112;
      id v22 = v11;
      __int16 v23 = 2112;
      uint64_t v24 = v8;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Handling balance reminder update %@ for balance %@ unique ID %@", (uint8_t *)&v19, 0x20u);
    }
  }
  uint64_t v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v18 handleBalanceReminderUpdate:v14 balance:v11 forUniqueID:v8];
}

- (void)setBalanceReminderWithBalanceAndPassResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: set balance reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  BOOL v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  __int16 v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminderWithBalanceAndPassResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    __int16 v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminderWithBalanceAndPassResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSetBalanceReminderForBalanceAndPassResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSetBalanceReminderForBalanceAndPassResponse *)v4 initWithData:v5];

    if ([(NPKProtoSetBalanceReminderForBalanceAndPassResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoSetBalanceReminderForBalanceAndPassResponse *)v6 success];
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)setBalanceReminder:(id)a3 forBalance:(id)a4 pass:(id)a5 completion:(id)a6
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  uint64_t v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    BOOL v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412802;
      id v29 = v10;
      __int16 v30 = 2112;
      id v31 = v11;
      __int16 v32 = 2112;
      id v33 = v12;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: setting balance reminder %@ for balance %@ with passInfo %@", buf, 0x20u);
    }
  }
  uint64_t v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke;
  block[3] = &unk_2644D4178;
  id v23 = v12;
  id v24 = v11;
  id v25 = v10;
  os_log_type_t v26 = self;
  id v27 = v13;
  id v18 = v13;
  id v19 = v10;
  id v20 = v11;
  id v21 = v12;
  dispatch_sync(v17, block);
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke(uint64_t a1)
{
  v33[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSetBalanceReminderForBalanceAndPassRequest);
  id v3 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v2 setUniqueID:v3];

  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v2 setBalanceBytes:v4];

  id v5 = NPKSecureArchiveObject(*(void **)(a1 + 48));
  [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v2 setBalanceReminderBytes:v5];

  BOOL v6 = NSString;
  id v7 = [*(id *)(a1 + 40) identifiers];
  BOOL v8 = [v7 anyObject];
  id v9 = [v6 stringWithFormat:@"SetBalanceReminder-%@", v8];

  id v10 = objc_alloc(MEMORY[0x263F4A228]);
  id v11 = [(NPKProtoSetBalanceReminderForBalanceAndPassRequest *)v2 data];
  id v12 = (void *)[v10 initWithProtobufData:v11 type:57 isResponse:0];

  id v13 = *(void **)(a1 + 56);
  uint64_t v14 = *MEMORY[0x263F49F60];
  v32[0] = *MEMORY[0x263F49F80];
  v32[1] = v14;
  v33[0] = &unk_26D043940;
  v33[1] = v9;
  BOOL v15 = [NSDictionary dictionaryWithObjects:v33 forKeys:v32 count:2];
  BOOL v16 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v15];

  if (v16)
  {
    if (*(void *)(a1 + 64))
    {
      uint64_t v17 = MEMORY[0x223C37380]();
      v28[0] = MEMORY[0x263EF8330];
      v28[1] = 3221225472;
      void v28[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke_2;
      v28[3] = &unk_2644D2B90;
      id v29 = *(id *)(a1 + 64);
      id v18 = (void *)MEMORY[0x223C37380](v28);
      id v19 = *(void **)(a1 + 56);
      id v20 = (void *)MEMORY[0x223C37380](v17);
      [v19 _trackOutstandingRequestWithMessageIdentifier:v16 completionHandler:v20 errorHandler:v18];

LABEL_11:
      goto LABEL_12;
    }
    os_log_type_t v26 = pk_Payment_log();
    BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

    if (v27)
    {
      uint64_t v17 = pk_Payment_log();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v31 = v16;
      id v23 = "Warning: No response expected for message with identifier %@";
      id v24 = v17;
      os_log_type_t v25 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (v22)
    {
      uint64_t v17 = pk_Payment_log();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v31 = v12;
      id v23 = "Error: No message identifier for protobuf %@";
      id v24 = v17;
      os_log_type_t v25 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v24, v25, v23, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)balanceReminderWithBalanceAndPassResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: balance reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  id v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  __int16 v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__23;
  id v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x3032000000;
  os_log_type_t v26 = __Block_byref_object_copy__23;
  BOOL v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderWithBalanceAndPassResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderWithBalanceAndPassResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoBalanceReminderForBalanceAndPassResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoBalanceReminderForBalanceAndPassResponse *)v5 initWithData:v6];

    BOOL v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    id v12 = [(NPKProtoBalanceReminderForBalanceAndPassResponse *)v7 balanceReminderBytes];
    BOOL v13 = objc_opt_class();
    uint64_t v14 = NPKSecureUnarchiveObject(v12, v13);
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    BOOL v17 = [(NPKProtoBalanceReminderForBalanceAndPassResponse *)v7 hasErrorData];
    if (v17)
    {
      v1 = [(NPKProtoBalanceReminderForBalanceAndPassResponse *)v7 errorData];
      id v18 = objc_opt_class();
      id v19 = NPKSecureUnarchiveObject(v1, v18);
    }
    else
    {
      id v19 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v19);
    if (v17)
    {
    }
  }
  else
  {
    id v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      BOOL v22 = pk_Payment_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23[0] = 0;
        _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v23, 2u);
      }
    }
  }
}

- (void)balanceReminderForBalance:(id)a3 pass:(id)a4 completion:(id)a5
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v24 = v8;
      __int16 v25 = 2112;
      id v26 = v9;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: getting balance reminder for balance %@ with passInfo %@", buf, 0x16u);
    }
  }
  uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke;
  v18[3] = &unk_2644D3540;
  id v19 = v9;
  id v20 = v8;
  BOOL v21 = self;
  id v22 = v10;
  id v15 = v10;
  id v16 = v8;
  id v17 = v9;
  dispatch_sync(v14, v18);
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke(uint64_t a1)
{
  void v32[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoBalanceReminderForBalanceAndPassRequest);
  id v3 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoBalanceReminderForBalanceAndPassRequest *)v2 setUniqueID:v3];

  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoBalanceReminderForBalanceAndPassRequest *)v2 setBalanceBytes:v4];

  id v5 = NSString;
  BOOL v6 = [*(id *)(a1 + 40) identifiers];
  id v7 = [v6 anyObject];
  id v8 = [v5 stringWithFormat:@"BalanceReminder-%@", v7];

  id v9 = objc_alloc(MEMORY[0x263F4A228]);
  id v10 = [(NPKProtoBalanceReminderForBalanceAndPassRequest *)v2 data];
  id v11 = (void *)[v9 initWithProtobufData:v10 type:65 isResponse:0];

  BOOL v12 = *(void **)(a1 + 48);
  uint64_t v13 = *MEMORY[0x263F49F60];
  v31[0] = *MEMORY[0x263F49F80];
  v31[1] = v13;
  v32[0] = &unk_26D0439E0;
  v32[1] = v8;
  uint64_t v14 = [NSDictionary dictionaryWithObjects:v32 forKeys:v31 count:2];
  id v15 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v14];

  if (v15)
  {
    if (*(void *)(a1 + 56))
    {
      id v16 = MEMORY[0x223C37380]();
      v27[0] = MEMORY[0x263EF8330];
      v27[1] = 3221225472;
      void v27[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke_2;
      void v27[3] = &unk_2644D2B90;
      id v28 = *(id *)(a1 + 56);
      id v17 = (void *)MEMORY[0x223C37380](v27);
      id v18 = *(void **)(a1 + 48);
      id v19 = (void *)MEMORY[0x223C37380](v16);
      [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_11:
      goto LABEL_12;
    }
    __int16 v25 = pk_Payment_log();
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      id v16 = pk_Payment_log();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v30 = v15;
      id v22 = "Warning: No response expected for message with identifier %@";
      uint64_t v23 = v16;
      os_log_type_t v24 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

    if (v21)
    {
      id v16 = pk_Payment_log();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v30 = v11;
      id v22 = "Error: No message identifier for protobuf %@";
      uint64_t v23 = v16;
      os_log_type_t v24 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v23, v24, v22, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)setCommutePlanReminderWithCommutePlanAndPassResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: set commute plan reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminderWithCommutePlanAndPassResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __98__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminderWithCommutePlanAndPassResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse *)v4 initWithData:v5];

    if ([(NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse *)v6 success];
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)setCommutePlanReminder:(id)a3 forCommutePlan:(id)a4 pass:(id)a5 completion:(id)a6
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  uint64_t v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    id v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = [v12 uniqueID];
      *(_DWORD *)long long buf = 138412546;
      id v30 = v10;
      __int16 v31 = 2112;
      __int16 v32 = v17;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: setting commute plan reminder %@ for pass %@", buf, 0x16u);
    }
  }
  id v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke;
  block[3] = &unk_2644D4178;
  id v24 = v12;
  id v25 = v10;
  id v26 = v11;
  uint64_t v27 = self;
  id v28 = v13;
  id v19 = v13;
  id v20 = v11;
  id v21 = v10;
  id v22 = v12;
  dispatch_sync(v18, block);
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke(uint64_t a1)
{
  void v31[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest);
  id v3 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest *)v2 setUniqueID:v3];

  [*(id *)(a1 + 40) timeInterval];
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setReminderInterval:](v2, "setReminderInterval:");
  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 48));
  [(NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest *)v2 setCommutePlanBytes:v4];

  id v5 = NSString;
  BOOL v6 = [*(id *)(a1 + 32) uniqueID];
  id v7 = [v5 stringWithFormat:@"SetCommutePlanReminder-%@", v6];

  id v8 = objc_alloc(MEMORY[0x263F4A228]);
  id v9 = [(NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest *)v2 data];
  id v10 = (void *)[v8 initWithProtobufData:v9 type:58 isResponse:0];

  id v11 = *(void **)(a1 + 56);
  uint64_t v12 = *MEMORY[0x263F49F60];
  v30[0] = *MEMORY[0x263F49F80];
  v30[1] = v12;
  v31[0] = &unk_26D043940;
  v31[1] = v7;
  id v13 = [NSDictionary dictionaryWithObjects:v31 forKeys:v30 count:2];
  uint64_t v14 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v13];

  if (v14)
  {
    if (*(void *)(a1 + 64))
    {
      BOOL v15 = MEMORY[0x223C37380]();
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      void v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke_2;
      v26[3] = &unk_2644D2B90;
      id v27 = *(id *)(a1 + 64);
      id v16 = (void *)MEMORY[0x223C37380](v26);
      id v17 = *(void **)(a1 + 56);
      id v18 = (void *)MEMORY[0x223C37380](v15);
      [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_11:
      goto LABEL_12;
    }
    id v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      BOOL v15 = pk_Payment_log();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v29 = v14;
      id v21 = "Warning: No response expected for message with identifier %@";
      id v22 = v15;
      os_log_type_t v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      BOOL v15 = pk_Payment_log();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v29 = v10;
      id v21 = "Error: No message identifier for protobuf %@";
      id v22 = v15;
      os_log_type_t v23 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v22, v23, v21, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)commutePlanReminderWithCommutePlanAndPassResponse:(id)a3
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: commute plan reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__364;
  uint64_t v33 = __Block_byref_object_dispose__365;
  id v34 = 0;
  uint64_t v26 = 0;
  id v27 = (double *)&v26;
  uint64_t v28 = 0x2020000000;
  uint64_t v29 = 0;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x3032000000;
  v24[3] = __Block_byref_object_copy__23;
  void v24[4] = __Block_byref_object_dispose__23;
  id v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderWithCommutePlanAndPassResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v19 = v10;
    id v20 = v4;
    p_long long buf = &buf;
    id v22 = &v26;
    os_log_type_t v23 = v24;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v17 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v17, 2u);
      }
    }
  }
  if (*(void *)(*((void *)&buf + 1) + 40))
  {
    id v15 = objc_alloc(MEMORY[0x263F5BFC8]);
    id v16 = (void *)[v15 initWithTimeInterval:v27[3]];
    (*(void (**)(void))(*(void *)(*((void *)&buf + 1) + 40) + 16))();
  }
  _Block_object_dispose(v24, 8);

  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&buf, 8);
}

void __95__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderWithCommutePlanAndPassResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoCommutePlanReminderForCommutePlanAndPassResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoCommutePlanReminderForCommutePlanAndPassResponse *)v5 initWithData:v6];

    id v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    [(NPKProtoCommutePlanReminderForCommutePlanAndPassResponse *)v7 reminderInterval];
    *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v12;
    BOOL v13 = [(NPKProtoCommutePlanReminderForCommutePlanAndPassResponse *)v7 hasErrorData];
    if (v13)
    {
      v1 = [(NPKProtoCommutePlanReminderForCommutePlanAndPassResponse *)v7 errorData];
      uint64_t v14 = objc_opt_class();
      id v15 = NPKSecureUnarchiveObject(v1, v14);
    }
    else
    {
      id v15 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v15);
    if (v13)
    {
    }
  }
  else
  {
    id v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      id v18 = pk_Payment_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v19[0] = 0;
        _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v19, 2u);
      }
    }
  }
}

- (void)commutePlanReminderForCommutePlan:(id)a3 pass:(id)a4 withCompletion:(id)a5
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = [v9 uniqueID];
      *(_DWORD *)long long buf = 138412546;
      id v25 = v8;
      __int16 v26 = 2112;
      id v27 = v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: getting commute plan reminder for commute plan:%@ pass %@", buf, 0x16u);
    }
  }
  id v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 3221225472;
  void v19[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke;
  v19[3] = &unk_2644D3540;
  id v20 = v9;
  id v21 = v8;
  id v22 = self;
  id v23 = v10;
  id v16 = v10;
  id v17 = v8;
  id v18 = v9;
  dispatch_sync(v15, v19);
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke(uint64_t a1)
{
  void v31[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoCommutePlanReminderForCommutePlanAndPassRequest);
  id v3 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoCommutePlanReminderForCommutePlanAndPassRequest *)v2 setUniqueID:v3];

  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoCommutePlanReminderForCommutePlanAndPassRequest *)v2 setCommutePlanBytes:v4];

  id v5 = NSString;
  BOOL v6 = [*(id *)(a1 + 32) uniqueID];
  id v7 = [v5 stringWithFormat:@"CommutePlanReminder-%@", v6];

  id v8 = objc_alloc(MEMORY[0x263F4A228]);
  id v9 = [(NPKProtoCommutePlanReminderForCommutePlanAndPassRequest *)v2 data];
  id v10 = (void *)[v8 initWithProtobufData:v9 type:66 isResponse:0];

  id v11 = *(void **)(a1 + 48);
  uint64_t v12 = *MEMORY[0x263F49F60];
  v30[0] = *MEMORY[0x263F49F80];
  v30[1] = v12;
  v31[0] = &unk_26D0439E0;
  v31[1] = v7;
  BOOL v13 = [NSDictionary dictionaryWithObjects:v31 forKeys:v30 count:2];
  uint64_t v14 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v13];

  if (v14)
  {
    if (*(void *)(a1 + 56))
    {
      id v15 = MEMORY[0x223C37380]();
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      void v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke_2;
      v26[3] = &unk_2644D2B90;
      id v27 = *(id *)(a1 + 56);
      id v16 = (void *)MEMORY[0x223C37380](v26);
      id v17 = *(void **)(a1 + 48);
      id v18 = (void *)MEMORY[0x223C37380](v15);
      [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_11:
      goto LABEL_12;
    }
    id v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      id v15 = pk_Payment_log();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v29 = v14;
      id v21 = "Warning: No response expected for message with identifier %@";
      id v22 = v15;
      os_log_type_t v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      id v15 = pk_Payment_log();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v29 = v10;
      id v21 = "Error: No message identifier for protobuf %@";
      id v22 = v15;
      os_log_type_t v23 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v22, v23, v21, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)enableServiceModeResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  os_log_type_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    BOOL v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoEnableServiceModeResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoEnableServiceModeResponse *)v4 initWithData:v5];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(NPKProtoEnableServiceModeResponse *)v6 unlockRequired];
    if ([(NPKProtoEnableServiceModeResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:(id)a3
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v14 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Sending message to cancel outstanding set default express pass requests with mode: %@", buf, 0xCu);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode___block_invoke;
  v10[3] = &unk_2644D2E08;
  id v11 = v4;
  uint64_t v12 = self;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode___block_invoke(uint64_t a1)
{
  void v19[2] = *MEMORY[0x263EF8340];
  id v2 = (void *)[objc_alloc(MEMORY[0x263F5BE68]) initForExpressMode:*(void *)(a1 + 32) withPassUniqueIdentifier:0 paymentApplicationIdentifier:0];
  id v3 = objc_alloc_init(NPKProtoSetExpressPassRequest);
  [(NPKProtoSetExpressPassRequest *)v3 setCancelOutstandingRequests:1];
  id v4 = NPKSecureArchiveObject(v2);
  [(NPKProtoSetExpressPassRequest *)v3 setExpressPassInformation:v4];

  id v5 = [NSString stringWithFormat:@"SetExpressPassIdentifier-%@", *(void *)(a1 + 32)];
  id v6 = objc_alloc(MEMORY[0x263F4A228]);
  id v7 = [(NPKProtoSetExpressPassRequest *)v3 data];
  BOOL v8 = (void *)[v6 initWithProtobufData:v7 type:22 isResponse:0];

  id v9 = *(void **)(a1 + 40);
  uint64_t v10 = *MEMORY[0x263F49F60];
  v18[0] = *MEMORY[0x263F49ED8];
  v18[1] = v10;
  v19[0] = MEMORY[0x263EFFA88];
  v19[1] = v5;
  id v11 = [NSDictionary dictionaryWithObjects:v19 forKeys:v18 count:2];
  uint64_t v12 = [v9 _sendProtobuf:v8 responseExpected:0 extraOptions:v11];

  if (!v12)
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v17 = v8;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }
    }
  }
}

- (void)enableServiceModeForPassWithUniqueIdentifier:(id)a3 completion:(id)a4
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v19 = v6;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device: enable service mode for unique ID %@", buf, 0xCu);
    }
  }
  id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke;
  block[3] = &unk_2644D3388;
  id v15 = v6;
  id v16 = self;
  id v17 = v7;
  id v12 = v7;
  id v13 = v6;
  dispatch_sync(v11, block);
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke(uint64_t a1)
{
  void v26[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoEnableServiceModeRequest);
  [(NPKProtoEnableServiceModeRequest *)v2 setUniqueID:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoEnableServiceModeRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:27 isResponse:0];

  id v6 = *(void **)(a1 + 40);
  uint64_t v7 = *MEMORY[0x263F49F60];
  v25[0] = *MEMORY[0x263F49ED8];
  v25[1] = v7;
  v26[0] = MEMORY[0x263EFFA88];
  v26[1] = @"EnableServiceModeIdentifier";
  BOOL v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:v25 count:2];
  BOOL v9 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      id v11 = (void *)MEMORY[0x223C37380](v21);
      id v12 = *(void **)(a1 + 40);
      id v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v24 = v9;
      id v16 = "Warning: No response expected for message with identifier %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v24 = v5;
      id v16 = "Error: No message identifier for protobuf %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)cancelOutstandingEnableServiceModeRequests
{
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending message to cancel outstanding service mode requests", buf, 2u);
    }
  }
  id v6 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingEnableServiceModeRequests__block_invoke;
  block[3] = &unk_2644D2910;
  void block[4] = self;
  dispatch_sync(v6, block);
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingEnableServiceModeRequests__block_invoke(uint64_t a1)
{
  _DWORD v16[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoEnableServiceModeRequest);
  [(NPKProtoEnableServiceModeRequest *)v2 setCancelOutstandingRequests:1];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v4 = [(NPKProtoEnableServiceModeRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:27 isResponse:0];

  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = *MEMORY[0x263F49F60];
  v15[0] = *MEMORY[0x263F49ED8];
  v15[1] = v7;
  v16[0] = MEMORY[0x263EFFA88];
  v16[1] = @"EnableServiceModeIdentifier";
  BOOL v8 = [NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:2];
  BOOL v9 = [v6 _sendProtobuf:v5 responseExpected:0 extraOptions:v8];

  if (!v9)
  {
    uint64_t v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);

    if (v11)
    {
      id v12 = pk_Payment_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        int v13 = 138412290;
        BOOL v14 = v5;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v13, 0xCu);
      }
    }
  }
}

- (void)remotePassUpgradeResponse:(id)a3
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  id v31 = a3;
  BOOL v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    id v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [v31 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Remote update pass. Received response:%@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v8 = [v31 context];
  id v30 = [v8 incomingResponseIdentifier];

  if (v30)
  {
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v75 = 0x3032000000;
    v76 = __Block_byref_object_copy__364;
    v77 = __Block_byref_object_dispose__365;
    id v78 = 0;
    uint64_t v67 = 0;
    v68 = &v67;
    uint64_t v69 = 0x3032000000;
    v70 = __Block_byref_object_copy__23;
    v71 = __Block_byref_object_dispose__23;
    id v72 = 0;
    uint64_t v61 = 0;
    v62 = &v61;
    uint64_t v63 = 0x3032000000;
    v64 = __Block_byref_object_copy__23;
    v65 = __Block_byref_object_dispose__23;
    id v66 = 0;
    uint64_t v57 = 0;
    v58 = &v57;
    uint64_t v59 = 0x2020000000;
    uint64_t v60 = 0;
    uint64_t v51 = 0;
    id v52 = &v51;
    uint64_t v53 = 0x3032000000;
    v54 = __Block_byref_object_copy__23;
    __int16 v55 = __Block_byref_object_dispose__23;
    id v56 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = &v45;
    uint64_t v47 = 0x3032000000;
    uint64_t v48 = __Block_byref_object_copy__23;
    id v49 = __Block_byref_object_dispose__23;
    id v50 = 0;
    BOOL v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeResponse___block_invoke;
    block[3] = &unk_2644D7BA0;
    void block[4] = self;
    id v37 = v30;
    id v38 = v31;
    p_long long buf = &buf;
    uint64_t v40 = &v57;
    __int16 v41 = &v61;
    uint64_t v42 = &v67;
    id v43 = &v45;
    uint64_t v44 = &v51;
    dispatch_sync(v9, block);

    if (*(void *)(*((void *)&buf + 1) + 40))
    {
      if ([(id)v52[5] count])
      {
        uint64_t v10 = *(void *)(*((void *)&buf + 1) + 40);
        uint64_t v11 = v62[5];
        id v12 = [(id)v68[5] paymentPass];
        (*(void (**)(uint64_t, uint64_t, id, uint64_t, uint64_t))(v10 + 16))(v10, v11, v12, v52[5], v58[3]);
      }
      else
      {
        id v12 = objc_alloc_init(MEMORY[0x263EFF9C0]);
        long long v34 = 0u;
        long long v35 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        id v16 = (id)v46[5];
        uint64_t v17 = [v16 countByEnumeratingWithState:&v32 objects:v73 count:16];
        if (v17)
        {
          uint64_t v18 = *(void *)v33;
          do
          {
            for (uint64_t i = 0; i != v17; ++i)
            {
              if (*(void *)v33 != v18) {
                objc_enumerationMutation(v16);
              }
              BOOL v20 = *(void **)(*((void *)&v32 + 1) + 8 * i);
              id v21 = objc_msgSend(v20, "passUniqueIdentifier", v30);
              id v22 = [(id)v68[5] uniqueID];
              int v23 = [v21 isEqualToString:v22];

              if (v23)
              {
                id v24 = objc_alloc(MEMORY[0x263F5BE60]);
                char v25 = [(id)v68[5] secureElementPass];
                __int16 v26 = (void *)[v24 initWithPassInformation:v20 forSecureElementPass:v25];
              }
              else
              {
                __int16 v26 = (void *)[objc_alloc(MEMORY[0x263F5BE60]) initWithPassInformation:v20 isNFCExpressEnabled:1 isUWBExpressEnabled:0];
              }
              objc_msgSend(v12, "pk_safelyAddObject:", v26);
            }
            uint64_t v17 = [v16 countByEnumeratingWithState:&v32 objects:v73 count:16];
          }
          while (v17);
        }

        uint64_t v27 = *(void *)(*((void *)&buf + 1) + 40);
        uint64_t v28 = v62[5];
        uint64_t v29 = [(id)v68[5] paymentPass];
        (*(void (**)(uint64_t, uint64_t, void *, id, uint64_t))(v27 + 16))(v27, v28, v29, v12, v58[3]);
      }
    }

    _Block_object_dispose(&v45, 8);
    _Block_object_dispose(&v51, 8);

    _Block_object_dispose(&v57, 8);
    _Block_object_dispose(&v61, 8);

    _Block_object_dispose(&v67, 8);
    _Block_object_dispose(&buf, 8);
  }
  else
  {
    int v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      BOOL v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: Remote update pass. No associated message ID in response", (uint8_t *)&buf, 2u);
      }
    }
  }
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  BOOL v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoRemotePassUpdateResponse alloc];
    id v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoRemotePassUpdateResponse *)v5 initWithData:v6];

    if ([(NPKProtoRemotePassUpdateResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];
    }
    uint64_t v12 = [v4 completionHandler];
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    switch([(NPKProtoRemotePassUpdateResponse *)v7 upgradeStatus])
    {
      case 0:
        uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
        id v16 = *(void **)(v15 + 40);
        *(void *)(v15 + 40) = 0;

        break;
      case 1:
        *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 0;
        break;
      case 2:
        uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
        uint64_t v18 = 1;
        goto LABEL_14;
      case 3:
        uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
        uint64_t v18 = 2;
LABEL_14:
        *(void *)(v17 + 24) = v18;
        break;
      default:
        break;
    }
    BOOL v19 = [(NPKProtoRemotePassUpdateResponse *)v7 hasErrorData];
    if (v19)
    {
      v1 = [(NPKProtoRemotePassUpdateResponse *)v7 errorData];
      BOOL v20 = objc_opt_class();
      id v21 = NPKSecureUnarchiveObject(v1, v20);
    }
    else
    {
      id v21 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v21);
    if (v19)
    {
    }
    id v22 = [(NPKProtoRemotePassUpdateResponse *)v7 pass];
    int v23 = [v22 passData];
    id v24 = objc_opt_class();
    uint64_t v25 = NPKSecureUnarchiveObject(v23, v24);
    uint64_t v26 = *(void *)(*(void *)(a1 + 80) + 8);
    uint64_t v27 = *(void **)(v26 + 40);
    *(void *)(v26 + 40) = v25;

    uint64_t v28 = *(void **)(a1 + 32);
    uint64_t v29 = [(NPKProtoRemotePassUpdateResponse *)v7 expressPassInformations];
    uint64_t v30 = [v28 _expressPassesInformationFromDataArray:v29];
    uint64_t v31 = *(void *)(*(void *)(a1 + 88) + 8);
    long long v32 = *(void **)(v31 + 40);
    *(void *)(v31 + 40) = v30;

    long long v33 = *(void **)(a1 + 32);
    long long v34 = [(NPKProtoRemotePassUpdateResponse *)v7 expressPassConfigurations];
    uint64_t v35 = [v33 _expressPassesConfigurationFromDataArray:v34];
    uint64_t v36 = *(void *)(*(void *)(a1 + 96) + 8);
    id v37 = *(void **)(v36 + 40);
    *(void *)(v36 + 40) = v35;
  }
  else
  {
    BOOL v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v38[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: Remote update pass. Got response with no associated message handler", (uint8_t *)v38, 2u);
      }
    }
  }
}

- (void)remotePassUpgradeWithRequest:(id)a3 pass:(id)a4 requireAuthorization:(BOOL)a5 notifyUserOnPairedDevice:(BOOL)a6 updateBlock:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a7;
  uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke;
  block[3] = &unk_2644D7BC8;
  id v20 = v13;
  id v21 = v12;
  BOOL v24 = a5;
  BOOL v25 = a6;
  id v22 = self;
  id v23 = v14;
  id v16 = v14;
  id v17 = v12;
  id v18 = v13;
  dispatch_sync(v15, block);
}

void __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke(uint64_t a1)
{
  void v32[2] = *MEMORY[0x263EF8340];
  id v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    BOOL v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = [*(id *)(a1 + 32) uniqueID];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v28 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Remote update pass with uniqueID:%@. Sending message", buf, 0xCu);
    }
  }
  id v6 = objc_alloc_init(NPKProtoPass);
  [*(id *)(a1 + 32) flushLoadedImageSets];
  uint64_t v7 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoPass *)v6 setPassData:v7];

  BOOL v8 = objc_alloc_init(NPKProtoRemotePassUpdateRequest);
  BOOL v9 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoRemotePassUpdateRequest *)v8 setPassID:v9];

  [(NPKProtoRemotePassUpdateRequest *)v8 setPass:v6];
  uint64_t v10 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoRemotePassUpdateRequest *)v8 setUpdateRequestData:v10];

  [(NPKProtoRemotePassUpdateRequest *)v8 setRequestAuthorization:*(unsigned __int8 *)(a1 + 64)];
  [(NPKProtoRemotePassUpdateRequest *)v8 setShouldNotifyUser:*(unsigned __int8 *)(a1 + 65)];
  id v11 = objc_alloc(MEMORY[0x263F4A228]);
  id v12 = [(NPKProtoRemotePassUpdateRequest *)v8 data];
  id v13 = (void *)[v11 initWithProtobufData:v12 type:50 isResponse:0];

  id v14 = *(void **)(a1 + 48);
  uint64_t v15 = *MEMORY[0x263F49F08];
  v31[0] = *MEMORY[0x263F49F60];
  v31[1] = v15;
  v32[0] = @"remotePassUpdate";
  v32[1] = MEMORY[0x263EFFA88];
  id v16 = [NSDictionary dictionaryWithObjects:v32 forKeys:v31 count:2];
  id v17 = [v14 _sendProtobuf:v13 responseExpected:1 extraOptions:v16];

  if (!v17)
  {
    id v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (!v22) {
      goto LABEL_12;
    }
    id v20 = pk_Payment_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v23 = [*(id *)(a1 + 32) uniqueID];
      *(_DWORD *)long long buf = 138412546;
      uint64_t v28 = v23;
      __int16 v29 = 2112;
      uint64_t v30 = v13;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Remote update pass with uniqueID:%@. No message identifier for protobuf %@", buf, 0x16u);
    }
    goto LABEL_8;
  }
  if (*(void *)(a1 + 56))
  {
    id v18 = *(void **)(a1 + 48);
    BOOL v19 = (void *)MEMORY[0x223C37380]();
    v24[0] = MEMORY[0x263EF8330];
    v24[1] = 3221225472;
    v24[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke_536;
    v24[3] = &unk_2644D5828;
    uint64_t v26 = *(id *)(a1 + 56);
    id v25 = *(id *)(a1 + 32);
    [v18 _trackOutstandingRequestWithMessageIdentifier:v17 completionHandler:v19 errorHandler:v24];

    id v20 = v26;
LABEL_8:
  }
LABEL_12:
}

uint64_t __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke_536(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void, void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), a2, *(void *)(a1 + 32), 0, 1);
}

- (void)cancelOutstandingRemotePassUpdateRequest:(id)a3 pass:(id)a4
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = [v7 uniqueID];
      *(_DWORD *)long long buf = 138412290;
      id v20 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Sending message to cancel outstanding remote pass Update Reques for pass UniqueID:%@", buf, 0xCu);
    }
  }
  id v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingRemotePassUpdateRequest_pass___block_invoke;
  block[3] = &unk_2644D31B0;
  id v16 = v7;
  id v17 = v6;
  id v18 = self;
  id v13 = v6;
  id v14 = v7;
  dispatch_sync(v12, block);
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingRemotePassUpdateRequest_pass___block_invoke(uint64_t a1)
{
  void v18[2] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoRemotePassUpdateRequest);
  BOOL v3 = [*(id *)(a1 + 32) uniqueID];
  [(NPKProtoRemotePassUpdateRequest *)v2 setPassID:v3];

  BOOL v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoRemotePassUpdateRequest *)v2 setUpdateRequestData:v4];

  [(NPKProtoRemotePassUpdateRequest *)v2 setCancelUpdate:1];
  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoRemotePassUpdateRequest *)v2 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:50 isResponse:0];

  BOOL v8 = *(void **)(a1 + 48);
  uint64_t v9 = *MEMORY[0x263F49F60];
  v17[0] = *MEMORY[0x263F49ED8];
  v17[1] = v9;
  v18[0] = MEMORY[0x263EFFA88];
  v18[1] = @"remotePassUpdate";
  uint64_t v10 = [NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:2];
  id v11 = [v8 _sendProtobuf:v7 responseExpected:0 extraOptions:v10];

  if (!v11)
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        int v15 = 138412290;
        id v16 = v7;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
}

- (void)peerPaymentRegisterResponse:(id)a3
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Peer payment register: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v48 = 0x3032000000;
  id v49 = __Block_byref_object_copy__364;
  id v50 = __Block_byref_object_dispose__365;
  id v51 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = &v43;
  uint64_t v45 = 0x2020000000;
  char v46 = 0;
  uint64_t v37 = 0;
  id v38 = &v37;
  uint64_t v39 = 0x3032000000;
  uint64_t v40 = __Block_byref_object_copy__23;
  __int16 v41 = __Block_byref_object_dispose__23;
  id v42 = 0;
  uint64_t v31 = 0;
  long long v32 = &v31;
  uint64_t v33 = 0x3032000000;
  long long v34 = __Block_byref_object_copy__23;
  uint64_t v35 = __Block_byref_object_dispose__23;
  id v36 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = &v25;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy__23;
  __int16 v29 = __Block_byref_object_dispose__23;
  id v30 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterResponse___block_invoke;
    block[3] = &unk_2644D7BF0;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v43;
    BOOL v22 = &v37;
    id v23 = &v31;
    BOOL v24 = &v25;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v44 + 24), v38[5], v32[5], v26[5]);
  }
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  _Block_object_dispose(&v43, 8);
  _Block_object_dispose(&buf, 8);
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterResponse___block_invoke(uint64_t a1)
{
  BOOL v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoPeerPaymentRegistrationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoPeerPaymentRegistrationResponse *)v5 initWithData:v6];

    if ([(NPKProtoPeerPaymentRegistrationResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      id v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      id v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoPeerPaymentRegistrationResponse *)v7 success];
      BOOL v15 = [(NPKProtoPeerPaymentRegistrationResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoPeerPaymentRegistrationResponse *)v7 errorData];
        id v16 = objc_opt_class();
        id v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        id v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
      id v18 = [(NPKProtoPeerPaymentRegistrationResponse *)v7 peerPaymentWebServiceContextData];
      id v19 = objc_opt_class();
      uint64_t v20 = NPKSecureUnarchiveObject(v18, v19);
      uint64_t v21 = *(void *)(*(void *)(a1 + 80) + 8);
      BOOL v22 = *(void **)(v21 + 40);
      *(void *)(v21 + 40) = v20;

      id v23 = [(NPKProtoPeerPaymentRegistrationResponse *)v7 peerPaymentAccountData];
      BOOL v24 = objc_opt_class();
      uint64_t v25 = NPKSecureUnarchiveObject(v23, v24);
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8);
      uint64_t v27 = *(void **)(v26 + 40);
      *(void *)(v26 + 40) = v25;
    }
  }
  else
  {
    BOOL v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v28[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v28, 2u);
      }
    }
  }
}

- (void)peerPaymentRegisterWithURL:(id)a3 forceReRegistration:(BOOL)a4 completion:(id)a5
{
  BOOL v6 = a4;
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a5;
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v22 = v8;
      __int16 v23 = 1024;
      BOOL v24 = v6;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Peer payment register with URL %@ forceReRegistration %i", buf, 0x12u);
    }
  }
  uint64_t v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 3221225472;
  _DWORD v16[2] = __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke;
  void v16[3] = &unk_2644D7C18;
  BOOL v20 = v6;
  id v17 = v8;
  id v18 = self;
  id v19 = v9;
  id v14 = v9;
  id v15 = v8;
  dispatch_sync(v13, v16);
}

void __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoPeerPaymentRegistrationRequest);
  BOOL v3 = [*(id *)(a1 + 32) absoluteString];
  [(NPKProtoPeerPaymentRegistrationRequest *)v2 setServiceURL:v3];

  [(NPKProtoPeerPaymentRegistrationRequest *)v2 setForceReRegistration:*(unsigned __int8 *)(a1 + 56)];
  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoPeerPaymentRegistrationRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:31 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49ED8];
  v26[0] = MEMORY[0x263EFFA88];
  id v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  id v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      BOOL v11 = (void *)MEMORY[0x223C37380](v21);
      uint64_t v12 = *(void **)(a1 + 40);
      uint64_t v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      BOOL v24 = v9;
      id v16 = "Warning: No response expected for message with identifier %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      BOOL v24 = v6;
      id v16 = "Error: No message identifier for protobuf %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void, void))(result + 16))(result, 0, a2, 0, 0);
  }
  return result;
}

- (void)peerPaymentUnregisterResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device peer payment unregister: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  id v42 = __Block_byref_object_copy__364;
  uint64_t v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x2020000000;
  char v39 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x3032000000;
  uint64_t v33 = __Block_byref_object_copy__23;
  long long v34 = __Block_byref_object_dispose__23;
  id v35 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__23;
  uint64_t v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __75__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v36;
    id v22 = &v30;
    __int16 v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v37 + 24), v31[5], v25[5], 0);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);
}

void __75__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterResponse___block_invoke(uint64_t a1)
{
  BOOL v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoPeerPaymentUnregistrationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoPeerPaymentUnregistrationResponse *)v5 initWithData:v6];

    if ([(NPKProtoPeerPaymentUnregistrationResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      id v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoPeerPaymentUnregistrationResponse *)v7 success];
      BOOL v15 = [(NPKProtoPeerPaymentUnregistrationResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoPeerPaymentUnregistrationResponse *)v7 errorData];
        id v16 = objc_opt_class();
        id v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        id v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
      id v18 = [(NPKProtoPeerPaymentUnregistrationResponse *)v7 peerPaymentWebServiceContextData];
      id v19 = objc_opt_class();
      uint64_t v20 = NPKSecureUnarchiveObject(v18, v19);
      uint64_t v21 = *(void *)(*(void *)(a1 + 80) + 8);
      id v22 = *(void **)(v21 + 40);
      *(void *)(v21 + 40) = v20;
    }
  }
  else
  {
    id v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v23[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v23, 2u);
      }
    }
  }
}

- (void)peerPaymentUnregisterWithCompletion:(id)a3
{
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device peer payment unregister", buf, 2u);
    }
  }
  id v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoPeerPaymentUnregistrationRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoPeerPaymentUnregistrationRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:32 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v23 = v8;
      BOOL v15 = "Warning: No response expected for message with identifier %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v23 = v5;
      BOOL v15 = "Error: No message identifier for protobuf %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void, void))(result + 16))(result, 0, a2, 0, 0);
  }
  return result;
}

- (void)provisionPeerPaymentPassResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device provision peer payment pass: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  id v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoProvisionPeerPaymentPassResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoProvisionPeerPaymentPassResponse *)v4 initWithData:v5];

    if ([(NPKProtoProvisionPeerPaymentPassResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoProvisionPeerPaymentPassResponse *)v6 success];
      BOOL v14 = [(NPKProtoProvisionPeerPaymentPassResponse *)v6 errorData];
      uint64_t v15 = (void *)MEMORY[0x263EFFA08];
      uint64_t v16 = objc_opt_class();
      os_log_type_t v17 = objc_msgSend(v15, "setWithObjects:", v16, objc_opt_class(), 0);
      uint64_t v18 = NPKSecureUnarchiveObjectOfClasses(v14, v17);
      uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
      }
    }
  }
}

- (void)provisionPeerPaymentPassWithCompletion:(id)a3
{
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device provision peer payment pass", buf, 2u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoProvisionPeerPaymentPassRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoProvisionPeerPaymentPassRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:34 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)updatePeerPaymentAccountResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device update peer payment account: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountResponse___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoUpdatePeerPaymentAccountResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoUpdatePeerPaymentAccountResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = [(NPKProtoUpdatePeerPaymentAccountResponse *)v6 peerPaymentAccountData];
    uint64_t v12 = objc_opt_class();
    uint64_t v13 = NPKSecureUnarchiveObject(v11, v12);
    uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;
  }
  else
  {
    uint64_t v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      id v18 = pk_Payment_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)updatePeerPaymentAccountWithCompletion:(id)a3
{
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device update peer payment account with completion", buf, 2u);
    }
  }
  uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoUpdatePeerPaymentAccountRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoUpdatePeerPaymentAccountRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:48 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  uint64_t v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)setPeerPaymentPreferencesResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device update peer payment preferences: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferencesResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferencesResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoSetPeerPaymentPreferencesResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoSetPeerPaymentPreferencesResponse *)v5 initWithData:v6];

    if ([v7 pending])
    {
      uint64_t v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        uint64_t v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for update peer payment preferences.", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v13 = [*(id *)(a1 + 32) outstandingRequests];
      [v13 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v14 = [v4 completionHandler];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      os_log_type_t v17 = [v7 peerPaymentPreferencesData];
      id v18 = objc_opt_class();
      uint64_t v19 = NPKSecureUnarchiveObject(v17, v18);
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8);
      id v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;

      int v22 = [v7 hasErrorData];
      if (v22)
      {
        v1 = [v7 errorData];
        uint64_t v23 = objc_opt_class();
        uint64_t v24 = NPKSecureUnarchiveObject(v1, v23);
      }
      else
      {
        uint64_t v24 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

- (void)setPeerPaymentPreferences:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device set peer payment preferences with completion", buf, 2u);
    }
  }
  id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke;
  block[3] = &unk_2644D3388;
  id v15 = v6;
  uint64_t v16 = self;
  id v17 = v7;
  id v12 = v7;
  id v13 = v6;
  dispatch_sync(v11, block);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke(uint64_t a1)
{
  v30[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoSetPeerPaymentPreferencesRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoSetPeerPaymentPreferencesRequest *)v2 setPeerPaymentPreferencesData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoSetPeerPaymentPreferencesRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:88 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v29 = *MEMORY[0x263F49ED8];
  v30[0] = MEMORY[0x263EFFA88];
  uint64_t v8 = [NSDictionary dictionaryWithObjects:v30 forKeys:&v29 count:1];
  BOOL v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v10 = MEMORY[0x223C37380]();
      uint64_t v21 = MEMORY[0x263EF8330];
      uint64_t v22 = 3221225472;
      uint64_t v23 = __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke_2;
      uint64_t v24 = &unk_2644D5828;
      id v26 = *(id *)(a1 + 48);
      id v25 = *(id *)(a1 + 32);
      id v11 = (void *)MEMORY[0x223C37380](&v21);
      id v12 = *(void **)(a1 + 40);
      id v13 = (void *)MEMORY[0x223C37380](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11, v21, v22, v23, v24);

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v28 = v9;
      uint64_t v16 = "Warning: No response expected for message with identifier %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v28 = v6;
      uint64_t v16 = "Error: No message identifier for protobuf %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, *(void *)(a1 + 32), a2);
  }
  return result;
}

- (void)openURLWithRequest:(id)a3
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Requested to Open URL", buf, 2u);
    }
  }
  uint64_t v8 = [NPKProtoOpenURLRequest alloc];
  BOOL v9 = [v4 data];

  uint64_t v10 = [(NPKProtoOpenURLRequest *)v8 initWithData:v9];
  id v11 = NSURL;
  id v12 = [(NPKProtoOpenURLRequest *)v10 urlString];
  id v13 = [v11 URLWithString:v12];

  uint64_t v14 = [MEMORY[0x263F08BA0] componentsWithURL:v13 resolvingAgainstBaseURL:0];
  BOOL v15 = [v14 scheme];
  int v16 = [v15 isEqualToString:@"tap-to-radar"];

  if (v16)
  {
    id v17 = [[NPKTapToRadarRequest alloc] initWithURL:v13];
    os_log_type_t v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self manager];
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 3221225472;
    _DWORD v22[2] = __64__NPKPaymentWebServiceCompanionTargetDevice_openURLWithRequest___block_invoke;
    v22[3] = &unk_2644D29D0;
    uint64_t v23 = v17;
    uint64_t v19 = v17;
    [v18 fileRadarWithRequest:v19 requestUserPermission:0 completion:v22];

LABEL_10:
    goto LABEL_11;
  }
  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

  if (v21)
  {
    uint64_t v19 = pk_General_log();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v25 = v13;
      _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Warning: Failed to open URL:%@", buf, 0xCu);
    }
    goto LABEL_10;
  }
LABEL_11:
}

void __64__NPKPaymentWebServiceCompanionTargetDevice_openURLWithRequest___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138412546;
      uint64_t v9 = v7;
      __int16 v10 = 2112;
      id v11 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Filed radar with request:%@  error:%@", (uint8_t *)&v8, 0x16u);
    }
  }
}

- (NPKTapToRadarManager)manager
{
  manager = self->_manager;
  if (!manager)
  {
    id v4 = objc_alloc_init(NPKTapToRadarManager);
    BOOL v5 = self->_manager;
    self->_manager = v4;

    manager = self->_manager;
  }
  return manager;
}

- (void)handlePeerPaymentTermsAndConditionsAcceptanceRequest:(id)a3
{
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v8 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Companion received handlePeerPaymentTermsAndConditionsAcceptanceRequest: message", v8, 2u);
    }
  }
  uint64_t v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  [v7 handlePeerPaymentTermsAndConditionsRequestFromGizmo];
}

- (void)handleDeviceUnlockedForPendingProvisioningRequest:(id)a3
{
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v8 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Companion received handleDeviceUnlockedForPendingProvisioningRequest: message", v8, 2u);
    }
  }
  uint64_t v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  [v7 handleDeviceUnlockedForPendingProvisioningRequestFromGizmo];
}

- (BOOL)paymentWebServiceSupportsAccounts:(id)a3
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v4 = a3;
  if ([v4 needsRegistration])
  {
    BOOL v5 = pk_Payment_log();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

    LOBYTE(v7) = 0;
    if (v6)
    {
      int v8 = pk_Payment_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = 67109120;
        int v23 = 0;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service supports accounts = %d, webService needs registration", (uint8_t *)&v22, 8u);
      }
      LOBYTE(v7) = 0;
LABEL_12:
    }
  }
  else
  {
    uint64_t v9 = [v4 context];
    __int16 v10 = [v9 primaryRegion];
    id v11 = [v10 accountServiceURL];

    uint64_t v12 = [v4 context];
    id v13 = [v12 primaryRegion];
    int v14 = [v13 hasAccounts];

    BOOL v15 = [v4 context];
    int v16 = [v15 configuration];
    id v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceRegion];
    int v18 = [v16 accountServiceEnabledForRegion:v17];

    if (v11) {
      int v7 = v14 | v18;
    }
    else {
      int v7 = 0;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      int v8 = pk_Payment_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = 67109888;
        int v23 = v7;
        __int16 v24 = 1024;
        int v25 = v14;
        __int16 v26 = 1024;
        int v27 = v18;
        __int16 v28 = 1024;
        BOOL v29 = v11 != 0;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service supports accounts = %d, hasAccount: %d, regionEnabled: %d, hasURL: %d", (uint8_t *)&v22, 0x1Au);
      }
      goto LABEL_12;
    }
  }

  return v7;
}

- (void)updatedAccountsForProvisioningWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    int v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device updatedAccountsForProvisioningWithCompletion", buf, 2u);
    }
  }
  if (v4)
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    _DWORD v9[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke;
    v9[3] = &unk_2644D2E58;
    v9[4] = self;
    id v10 = v4;
    dispatch_async(v8, v9);
  }
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  v1 = pk_Payment_log();
  BOOL v2 = os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT);

  if (v2)
  {
    id v3 = pk_Payment_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v3, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) performing accountsWithRequest", buf, 2u);
    }
  }
  *(void *)long long buf = 0;
  id v39 = buf;
  uint64_t v40 = 0x3032000000;
  uint64_t v41 = __Block_byref_object_copy__23;
  id v42 = __Block_byref_object_dispose__23;
  id v43 = 0;
  id v4 = objc_alloc_init(MEMORY[0x263EFF980]);
  id v23 = objc_alloc_init(MEMORY[0x263F5BD90]);
  BOOL v5 = [*(id *)(a1 + 32) companionAgentConnection];
  BOOL v6 = [v5 watchPaymentWebService];
  int v7 = [v6 context];
  int v8 = [v7 regions];

  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v9 = v8;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v34 objects:v44 count:16];
  if (v10)
  {
    uint64_t v11 = *(void *)v35;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v35 != v11) {
          objc_enumerationMutation(v9);
        }
        id v13 = [v9 objectForKey:*(void *)(*((void *)&v34 + 1) + 8 * v12)];
        int v14 = [v13 accountServiceURL];
        BOOL v15 = v14 == 0;

        if (!v15)
        {
          v29[0] = MEMORY[0x263EF8330];
          v29[1] = 3221225472;
          v29[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_557;
          v29[3] = &unk_2644D7C68;
          id v16 = v13;
          uint64_t v17 = *(void *)(a1 + 32);
          id v30 = v16;
          uint64_t v31 = v17;
          uint64_t v33 = buf;
          id v32 = v4;
          [v23 addOperation:v29];
        }
        ++v12;
      }
      while (v10 != v12);
      uint64_t v10 = [v9 countByEnumeratingWithState:&v34 objects:v44 count:16];
    }
    while (v10);
  }

  int v18 = [MEMORY[0x263EFF9D0] null];
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  void v25[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_3;
  v25[3] = &unk_2644D7C90;
  uint64_t v19 = *(void *)(a1 + 32);
  BOOL v20 = *(void **)(a1 + 40);
  __int16 v28 = buf;
  v25[4] = v19;
  id v27 = v20;
  id v21 = v4;
  id v26 = v21;
  id v22 = (id)[v23 evaluateWithInput:v18 completion:v25];

  _Block_object_dispose(buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_557(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_alloc_init(MEMORY[0x263F5BCF8]);
  id v9 = [*(id *)(a1 + 32) accountServiceURL];
  [v8 setAccountServicesURL:v9];

  uint64_t v10 = [*(id *)(a1 + 40) companionAgentConnection];
  uint64_t v11 = [v10 watchPaymentWebService];
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 3221225472;
  _DWORD v16[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2;
  void v16[3] = &unk_2644D7C40;
  id v13 = *(void **)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  id v19 = v7;
  uint64_t v20 = v12;
  id v17 = v6;
  id v18 = v13;
  id v14 = v6;
  id v15 = v7;
  [v11 accountsWithRequest:v8 completion:v16];
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2(void *a1, void *a2, void *a3)
{
  id v8 = a3;
  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), a3);
  }
  else
  {
    id v6 = (void *)a1[5];
    id v7 = [a2 accounts];
    [v6 addObjectsFromArray:v7];
  }
  (*(void (**)(void))(a1[6] + 16))();
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_3(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  id v48 = a3;
  id v49 = a4;
  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    uint64_t v6 = a1;
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(*(void *)(*(void *)(v6 + 56) + 8) + 40);
        *(_DWORD *)long long buf = 138412290;
        *(void *)&uint8_t buf[4] = v10;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) error executing accountsWithRequest %@", buf, 0xCu);
      }
    }
    uint64_t v11 = [*(id *)(v6 + 32) companionAgentConnection];
    uint64_t v12 = [v11 watchPaymentWebService];
    id v13 = [v12 context];

    id v14 = [v13 primaryRegion];
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        id v18 = [v14 accountServiceURL];
        *(_DWORD *)long long buf = 138412802;
        *(void *)&uint8_t buf[4] = v13;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v14;
        *(_WORD *)&buf[22] = 2112;
        uint64_t v69 = v18;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) context %@ primaryRegion %@ accountServiceURL %@", buf, 0x20u);
      }
    }
    id v19 = dispatch_get_global_queue(0, 0);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_562;
    block[3] = &unk_2644D2B10;
    id v62 = *(id *)(v6 + 48);
    dispatch_async(v19, block);

    goto LABEL_42;
  }
  id v51 = objc_alloc_init(MEMORY[0x263EFF980]);
  id v50 = objc_alloc_init(MEMORY[0x263EFF980]);
  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  uint64_t v69 = __Block_byref_object_copy__23;
  v70 = __Block_byref_object_dispose__23;
  id v71 = 0;
  uint64_t v47 = [*(id *)(a1 + 32) companionAgentConnection];
  v60[0] = MEMORY[0x263EF8330];
  v60[1] = 3221225472;
  v60[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2_563;
  v60[3] = &unk_2644D76F0;
  v60[4] = buf;
  [v47 paymentPassUniqueIDsSynchronous:1 reply:v60];
  long long v58 = 0u;
  long long v59 = 0u;
  long long v56 = 0u;
  long long v57 = 0u;
  id v20 = *(id *)(a1 + 40);
  uint64_t v21 = [v20 countByEnumeratingWithState:&v56 objects:v67 count:16];
  uint64_t v46 = a1;
  if (!v21) {
    goto LABEL_37;
  }
  uint64_t v22 = *(void *)v57;
  do
  {
    for (uint64_t i = 0; i != v21; ++i)
    {
      if (*(void *)v57 != v22) {
        objc_enumerationMutation(v20);
      }
      __int16 v24 = *(void **)(*((void *)&v56 + 1) + 8 * i);
      uint64_t v25 = objc_msgSend(v24, "state", v46);
      [v24 state];
      id v26 = PKAccountStateToString();
      if (([v24 provisioningAllowed] & 1) == 0)
      {
        id v32 = PKLogFacilityTypeGetObject();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v33 = [v24 accountIdentifier];
          *(_DWORD *)uint64_t v63 = 138412546;
          uint64_t v64 = (uint64_t)v33;
          __int16 v65 = 2112;
          uint64_t v66 = (uint64_t)v26;
          _os_log_impl(&dword_21E92F000, v32, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ does not allow provisioning and will not be offered", v63, 0x16u);
        }
        goto LABEL_34;
      }
      if ((unint64_t)(v25 - 1) < 4)
      {
        id v27 = *(void **)(*(void *)&buf[8] + 40);
        __int16 v28 = [v24 associatedPassUniqueID];
        LODWORD(v27) = [v27 containsObject:v28];

        BOOL v29 = PKLogFacilityTypeGetObject();
        BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
        if (v27)
        {
          if (v30)
          {
            uint64_t v31 = [v24 accountIdentifier];
            *(_DWORD *)uint64_t v63 = 138412546;
            uint64_t v64 = (uint64_t)v31;
            __int16 v65 = 2112;
            uint64_t v66 = (uint64_t)v26;
            _os_log_impl(&dword_21E92F000, v29, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ is on device", v63, 0x16u);
          }
          id v32 = [v24 copy];
          [v50 addObject:v32];
        }
        else
        {
          if (v30)
          {
            long long v36 = [v24 accountIdentifier];
            *(_DWORD *)uint64_t v63 = 138412546;
            uint64_t v64 = (uint64_t)v36;
            __int16 v65 = 2112;
            uint64_t v66 = (uint64_t)v26;
            _os_log_impl(&dword_21E92F000, v29, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ is valid for provisioning", v63, 0x16u);
          }
          id v32 = [v24 copy];
          [v51 addObject:v32];
        }
LABEL_34:

        goto LABEL_35;
      }
      if (v25) {
        BOOL v34 = v25 == 5;
      }
      else {
        BOOL v34 = 1;
      }
      if (v34)
      {
        id v32 = PKLogFacilityTypeGetObject();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          long long v35 = [v24 accountIdentifier];
          *(_DWORD *)uint64_t v63 = 138412546;
          uint64_t v64 = (uint64_t)v35;
          __int16 v65 = 2112;
          uint64_t v66 = (uint64_t)v26;
          _os_log_impl(&dword_21E92F000, v32, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ is not valid for provisioning", v63, 0x16u);
        }
        goto LABEL_34;
      }
LABEL_35:
    }
    uint64_t v21 = [v20 countByEnumeratingWithState:&v56 objects:v67 count:16];
  }
  while (v21);
LABEL_37:

  long long v37 = pk_General_log();
  BOOL v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);

  if (v38)
  {
    id v39 = pk_General_log();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v40 = [v51 count];
      uint64_t v41 = [v50 count];
      *(_DWORD *)uint64_t v63 = 134218240;
      uint64_t v64 = v40;
      __int16 v65 = 2048;
      uint64_t v66 = v41;
      _os_log_impl(&dword_21E92F000, v39, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning)updatedAccountsForProvisioningWithCompletion found %lu accounts requiring provision and %lu on device ", v63, 0x16u);
    }
  }
  id v42 = dispatch_get_global_queue(0, 0);
  v52[0] = MEMORY[0x263EF8330];
  v52[1] = 3221225472;
  v52[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_564;
  v52[3] = &unk_2644D4100;
  id v43 = *(id *)(v46 + 48);
  id v53 = v51;
  id v54 = v50;
  id v55 = v43;
  id v44 = v50;
  id v45 = v51;
  dispatch_async(v42, v52);

  _Block_object_dispose(buf, 8);
LABEL_42:
}

uint64_t __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_562(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2_563(uint64_t a1, void *a2)
{
}

uint64_t __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_564(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

- (void)triggerCloudStoreZoneCreationForAccountResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device triggerCloudStoreZoneCreationForAccount: incoming protobuf: %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  __int16 v28 = __Block_byref_object_copy__364;
  BOOL v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccountResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: (apple-balance-pass-provisioning) No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __93__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccountResponse___block_invoke(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoTriggerCloudStoreZoneCreationForAccountResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoTriggerCloudStoreZoneCreationForAccountResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoTriggerCloudStoreZoneCreationForAccountResponse *)v6 success];
  }
  else
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: (apple-balance-pass-provisioning) got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)triggerCloudStoreZoneCreationForAccount:(id)a3 withCompletion:(id)a4
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  int v8 = NPKPairedOrPairingDeviceSupportsAppleBalance();
  uint64_t v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v12 = @"NO";
      if (v8) {
        BOOL v12 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      char v25 = v12;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device triggerCloudStoreZoneCreationForAccount. Apple Balance card supported by device: %@", buf, 0xCu);
    }
  }
  if ((v8 & 1) == 0)
  {
    id v14 = pk_General_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (!v15) {
      goto LABEL_18;
    }
    BOOL v16 = pk_General_log();
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    *(_WORD *)long long buf = 0;
    id v17 = "Notice: (apple-balance-pass-provisioning) triggerCloudStoreZoneCreationForAccount: Called on device with no su"
          "pport for Apple Balance card.";
    goto LABEL_16;
  }
  if (v6)
  {
    BOOL v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke;
    block[3] = &unk_2644D3388;
    id v21 = v6;
    uint64_t v22 = self;
    id v23 = v7;
    dispatch_sync(v13, block);

    goto LABEL_20;
  }
  id v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    BOOL v16 = pk_General_log();
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
LABEL_17:

      goto LABEL_18;
    }
    *(_WORD *)long long buf = 0;
    id v17 = "Notice: (apple-balance-pass-provisioning) triggerCloudStoreZoneCreationForAccount: Called with no account";
LABEL_16:
    _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, v17, buf, 2u);
    goto LABEL_17;
  }
LABEL_18:
  if (v7) {
    (*((void (**)(id, void))v7 + 2))(v7, 0);
  }
LABEL_20:
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoTriggerCloudStoreZoneCreationForAccountRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoTriggerCloudStoreZoneCreationForAccountRequest *)v2 setAccountData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v5 = [(NPKProtoTriggerCloudStoreZoneCreationForAccountRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:130 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49ED8];
  v26[0] = MEMORY[0x263EFFA88];
  int v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  uint64_t v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      uint64_t v11 = (void *)MEMORY[0x223C37380](v21);
      BOOL v12 = *(void **)(a1 + 40);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    BOOL v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v24 = v9;
      BOOL v16 = "Warning: (apple-balance-pass-provisioning) No response expected for message with identifier %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v24 = v6;
      BOOL v16 = "Error: (apple-balance-pass-provisioning) No message identifier for protobuf %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)provisionPassForRemoteCredentialWithTypeAndIdentifierResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device provisionPassForRemoteCredentialWithTypeAndIdentifierResponse: incoming protobuf: %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  long long v35 = __Block_byref_object_copy__364;
  long long v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithTypeAndIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: (apple-balance-pass-provisioning) No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithTypeAndIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse *)v5 initWithData:v6];

    if ([v7 hasPending] && [v7 pending])
    {
      int v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        BOOL v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Got pending response for provisionPassForRemoteCredentialWithTypeAndIdentifierResponse.", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      id v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v7 success];
      int v15 = [v7 hasErrorData];
      if (v15)
      {
        v1 = [v7 errorData];
        BOOL v16 = objc_opt_class();
        id v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        id v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
    }
LABEL_17:

    goto LABEL_18;
  }
  id v18 = pk_Payment_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v20 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: (apple-balance-pass-provisioning) got response with no associated message handler", v20, 2u);
    }
    goto LABEL_17;
  }
LABEL_18:
}

- (void)provisionPassForRemoteCredentialWithType:(int64_t)a3 andIdentifier:(id)a4 completion:(id)a5
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v8 = a4;
  id v9 = a5;
  if (a3 != 135) {
    goto LABEL_9;
  }
  int v10 = NPKPairedOrPairingDeviceSupportsAppleBalance();
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    uint64_t v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = @"NO";
      if (v10) {
        id v14 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v26 = v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device provisionPassForRemoteCredentialWithType. Apple Balance card supported by device: %@", buf, 0xCu);
    }
  }
  if (v10)
  {
LABEL_9:
    int v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke;
    v20[3] = &unk_2644D6850;
    int64_t v24 = a3;
    id v21 = v8;
    id v22 = self;
    id v23 = v9;
    dispatch_sync(v15, v20);

    BOOL v16 = v21;
LABEL_10:

    goto LABEL_11;
  }
  id v17 = pk_General_log();
  BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    BOOL v19 = pk_General_log();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Warning: (apple-balance-pass-provisioning) provisionPassForRemoteCredentialWithType: Called on device with no support for Apple Balance card.", buf, 2u);
    }
  }
  if (v9)
  {
    BOOL v16 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v9 + 2))(v9, 0, v16);
    goto LABEL_10;
  }
LABEL_11:
}

void __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest);
  [(NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest *)v2 setCredentialType:*(void *)(a1 + 56)];
  [(NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest *)v2 setCredentialIdentifier:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:131 isResponse:0];

  BOOL v6 = *(void **)(a1 + 40);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 48))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 48);
      int v10 = (void *)MEMORY[0x223C37380](v20);
      uint64_t v11 = *(void **)(a1 + 40);
      BOOL v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    BOOL v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v8;
      int v15 = "Warning: (apple-balance-pass-provisioning) No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v5;
      int v15 = "Error: (apple-balance-pass-provisioning) No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)deviceMetadataResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target deviceMetadataWithFields (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  int v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_deviceMetadataResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __68__NPKPaymentWebServiceCompanionTargetDevice_deviceMetadataResponse___block_invoke(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoDeviceMetadataWithFieldsReponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoDeviceMetadataWithFieldsReponse *)v4 initWithData:v5];

    if ([v6 pending])
    {
      id v7 = pk_Payment_log();
      BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

      if (v8)
      {
        id v9 = pk_Payment_log();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: deviceMetadataWithFields", buf, 2u);
        }
      }
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v12 = [*(id *)(a1 + 32) outstandingRequests];
      [v12 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v13 = [v3 completionHandler];
      uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;

      BOOL v16 = [v6 deviceMetadata];
      os_log_type_t v17 = objc_opt_class();
      uint64_t v18 = NPKSecureUnarchiveObject(v16, v17);
      uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;
    }
LABEL_12:

    goto LABEL_13;
  }
  int v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v21 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v21, 2u);
    }
    goto LABEL_12;
  }
LABEL_13:
}

- (void)paymentWebService:(id)a3 deviceMetadataWithFields:(unint64_t)a4 completion:(id)a5
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a5;
  int v10 = NPKPairedOrPairingDevice();
  BOOL v11 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"DC264F98-B0E2-4D96-9248-663A801E4FB1"];
  int v12 = [v10 supportsCapability:v11];

  uint64_t v13 = pk_Payment_log();
  LODWORD(v11) = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = @"NO";
      if (v12) {
        uint64_t v15 = @"YES";
      }
      *(_DWORD *)long long buf = 134218242;
      unint64_t v29 = a4;
      __int16 v30 = 2112;
      uint64_t v31 = v15;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device deviceMetadataWithFields: %lu. Apple Card support %@", buf, 0x16u);
    }
  }
  if (v12)
  {
    BOOL v16 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v23[0] = MEMORY[0x263EF8330];
    v23[1] = 3221225472;
    v23[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_581;
    v23[3] = &unk_2644D7D08;
    id v24 = v9;
    unint64_t v25 = a4;
    void v23[4] = self;
    id v17 = v9;
    dispatch_sync(v16, v23);

    uint64_t v18 = v24;
  }
  else
  {
    uint64_t v19 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v20 = NPKPairedOrPairingDevice();
      id v21 = [v20 valueForProperty:*MEMORY[0x263F57668]];
      *(_DWORD *)long long buf = 138412290;
      unint64_t v29 = (unint64_t)v21;
      _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not support Apple Card capability. We will invoke the older counterpart to this call.", buf, 0xCu);
    }
    v26[0] = MEMORY[0x263EF8330];
    v26[1] = 3221225472;
    void v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke;
    void v26[3] = &unk_2644D7CB8;
    id v27 = v9;
    id v22 = v9;
    [(NPKPaymentWebServiceCompanionTargetDevice *)self paymentWebService:v8 provisioningDataIncludingDeviceMetadata:1 withCompletionHandler:v26];
    uint64_t v18 = v27;
  }
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_ERROR);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138412290;
        id v12 = v6;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_ERROR, "Error: provisioningDataIncludingDeviceMetadata: call encountered error: %@", (uint8_t *)&v11, 0xCu);
      }
    }
  }
  uint64_t v10 = *(void *)(a1 + 32);
  if (v10) {
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v5);
  }
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_581(uint64_t a1)
{
  v30[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoDeviceMetadataWithFieldsRequest);
  [(NPKProtoDeviceMetadataWithFieldsRequest *)v2 setMetadataFields:*(unsigned int *)(a1 + 48)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoDeviceMetadataWithFieldsRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:54 isResponse:0];

  id v6 = *(void **)(a1 + 32);
  uint64_t v29 = *MEMORY[0x263F49ED8];
  v30[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v30 forKeys:&v29 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (!v8)
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (!v16) {
      goto LABEL_12;
    }
    id v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v5;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)location, 0xCu);
    }
LABEL_11:

    goto LABEL_12;
  }
  if (!*(void *)(a1 + 40))
  {
    uint64_t v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (!v19) {
      goto LABEL_12;
    }
    id v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v8;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: No response expected for message with identifier %@", (uint8_t *)location, 0xCu);
    }
    goto LABEL_11;
  }
  id v9 = (void **)(a1 + 32);
  objc_initWeak(location, *(id *)(a1 + 32));
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  void v25[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_2;
  v25[3] = &unk_2644D7CE0;
  objc_copyWeak(v27, location);
  uint64_t v10 = *(void **)(a1 + 40);
  v27[1] = *(id *)(a1 + 48);
  id v26 = v10;
  int v11 = (void *)MEMORY[0x223C37380](v25);
  uint64_t v20 = MEMORY[0x263EF8330];
  uint64_t v21 = 3221225472;
  id v22 = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_3;
  id v23 = &unk_2644D2B90;
  id v24 = *(id *)(a1 + 40);
  id v12 = (void *)MEMORY[0x223C37380](&v20);
  uint64_t v13 = *v9;
  uint64_t v14 = (void *)MEMORY[0x223C37380](v11);
  objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v14, v12, v20, v21, v22, v23);

  objc_destroyWeak(v27);
  objc_destroyWeak(location);
LABEL_12:
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addCompanionDevicePhoneNumberDataIfNeededWithFields:*(unsigned int *)(a1 + 48) toDeviceMetadata:v5];

  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (id)supportedFeatureIdentifiersWithPaymentWebService:(id)a3
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  id v3 = a3;
  uint64_t v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device supportedFeatureIdentifiersWithPaymentWebService", buf, 2u);
    }
  }
  id v7 = [v3 context];
  BOOL v8 = [v7 primaryRegion];
  id v9 = [v7 configuration];
  uint64_t v10 = [v3 targetDevice];

  int v11 = [v10 deviceRegion];

  id v12 = [v8 applyServiceURL];

  int v13 = [v8 hasApplications];
  int v14 = [v8 hasAccounts];
  int v15 = [v9 applyServiceEnabledForRegion:v11];
  BOOL v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    uint64_t v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v19 = v12 != 0;
      if (v12)
      {
        uint64_t v20 = &stru_26CFEBA18;
      }
      else
      {
        uint64_t v21 = [NSString stringWithFormat:@"primary region: %@", v8];
        BOOL v19 = 0;
        uint64_t v20 = (__CFString *)v21;
      }
      *(_DWORD *)long long buf = 67110402;
      *(_DWORD *)id v43 = v13 | v14 | v15;
      *(_WORD *)&v43[4] = 1024;
      *(_DWORD *)&v43[6] = v13;
      __int16 v44 = 1024;
      int v45 = v14;
      __int16 v46 = 1024;
      int v47 = v15;
      __int16 v48 = 1024;
      BOOL v49 = v19;
      __int16 v50 = 2112;
      id v51 = v20;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service supports apply service: %d, hasApplications: %d, hasAccounts: %d, regionEnabled: %d, hasURL: %d %@", buf, 0x2Au);
      if (!v12) {
    }
      }
  }
  if (v13 | v14 | v15)
  {
    id v22 = [v7 applyServiceFeaturesForRegionMeetingEnablementThreshold:v11];
    id v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _deviceSupportedFeatureIdentifiers];
    id v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      id v26 = pk_Payment_log();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        *(void *)id v43 = v23;
        _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Notice: Device supported feature identifiers: %@", buf, 0xCu);
      }
    }
    if (![v23 count])
    {
      id v27 = pk_Payment_log();
      BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

      if (v28)
      {
        uint64_t v29 = pk_Payment_log();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v29, OS_LOG_TYPE_DEFAULT, "Notice: NRDevicePropertySupportedFeatureIdentifiers returned a nil set", buf, 2u);
        }
      }
    }
    __int16 v30 = (void *)MEMORY[0x263EFF9C0];
    uint64_t v31 = [v22 allKeys];
    uint64_t v32 = [v30 setWithArray:v31];

    uint64_t v33 = pk_Payment_log();
    BOOL v34 = os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT);

    if (v34)
    {
      long long v35 = pk_Payment_log();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        *(void *)id v43 = v32;
        _os_log_impl(&dword_21E92F000, v35, OS_LOG_TYPE_DEFAULT, "Notice: Config supported feature identifiers: %@", buf, 0xCu);
      }
    }
    [v32 intersectSet:v23];
    long long v36 = pk_Payment_log();
    BOOL v37 = os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT);

    if (v37)
    {
      uint64_t v38 = pk_Payment_log();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        *(void *)id v43 = v32;
        _os_log_impl(&dword_21E92F000, v38, OS_LOG_TYPE_DEFAULT, "Notice: Final supported feature identifiers: %@", buf, 0xCu);
      }
    }
    id v39 = (void *)[v32 copy];
  }
  else
  {
    id v39 = 0;
  }

  return v39;
}

- (id)supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v27) = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService", (uint8_t *)&v27, 2u);
    }
  }
  BOOL v8 = [v4 context];
  id v9 = [v8 primaryRegion];
  uint64_t v10 = [v9 accountServiceURL];

  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    int v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      if (v10) {
        int v14 = @"YES";
      }
      else {
        int v14 = @"NO";
      }
      int v15 = [v9 accountServiceURL];
      int v27 = 138412546;
      BOOL v28 = v14;
      __int16 v29 = 2112;
      __int16 v30 = v15;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Payment web service supports account service: %@ accountServiceURL %@", (uint8_t *)&v27, 0x16u);
    }
  }
  if (v10)
  {
    BOOL v16 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _deviceSupportedFeatureIdentifiers];
    BOOL v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      BOOL v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        int v27 = 138412290;
        BOOL v28 = v16;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Device supported feature identifiers: %@", (uint8_t *)&v27, 0xCu);
      }
    }
    if (![v16 count])
    {
      uint64_t v20 = pk_Payment_log();
      BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

      if (v21)
      {
        id v22 = pk_Payment_log();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v27) = 0;
          _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) NRDevicePropertySupportedFeatureIdentifiers returned a nil set", (uint8_t *)&v27, 2u);
        }
      }
    }
    id v23 = [v16 copy];
LABEL_27:

    goto LABEL_28;
  }
  id v24 = pk_Payment_log();
  BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

  if (v25)
  {
    BOOL v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v27 = 138412290;
      BOOL v28 = v9;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: primary region: %@", (uint8_t *)&v27, 0xCu);
    }
    id v23 = 0;
    goto LABEL_27;
  }
  id v23 = 0;
LABEL_28:

  return v23;
}

- (void)updateAccountWithIdentifierResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target updateAccountWithIdentifier (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  BOOL v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  __int16 v30 = &v29;
  uint64_t v31 = 0x3032000000;
  uint64_t v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  int v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_updateAccountWithIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      int v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_updateAccountWithIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoUpdateAccountWithIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoUpdateAccountWithIdentifierResponse *)v5 initWithData:v6];

    if ([v7 pending])
    {
      BOOL v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        uint64_t v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: updateAccountWithIdentifier", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v13 = [*(id *)(a1 + 32) outstandingRequests];
      [v13 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v14 = [v4 completionHandler];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      BOOL v17 = [v7 accountData];
      id v18 = objc_opt_class();
      uint64_t v19 = NPKSecureUnarchiveObject(v17, v18);
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;

      int v22 = [v7 hasErrorData];
      if (v22)
      {
        v1 = [v7 errorData];
        uint64_t v23 = objc_opt_class();
        id v24 = NPKSecureUnarchiveObject(v1, v23);
      }
      else
      {
        id v24 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

- (void)paymentWebService:(id)a3 updateAccountWithIdentifier:(id)a4 completion:(id)a5
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  BOOL v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    int v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v20 = v7;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device updateAccountWithIdentifier: %@", buf, 0xCu);
    }
  }
  BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke;
  block[3] = &unk_2644D3388;
  id v16 = v7;
  BOOL v17 = self;
  id v18 = v8;
  id v13 = v8;
  id v14 = v7;
  dispatch_sync(v12, block);
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoUpdateAccountWithIdentifierRequest);
  [(NPKProtoUpdateAccountWithIdentifierRequest *)v2 setAccountIdentifier:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoUpdateAccountWithIdentifierRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:55 isResponse:0];

  BOOL v6 = *(void **)(a1 + 40);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 48);
      BOOL v10 = (void *)MEMORY[0x223C37380](v20);
      int v11 = *(void **)(a1 + 40);
      BOOL v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      BOOL v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      BOOL v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)accountWithIdentifierResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target accountWithIdentifier: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  BOOL v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  __int16 v30 = &v29;
  uint64_t v31 = 0x3032000000;
  uint64_t v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  int v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __75__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    int v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __75__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoAccountWithIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoAccountWithIdentifierResponse *)v5 initWithData:v6];

    id v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    int v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoAccountWithIdentifierResponse *)v7 hasAccountData];
    if (v12)
    {
      v1 = [(NPKProtoAccountWithIdentifierResponse *)v7 accountData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoAccountWithIdentifierResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoAccountWithIdentifierResponse *)v7 errorData];
      id v19 = objc_opt_class();
      id v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      id v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      os_log_type_t v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)accountWithIdentifier:(id)a3 completion:(id)a4
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  id v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v19 = v6;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device accountWithIdentifier: %@", buf, 0xCu);
    }
  }
  int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke;
  block[3] = &unk_2644D7D30;
  BOOL v16 = self;
  id v17 = v7;
  id v15 = v6;
  id v12 = v7;
  id v13 = v6;
  dispatch_sync(v11, block);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke(uint64_t a1)
{
  v33[1] = *MEMORY[0x263EF8340];
  if ([*(id *)(a1 + 32) length])
  {
    BOOL v2 = objc_alloc_init(NPKProtoAccountWithIdentifierRequest);
    [(NPKProtoAccountWithIdentifierRequest *)v2 setAccountIdentifier:*(void *)(a1 + 32)];
    id v3 = objc_alloc(MEMORY[0x263F4A228]);
    id v4 = [(NPKProtoAccountWithIdentifierRequest *)v2 data];
    BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:133 isResponse:0];

    id v6 = *(void **)(a1 + 40);
    uint64_t v28 = *MEMORY[0x263F49ED8];
    uint64_t v29 = MEMORY[0x263EFFA88];
    id v7 = [NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
    id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

    if (v8)
    {
      if (*(void *)(a1 + 48))
      {
        BOOL v9 = MEMORY[0x223C37380]();
        v26[0] = MEMORY[0x263EF8330];
        v26[1] = 3221225472;
        void v26[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke_598;
        void v26[3] = &unk_2644D2B90;
        id v27 = *(id *)(a1 + 48);
        uint64_t v10 = (void *)MEMORY[0x223C37380](v26);
        int v11 = *(void **)(a1 + 40);
        id v12 = (void *)MEMORY[0x223C37380](v9);
        [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_17:
        goto LABEL_18;
      }
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

      if (v25)
      {
        BOOL v9 = pk_Payment_log();
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_17;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v31 = v8;
        id v21 = "Warning: No response expected for message with identifier %@";
        int v22 = v9;
        os_log_type_t v23 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_16;
      }
    }
    else
    {
      id v19 = pk_Payment_log();
      BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

      if (v20)
      {
        BOOL v9 = pk_Payment_log();
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          goto LABEL_17;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v31 = v5;
        id v21 = "Error: No message identifier for protobuf %@";
        int v22 = v9;
        os_log_type_t v23 = OS_LOG_TYPE_ERROR;
LABEL_16:
        _os_log_impl(&dword_21E92F000, v22, v23, v21, buf, 0xCu);
        goto LABEL_17;
      }
    }
LABEL_18:

LABEL_19:
    return;
  }
  if (*(void *)(a1 + 48))
  {
    id v13 = (void *)MEMORY[0x263F087E8];
    uint64_t v32 = *MEMORY[0x263F08338];
    v33[0] = @"Invalid account identifier";
    BOOL v14 = [NSDictionary dictionaryWithObjects:v33 forKeys:&v32 count:1];
    id v15 = [v13 errorWithDomain:@"com.apple.NPKErrorDomain" code:0 userInfo:v14];

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  BOOL v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    pk_Payment_log();
    BOOL v2 = (NPKProtoAccountWithIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v2->super.super.super, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v18 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v31 = v18;
      _os_log_impl(&dword_21E92F000, &v2->super.super.super, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Invalid account identifier: %@", buf, 0xCu);
    }
    goto LABEL_19;
  }
}

uint64_t __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke_598(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (id)_deviceSupportedFeatureIdentifiers
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  BOOL v2 = NPKPairedOrPairingDevice();
  id v3 = [v2 valueForProperty:*MEMORY[0x263F57650]];
  id v4 = PKFeatureIdentifierToString();
  if ([v3 containsObject:v4])
  {
    BOOL v5 = [v2 valueForProperty:*MEMORY[0x263F57668]];
    id v6 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"DC264F98-B0E2-4D96-9248-663A801E4FB1"];
    char v7 = [v2 supportsCapability:v6];

    id v8 = PKLogFacilityTypeGetObject();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v9)
      {
        int v11 = 138412290;
        id v12 = v5;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does support Apple Card capability.", (uint8_t *)&v11, 0xCu);
      }
    }
    else
    {
      if (v9)
      {
        int v11 = 138412546;
        id v12 = v5;
        __int16 v13 = 2112;
        BOOL v14 = v3;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not support Apple Card capability. Removing from features %@", (uint8_t *)&v11, 0x16u);
      }

      [v3 pk_setByRemovingObject:v4];
      v3 = id v8 = v3;
    }
  }
  return v3;
}

- (void)performDeviceCheckInResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    char v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target performDeviceCheckInResponse (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  long long v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = &v27;
  uint64_t v29 = 0x3032000000;
  __int16 v30 = __Block_byref_object_copy__23;
  uint64_t v31 = __Block_byref_object_dispose__23;
  id v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v27;
    int v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v24 + 24), v28[5]);
  }
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&buf, 8);
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoPerformDeviceCheckInResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    char v7 = [(NPKProtoPerformDeviceCheckInResponse *)v5 initWithData:v6];

    if ([v7 pending])
    {
      id v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        uint64_t v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: performDeviceCheckInResponse", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v13 = [*(id *)(a1 + 32) outstandingRequests];
      [v13 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v14 = [v4 completionHandler];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      int v17 = [v7 hasErrorData];
      if (v17)
      {
        v1 = [v7 errorData];
        id v18 = objc_opt_class();
        id v19 = NPKSecureUnarchiveObject(v1, v18);
      }
      else
      {
        id v19 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v19);
      if (v17)
      {
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v7 success];
    }
LABEL_17:

    goto LABEL_18;
  }
  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    char v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v20 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
    }
    goto LABEL_17;
  }
LABEL_18:
}

- (void)performDeviceCheckInWithCompletion:(id)a3
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = NPKPairedOrPairingDevice();
  BOOL v6 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"DC264F98-B0E2-4D96-9248-663A801E4FB1"];
  int v7 = [v5 supportsCapability:v6];

  id v8 = pk_Payment_log();
  LODWORD(v6) = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = @"NO";
      if (v7) {
        uint64_t v10 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      id v18 = v10;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device performDeviceCheckInWithCompletion, Apple Card support %@", buf, 0xCu);
    }
  }
  if (v7)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    void v15[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke;
    v15[3] = &unk_2644D2E58;
    void v15[4] = self;
    id v16 = v4;
    dispatch_sync(v11, v15);
  }
  else
  {
    BOOL v12 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v13 = NPKPairedOrPairingDevice();
      uint64_t v14 = [v13 valueForProperty:*MEMORY[0x263F57668]];
      *(_DWORD *)long long buf = 138412290;
      id v18 = v14;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not support Apple Card capability.", buf, 0xCu);
    }
    if (v4) {
      (*((void (**)(id, void, void))v4 + 2))(v4, 0, 0);
    }
  }
}

void __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoPerformDeviceCheckInRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoPerformDeviceCheckInRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:62 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  int v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      BOOL v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      int v11 = *(void **)(a1 + 32);
      BOOL v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      BOOL v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      BOOL v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

- (void)availableProductsResponse:(id)a3
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    int v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target availableProductsResponse (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v48 = 0x3032000000;
  BOOL v49 = __Block_byref_object_copy__364;
  __int16 v50 = __Block_byref_object_dispose__365;
  id v51 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = &v35;
  uint64_t v37 = 0x3032000000;
  uint64_t v38 = __Block_byref_object_copy__23;
  id v39 = __Block_byref_object_dispose__23;
  id v40 = 0;
  uint64_t v29 = 0;
  __int16 v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v23[0] = MEMORY[0x263EF8330];
    v23[1] = 3221225472;
    v23[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_availableProductsResponse___block_invoke;
    v23[3] = &unk_2644D7808;
    void v23[4] = self;
    id v24 = v10;
    id v25 = v4;
    p_long long buf = &buf;
    uint64_t v27 = &v35;
    uint64_t v28 = &v29;
    dispatch_sync(v11, v23);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }
    }
  }
  if (*(void *)(*((void *)&buf + 1) + 40))
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v20 = (void *)v36[5];
        id v21 = [v20 availableProducts];
        uint64_t v22 = v30[5];
        *(_DWORD *)uint64_t v41 = 138412802;
        id v42 = v20;
        __int16 v43 = 2112;
        __int16 v44 = v21;
        __int16 v45 = 2112;
        uint64_t v46 = v22;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) calling completion for availableProductsWithCompletion %@ (%@) %@", v41, 0x20u);
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*((void *)&buf + 1) + 40) + 16))(*(void *)(*((void *)&buf + 1) + 40), v36[5], v30[5], v17, v18);
  }
  _Block_object_dispose(&v29, 8);

  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_availableProductsResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoAvailableProductsResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    int v7 = [(NPKProtoAvailableProductsResponse *)v5 initWithData:v6];

    if ([v7 pending])
    {
      id v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        uint64_t v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: availableProductsResponse", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v13 = [*(id *)(a1 + 32) outstandingRequests];
      [v13 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v14 = [v4 completionHandler];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      uint64_t v17 = [v7 availableProductsData];
      uint64_t v18 = objc_opt_class();
      uint64_t v19 = NPKSecureUnarchiveObject(v17, v18);
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8);
      id v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;

      int v22 = [v7 hasErrorData];
      if (v22)
      {
        v1 = [v7 errorData];
        uint64_t v23 = objc_opt_class();
        id v24 = NPKSecureUnarchiveObject(v1, v23);
      }
      else
      {
        id v24 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    int v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v25 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

- (void)availableProductsWithCompletion:(id)a3
{
}

- (void)productsWithRequest:(id)a3 completion:(id)a4
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  BOOL v6 = (__CFString *)a3;
  id v7 = a4;
  id v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v32 = v6;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: TargetDevice: products with request:%@", buf, 0xCu);
    }
  }
  int v11 = NPKPairedOrPairingDevice();
  BOOL v12 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"DC264F98-B0E2-4D96-9248-663A801E4FB1"];
  int v13 = [v11 supportsCapability:v12];

  uint64_t v14 = pk_Payment_log();
  LODWORD(v12) = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v16 = @"NO";
      if (v13) {
        BOOL v16 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      id v32 = v16;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device availableProductsWithCompletion, Apple Card support %@", buf, 0xCu);
    }
  }
  if (v13)
  {
    uint64_t v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v26[0] = MEMORY[0x263EF8330];
    v26[1] = 3221225472;
    void v26[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_605;
    void v26[3] = &unk_2644D3388;
    uint64_t v18 = (id *)v27;
    BOOL v6 = v6;
    v27[0] = v6;
    v27[1] = self;
    id v28 = v7;
    id v19 = v7;
    dispatch_sync(v17, v26);
  }
  else
  {
    uint64_t v20 = PKLogFacilityTypeGetObject();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v21 = NPKPairedOrPairingDevice();
      int v22 = [v21 valueForProperty:*MEMORY[0x263F57668]];
      *(_DWORD *)long long buf = 138412290;
      id v32 = v22;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not implement availableProductsWithCompletion, getting products from web service", buf, 0xCu);
    }
    if (!v6) {
      BOOL v6 = (__CFString *)objc_alloc_init(MEMORY[0x263F5BFA8]);
    }
    uint64_t v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
    id v24 = [v23 watchPaymentWebService];
    v29[0] = MEMORY[0x263EF8330];
    v29[1] = 3221225472;
    v29[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke;
    v29[3] = &unk_2644D7D58;
    uint64_t v18 = &v30;
    id v30 = v7;
    id v25 = v7;
    [v24 availableProductsWithRequest:v6 completion:v29];
  }
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  id v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412546;
      id v13 = v6;
      __int16 v14 = 2112;
      id v15 = v7;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) availableProductsWithRequest returned %@ %@", (uint8_t *)&v12, 0x16u);
    }
  }
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, id, id))(v11 + 16))(v11, v6, v7);
  }
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_605(uint64_t a1)
{
  v27[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoAvailableProductsRequest);
  id v3 = *(void **)(a1 + 32);
  if (v3)
  {
    id v4 = NPKSecureArchiveObject(v3);
    [(NPKProtoAvailableProductsRequest *)v2 setProductsRequestData:v4];
  }
  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoAvailableProductsRequest *)v2 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:63 isResponse:0];

  id v8 = *(void **)(a1 + 40);
  uint64_t v26 = *MEMORY[0x263F49ED8];
  v27[0] = MEMORY[0x263EFFA88];
  BOOL v9 = [NSDictionary dictionaryWithObjects:v27 forKeys:&v26 count:1];
  uint64_t v10 = [v8 _sendProtobuf:v7 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v11 = MEMORY[0x223C37380]();
      v22[0] = MEMORY[0x263EF8330];
      v22[1] = 3221225472;
      _DWORD v22[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_2;
      v22[3] = &unk_2644D2B90;
      id v23 = *(id *)(a1 + 48);
      int v12 = (void *)MEMORY[0x223C37380](v22);
      id v13 = *(void **)(a1 + 40);
      __int16 v14 = (void *)MEMORY[0x223C37380](v11);
      [v13 _trackOutstandingRequestWithMessageIdentifier:v10 completionHandler:v14 errorHandler:v12];

LABEL_13:
      goto LABEL_14;
    }
    uint64_t v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_13;
      }
      *(_DWORD *)long long buf = 138412290;
      id v25 = v10;
      uint64_t v17 = "Warning: No response expected for message with identifier %@";
      uint64_t v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_12;
    }
  }
  else
  {
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
      *(_DWORD *)long long buf = 138412290;
      id v25 = v7;
      uint64_t v17 = "Error: No message identifier for protobuf %@";
      uint64_t v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_ERROR;
LABEL_12:
      _os_log_impl(&dword_21E92F000, v18, v19, v17, buf, 0xCu);
      goto LABEL_13;
    }
  }
LABEL_14:
}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

- (void)performProductActionResponse:(id)a3
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target performProductActionResponse (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v48 = 0x3032000000;
  BOOL v49 = __Block_byref_object_copy__364;
  __int16 v50 = __Block_byref_object_dispose__365;
  id v51 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = &v35;
  uint64_t v37 = 0x3032000000;
  uint64_t v38 = __Block_byref_object_copy__23;
  id v39 = __Block_byref_object_dispose__23;
  id v40 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v23[0] = MEMORY[0x263EF8330];
    v23[1] = 3221225472;
    v23[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_performProductActionResponse___block_invoke;
    v23[3] = &unk_2644D7808;
    void v23[4] = self;
    id v24 = v10;
    id v25 = v4;
    p_long long buf = &buf;
    uint64_t v27 = &v35;
    id v28 = &v29;
    dispatch_sync(v11, v23);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      __int16 v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }
    }
  }
  if (*(void *)(*((void *)&buf + 1) + 40))
  {
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      os_log_type_t v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v20 = (void *)v36[5];
        BOOL v21 = [v20 availableProducts];
        uint64_t v22 = v30[5];
        *(_DWORD *)uint64_t v41 = 138412802;
        id v42 = v20;
        __int16 v43 = 2112;
        __int16 v44 = v21;
        __int16 v45 = 2112;
        uint64_t v46 = v22;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) calling completion for performProductActionRequest %@ (%@) %@", v41, 0x20u);
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*((void *)&buf + 1) + 40) + 16))(*(void *)(*((void *)&buf + 1) + 40), v36[5], v30[5], v17, v18);
  }
  _Block_object_dispose(&v29, 8);

  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&buf, 8);
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_performProductActionResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoPerformProductActionResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoPerformProductActionResponse *)v5 initWithData:v6];

    if ([v7 pending])
    {
      id v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        uint64_t v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: performProductActionResponse", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v13 = [*(id *)(a1 + 32) outstandingRequests];
      [v13 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v14 = [v4 completionHandler];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      uint64_t v17 = [v7 availableProductsData];
      uint64_t v18 = objc_opt_class();
      uint64_t v19 = NPKSecureUnarchiveObject(v17, v18);
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8);
      BOOL v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;

      int v22 = [v7 hasErrorData];
      if (v22)
      {
        v1 = [v7 errorData];
        id v23 = objc_opt_class();
        id v24 = NPKSecureUnarchiveObject(v1, v23);
      }
      else
      {
        id v24 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v25 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

- (void)performProductActionRequest:(id)a3 completion:(id)a4
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  id v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v19 = v6;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device performProductActionRequest %@", buf, 0xCu);
    }
  }
  uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke;
  block[3] = &unk_2644D3388;
  id v15 = v6;
  BOOL v16 = self;
  id v17 = v7;
  id v12 = v7;
  id v13 = v6;
  dispatch_sync(v11, block);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoPerformProductActionRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoPerformProductActionRequest *)v2 setProductsActionData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoPerformProductActionRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:64 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49ED8];
  v26[0] = MEMORY[0x263EFFA88];
  id v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  BOOL v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      uint64_t v11 = (void *)MEMORY[0x223C37380](v21);
      id v12 = *(void **)(a1 + 40);
      id v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      BOOL v16 = "Warning: No response expected for message with identifier %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      BOOL v16 = "Error: No message identifier for protobuf %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

- (void)paymentWebService:(id)a3 setDefaultPaymentPassUniqueIdentifier:(id)a4
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v5 = a4;
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v14 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device setDefaultPaymentPassUniqueIdentifier: %@", buf, 0xCu);
    }
  }
  BOOL v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setDefaultPaymentPassUniqueIdentifier___block_invoke;
  v11[3] = &unk_2644D4590;
  id v12 = v5;
  id v10 = v5;
  [v9 setDefaultCardUniqueID:v10 completion:v11];
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setDefaultPaymentPassUniqueIdentifier___block_invoke(uint64_t a1, int a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v7 = @"NO";
      uint64_t v8 = *(void *)(a1 + 32);
      if (a2) {
        BOOL v7 = @"YES";
      }
      int v9 = 138412546;
      uint64_t v10 = v8;
      __int16 v11 = 2112;
      id v12 = v7;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) completion of setDefaultCardUniqueID %@ resulted in success = %@", (uint8_t *)&v9, 0x16u);
    }
  }
}

- (void)initializeCloudStoreIfNecessaryResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  int v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    __int16 v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryResponse___block_invoke(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoInitializeCloudStoreIfNecessaryResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoInitializeCloudStoreIfNecessaryResponse *)v4 initWithData:v5];

    if ([(NPKProtoInitializeCloudStoreIfNecessaryResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoInitializeCloudStoreIfNecessaryResponse *)v6 success];
    }
  }
  else
  {
    BOOL v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      int v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)initializeCloudStoreIfNecessaryWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary", buf, 2u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoInitializeCloudStoreIfNecessaryRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoInitializeCloudStoreIfNecessaryRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:38 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)initializeCloudStoreIfNecessaryWithHandlerResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary with handler: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandlerResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __96__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandlerResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    BOOL v7 = [(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *)v5 initWithData:v6];

    if ([(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      id v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *)v7 success];
      BOOL v15 = [(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *)v7 errorData];
        BOOL v16 = objc_opt_class();
        os_log_type_t v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        os_log_type_t v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
    }
  }
  else
  {
    BOOL v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)initializeCloudStoreIfNecessaryWithHandler:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary with handler", buf, 2u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:42 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      BOOL v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      BOOL v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)checkTLKsMissingResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device check TLKs missing: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCheckTLKsMissingResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    BOOL v7 = [(NPKProtoCheckTLKsMissingResponse *)v5 initWithData:v6];

    if ([(NPKProtoCheckTLKsMissingResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      id v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoCheckTLKsMissingResponse *)v7 missing];
      BOOL v15 = [(NPKProtoCheckTLKsMissingResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoCheckTLKsMissingResponse *)v7 errorData];
        BOOL v16 = objc_opt_class();
        os_log_type_t v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        os_log_type_t v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
    }
  }
  else
  {
    BOOL v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)checkTLKsMissingWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device check TLK missing", buf, 2u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoCheckTLKsMissingRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoCheckTLKsMissingRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:41 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      BOOL v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      BOOL v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)resetApplePayManateeViewResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device reset Apple Pay manetee view: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v27 = 0;
  id v28 = &v27;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__23;
  uint64_t v31 = __Block_byref_object_dispose__23;
  id v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v23;
    uint64_t v22 = &v27;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v24 + 24), v28[5]);
  }
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoResetApplePayManateeViewResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    BOOL v7 = [(NPKProtoResetApplePayManateeViewResponse *)v5 initWithData:v6];

    if ([(NPKProtoResetApplePayManateeViewResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      id v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoResetApplePayManateeViewResponse *)v7 success];
      BOOL v15 = [(NPKProtoResetApplePayManateeViewResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoResetApplePayManateeViewResponse *)v7 errorData];
        BOOL v16 = objc_opt_class();
        os_log_type_t v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        os_log_type_t v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
    }
  }
  else
  {
    BOOL v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)resetApplePayManateeViewWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device reset Apple Pay manatee view", buf, 2u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoResetApplePayManateeViewRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoResetApplePayManateeViewRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:43 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      BOOL v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      BOOL v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)cloudStoreStatusResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device cloud store status: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  id v42 = __Block_byref_object_copy__364;
  __int16 v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = &v34;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__23;
  uint64_t v38 = __Block_byref_object_dispose__23;
  id v39 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x2020000000;
  char v33 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__23;
  id v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v34;
    uint64_t v22 = &v30;
    uint64_t v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(v15 + 16))(v15, v35[5], *((unsigned __int8 *)v31 + 24), v25[5]);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);

  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusResponse___block_invoke(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoCloudStoreStatusResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoCloudStoreStatusResponse *)v4 initWithData:v5];

    if ([(NPKProtoCloudStoreStatusResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      BOOL v14 = [(NPKProtoCloudStoreStatusResponse *)v6 accountInfoData];
      uint64_t v15 = objc_opt_class();
      uint64_t v16 = NPKSecureUnarchiveObject(v14, v15);
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
      id v18 = *(void **)(v17 + 40);
      *(void *)(v17 + 40) = v16;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [(NPKProtoCloudStoreStatusResponse *)v6 cloudStoreIsSetup];
      id v19 = [(NPKProtoCloudStoreStatusResponse *)v6 errorData];
      BOOL v20 = (void *)MEMORY[0x263EFFA08];
      uint64_t v21 = objc_opt_class();
      uint64_t v22 = objc_msgSend(v20, "setWithObjects:", v21, objc_opt_class(), 0);
      uint64_t v23 = NPKSecureUnarchiveObjectOfClasses(v19, v22);
      uint64_t v24 = *(void *)(*(void *)(a1 + 80) + 8);
      uint64_t v25 = *(void **)(v24 + 40);
      *(void *)(v24 + 40) = v23;
    }
  }
  else
  {
    BOOL v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
      }
    }
  }
}

- (void)cloudStoreStatusWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device cloud store status", buf, 2u);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  BOOL v2 = objc_alloc_init(NPKProtoCloudStoreStatusRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoCloudStoreStatusRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:39 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49ED8];
  v25[0] = MEMORY[0x263EFFA88];
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke_2;
      v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(result + 16))(result, 0, 0, a2);
  }
  return result;
}

- (void)downloadAllPaymentPasses:(id)a3
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      int v10 = 138412290;
      id v11 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device download all payment passes: incoming protobuf %@", (uint8_t *)&v10, 0xCu);
    }
  }
  id v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v9 handleDownloadAllPaymentPasses];
}

- (void)checkCompanionPeerPaymentRegistrationState:(id)a3
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      int v10 = 138412290;
      id v11 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device check companion peer payment registration state: incoming protobuf %@", (uint8_t *)&v10, 0xCu);
    }
  }
  id v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v9 checkCompanionPeerPaymentRegistrationState];
}

- (BOOL)felicaSecureElementIsAvailable
{
  BOOL v2 = NPKPairedOrPairingDevice();
  id v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"6C4614A2-1ECC-4405-9FEE-B5F0A5666961"];
  char v4 = [v2 supportsCapability:v3];

  return v4;
}

- (BOOL)supportsExpressForAutomaticSelectionTechnologyType:(int64_t)a3
{
  return NPKPairedOrPairingDeviceSupportsExpressForAutomaticSelectionTechnologyType(a3);
}

- (BOOL)supportsCredentialType:(int64_t)a3
{
  return NPKPairedOrPairingDeviceSupportsCredentialType(a3);
}

- (id)upgradeRequestForPass:(id)a3
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 uniqueID];
      int v19 = 138412290;
      BOOL v20 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device: handling upgrade request for pass %@", (uint8_t *)&v19, 0xCu);
    }
  }
  id v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _eligibleExpressUpgradeRequestsForPass:v4];
  uint64_t v10 = [v9 count];
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v14 = [v4 uniqueID];
        int v19 = 138412546;
        BOOL v20 = v9;
        __int16 v21 = 2112;
        uint64_t v22 = v14;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: found eligible requests (%@) for pass %@. Returning first object.", (uint8_t *)&v19, 0x16u);
      }
    }
    uint64_t v15 = [v9 firstObject];
  }
  else
  {
    if (v12)
    {
      uint64_t v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        os_log_type_t v17 = [v4 uniqueID];
        int v19 = 138412290;
        BOOL v20 = v17;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: no eligible upgrade requests found for pass %@", (uint8_t *)&v19, 0xCu);
      }
    }
    uint64_t v15 = 0;
  }

  return v15;
}

- (void)paymentWebService:(id)a3 handlePotentialExpressPass:(id)a4 withCompletionHandler:(id)a5
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v14 = [v9 uniqueID];
        int v17 = 138412290;
        id v18 = v14;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: handling potential express pass %@", (uint8_t *)&v17, 0xCu);
      }
    }
    uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _expressPassConfigurationForPaymentPass:v9];
    if ([(NPKPaymentWebServiceCompanionTargetDevice *)self deviceSupportMultipleExpressPasses])
    {
      [(NPKPaymentWebServiceCompanionTargetDevice *)self _multipleExpressTransitPassPaymentWebService:v8 handlePotentialExpressPassConfiguration:v15 pass:v9 withCompletionHandler:v10];
    }
    else
    {
      [(NPKPaymentWebServiceCompanionTargetDevice *)self _singleExpressTransitPassPaymentWebService:v8 handlePotentialExpressPassConfiguration:v15 withCompletionHandler:v10];
    }
LABEL_12:

    goto LABEL_13;
  }
  if (v12)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = [v9 uniqueID];
      int v17 = 138412290;
      id v18 = v16;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device: missing complition block will not handling potential express pass %@", (uint8_t *)&v17, 0xCu);
    }
    goto LABEL_12;
  }
LABEL_13:
}

- (void)_multipleExpressTransitPassPaymentWebService:(id)a3 handlePotentialExpressPassConfiguration:(id)a4 pass:(id)a5 withCompletionHandler:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  objc_initWeak(&location, self);
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 3221225472;
  v24[2] = __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke;
  v24[3] = &unk_2644D33D8;
  objc_copyWeak(&v27, &location);
  id v14 = v11;
  id v25 = v14;
  id v15 = v13;
  id v26 = v15;
  uint64_t v16 = (void *)MEMORY[0x223C37380](v24);
  int v17 = v16;
  if (v14)
  {
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_624;
    v20[3] = &unk_2644D7DA8;
    id v22 = v16;
    id v21 = v12;
    id v23 = v15;
    [(NPKPaymentWebServiceCompanionTargetDevice *)self _checkConflictsForPass:v21 withConfiguration:v14 webService:v10 hasDisqualifyingConflicts:v20];
  }
  else
  {
    id v18 = [v12 devicePrimaryContactlessPaymentApplication];
    [v18 paymentNetworkIdentifier];
    int v19 = PKIsOpenLoopCredentialType();

    if (v19) {
      [(NPKPaymentWebServiceCompanionTargetDevice *)self _handleOpenLoopPassUpgradeWithPass:v12 webService:v10 completion:v15];
    }
  }

  objc_destroyWeak(&v27);
  objc_destroyWeak(&location);
}

void __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke(uint64_t a1)
{
  BOOL v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    v5[0] = MEMORY[0x263EF8330];
    v5[1] = 3221225472;
    v5[2] = __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_2;
    v5[3] = &unk_2644D7D80;
    objc_copyWeak(&v7, v2);
    id v6 = *(id *)(a1 + 40);
    [WeakRetained setExpressWithPassConfiguration:v4 requestAuthorization:0 completion:v5];

    objc_destroyWeak(&v7);
  }
}

void __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = pk_General_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    id v9 = pk_General_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 134218242;
      uint64_t v12 = a2;
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: did finish handle potential express pass with result %lu, current express passes information: %@", (uint8_t *)&v11, 0x16u);
    }
  }
  if (a2 == 1)
  {
    id v10 = [WeakRetained _expressModesFromExpressPassConfigurations:v5];
  }
  else
  {
    id v10 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_624(uint64_t a1, char a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (a2)
  {
    id v3 = pk_General_log();
    BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v4)
    {
      id v5 = pk_General_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v6 = [*(id *)(a1 + 32) uniqueID];
        int v9 = 138412290;
        id v10 = v6;
        _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Found conflicts for pass %@", (uint8_t *)&v9, 0xCu);
      }
    }
    return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    BOOL v8 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return v8();
  }
}

- (void)_singleExpressTransitPassPaymentWebService:(id)a3 handlePotentialExpressPassConfiguration:(id)a4 withCompletionHandler:(id)a5
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = (void (**)(id, void))a5;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    __int16 v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = [v9 passUniqueIdentifier];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v69 = (uint64_t)v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: legacy handling potential express pass %@", buf, 0xCu);
    }
  }
  if (!v9)
  {
    BOOL v49 = pk_Payment_log();
    BOOL v50 = os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT);

    if (!v50)
    {
LABEL_36:
      v10[2](v10, 0);
      goto LABEL_43;
    }
    int v47 = pk_Payment_log();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v47, OS_LOG_TYPE_DEFAULT, "Notice: _singleExpressTransitPassPaymentWebService called with nil configuration", buf, 2u);
    }
LABEL_35:

    goto LABEL_36;
  }
  uint64_t v15 = [v9 passInformation];
  uint64_t v16 = [v15 cardType];

  if (v16 == 2)
  {
    long long v57 = v10;
    int v17 = NPKPairedDeviceExpressPassConfigurationWithCardType(2);
    if ([v17 count])
    {
      id v18 = pk_General_log();
      BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

      if (v19)
      {
        BOOL v20 = pk_General_log();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v21 = [v17 count];
          *(_DWORD *)long long buf = 134217984;
          uint64_t v69 = v21;
          _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Current existing express pass configuration count:%lu", buf, 0xCu);
        }
      }
      id v22 = [v9 passUniqueIdentifier];
      id v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self paymentWebService:v8 passesOfType:1];
      uint64_t v24 = (void *)MEMORY[0x263F08A98];
      v64[0] = MEMORY[0x263EF8330];
      v64[1] = 3221225472;
      v64[2] = __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke;
      v64[3] = &unk_2644D7DD0;
      id v65 = v22;
      id v66 = v23;
      id v25 = v9;
      id v26 = v8;
      id v27 = v23;
      id v28 = v22;
      id v29 = [v24 predicateWithBlock:v64];
      uint64_t v30 = [v17 filteredSetUsingPredicate:v29];

      id v8 = v26;
      id v9 = v25;

      int v17 = (void *)v30;
    }
    uint64_t v31 = pk_General_log();
    BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

    if (v32)
    {
      char v33 = pk_General_log();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v34 = [v17 count];
        *(_DWORD *)long long buf = 134217984;
        uint64_t v69 = v34;
        _os_log_impl(&dword_21E92F000, v33, OS_LOG_TYPE_DEFAULT, "Notice: filtered existing express pass information count:%lu", buf, 0xCu);
      }
    }
    if ([v17 count])
    {
      id v55 = v9;
      id v56 = v8;
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      id v35 = v17;
      uint64_t v36 = [v35 countByEnumeratingWithState:&v60 objects:v67 count:16];
      if (v36)
      {
        uint64_t v37 = v36;
        uint64_t v38 = *(void *)v61;
        do
        {
          for (uint64_t i = 0; i != v37; ++i)
          {
            if (*(void *)v61 != v38) {
              objc_enumerationMutation(v35);
            }
            id v40 = *(void **)(*((void *)&v60 + 1) + 8 * i);
            uint64_t v41 = pk_Payment_log();
            BOOL v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);

            if (v42)
            {
              __int16 v43 = pk_Payment_log();
              if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
              {
                id v44 = [v40 passUniqueIdentifier];
                *(_DWORD *)long long buf = 138412290;
                uint64_t v69 = (uint64_t)v44;
                _os_log_impl(&dword_21E92F000, v43, OS_LOG_TYPE_DEFAULT, "Notice: Not setting pass as express due to existing express pass with unique ID %@", buf, 0xCu);
              }
            }
          }
          uint64_t v37 = [v35 countByEnumeratingWithState:&v60 objects:v67 count:16];
        }
        while (v37);
      }

      uint64_t v45 = pk_Payment_log();
      BOOL v46 = os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT);

      id v9 = v55;
      id v8 = v56;
      id v10 = v57;
      if (!v46) {
        goto LABEL_36;
      }
      int v47 = pk_Payment_log();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v48 = [v55 passUniqueIdentifier];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v69 = (uint64_t)v48;
        _os_log_impl(&dword_21E92F000, v47, OS_LOG_TYPE_DEFAULT, "Notice: Could not handle protential express pass with unique ID %@.", buf, 0xCu);
      }
      goto LABEL_35;
    }

    id v10 = v57;
  }
  id v51 = pk_General_log();
  BOOL v52 = os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT);

  if (v52)
  {
    id v53 = pk_General_log();
    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
    {
      id v54 = [v9 passUniqueIdentifier];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v69 = (uint64_t)v54;
      _os_log_impl(&dword_21E92F000, v53, OS_LOG_TYPE_DEFAULT, "Notice: Will handle potential express pass with unique ID %@", buf, 0xCu);
    }
  }
  v58[0] = MEMORY[0x263EF8330];
  v58[1] = 3221225472;
  v58[2] = __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_629;
  v58[3] = &unk_2644D7DF8;
  v58[4] = self;
  long long v59 = v10;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self setExpressWithPassConfiguration:v9 requestAuthorization:0 completion:v58];

LABEL_43:
}

BOOL __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 passUniqueIdentifier];
  uint64_t v25 = 0;
  id v26 = &v25;
  uint64_t v27 = 0x2020000000;
  char v28 = 0;
  if (![*(id *)(a1 + 32) isEqualToString:v7])
  {
    uint64_t v11 = *(void **)(a1 + 40);
    uint64_t v19 = MEMORY[0x263EF8330];
    uint64_t v20 = 3221225472;
    uint64_t v21 = __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_626;
    id v22 = &unk_2644D2C58;
    BOOL v12 = v5;
    id v23 = v12;
    uint64_t v24 = &v25;
    [v11 enumerateObjectsUsingBlock:&v19];
    if (!*((unsigned char *)v26 + 24))
    {
      __int16 v13 = pk_Payment_log();
      BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

      if (v14)
      {
        uint64_t v15 = pk_Payment_log();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v16 = [v12 passUniqueIdentifier];
          *(_DWORD *)long long buf = 138412290;
          uint64_t v30 = v16;
          _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Inconsistency found. Pass with uniqueID: %@ not found in the DB, we will ignore it from the current express pass configuration", buf, 0xCu);
        }
      }
    }
    id v10 = v23;
    goto LABEL_11;
  }
  id v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v7;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Inconsistency found. express pass information with Pass uniqueID: %@ match potential express pass uniqueID, we will ignore it from the current express pass information", buf, 0xCu);
    }
LABEL_11:
  }
  BOOL v17 = *((unsigned char *)v26 + 24) != 0;
  _Block_object_dispose(&v25, 8);

  return v17;
}

void __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_626(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 uniqueID];
  id v7 = [*(id *)(a1 + 32) passUniqueIdentifier];
  int v8 = [v6 isEqualToString:v7];

  if (v8)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_629(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v5 = a3;
  id v6 = pk_General_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    int v8 = pk_General_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 134218242;
      uint64_t v12 = a2;
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: did finish handle potential express pass with result %lu, current express passes configuration: %@", (uint8_t *)&v11, 0x16u);
    }
  }
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9)
  {
    if (a2 == 1)
    {
      id v10 = [*(id *)(a1 + 32) _expressModesFromExpressPassConfigurations:v5];
      uint64_t v9 = *(void *)(a1 + 40);
    }
    else
    {
      id v10 = 0;
    }
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
  }
}

- (void)paymentWebService:(id)a3 canHandlePotentialExpressPass:(id)a4 withCompletionHandler:(id)a5
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = (void (**)(id, void))a5;
  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    __int16 v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = [v9 uniqueID];
      *(_DWORD *)long long buf = 138412290;
      id v29 = v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: can handle potential express pass %@", buf, 0xCu);
    }
  }
  if (v10)
  {
    if (![(NPKPaymentWebServiceCompanionTargetDevice *)self deviceSupportMultipleExpressPasses])
    {
      uint64_t v15 = pk_Payment_log();
      BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (v16)
      {
        BOOL v17 = pk_Payment_log();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device doesn't support Multiple express passes, we will not handle this call.", buf, 2u);
        }
      }
      v10[2](v10, 0);
    }
    id v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _expressPassConfigurationForPaymentPass:v9];
    if (v18)
    {
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      void v25[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canHandlePotentialExpressPass_withCompletionHandler___block_invoke;
      v25[3] = &unk_2644D2B68;
      uint64_t v27 = v10;
      id v18 = v18;
      id v26 = v18;
      [(NPKPaymentWebServiceCompanionTargetDevice *)self _checkConflictsForPass:v9 withConfiguration:v18 webService:v8 hasDisqualifyingConflicts:v25];
    }
    else
    {
      id v22 = pk_Payment_log();
      BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

      if (v23)
      {
        uint64_t v24 = pk_Payment_log();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          id v29 = v9;
          _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_DEFAULT, "Notice: Could not create configuration for pass %@", buf, 0xCu);
        }
      }
      v10[2](v10, 0);
    }
LABEL_22:

    goto LABEL_23;
  }
  uint64_t v19 = pk_Payment_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

  if (v20)
  {
    id v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v21 = [v9 uniqueID];
      *(_DWORD *)long long buf = 138412290;
      id v29 = v21;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target device: missing completion block will not check if can handle potential express pass %@", buf, 0xCu);
    }
    goto LABEL_22;
  }
LABEL_23:
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canHandlePotentialExpressPass_withCompletionHandler___block_invoke(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (a2)
  {
    id v3 = *(void (**)(uint64_t, void))(v2 + 16);
    uint64_t v4 = *(void *)(a1 + 40);
    v3(v4, 0);
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) passInformation];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v5);
  }
}

- (id)_dummyExpressPassInformationForPass:(id)a3 fromUpgradeRequest:(id)a4
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    if ([MEMORY[0x263F5BE68] instancesRespondToSelector:sel_initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest_paymentPass_withTechologyTest_])
    {
      id v8 = objc_alloc(MEMORY[0x263F5BE68]);
      v15[0] = MEMORY[0x263EF8330];
      v15[1] = 3221225472;
      void v15[2] = __100__NPKPaymentWebServiceCompanionTargetDevice__dummyExpressPassInformationForPass_fromUpgradeRequest___block_invoke;
      v15[3] = &unk_2644D7E20;
      void v15[4] = self;
      id v9 = (void *)[v8 initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest:v7 paymentPass:v6 withTechologyTest:v15];
      goto LABEL_9;
    }
    id v10 = pk_General_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      BOOL v12 = pk_General_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v13 = [v6 uniqueID];
        *(_DWORD *)long long buf = 138412290;
        BOOL v17 = v13;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: SPI not available. Can't create dummy express pass information for pass with uniqueID:%@", buf, 0xCu);
      }
    }
  }
  id v9 = 0;
LABEL_9:

  return v9;
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice__dummyExpressPassInformationForPass_fromUpgradeRequest___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) supportsExpressForAutomaticSelectionTechnologyType:a2];
}

- (id)_synthesizedExpressPassStateForExpressPassConfiguration:(id)a3 otherPaymentPasses:(id)a4
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v5 = a3;
  id v6 = a4;
  id v22 = objc_alloc_init(MEMORY[0x263EFF9C0]);
  id v7 = [v5 passUniqueIdentifier];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v8 = v6;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v23 objects:v29 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v24 != v11) {
          objc_enumerationMutation(v8);
        }
        __int16 v13 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        id v14 = (void *)[objc_alloc(MEMORY[0x263F5BE68]) initForPaymentPass:v13 withTechologyTest:0];
        uint64_t v15 = [v13 uniqueID];
        char v16 = [v15 isEqualToString:v7];

        if ((v16 & 1) == 0 && v14)
        {
          BOOL v17 = (void *)[objc_alloc(MEMORY[0x263F5BE60]) initWithPassInformation:v14 forSecureElementPass:v13];
          if (v17) {
            [v22 addObject:v17];
          }
        }
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v23 objects:v29 count:16];
    }
    while (v10);
  }

  uint64_t v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    BOOL v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v28 = v22;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Express passes information to use as reference:%@ from local DB", buf, 0xCu);
    }
  }
  return v22;
}

- (id)_expressPassConfigurationForPaymentPass:(id)a3
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = objc_alloc(MEMORY[0x263F5BE68]);
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 3221225472;
  v24[2] = __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke;
  v24[3] = &unk_2644D7E20;
  void v24[4] = self;
  uint64_t v6 = [v5 initForPaymentPass:v4 withTechologyTest:v24];
  if (v6)
  {
    id v7 = (void *)v6;
    id v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = [v4 devicePrimaryPaymentApplication];
        *(_DWORD *)long long buf = 138412546;
        long long v26 = v11;
        __int16 v27 = 2112;
        id v28 = v7;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device: found at given pass with primary payment application:%@ express pass information:%@", buf, 0x16u);
      }
    }
  }
  else
  {
    BOOL v12 = NPKPairedDeviceSecureElementIdentifiers();
    NPKIdentifyDevicePaymentApplicationsForPass(v4, v12);

    id v13 = objc_alloc(MEMORY[0x263F5BE68]);
    v23[0] = MEMORY[0x263EF8330];
    v23[1] = 3221225472;
    v23[2] = __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke_2;
    v23[3] = &unk_2644D7E20;
    void v23[4] = self;
    id v7 = (void *)[v13 initForPaymentPass:v4 withTechologyTest:v23];
    id v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      char v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v17 = [v4 devicePrimaryPaymentApplication];
        *(_DWORD *)long long buf = 138412546;
        long long v26 = v17;
        __int16 v27 = 2112;
        id v28 = v7;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: found at updated pass with primary payment application:%@ express pass information:%@", buf, 0x16u);
      }
    }
    if (!v7)
    {
      uint64_t v18 = 0;
      goto LABEL_16;
    }
  }
  uint64_t v18 = (void *)[objc_alloc(MEMORY[0x263F5BE60]) initWithPassInformation:v7 forSecureElementPass:v4];
  BOOL v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

  if (v20)
  {
    uint64_t v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      long long v26 = v18;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: _expressPassConfigurationForPaymentPass created config %@", buf, 0xCu);
    }
  }
LABEL_16:

  return v18;
}

uint64_t __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) supportsExpressForAutomaticSelectionTechnologyType:a2];
}

uint64_t __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) supportsExpressForAutomaticSelectionTechnologyType:a2];
}

- (id)_eligibleExpressUpgradeRequestsForPass:(id)a3
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceClass];
  uint64_t v6 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceVersion];
  id v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self secureElementIdentifiers];
  if ([v7 count])
  {
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    _DWORD v13[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__eligibleExpressUpgradeRequestsForPass___block_invoke;
    v13[3] = &unk_2644D7E20;
    v13[4] = self;
    id v8 = [v4 eligibleExpressUpgradeRequestsForDeviceClass:v5 deviceSEIDs:v7 deviceVersion:v6 technologyTest:v13];
  }
  else
  {
    BOOL v9 = pk_General_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      uint64_t v11 = pk_General_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        BOOL v15 = "-[NPKPaymentWebServiceCompanionTargetDevice _eligibleExpressUpgradeRequestsForPass:]";
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Warning: Unable to get device SEID in %s", buf, 0xCu);
      }
    }
    id v8 = 0;
  }

  return v8;
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice__eligibleExpressUpgradeRequestsForPass___block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) supportsExpressForAutomaticSelectionTechnologyType:a2];
}

- (void)_checkConflictsForPass:(id)a3 withConfiguration:(id)a4 webService:(id)a5 hasDisqualifyingConflicts:(id)a6
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  if (v12)
  {
    id v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self paymentWebService:a5 passesOfType:1];
    if ([v13 count])
    {
      id v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _synthesizedExpressPassStateForExpressPassConfiguration:v11 otherPaymentPasses:v13];
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __123__NPKPaymentWebServiceCompanionTargetDevice__checkConflictsForPass_withConfiguration_webService_hasDisqualifyingConflicts___block_invoke;
      v20[3] = &unk_2644D7E48;
      void v20[4] = self;
      id v21 = v10;
      id v13 = v13;
      id v22 = v13;
      id v23 = v11;
      id v24 = v12;
      [(NPKPaymentWebServiceCompanionTargetDevice *)self conflictingExpressPassIdentifiersForPassConfiguration:v23 withReferenceExpressState:v14 completion:v20];
    }
    else
    {
      BOOL v17 = pk_General_log();
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (v18)
      {
        BOOL v19 = pk_General_log();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: No payment passes found, should be no conflicts.", buf, 2u);
        }
      }
      (*((void (**)(id, void))v12 + 2))(v12, 0);
    }
LABEL_12:

    goto LABEL_13;
  }
  BOOL v15 = pk_General_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    id v13 = pk_General_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136315138;
      long long v26 = "-[NPKPaymentWebServiceCompanionTargetDevice _checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:]";
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: %s will not proceed with nil completion.", buf, 0xCu);
    }
    goto LABEL_12;
  }
LABEL_13:
}

void __123__NPKPaymentWebServiceCompanionTargetDevice__checkConflictsForPass_withConfiguration_webService_hasDisqualifyingConflicts___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (!v8) {
      goto LABEL_39;
    }
    BOOL v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [*(id *)(a1 + 56) passUniqueIdentifier];
      *(_DWORD *)long long buf = 138412546;
      uint64_t v45 = v5;
      __int16 v46 = 2112;
      int v47 = v10;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: express passes setup in express mode:%@ conflict with given pass. Will not set in express mode pass with uniqueID:%@", buf, 0x16u);
    }
  }
  else
  {
    if (![v6 count]) {
      goto LABEL_39;
    }
    id v11 = pk_General_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      id v13 = pk_General_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Checking Conflicting reference passes", buf, 2u);
      }
    }
    uint64_t v37 = v5;
    uint64_t v14 = [*(id *)(a1 + 32) _categoryIdentifierForPass:*(void *)(a1 + 40)];
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    BOOL v15 = *(id *)(a1 + 48);
    uint64_t v16 = [v15 countByEnumeratingWithState:&v40 objects:v48 count:16];
    uint64_t v38 = v14;
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)v41;
      id v39 = v6;
      while (2)
      {
        for (uint64_t i = 0; i != v17; ++i)
        {
          if (*(void *)v41 != v18) {
            objc_enumerationMutation(v15);
          }
          BOOL v20 = *(void **)(*((void *)&v40 + 1) + 8 * i);
          id v21 = [v20 uniqueID];
          int v22 = [v6 containsObject:v21];

          if (v22)
          {
            id v23 = [*(id *)(a1 + 32) _categoryIdentifierForPass:v20];
            if (PKEqualObjects())
            {
              id v24 = v15;
              int v25 = [v20 isPeerPaymentPass];
              long long v26 = pk_General_log();
              BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

              if (!v25)
              {
                id v5 = v37;
                BOOL v9 = v38;
                BOOL v32 = v24;
                if (v27)
                {
                  id v35 = pk_General_log();
                  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v36 = [v20 uniqueID];
                    *(_DWORD *)long long buf = 138412546;
                    uint64_t v45 = v23;
                    __int16 v46 = 2112;
                    int v47 = v36;
                    _os_log_impl(&dword_21E92F000, v35, OS_LOG_TYPE_DEFAULT, "Notice: Found conflicting category:%@ for pass with unique ID:%@", buf, 0x16u);

                    BOOL v32 = v24;
                  }
                }
                id v6 = v39;
                goto LABEL_36;
              }
              BOOL v15 = v24;
              if (v27)
              {
                id v28 = pk_General_log();
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v29 = [v20 uniqueID];
                  *(_DWORD *)long long buf = 138412290;
                  uint64_t v45 = v29;
                  _os_log_impl(&dword_21E92F000, v28, OS_LOG_TYPE_DEFAULT, "Notice: Found peer payment pass with uniqueID:%@ conflicting with new pass. Will ignore it", buf, 0xCu);

                  BOOL v15 = v24;
                }
              }
            }

            id v6 = v39;
          }
        }
        uint64_t v17 = [v15 countByEnumeratingWithState:&v40 objects:v48 count:16];
        if (v17) {
          continue;
        }
        break;
      }
    }

    uint64_t v30 = pk_General_log();
    BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

    if (v31)
    {
      BOOL v32 = pk_General_log();
      id v5 = v37;
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        [*(id *)(a1 + 56) passUniqueIdentifier];
        v34 = char v33 = v32;
        *(_DWORD *)long long buf = 138412546;
        BOOL v9 = v38;
        uint64_t v45 = v38;
        __int16 v46 = 2112;
        int v47 = v34;
        _os_log_impl(&dword_21E92F000, v33, OS_LOG_TYPE_DEFAULT, "Notice: Conflicting reference passes doesn't belong to the same express category:%@. Will handle potential express pass with unique ID %@", buf, 0x16u);

        BOOL v32 = v33;
      }
      else
      {
        BOOL v9 = v38;
      }
LABEL_36:
    }
    else
    {
      id v5 = v37;
      BOOL v9 = v38;
    }
  }

LABEL_39:
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
}

- (void)_handleOpenLoopPassUpgradeWithPass:(id)a3 webService:(id)a4 completion:(id)a5
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self upgradeRequestForPass:v8];
    if (v11)
    {
      BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _dummyExpressPassInformationForPass:v8 fromUpgradeRequest:v11];
      if (v12)
      {
        id v13 = objc_alloc(MEMORY[0x263F5BE60]);
        uint64_t v14 = [v8 devicePaymentApplications];
        BOOL v15 = (void *)[v13 initWithPassInformation:v12 forPaymentApplications:v14];

        v27[0] = MEMORY[0x263EF8330];
        v27[1] = 3221225472;
        void v27[2] = __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke;
        void v27[3] = &unk_2644D7E98;
        id v28 = v8;
        uint64_t v29 = self;
        uint64_t v30 = v11;
        id v31 = v15;
        id v32 = v10;
        id v16 = v15;
        [(NPKPaymentWebServiceCompanionTargetDevice *)self _checkConflictsForPass:v28 withConfiguration:v16 webService:v9 hasDisqualifyingConflicts:v27];
      }
      else
      {
        id v23 = pk_General_log();
        BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

        if (v24)
        {
          int v25 = pk_General_log();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            long long v26 = [v8 uniqueID];
            *(_DWORD *)long long buf = 138412290;
            uint64_t v34 = v26;
            _os_log_impl(&dword_21E92F000, v25, OS_LOG_TYPE_DEFAULT, "Notice: Invalid upgrade request on pass %@, could not create test express info", buf, 0xCu);
          }
        }
        (*((void (**)(id, void))v10 + 2))(v10, 0);
      }
    }
    else
    {
      BOOL v19 = pk_General_log();
      BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

      if (v20)
      {
        id v21 = pk_General_log();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          int v22 = [v8 uniqueID];
          *(_DWORD *)long long buf = 138412290;
          uint64_t v34 = v22;
          _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: No upgrade request for pass %@", buf, 0xCu);
        }
      }
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
LABEL_19:

    goto LABEL_20;
  }
  uint64_t v17 = pk_General_log();
  BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    id v11 = pk_General_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136315138;
      uint64_t v34 = "-[NPKPaymentWebServiceCompanionTargetDevice _handleOpenLoopPassUpgradeWithPass:webService:completion:]";
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Warning: %s will not continue with nil completion.", buf, 0xCu);
    }
    goto LABEL_19;
  }
LABEL_20:
}

void __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke(uint64_t a1, char a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (a2)
  {
    id v3 = pk_General_log();
    BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v4)
    {
      id v5 = pk_General_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v6 = [*(id *)(a1 + 32) uniqueID];
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v6;
        _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Pass %@ upgrade request has potential conflicts, not upgrading for express", (uint8_t *)&buf, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    if (NPKIsRunningInNPKCompanionAgent()) {
      uint64_t v7 = [*(id *)(a1 + 32) isAppleCardPass];
    }
    else {
      uint64_t v7 = 0;
    }
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v18 = 0x2020000000;
    char v19 = 0;
    id v9 = *(void **)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 32);
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    _DWORD v13[2] = __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke_2;
    v13[3] = &unk_2644D7E70;
    p_long long buf = &buf;
    id v11 = *(id *)(a1 + 64);
    uint64_t v12 = *(void *)(a1 + 40);
    id v15 = v11;
    v13[4] = v12;
    id v14 = *(id *)(a1 + 56);
    [v9 remotePassUpgradeWithRequest:v8 pass:v10 requireAuthorization:0 notifyUserOnPairedDevice:v7 updateBlock:v13];

    _Block_object_dispose(&buf, 8);
  }
}

void __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke_2(void *a1, void *a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = pk_General_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_General_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = [v9 uniqueID];
      id v14 = NSStringFromNPKRemotePassUpgradeStatus(a5);
      int v19 = 138413058;
      uint64_t v20 = v13;
      __int16 v21 = 2112;
      int v22 = v14;
      __int16 v23 = 2112;
      id v24 = v9;
      __int16 v25 = 2112;
      id v26 = v8;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target Device: handle potential express pass received Remote pass upgrade updated for pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@", (uint8_t *)&v19, 0x2Au);
    }
  }
  uint64_t v15 = *(void *)(a1[7] + 8);
  if (!*(unsigned char *)(v15 + 24) && a1[6])
  {
    *(unsigned char *)(v15 + 24) = 1;
    if (v8)
    {
      id v16 = 0;
    }
    else
    {
      uint64_t v17 = (void *)a1[4];
      uint64_t v18 = [MEMORY[0x263EFFA08] setWithObject:a1[5]];
      id v16 = [v17 _expressModesFromExpressPassConfigurations:v18];
    }
    (*(void (**)(void))(a1[6] + 16))();
  }
}

- (void)sendPaymentOptionsDefaultsToWatch
{
  void v20[2] = *MEMORY[0x263EF8340];
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending updated payment options defaults to watch", (uint8_t *)&v17, 2u);
    }
  }
  id v6 = +[NPKPaymentOptionsSerialization setTransactionDefaultsRequest];
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  id v8 = [v6 data];
  id v9 = (void *)[v7 initWithProtobufData:v8 type:23 isResponse:0];

  v19[0] = *MEMORY[0x263F49F80];
  uint64_t v10 = [NSNumber numberWithDouble:*MEMORY[0x263F4A150]];
  v19[1] = *MEMORY[0x263F49F60];
  v20[0] = v10;
  v20[1] = @"NPKTransactionDefaultsQueueOne";
  BOOL v11 = [NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:2];

  uint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  id v13 = NPKProtoSendWithOptions(v12, v9, 200, 0, 0, &__block_literal_global_639, v11);

  id v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    id v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 138412290;
      uint64_t v18 = v13;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Sent updated payment options defaults to watch with message ID %@", (uint8_t *)&v17, 0xCu);
    }
  }
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_sendPaymentOptionsDefaultsToWatch__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v2;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send updated payment options defaults to watch %@!", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (void)sendWebServiceContextToWatch:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  if (NPKIsCompanionMigrationNeeded()
    && ([v4 registrationDate], id v5 = objc_claimAutoreleasedReturnValue(), v5, !v5))
  {
    id v28 = pk_Payment_log();
    BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

    if (v29)
    {
      pk_Payment_log();
      BOOL v15 = (NPKProtoWebServiceContextDidChangeRequest *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v15->super.super.super, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v33 = v4;
        uint64_t v27 = "Warning: Not sending unregistered web service context to watch (%@) while companion migration is needed";
        goto LABEL_23;
      }
LABEL_24:
    }
  }
  else
  {
    int v6 = NPKPairedDeviceSecureElementIdentifiers();
    char v7 = NPKValidatePaymentWebServiceContextAgainstWatchSEIDs(v4, v6);

    uint64_t v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      if (v9)
      {
        uint64_t v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          BOOL v11 = [v4 primaryRegion];
          uint64_t v12 = [v11 applyServiceURL];
          id v13 = [v4 primaryRegion];
          id v14 = @"YES";
          *(_DWORD *)long long buf = 138412802;
          id v33 = v4;
          __int16 v34 = 2112;
          if (!v13) {
            id v14 = @"NO";
          }
          uint64_t v35 = v12;
          __int16 v36 = 2112;
          uint64_t v37 = v14;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-context) Sending web service context to watch: %@ applyServiceURL %@ primaryRegion %@", buf, 0x20u);
        }
      }
      BOOL v15 = objc_alloc_init(NPKProtoWebServiceContextDidChangeRequest);
      id v16 = NPKSecureArchiveObject(v4);
      if (v16) {
        [(NPKProtoWebServiceContextDidChangeRequest *)v15 setWebServiceContextBytes:v16];
      }
      id v17 = objc_alloc(MEMORY[0x263F4A228]);
      uint64_t v18 = [(NPKProtoWebServiceContextDidChangeRequest *)v15 data];
      int v19 = (void *)[v17 initWithProtobufData:v18 type:17 isResponse:0];

      uint64_t v20 = objc_msgSend(NSNumber, "numberWithDouble:", *MEMORY[0x263F4A150], *MEMORY[0x263F49F80]);
      v30[1] = *MEMORY[0x263F49F60];
      v31[0] = v20;
      v31[1] = @"NPKWebServiceContextQueueOne";
      __int16 v21 = [NSDictionary dictionaryWithObjects:v31 forKeys:v30 count:2];

      int v22 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
      __int16 v23 = NPKProtoSendWithOptions(v22, v19, 200, 0, 0, &__block_literal_global_645, v21);

      id v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

      if (v25)
      {
        id v26 = pk_Payment_log();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          id v33 = v23;
          _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Notice: Sent web service context to watch with message ID %@", buf, 0xCu);
        }
      }
      goto LABEL_24;
    }
    if (v9)
    {
      pk_Payment_log();
      BOOL v15 = (NPKProtoWebServiceContextDidChangeRequest *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v15->super.super.super, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v33 = v4;
        uint64_t v27 = "Warning: Not sending invalid web service context to watch (%@)";
LABEL_23:
        _os_log_impl(&dword_21E92F000, &v15->super.super.super, OS_LOG_TYPE_DEFAULT, v27, buf, 0xCu);
        goto LABEL_24;
      }
      goto LABEL_24;
    }
  }
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_sendWebServiceContextToWatch___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v2;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send web service context to watch %@!", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (void)handleCompanionMigrationResponse:(id)a3
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v55 = 0x3032000000;
  id v56 = __Block_byref_object_copy__364;
  long long v57 = __Block_byref_object_dispose__365;
  id v58 = 0;
  uint64_t v50 = 0;
  id v51 = &v50;
  uint64_t v52 = 0x2020000000;
  char v53 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = &v44;
  uint64_t v46 = 0x3032000000;
  int v47 = __Block_byref_object_copy__23;
  uint64_t v48 = __Block_byref_object_dispose__23;
  id v49 = 0;
  uint64_t v38 = 0;
  id v39 = &v38;
  uint64_t v40 = 0x3032000000;
  long long v41 = __Block_byref_object_copy__23;
  long long v42 = __Block_byref_object_dispose__23;
  id v43 = 0;
  uint64_t v32 = 0;
  id v33 = &v32;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__23;
  __int16 v36 = __Block_byref_object_dispose__23;
  id v37 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = &v26;
  uint64_t v28 = 0x3032000000;
  BOOL v29 = __Block_byref_object_copy__23;
  uint64_t v30 = __Block_byref_object_dispose__23;
  id v31 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationResponse___block_invoke;
    block[3] = &unk_2644D7BA0;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    __int16 v21 = &v50;
    int v22 = &v44;
    __int16 v23 = &v38;
    id v24 = &v32;
    BOOL v25 = &v26;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v51 + 24), v45[5], v39[5], v33[5], v27[5]);
  }
  _Block_object_dispose(&v26, 8);

  _Block_object_dispose(&v32, 8);
  _Block_object_dispose(&v38, 8);

  _Block_object_dispose(&v44, 8);
  _Block_object_dispose(&v50, 8);
  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoCompanionMigratedResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoCompanionMigratedResponse *)v5 initWithData:v6];

    if ([(NPKProtoCompanionMigratedResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      id v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoCompanionMigratedResponse *)v7 success];
      BOOL v15 = [(NPKProtoCompanionMigratedResponse *)v7 hasErrorData];
      if (v15)
      {
        v1 = [(NPKProtoCompanionMigratedResponse *)v7 errorData];
        id v16 = objc_opt_class();
        id v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        id v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {
      }
      id v18 = [(NPKProtoCompanionMigratedResponse *)v7 paymentWebServiceContextData];
      id v19 = objc_opt_class();
      uint64_t v20 = NPKSecureUnarchiveObject(v18, v19);
      uint64_t v21 = *(void *)(*(void *)(a1 + 80) + 8);
      int v22 = *(void **)(v21 + 40);
      *(void *)(v21 + 40) = v20;

      __int16 v23 = [(NPKProtoCompanionMigratedResponse *)v7 peerPaymentWebServiceContextData];
      id v24 = objc_opt_class();
      uint64_t v25 = NPKSecureUnarchiveObject(v23, v24);
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8);
      uint64_t v27 = *(void **)(v26 + 40);
      *(void *)(v26 + 40) = v25;

      uint64_t v28 = [(NPKProtoCompanionMigratedResponse *)v7 peerPaymentAccountData];
      BOOL v29 = objc_opt_class();
      uint64_t v30 = NPKSecureUnarchiveObject(v28, v29);
      uint64_t v31 = *(void *)(*(void *)(a1 + 96) + 8);
      uint64_t v32 = *(void **)(v31 + 40);
      *(void *)(v31 + 40) = v30;
    }
  }
  else
  {
    uint64_t v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v33[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v33, 2u);
      }
    }
  }
}

- (void)handleCompanionMigrationWithCompletion:(id)a3
{
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Telling watch to handle companion migration", buf, 2u);
    }
  }
  uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke;
  v10[3] = &unk_2644D2E58;
  void v10[4] = self;
  id v11 = v4;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoCompanionMigratedRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoCompanionMigratedRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:30 isResponse:0];

  BOOL v6 = [*(id *)(a1 + 32) _sendProtobuf:v5 responseExpected:1];
  if (v6)
  {
    if (*(void *)(a1 + 40))
    {
      id v7 = MEMORY[0x223C37380]();
      v19[0] = MEMORY[0x263EF8330];
      v19[1] = 3221225472;
      void v19[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke_2;
      void v19[3] = &unk_2644D2B90;
      id v20 = *(id *)(a1 + 40);
      uint64_t v8 = (void *)MEMORY[0x223C37380](v19);
      id v9 = *(void **)(a1 + 32);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v7);
      [v9 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v10 errorHandler:v8];

      id v11 = pk_Payment_log();
      LODWORD(v10) = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        uint64_t v12 = pk_Payment_log();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          int v22 = v6;
          _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Sent companion migration event to watch with message ID %@", buf, 0xCu);
        }
      }
    }
    else
    {
      id v17 = pk_Payment_log();
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (!v18) {
        goto LABEL_15;
      }
      id v7 = pk_Payment_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        int v22 = v6;
        _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_14;
  }
  uint64_t v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

  if (v14)
  {
    BOOL v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      int v22 = v5;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v16 = *(void *)(a1 + 40);
  if (v16)
  {
    id v7 = NPKGetIDSCommunicationError();
    (*(void (**)(uint64_t, void, NSObject *, void, void, void))(v16 + 16))(v16, 0, v7, 0, 0, 0);
LABEL_14:
  }
LABEL_15:
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void, void, void))(result + 16))(result, 0, a2, 0, 0, 0);
  }
  return result;
}

- (void)handleCompanionPeerPaymentRegistration
{
  void v20[2] = *MEMORY[0x263EF8340];
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending companion peer payment registration event to watch", (uint8_t *)&v17, 2u);
    }
  }
  BOOL v6 = objc_alloc_init(NPKProtoHandleCompanionPeerPaymentRegistrationRequest);
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v8 = [(NPKProtoHandleCompanionPeerPaymentRegistrationRequest *)v6 data];
  id v9 = (void *)[v7 initWithProtobufData:v8 type:36 isResponse:0];

  v19[0] = *MEMORY[0x263F49F80];
  uint64_t v10 = [NSNumber numberWithDouble:*MEMORY[0x263F4A150]];
  v19[1] = *MEMORY[0x263F49F60];
  v20[0] = v10;
  v20[1] = @"NPKCompanionPeerPaymentRegistrationQueueOne";
  id v11 = [NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:2];

  uint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  uint64_t v13 = NPKProtoSendWithOptions(v12, v9, 200, 0, 0, &__block_literal_global_654, v11);

  BOOL v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    uint64_t v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 138412290;
      BOOL v18 = v13;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Sent companion peer payment registration event to watch with message ID %@", (uint8_t *)&v17, 0xCu);
    }
  }
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionPeerPaymentRegistration__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v2;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send companion peer payment registration event to watch %@!", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (void)handleCompanioniCloudSignout
{
  void v20[2] = *MEMORY[0x263EF8340];
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending companion iCloud signout event to watch", (uint8_t *)&v17, 2u);
    }
  }
  int v6 = objc_alloc_init(NPKProtoHandleCompanioniCloudSignoutRequest);
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v8 = [(NPKProtoHandleCompanioniCloudSignoutRequest *)v6 data];
  id v9 = (void *)[v7 initWithProtobufData:v8 type:49 isResponse:0];

  uint64_t v10 = *MEMORY[0x263F49F60];
  v19[0] = *MEMORY[0x263F49F80];
  v19[1] = v10;
  v20[0] = &unk_26D043958;
  v20[1] = @"NPKCompanioniCloudSignoutQueueOne";
  id v11 = [NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:2];
  uint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  uint64_t v13 = NPKProtoSendWithOptions(v12, v9, 200, 0, 0, &__block_literal_global_662, v11);

  BOOL v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    uint64_t v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 138412290;
      BOOL v18 = v13;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Sent companion iCloud signout event to watch with message ID %@", (uint8_t *)&v17, 0xCu);
    }
  }
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_handleCompanioniCloudSignout__block_invoke(uint64_t a1, void *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = pk_Payment_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    id v5 = pk_Payment_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v2;
      _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send iCloud signout event to watch %@!", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (void)handleWebServiceContextDidChangeRequest:(id)a3
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = [NPKProtoWebServiceContextDidChangeRequest alloc];
  int v6 = [v4 data];

  id v7 = [(NPKProtoWebServiceContextDidChangeRequest *)v5 initWithData:v6];
  uint64_t v8 = [(NPKProtoWebServiceContextDidChangeRequest *)v7 webServiceContextBytes];
  id v9 = objc_opt_class();
  uint64_t v10 = NPKSecureUnarchiveObject(v8, v9);
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    uint64_t v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v22 = 138412290;
      uint64_t v23 = v10;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Got updated web service context from watch: %@", (uint8_t *)&v22, 0xCu);
    }
  }
  if (v10)
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      uint64_t v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = [v10 primaryRegion];
        BOOL v18 = [v17 applyServiceURL];
        id v19 = [v10 primaryRegion];
        id v20 = @"YES";
        if (!v19) {
          id v20 = @"NO";
        }
        int v22 = 138412546;
        uint64_t v23 = v18;
        __int16 v24 = 2112;
        uint64_t v25 = v20;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@", (uint8_t *)&v22, 0x16u);
      }
    }
    uint64_t v21 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
    [v21 handlePaymentWebServiceContextFromWatch:v10];
  }
}

- (void)handleWebServiceContextNeededRequest:(id)a3
{
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    int v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Watch requested web service context", v8, 2u);
    }
  }
  id v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v7 sendWebServiceContextToWatch];
}

- (void)handleShowPaymentSetupRequest:(id)a3
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = [NPKProtoShowPaymentSetupRequest alloc];
  int v6 = [v4 data];

  id v7 = [(NPKProtoShowPaymentSetupRequest *)v5 initWithData:v6];
  uint64_t v8 = [(NPKProtoShowPaymentSetupRequest *)v7 appDisplayName];
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    id v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 138412290;
      BOOL v14 = v8;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Watch requested that we show payment setup for app %@", (uint8_t *)&v13, 0xCu);
    }
  }
  BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v12 showPaymentSetupForAppDisplayName:v8];
}

- (void)handleTransactionDefaultsNeededRequest:(id)a3
{
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    int v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Watch requested transaction defaults", v8, 2u);
    }
  }
  id v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  [v7 sendPaymentOptionsDefaultsToWatch];
}

- (void)handleUpdatedPeerPaymentWebServiceContext:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Watch provided updated peer payment context and account", buf, 2u);
    }
  }
  uint64_t v8 = [NPKProtoPeerPaymentWebServiceContextDidChangeRequest alloc];
  id v9 = [v4 data];

  BOOL v10 = [(NPKProtoPeerPaymentWebServiceContextDidChangeRequest *)v8 initWithData:v9];
  id v11 = [(NPKProtoPeerPaymentWebServiceContextDidChangeRequest *)v10 peerPaymentWebServiceContextData];
  BOOL v12 = objc_opt_class();
  int v13 = NPKSecureUnarchiveObject(v11, v12);

  BOOL v14 = [(NPKProtoPeerPaymentWebServiceContextDidChangeRequest *)v10 peerPaymentAccountData];
  uint64_t v15 = objc_opt_class();
  uint64_t v16 = NPKSecureUnarchiveObject(v14, v15);

  if (v13)
  {
    int v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
    [v17 handleUpdatedPeerPaymentWebServiceContext:v13 account:v16];
  }
  else
  {
    BOOL v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (!v19) {
      goto LABEL_8;
    }
    int v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: Got updated peer payment web service message, but could not decode context", v20, 2u);
    }
  }

LABEL_8:
}

- (BOOL)paymentWebServiceSupportsPeerPaymentRegistration:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self deviceRegion];
  char v6 = NPKShouldAllowPeerPaymentRegistrationForWebService(v4, v5);

  return v6;
}

- (void)claimSecureElementForCurrentUserWithCompletion:(id)a3
{
  if (a3) {
    (*((void (**)(id, uint64_t))a3 + 2))(a3, 1);
  }
}

- (void)paymentWebService:(id)a3 requestPassUpgrade:(id)a4 pass:(id)a5 completion:(id)a6
{
  id v9 = a5;
  id v10 = a6;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 3221225472;
  _DWORD v13[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestPassUpgrade_pass_completion___block_invoke;
  v13[3] = &unk_2644D7EC0;
  id v14 = v9;
  id v15 = v10;
  id v11 = v10;
  id v12 = v9;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self remotePassUpgradeWithRequest:a4 pass:v12 requireAuthorization:1 notifyUserOnPairedDevice:0 updateBlock:v13];
}

void __98__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestPassUpgrade_pass_completion___block_invoke(uint64_t a1, void *a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v8 = a2;
  id v9 = a3;
  id v10 = pk_General_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    id v12 = pk_General_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = [*(id *)(a1 + 32) uniqueID];
      id v14 = NSStringFromNPKRemotePassUpgradeStatus(a5);
      int v16 = 138413058;
      int v17 = v13;
      __int16 v18 = 2112;
      BOOL v19 = v14;
      __int16 v20 = 2112;
      id v21 = v9;
      __int16 v22 = 2112;
      id v23 = v8;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target Device: Received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@", (uint8_t *)&v16, 0x2Au);
    }
  }
  uint64_t v15 = *(void *)(a1 + 40);
  if (v15 && (v8 || a5 == 2)) {
    (*(void (**)(uint64_t, id, id))(v15 + 16))(v15, v8, v9);
  }
}

- (BOOL)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)a3
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  BOOL v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_willPassWithUniqueIdentifierAutomaticallyBecomeDefault___block_invoke;
  v12[3] = &unk_2644D7EE8;
  void v12[4] = &v13;
  [v5 willPassWithUniqueIdentifierAutomaticallyBecomeDefault:v4 completion:v12];
  char v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      if (*((unsigned char *)v14 + 24)) {
        id v9 = @"YES";
      }
      else {
        id v9 = @"NO";
      }
      *(_DWORD *)long long buf = 138412546;
      id v18 = v4;
      __int16 v19 = 2112;
      __int16 v20 = v9;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target Device willPassWithUniqueIdentifierAutomaticallyBecomeDefault for %@ returns %@", buf, 0x16u);
    }
  }
  BOOL v10 = *((unsigned char *)v14 + 24) != 0;

  _Block_object_dispose(&v13, 8);
  return v10;
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_willPassWithUniqueIdentifierAutomaticallyBecomeDefault___block_invoke(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

- (void)consistencyCheck
{
  id v2 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  [v2 consistencyCheckWithCompletion:0];
}

- (void)currentPasscodeMeetsUpgradedPasscodePolicy:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device currentPasscodeMeetsUpgradedPasscodePolicy:", buf, 2u);
    }
  }
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  _DWORD v9[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_currentPasscodeMeetsUpgradedPasscodePolicy___block_invoke;
  v9[3] = &unk_2644D28C0;
  id v10 = v4;
  id v8 = v4;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _checkUpgradedPasscodePolicyByApplyingRestrictions:0 applyBackgroundEnforcementIfNecessary:0 completion:v9];
}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_currentPasscodeMeetsUpgradedPasscodePolicy___block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)enforceUpgradedPasscodePolicyWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device enforceUpgradedPasscodePolicyWithCompletion", v8, 2u);
    }
  }
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _checkUpgradedPasscodePolicyByApplyingRestrictions:NPKIsCurrentlyPairing() applyBackgroundEnforcementIfNecessary:1 completion:v4];
}

- (void)_checkUpgradedPasscodePolicyByApplyingRestrictions:(BOOL)a3 applyBackgroundEnforcementIfNecessary:(BOOL)a4 completion:(id)a5
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v8 = a5;
  id v9 = NPKPairedOrPairingDevice();
  id v10 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"];
  int v11 = [v9 supportsCapability:v10];

  id v12 = pk_Payment_log();
  LODWORD(v10) = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = NSStringFromBOOL();
      *(_DWORD *)long long buf = 138412290;
      uint64_t v24 = v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Supports inline passcode policy enforcement: %@", buf, 0xCu);
    }
  }
  if (v11)
  {
    uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke;
    block[3] = &unk_2644D7F10;
    BOOL v21 = a3;
    BOOL v22 = a4;
    void block[4] = self;
    id v20 = v8;
    dispatch_sync(v15, block);
  }
  else
  {
    char v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      id v18 = pk_Payment_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Cannot enforce passcode policy on an unsupported OS. Advancing the flow by indicating that the device meets the policy.", buf, 2u);
      }
    }
    (*((void (**)(id, uint64_t, void))v8 + 2))(v8, 1, 0);
  }
}

void __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoCheckPasscodePolicyComplianceRequest);
  [(NPKProtoCheckPasscodePolicyComplianceRequest *)v2 setEnforcedPolicy:0];
  [(NPKProtoCheckPasscodePolicyComplianceRequest *)v2 setApplyRestrictions:*(unsigned __int8 *)(a1 + 48)];
  [(NPKProtoCheckPasscodePolicyComplianceRequest *)v2 setApplyBackgroundEnforcementIfNecessary:*(unsigned __int8 *)(a1 + 49)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoCheckPasscodePolicyComplianceRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:61 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      id v10 = (void *)MEMORY[0x223C37380](v20);
      int v11 = *(void **)(a1 + 32);
      id v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      char v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      char v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)handleCheckUpgradedPasscodePolicyResponse:(id)a3
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: handleCheckUpgradedPasscodePolicyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v43 = 0x3032000000;
  uint64_t v44 = __Block_byref_object_copy__364;
  uint64_t v45 = __Block_byref_object_dispose__365;
  id v46 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = &v34;
  uint64_t v36 = 0x2020000000;
  char v37 = 0;
  uint64_t v28 = 0;
  BOOL v29 = &v28;
  uint64_t v30 = 0x3032000000;
  uint64_t v31 = __Block_byref_object_copy__23;
  uint64_t v32 = __Block_byref_object_dispose__23;
  id v33 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 3221225472;
    _DWORD v22[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_handleCheckUpgradedPasscodePolicyResponse___block_invoke;
    v22[3] = &unk_2644D7808;
    void v22[4] = self;
    id v23 = v10;
    id v24 = v4;
    p_long long buf = &buf;
    uint64_t v26 = &v34;
    uint64_t v27 = &v28;
    dispatch_sync(v11, v22);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v38, 2u);
      }
    }
  }
  if (*(void *)(*((void *)&buf + 1) + 40))
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        if (*((unsigned char *)v35 + 24)) {
          id v20 = @"YES";
        }
        else {
          id v20 = @"NO";
        }
        uint64_t v21 = v29[5];
        *(_DWORD *)uint64_t v38 = 138412546;
        id v39 = v20;
        __int16 v40 = 2112;
        uint64_t v41 = v21;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: handleCheckUpgradedPasscodePolicyResponse: invoking completion with passcodeMeetsPolicy: %@, error: %@", v38, 0x16u);
      }
    }
    (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(*(void *)(*((void *)&buf + 1) + 40) + 16))(*(void *)(*((void *)&buf + 1) + 40), *((unsigned __int8 *)v35 + 24), v29[5], v17, v18);
  }
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_handleCheckUpgradedPasscodePolicyResponse___block_invoke(uint64_t a1)
{
  void v30[2] = *MEMORY[0x263EF8340];
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoCheckPasscodePolicyComplianceResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoCheckPasscodePolicyComplianceResponse *)v4 initWithData:v5];

    BOOL v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v6 passcodeMeetsPolicy];
    if ([v6 hasErrorData])
    {
      int v11 = [v6 errorData];
      id v12 = objc_opt_class();
      BOOL v13 = NPKSecureUnarchiveObject(v11, v12);
    }
    else
    {
      BOOL v13 = 0;
    }
    BOOL v16 = [v13 domain];
    if ([v16 isEqualToString:@"com.apple.NPKErrorDomain"])
    {
      uint64_t v17 = [v13 code];

      if (v17 == -1004)
      {
        uint64_t v27 = (void *)MEMORY[0x263F087E8];
        uint64_t v18 = *MEMORY[0x263F5C538];
        v29[0] = *MEMORY[0x263F08338];
        BOOL v19 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
        id v20 = [v19 localizedStringForKey:@"UNLOCK_REQUIRED_ALERT_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKit"];
        v30[0] = v20;
        v29[1] = *MEMORY[0x263F08348];
        uint64_t v21 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
        BOOL v22 = [v21 localizedStringForKey:@"UNLOCK_REQUIRED_ALERT_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKit"];
        v30[1] = v22;
        id v23 = [NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:2];
        uint64_t v24 = [v27 errorWithDomain:v18 code:0 userInfo:v23];

        BOOL v13 = (void *)v24;
      }
    }
    else
    {
    }
    uint64_t v25 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v26 = *(void **)(v25 + 40);
    *(void *)(v25 + 40) = v13;

LABEL_13:
    goto LABEL_14;
  }
  BOOL v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
    goto LABEL_13;
  }
LABEL_14:
}

- (void)requestPasscodeUpgradeForPasscodeUpgradeFlowController:(id)a3 withVisibleViewController:(id)a4 completion:(id)a5
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device requestPasscodeUpgradeForPasscodeUpgradeFlowController:withVisibleViewController:completion:", buf, 2u);
    }
  }
  [(NPKPaymentWebServiceCompanionTargetDevice *)self setPasscodeUpgradeFlowController:v8];
  objc_initWeak(&location, self);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  void v29[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke;
  v29[3] = &unk_2644D7F38;
  objc_copyWeak(&v32, &location);
  id v14 = v9;
  id v30 = v14;
  id v15 = v10;
  id v31 = v15;
  BOOL v16 = (void (**)(void, void, void))MEMORY[0x223C37380](v29);
  uint64_t v17 = NPKPairedOrPairingDevice();
  uint64_t v18 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"];
  int v19 = [v17 supportsCapability:v18];

  id v20 = pk_Payment_log();
  LODWORD(v18) = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    uint64_t v21 = pk_Payment_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v22 = @"NO";
      if (v19) {
        BOOL v22 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v35 = v22;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Supports inline passcode policy enforcement: %@", buf, 0xCu);
    }
  }
  if (v19)
  {
    id v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v27[0] = MEMORY[0x263EF8330];
    v27[1] = 3221225472;
    void v27[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_679;
    void v27[3] = &unk_2644D2E58;
    void v27[4] = self;
    uint64_t v28 = v16;
    dispatch_sync(v23, v27);
  }
  else
  {
    uint64_t v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      uint64_t v26 = pk_Payment_log();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Notice: Cannot apply passcode restrictions on an unsupported OS. Advancing the flow by indicating that all is well.", buf, 2u);
      }
    }
    v16[2](v16, 1, 0);
  }

  objc_destroyWeak(&v32);
  objc_destroyWeak(&location);
}

void __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  BOOL v7 = WeakRetained;
  if (WeakRetained)
  {
    if (v5 || !a2)
    {
      int v11 = pk_Payment_log();
      BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

      if (v12)
      {
        BOOL v13 = pk_Payment_log();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v15 = 0;
          _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: Failed to apply passcode restrictions.", v15, 2u);
        }
      }
      uint64_t v14 = *(void *)(a1 + 40);
      if (v14) {
        (*(void (**)(uint64_t, uint64_t, id))(v14 + 16))(v14, a2, v5);
      }
      [v7 setPasscodeUpgradeFlowController:0];
    }
    else
    {
      id v8 = [WeakRetained passcodeChangeCoordinator];
      v16[0] = MEMORY[0x263EF8330];
      v16[1] = 3221225472;
      _DWORD v16[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2;
      void v16[3] = &unk_2644D4128;
      uint64_t v9 = *(void *)(a1 + 32);
      id v10 = *(id *)(a1 + 40);
      void v16[4] = v7;
      id v17 = v10;
      [v8 handleGizmoPasscodeChangeWithVisibleViewController:v9 completion:v16];
    }
  }
}

uint64_t __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  [*(id *)(a1 + 32) setPasscodeUpgradeFlowController:0];
  id v3 = *(void **)(a1 + 32);
  return [v3 setPasscodeChangeCoordinator:0];
}

void __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_679(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest);
  [(NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest *)v2 setEnforcedPolicy:0];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:68 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2_681;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      id v10 = (void *)MEMORY[0x223C37380](v20);
      int v11 = *(void **)(a1 + 32);
      BOOL v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v8;
      id v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v23 = v5;
      id v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2_681(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse:(id)a3
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v43 = 0x3032000000;
  uint64_t v44 = __Block_byref_object_copy__364;
  uint64_t v45 = __Block_byref_object_dispose__365;
  id v46 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = &v34;
  uint64_t v36 = 0x2020000000;
  char v37 = 0;
  uint64_t v28 = 0;
  BOOL v29 = &v28;
  uint64_t v30 = 0x3032000000;
  id v31 = __Block_byref_object_copy__23;
  id v32 = __Block_byref_object_dispose__23;
  id v33 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 3221225472;
    _DWORD v22[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse___block_invoke;
    v22[3] = &unk_2644D7808;
    void v22[4] = self;
    id v23 = v10;
    id v24 = v4;
    p_long long buf = &buf;
    uint64_t v26 = &v34;
    uint64_t v27 = &v28;
    dispatch_sync(v11, v22);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v38, 2u);
      }
    }
  }
  if (*(void *)(*((void *)&buf + 1) + 40))
  {
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        if (*((unsigned char *)v35 + 24)) {
          id v20 = @"YES";
        }
        else {
          id v20 = @"NO";
        }
        uint64_t v21 = v29[5];
        *(_DWORD *)uint64_t v38 = 138412546;
        id v39 = v20;
        __int16 v40 = 2112;
        uint64_t v41 = v21;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Calling completion with success: %@ error: %@", v38, 0x16u);
      }
    }
    (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(*(void *)(*((void *)&buf + 1) + 40) + 16))(*(void *)(*((void *)&buf + 1) + 40), *((unsigned __int8 *)v35 + 24), v29[5], v17, v18);
  }
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);
}

void __109__NPKPaymentWebServiceCompanionTargetDevice_handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse___block_invoke(uint64_t a1)
{
  void v30[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse *)v4 initWithData:v5];

    BOOL v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v6 success];
    if ([v6 hasErrorData])
    {
      int v11 = [v6 errorData];
      BOOL v12 = objc_opt_class();
      BOOL v13 = NPKSecureUnarchiveObject(v11, v12);
    }
    else
    {
      BOOL v13 = 0;
    }
    BOOL v16 = [v13 domain];
    if ([v16 isEqualToString:@"com.apple.NPKErrorDomain"])
    {
      uint64_t v17 = [v13 code];

      if (v17 == -1004)
      {
        uint64_t v27 = (void *)MEMORY[0x263F087E8];
        uint64_t v18 = *MEMORY[0x263F5C538];
        v29[0] = *MEMORY[0x263F08338];
        BOOL v19 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
        id v20 = [v19 localizedStringForKey:@"UNLOCK_REQUIRED_ALERT_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKit"];
        v30[0] = v20;
        v29[1] = *MEMORY[0x263F08348];
        uint64_t v21 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
        BOOL v22 = [v21 localizedStringForKey:@"UNLOCK_REQUIRED_ALERT_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKit"];
        v30[1] = v22;
        id v23 = [NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:2];
        uint64_t v24 = [v27 errorWithDomain:v18 code:0 userInfo:v23];

        BOOL v13 = (void *)v24;
      }
    }
    else
    {
    }
    uint64_t v25 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v26 = *(void **)(v25 + 40);
    *(void *)(v25 + 40) = v13;

LABEL_13:
    goto LABEL_14;
  }
  BOOL v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
    goto LABEL_13;
  }
LABEL_14:
}

- (void)presentRemoteDevicePasscodeUpgradePromptForChangeType:(unint64_t)a3 completion:(id)a4
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v6 = a4;
  BOOL v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    uint64_t v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device presentRemoteDevicePasscodeUpgradePromptForChangeType:completion:", buf, 2u);
    }
  }
  id v10 = NPKPairedOrPairingDevice();
  int v11 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"C3FD35B9-C30A-4893-B94B-56080B5FD9B7"];
  int v12 = [v10 supportsCapability:v11];

  BOOL v13 = pk_Payment_log();
  LODWORD(v11) = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v15 = @"NO";
      if (v12) {
        BOOL v15 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v25 = v15;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Supports remote device passcode upgrade prompt: %@", buf, 0xCu);
    }
  }
  if (v12)
  {
    BOOL v16 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke;
    block[3] = &unk_2644D7D08;
    unint64_t v23 = a3;
    void block[4] = self;
    id v22 = v6;
    dispatch_sync(v16, block);
  }
  else
  {
    uint64_t v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      BOOL v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Cannot present passcode upgrade prompt on an unsupported OS.", buf, 2u);
      }
    }
    id v20 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v6 + 2))(v6, 0, v20);
  }
}

void __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoPasscodeUpgradeFlowPresentationRequest);
  [(NPKProtoPasscodeUpgradeFlowPresentationRequest *)v2 setChangeType:NPKPasscodeUpgradeChangeTypeProtoFromPasscodeUpgradeChangeType(*(void *)(a1 + 48))];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoPasscodeUpgradeFlowPresentationRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:108 isResponse:0];

  id v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7 priority:300];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      id v10 = (void *)MEMORY[0x223C37380](v20);
      int v11 = *(void **)(a1 + 32);
      int v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    BOOL v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      unint64_t v23 = v8;
      BOOL v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      unint64_t v23 = v5;
      BOOL v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)handleRemoteDevicePasscodeUpgradePresentationPromptResponse:(id)a3
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleRemoteDevicePasscodeUpgradePresentationPromptResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v46 = 0x3032000000;
  uint64_t v47 = __Block_byref_object_copy__364;
  uint64_t v48 = __Block_byref_object_dispose__365;
  id v49 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = &v37;
  uint64_t v39 = 0x2020000000;
  char v40 = 0;
  uint64_t v31 = 0;
  id v32 = &v31;
  uint64_t v33 = 0x3032000000;
  uint64_t v34 = __Block_byref_object_copy__23;
  uint64_t v35 = __Block_byref_object_dispose__23;
  id v36 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    uint64_t v21 = MEMORY[0x263EF8330];
    uint64_t v22 = 3221225472;
    unint64_t v23 = __105__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeUpgradePresentationPromptResponse___block_invoke;
    uint64_t v24 = &unk_2644D7808;
    uint64_t v25 = self;
    id v26 = v10;
    id v27 = v4;
    p_long long buf = &buf;
    BOOL v29 = &v37;
    uint64_t v30 = &v31;
    dispatch_sync(v11, &v21);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }
    }
  }
  if (*(void *)(*((void *)&buf + 1) + 40))
  {
    BOOL v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      os_log_type_t v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = *((unsigned __int8 *)v38 + 24);
        uint64_t v19 = v32[5];
        *(_DWORD *)uint64_t v41 = 134218242;
        uint64_t v42 = v18;
        __int16 v43 = 2112;
        uint64_t v44 = v19;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Request to exit passcode change flow with passcode changed: %ld error: %@", v41, 0x16u);
      }
    }
    id v20 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeChangeCoordinator];
    [v20 exitPasscodeChangeFlowWithPasscodeChanged:*((unsigned __int8 *)v38 + 24) error:v32[5]];

    (*(void (**)(void))(*(void *)(*((void *)&buf + 1) + 40) + 16))();
  }
  _Block_object_dispose(&v31, 8);

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(&buf, 8);
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeUpgradePresentationPromptResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = [NPKProtoPasscodeUpgradeFlowShouldExitRequest alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    BOOL v7 = [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v5 initWithData:v6];

    if ([v7 pending])
    {
      BOOL v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        id v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Passcode upgrade request still pending", buf, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      uint64_t v13 = [v4 completionHandler];
      uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v7 passcodeChanged];
      int v16 = [v7 hasErrorData];
      if (v16)
      {
        v1 = [v7 errorData];
        os_log_type_t v17 = objc_opt_class();
        uint64_t v18 = NPKSecureUnarchiveObject(v1, v17);
      }
      else
      {
        uint64_t v18 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v18);
      if (v16)
      {
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  int v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:
}

- (void)dismissRemoteDevicePasscodeUpgradePromptWithCompletion:(id)a3
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = NPKPairedOrPairingDevice();
  BOOL v6 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"C3FD35B9-C30A-4893-B94B-56080B5FD9B7"];
  int v7 = [v5 supportsCapability:v6];

  BOOL v8 = pk_Payment_log();
  LODWORD(v6) = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = @"NO";
      if (v7) {
        id v10 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v19 = v10;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Supports remote device passcode upgrade prompt: %@", buf, 0xCu);
    }
  }
  if (v7)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3221225472;
    _DWORD v16[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_dismissRemoteDevicePasscodeUpgradePromptWithCompletion___block_invoke;
    void v16[3] = &unk_2644D2E58;
    void v16[4] = self;
    id v17 = v4;
    dispatch_sync(v11, v16);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Cannot present passcode upgrade prompt on an unsupported OS.", buf, 2u);
      }
    }
    BOOL v15 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v4 + 2))(v4, 0, v15);
  }
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_dismissRemoteDevicePasscodeUpgradePromptWithCompletion___block_invoke(uint64_t a1)
{
  v21[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoPasscodeUpgradeFlowShouldExitRequest);
  [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v2 setPasscodeChanged:0];
  [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v2 setErrorData:0];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:67 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v20 = *MEMORY[0x263F49F80];
  v21[0] = &unk_26D0439E0;
  int v7 = [NSDictionary dictionaryWithObjects:v21 forKeys:&v20 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:0 extraOptions:v7 priority:300];

  if (!v8)
  {
    id v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);

    if (!v11) {
      goto LABEL_12;
    }
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v18 = 138412290;
      uint64_t v19 = v5;
      BOOL v13 = "Error: No message identifier for protobuf %@";
      uint64_t v14 = v12;
      os_log_type_t v15 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v14, v15, v13, (uint8_t *)&v18, 0xCu);
    }
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(a1 + 40);
  if (!v9)
  {
    int v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (!v17) {
      goto LABEL_12;
    }
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = 138412290;
      uint64_t v19 = v8;
      BOOL v13 = "Warning: No response expected for message with identifier %@";
      uint64_t v14 = v12;
      os_log_type_t v15 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  (*(void (**)(uint64_t, BOOL, void))(v9 + 16))(v9, [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v2 passcodeChanged], 0);
LABEL_12:
}

- (void)exitPasscodeUpgradeForPasscodeUpgradeFlowController:(id)a3 withShouldContinue:(BOOL)a4 error:(id)a5
{
  BOOL v5 = a4;
  id v10 = a5;
  int v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeChangeCoordinator];

  if (v7)
  {
    BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeChangeCoordinator];
    [v8 exitPasscodeChangeFlowWithPasscodeChanged:v5 error:v10];
  }
  passcodeChangeCoordinator = self->_passcodeChangeCoordinator;
  self->_passcodeChangeCoordinator = 0;
}

- (void)handlePasscodeUpgradeFlowShouldExitRequest:(id)a3
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    int v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      int v20 = 138412290;
      unint64_t v21 = (unint64_t)v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handlePasscodeUpgradeFlowShouldExitRequest: incoming protobuf %@", (uint8_t *)&v20, 0xCu);
    }
  }
  uint64_t v9 = [NPKProtoPasscodeUpgradeFlowShouldExitRequest alloc];
  id v10 = [v4 data];
  BOOL v11 = [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v9 initWithData:v10];

  uint64_t v12 = [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v11 passcodeChanged];
  if ([(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v11 hasErrorData])
  {
    BOOL v13 = [(NPKProtoPasscodeUpgradeFlowShouldExitRequest *)v11 errorData];
    uint64_t v14 = objc_opt_class();
    os_log_type_t v15 = NPKSecureUnarchiveObject(v13, v14);
  }
  else
  {
    os_log_type_t v15 = 0;
  }
  int v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    int v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      int v20 = 134218242;
      unint64_t v21 = v12;
      __int16 v22 = 2112;
      unint64_t v23 = v15;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Request to exit passcode change flow with passcode changed: %ld error: %@", (uint8_t *)&v20, 0x16u);
    }
  }
  uint64_t v19 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeChangeCoordinator];
  [v19 exitPasscodeChangeFlowWithPasscodeChanged:v12 error:v15];
}

- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(BOOL)a3
{
  id v4 = NPKPairedOrPairingDevice();
  BOOL v5 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"];
  int v6 = [v4 supportsCapability:v5];

  if (v6)
  {
    int v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      uint64_t v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v10 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning did start requiring upgraded passcode", v10, 2u);
      }
    }
    [(NPKPaymentWebServiceCompanionTargetDevice *)self _acquireAssertionOfType:6];
  }
}

- (void)endRequiringUpgradedPasscodeIfNecessary
{
  id v3 = NPKPairedOrPairingDevice();
  id v4 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"];
  int v5 = [v3 supportsCapability:v4];

  if (v5)
  {
    int v6 = pk_Payment_log();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      BOOL v8 = pk_Payment_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning did end requiring upgraded passcode", v9, 2u);
      }
    }
    [(NPKPaymentWebServiceCompanionTargetDevice *)self _invalidateAssertionOfType:6];
  }
}

- (void)fetchRemoteDevicePasscodeStateWithCompletion:(id)a3
{
  id v4 = a3;
  int v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device fetchRemoteDevicePasscodeStateWithCompletion:", buf, 2u);
    }
  }
  BOOL v8 = NPKPairedOrPairingDevice();
  uint64_t v9 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"C3FD35B9-C30A-4893-B94B-56080B5FD9B7"];
  int v10 = [v8 supportsCapability:v9];

  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    void v15[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke;
    v15[3] = &unk_2644D2E58;
    void v15[4] = self;
    id v16 = v4;
    dispatch_sync(v11, v15);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: The remote device's OS does not support this call. Pretend all is well so we don't fail here.", buf, 2u);
      }
    }
    (*((void (**)(id, uint64_t, void, void))v4 + 2))(v4, 1, 0, 0);
  }
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoRemoteDevicePasscodeStateRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoRemoteDevicePasscodeStateRequest *)v2 data];
  int v5 = (void *)[v3 initWithProtobufData:v4 type:109 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      int v10 = (void *)MEMORY[0x223C37380](v20);
      BOOL v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    int v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      unint64_t v23 = v8;
      os_log_type_t v15 = "Warning: No response expected for message with identifier %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      unint64_t v23 = v5;
      os_log_type_t v15 = "Error: No message identifier for protobuf %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(result + 16))(result, 0, 0, a2);
  }
  return result;
}

- (void)handleRemoteDevicePasscodeStateResponse:(id)a3
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  id v4 = a3;
  int v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleRemoteDevicePasscodeStateResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  int v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v39 = 0x3032000000;
  char v40 = __Block_byref_object_copy__364;
  uint64_t v41 = __Block_byref_object_dispose__365;
  id v42 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = &v34;
  uint64_t v36 = 0x2020000000;
  char v37 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x2020000000;
  char v33 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000;
  id v27 = __Block_byref_object_copy__23;
  uint64_t v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeStateResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v34;
    __int16 v22 = &v30;
    unint64_t v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v35 + 24), *((unsigned __int8 *)v31 + 24), v25[5]);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeStateResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    int v5 = [NPKProtoRemoteDevicePasscodeStateResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    BOOL v7 = [(NPKProtoRemoteDevicePasscodeStateResponse *)v5 initWithData:v6];

    uint64_t v8 = [v4 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    int v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoRemoteDevicePasscodeStateResponse *)v7 hasPasscodeSet];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [(NPKProtoRemoteDevicePasscodeStateResponse *)v7 isPasscodeLocked];
    BOOL v11 = [(NPKProtoRemoteDevicePasscodeStateResponse *)v7 hasErrorData];
    if (v11)
    {
      v1 = [(NPKProtoRemoteDevicePasscodeStateResponse *)v7 errorData];
      uint64_t v12 = objc_opt_class();
      BOOL v13 = NPKSecureUnarchiveObject(v1, v12);
    }
    else
    {
      BOOL v13 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v13);
    if (v11)
    {
    }
  }
  else
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      id v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17[0] = 0;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v17, 2u);
      }
    }
  }
}

- (id)deviceIDSIdentifier
{
  id v3 = [MEMORY[0x263F57730] sharedInstance];
  id v4 = NPKPairedOrPairingDevice();
  int v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  BOOL v6 = [v5 devices];

  BOOL v7 = [v3 deviceForNRDevice:v4 fromIDSDevices:v6];
  uint64_t v8 = [v7 uniqueIDOverride];

  return v8;
}

- (void)paymentWebService:(id)a3 canAddSecureElementPassWithConfiguration:(id)a4 completion:(id)a5
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  BOOL v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v14 = (void *)MEMORY[0x223C37380](v10);
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v14;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass with configuration %@ completion: %@", buf, 0x16u);
    }
  }
  dispatch_queue_t v15 = dispatch_queue_create("com.apple.NPKCanAddSecureElementPass", 0);
  v50[0] = 0;
  v50[1] = v50;
  v50[2] = 0x2020000000;
  char v51 = 0;
  v48[0] = 0;
  v48[1] = v48;
  v48[2] = 0x2020000000;
  char v49 = 0;
  v46[0] = 0;
  v46[1] = v46;
  v46[2] = 0x2020000000;
  char v47 = 0;
  v40[0] = MEMORY[0x263EF8330];
  v40[1] = 3221225472;
  v40[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke;
  v40[3] = &unk_2644D7F60;
  uint64_t v43 = v48;
  uint64_t v44 = v46;
  id v16 = v15;
  uint64_t v41 = v16;
  id v17 = v10;
  id v42 = v17;
  uint64_t v45 = v50;
  id v18 = (void *)MEMORY[0x223C37380](v40);
  v38[0] = 0;
  v38[1] = v38;
  v38[2] = 0x2020000000;
  char v39 = 1;
  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  char v53 = __Block_byref_object_copy__23;
  id v54 = __Block_byref_object_dispose__23;
  id v55 = 0;
  id v19 = [NPKPaymentPreflighter alloc];
  int v20 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
  id v21 = [(NPKPaymentPreflighter *)v19 initWithWebService:v8 targetDevice:self companionAgentConnection:v20];

  v32[0] = MEMORY[0x263EF8330];
  v32[1] = 3221225472;
  void v32[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_691;
  void v32[3] = &unk_2644D7FB0;
  __int16 v22 = v16;
  char v33 = v22;
  uint64_t v35 = v38;
  uint64_t v36 = buf;
  char v37 = v48;
  id v23 = v18;
  id v34 = v23;
  [(NPKPaymentPreflighter *)v21 addSecureElementPassPreflightWithCompletion:v32];
  v26[0] = MEMORY[0x263EF8330];
  v26[1] = 3221225472;
  void v26[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_3;
  void v26[3] = &unk_2644D7FB0;
  uint64_t v24 = v22;
  id v27 = v24;
  id v29 = v38;
  uint64_t v30 = buf;
  uint64_t v31 = v46;
  id v25 = v23;
  id v28 = v25;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self _canAddSecureElementPassWithConfiguration:v9 completion:v26];

  _Block_object_dispose(buf, 8);
  _Block_object_dispose(v38, 8);

  _Block_object_dispose(v46, 8);
  _Block_object_dispose(v48, 8);
  _Block_object_dispose(v50, 8);
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke(uint64_t a1, int a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  int v5 = a3;
  BOOL v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = @"YES";
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
        id v10 = @"YES";
      }
      else {
        id v10 = @"NO";
      }
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
        BOOL v11 = @"YES";
      }
      else {
        BOOL v11 = @"NO";
      }
      if (!a2) {
        id v9 = @"NO";
      }
      int v25 = 138413058;
      uint64_t v26 = v10;
      __int16 v27 = 2112;
      id v28 = v11;
      __int16 v29 = 2112;
      uint64_t v30 = v9;
      __int16 v31 = 2112;
      uint64_t v32 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass called common completion with checkedPreflight: %@ checkedWatch: %@ for canAddPass: %@ error: %@", (uint8_t *)&v25, 0x2Au);
    }
  }
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (*(void *)(a1 + 40))
  {
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    if (!*(unsigned char *)(v12 + 24))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
      {
        if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
          goto LABEL_38;
        }
        *(unsigned char *)(v12 + 24) = 1;
        id v17 = pk_Payment_log();
        BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

        if (v18)
        {
          id v19 = pk_Payment_log();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            int v20 = @"NO";
            if (a2) {
              int v20 = @"YES";
            }
            int v25 = 138412546;
            uint64_t v26 = v20;
            __int16 v27 = 2112;
            id v28 = v5;
            _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass finished with canAddPass: %@ error: %@", (uint8_t *)&v25, 0x16u);
          }
        }
        id v21 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
      }
      else
      {
        if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) || (a2 & 1) != 0) {
          goto LABEL_38;
        }
        *(unsigned char *)(v12 + 24) = 1;
        __int16 v22 = pk_Payment_log();
        BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

        if (v23)
        {
          uint64_t v24 = pk_Payment_log();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            int v25 = 138412546;
            uint64_t v26 = @"NO";
            __int16 v27 = 2112;
            id v28 = v5;
            _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass finished early with canAddPass: %@ error: %@", (uint8_t *)&v25, 0x16u);
          }
        }
        id v21 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
      }
      v21();
      goto LABEL_38;
    }
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      dispatch_queue_t v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        id v16 = @"NO";
        if (a2) {
          id v16 = @"YES";
        }
        int v25 = 138412546;
        uint64_t v26 = v16;
        __int16 v27 = 2112;
        id v28 = v5;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass already completed with canAddPass: %@ error: %@", (uint8_t *)&v25, 0x16u);
      }
    }
  }
LABEL_38:
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_691(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  BOOL v6 = *(NSObject **)(a1 + 32);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_2;
  block[3] = &unk_2644D7F88;
  char v14 = a2;
  id v11 = v5;
  long long v13 = *(_OWORD *)(a1 + 56);
  long long v9 = *(_OWORD *)(a1 + 40);
  id v7 = (id)v9;
  long long v12 = v9;
  id v8 = v5;
  dispatch_async(v6, block);
}

uint64_t __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8);
  char v3 = *(unsigned char *)(v2 + 24);
  if (v3) {
    char v3 = *(unsigned char *)(a1 + 72) != 0;
  }
  *(unsigned char *)(v2 + 24) = v3;
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 8);
  id v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  BOOL v6 = v7;
  if (!v7) {
    BOOL v6 = *(void **)(a1 + 32);
  }
  objc_storeStrong(v5, v6);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  id v8 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v8();
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_3(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  BOOL v6 = *(NSObject **)(a1 + 32);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_4;
  block[3] = &unk_2644D7F88;
  char v14 = a2;
  id v11 = v5;
  long long v13 = *(_OWORD *)(a1 + 56);
  long long v9 = *(_OWORD *)(a1 + 40);
  id v7 = (id)v9;
  long long v12 = v9;
  id v8 = v5;
  dispatch_async(v6, block);
}

uint64_t __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8);
  char v3 = *(unsigned char *)(v2 + 24);
  if (v3) {
    char v3 = *(unsigned char *)(a1 + 72) != 0;
  }
  *(unsigned char *)(v2 + 24) = v3;
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8);
  if (!v4) {
    uint64_t v4 = *(void **)(v5 + 40);
  }
  objc_storeStrong((id *)(v5 + 40), v4);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  BOOL v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v6();
}

- (void)_canAddSecureElementPassWithConfiguration:(id)a3 completion:(id)a4
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = (void (**)(id, uint64_t, void *))a4;
  id v8 = [MEMORY[0x263F5BF80] sharedInstanceWithRemoteLibrary];
  long long v9 = [v8 _remoteLibrary];

  uint64_t v10 = [v9 canAddSecureElementPassWithConfiguration:v6];
  if (!v10)
  {
    if (!v7) {
      goto LABEL_16;
    }
    id v17 = (void *)MEMORY[0x263F087E8];
    uint64_t v18 = *MEMORY[0x263F5C538];
    uint64_t v32 = *MEMORY[0x263F08338];
    uint64_t v33 = @"Target device does not support secure element configuration.";
    id v19 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
    int v20 = [v17 errorWithDomain:v18 code:4 userInfo:v19];

    goto LABEL_14;
  }
  if ([v6 configurationType] != 1)
  {
    if (!v7) {
      goto LABEL_16;
    }
    int v20 = 0;
LABEL_14:
    v7[2](v7, v10, v20);
LABEL_15:

    goto LABEL_16;
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUWBSubcredentialProvisioningSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _deviceIsConnected];
    long long v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      if (v13)
      {
        char v14 = pk_Payment_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          dispatch_queue_t v15 = (void *)MEMORY[0x223C37380](v7);
          *(_DWORD *)long long buf = 138412546;
          id v37 = v6;
          __int16 v38 = 2112;
          char v39 = v15;
          _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device - sending canAddSecureElementPassWithConfiguration request for configuration: %@ completion: %@", buf, 0x16u);
        }
      }
      id v16 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke;
      block[3] = &unk_2644D3388;
      id v29 = v6;
      uint64_t v30 = self;
      __int16 v31 = v7;
      dispatch_sync(v16, block);

      goto LABEL_16;
    }
    if (v13)
    {
      uint64_t v24 = pk_Payment_log();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_DEFAULT, "Notice: Target device - not sending canAddSecureElementPassWithConfiguration request; watch not immediately reachable.",
          buf,
          2u);
      }
    }
    if (v7)
    {
      int v25 = (void *)MEMORY[0x263F087E8];
      uint64_t v26 = *MEMORY[0x263F5C858];
      uint64_t v34 = *MEMORY[0x263F08338];
      uint64_t v35 = @"Target device is not reachable.";
      __int16 v27 = [NSDictionary dictionaryWithObjects:&v35 forKeys:&v34 count:1];
      int v20 = [v25 errorWithDomain:v26 code:19 userInfo:v27];

      v7[2](v7, 0, v20);
      goto LABEL_15;
    }
  }
  else
  {
    id v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      BOOL v23 = pk_Payment_log();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_DEFAULT, "Warning: The expected capability was not found; continuing immediately.",
          buf,
          2u);
      }
    }
    if (v7) {
      v7[2](v7, 1, 0);
    }
  }
LABEL_16:
}

void __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke(uint64_t a1)
{
  v28[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoCanAddSecureElementPassWithConfigurationRequest);
  char v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoCanAddSecureElementPassWithConfigurationRequest *)v2 setConfigurationData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v5 = [(NPKProtoCanAddSecureElementPassWithConfigurationRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:90 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v27 = *MEMORY[0x263F49F80];
  v28[0] = &unk_26D0439F0;
  id v8 = [NSDictionary dictionaryWithObjects:v28 forKeys:&v27 count:1];
  long long v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke_696;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      BOOL v11 = (void *)MEMORY[0x223C37380](v21);
      long long v12 = *(void **)(a1 + 40);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      uint64_t v24 = v9;
      __int16 v25 = 1024;
      int v26 = [v6 type];
      id v16 = "Warning: No response expected for message with identifier %@ of type %hu";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    char v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      uint64_t v24 = v6;
      __int16 v25 = 1024;
      int v26 = [v6 type];
      id v16 = "Error: No message identifier for protobuf %@ with type %hu";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke_696(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)canAddSecureElementPassWithConfigurationResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target canAddSecureElementPassWithConfigurationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  long long v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  int v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_canAddSecureElementPassWithConfigurationResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    long long v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      char v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_canAddSecureElementPassWithConfigurationResponse___block_invoke(uint64_t a1)
{
  char v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    uint64_t v5 = [NPKProtoCanAddSecureElementPassWithConfigurationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoCanAddSecureElementPassWithConfigurationResponse *)v5 initWithData:v6];

    id v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoCanAddSecureElementPassWithConfigurationResponse *)v7 canAddPass];
    BOOL v12 = [(NPKProtoCanAddSecureElementPassWithConfigurationResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoCanAddSecureElementPassWithConfigurationResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      char v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      char v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 canAcceptInvitation:(id)a4 withCompletionV2:(id)a5
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  uint64_t v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    BOOL v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v12 = (void *)MEMORY[0x223C37380](v8);
      *(_DWORD *)long long buf = 138412546;
      id v28 = v7;
      __int16 v29 = 2112;
      uint64_t v30 = v12;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can accept invitation request with invitation: %@ completion: %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    BOOL v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke;
    block[3] = &unk_2644D3388;
    id v22 = v7;
    uint64_t v23 = self;
    id v24 = v8;
    dispatch_sync(v13, block);

    char v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    id v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v8)
  {
    id v18 = (void *)MEMORY[0x263F087E8];
    uint64_t v19 = *MEMORY[0x263F5C858];
    uint64_t v25 = *MEMORY[0x263F08338];
    int v26 = @"Target device does not support subcredential provisioning.";
    BOOL v20 = [NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    char v14 = [v18 errorWithDomain:v19 code:21 userInfo:v20];

    (*((void (**)(id, void *))v8 + 2))(v8, v14);
    goto LABEL_13;
  }
LABEL_14:
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke(uint64_t a1)
{
  v28[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoCanAcceptInvitationRequest);
  char v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoCanAcceptInvitationRequest *)v2 setInvitationData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v5 = [(NPKProtoCanAcceptInvitationRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:73 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v27 = *MEMORY[0x263F49F80];
  v28[0] = &unk_26D0439E0;
  id v8 = [NSDictionary dictionaryWithObjects:v28 forKeys:&v27 count:1];
  uint64_t v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      BOOL v11 = (void *)MEMORY[0x223C37380](v21);
      BOOL v12 = *(void **)(a1 + 40);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      id v24 = v9;
      __int16 v25 = 1024;
      int v26 = [v6 type];
      BOOL v16 = "Warning: No response expected for message with identifier %@ of type %hu";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    char v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      id v24 = v6;
      __int16 v25 = 1024;
      int v26 = [v6 type];
      BOOL v16 = "Error: No message identifier for protobuf %@ with type %hu";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)canAcceptInvitationResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target canAcceptInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  __int16 v25 = __Block_byref_object_copy__23;
  int v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      char v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationResponse___block_invoke(uint64_t a1)
{
  char v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    uint64_t v5 = [NPKProtoCanAcceptInvitationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoCanAcceptInvitationResponse *)v5 initWithData:v6];

    id v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCanAcceptInvitationResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoCanAcceptInvitationResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      char v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      char v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)canAcceptInvitationRequest:(id)a3
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received can accept invitation request: %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 outgoingResponseIdentifier];

  BOOL v11 = [NPKProtoCanAcceptInvitationRequest alloc];
  BOOL v12 = [v4 data];
  BOOL v13 = [(NPKProtoCanAcceptInvitationRequest *)v11 initWithData:v12];

  char v14 = [(NPKProtoCanAcceptInvitationRequest *)v13 invitationData];
  uint64_t v15 = objc_opt_class();
  BOOL v16 = NPKSecureUnarchiveObject(v14, v15);
  objc_initWeak((id *)buf, self);
  id v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self subcredentialInvitationCoordinator];
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 3221225472;
  void v19[2] = __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke;
  void v19[3] = &unk_2644D7FD8;
  objc_copyWeak(&v21, (id *)buf);
  id v18 = v10;
  id v20 = v18;
  [v17 canAcceptInvitation:v16 completion:v19];

  objc_destroyWeak(&v21);
  objc_destroyWeak((id *)buf);
}

void __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = [WeakRetained internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke_2;
  block[3] = &unk_2644D34F0;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  id v8 = v3;
  id v9 = *(id *)(a1 + 32);
  id v6 = v3;
  dispatch_sync(v5, block);

  objc_destroyWeak(&v10);
}

void __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke_2(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = objc_alloc_init(NPKProtoCanAcceptInvitationResponse);
  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoCanAcceptInvitationResponse *)v3 setErrorData:v4];

  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoCanAcceptInvitationResponse *)v3 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:73 isResponse:1];

  id v8 = [WeakRetained _sendProtobuf:v7 responseIdentifier:*(void *)(a1 + 40)];
  if (!v8)
  {
    id v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);

    if (v10)
    {
      BOOL v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138412290;
        BOOL v13 = v7;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v12, 0xCu);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 subcredentialInvitationsWithCompletion:(id)a4
{
  id v5 = a4;
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device - subcredential invitations request", buf, 2u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    id v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    _DWORD v13[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke;
    v13[3] = &unk_2644D2E58;
    void v13[4] = self;
    id v14 = v5;
    dispatch_sync(v9, v13);
  }
  else
  {
    BOOL v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      int v12 = pk_Payment_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }
    }
    if (v5) {
      (*((void (**)(id, void))v5 + 2))(v5, 0);
    }
  }
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoListSubcredentialInvitationsRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoListSubcredentialInvitationsRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:70 isResponse:0];

  id v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      BOOL v10 = (void *)MEMORY[0x223C37380](v20);
      BOOL v11 = *(void **)(a1 + 32);
      int v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)subcredentialInvitationsResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target subcredentialInvitationsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  __int16 v25 = __Block_byref_object_copy__23;
  int v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_subcredentialInvitationsResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_subcredentialInvitationsResponse___block_invoke(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoListSubcredentialInvitationsResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoListSubcredentialInvitationsResponse *)v4 initWithData:v5];

    BOOL v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", -[NSObject subcredentialInvitationsDatasCount](v6, "subcredentialInvitationsDatasCount"));
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    int v12 = [v6 subcredentialInvitationsDatas];
    uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)v27;
      do
      {
        uint64_t v16 = 0;
        do
        {
          if (*(void *)v27 != v15) {
            objc_enumerationMutation(v12);
          }
          os_log_type_t v17 = *(void **)(*((void *)&v26 + 1) + 8 * v16);
          id v18 = objc_opt_class();
          id v19 = NPKSecureUnarchiveObject(v17, v18);
          if (v19) {
            [v11 addObject:v19];
          }

          ++v16;
        }
        while (v14 != v16);
        uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }
      while (v14);
    }

    uint64_t v20 = [v11 copy];
    uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v22 = *(void **)(v21 + 40);
    *(void *)(v21 + 40) = v20;
  }
  else
  {
    uint64_t v23 = pk_Payment_log();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (!v24) {
      goto LABEL_13;
    }
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int16 v25 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
  }

LABEL_13:
}

- (void)paymentWebService:(id)a3 acceptSubcredentialInvitationWithIdentifier:(id)a4 metadata:(id)a5 completion:(id)a6
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v9 = a4;
  id v10 = a5;
  id v11 = a6;
  int v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    uint64_t v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v31 = v9;
      __int16 v32 = 2112;
      id v33 = v10;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device - accept subcredential invitation request with identifier: %@ metadata: %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v23[0] = MEMORY[0x263EF8330];
    v23[1] = 3221225472;
    v23[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke;
    v23[3] = &unk_2644D3540;
    id v24 = v9;
    id v25 = v10;
    long long v26 = self;
    id v27 = v11;
    dispatch_sync(v15, v23);

    uint64_t v16 = v24;
LABEL_13:

    goto LABEL_14;
  }
  os_log_type_t v17 = pk_Payment_log();
  BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    id v19 = pk_Payment_log();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v11)
  {
    uint64_t v20 = (void *)MEMORY[0x263F087E8];
    uint64_t v21 = *MEMORY[0x263F5C858];
    uint64_t v28 = *MEMORY[0x263F08338];
    long long v29 = @"Target device does not support subcredential provisioning.";
    uint64_t v22 = [NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
    uint64_t v16 = [v20 errorWithDomain:v21 code:21 userInfo:v22];

    (*((void (**)(id, void, void *))v11 + 2))(v11, 0, v16);
    goto LABEL_13;
  }
LABEL_14:
}

void __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest);
  [(NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest *)v2 setInvitationIdentifier:*(void *)(a1 + 32)];
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest *)v2 setMetadataData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:71 isResponse:0];

  BOOL v7 = *(void **)(a1 + 48);
  uint64_t v25 = *MEMORY[0x263F49F80];
  v26[0] = &unk_26D0439E0;
  uint64_t v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  id v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 56))
    {
      id v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 56);
      id v11 = (void *)MEMORY[0x223C37380](v21);
      int v12 = *(void **)(a1 + 48);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      id v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      uint64_t v16 = "Warning: No response expected for message with identifier %@";
      os_log_type_t v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      id v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      uint64_t v16 = "Error: No message identifier for protobuf %@";
      os_log_type_t v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)paymentWebService:(id)a3 acceptSubcredentialInvitation:(id)a4 completion:(id)a5
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    id v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v22 = v7;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - accept subcredential invitation request with invitation: %@", buf, 0xCu);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke;
    block[3] = &unk_2644D3388;
    id v18 = v7;
    id v19 = self;
    id v20 = v8;
    dispatch_sync(v12, block);

    BOOL v13 = v18;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    uint64_t v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", buf, 2u);
    }
  }
  if (v8)
  {
    BOOL v13 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v8 + 2))(v8, 0, v13);
    goto LABEL_13;
  }
LABEL_14:
}

void __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoAcceptSubcredentialInvitationRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoAcceptSubcredentialInvitationRequest *)v2 setInvitationData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoAcceptSubcredentialInvitationRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:122 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49F80];
  v26[0] = &unk_26D0439E0;
  id v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  id v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      id v11 = (void *)MEMORY[0x223C37380](v21);
      int v12 = *(void **)(a1 + 40);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      uint64_t v16 = "Warning: No response expected for message with identifier %@";
      os_log_type_t v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      uint64_t v16 = "Error: No message identifier for protobuf %@";
      os_log_type_t v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)acceptSubcredentialInvitationResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target acceptSubcredentialInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__23;
  id v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x3032000000;
  long long v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_acceptSubcredentialInvitationResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_acceptSubcredentialInvitationResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoAcceptSubcredentialInvitationResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoAcceptSubcredentialInvitationResponse *)v4 initWithData:v5];

    if ([(NPKProtoAcceptSubcredentialInvitationResponse *)v6 pending])
    {
      [v3 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v10 = [*(id *)(a1 + 32) outstandingRequests];
      [v10 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v11 = [v3 completionHandler];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      uint64_t v14 = [(NPKProtoAcceptSubcredentialInvitationResponse *)v6 passForInvitation];
      uint64_t v15 = [v14 passData];
      uint64_t v16 = objc_opt_class();
      uint64_t v17 = NPKSecureUnarchiveObject(v15, v16);
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8);
      id v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;

      if ([(NPKProtoAcceptSubcredentialInvitationResponse *)v6 hasErrorData])
      {
        BOOL v20 = [(NPKProtoAcceptSubcredentialInvitationResponse *)v6 errorData];
        uint64_t v21 = objc_opt_class();
        uint64_t v22 = NPKSecureUnarchiveObject(v20, v21);
      }
      else
      {
        uint64_t v22 = 0;
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 72) + 8);
      id v24 = *(void **)(v23 + 40);
      *(void *)(v23 + 40) = v22;
    }
  }
  else
  {
    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 matchingInvitationOnDevice:(id)a4 withTimeout:(unint64_t)a5 completion:(id)a6
{
  v29[1] = *MEMORY[0x263EF8340];
  id v9 = a4;
  id v10 = a6;
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device - matching invitation on device request", buf, 2u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v22[0] = MEMORY[0x263EF8330];
    v22[1] = 3221225472;
    _DWORD v22[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke;
    v22[3] = &unk_2644D6850;
    unint64_t v26 = a5;
    id v23 = v9;
    id v24 = self;
    id v25 = v10;
    dispatch_sync(v14, v22);

    uint64_t v15 = v23;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    uint64_t v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v10)
  {
    id v19 = (void *)MEMORY[0x263F087E8];
    uint64_t v20 = *MEMORY[0x263F5C858];
    uint64_t v28 = *MEMORY[0x263F08338];
    v29[0] = @"Target device does not support subcredential provisioning.";
    uint64_t v21 = [NSDictionary dictionaryWithObjects:v29 forKeys:&v28 count:1];
    uint64_t v15 = [v19 errorWithDomain:v20 code:21 userInfo:v21];

    (*((void (**)(id, void, void *))v10 + 2))(v10, 0, v15);
    goto LABEL_13;
  }
LABEL_14:
}

void __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoMatchingInvitationOnDeviceRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoMatchingInvitationOnDeviceRequest *)v2 setInvitationData:v3];

  [(NPKProtoMatchingInvitationOnDeviceRequest *)v2 setTimeoutInSeconds:*(void *)(a1 + 56)];
  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoMatchingInvitationOnDeviceRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:72 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49F80];
  v26[0] = &unk_26D0439E0;
  BOOL v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  id v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      id v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      uint64_t v11 = (void *)MEMORY[0x223C37380](v21);
      BOOL v12 = *(void **)(a1 + 40);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      id v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      uint64_t v16 = "Warning: No response expected for message with identifier %@";
      BOOL v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      id v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      uint64_t v16 = "Error: No message identifier for protobuf %@";
      BOOL v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)matchingCredentialOnDeviceResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target matchingCredentialOnDeviceResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__23;
  id v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x3032000000;
  unint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_matchingCredentialOnDeviceResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    uint64_t v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __80__NPKPaymentWebServiceCompanionTargetDevice_matchingCredentialOnDeviceResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoMatchingInvitationOnDeviceResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoMatchingInvitationOnDeviceResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    uint64_t v11 = [(NPKProtoMatchingInvitationOnDeviceResponse *)v6 invitationData];
    BOOL v12 = objc_opt_class();
    uint64_t v13 = NPKSecureUnarchiveObject(v11, v12);
    uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;

    if ([(NPKProtoMatchingInvitationOnDeviceResponse *)v6 hasErrorData])
    {
      uint64_t v16 = [(NPKProtoMatchingInvitationOnDeviceResponse *)v6 errorData];
      BOOL v17 = objc_opt_class();
      uint64_t v18 = NPKSecureUnarchiveObject(v16, v17);
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t v22 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v23 = *(void **)(v22 + 40);
    *(void *)(v22 + 40) = v18;
  }
  else
  {
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v21 = pk_Payment_log();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v24, 2u);
      }
    }
  }
}

- (void)handleAcceptSubcredentialProvisioningRequest:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      id v28 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleSubcredentialProvisioningRequest: incoming protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [NPKProtoAcceptSubcredentialInvitationRequest alloc];
  id v10 = [v4 data];
  uint64_t v11 = [(NPKProtoAcceptSubcredentialInvitationRequest *)v9 initWithData:v10];

  BOOL v12 = [(NPKProtoAcceptSubcredentialInvitationRequest *)v11 invitationData];
  uint64_t v13 = objc_opt_class();
  uint64_t v14 = NPKSecureUnarchiveObject(v12, v13);

  if ([(NPKProtoAcceptSubcredentialInvitationRequest *)v11 hasMetadataData])
  {
    uint64_t v15 = [(NPKProtoAcceptSubcredentialInvitationRequest *)v11 metadataData];
    uint64_t v16 = objc_opt_class();
    BOOL v17 = NPKSecureUnarchiveObject(v15, v16);
  }
  else
  {
    BOOL v17 = 0;
  }
  uint64_t v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    BOOL v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v21 = (objc_class *)objc_opt_class();
      uint64_t v22 = NSStringFromClass(v21);
      *(_DWORD *)long long buf = 138543874;
      id v28 = v22;
      __int16 v29 = 2112;
      uint64_t v30 = v14;
      __int16 v31 = 2112;
      __int16 v32 = v17;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Received handle provisioning request with invitation: %@ metadata: %@", buf, 0x20u);
    }
  }
  uint64_t v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self subcredentialInvitationCoordinator];
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  void v25[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningRequest___block_invoke;
  v25[3] = &unk_2644D8000;
  void v25[4] = self;
  id v26 = v14;
  id v24 = v14;
  [v23 startProvisioningWithInvitation:v24 metadata:v17 completion:v25];
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningRequest___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = pk_General_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    uint64_t v9 = pk_General_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = (objc_class *)objc_opt_class();
      uint64_t v11 = NSStringFromClass(v10);
      BOOL v12 = [*(id *)(a1 + 40) description];
      uint64_t v13 = [v5 description];
      uint64_t v14 = [v6 description];
      int v15 = 138544130;
      uint64_t v16 = v11;
      __int16 v17 = 2112;
      uint64_t v18 = v12;
      __int16 v19 = 2112;
      BOOL v20 = v13;
      __int16 v21 = 2112;
      uint64_t v22 = v14;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Subcredential provisioning for invitation: %@ completed with pass: %@ error %@", (uint8_t *)&v15, 0x2Au);
    }
  }
}

- (void)handleAcceptSubcredentialProvisioningForMailboxAddressRequest:(id)a3
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v4 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      id v24 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleAcceptSubcredentialProvisioningForMailboxAddressRequest: incoming protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest alloc];
  id v10 = [v4 data];
  uint64_t v11 = [(NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest *)v9 initWithData:v10];

  BOOL v12 = [(NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest *)v11 mailboxAddress];
  uint64_t v13 = [(NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest *)v11 activationCode];
  uint64_t v14 = pk_General_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    uint64_t v16 = pk_General_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v17 = (objc_class *)objc_opt_class();
      uint64_t v18 = NSStringFromClass(v17);
      *(_DWORD *)long long buf = 138543875;
      id v24 = v18;
      __int16 v25 = 2113;
      id v26 = v12;
      __int16 v27 = 2113;
      id v28 = v13;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Received handle provisioning request with mailboxAddress: %{private}@, activationCode: %{private}@", buf, 0x20u);
    }
  }
  __int16 v19 = [(NPKPaymentWebServiceCompanionTargetDevice *)self subcredentialInvitationCoordinator];
  v21[0] = MEMORY[0x263EF8330];
  v21[1] = 3221225472;
  void v21[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningForMailboxAddressRequest___block_invoke;
  v21[3] = &unk_2644D8000;
  void v21[4] = self;
  id v22 = v12;
  id v20 = v12;
  [v19 startProvisioningWithMailboxAddress:v20 activationCode:v13 completion:v21];
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningForMailboxAddressRequest___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = pk_General_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    uint64_t v9 = pk_General_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = (objc_class *)objc_opt_class();
      uint64_t v11 = NSStringFromClass(v10);
      uint64_t v12 = *(void *)(a1 + 40);
      uint64_t v13 = [v5 description];
      uint64_t v14 = [v6 description];
      int v15 = 138544131;
      uint64_t v16 = v11;
      __int16 v17 = 2113;
      uint64_t v18 = v12;
      __int16 v19 = 2112;
      id v20 = v13;
      __int16 v21 = 2112;
      id v22 = v14;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Subcredential provisioning for mailbox address: %{private}@ completed with pass: %@ error %@", (uint8_t *)&v15, 0x2Au);
    }
  }
}

- (void)paymentWebService:(id)a3 accountAttestationAnonymizationSaltWithCompletion:(id)a4
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v5 = a4;
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    BOOL v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = (void *)MEMORY[0x223C37380](v5);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v9;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device - account attestation anonymization salt request with completion: %@", buf, 0xCu);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    id v10 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v18[0] = MEMORY[0x263EF8330];
    v18[1] = 3221225472;
    void v18[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke;
    void v18[3] = &unk_2644D2E58;
    void v18[4] = self;
    id v19 = v5;
    dispatch_sync(v10, v18);
  }
  else
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      uint64_t v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }
    }
    if (v5)
    {
      uint64_t v14 = (void *)MEMORY[0x263F087E8];
      uint64_t v15 = *MEMORY[0x263F5C858];
      uint64_t v20 = *MEMORY[0x263F08338];
      __int16 v21 = @"Target device does not support subcredential provisioning.";
      uint64_t v16 = [NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
      __int16 v17 = [v14 errorWithDomain:v15 code:21 userInfo:v16];

      (*((void (**)(id, void, void *))v5 + 2))(v5, 0, v17);
    }
  }
}

void __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoAccountAttestationAnonymizationSaltRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoAccountAttestationAnonymizationSaltRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:74 isResponse:0];

  id v6 = *(void **)(a1 + 32);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  BOOL v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  BOOL v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      id v10 = (void *)MEMORY[0x223C37380](v20);
      uint64_t v11 = *(void **)(a1 + 32);
      BOOL v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      uint64_t v15 = "Warning: No response expected for message with identifier %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      uint64_t v15 = "Error: No message identifier for protobuf %@";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

void __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v4 = pk_Payment_log();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

    if (v5)
    {
      id v6 = pk_Payment_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        BOOL v7 = [v3 description];
        int v8 = 138412290;
        uint64_t v9 = v7;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v8, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)accountAttestationAnonymizationSaltResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target accountAttestationAnonymizationSaltResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  __int16 v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_accountAttestationAnonymizationSaltResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __89__NPKPaymentWebServiceCompanionTargetDevice_accountAttestationAnonymizationSaltResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoAccountAttestationAnonymizationSaltResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    BOOL v7 = [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v7 anonymizationSalt];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    BOOL v15 = [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v7 hasErrorData];
    if (v15)
    {
      v1 = [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v7 errorData];
      uint64_t v16 = objc_opt_class();
      os_log_type_t v17 = NPKSecureUnarchiveObject(v1, v16);
    }
    else
    {
      os_log_type_t v17 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      uint64_t v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)fetchOrInitializeAccountAttestationAnonymizationSaltRequest:(id)a3
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      os_log_type_t v17 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received account attestation anonymization salt request: %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 outgoingResponseIdentifier];

  objc_initWeak((id *)buf, self);
  uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self subcredentialInvitationCoordinator];
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 3221225472;
  _DWORD v13[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke;
  v13[3] = &unk_2644D36D0;
  objc_copyWeak(&v15, (id *)buf);
  id v12 = v10;
  id v14 = v12;
  [v11 fetchOrInitializeAccountAttestationAnonymizationSaltIfNecessaryWithCompletion:v13];

  objc_destroyWeak(&v15);
  objc_destroyWeak((id *)buf);
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = [WeakRetained internalQueue];
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke_2;
  v11[3] = &unk_2644D3450;
  objc_copyWeak(&v15, (id *)(a1 + 40));
  id v12 = v5;
  id v13 = v6;
  id v14 = *(id *)(a1 + 32);
  id v9 = v6;
  id v10 = v5;
  dispatch_sync(v8, v11);

  objc_destroyWeak(&v15);
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke_2(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = objc_alloc_init(NPKProtoAccountAttestationAnonymizationSaltResponse);
  [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v3 setAnonymizationSalt:*(void *)(a1 + 32)];
  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v3 setErrorData:v4];

  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoAccountAttestationAnonymizationSaltResponse *)v3 data];
  BOOL v7 = (void *)[v5 initWithProtobufData:v6 type:74 isResponse:1];

  int v8 = [WeakRetained _sendProtobuf:v7 responseIdentifier:*(void *)(a1 + 48)];
  if (!v8)
  {
    id v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);

    if (v10)
    {
      uint64_t v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138412290;
        id v13 = v7;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v12, 0xCu);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 setAccountAttestationAnonymizationSalt:(id)a4 withCompletion:(id)a5
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  id v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = (void *)MEMORY[0x223C37380](v8);
      *(_DWORD *)long long buf = 138412290;
      id v28 = v12;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - set account attestation anonymization salt request with completion: %@", buf, 0xCu);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    id v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke;
    block[3] = &unk_2644D3388;
    id v22 = v7;
    uint64_t v23 = self;
    id v24 = v8;
    dispatch_sync(v13, block);

    uint64_t v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  id v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    os_log_type_t v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v8)
  {
    uint64_t v18 = (void *)MEMORY[0x263F087E8];
    uint64_t v19 = *MEMORY[0x263F5C858];
    uint64_t v25 = *MEMORY[0x263F08338];
    id v26 = @"Target device does not support subcredential provisioning.";
    uint64_t v20 = [NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    uint64_t v14 = [v18 errorWithDomain:v19 code:21 userInfo:v20];

    (*((void (**)(id, void *))v8 + 2))(v8, v14);
    goto LABEL_13;
  }
LABEL_14:
}

void __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke(uint64_t a1)
{
  v25[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoSetAccountAttestationAnonymizationSaltRequest);
  [(NPKProtoSetAccountAttestationAnonymizationSaltRequest *)v2 setAnonymizationSalt:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoSetAccountAttestationAnonymizationSaltRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:75 isResponse:0];

  id v6 = *(void **)(a1 + 40);
  uint64_t v24 = *MEMORY[0x263F49F80];
  v25[0] = &unk_26D0439E0;
  id v7 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
  id v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 48))
    {
      id v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 48);
      BOOL v10 = (void *)MEMORY[0x223C37380](v20);
      uint64_t v11 = *(void **)(a1 + 40);
      int v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      id v15 = "Warning: No response expected for message with identifier %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v5;
      id v15 = "Error: No message identifier for protobuf %@";
      BOOL v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)setAccountAttestationAnonymizationSaltResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target setAccountAttestationAnonymizationSaltResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  id v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_setAccountAttestationAnonymizationSaltResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_setAccountAttestationAnonymizationSaltResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoSetAccountAttestationAnonymizationSaltResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoSetAccountAttestationAnonymizationSaltResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    if ([(NPKProtoSetAccountAttestationAnonymizationSaltResponse *)v6 hasErrorData])
    {
      uint64_t v11 = [(NPKProtoSetAccountAttestationAnonymizationSaltResponse *)v6 errorData];
      int v12 = objc_opt_class();
      uint64_t v13 = NPKSecureUnarchiveObject(v11, v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
    id v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v13;
  }
  else
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      BOOL v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 requestSubcredentialInvitation:(id)a4 completion:(id)a5
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  uint64_t v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = (void *)MEMORY[0x223C37380](v8);
      *(_DWORD *)long long buf = 138412546;
      id v28 = v7;
      __int16 v29 = 2112;
      uint64_t v30 = v12;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - request subcredential invitation %@ with completion %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    uint64_t v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke;
    block[3] = &unk_2644D3388;
    id v22 = v7;
    uint64_t v23 = self;
    id v24 = v8;
    dispatch_sync(v13, block);

    BOOL v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  BOOL v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    uint64_t v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v8)
  {
    id v18 = (void *)MEMORY[0x263F087E8];
    uint64_t v19 = *MEMORY[0x263F5C858];
    uint64_t v25 = *MEMORY[0x263F08338];
    id v26 = @"Target device does not support subcredential provisioning.";
    uint64_t v20 = [NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    BOOL v14 = [v18 errorWithDomain:v19 code:21 userInfo:v20];

    (*((void (**)(id, void *))v8 + 2))(v8, v14);
    goto LABEL_13;
  }
LABEL_14:
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoRequestSubcredentialInvitationRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoRequestSubcredentialInvitationRequest *)v2 setInvitationData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoRequestSubcredentialInvitationRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:76 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49F80];
  v26[0] = &unk_26D0439E0;
  id v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  uint64_t v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      uint64_t v11 = (void *)MEMORY[0x223C37380](v21);
      int v12 = *(void **)(a1 + 40);
      uint64_t v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      BOOL v16 = "Warning: No response expected for message with identifier %@";
      uint64_t v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      BOOL v16 = "Error: No message identifier for protobuf %@";
      uint64_t v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)requestSubcredentialInvitationResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target requestSubcredentialInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  id v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_requestSubcredentialInvitationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_requestSubcredentialInvitationResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoRequestSubcredentialInvitationResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoRequestSubcredentialInvitationResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    if ([(NPKProtoRequestSubcredentialInvitationResponse *)v6 hasErrorData])
    {
      uint64_t v11 = [(NPKProtoRequestSubcredentialInvitationResponse *)v6 errorData];
      int v12 = objc_opt_class();
      uint64_t v13 = NPKSecureUnarchiveObject(v11, v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
    id v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v13;
  }
  else
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      BOOL v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 updateMetadataOnPass:(id)a4 withCredential:(id)a5 completion:(id)a6
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v9 = a4;
  id v10 = a5;
  id v11 = a6;
  int v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    BOOL v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v15 = (void *)MEMORY[0x223C37380](v11);
      *(_DWORD *)long long buf = 138412802;
      id v26 = v9;
      __int16 v27 = 2112;
      id v28 = v10;
      __int16 v29 = 2112;
      uint64_t v30 = v15;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device - update metadata on pass %@ with credential %@ completion %@", buf, 0x20u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    BOOL v16 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke;
    void v20[3] = &unk_2644D3540;
    id v21 = v9;
    id v22 = v10;
    uint64_t v23 = self;
    id v24 = v11;
    dispatch_sync(v16, v20);
  }
  else
  {
    uint64_t v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      id v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }
    }
    if (v11) {
      (*((void (**)(id, void))v11 + 2))(v11, 0);
    }
  }
}

void __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke(uint64_t a1)
{
  v27[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoUpdateSubcredentialMetadataRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoUpdateSubcredentialMetadataRequest *)v2 setPassData:v3];

  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoUpdateSubcredentialMetadataRequest *)v2 setCredentialData:v4];

  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v6 = [(NPKProtoUpdateSubcredentialMetadataRequest *)v2 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:77 isResponse:0];

  uint64_t v8 = *(void **)(a1 + 48);
  uint64_t v26 = *MEMORY[0x263F49F80];
  v27[0] = &unk_26D0439E0;
  id v9 = [NSDictionary dictionaryWithObjects:v27 forKeys:&v26 count:1];
  id v10 = [v8 _sendProtobuf:v7 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 56))
    {
      id v11 = MEMORY[0x223C37380]();
      v22[0] = MEMORY[0x263EF8330];
      v22[1] = 3221225472;
      _DWORD v22[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke_2;
      v22[3] = &unk_2644D2B90;
      id v23 = *(id *)(a1 + 56);
      int v12 = (void *)MEMORY[0x223C37380](v22);
      BOOL v13 = *(void **)(a1 + 48);
      BOOL v14 = (void *)MEMORY[0x223C37380](v11);
      [v13 _trackOutstandingRequestWithMessageIdentifier:v10 completionHandler:v14 errorHandler:v12];

LABEL_11:
      goto LABEL_12;
    }
    BOOL v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      id v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v25 = v10;
      uint64_t v17 = "Warning: No response expected for message with identifier %@";
      BOOL v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      id v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v25 = v7;
      uint64_t v17 = "Error: No message identifier for protobuf %@";
      BOOL v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v18, v19, v17, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)updateSubcredentialMetadataResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target updateSubcredentialMetadataResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_updateSubcredentialMetadataResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_updateSubcredentialMetadataResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoUpdateSubcredentialMetadataResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoUpdateSubcredentialMetadataResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = [(NPKProtoUpdateSubcredentialMetadataResponse *)v6 passData];
    int v12 = objc_opt_class();
    uint64_t v13 = NPKSecureUnarchiveObject(v11, v12);

    [*(id *)(a1 + 32) _updateDataAccessorForPass:v13];
    uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;
  }
  else
  {
    BOOL v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      id v18 = pk_Payment_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }
    }
  }
}

- (void)registerCredentialsWithIdentifiers:(id)a3 completion:(id)a4
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    id v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v27 = v6;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - register credentials with identifiers %@", buf, 0xCu);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke;
    block[3] = &unk_2644D3388;
    id v21 = v6;
    uint64_t v22 = self;
    id v23 = v7;
    dispatch_sync(v11, block);

    int v12 = v21;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v7)
  {
    BOOL v16 = (void *)MEMORY[0x263F087E8];
    uint64_t v17 = *MEMORY[0x263F5C858];
    uint64_t v24 = *MEMORY[0x263F08338];
    uint64_t v25 = @"Target device does not support subcredential provisioning.";
    id v18 = [NSDictionary dictionaryWithObjects:&v25 forKeys:&v24 count:1];
    int v12 = [v16 errorWithDomain:v17 code:21 userInfo:v18];

    id v19 = [MEMORY[0x263EFFA08] setWithObject:v12];
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v19);

    goto LABEL_13;
  }
LABEL_14:
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke(uint64_t a1)
{
  v32[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoRegisterSubcredentialsRequest);
  id v3 = *(void **)(a1 + 32);
  v27[0] = MEMORY[0x263EF8330];
  v27[1] = 3221225472;
  void v27[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_2;
  void v27[3] = &unk_2644D65E8;
  id v4 = v2;
  uint64_t v28 = v4;
  [v3 enumerateObjectsUsingBlock:v27];
  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoRegisterSubcredentialsRequest *)v4 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:78 isResponse:0];

  uint64_t v8 = *(void **)(a1 + 40);
  uint64_t v31 = *MEMORY[0x263F49F80];
  v32[0] = &unk_26D0439E0;
  BOOL v9 = [NSDictionary dictionaryWithObjects:v32 forKeys:&v31 count:1];
  id v10 = [v8 _sendProtobuf:v7 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 48))
    {
      id v11 = MEMORY[0x223C37380]();
      uint64_t v22 = MEMORY[0x263EF8330];
      uint64_t v23 = 3221225472;
      uint64_t v24 = __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_3;
      uint64_t v25 = &unk_2644D2B90;
      id v26 = *(id *)(a1 + 48);
      int v12 = (void *)MEMORY[0x223C37380](&v22);
      uint64_t v13 = *(void **)(a1 + 40);
      BOOL v14 = (void *)MEMORY[0x223C37380](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12, v22, v23, v24, v25);

LABEL_11:
      goto LABEL_12;
    }
    BOOL v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      id v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v10;
      uint64_t v17 = "Warning: No response expected for message with identifier %@";
      id v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      id v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v7;
      uint64_t v17 = "Error: No message identifier for protobuf %@";
      id v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v18, v19, v17, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addIdentifiers:a2];
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    id v3 = [MEMORY[0x263EFFA08] setWithObject:a2];
    (*(void (**)(uint64_t, void, id))(v2 + 16))(v2, 0, v3);
  }
}

- (void)registerCredentialsResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target registerCredentialsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    BOOL v20 = &v29;
    BOOL v21 = &v23;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsResponse___block_invoke(uint64_t a1)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    uint64_t v38 = v3;
    id v4 = [NPKProtoRegisterSubcredentialsResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoRegisterSubcredentialsResponse *)v4 initWithData:v5];

    id v7 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", -[NSObject passesDatasCount](v6, "passesDatasCount"));
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    uint64_t v8 = [v6 passesDatas];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v44 objects:v49 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v45;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v45 != v11) {
            objc_enumerationMutation(v8);
          }
          BOOL v13 = *(void **)(*((void *)&v44 + 1) + 8 * v12);
          BOOL v14 = objc_opt_class();
          uint64_t v15 = NPKSecureUnarchiveObject(v13, v14);
          if (v15)
          {
            [*(id *)(a1 + 32) _updateDataAccessorForPass:v15];
            [v7 addObject:v15];
          }

          ++v12;
        }
        while (v10 != v12);
        uint64_t v10 = [v8 countByEnumeratingWithState:&v44 objects:v49 count:16];
      }
      while (v10);
    }

    uint64_t v16 = [v7 copy];
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8);
    id v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v16;

    id v19 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", -[NSObject errorsDatasCount](v6, "errorsDatasCount"));
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    BOOL v20 = [v6 errorsDatas];
    uint64_t v21 = [v20 countByEnumeratingWithState:&v40 objects:v48 count:16];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = *(void *)v41;
      do
      {
        uint64_t v24 = 0;
        do
        {
          if (*(void *)v41 != v23) {
            objc_enumerationMutation(v20);
          }
          uint64_t v25 = *(void **)(*((void *)&v40 + 1) + 8 * v24);
          if (v25)
          {
            id v26 = objc_opt_class();
            uint64_t v27 = NPKSecureUnarchiveObject(v25, v26);
            if (v27)
            {
              id v28 = (void *)v27;
              [v19 addObject:v27];
            }
          }
          ++v24;
        }
        while (v22 != v24);
        uint64_t v22 = [v20 countByEnumeratingWithState:&v40 objects:v48 count:16];
      }
      while (v22);
    }

    uint64_t v29 = [v19 copy];
    uint64_t v30 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v31 = *(void **)(v30 + 40);
    *(void *)(v30 + 40) = v29;

    id v32 = [*(id *)(a1 + 32) outstandingRequests];
    [v32 removeObjectForKey:*(void *)(a1 + 40)];

    id v3 = v38;
    uint64_t v33 = [v38 completionHandler];
    uint64_t v34 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v35 = *(void **)(v34 + 40);
    *(void *)(v34 + 40) = v33;
  }
  else
  {
    uint64_t v36 = pk_Payment_log();
    BOOL v37 = os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT);

    if (!v37) {
      goto LABEL_23;
    }
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
  }

LABEL_23:
}

- (void)revokeCredentialsWithIdentifiers:(id)a3 completion:(id)a4
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = (void *)MEMORY[0x223C37380](v7);
      *(_DWORD *)long long buf = 138412546;
      id v21 = v6;
      __int16 v22 = 2112;
      uint64_t v23 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - revoke credentials with identifiers %@ completion %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    uint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke;
    block[3] = &unk_2644D3388;
    id v17 = v6;
    id v18 = self;
    id v19 = v7;
    dispatch_sync(v12, block);
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      uint64_t v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }
    }
    if (v7) {
      (*((void (**)(id, void))v7 + 2))(v7, 0);
    }
  }
}

void __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke(uint64_t a1)
{
  v32[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoRevokeSubcredentialsRequest);
  id v3 = *(void **)(a1 + 32);
  v27[0] = MEMORY[0x263EF8330];
  v27[1] = 3221225472;
  void v27[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_2;
  void v27[3] = &unk_2644D65E8;
  id v4 = v2;
  id v28 = v4;
  [v3 enumerateObjectsUsingBlock:v27];
  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoRevokeSubcredentialsRequest *)v4 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:79 isResponse:0];

  uint64_t v8 = *(void **)(a1 + 40);
  uint64_t v31 = *MEMORY[0x263F49F80];
  v32[0] = &unk_26D0439E0;
  BOOL v9 = [NSDictionary dictionaryWithObjects:v32 forKeys:&v31 count:1];
  uint64_t v10 = [v8 _sendProtobuf:v7 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v11 = MEMORY[0x223C37380]();
      uint64_t v22 = MEMORY[0x263EF8330];
      uint64_t v23 = 3221225472;
      uint64_t v24 = __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_3;
      uint64_t v25 = &unk_2644D2B90;
      id v26 = *(id *)(a1 + 48);
      uint64_t v12 = (void *)MEMORY[0x223C37380](&v22);
      BOOL v13 = *(void **)(a1 + 40);
      BOOL v14 = (void *)MEMORY[0x223C37380](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12, v22, v23, v24, v25);

LABEL_11:
      goto LABEL_12;
    }
    BOOL v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v10;
      id v17 = "Warning: No response expected for message with identifier %@";
      id v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v7;
      id v17 = "Error: No message identifier for protobuf %@";
      id v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v18, v19, v17, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addIdentifiers:a2];
}

uint64_t __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)revokeCredentialsResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target revokeCredentialsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    BOOL v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoRevokeSubcredentialsResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoRevokeSubcredentialsResponse *)v4 initWithData:v5];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(NPKProtoRevokeSubcredentialsResponse *)v6 success];
    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }
  else
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 removeSharingInvitation:(id)a4 withCompletion:(id)a5
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  uint64_t v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    uint64_t v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v12 = (void *)MEMORY[0x223C37380](v8);
      *(_DWORD *)long long buf = 138412546;
      id v28 = v7;
      __int16 v29 = 2112;
      id v30 = v12;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - remove sharing invitation %@ with completion %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    BOOL v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke;
    block[3] = &unk_2644D3388;
    id v22 = v7;
    uint64_t v23 = self;
    id v24 = v8;
    dispatch_sync(v13, block);

    BOOL v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    id v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v8)
  {
    id v18 = (void *)MEMORY[0x263F087E8];
    uint64_t v19 = *MEMORY[0x263F5C858];
    uint64_t v25 = *MEMORY[0x263F08338];
    id v26 = @"Target device does not support subcredential provisioning.";
    BOOL v20 = [NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    BOOL v14 = [v18 errorWithDomain:v19 code:21 userInfo:v20];

    (*((void (**)(id, BOOL))v8 + 2))(v8, v14 != 0);
    goto LABEL_13;
  }
LABEL_14:
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoRemoveSharingInvitationRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoRemoveSharingInvitationRequest *)v2 setInvitationData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  id v5 = [(NPKProtoRemoveSharingInvitationRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:80 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49F80];
  v26[0] = &unk_26D0439E0;
  id v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  uint64_t v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      uint64_t v11 = (void *)MEMORY[0x223C37380](v21);
      BOOL v12 = *(void **)(a1 + 40);
      BOOL v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      BOOL v16 = "Warning: No response expected for message with identifier %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      BOOL v16 = "Error: No message identifier for protobuf %@";
      id v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 != 0);
  }
  return result;
}

- (void)removeSharingInvitationResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target removeSharingInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  __int16 v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_removeSharingInvitationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __77__NPKPaymentWebServiceCompanionTargetDevice_removeSharingInvitationResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoRemoveSharingInvitationResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoRemoveSharingInvitationResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoRemoveSharingInvitationResponse *)v6 success];
  }
  else
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)handleCredentialsChange:(id)a3
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      id v32 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleCredentialsChange: incoming protobuf %@", buf, 0xCu);
    }
  }
  uint64_t v9 = [NPKProtoHandleCredentialsChangeRequest alloc];
  BOOL v10 = [v4 data];
  uint64_t v11 = [(NPKProtoHandleCredentialsChangeRequest *)v9 initWithData:v10];

  BOOL v12 = [(NPKProtoHandleCredentialsChangeRequest *)v11 passID];
  BOOL v13 = [MEMORY[0x263EFF9C0] set];
  BOOL v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    BOOL v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = [(NPKProtoHandleCredentialsChangeRequest *)v11 credentialsBytesCount];
      *(_DWORD *)long long buf = 138412546;
      id v32 = v12;
      __int16 v33 = 1024;
      LODWORD(v34) = v17;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Got credentials update for unique ID %@ with %u credentials", buf, 0x12u);
    }
  }
  id v18 = [(NPKProtoHandleCredentialsChangeRequest *)v11 credentialsBytes];
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  void v29[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke;
  v29[3] = &unk_2644D7830;
  id v19 = v13;
  id v30 = v19;
  [v18 enumerateObjectsUsingBlock:v29];

  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

  if (v21)
  {
    uint64_t v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v32 = v19;
      __int16 v33 = 2112;
      uint64_t v34 = v12;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Notice: Handling credentials update %@ for unique ID %@", buf, 0x16u);
    }
  }
  uint64_t v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self delegate];
  v26[0] = MEMORY[0x263EF8330];
  v26[1] = 3221225472;
  void v26[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke_737;
  void v26[3] = &unk_2644D3DC0;
  id v27 = v19;
  id v28 = v12;
  id v24 = v12;
  id v25 = v19;
  [v23 handleCredentialsUpdate:v25 forUniqueID:v24 completion:v26];
}

void __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  id v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    id v5 = v6;
  }
}

void __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke_737(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    id v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      int v9 = 138412802;
      uint64_t v10 = v7;
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      __int16 v13 = 2112;
      id v14 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Handled credentials update %@ for unique ID %@ with error: %@", (uint8_t *)&v9, 0x20u);
    }
  }
}

- (void)paymentWebService:(id)a3 declineRelatedSharingInvitationsIfNecessary:(id)a4 withCompletion:(id)a5
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  int v9 = pk_Payment_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    __int16 v11 = pk_Payment_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void *)MEMORY[0x223C37380](v8);
      *(_DWORD *)long long buf = 138412546;
      id v28 = v7;
      __int16 v29 = 2112;
      id v30 = v12;
      _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - decline related invitations if necessary for invitation %@ with completion %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSubcredentialProvisioningSupported])
  {
    __int16 v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke;
    block[3] = &unk_2644D3388;
    id v22 = v7;
    uint64_t v23 = self;
    id v24 = v8;
    dispatch_sync(v13, block);

    id v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    int v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }
  }
  if (v8)
  {
    id v18 = (void *)MEMORY[0x263F087E8];
    uint64_t v19 = *MEMORY[0x263F5C858];
    uint64_t v25 = *MEMORY[0x263F08338];
    id v26 = @"Target device does not support subcredential provisioning.";
    BOOL v20 = [NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    id v14 = [v18 errorWithDomain:v19 code:21 userInfo:v20];

    (*((void (**)(id, BOOL))v8 + 2))(v8, v14 != 0);
    goto LABEL_13;
  }
LABEL_14:
}

void __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke(uint64_t a1)
{
  v26[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoDeclineRelatedInvitationsIfNecessaryRequest);
  id v3 = NPKSecureArchiveObject(*(void **)(a1 + 32));
  [(NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *)v2 setInvitationData:v3];

  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v5 = [(NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *)v2 data];
  id v6 = (void *)[v4 initWithProtobufData:v5 type:82 isResponse:0];

  id v7 = *(void **)(a1 + 40);
  uint64_t v25 = *MEMORY[0x263F49F80];
  v26[0] = &unk_26D0439E0;
  id v8 = [NSDictionary dictionaryWithObjects:v26 forKeys:&v25 count:1];
  int v9 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v8];

  if (v9)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v10 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 48);
      __int16 v11 = (void *)MEMORY[0x223C37380](v21);
      uint64_t v12 = *(void **)(a1 + 40);
      __int16 v13 = (void *)MEMORY[0x223C37380](v10);
      [v12 _trackOutstandingRequestWithMessageIdentifier:v9 completionHandler:v13 errorHandler:v11];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v9;
      BOOL v16 = "Warning: No response expected for message with identifier %@";
      int v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    id v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v6;
      BOOL v16 = "Error: No message identifier for protobuf %@";
      int v17 = v10;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)declineRelatedSharingInvitationsIfNecessaryRequest:(id)a3
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v23 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received decline related sharing invitations if necessary request: %@", buf, 0xCu);
    }
  }
  int v9 = [NPKProtoDeclineRelatedInvitationsIfNecessaryRequest alloc];
  BOOL v10 = [v4 data];
  __int16 v11 = [(NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *)v9 initWithData:v10];

  uint64_t v12 = [(NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *)v11 invitationData];
  __int16 v13 = objc_opt_class();
  id v14 = NPKSecureUnarchiveObject(v12, v13);

  BOOL v15 = [v4 context];
  BOOL v16 = [v15 outgoingResponseIdentifier];

  objc_initWeak((id *)buf, self);
  int v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self subcredentialInvitationCoordinator];
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 3221225472;
  void v19[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke;
  void v19[3] = &unk_2644D8050;
  objc_copyWeak(&v21, (id *)buf);
  id v18 = v16;
  id v20 = v18;
  [v17 declineRelatedInvitationsIfNecessaryForInvitation:v14 completion:v19];

  objc_destroyWeak(&v21);
  objc_destroyWeak((id *)buf);
}

void __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke(uint64_t a1, char a2)
{
  id v4 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v6 = [WeakRetained internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke_2;
  block[3] = &unk_2644D8028;
  objc_copyWeak(&v9, v4);
  char v10 = a2;
  id v8 = *(id *)(a1 + 32);
  dispatch_sync(v6, block);

  objc_destroyWeak(&v9);
}

void __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke_2(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = objc_alloc_init(NPKProtoDeclineRelatedInvitationsIfNecessaryResponse);
  [(NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *)v3 setDidDeclineInvitations:*(unsigned __int8 *)(a1 + 48)];
  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v5 = [(NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *)v3 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:82 isResponse:1];

  id v7 = [WeakRetained _sendProtobuf:v6 responseIdentifier:*(void *)(a1 + 32)];
  if (!v7)
  {
    id v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      char v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138412290;
        uint64_t v12 = v6;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v11, 0xCu);
      }
    }
  }
}

- (void)declineRelatedSharingInvitationsIfNecessaryResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target declineRelatedSharingInvitationsIfNecessaryResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  char v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  __int16 v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    int v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoDeclineRelatedInvitationsIfNecessaryResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    char v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *)v6 didDeclineInvitations];
  }
  else
  {
    int v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 presentStandaloneTransaction:(int64_t)a4 forPassUniqueIdentifier:(id)a5 terminalReaderIdentifier:(id)a6 completion:(id)a7
{
  uint64_t v107 = *MEMORY[0x263EF8340];
  id v54 = a3;
  BOOL v12 = (uint64_t (*)(uint64_t, uint64_t))a5;
  id v55 = a6;
  id v13 = a7;
  id v14 = [MEMORY[0x263EFF910] date];
  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    int v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      id v18 = (void *)MEMORY[0x223C37380](v13);
      *(_DWORD *)long long buf = 138413314;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = a4;
      *(_WORD *)&buf[22] = 2112;
      v105 = v12;
      *(_WORD *)v106 = 2112;
      *(void *)&v106[2] = v55;
      *(_WORD *)&v106[10] = 2112;
      *(void *)&v106[12] = v18;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction %lu for pass unique ID %@ reader ID %@ with completion %@", buf, 0x34u);
    }
  }
  if (!NPKPairedOrPairingDeviceIsTinker())
  {
    if (![(NPKPaymentWebServiceCompanionTargetDevice *)self _isUWBSubcredentialProvisioningSupported])
    {
      long long v43 = pk_Payment_log();
      BOOL v44 = os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT);

      if (v44)
      {
        long long v45 = pk_Payment_log();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412546;
          *(void *)&uint8_t buf[4] = v14;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v12;
          _os_log_impl(&dword_21E92F000, v45, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - will not present standalone transaction for pass %@; watch is not on supported software.",
            buf,
            0x16u);
        }
      }
      if (v13) {
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (![(NPKPaymentWebServiceCompanionTargetDevice *)self _deviceIsConnected])
    {
      long long v46 = pk_Payment_log();
      BOOL v47 = os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT);

      if (v47)
      {
        uint64_t v48 = pk_Payment_log();
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412546;
          *(void *)&uint8_t buf[4] = v14;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v12;
          _os_log_impl(&dword_21E92F000, v48, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - will not present standalone transaction for pass %@; watch is not immediately reachable.",
            buf,
            0x16u);
        }
      }
      if (v13) {
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    v98[0] = 0;
    v98[1] = v98;
    v98[2] = 0x2020000000;
    char v99 = 0;
    v89[0] = MEMORY[0x263EF8330];
    v89[1] = 3221225472;
    v89[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke;
    v89[3] = &unk_2644D8078;
    v95 = v98;
    id v22 = v14;
    uint64_t v96 = 0x3FF0000000000000;
    id v90 = v22;
    v91 = self;
    id v92 = v54;
    int64_t v97 = a4;
    id v93 = v55;
    id v94 = v13;
    uint64_t v23 = (void *)MEMORY[0x223C37380](v89);
    dispatch_time_t v24 = dispatch_time(0, 1000000000);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_3;
    block[3] = &unk_2644D80A0;
    id v25 = v22;
    id v85 = v25;
    id v26 = v12;
    v86 = v26;
    v88 = v98;
    id v27 = v23;
    id v87 = v27;
    dispatch_after(v24, MEMORY[0x263EF83A0], block);
    id v28 = dispatch_group_create();
    v82[0] = 0;
    v82[1] = v82;
    v82[2] = 0x2020000000;
    char v83 = 0;
    *(void *)long long buf = 0;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    v105 = __Block_byref_object_copy__23;
    *(void *)v106 = __Block_byref_object_dispose__23;
    *(void *)&v106[8] = 0;
    dispatch_group_enter(v28);
    __int16 v29 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeConnection];
    v76[0] = MEMORY[0x263EF8330];
    v76[1] = 3221225472;
    v76[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_742;
    v76[3] = &unk_2644D80C8;
    id v30 = v25;
    id v77 = v30;
    v80 = v82;
    id v31 = v27;
    id v79 = v31;
    v81 = buf;
    id v32 = v28;
    id v78 = v32;
    [v29 getRemoteDeviceState:v76];

    dispatch_group_enter(v32);
    __int16 v33 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
    v69[0] = MEMORY[0x263EF8330];
    v69[1] = 3221225472;
    v69[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_744;
    v69[3] = &unk_2644D80F0;
    id v34 = v30;
    id v70 = v34;
    uint64_t v35 = v26;
    id v71 = v35;
    v74 = buf;
    uint64_t v75 = v82;
    id v36 = v31;
    id v73 = v36;
    dispatch_group_t group = v32;
    dispatch_group_t v72 = group;
    [v33 paymentPassWithUniqueID:v35 synchronous:0 reply:v69];

    id v51 = objc_alloc_init(MEMORY[0x263F5BF80]);
    uint64_t v52 = [v51 passWithUniqueID:v35];
    BOOL v37 = [v52 secureElementPass];
    uint64_t v38 = [v37 pairedTerminalIdentifier];

    if (v38)
    {
      dispatch_group_enter(group);
      id v39 = [(NPKPaymentWebServiceCompanionTargetDevice *)self companionAgentConnection];
      v62[0] = MEMORY[0x263EF8330];
      v62[1] = 3221225472;
      v62[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_745;
      v62[3] = &unk_2644D80F0;
      long long v63 = v34;
      id v64 = v38;
      uint64_t v67 = buf;
      v68 = v82;
      id v66 = v36;
      id v65 = group;
      [v39 paymentPassWithPairedTerminalIdentifier:v64 completion:v62];

      long long v40 = v63;
    }
    else
    {
      char v49 = pk_Payment_log();
      BOOL v50 = os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT);

      if (!v50) {
        goto LABEL_17;
      }
      long long v40 = pk_Payment_log();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v100 = 138412546;
        id v101 = v34;
        __int16 v102 = 2112;
        uint64_t v103 = 0;
        _os_log_impl(&dword_21E92F000, v40, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction not considering paired reader identifier matches as no pairedReaderID was found on companion pass. %@", v100, 0x16u);
      }
    }

LABEL_17:
    long long v41 = [(NPKPaymentWebServiceCompanionTargetDevice *)self responseQueue];
    v56[0] = MEMORY[0x263EF8330];
    v56[1] = 3221225472;
    v56[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_746;
    v56[3] = &unk_2644D8118;
    long long v60 = buf;
    long long v61 = v82;
    id v57 = v34;
    id v58 = v35;
    id v59 = v36;
    id v42 = v36;
    dispatch_group_notify(group, v41, v56);

    _Block_object_dispose(buf, 8);
    _Block_object_dispose(v82, 8);

    _Block_object_dispose(v98, 8);
    goto LABEL_30;
  }
  id v19 = pk_Payment_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

  if (v20)
  {
    id v21 = pk_Payment_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Paired device is tinker; we won't forward to tinker devices.",
        buf,
        2u);
    }
  }
  if (v13) {
LABEL_29:
  }
    (*((void (**)(id, void))v13 + 2))(v13, 0);
LABEL_30:
}

void __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 72) + 8);
  if (!*(unsigned char *)(v6 + 24))
  {
    *(unsigned char *)(v6 + 24) = 1;
    if (a2)
    {
      id v7 = [*(id *)(a1 + 32) dateByAddingTimeInterval:*(double *)(a1 + 80)];
      uint64_t v8 = *(void **)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      uint64_t v10 = *(void *)(a1 + 88);
      v13[0] = MEMORY[0x263EF8330];
      v13[1] = 3221225472;
      _DWORD v13[2] = __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_2;
      v13[3] = &unk_2644D4150;
      uint64_t v11 = *(void *)(a1 + 56);
      id v14 = *(id *)(a1 + 64);
      [v8 _paymentWebService:v9 presentStandaloneTransaction:v10 forPassUniqueIdentifier:v5 terminalReaderIdentifier:v11 validUntilDate:v7 completion:v13];
    }
    else
    {
      uint64_t v12 = *(void *)(a1 + 64);
      if (v12) {
        (*(void (**)(uint64_t, void))(v12 + 16))(v12, 0);
      }
    }
  }
}

uint64_t __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_3(void *a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_Payment_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_Payment_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = a1[4];
      uint64_t v6 = a1[5];
      if (*(unsigned char *)(*(void *)(a1[7] + 8) + 24)) {
        id v7 = @"NO";
      }
      else {
        id v7 = @"YES";
      }
      int v9 = 138412802;
      uint64_t v10 = v5;
      __int16 v11 = 2112;
      uint64_t v12 = v6;
      __int16 v13 = 2112;
      id v14 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - firing standalone transaction timer for pass unique id: %@. Is result pending? %@", (uint8_t *)&v9, 0x20u);
    }
  }
  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

void __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_742(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v9 = a5;
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      int v15 = 138413314;
      uint64_t v16 = v13;
      __int16 v17 = 1024;
      int v18 = a2;
      __int16 v19 = 1024;
      int v20 = a3;
      __int16 v21 = 1024;
      int v22 = a4;
      __int16 v23 = 2112;
      id v24 = v9;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction got remote device state hasPasscodeSet:%d\nisPasscodeLocked:%d\nisUnlockOnly:%d\nerror:%@", (uint8_t *)&v15, 0x28u);
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = a2 & ~(_BYTE)a3;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    id v14 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    goto LABEL_9;
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    id v14 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
LABEL_9:
    v14();
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_744(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 devicePrimaryPaymentApplication];
    [v5 state];
    int IsPersonalized = PKPaymentApplicationStateIsPersonalized();

    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        uint64_t v11 = *(void *)(a1 + 40);
        uint64_t v12 = @"YES";
        if (!IsPersonalized) {
          uint64_t v12 = @"NO";
        }
        int v16 = 138412802;
        uint64_t v17 = v10;
        __int16 v18 = 2112;
        uint64_t v19 = v11;
        __int16 v20 = 2112;
        __int16 v21 = v12;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction got pass unique ID matching %@. Is personalized? %@", (uint8_t *)&v16, 0x20u);
      }
    }
    if (IsPersonalized)
    {
      uint64_t v13 = [v4 uniqueID];
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
      int v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;

      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)) {
        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_745(uint64_t a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 devicePrimaryPaymentApplication];
    [v5 state];
    int IsPersonalized = PKPaymentApplicationStateIsPersonalized();

    id v7 = pk_Payment_log();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      id v9 = pk_Payment_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        uint64_t v11 = *(void *)(a1 + 40);
        uint64_t v12 = @"YES";
        if (!IsPersonalized) {
          uint64_t v12 = @"NO";
        }
        int v16 = 138412802;
        uint64_t v17 = v10;
        __int16 v18 = 2112;
        uint64_t v19 = v11;
        __int16 v20 = 2112;
        __int16 v21 = v12;
        _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction got paired reader ID matching %@. Is personalized? %@", (uint8_t *)&v16, 0x20u);
      }
    }
    if (IsPersonalized)
    {
      uint64_t v13 = [v4 uniqueID];
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
      int v15 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v13;

      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)) {
        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t __152__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_completion___block_invoke_746(void *a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1[7] + 8) + 40);
  if (*(unsigned char *)(*(void *)(a1[8] + 8) + 24)) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = a1[4];
      uint64_t v9 = a1[5];
      uint64_t v10 = @"NO";
      if (v4) {
        uint64_t v11 = @"YES";
      }
      else {
        uint64_t v11 = @"NO";
      }
      if (*(unsigned char *)(*(void *)(a1[8] + 8) + 24)) {
        uint64_t v12 = @"YES";
      }
      else {
        uint64_t v12 = @"NO";
      }
      if (v2) {
        uint64_t v10 = @"YES";
      }
      int v14 = 138413314;
      uint64_t v15 = v8;
      __int16 v16 = 2112;
      uint64_t v17 = v9;
      __int16 v18 = 2112;
      uint64_t v19 = v11;
      __int16 v20 = 2112;
      __int16 v21 = v12;
      __int16 v22 = 2112;
      __int16 v23 = v10;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction request for pass %@ yielded result: %@. isRemoteDeviceUnlocked: %@; watchHasMatchingPass: %@",
        (uint8_t *)&v14,
        0x34u);
    }
  }
  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

- (void)_paymentWebService:(id)a3 presentStandaloneTransaction:(int64_t)a4 forPassUniqueIdentifier:(id)a5 terminalReaderIdentifier:(id)a6 validUntilDate:(id)a7 completion:(id)a8
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v13 = (char *)a5;
  id v14 = a6;
  id v15 = a7;
  id v16 = a8;
  if (![(NPKPaymentWebServiceCompanionTargetDevice *)self _isUWBSubcredentialProvisioningSupported])
  {
    uint64_t v17 = pk_General_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_ERROR);

    if (v18)
    {
      uint64_t v19 = pk_General_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 136446722;
        id v36 = "-[NPKPaymentWebServiceCompanionTargetDevice _paymentWebService:presentStandaloneTransaction:forPassUniqueI"
              "dentifier:terminalReaderIdentifier:validUntilDate:completion:]";
        __int16 v37 = 2082;
        uint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Frameworks/NanoPassKit/NPKPaymentWebServiceCompanionTargetDevice.m";
        __int16 v39 = 2048;
        uint64_t v40 = 7038;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_ERROR, "Error: *** NPKAssertion failure in %{public}s, %{public}s:%ld (reason: We should only invoke this method after verifying the watch is on supported software.)", buf, 0x20u);
      }
    }
    _NPKAssertAbort();
  }
  __int16 v20 = pk_Payment_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

  if (v21)
  {
    __int16 v22 = pk_Payment_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 134218242;
      id v36 = (const char *)a4;
      __int16 v37 = 2112;
      uint64_t v38 = v13;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Notice: Target device - sending presentStandaloneTransaction request for transactionType: %ld passUniqueIdentifier: %@", buf, 0x16u);
    }
  }
  __int16 v23 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v28[0] = MEMORY[0x263EF8330];
  v28[1] = 3221225472;
  void v28[2] = __168__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_validUntilDate_completion___block_invoke;
  v28[3] = &unk_2644D8140;
  __int16 v29 = v13;
  id v30 = v15;
  id v31 = v14;
  id v32 = self;
  id v33 = v16;
  int64_t v34 = a4;
  id v24 = v16;
  id v25 = v14;
  id v26 = v15;
  id v27 = v13;
  dispatch_sync(v23, v28);
}

void __168__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_validUntilDate_completion___block_invoke(uint64_t a1)
{
  v28[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoPresentStandaloneTransactionRequest);
  [(NPKProtoPresentStandaloneTransactionRequest *)v2 setTransactionType:*(unsigned int *)(a1 + 72)];
  [(NPKProtoPresentStandaloneTransactionRequest *)v2 setWatchPassUniqueID:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) timeIntervalSince1970];
  -[NPKProtoPresentStandaloneTransactionRequest setValidUntilEpochTimeInterval:](v2, "setValidUntilEpochTimeInterval:");
  [(NPKProtoPresentStandaloneTransactionRequest *)v2 setTerminalReaderIdentifier:*(void *)(a1 + 48)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  int v4 = [(NPKProtoPresentStandaloneTransactionRequest *)v2 data];
  uint64_t v5 = (void *)[v3 initWithProtobufData:v4 type:103 isResponse:0];

  BOOL v6 = *(void **)(a1 + 56);
  uint64_t v27 = *MEMORY[0x263F49F80];
  v28[0] = &unk_26D0439F0;
  id v7 = [NSDictionary dictionaryWithObjects:v28 forKeys:&v27 count:1];
  uint64_t v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7 priority:300];

  if (v8)
  {
    if (*(void *)(a1 + 64))
    {
      uint64_t v9 = MEMORY[0x223C37380]();
      v21[0] = MEMORY[0x263EF8330];
      v21[1] = 3221225472;
      void v21[2] = __168__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_validUntilDate_completion___block_invoke_2;
      v21[3] = &unk_2644D2B90;
      id v22 = *(id *)(a1 + 64);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v21);
      uint64_t v11 = *(void **)(a1 + 56);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    uint64_t v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      id v24 = v8;
      id v15 = "Warning: No response expected for message with identifier %@";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      uint32_t v18 = 12;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      id v24 = v5;
      __int16 v25 = 1024;
      int v26 = [v5 type];
      id v15 = "Error: No message identifier for protobuf %@ with type %hu";
      id v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
      uint32_t v18 = 18;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, v18);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __168__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_terminalReaderIdentifier_validUntilDate_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0);
}

- (void)presentStandaloneTransactionForPassUniqueIdentifierResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target presentStandaloneTransactionForPassUniqueIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  __int16 v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  __int16 v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_presentStandaloneTransactionForPassUniqueIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_presentStandaloneTransactionForPassUniqueIdentifierResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoPresentStandaloneTransactionResponse alloc];
    uint64_t v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoPresentStandaloneTransactionResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoPresentStandaloneTransactionResponse *)v6 success];
  }
  else
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)paymentWebServiceOwnershipTokenResponse:(id)a3
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service OwnershipToken token request: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v33 = 0x3032000000;
  int64_t v34 = __Block_byref_object_copy__364;
  uint64_t v35 = __Block_byref_object_dispose__365;
  id v36 = 0;
  v28[0] = 0;
  v28[1] = v28;
  void v28[2] = 0x3032000000;
  v28[3] = __Block_byref_object_copy__23;
  void v28[4] = __Block_byref_object_dispose__23;
  id v29 = 0;
  uint64_t v22 = 0;
  __int16 v23 = &v22;
  uint64_t v24 = 0x3032000000;
  char v25 = __Block_byref_object_copy__23;
  int v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3221225472;
    _DWORD v16[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceOwnershipTokenResponse___block_invoke;
    void v16[3] = &unk_2644D8168;
    void v16[4] = self;
    id v17 = v10;
    p_long long buf = &buf;
    id v18 = v4;
    BOOL v20 = v28;
    BOOL v21 = &v22;
    dispatch_sync(v11, v16);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)id v30 = 136315138;
        uint64_t v31 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceOwnershipTokenResponse:]";
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response, %s", v30, 0xCu);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(v28, 8);
  _Block_object_dispose(&buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceOwnershipTokenResponse___block_invoke(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  uint64_t v4 = [v3 completionHandler];
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8);
  BOOL v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (v3)
  {
    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [NPKProtoOwnershipTokenResponse alloc];
    uint64_t v9 = [*(id *)(a1 + 48) data];
    uint64_t v10 = [(NPKProtoOwnershipTokenResponse *)v8 initWithData:v9];

    uint64_t v11 = [v10 identifier];
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    uint64_t v14 = [v10 token];
    uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    id v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      id v19 = pk_Payment_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v20 = *(void *)(a1 + 72);
        BOOL v21 = *(const char **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
        uint64_t v22 = [*(id *)(*(void *)(v20 + 8) + 40) length];
        int v25 = 138412546;
        int v26 = v21;
        __int16 v27 = 1024;
        BOOL v28 = v22 != 0;
        _os_log_impl(&dword_21E92F000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Finish Payment web service OwnershipToken token request with identifier:%@ hasToken:%d", (uint8_t *)&v25, 0x12u);
      }
    }
LABEL_9:

    goto LABEL_10;
  }
  __int16 v23 = pk_Payment_log();
  BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

  if (v24)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v25 = 136315138;
      int v26 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceOwnershipTokenResponse:]_block_invoke";
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler, %s", (uint8_t *)&v25, 0xCu);
    }
    goto LABEL_9;
  }
LABEL_10:
}

- (void)paymentWebService:(id)a3 passOwnershipTokenWithIdentifier:(id)a4 completion:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 3221225472;
  v24[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke;
  v24[3] = &unk_2644D8190;
  id v9 = v8;
  id v25 = v9;
  uint64_t v10 = (void (**)(void, void))MEMORY[0x223C37380](v24);
  uint64_t v11 = NPKPairedOrPairingDevice();
  uint64_t v12 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"45D167B6-F5A6-469D-A81B-3146DE124929"];
  int v13 = [v11 supportsCapability:v12];

  if (v13)
  {
    uint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_755;
    block[3] = &unk_2644D81B8;
    id v20 = v7;
    BOOL v21 = self;
    id v22 = v9;
    __int16 v23 = v10;
    dispatch_async(v14, block);
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v18 = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Paired device doesn't support Super easy provisioning", v18, 2u);
      }
    }
    v10[2](v10, 0);
  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109120;
      v8[1] = v3 != 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Found ownership token:%d", (uint8_t *)v8, 8u);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_755(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoOwnershipTokenRequest);
  [(NPKProtoOwnershipTokenRequest *)v2 setIdentifier:*(void *)(a1 + 32)];
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v4 = [(NPKProtoOwnershipTokenRequest *)v2 data];
  BOOL v5 = (void *)[v3 initWithProtobufData:v4 type:119 isResponse:0];

  BOOL v6 = [*(id *)(a1 + 40) _sendProtobuf:v5 responseExpected:1 extraOptions:0];
  if (v6)
  {
    if (*(void *)(a1 + 48))
    {
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      void v18[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_2;
      void v18[3] = &unk_2644D2B90;
      id v19 = *(id *)(a1 + 56);
      uint64_t v7 = (void *)MEMORY[0x223C37380](v18);
      id v8 = *(void **)(a1 + 40);
      uint64_t v9 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      [v8 _trackOutstandingRequestWithMessageIdentifier:v6 completionHandler:v9 errorHandler:v7];

      uint64_t v10 = v19;
LABEL_11:

      goto LABEL_12;
    }
    BOOL v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 136315394;
      BOOL v21 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passOwnershipTokenWithIdentifier:completion:]_block_invoke";
      __int16 v22 = 2112;
      __int16 v23 = v6;
      int v13 = "Warning: %s No response expected for message with identifier %@";
      uint64_t v14 = v10;
      os_log_type_t v15 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

    if (v12)
    {
      uint64_t v10 = pk_Payment_log();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 136315394;
      BOOL v21 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passOwnershipTokenWithIdentifier:completion:]_block_invoke";
      __int16 v22 = 2112;
      __int16 v23 = v5;
      int v13 = "Error: %s No message identifier for protobuf %@";
      uint64_t v14 = v10;
      os_log_type_t v15 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v14, v15, v13, buf, 0x16u);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)requestAutomaticProvisioningForCompanionPaymentPass:(id)a3
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v14 = v4;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Requesting automatic provisioning for companion payment pass with unique ID: %@", buf, 0xCu);
    }
  }
  id v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_requestAutomaticProvisioningForCompanionPaymentPass___block_invoke;
  v10[3] = &unk_2644D2E08;
  id v11 = v4;
  BOOL v12 = self;
  id v9 = v4;
  dispatch_sync(v8, v10);
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_requestAutomaticProvisioningForCompanionPaymentPass___block_invoke(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoAutomaticProvisioningRequest);
  id v3 = [*(id *)(a1 + 32) passTypeIdentifier];
  [(NPKProtoAutomaticProvisioningRequest *)v2 setPassTypeIdentifier:v3];

  id v4 = [*(id *)(a1 + 32) serialNumber];
  [(NPKProtoAutomaticProvisioningRequest *)v2 setSerialNumber:v4];

  BOOL v5 = [*(id *)(a1 + 32) devicePrimaryPaymentApplication];
  -[NPKProtoAutomaticProvisioningRequest setCredentialType:](v2, "setCredentialType:", [v5 paymentNetworkIdentifier]);

  BOOL v6 = [*(id *)(a1 + 32) primaryAccountNumberSuffix];
  [(NPKProtoAutomaticProvisioningRequest *)v2 setPrimaryAccountNumberSuffix:v6];

  uint64_t v7 = [*(id *)(a1 + 32) localizedName];
  [(NPKProtoAutomaticProvisioningRequest *)v2 setLocalizedName:v7];

  unint64_t v8 = [*(id *)(a1 + 32) cardType] - 1;
  if (v8 < 3) {
    uint64_t v9 = (v8 + 1);
  }
  else {
    uint64_t v9 = 0;
  }
  [(NPKProtoAutomaticProvisioningRequest *)v2 setCardType:v9];
  id v10 = objc_alloc(MEMORY[0x263F4A228]);
  id v11 = [(NPKProtoAutomaticProvisioningRequest *)v2 data];
  BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:83 isResponse:0];

  int v13 = [*(id *)(a1 + 40) _sendProtobuf:v12 responseExpected:0];
  if (!v13)
  {
    id v14 = pk_Payment_log();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      BOOL v16 = pk_Payment_log();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        int v17 = 138412290;
        BOOL v18 = v12;
        _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v17, 0xCu);
      }
    }
  }
}

- (void)familyMembersWithCompletion:(id)a3
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a3;
  int IsTinker = NPKPairedOrPairingDeviceIsTinker();
  char v5 = IsTinker;
  if (IsTinker)
  {
    BOOL v6 = NPKPairedOrPairingDevice();
    unint64_t v8 = NPKPairingDeviceAccountAltDSID(v6, v7);

    uint64_t v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      id v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v20 = v8;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target familyMembersResponse: child altDSID:%@", buf, 0xCu);
      }
    }
  }
  else
  {
    unint64_t v8 = 0;
  }
  id v12 = objc_alloc_init(MEMORY[0x263F5C0A8]);
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  void v15[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_familyMembersWithCompletion___block_invoke;
  v15[3] = &unk_2644D81E0;
  char v18 = v5;
  id v16 = v8;
  id v17 = v3;
  id v13 = v3;
  id v14 = v8;
  [v12 familyMembersWithCompletion:v15];
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_familyMembersWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = v3;
  if (*(unsigned char *)(a1 + 48))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v20 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v15 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          BOOL v10 = [v9 altDSID];
          objc_msgSend(v9, "setMe:", objc_msgSend(v10, "isEqualToString:", *(void *)(a1 + 32)));
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v14 objects:v20 count:16];
      }
      while (v6);
    }
    id v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      id v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v19 = v4;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target familyMembersResponse: family members after:%@", buf, 0xCu);
      }
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

- (void)paymentWebServiceRegisterResponse:(id)a3
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service registration request: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  BOOL v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v35 = 0x3032000000;
  id v36 = __Block_byref_object_copy__364;
  uint64_t v37 = __Block_byref_object_dispose__365;
  id v38 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = &v28;
  uint64_t v30 = 0x2020000000;
  uint64_t v31 = 1;
  uint64_t v22 = 0;
  __int16 v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = __Block_byref_object_copy__23;
  int v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3221225472;
    _DWORD v16[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceRegisterResponse___block_invoke;
    void v16[3] = &unk_2644D7808;
    void v16[4] = self;
    id v17 = v10;
    id v18 = v4;
    p_long long buf = &buf;
    id v20 = &v28;
    uint64_t v21 = &v22;
    dispatch_sync(v11, v16);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      long long v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)id v32 = 136315138;
        uint64_t v33 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceRegisterResponse:]";
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response, %s", v32, 0xCu);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v29[3], v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceRegisterResponse___block_invoke(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    uint64_t v5 = [NPKProtoPaymentWebServiceRegistrationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoPaymentWebServiceRegistrationResponse *)v5 initWithData:v6];

    if ([v7 pending])
    {
      unint64_t v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        BOOL v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v39) = 0;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service registration request still pending", (uint8_t *)&v39, 2u);
        }
      }
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v13 = [*(id *)(a1 + 32) outstandingRequests];
      [v13 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v14 = [v4 completionHandler];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
      long long v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;

      *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v7 registrationResult];
      int v17 = [v7 hasErrorData];
      if (v17)
      {
        v1 = [v7 errorData];
        id v18 = objc_opt_class();
        uint64_t v19 = NPKSecureUnarchiveObject(v1, v18);
      }
      else
      {
        uint64_t v19 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v19);
      if (v17)
      {
      }
      id v20 = pk_Payment_log();
      BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

      if (v21)
      {
        uint64_t v22 = pk_Payment_log();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v23 = *(const char **)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
          uint64_t v24 = *(__CFString **)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
          int v39 = 134218242;
          uint64_t v40 = v23;
          __int16 v41 = 2112;
          id v42 = v24;
          _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Notice: Finish Payment web service registration request result:%lu error:%@", (uint8_t *)&v39, 0x16u);
        }
      }
      id v25 = [v7 webServiceContextData];
      int v26 = objc_opt_class();
      NPKSecureUnarchiveObject(v25, v26);
      id v27 = (char *)objc_claimAutoreleasedReturnValue();

      uint64_t v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        uint64_t v30 = pk_Payment_log();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          int v39 = 138412290;
          uint64_t v40 = v27;
          _os_log_impl(&dword_21E92F000, v30, OS_LOG_TYPE_DEFAULT, "Notice: Got updated web service context from watch: %@", (uint8_t *)&v39, 0xCu);
        }
      }
      if (v27)
      {
        uint64_t v31 = pk_Payment_log();
        BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

        if (v32)
        {
          uint64_t v33 = pk_Payment_log();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            int64_t v34 = [v27 primaryRegion];
            uint64_t v35 = [v34 applyServiceURL];
            id v36 = [v27 primaryRegion];
            uint64_t v37 = @"YES";
            if (!v36) {
              uint64_t v37 = @"NO";
            }
            int v39 = 138412546;
            uint64_t v40 = v35;
            __int16 v41 = 2112;
            id v42 = v37;
            _os_log_impl(&dword_21E92F000, v33, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@", (uint8_t *)&v39, 0x16u);
          }
        }
        id v38 = [*(id *)(a1 + 32) delegate];
        [v38 handlePaymentWebServiceContextFromWatch:v27];
      }
    }
LABEL_33:

    goto LABEL_34;
  }
  id v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v39 = 136315138;
      uint64_t v40 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceRegisterResponse:]_block_invoke";
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler, %s", (uint8_t *)&v39, 0xCu);
    }
    goto LABEL_33;
  }
LABEL_34:
}

- (void)performDeviceRegistrationForReason:(id)a3 brokerURL:(id)a4 completion:(id)a5
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = [MEMORY[0x263F08C38] UUID];
  BOOL v12 = pk_General_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    uint64_t v14 = pk_General_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412802;
      id v46 = v8;
      __int16 v47 = 2112;
      id v48 = v9;
      __int16 v49 = 2112;
      BOOL v50 = v11;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: target Device: requested register device with reason:%@ brokerURL:%@ UUID:%@", buf, 0x20u);
    }
  }
  uint64_t v15 = NPKPairedOrPairingDevice();
  long long v16 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"79770938-0C49-40BD-B593-4E04E7557E01"];
  char v17 = [v15 supportsCapability:v16];

  if (v17)
  {
    id v18 = pk_General_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v20 = pk_General_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Notice: target Device: Will forward registration request to gizmo", buf, 2u);
      }
    }
    BOOL v21 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v33[0] = MEMORY[0x263EF8330];
    v33[1] = 3221225472;
    void v33[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_766;
    void v33[3] = &unk_2644D4178;
    id v34 = v9;
    id v35 = v8;
    id v36 = self;
    id v37 = v11;
    id v38 = v10;
    dispatch_sync(v21, v33);

    uint64_t v22 = v34;
  }
  else
  {
    __int16 v23 = +[NPKSharedWebServiceProvider sharedWebServiceProvider];
    uint64_t v22 = [v23 webService];

    uint64_t v24 = pk_General_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      int v26 = pk_General_log();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v46 = v22;
        _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Notice: target Device: Active device can't forward registration we will do it locally with webService:%@", buf, 0xCu);
      }
    }
    v43[0] = MEMORY[0x263EF8330];
    v43[1] = 3221225472;
    v43[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke;
    v43[3] = &unk_2644D8208;
    id v44 = v10;
    id v27 = (void (**)(void, void, void, void))MEMORY[0x223C37380](v43);
    uint64_t v28 = v27;
    if (v22)
    {
      if (v9)
      {
        v39[0] = MEMORY[0x263EF8330];
        v39[1] = 3221225472;
        v39[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2;
        v39[3] = &unk_2644D8208;
        uint64_t v40 = v27;
        [v22 registerDeviceAtBrokerURL:v9 consistencyCheckResults:0 completion:v39];
        BOOL v29 = v40;
      }
      else
      {
        v41[0] = MEMORY[0x263EF8330];
        v41[1] = 3221225472;
        v41[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_765;
        v41[3] = &unk_2644D8208;
        id v42 = v27;
        [v22 registerDeviceWithCompletion:v41];
        BOOL v29 = v42;
      }
    }
    else
    {
      uint64_t v30 = pk_General_log();
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);

      if (v31)
      {
        BOOL v32 = pk_General_log();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412290;
          id v46 = 0;
          _os_log_impl(&dword_21E92F000, v32, OS_LOG_TYPE_ERROR, "Error: target Device: Unexpected. No deviceWebService (%@) found with which to register the device", buf, 0xCu);
        }
      }
      BOOL v29 = PKDisplayableErrorForCommonType();
      ((void (**)(void, void, uint64_t, void *))v28)[2](v28, 0, 0x7FFFFFFFFFFFFFFFLL, v29);
    }
  }
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = pk_General_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG);

  if (v9)
  {
    id v10 = pk_General_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      int v18 = 134218498;
      unint64_t v19 = a2;
      __int16 v20 = 2048;
      id v21 = a3;
      __int16 v22 = 2112;
      id v23 = v7;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEBUG, "Debug: target Device: register device completion. Result: %lu, cardsOnFile: %lu, error: %@", (uint8_t *)&v18, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    if (a2 > 3) {
      unint64_t v11 = 0;
    }
    else {
      unint64_t v11 = qword_21EBB18D8[a2];
    }
    uint64_t v15 = pk_General_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG);

    if (v16)
    {
      char v17 = pk_General_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        int v18 = 134218242;
        unint64_t v19 = v11;
        __int16 v20 = 2112;
        id v21 = v7;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEBUG, "Debug: target Device: Calling completion with registration result: %lu, error: %@", (uint8_t *)&v18, 0x16u);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    BOOL v12 = pk_General_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      uint64_t v14 = pk_General_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v18) = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Warning: target Device: Unexpected. No completion block", (uint8_t *)&v18, 2u);
      }
    }
  }
}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_765(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_766(uint64_t a1)
{
  void v30[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoPaymentWebServiceRegistrationRequest);
  id v3 = [*(id *)(a1 + 32) absoluteString];
  [(NPKProtoPaymentWebServiceRegistrationRequest *)v2 setBrokerURLString:v3];

  [(NPKProtoPaymentWebServiceRegistrationRequest *)v2 setReason:*(void *)(a1 + 40)];
  id v4 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v5 = [(NPKProtoPaymentWebServiceRegistrationRequest *)v2 data];
  BOOL v6 = (void *)[v4 initWithProtobufData:v5 type:94 isResponse:0];

  v29[0] = *MEMORY[0x263F49F60];
  id v7 = *(void **)(a1 + 48);
  id v8 = [NSString stringWithFormat:@"PaymentWebServiceRegisterRequest-%@", *(void *)(a1 + 56)];
  v29[1] = *MEMORY[0x263F49F08];
  v30[0] = v8;
  v30[1] = MEMORY[0x263EFFA88];
  BOOL v9 = [NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:2];
  id v10 = [v7 _sendProtobuf:v6 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 64))
    {
      unint64_t v11 = MEMORY[0x223C37380]();
      v23[0] = MEMORY[0x263EF8330];
      v23[1] = 3221225472;
      v23[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2_771;
      v23[3] = &unk_2644D2B90;
      id v24 = *(id *)(a1 + 64);
      BOOL v12 = (void *)MEMORY[0x223C37380](v23);
      BOOL v13 = *(void **)(a1 + 48);
      uint64_t v14 = (void *)MEMORY[0x223C37380](v11);
      [v13 _trackOutstandingRequestWithMessageIdentifier:v10 completionHandler:v14 errorHandler:v12];

LABEL_11:
      goto LABEL_12;
    }
    id v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      unint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412290;
      int v26 = v10;
      char v17 = "Warning: No response expected for message with identifier %@";
      int v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_DEFAULT;
      uint32_t v20 = 12;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      unint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 136315394;
      int v26 = "-[NPKPaymentWebServiceCompanionTargetDevice performDeviceRegistrationForReason:brokerURL:completion:]_block_invoke";
      __int16 v27 = 2112;
      uint64_t v28 = v6;
      char v17 = "Error: %s No message identifier for protobuf %@";
      int v18 = v11;
      os_log_type_t v19 = OS_LOG_TYPE_ERROR;
      uint32_t v20 = 22;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v18, v19, v17, buf, v20);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2_771(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, 1, a2);
  }
  return result;
}

- (void)photosForFamilyMembersWithDSIDsResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target photosForFamilyMembersWithDSIDsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  BOOL v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  BOOL v25 = __Block_byref_object_copy__23;
  int v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    unint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDsResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDsResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoPhotosForFamilyMembersWithDSIDsResponse alloc];
    uint64_t v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoPhotosForFamilyMembersWithDSIDsResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = objc_alloc_init(MEMORY[0x263EFF9A0]);
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    if ([(NPKProtoPhotosForFamilyMembersWithDSIDsResponse *)v6 familyPhotosIDsCount])
    {
      unint64_t v14 = 0;
      do
      {
        uint64_t v15 = [(NPKProtoPhotosForFamilyMembersWithDSIDsResponse *)v6 familyPhotosIDs];
        BOOL v16 = [v15 objectAtIndexedSubscript:v14];
        char v17 = objc_opt_class();
        id v18 = NPKSecureUnarchiveObject(v16, v17);

        id v19 = [(NPKProtoPhotosForFamilyMembersWithDSIDsResponse *)v6 familyPhotos];
        uint32_t v20 = [v19 objectAtIndexedSubscript:v14];
        id v21 = objc_opt_class();
        uint64_t v22 = NPKSecureUnarchiveObject(v20, v21);

        if (v18 && v22) {
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setObject:v22 forKey:v18];
        }

        ++v14;
      }
      while (v14 < [(NPKProtoPhotosForFamilyMembersWithDSIDsResponse *)v6 familyPhotosIDsCount]);
    }
  }
  else
  {
    id v23 = pk_Payment_log();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      BOOL v25 = pk_Payment_log();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int v26 = 0;
        _os_log_impl(&dword_21E92F000, v25, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v26, 2u);
      }
    }
  }
}

- (void)photosForFamilyMembersWithDSIDs:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (NPKPairedOrPairingDeviceIsTinker())
  {
    uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke;
    block[3] = &unk_2644D3388;
    id v11 = v6;
    uint64_t v12 = self;
    id v13 = v7;
    dispatch_sync(v8, block);
  }
  else
  {
    id v9 = objc_alloc_init(MEMORY[0x263F5C0A8]);
    [v9 photosForFamilyMembersWithDSIDs:v6 completion:v7];
  }
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      id v37 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Photos for family members with IDs %@. Sending message", buf, 0xCu);
    }
  }
  id v6 = objc_alloc_init(NPKProtoPhotosForFamilyMembersWithDSIDsRequest);
  id v7 = *(void **)(a1 + 32);
  v32[0] = MEMORY[0x263EF8330];
  v32[1] = 3221225472;
  void v32[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_775;
  void v32[3] = &unk_2644D8230;
  uint64_t v8 = v6;
  uint64_t v33 = v8;
  [v7 enumerateObjectsUsingBlock:v32];
  id v9 = objc_alloc(MEMORY[0x263F4A228]);
  id v10 = [(NPKProtoPhotosForFamilyMembersWithDSIDsRequest *)v8 data];
  id v11 = (void *)[v9 initWithProtobufData:v10 type:87 isResponse:0];

  uint64_t v12 = *(void **)(a1 + 40);
  uint64_t v13 = *MEMORY[0x263F49F08];
  v34[0] = *MEMORY[0x263F49F60];
  v34[1] = v13;
  v35[0] = @"familyMembersPhotos";
  v35[1] = MEMORY[0x263EFFA88];
  unint64_t v14 = [NSDictionary dictionaryWithObjects:v35 forKeys:v34 count:2];
  uint64_t v15 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v14];

  if (v15)
  {
    if (*(void *)(a1 + 48))
    {
      BOOL v16 = MEMORY[0x223C37380]();
      uint64_t v27 = MEMORY[0x263EF8330];
      uint64_t v28 = 3221225472;
      uint64_t v29 = __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_2;
      uint64_t v30 = &unk_2644D2B90;
      id v31 = *(id *)(a1 + 48);
      char v17 = (void *)MEMORY[0x223C37380](&v27);
      id v18 = *(void **)(a1 + 40);
      id v19 = (void *)MEMORY[0x223C37380](v16);
      objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17, v27, v28, v29, v30);

LABEL_15:
      goto LABEL_16;
    }
    BOOL v25 = pk_Payment_log();
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      BOOL v16 = pk_Payment_log();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v37 = v15;
      uint64_t v22 = "Warning: No response expected for message with identifier %@";
      id v23 = v16;
      os_log_type_t v24 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    uint32_t v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

    if (v21)
    {
      BOOL v16 = pk_Payment_log();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v37 = v11;
      uint64_t v22 = "Error: No message identifier for protobuf %@";
      id v23 = v16;
      os_log_type_t v24 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v23, v24, v22, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_775(uint64_t a1, void *a2)
{
  BOOL v3 = NPKSecureArchiveObject(a2);
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addRequestDSIDs:v3];
    BOOL v3 = v4;
  }
}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

- (void)featureApplicationsForAccountIdentifierResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target featureApplicationsForAccountIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  id v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  id v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  BOOL v25 = __Block_byref_object_copy__23;
  BOOL v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      unint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __93__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifierResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  BOOL v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoFeatureApplicationsForAccountIdentifierResponse alloc];
    uint64_t v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = objc_alloc_init(MEMORY[0x263EFF980]);
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    if ([(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v6 deprecatedFeatureApplicationsCount])
    {
      unint64_t v14 = 0;
      do
      {
        uint64_t v15 = [(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v6 deprecatedFeatureApplications];
        BOOL v16 = [v15 objectAtIndexedSubscript:v14];
        char v17 = [MEMORY[0x263EFFA08] setWithObject:objc_opt_class()];
        id v18 = NPKSecureUnarchiveArrayOfObjectsOfClasses(v16, v17);

        if (v18) {
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObjectsFromArray:v18];
        }

        ++v14;
      }
      while (v14 < [(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v6 deprecatedFeatureApplicationsCount]);
    }
    if ([(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v6 featureApplicationsCount])
    {
      unint64_t v19 = 0;
      do
      {
        uint32_t v20 = [(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v6 featureApplications];
        BOOL v21 = [v20 objectAtIndexedSubscript:v19];
        uint64_t v22 = objc_opt_class();
        id v23 = NPKSecureUnarchiveObject(v21, v22);

        if (v23) {
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:v23];
        }

        ++v19;
      }
      while (v19 < [(NPKProtoFeatureApplicationsForAccountIdentifierResponse *)v6 featureApplicationsCount]);
    }
  }
  else
  {
    uint64_t v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      BOOL v26 = pk_Payment_log();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v27 = 0;
        _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v27, 2u);
      }
    }
  }
}

- (void)featureApplicationsForAccountIdentifier:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke;
  block[3] = &unk_2644D3388;
  id v12 = v6;
  BOOL v13 = self;
  id v14 = v7;
  id v9 = v7;
  id v10 = v6;
  dispatch_sync(v8, block);
}

void __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Feature applications for account with identifier %@. Sending message", buf, 0xCu);
    }
  }
  id v6 = objc_alloc_init(NPKProtoFeatureApplicationsForAccountIdentifierRequest);
  [(NPKProtoFeatureApplicationsForAccountIdentifierRequest *)v6 setAccountIdentifier:*(void *)(a1 + 32)];
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v8 = [(NPKProtoFeatureApplicationsForAccountIdentifierRequest *)v6 data];
  id v9 = (void *)[v7 initWithProtobufData:v8 type:89 isResponse:0];

  id v10 = *(void **)(a1 + 40);
  uint64_t v11 = *MEMORY[0x263F49F08];
  v27[0] = *MEMORY[0x263F49F60];
  v27[1] = v11;
  v28[0] = @"featureApplications";
  v28[1] = MEMORY[0x263EFFA88];
  id v12 = [NSDictionary dictionaryWithObjects:v28 forKeys:v27 count:2];
  BOOL v13 = [v10 _sendProtobuf:v9 responseExpected:1 extraOptions:v12];

  if (v13)
  {
    if (*(void *)(a1 + 48))
    {
      id v14 = MEMORY[0x223C37380]();
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      void v25[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke_786;
      v25[3] = &unk_2644D2B90;
      id v26 = *(id *)(a1 + 48);
      uint64_t v15 = (void *)MEMORY[0x223C37380](v25);
      BOOL v16 = *(void **)(a1 + 40);
      char v17 = (void *)MEMORY[0x223C37380](v14);
      [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_15:
      goto LABEL_16;
    }
    id v23 = pk_Payment_log();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      id v14 = pk_Payment_log();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v13;
      uint32_t v20 = "Warning: No response expected for message with identifier %@";
      BOOL v21 = v14;
      os_log_type_t v22 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      id v14 = pk_Payment_log();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v9;
      uint32_t v20 = "Error: No message identifier for protobuf %@";
      BOOL v21 = v14;
      os_log_type_t v22 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v21, v22, v20, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke_786(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)provisionHomeKeyPassForSerialNumbers:(id)a3 completionHandler:(id)a4
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  int v8 = pk_Payment_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = (void *)MEMORY[0x223C37380](v7);
      *(_DWORD *)long long buf = 138412546;
      id v31 = v6;
      __int16 v32 = 2112;
      uint64_t v33 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - provision home key pass for serial numbers: %@ completion: %@", buf, 0x16u);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isHomeKeyProvisioningSupported])
  {
    id v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke;
    block[3] = &unk_2644D3388;
    id v25 = v6;
    id v26 = self;
    id v27 = v7;
    dispatch_sync(v12, block);

    BOOL v13 = v25;
LABEL_13:

    goto LABEL_14;
  }
  id v14 = pk_Payment_log();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    BOOL v16 = pk_Payment_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support home key provisioning.", buf, 2u);
    }
  }
  if (v7)
  {
    char v17 = (void *)MEMORY[0x263F087E8];
    uint64_t v18 = *MEMORY[0x263F5C538];
    v28[0] = *MEMORY[0x263F08338];
    BOOL v19 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint32_t v20 = [v19 localizedStringForKey:@"HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKit-HomeKey"];
    v29[0] = v20;
    v28[1] = *MEMORY[0x263F08348];
    BOOL v21 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    os_log_type_t v22 = [v21 localizedStringForKey:@"HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKit-HomeKey"];
    v29[1] = v22;
    id v23 = [NSDictionary dictionaryWithObjects:v29 forKeys:v28 count:2];
    BOOL v13 = [v17 errorWithDomain:v18 code:0 userInfo:v23];

    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v13);
    goto LABEL_13;
  }
LABEL_14:
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke(uint64_t a1)
{
  v36[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoProvisionHomeKeyPassForSerialNumbersRequest);
  id v3 = *(void **)(a1 + 32);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  void v29[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_2;
  v29[3] = &unk_2644D3188;
  id v4 = v2;
  uint64_t v30 = v4;
  [v3 enumerateObjectsUsingBlock:v29];
  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  id v6 = [(NPKProtoProvisionHomeKeyPassForSerialNumbersRequest *)v4 data];
  id v7 = (void *)[v5 initWithProtobufData:v6 type:92 isResponse:0];

  int v8 = *(void **)(a1 + 40);
  uint64_t v35 = *MEMORY[0x263F49F80];
  v36[0] = &unk_26D0439E0;
  BOOL v9 = [NSDictionary dictionaryWithObjects:v36 forKeys:&v35 count:1];
  uint64_t v10 = [v8 _sendProtobuf:v7 responseExpected:1 extraOptions:v9];

  if (v10)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v11 = MEMORY[0x223C37380]();
      uint64_t v24 = MEMORY[0x263EF8330];
      uint64_t v25 = 3221225472;
      id v26 = __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_3;
      id v27 = &unk_2644D2B90;
      id v28 = *(id *)(a1 + 48);
      id v12 = (void *)MEMORY[0x223C37380](&v24);
      BOOL v13 = *(void **)(a1 + 40);
      id v14 = (void *)MEMORY[0x223C37380](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12, v24, v25, v26, v27);

LABEL_11:
      goto LABEL_12;
    }
    BOOL v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      int v23 = [v7 type];
      *(_DWORD *)long long buf = 138412546;
      __int16 v32 = v10;
      __int16 v33 = 1024;
      int v34 = v23;
      uint64_t v18 = "Warning: No response expected for message with identifier %@ of type %hu";
      BOOL v19 = v11;
      os_log_type_t v20 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      uint64_t v11 = pk_Payment_log();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      int v17 = [v7 type];
      *(_DWORD *)long long buf = 138412546;
      __int16 v32 = v7;
      __int16 v33 = 1024;
      int v34 = v17;
      uint64_t v18 = "Error: No message identifier for protobuf %@ with type %hu";
      BOOL v19 = v11;
      os_log_type_t v20 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v19, v20, v18, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addSerialNumbers:a2];
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)provisionHomeKeyPassForSerialNumbersResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target provisionHomeKeyPassForSerialNumbersResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  BOOL v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__23;
  __int16 v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbersResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbersResponse___block_invoke(uint64_t a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoProvisionHomeKeyPassForSerialNumbersResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoProvisionHomeKeyPassForSerialNumbersResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    id v39 = v3;
    uint64_t v8 = [v3 completionHandler];
    uint64_t v37 = a1;
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    uint64_t v40 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDatasCount](v6, "provisionedPassesDatasCount"));
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    p_super = &v6->super.super;
    id obj = [(NPKProtoProvisionHomeKeyPassForSerialNumbersResponse *)v6 provisionedPassesDatas];
    uint64_t v11 = [obj countByEnumeratingWithState:&v44 objects:v54 count:16];
    if (!v11) {
      goto LABEL_25;
    }
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v45;
    unint64_t v14 = 0x263F5C000uLL;
    while (1)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        if (*(void *)v45 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v44 + 1) + 8 * i);
        id v17 = objc_alloc(*(Class *)(v14 + 544));
        id v43 = 0;
        id v18 = (void *)[v17 initWithData:v16 error:&v43];
        id v19 = v43;
        if (v18) {
          BOOL v20 = v19 == 0;
        }
        else {
          BOOL v20 = 0;
        }
        if (v20)
        {
          id v42 = 0;
          id v5 = [MEMORY[0x263F5BF50] createWithFileDataAccessor:v18 validationOptions:2 warnings:0 error:&v42];
          id v21 = v42;
          uint64_t v23 = [v5 paymentPass];
          if (v23)
          {
            [v40 addObject:v23];
          }
          else
          {
            pk_Payment_log();
            v25 = unint64_t v24 = v14;
            BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

            unint64_t v14 = v24;
            if (v26)
            {
              id v27 = pk_Payment_log();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)long long buf = 136315394;
                __int16 v49 = "-[NPKPaymentWebServiceCompanionTargetDevice provisionHomeKeyPassForSerialNumbersResponse:]_block_invoke";
                __int16 v50 = 2112;
                id v51 = v21;
                _os_log_impl(&dword_21E92F000, v27, OS_LOG_TYPE_ERROR, "Error: %s Problem recreating pass from received pass data. Error: %@", buf, 0x16u);
              }

              unint64_t v14 = v24;
            }
          }

          goto LABEL_22;
        }
        id v21 = v19;
        if (v19)
        {
          id v5 = pk_Payment_log();
          BOOL v22 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);

          if (v22)
          {
            id v5 = pk_Payment_log();
            if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 136315650;
              __int16 v49 = "-[NPKPaymentWebServiceCompanionTargetDevice provisionHomeKeyPassForSerialNumbersResponse:]_block_invoke";
              __int16 v50 = 2112;
              id v51 = v18;
              __int16 v52 = 2112;
              id v53 = v21;
              _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_ERROR, "Error: %s Error creating data accessor (%@). Error: %@", buf, 0x20u);
            }
LABEL_22:
          }
        }
      }
      uint64_t v12 = [obj countByEnumeratingWithState:&v44 objects:v54 count:16];
      if (!v12)
      {
LABEL_25:

        uint64_t v28 = [v40 copy];
        uint64_t v29 = *(void *)(*(void *)(v37 + 64) + 8);
        uint64_t v30 = *(void **)(v29 + 40);
        *(void *)(v29 + 40) = v28;

        uint64_t v31 = p_super;
        int v32 = [p_super hasErrorData];
        if (v32)
        {
          id v5 = [p_super errorData];
          __int16 v33 = objc_opt_class();
          id v34 = NPKSecureUnarchiveObject(v5, v33);
        }
        else
        {
          id v34 = 0;
        }
        objc_storeStrong((id *)(*(void *)(*(void *)(v37 + 72) + 8) + 40), v34);
        if (v32)
        {
        }
        id v3 = v39;
        goto LABEL_34;
      }
    }
  }
  uint64_t v35 = pk_Payment_log();
  BOOL v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);

  if (v36)
  {
    uint64_t v31 = pk_Payment_log();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v31, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
LABEL_34:
  }
}

- (void)availableHomeKeyPassesWithCompletionHandler:(id)a3
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (void *)MEMORY[0x223C37380](v4);
      *(_DWORD *)long long buf = 138412290;
      BOOL v26 = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - available home key passes with completion: %@", buf, 0xCu);
    }
  }
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isHomeKeyProvisioningSupported])
  {
    uint64_t v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    void v21[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke;
    v21[3] = &unk_2644D2E58;
    void v21[4] = self;
    id v22 = v4;
    dispatch_sync(v9, v21);
  }
  else
  {
    uint64_t v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      uint64_t v12 = pk_Payment_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support home key provisioning.", buf, 2u);
      }
    }
    if (v4)
    {
      uint64_t v13 = (void *)MEMORY[0x263F087E8];
      uint64_t v14 = *MEMORY[0x263F5C538];
      v23[0] = *MEMORY[0x263F08338];
      uint64_t v15 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
      uint64_t v16 = [v15 localizedStringForKey:@"HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKit-HomeKey"];
      v24[0] = v16;
      v23[1] = *MEMORY[0x263F08348];
      id v17 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
      id v18 = [v17 localizedStringForKey:@"HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKit-HomeKey"];
      v24[1] = v18;
      id v19 = [NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:2];
      BOOL v20 = [v13 errorWithDomain:v14 code:0 userInfo:v19];

      (*((void (**)(id, void, void *))v4 + 2))(v4, 0, v20);
    }
  }
}

void __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke(uint64_t a1)
{
  v27[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoAvailableHomeKeyPassesRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoAvailableHomeKeyPassesRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:93 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  uint64_t v26 = *MEMORY[0x263F49F80];
  v27[0] = &unk_26D0439E0;
  id v7 = [NSDictionary dictionaryWithObjects:v27 forKeys:&v26 count:1];
  uint64_t v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7];

  if (v8)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v9 = MEMORY[0x223C37380]();
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 3221225472;
      void v20[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke_2;
      void v20[3] = &unk_2644D2B90;
      id v21 = *(id *)(a1 + 40);
      uint64_t v10 = (void *)MEMORY[0x223C37380](v20);
      BOOL v11 = *(void **)(a1 + 32);
      uint64_t v12 = (void *)MEMORY[0x223C37380](v9);
      [v11 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v12 errorHandler:v10];

LABEL_11:
      goto LABEL_12;
    }
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      uint64_t v23 = v8;
      __int16 v24 = 1024;
      int v25 = [v5 type];
      uint64_t v15 = "Warning: No response expected for message with identifier %@ of type %hu";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v9 = pk_Payment_log();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      *(_DWORD *)long long buf = 138412546;
      uint64_t v23 = v5;
      __int16 v24 = 1024;
      int v25 = [v5 type];
      uint64_t v15 = "Error: No message identifier for protobuf %@ with type %hu";
      uint64_t v16 = v9;
      os_log_type_t v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_21E92F000, v16, v17, v15, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0, a2);
  }
  return result;
}

- (void)availableHomeKeyPassesResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target availableHomeKeyPassesResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  uint64_t v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  uint64_t v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  int v32 = __Block_byref_object_copy__23;
  __int16 v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  __int16 v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesResponse___block_invoke(uint64_t a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoAvailableHomeKeyPassesResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoAvailableHomeKeyPassesResponse *)v4 initWithData:v5];

    id v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    id v39 = v3;
    uint64_t v8 = [v3 completionHandler];
    uint64_t v37 = a1;
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    uint64_t v40 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", -[NPKProtoAvailableHomeKeyPassesResponse passesDatasCount](v6, "passesDatasCount"));
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    p_super = &v6->super.super;
    id obj = [(NPKProtoAvailableHomeKeyPassesResponse *)v6 passesDatas];
    uint64_t v11 = [obj countByEnumeratingWithState:&v44 objects:v54 count:16];
    if (!v11) {
      goto LABEL_25;
    }
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v45;
    unint64_t v14 = 0x263F5C000uLL;
    while (1)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        if (*(void *)v45 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void *)(*((void *)&v44 + 1) + 8 * i);
        id v17 = objc_alloc(*(Class *)(v14 + 544));
        id v43 = 0;
        id v18 = (void *)[v17 initWithData:v16 error:&v43];
        id v19 = v43;
        if (v18) {
          BOOL v20 = v19 == 0;
        }
        else {
          BOOL v20 = 0;
        }
        if (v20)
        {
          id v42 = 0;
          id v5 = [MEMORY[0x263F5BF50] createWithFileDataAccessor:v18 validationOptions:2 warnings:0 error:&v42];
          id v21 = v42;
          uint64_t v23 = [v5 paymentPass];
          if (v23)
          {
            [v40 addObject:v23];
          }
          else
          {
            pk_Payment_log();
            v25 = unint64_t v24 = v14;
            BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

            unint64_t v14 = v24;
            if (v26)
            {
              uint64_t v27 = pk_Payment_log();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)long long buf = 136315394;
                __int16 v49 = "-[NPKPaymentWebServiceCompanionTargetDevice availableHomeKeyPassesResponse:]_block_invoke";
                __int16 v50 = 2112;
                id v51 = v21;
                _os_log_impl(&dword_21E92F000, v27, OS_LOG_TYPE_ERROR, "Error: %s Problem recreating pass from received pass data. Error: %@", buf, 0x16u);
              }

              unint64_t v14 = v24;
            }
          }

          goto LABEL_22;
        }
        id v21 = v19;
        if (v19)
        {
          id v5 = pk_Payment_log();
          BOOL v22 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);

          if (v22)
          {
            id v5 = pk_Payment_log();
            if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 136315650;
              __int16 v49 = "-[NPKPaymentWebServiceCompanionTargetDevice availableHomeKeyPassesResponse:]_block_invoke";
              __int16 v50 = 2112;
              id v51 = v18;
              __int16 v52 = 2112;
              id v53 = v21;
              _os_log_impl(&dword_21E92F000, v5, OS_LOG_TYPE_ERROR, "Error: %s Error creating data accessor (%@). Error: %@", buf, 0x20u);
            }
LABEL_22:
          }
        }
      }
      uint64_t v12 = [obj countByEnumeratingWithState:&v44 objects:v54 count:16];
      if (!v12)
      {
LABEL_25:

        uint64_t v28 = [v40 copy];
        uint64_t v29 = *(void *)(*(void *)(v37 + 64) + 8);
        uint64_t v30 = *(void **)(v29 + 40);
        *(void *)(v29 + 40) = v28;

        uint64_t v31 = p_super;
        int v32 = [p_super hasErrorData];
        if (v32)
        {
          id v5 = [p_super errorData];
          __int16 v33 = objc_opt_class();
          id v34 = NPKSecureUnarchiveObject(v5, v33);
        }
        else
        {
          id v34 = 0;
        }
        objc_storeStrong((id *)(*(void *)(*(void *)(v37 + 72) + 8) + 40), v34);
        if (v32)
        {
        }
        id v3 = v39;
        goto LABEL_34;
      }
    }
  }
  uint64_t v35 = pk_Payment_log();
  BOOL v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);

  if (v36)
  {
    uint64_t v31 = pk_Payment_log();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v31, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
LABEL_34:
  }
}

- (void)generateAuxiliaryCapabilitiesForRequirements:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isAuxiliaryRegistrationSupported])
  {
    uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    uint64_t v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support generateAuxiliaryCapabilitiesForRequirements:completion: message.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke(uint64_t a1)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138478083;
      id v42 = v5;
      __int16 v43 = 2112;
      long long v44 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to generate auxiliary capabilities for requirements: %{private}@, completion: %@", buf, 0x16u);
    }
  }
  id v7 = objc_alloc_init(NPKProtoGenerateAuxiliaryCapabilitiesRequest);
  id v8 = objc_alloc_init(MEMORY[0x263EFF980]);
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v9 = *(id *)(a1 + 32);
  uint64_t v10 = [v9 countByEnumeratingWithState:&v34 objects:v40 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v35;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v35 != v12) {
          objc_enumerationMutation(v9);
        }
        unint64_t v14 = NPKSecureArchiveObject(*(void **)(*((void *)&v34 + 1) + 8 * i));
        [v8 addObject:v14];
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v34 objects:v40 count:16];
    }
    while (v11);
  }

  [(NPKProtoGenerateAuxiliaryCapabilitiesRequest *)v7 setRegistrationRequirements:v8];
  id v15 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v16 = [(NPKProtoGenerateAuxiliaryCapabilitiesRequest *)v7 data];
  id v17 = (void *)[v15 initWithProtobufData:v16 type:152 isResponse:0];

  id v18 = *(void **)(a1 + 40);
  uint64_t v38 = *MEMORY[0x263F49F80];
  id v39 = &unk_26D0439E0;
  id v19 = [NSDictionary dictionaryWithObjects:&v39 forKeys:&v38 count:1];
  BOOL v20 = [v18 _sendProtobuf:v17 responseExpected:1 extraOptions:v19];

  if (v20)
  {
    if (*(void *)(a1 + 48))
    {
      id v21 = MEMORY[0x223C37380]();
      v32[0] = MEMORY[0x263EF8330];
      v32[1] = 3221225472;
      void v32[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke_803;
      void v32[3] = &unk_2644D2B90;
      id v33 = *(id *)(a1 + 48);
      BOOL v22 = (void *)MEMORY[0x223C37380](v32);
      uint64_t v23 = *(void **)(a1 + 40);
      unint64_t v24 = (void *)MEMORY[0x223C37380](v21);
      [v23 _trackOutstandingRequestWithMessageIdentifier:v20 completionHandler:v24 errorHandler:v22];

LABEL_22:
      goto LABEL_23;
    }
    uint64_t v30 = pk_Payment_log();
    BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

    if (v31)
    {
      id v21 = pk_Payment_log();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_22;
      }
      *(_DWORD *)long long buf = 138412290;
      id v42 = v20;
      uint64_t v27 = "Warning: No response expected for message with identifier %@";
      uint64_t v28 = v21;
      os_log_type_t v29 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v25 = pk_Payment_log();
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

    if (v26)
    {
      id v21 = pk_Payment_log();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      *(_DWORD *)long long buf = 138412290;
      id v42 = v17;
      uint64_t v27 = "Error: No message identifier for protobuf %@";
      uint64_t v28 = v21;
      os_log_type_t v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
      _os_log_impl(&dword_21E92F000, v28, v29, v27, buf, 0xCu);
      goto LABEL_22;
    }
  }
LABEL_23:
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke_803(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)generateAuxiliaryCapabilitiesResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateAuxiliaryCapabilitiesResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  long long v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  int v32 = __Block_byref_object_copy__23;
  id v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  unint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      unint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoGenerateAuxiliaryCapabilitiesResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    id v11 = objc_alloc_init(MEMORY[0x263F08968]);
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    unint64_t v14 = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v6 keyMaterialValues];
    uint64_t v15 = [v14 count];

    uint64_t i = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v6 requirementKeys];
    uint64_t v17 = [i count];

    if (v17 == v15 && v15)
    {
      for (uint64_t i = 0; i != (char *)v15; ++i)
      {
        id v18 = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v6 requirementKeys];
        id v19 = [v18 objectAtIndexedSubscript:i];

        if (v19)
        {
          BOOL v20 = objc_opt_class();
          id v21 = NPKSecureUnarchiveObject(v19, v20);
          BOOL v22 = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v6 keyMaterialValues];
          uint64_t v23 = [v22 objectAtIndexedSubscript:i];

          if (v23)
          {
            unint64_t v24 = objc_opt_class();
            uint64_t v25 = NPKSecureUnarchiveObject(v23, v24);
            if (v25)
            {
              BOOL v26 = (void *)v25;
              [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setObject:v25 forKey:v21];
            }
          }
        }
      }
    }
    BOOL v27 = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v6 hasErrorData];
    if (v27)
    {
      uint64_t i = [(NPKProtoGenerateAuxiliaryCapabilitiesResponse *)v6 errorData];
      id v28 = objc_opt_class();
      uint64_t v29 = NPKSecureUnarchiveObject(i, v28);
    }
    else
    {
      uint64_t v29 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v29);
    if (v27)
    {
    }
  }
  else
  {
    uint64_t v30 = pk_Payment_log();
    BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

    if (v31)
    {
      int v32 = pk_Payment_log();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v32, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
      }
    }
  }
}

- (void)createFidoKeyForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 challenge:(id)a5 externalizedAuth:(id)a6 completion:(id)a7
{
  v39[2] = *MEMORY[0x263EF8340];
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    uint64_t v17 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke;
    block[3] = &unk_2644D8258;
    id v32 = v12;
    id v33 = v13;
    id v34 = v14;
    id v35 = v15;
    uint64_t v36 = self;
    id v37 = v16;
    dispatch_sync(v17, block);

    id v18 = v32;
LABEL_9:

    goto LABEL_10;
  }
  id v19 = pk_Payment_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

  if (v20)
  {
    id v21 = pk_Payment_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", buf, 2u);
    }
  }
  if (v16)
  {
    id v28 = (void *)MEMORY[0x263F087E8];
    uint64_t v27 = *MEMORY[0x263F5C538];
    v38[0] = *MEMORY[0x263F08338];
    id v29 = v12;
    BOOL v22 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v23 = [v22 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v39[0] = v23;
    v38[1] = *MEMORY[0x263F08348];
    unint64_t v24 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v25 = [v24 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v39[1] = v25;
    BOOL v26 = [NSDictionary dictionaryWithObjects:v39 forKeys:v38 count:2];
    id v18 = [v28 errorWithDomain:v27 code:4 userInfo:v26];

    id v12 = v29;
    (*((void (**)(id, void, void, void, void *))v16 + 2))(v16, 0, 0, 0, v18);
    goto LABEL_9;
  }
LABEL_10:
}

void __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 72));
      *(_DWORD *)long long buf = 138413314;
      id v33 = v5;
      __int16 v34 = 2112;
      uint64_t v35 = v6;
      __int16 v36 = 2112;
      uint64_t v37 = v7;
      __int16 v38 = 2112;
      uint64_t v39 = v8;
      __int16 v40 = 2112;
      __int16 v41 = v9;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target create fido key for relying party %@ accountHash %@ challenge %@ externalizedauth %@ with completion %@", buf, 0x34u);
    }
  }
  uint64_t v10 = objc_alloc_init(NPKProtoCreateFidoKeyRequest);
  [(NPKProtoCreateFidoKeyRequest *)v10 setRelyingParty:*(void *)(a1 + 32)];
  [(NPKProtoCreateFidoKeyRequest *)v10 setRelyingPartyAccountHash:*(void *)(a1 + 40)];
  [(NPKProtoCreateFidoKeyRequest *)v10 setChallenge:*(void *)(a1 + 48)];
  [(NPKProtoCreateFidoKeyRequest *)v10 setExternalizedAuth:*(void *)(a1 + 56)];
  id v11 = objc_alloc(MEMORY[0x263F4A228]);
  id v12 = [(NPKProtoCreateFidoKeyRequest *)v10 data];
  id v13 = (void *)[v11 initWithProtobufData:v12 type:95 isResponse:0];

  id v14 = *(void **)(a1 + 64);
  uint64_t v30 = *MEMORY[0x263F49F08];
  uint64_t v31 = MEMORY[0x263EFFA88];
  id v15 = [NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
  id v16 = [v14 _sendProtobuf:v13 responseExpected:1 extraOptions:v15];

  if (v16)
  {
    if (*(void *)(a1 + 72))
    {
      uint64_t v17 = MEMORY[0x223C37380]();
      v28[0] = MEMORY[0x263EF8330];
      v28[1] = 3221225472;
      void v28[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke_809;
      v28[3] = &unk_2644D2B90;
      id v29 = *(id *)(a1 + 72);
      id v18 = (void *)MEMORY[0x223C37380](v28);
      id v19 = *(void **)(a1 + 64);
      BOOL v20 = (void *)MEMORY[0x223C37380](v17);
      [v19 _trackOutstandingRequestWithMessageIdentifier:v16 completionHandler:v20 errorHandler:v18];

LABEL_15:
      goto LABEL_16;
    }
    BOOL v26 = pk_Payment_log();
    BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

    if (v27)
    {
      uint64_t v17 = pk_Payment_log();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v33 = v16;
      uint64_t v23 = "Warning: No response expected for message with identifier %@";
      unint64_t v24 = v17;
      os_log_type_t v25 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    id v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (v22)
    {
      uint64_t v17 = pk_Payment_log();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v33 = v13;
      uint64_t v23 = "Error: No message identifier for protobuf %@";
      unint64_t v24 = v17;
      os_log_type_t v25 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v24, v25, v23, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke_809(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, void, void, id))(v7 + 16))(v7, 0, 0, 0, v3);
  }
}

- (void)createFidoKeyResponse:(id)a3
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target createFidoKeyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v50 = 0x3032000000;
  id v51 = __Block_byref_object_copy__364;
  __int16 v52 = __Block_byref_object_dispose__365;
  id v53 = 0;
  uint64_t v43 = 0;
  long long v44 = &v43;
  uint64_t v45 = 0x3032000000;
  long long v46 = __Block_byref_object_copy__23;
  long long v47 = __Block_byref_object_dispose__23;
  id v48 = 0;
  uint64_t v37 = 0;
  __int16 v38 = &v37;
  uint64_t v39 = 0x3032000000;
  __int16 v40 = __Block_byref_object_copy__23;
  __int16 v41 = __Block_byref_object_dispose__23;
  id v42 = 0;
  uint64_t v31 = 0;
  id v32 = &v31;
  uint64_t v33 = 0x3032000000;
  __int16 v34 = __Block_byref_object_copy__23;
  uint64_t v35 = __Block_byref_object_dispose__23;
  id v36 = 0;
  uint64_t v25 = 0;
  BOOL v26 = &v25;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__23;
  id v29 = __Block_byref_object_dispose__23;
  id v30 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __67__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyResponse___block_invoke;
    block[3] = &unk_2644D7BF0;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v43;
    BOOL v22 = &v37;
    uint64_t v23 = &v31;
    unint64_t v24 = &v25;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v44[5], v38[5], v32[5], v26[5]);
  }
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  _Block_object_dispose(&v43, 8);
  _Block_object_dispose(&buf, 8);
}

void __67__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCreateFidoKeyResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCreateFidoKeyResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoCreateFidoKeyResponse *)v7 fidoKey];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    id v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    uint64_t v15 = [(NPKProtoCreateFidoKeyResponse *)v7 fidoAttestation];
    uint64_t v16 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;

    uint64_t v18 = [(NPKProtoCreateFidoKeyResponse *)v7 keyHash];
    uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8);
    BOOL v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    BOOL v21 = [(NPKProtoCreateFidoKeyResponse *)v7 hasErrorData];
    if (v21)
    {
      v1 = [(NPKProtoCreateFidoKeyResponse *)v7 errorData];
      BOOL v22 = objc_opt_class();
      uint64_t v23 = NPKSecureUnarchiveObject(v1, v22);
    }
    else
    {
      uint64_t v23 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40), v23);
    if (v21)
    {
    }
  }
  else
  {
    unint64_t v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      BOOL v26 = pk_Payment_log();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27[0] = 0;
        _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v27, 2u);
      }
    }
  }
}

- (void)checkFidoKeyPresenceForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 fidoKeyHash:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    id v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke;
    block[3] = &unk_2644D8280;
    id v20 = v10;
    id v21 = v11;
    id v22 = v12;
    uint64_t v23 = self;
    id v24 = v13;
    dispatch_sync(v14, block);
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      uint64_t v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v18, 2u);
      }
    }
    if (v13) {
      (*((void (**)(id, void))v13 + 2))(v13, 0);
    }
  }
}

void __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      int v8 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 64));
      *(_DWORD *)long long buf = 138413058;
      id v32 = v5;
      __int16 v33 = 2112;
      uint64_t v34 = v6;
      __int16 v35 = 2112;
      uint64_t v36 = v7;
      __int16 v37 = 2112;
      __int16 v38 = v8;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target check fido key presence for relayingParty %@ accountHash %@ fidoKeyHash %@ completion %@", buf, 0x2Au);
    }
  }
  uint64_t v9 = objc_alloc_init(NPKProtoCheckFidoKeyPresenceRequest);
  [(NPKProtoCheckFidoKeyPresenceRequest *)v9 setRelyingParty:*(void *)(a1 + 32)];
  [(NPKProtoCheckFidoKeyPresenceRequest *)v9 setRelyingPartyAccountHash:*(void *)(a1 + 40)];
  [(NPKProtoCheckFidoKeyPresenceRequest *)v9 setFidoKeyHash:*(void *)(a1 + 48)];
  id v10 = objc_alloc(MEMORY[0x263F4A228]);
  id v11 = [(NPKProtoCheckFidoKeyPresenceRequest *)v9 data];
  id v12 = (void *)[v10 initWithProtobufData:v11 type:96 isResponse:0];

  id v13 = *(void **)(a1 + 56);
  uint64_t v29 = *MEMORY[0x263F49F08];
  uint64_t v30 = MEMORY[0x263EFFA88];
  id v14 = [NSDictionary dictionaryWithObjects:&v30 forKeys:&v29 count:1];
  uint64_t v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

  if (v15)
  {
    if (*(void *)(a1 + 64))
    {
      BOOL v16 = MEMORY[0x223C37380]();
      v27[0] = MEMORY[0x263EF8330];
      v27[1] = 3221225472;
      void v27[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke_821;
      void v27[3] = &unk_2644D2B90;
      id v28 = *(id *)(a1 + 64);
      uint64_t v17 = (void *)MEMORY[0x223C37380](v27);
      uint64_t v18 = *(void **)(a1 + 56);
      uint64_t v19 = (void *)MEMORY[0x223C37380](v16);
      [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_15:
      goto LABEL_16;
    }
    BOOL v25 = pk_Payment_log();
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      BOOL v16 = pk_Payment_log();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v32 = v15;
      id v22 = "Warning: No response expected for message with identifier %@";
      uint64_t v23 = v16;
      os_log_type_t v24 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    id v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

    if (v21)
    {
      BOOL v16 = pk_Payment_log();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v32 = v12;
      id v22 = "Error: No message identifier for protobuf %@";
      uint64_t v23 = v16;
      os_log_type_t v24 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v23, v24, v22, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke_821(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)checkFidoKeyResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target checkFidoKeyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __66__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __66__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoCheckFidoKeyPresenceResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoCheckFidoKeyPresenceResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoCheckFidoKeyPresenceResponse *)v6 keyExists];
  }
  else
  {
    id v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)signWithFidoKeyForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 fidoKeyHash:(id)a5 challenge:(id)a6 publicKeyIdentifier:(id)a7 externalizedAuth:(id)a8 completion:(id)a9
{
  v49[2] = *MEMORY[0x263EF8340];
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a7;
  id v20 = a8;
  id v21 = a9;
  __int16 v37 = v18;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    uint64_t v22 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke;
    block[3] = &unk_2644D82A8;
    id v40 = v15;
    id v41 = v16;
    id v42 = v17;
    id v43 = v18;
    id v44 = v19;
    id v45 = v20;
    long long v46 = self;
    id v47 = v21;
    dispatch_sync(v22, block);

    uint64_t v23 = v40;
LABEL_9:

    goto LABEL_10;
  }
  id v24 = v15;
  char v25 = pk_Payment_log();
  BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

  if (v26)
  {
    uint64_t v27 = pk_Payment_log();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v27, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", buf, 2u);
    }
  }
  id v15 = v24;
  if (v21)
  {
    uint64_t v34 = (void *)MEMORY[0x263F087E8];
    uint64_t v33 = *MEMORY[0x263F5C538];
    v48[0] = *MEMORY[0x263F08338];
    id v35 = v17;
    id v28 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    id v36 = v16;
    uint64_t v29 = [v28 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v49[0] = v29;
    v48[1] = *MEMORY[0x263F08348];
    id v30 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v31 = [v30 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v49[1] = v31;
    id v32 = [NSDictionary dictionaryWithObjects:v49 forKeys:v48 count:2];
    uint64_t v23 = [v34 errorWithDomain:v33 code:4 userInfo:v32];

    id v16 = v36;
    id v17 = v35;

    id v15 = v24;
    (*((void (**)(id, void, void *))v21 + 2))(v21, 0, v23);
    goto LABEL_9;
  }
LABEL_10:
}

void __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = *(void *)(a1 + 64);
      uint64_t v10 = *(void *)(a1 + 72);
      id v11 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 88));
      *(_DWORD *)long long buf = 138413826;
      id v35 = v5;
      __int16 v36 = 2112;
      uint64_t v37 = v6;
      __int16 v38 = 2112;
      uint64_t v39 = v7;
      __int16 v40 = 2112;
      uint64_t v41 = v8;
      __int16 v42 = 2112;
      uint64_t v43 = v9;
      __int16 v44 = 2112;
      uint64_t v45 = v10;
      __int16 v46 = 2112;
      id v47 = v11;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target sign with fido key for relaying party %@ accountHash %@ fidoKeyHash %@ challenge %@ publicKeyIdentifier %@ externalizedAuth %@ completion %@", buf, 0x48u);
    }
  }
  BOOL v12 = objc_alloc_init(NPKProtoSignWithFidoKeyRequest);
  [(NPKProtoSignWithFidoKeyRequest *)v12 setRelyingParty:*(void *)(a1 + 32)];
  [(NPKProtoSignWithFidoKeyRequest *)v12 setRelyingPartyAccountHash:*(void *)(a1 + 40)];
  [(NPKProtoSignWithFidoKeyRequest *)v12 setFidoKeyHash:*(void *)(a1 + 48)];
  [(NPKProtoSignWithFidoKeyRequest *)v12 setChallenge:*(void *)(a1 + 56)];
  [(NPKProtoSignWithFidoKeyRequest *)v12 setPublicKeyIdentifier:*(void *)(a1 + 64)];
  [(NPKProtoSignWithFidoKeyRequest *)v12 setExternalizedAuth:*(void *)(a1 + 72)];
  id v13 = objc_alloc(MEMORY[0x263F4A228]);
  id v14 = [(NPKProtoSignWithFidoKeyRequest *)v12 data];
  id v15 = (void *)[v13 initWithProtobufData:v14 type:97 isResponse:0];

  id v16 = *(void **)(a1 + 80);
  uint64_t v32 = *MEMORY[0x263F49F80];
  uint64_t v33 = &unk_26D0439E0;
  id v17 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
  id v18 = [v16 _sendProtobuf:v15 responseExpected:1 extraOptions:v17];

  if (v18)
  {
    if (*(void *)(a1 + 88))
    {
      id v19 = MEMORY[0x223C37380]();
      v30[0] = MEMORY[0x263EF8330];
      v30[1] = 3221225472;
      void v30[2] = __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke_824;
      void v30[3] = &unk_2644D2B90;
      id v31 = *(id *)(a1 + 88);
      id v20 = (void *)MEMORY[0x223C37380](v30);
      id v21 = *(void **)(a1 + 80);
      uint64_t v22 = (void *)MEMORY[0x223C37380](v19);
      [v21 _trackOutstandingRequestWithMessageIdentifier:v18 completionHandler:v22 errorHandler:v20];

LABEL_15:
      goto LABEL_16;
    }
    id v28 = pk_Payment_log();
    BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

    if (v29)
    {
      id v19 = pk_Payment_log();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v35 = v18;
      char v25 = "Warning: No response expected for message with identifier %@";
      BOOL v26 = v19;
      os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v23 = pk_Payment_log();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

    if (v24)
    {
      id v19 = pk_Payment_log();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v35 = v15;
      char v25 = "Error: No message identifier for protobuf %@";
      BOOL v26 = v19;
      os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke_824(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)signWithFidoKeyResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target signWithFidoKeyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  uint64_t v37 = __Block_byref_object_copy__364;
  __int16 v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000;
  uint64_t v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  os_log_type_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __69__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoSignWithFidoKeyResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoSignWithFidoKeyResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoSignWithFidoKeyResponse *)v7 fidoAttestation];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    id v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    BOOL v15 = [(NPKProtoSignWithFidoKeyResponse *)v7 hasErrorData];
    if (v15)
    {
      v1 = [(NPKProtoSignWithFidoKeyResponse *)v7 errorData];
      id v16 = objc_opt_class();
      id v17 = NPKSecureUnarchiveObject(v1, v16);
    }
    else
    {
      id v17 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      id v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)generateISOEncryptionCertificateForSubCredentialId:(id)a3 completion:(id)a4
{
  void v26[2] = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v22 = v6;
    uint64_t v23 = self;
    id v24 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v22;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v20, 2u);
    }
  }
  if (v7)
  {
    uint64_t v13 = (void *)MEMORY[0x263F087E8];
    uint64_t v14 = *MEMORY[0x263F5C538];
    v25[0] = *MEMORY[0x263F08338];
    BOOL v15 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    id v16 = [v15 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v26[0] = v16;
    v25[1] = *MEMORY[0x263F08348];
    id v17 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    id v18 = [v17 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v26[1] = v18;
    BOOL v19 = [NSDictionary dictionaryWithObjects:v26 forKeys:v25 count:2];
    uint64_t v9 = [v13 errorWithDomain:v14 code:4 userInfo:v19];

    (*((void (**)(id, void, void, void *))v7 + 2))(v7, 0, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      id v30 = v5;
      __int16 v31 = 2112;
      uint64_t v32 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target generate ISO encryption certificate for subcredential ID %@ completion %@", buf, 0x16u);
    }
  }
  id v7 = objc_alloc_init(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest);
  [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest *)v7 setSubCredentialId:*(void *)(a1 + 32)];
  id v8 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v9 = [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest *)v7 data];
  uint64_t v10 = (void *)[v8 initWithProtobufData:v9 type:98 isResponse:0];

  BOOL v11 = *(void **)(a1 + 40);
  uint64_t v27 = *MEMORY[0x263F49F08];
  uint64_t v28 = MEMORY[0x263EFFA88];
  uint64_t v12 = [NSDictionary dictionaryWithObjects:&v28 forKeys:&v27 count:1];
  uint64_t v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

  if (v13)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v14 = MEMORY[0x223C37380]();
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      void v25[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke_827;
      v25[3] = &unk_2644D2B90;
      id v26 = *(id *)(a1 + 48);
      BOOL v15 = (void *)MEMORY[0x223C37380](v25);
      id v16 = *(void **)(a1 + 40);
      id v17 = (void *)MEMORY[0x223C37380](v14);
      [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_15:
      goto LABEL_16;
    }
    uint64_t v23 = pk_Payment_log();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      uint64_t v14 = pk_Payment_log();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v30 = v13;
      id v20 = "Warning: No response expected for message with identifier %@";
      id v21 = v14;
      os_log_type_t v22 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      uint64_t v14 = pk_Payment_log();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v30 = v10;
      id v20 = "Error: No message identifier for protobuf %@";
      id v21 = v14;
      os_log_type_t v22 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v21, v22, v20, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke_827(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, void, id))(v7 + 16))(v7, 0, 0, v3);
  }
}

- (void)generateISOEncryptionCertificateForSubCredentialIdResponse:(id)a3
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateISOEncryptionCertificateForSubCredentialIdResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v43 = 0x3032000000;
  __int16 v44 = __Block_byref_object_copy__364;
  uint64_t v45 = __Block_byref_object_dispose__365;
  id v46 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x3032000000;
  id v39 = __Block_byref_object_copy__23;
  uint64_t v40 = __Block_byref_object_dispose__23;
  id v41 = 0;
  uint64_t v30 = 0;
  __int16 v31 = &v30;
  uint64_t v32 = 0x3032000000;
  uint64_t v33 = __Block_byref_object_copy__23;
  id v34 = __Block_byref_object_dispose__23;
  id v35 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000;
  uint64_t v27 = __Block_byref_object_copy__23;
  uint64_t v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialIdResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v36;
    os_log_type_t v22 = &v30;
    uint64_t v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v37[5], v31[5], v25[5]);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);

  _Block_object_dispose(&buf, 8);
}

void __104__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialIdResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *)v7 attestations];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    uint64_t v15 = [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *)v7 authorization];
    uint64_t v16 = *(void *)(*(void *)(a1 + 72) + 8);
    id v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;

    BOOL v18 = [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *)v7 errorData];
      id v19 = objc_opt_class();
      id v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      id v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    id v21 = pk_Payment_log();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      uint64_t v23 = pk_Payment_log();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        v24[0] = 0;
        _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v24, 2u);
      }
    }
  }
}

- (void)requestAndStoreExternalizedAuthWithCompletion:(id)a3
{
  void v21[2] = *MEMORY[0x263EF8340];
  id v4 = a3;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    BOOL v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke;
    block[3] = &unk_2644D3FF0;
    void block[4] = self;
    id v19 = v4;
    dispatch_sync(v5, block);

    BOOL v6 = v19;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    uint64_t v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v17 = 0;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v17, 2u);
    }
  }
  if (v4)
  {
    uint64_t v10 = (void *)MEMORY[0x263F087E8];
    uint64_t v11 = *MEMORY[0x263F5C538];
    v20[0] = *MEMORY[0x263F08338];
    uint64_t v12 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v13 = [v12 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v21[0] = v13;
    v20[1] = *MEMORY[0x263F08348];
    uint64_t v14 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v15 = [v14 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v21[1] = v15;
    uint64_t v16 = [NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:2];
    BOOL v6 = [v10 errorWithDomain:v11 code:4 userInfo:v16];

    (*((void (**)(id, void *))v4 + 2))(v4, v6);
    goto LABEL_9;
  }
LABEL_10:
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 40));
      *(_DWORD *)long long buf = 138412290;
      id v29 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target request and store externalized auth with completion %@", buf, 0xCu);
    }
  }
  BOOL v6 = objc_alloc_init(NPKProtoFidoExternalizedAuthRequest);
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v8 = [(NPKProtoFidoExternalizedAuthRequest *)v6 data];
  uint64_t v9 = (void *)[v7 initWithProtobufData:v8 type:99 isResponse:0];

  uint64_t v10 = *(void **)(a1 + 32);
  uint64_t v26 = *MEMORY[0x263F49F08];
  uint64_t v27 = MEMORY[0x263EFFA88];
  uint64_t v11 = [NSDictionary dictionaryWithObjects:&v27 forKeys:&v26 count:1];
  uint64_t v12 = [v10 _sendProtobuf:v9 responseExpected:1 extraOptions:v11];

  if (v12)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v13 = MEMORY[0x223C37380]();
      v24[0] = MEMORY[0x263EF8330];
      v24[1] = 3221225472;
      void v24[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke_830;
      v24[3] = &unk_2644D2B90;
      id v25 = *(id *)(a1 + 40);
      uint64_t v14 = (void *)MEMORY[0x223C37380](v24);
      uint64_t v15 = *(void **)(a1 + 32);
      uint64_t v16 = (void *)MEMORY[0x223C37380](v13);
      [v15 _trackOutstandingRequestWithMessageIdentifier:v12 completionHandler:v16 errorHandler:v14];

LABEL_15:
      goto LABEL_16;
    }
    BOOL v22 = pk_Payment_log();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

    if (v23)
    {
      uint64_t v13 = pk_Payment_log();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v29 = v12;
      id v19 = "Warning: No response expected for message with identifier %@";
      id v20 = v13;
      os_log_type_t v21 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    id v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_ERROR);

    if (v18)
    {
      uint64_t v13 = pk_Payment_log();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v29 = v9;
      id v19 = "Error: No message identifier for protobuf %@";
      id v20 = v13;
      os_log_type_t v21 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v20, v21, v19, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke_830(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
}

- (void)requestAndStoreExternalizedAuthWithCompletionResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target requestAndStoreExternalizedAuthWithCompletionResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__364;
  __int16 v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  BOOL v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletionResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    os_log_type_t v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletionResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoFidoExternalizedAuthResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoFidoExternalizedAuthResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoFidoExternalizedAuthResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoFidoExternalizedAuthResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      uint64_t v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 generateTransactionKeyWithParameters:(id)a4 withCompletion:(id)a5
{
  void v27[2] = *MEMORY[0x263EF8340];
  id v7 = a4;
  id v8 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    uint64_t v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v23 = v7;
    uint64_t v24 = self;
    id v25 = v8;
    dispatch_sync(v9, block);

    uint64_t v10 = v23;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v11 = pk_Payment_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    BOOL v13 = pk_Payment_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)os_log_type_t v21 = 0;
      _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v21, 2u);
    }
  }
  if (v8)
  {
    uint64_t v14 = (void *)MEMORY[0x263F087E8];
    uint64_t v15 = *MEMORY[0x263F5C538];
    v26[0] = *MEMORY[0x263F08338];
    BOOL v16 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    id v17 = [v16 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v27[0] = v17;
    v26[1] = *MEMORY[0x263F08348];
    id v18 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    id v19 = [v18 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v27[1] = v19;
    id v20 = [NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];
    uint64_t v10 = [v14 errorWithDomain:v15 code:4 userInfo:v20];

    (*((void (**)(id, void, void, void, void *))v8 + 2))(v8, 0, 0, 0, v10);
    goto LABEL_9;
  }
LABEL_10:
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke(uint64_t a1)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      BOOL v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      __int16 v31 = v5;
      __int16 v32 = 2112;
      uint64_t v33 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target generate transaction key with parameters %@ completion %@", buf, 0x16u);
    }
  }
  id v7 = objc_alloc_init(NPKProtoGenerateTransactionKeyWithParametersRequest);
  id v8 = [MEMORY[0x263F08910] archivedDataWithRootObject:*(void *)(a1 + 32) requiringSecureCoding:1 error:0];
  [(NPKProtoGenerateTransactionKeyWithParametersRequest *)v7 setParameters:v8];
  id v9 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v10 = [(NPKProtoGenerateTransactionKeyWithParametersRequest *)v7 data];
  uint64_t v11 = (void *)[v9 initWithProtobufData:v10 type:100 isResponse:0];

  BOOL v12 = *(void **)(a1 + 40);
  uint64_t v28 = *MEMORY[0x263F49F80];
  uint64_t v29 = &unk_26D0439E0;
  BOOL v13 = [NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
  uint64_t v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

  if (v14)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v15 = MEMORY[0x223C37380]();
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      void v26[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke_834;
      void v26[3] = &unk_2644D2B90;
      id v27 = *(id *)(a1 + 48);
      BOOL v16 = (void *)MEMORY[0x223C37380](v26);
      id v17 = *(void **)(a1 + 40);
      id v18 = (void *)MEMORY[0x223C37380](v15);
      [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_15:
      goto LABEL_16;
    }
    uint64_t v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      uint64_t v15 = pk_Payment_log();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v31 = v14;
      os_log_type_t v21 = "Warning: No response expected for message with identifier %@";
      uint64_t v22 = v15;
      os_log_type_t v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      uint64_t v15 = pk_Payment_log();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      __int16 v31 = v11;
      os_log_type_t v21 = "Error: No message identifier for protobuf %@";
      uint64_t v22 = v15;
      os_log_type_t v23 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v22, v23, v21, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke_834(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, void, void, id))(v7 + 16))(v7, 0, 0, 0, v3);
  }
}

- (void)generateTransactionKeyWithParametersResponse:(id)a3
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateTransactionKeyWithParametersResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v50 = 0x3032000000;
  id v51 = __Block_byref_object_copy__364;
  __int16 v52 = __Block_byref_object_dispose__365;
  id v53 = 0;
  uint64_t v43 = 0;
  __int16 v44 = &v43;
  uint64_t v45 = 0x3032000000;
  id v46 = __Block_byref_object_copy__23;
  uint64_t v47 = __Block_byref_object_dispose__23;
  id v48 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = &v37;
  uint64_t v39 = 0x3032000000;
  uint64_t v40 = __Block_byref_object_copy__23;
  id v41 = __Block_byref_object_dispose__23;
  id v42 = 0;
  uint64_t v31 = 0;
  __int16 v32 = &v31;
  uint64_t v33 = 0x3032000000;
  uint64_t v34 = __Block_byref_object_copy__23;
  id v35 = __Block_byref_object_dispose__23;
  id v36 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = &v25;
  uint64_t v27 = 0x3032000000;
  uint64_t v28 = __Block_byref_object_copy__23;
  uint64_t v29 = __Block_byref_object_dispose__23;
  id v30 = 0;
  if (v10)
  {
    uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_generateTransactionKeyWithParametersResponse___block_invoke;
    block[3] = &unk_2644D7BF0;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    os_log_type_t v21 = &v43;
    uint64_t v22 = &v37;
    os_log_type_t v23 = &v31;
    uint64_t v24 = &v25;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v44[5], v38[5], v32[5], v26[5]);
  }
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  _Block_object_dispose(&v43, 8);
  _Block_object_dispose(&buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_generateTransactionKeyWithParametersResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoGenerateTransactionKeyWithParametersResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoGenerateTransactionKeyWithParametersResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoGenerateTransactionKeyWithParametersResponse *)v7 transactionKeyIdentifier];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    uint64_t v15 = [(NPKProtoGenerateTransactionKeyWithParametersResponse *)v7 transactionKeyCertChains];
    uint64_t v16 = *(void *)(*(void *)(a1 + 72) + 8);
    id v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;

    uint64_t v18 = [(NPKProtoGenerateTransactionKeyWithParametersResponse *)v7 appletIdentifier];
    uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8);
    BOOL v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    BOOL v21 = [(NPKProtoGenerateTransactionKeyWithParametersResponse *)v7 hasErrorData];
    if (v21)
    {
      v1 = [(NPKProtoGenerateTransactionKeyWithParametersResponse *)v7 errorData];
      uint64_t v22 = objc_opt_class();
      os_log_type_t v23 = NPKSecureUnarchiveObject(v1, v22);
    }
    else
    {
      os_log_type_t v23 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40), v23);
    if (v21)
    {
    }
  }
  else
  {
    uint64_t v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      uint64_t v26 = pk_Payment_log();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27[0] = 0;
        _os_log_impl(&dword_21E92F000, v26, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v27, 2u);
      }
    }
  }
}

- (void)generateSEEncryptionCertificateForSubCredentialId:(id)a3 completion:(id)a4
{
  void v26[2] = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v22 = v6;
    os_log_type_t v23 = self;
    id v24 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v22;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v20 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v20, 2u);
    }
  }
  if (v7)
  {
    uint64_t v13 = (void *)MEMORY[0x263F087E8];
    uint64_t v14 = *MEMORY[0x263F5C538];
    v25[0] = *MEMORY[0x263F08338];
    uint64_t v15 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v16 = [v15 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v26[0] = v16;
    v25[1] = *MEMORY[0x263F08348];
    id v17 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v18 = [v17 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v26[1] = v18;
    uint64_t v19 = [NSDictionary dictionaryWithObjects:v26 forKeys:v25 count:2];
    uint64_t v9 = [v13 errorWithDomain:v14 code:4 userInfo:v19];

    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      id v30 = v5;
      __int16 v31 = 2112;
      __int16 v32 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target generate SE encryption certificate for subcredential ID %@ completion %@", buf, 0x16u);
    }
  }
  id v7 = objc_alloc_init(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest);
  [(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest *)v7 setSubCredentialId:*(void *)(a1 + 32)];
  id v8 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v9 = [(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest *)v7 data];
  uint64_t v10 = (void *)[v8 initWithProtobufData:v9 type:101 isResponse:0];

  BOOL v11 = *(void **)(a1 + 40);
  uint64_t v27 = *MEMORY[0x263F49F08];
  uint64_t v28 = MEMORY[0x263EFFA88];
  uint64_t v12 = [NSDictionary dictionaryWithObjects:&v28 forKeys:&v27 count:1];
  uint64_t v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

  if (v13)
  {
    if (*(void *)(a1 + 48))
    {
      uint64_t v14 = MEMORY[0x223C37380]();
      v25[0] = MEMORY[0x263EF8330];
      v25[1] = 3221225472;
      void v25[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke_837;
      v25[3] = &unk_2644D2B90;
      id v26 = *(id *)(a1 + 48);
      uint64_t v15 = (void *)MEMORY[0x223C37380](v25);
      uint64_t v16 = *(void **)(a1 + 40);
      id v17 = (void *)MEMORY[0x223C37380](v14);
      [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_15:
      goto LABEL_16;
    }
    os_log_type_t v23 = pk_Payment_log();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      uint64_t v14 = pk_Payment_log();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v30 = v13;
      BOOL v20 = "Warning: No response expected for message with identifier %@";
      BOOL v21 = v14;
      os_log_type_t v22 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      uint64_t v14 = pk_Payment_log();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      id v30 = v10;
      BOOL v20 = "Error: No message identifier for protobuf %@";
      BOOL v21 = v14;
      os_log_type_t v22 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v21, v22, v20, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke_837(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)generateSEEncryptionCertificateForSubCredentialIdResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateSEEncryptionCertificateForSubCredentialIdResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  uint64_t v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000;
  __int16 v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __103__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialIdResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    os_log_type_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __103__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialIdResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse *)v7 certificate];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    BOOL v15 = [(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse *)v7 hasErrorData];
    if (v15)
    {
      v1 = [(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse *)v7 errorData];
      uint64_t v16 = objc_opt_class();
      id v17 = NPKSecureUnarchiveObject(v1, v16);
    }
    else
    {
      id v17 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      BOOL v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)deleteKeyMaterialForSubCredentialId:(id)a3
{
  id v4 = a3;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    BOOL v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_deleteKeyMaterialForSubCredentialId___block_invoke;
    block[3] = &unk_2644D2E08;
    BOOL v11 = v4;
    uint64_t v12 = self;
    dispatch_sync(v5, block);

    BOOL v6 = v11;
LABEL_6:

    goto LABEL_7;
  }
  uint64_t v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v9, 2u);
    }
    goto LABEL_6;
  }
LABEL_7:
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_deleteKeyMaterialForSubCredentialId___block_invoke(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      BOOL v19 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target delete key material for subcredential ID %@", buf, 0xCu);
    }
  }
  BOOL v6 = objc_alloc_init(NPKProtoDeleteKeyMaterialForSubCredentialIdRequest);
  [(NPKProtoDeleteKeyMaterialForSubCredentialIdRequest *)v6 setCredentialIdentifier:*(void *)(a1 + 32)];
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v8 = [(NPKProtoDeleteKeyMaterialForSubCredentialIdRequest *)v6 data];
  uint64_t v9 = (void *)[v7 initWithProtobufData:v8 type:102 isResponse:0];

  uint64_t v10 = *(void **)(a1 + 40);
  uint64_t v16 = *MEMORY[0x263F49F08];
  uint64_t v17 = MEMORY[0x263EFFA88];
  BOOL v11 = [NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
  uint64_t v12 = [v10 _sendProtobuf:v9 responseExpected:0 extraOptions:v11];

  if (!v12)
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      BOOL v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        BOOL v19 = v9;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }
    }
  }
}

- (void)addISO18013Blobs:(id)a3 cardType:(int64_t)a4 completion:(id)a5
{
  void v29[2] = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isUnifiedAccessProvisioningSupported])
  {
    uint64_t v10 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke;
    block[3] = &unk_2644D82D0;
    id v24 = v8;
    int64_t v27 = a4;
    uint64_t v25 = self;
    id v26 = v9;
    dispatch_sync(v10, block);

    BOOL v11 = v24;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    BOOL v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)os_log_type_t v22 = 0;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v22, 2u);
    }
  }
  if (v9)
  {
    BOOL v15 = (void *)MEMORY[0x263F087E8];
    uint64_t v16 = *MEMORY[0x263F5C538];
    v28[0] = *MEMORY[0x263F08338];
    uint64_t v17 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    id v18 = [v17 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v29[0] = v18;
    v28[1] = *MEMORY[0x263F08348];
    BOOL v19 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    uint64_t v20 = [v19 localizedStringForKey:@"UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE" value:&stru_26CFEBA18 table:@"NanoPassKitUI-Hydra"];
    v29[1] = v20;
    BOOL v21 = [NSDictionary dictionaryWithObjects:v29 forKeys:v28 count:2];
    BOOL v11 = [v15 errorWithDomain:v16 code:4 userInfo:v21];

    (*((void (**)(id, void *))v9 + 2))(v9, v11);
    goto LABEL_9;
  }
LABEL_10:
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 56);
      id v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412802;
      uint64_t v47 = v5;
      __int16 v48 = 2048;
      uint64_t v49 = v6;
      __int16 v50 = 2112;
      id v51 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target add ISO18013 blobs %@ with card type %ld, completion %@", buf, 0x20u);
    }
  }
  id v8 = objc_alloc_init(NPKProtoAddISO18013BlobsRequest);
  id v9 = objc_alloc_init(MEMORY[0x263EFF980]);
  id v10 = objc_alloc_init(MEMORY[0x263EFF980]);
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v11 = *(id *)(a1 + 32);
  uint64_t v12 = [v11 countByEnumeratingWithState:&v39 objects:v45 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v40;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v40 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void **)(*((void *)&v39 + 1) + 8 * i);
        uint64_t v17 = NPKSecureArchiveObject(v16);
        [v9 addObject:v17];

        id v18 = [*(id *)(a1 + 32) objectForKey:v16];
        [v10 addObject:v18];
      }
      uint64_t v13 = [v11 countByEnumeratingWithState:&v39 objects:v45 count:16];
    }
    while (v13);
  }

  [(NPKProtoAddISO18013BlobsRequest *)v8 setSubcredentialDatas:v9];
  [(NPKProtoAddISO18013BlobsRequest *)v8 setIsoblobs:v10];
  if ((unint64_t)(*(void *)(a1 + 56) - 1) < 4) {
    uint64_t v19 = *(unsigned int *)(a1 + 56);
  }
  else {
    uint64_t v19 = 0;
  }
  [(NPKProtoAddISO18013BlobsRequest *)v8 setCardType:v19];
  id v20 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v21 = [(NPKProtoAddISO18013BlobsRequest *)v8 data];
  os_log_type_t v22 = (void *)[v20 initWithProtobufData:v21 type:107 isResponse:0];

  uint64_t v23 = *(void **)(a1 + 40);
  uint64_t v43 = *MEMORY[0x263F49F08];
  uint64_t v44 = MEMORY[0x263EFFA88];
  id v24 = [NSDictionary dictionaryWithObjects:&v44 forKeys:&v43 count:1];
  uint64_t v25 = [v23 _sendProtobuf:v22 responseExpected:1 extraOptions:v24];

  if (v25)
  {
    if (*(void *)(a1 + 48))
    {
      id v26 = MEMORY[0x223C37380]();
      v37[0] = MEMORY[0x263EF8330];
      v37[1] = 3221225472;
      v37[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke_841;
      void v37[3] = &unk_2644D2B90;
      id v38 = *(id *)(a1 + 48);
      int64_t v27 = (void *)MEMORY[0x223C37380](v37);
      id v28 = *(void **)(a1 + 40);
      uint64_t v29 = (void *)MEMORY[0x223C37380](v26);
      [v28 _trackOutstandingRequestWithMessageIdentifier:v25 completionHandler:v29 errorHandler:v27];

LABEL_25:
      goto LABEL_26;
    }
    id v35 = pk_Payment_log();
    BOOL v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);

    if (v36)
    {
      id v26 = pk_Payment_log();
      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_25;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v47 = v25;
      __int16 v32 = "Warning: No response expected for message with identifier %@";
      uint64_t v33 = v26;
      os_log_type_t v34 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_24;
    }
  }
  else
  {
    id v30 = pk_Payment_log();
    BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);

    if (v31)
    {
      id v26 = pk_Payment_log();
      if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        goto LABEL_25;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v47 = v22;
      __int16 v32 = "Error: No message identifier for protobuf %@";
      uint64_t v33 = v26;
      os_log_type_t v34 = OS_LOG_TYPE_ERROR;
LABEL_24:
      _os_log_impl(&dword_21E92F000, v33, v34, v32, buf, 0xCu);
      goto LABEL_25;
    }
  }
LABEL_26:
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke_841(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
}

- (void)addISO18013BlobsResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target addISO18013BlobsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  id v30 = __Block_byref_object_copy__364;
  BOOL v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  id v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_addISO18013BlobsResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_addISO18013BlobsResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoAddISO18013BlobsResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoAddISO18013BlobsResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoAddISO18013BlobsResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoAddISO18013BlobsResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      uint64_t v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      uint64_t v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (BOOL)areUnifiedAccessPassesSupported
{
  uint64_t v2 = NPKPairedOrPairingDevice();
  id v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"BA0452A1-075E-4E13-B48F-E36DF2F88980"];
  char v4 = [v2 supportsCapability:v3];

  return v4;
}

- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(id)a3 reuseExisting:(BOOL)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    uint64_t v10 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke;
    block[3] = &unk_2644D82F8;
    id v17 = v8;
    BOOL v20 = a4;
    id v18 = self;
    id v19 = v9;
    dispatch_sync(v10, block);

    id v11 = v17;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    uint64_t v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v15, 2u);
    }
  }
  if (v9)
  {
    id v11 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v9 + 2))(v9, 0, v11);
    goto LABEL_9;
  }
LABEL_10:
}

void __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    char v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      if (*(unsigned char *)(a1 + 56)) {
        BOOL v6 = @"YES";
      }
      else {
        BOOL v6 = @"NO";
      }
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412802;
      os_log_type_t v34 = v5;
      __int16 v35 = 2112;
      BOOL v36 = v6;
      __int16 v37 = 2112;
      id v38 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for long term privacy key for credential with group identifier: %@, reuseExisting: %@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoLongTermPrivacyKeyRequest);
    [(NPKProtoLongTermPrivacyKeyRequest *)v8 setCredentialGroupIdentifier:*(void *)(a1 + 32)];
    [(NPKProtoLongTermPrivacyKeyRequest *)v8 setReuseExisting:*(unsigned __int8 *)(a1 + 56)];
    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v10 = [(NPKProtoLongTermPrivacyKeyRequest *)v8 data];
    id v11 = (void *)[v9 initWithProtobufData:v10 type:110 isResponse:0];

    BOOL v12 = *(void **)(a1 + 40);
    uint64_t v31 = *MEMORY[0x263F49F80];
    id v32 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v32 forKeys:&v31 count:1];
    uint64_t v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 48))
      {
        uint64_t v15 = MEMORY[0x223C37380]();
        v29[0] = MEMORY[0x263EF8330];
        v29[1] = 3221225472;
        void v29[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke_847;
        void v29[3] = &unk_2644D2B90;
        id v30 = *(id *)(a1 + 48);
        BOOL v16 = (void *)MEMORY[0x223C37380](v29);
        id v17 = *(void **)(a1 + 40);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_25:
        goto LABEL_26;
      }
      id v27 = pk_Payment_log();
      BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

      if (v28)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_25;
        }
        *(_DWORD *)long long buf = 138412290;
        os_log_type_t v34 = v14;
        uint64_t v24 = "Warning: No response expected for message with identifier %@";
        uint64_t v25 = v15;
        os_log_type_t v26 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v22 = pk_Payment_log();
      BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

      if (v23)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_25;
        }
        *(_DWORD *)long long buf = 138412290;
        os_log_type_t v34 = v11;
        uint64_t v24 = "Error: No message identifier for protobuf %@";
        uint64_t v25 = v15;
        os_log_type_t v26 = OS_LOG_TYPE_ERROR;
LABEL_24:
        _os_log_impl(&dword_21E92F000, v25, v26, v24, buf, 0xCu);
        goto LABEL_25;
      }
    }
LABEL_26:

    goto LABEL_27;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    BOOL v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to access long term privacy key without specified group identifier", buf, 2u);
    }
  }
  if (*(void *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoLongTermPrivacyKeyRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_27:
  }
}

void __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke_847(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  char v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)longTermPrivacyKeyForCredentialGroupIdentifierResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target longTermPrivacyKeyForCredentialGroupIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  id v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  os_log_type_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoLongTermPrivacyKeyResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoLongTermPrivacyKeyResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoLongTermPrivacyKeyResponse *)v7 keyData];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    BOOL v15 = [(NPKProtoLongTermPrivacyKeyResponse *)v7 hasErrorData];
    if (v15)
    {
      v1 = [(NPKProtoLongTermPrivacyKeyResponse *)v7 errorData];
      BOOL v16 = objc_opt_class();
      id v17 = NPKSecureUnarchiveObject(v1, v16);
    }
    else
    {
      id v17 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      BOOL v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)retrieveShareInvitationForMailboxAddress:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    BOOL v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke(uint64_t a1)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138478083;
      uint64_t v33 = v5;
      __int16 v34 = 2112;
      __int16 v35 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to retrieve share invitation for mailbox address: %{private}@, completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoRetrieveShareInvitationForMailboxAddressRequest);
    [(NPKProtoRetrieveShareInvitationForMailboxAddressRequest *)v7 setMailboxAddress:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v9 = [(NPKProtoRetrieveShareInvitationForMailboxAddressRequest *)v7 data];
    uint64_t v10 = (void *)[v8 initWithProtobufData:v9 type:111 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v30 = *MEMORY[0x263F49F80];
    uint64_t v31 = &unk_26D0439F0;
    uint64_t v12 = [NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
    uint64_t v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12 priority:300];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        uint64_t v14 = MEMORY[0x223C37380]();
        v28[0] = MEMORY[0x263EF8330];
        v28[1] = 3221225472;
        void v28[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke_850;
        v28[3] = &unk_2644D2B90;
        id v29 = *(id *)(a1 + 48);
        id v15 = (void *)MEMORY[0x223C37380](v28);
        BOOL v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      os_log_type_t v26 = pk_Payment_log();
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

      if (v27)
      {
        uint64_t v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v33 = v13;
        uint64_t v23 = "Warning: No response expected for message with identifier %@";
        uint64_t v24 = v14;
        os_log_type_t v25 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      BOOL v21 = pk_Payment_log();
      BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

      if (v22)
      {
        uint64_t v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v33 = v10;
        uint64_t v23 = "Error: No message identifier for protobuf %@";
        uint64_t v24 = v14;
        os_log_type_t v25 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v24, v25, v23, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  id v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    BOOL v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to retrieve share invitation without specified mailbox address", buf, 2u);
    }
  }
  if (*(void *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    id v7 = (NPKProtoRetrieveShareInvitationForMailboxAddressRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_24:
  }
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke_850(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)retrieveShareInvitationForMailboxAddressResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target retrieveShareInvitationForMailboxAddressResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  id v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  os_log_type_t v26 = __Block_byref_object_copy__23;
  BOOL v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddressResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddressResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoRetrieveShareInvitationForMailboxAddressResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoRetrieveShareInvitationForMailboxAddressResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoRetrieveShareInvitationForMailboxAddressResponse *)v7 hasInvitationData];
    if (v12)
    {
      v1 = [(NPKProtoRetrieveShareInvitationForMailboxAddressResponse *)v7 invitationData];
      BOOL v13 = objc_opt_class();
      uint64_t v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoRetrieveShareInvitationForMailboxAddressResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoRetrieveShareInvitationForMailboxAddressResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)revokeShareForPassIdentifier:(id)a3 share:(id)a4 shouldCascade:(BOOL)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    BOOL v13 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke;
    block[3] = &unk_2644D8320;
    id v20 = v11;
    id v21 = v10;
    BOOL v24 = a5;
    BOOL v22 = self;
    id v23 = v12;
    dispatch_sync(v13, block);

    uint64_t v14 = v20;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v15 = pk_Payment_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    id v17 = pk_Payment_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v18 = 0;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v18, 2u);
    }
  }
  if (v12)
  {
    uint64_t v14 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v12 + 2))(v12, 0, v14);
    goto LABEL_9;
  }
LABEL_10:
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke(uint64_t a1)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      if (*(unsigned char *)(a1 + 64)) {
        uint64_t v7 = @"YES";
      }
      else {
        uint64_t v7 = @"NO";
      }
      int v8 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138413058;
      id v38 = v5;
      __int16 v39 = 2112;
      uint64_t v40 = v6;
      __int16 v41 = 2112;
      long long v42 = v7;
      __int16 v43 = 2112;
      uint64_t v44 = v8;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to revoke share %@ for pass identifier: %@ cascading: %@, completion: %@", buf, 0x2Au);
    }
  }
  if (*(void *)(a1 + 40) && *(void *)(a1 + 32))
  {
    uint64_t v9 = objc_alloc_init(NPKProtoRevokeShareForPassIdentifierRequest);
    [(NPKProtoRevokeShareForPassIdentifierRequest *)v9 setPassIdentifier:*(void *)(a1 + 40)];
    id v10 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoRevokeShareForPassIdentifierRequest *)v9 setShareData:v10];

    [(NPKProtoRevokeShareForPassIdentifierRequest *)v9 setShouldCascade:*(unsigned __int8 *)(a1 + 64)];
    id v11 = objc_alloc(MEMORY[0x263F4A228]);
    id v12 = [(NPKProtoRevokeShareForPassIdentifierRequest *)v9 data];
    BOOL v13 = (void *)[v11 initWithProtobufData:v12 type:112 isResponse:0];

    uint64_t v14 = *(void **)(a1 + 48);
    uint64_t v35 = *MEMORY[0x263F49F80];
    uint64_t v36 = &unk_26D0439E0;
    uint64_t v15 = [NSDictionary dictionaryWithObjects:&v36 forKeys:&v35 count:1];
    BOOL v16 = [v14 _sendProtobuf:v13 responseExpected:1 extraOptions:v15];

    if (v16)
    {
      if (*(void *)(a1 + 56))
      {
        id v17 = MEMORY[0x223C37380]();
        v33[0] = MEMORY[0x263EF8330];
        v33[1] = 3221225472;
        void v33[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke_854;
        void v33[3] = &unk_2644D2B90;
        id v34 = *(id *)(a1 + 56);
        BOOL v18 = (void *)MEMORY[0x223C37380](v33);
        id v19 = *(void **)(a1 + 48);
        id v20 = (void *)MEMORY[0x223C37380](v17);
        [v19 _trackOutstandingRequestWithMessageIdentifier:v16 completionHandler:v20 errorHandler:v18];

LABEL_26:
        goto LABEL_27;
      }
      uint64_t v31 = pk_Payment_log();
      BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        id v17 = pk_Payment_log();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_26;
        }
        *(_DWORD *)long long buf = 138412290;
        id v38 = v16;
        id v28 = "Warning: No response expected for message with identifier %@";
        uint64_t v29 = v17;
        os_log_type_t v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_25;
      }
    }
    else
    {
      os_log_type_t v26 = pk_Payment_log();
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        id v17 = pk_Payment_log();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          goto LABEL_26;
        }
        *(_DWORD *)long long buf = 138412290;
        id v38 = v13;
        id v28 = "Error: No message identifier for protobuf %@";
        uint64_t v29 = v17;
        os_log_type_t v30 = OS_LOG_TYPE_ERROR;
LABEL_25:
        _os_log_impl(&dword_21E92F000, v29, v30, v28, buf, 0xCu);
        goto LABEL_26;
      }
    }
LABEL_27:

    goto LABEL_28;
  }
  id v21 = pk_General_log();
  BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

  if (v22)
  {
    id v23 = pk_General_log();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      BOOL v24 = *(void **)(a1 + 32);
      uint64_t v25 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      id v38 = v24;
      __int16 v39 = 2112;
      uint64_t v40 = v25;
      _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_ERROR, "Error: Unable to revoke share without specified share (%@) or pass identifier (%@)", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 56))
  {
    PKDisplayableErrorForCommonType();
    uint64_t v9 = (NPKProtoRevokeShareForPassIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
LABEL_28:
  }
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke_854(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)revokeShareForPassIdentifierResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target revokeShareForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  os_log_type_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x3032000000;
  os_log_type_t v26 = __Block_byref_object_copy__23;
  BOOL v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoRevokeShareForPassIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoRevokeShareForPassIdentifierResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoRevokeShareForPassIdentifierResponse *)v7 success];
    BOOL v12 = [(NPKProtoRevokeShareForPassIdentifierResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoRevokeShareForPassIdentifierResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      uint64_t v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)paymentWebService:(id)a3 passSharesForCredentialIdentifier:(id)a4 completion:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    uint64_t v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v7;
    BOOL v16 = self;
    id v17 = v8;
    dispatch_sync(v9, block);
  }
  else
  {
    uint64_t v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      BOOL v12 = pk_Payment_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v13 = 0;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
      }
    }
    if (v8) {
      (*((void (**)(id, void))v8 + 2))(v8, 0);
    }
  }
}

void __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      BOOL v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      uint64_t v35 = v5;
      __int16 v36 = 2112;
      id v37 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for pass shares for credential identifier: %@, completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoPassSharesForCredentialIdentifierRequest);
    [(NPKProtoPassSharesForCredentialIdentifierRequest *)v7 setCredentialIdentifier:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v9 = [(NPKProtoPassSharesForCredentialIdentifierRequest *)v7 data];
    uint64_t v10 = (void *)[v8 initWithProtobufData:v9 type:113 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v32 = *MEMORY[0x263F49F80];
    uint64_t v33 = &unk_26D0439E0;
    BOOL v12 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
    BOOL v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        uint64_t v14 = MEMORY[0x223C37380]();
        v30[0] = MEMORY[0x263EF8330];
        v30[1] = 3221225472;
        void v30[2] = __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke_857;
        void v30[3] = &unk_2644D2B90;
        id v31 = *(id *)(a1 + 48);
        id v15 = (void *)MEMORY[0x223C37380](v30);
        BOOL v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      id v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        uint64_t v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v13;
        uint64_t v25 = "Warning: No response expected for message with identifier %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v23 = pk_Payment_log();
      BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        uint64_t v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v10;
        uint64_t v25 = "Error: No message identifier for protobuf %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  id v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    id v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v21 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v35 = v21;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch pass shares without credential identifier (%@)", buf, 0xCu);
    }
  }
  uint64_t v22 = *(void *)(a1 + 48);
  if (v22) {
    (*(void (**)(uint64_t, void))(v22 + 16))(v22, 0);
  }
}

void __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke_857(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)passSharesForCredentialIdentifierResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target passSharesForCredentialIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  os_log_type_t v30 = __Block_byref_object_copy__364;
  id v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  os_log_type_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      uint64_t v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoPassSharesForCredentialIdentifierResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoPassSharesForCredentialIdentifierResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithCapacity:", -[NSObject sharesDatasCount](v6, "sharesDatasCount"));
    BOOL v12 = [v6 sharesDatas];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke_2;
    void v20[3] = &unk_2644D7830;
    id v21 = v11;
    id v13 = v11;
    [v12 enumerateObjectsUsingBlock:v20];

    uint64_t v14 = [v13 copy];
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  else
  {
    id v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (!v18) {
      goto LABEL_4;
    }
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
    }
  }

LABEL_4:
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  BOOL v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    BOOL v5 = v6;
  }
}

- (void)displayableSharesForPassIdentifier:(id)a3 completion:(id)a4
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = pk_General_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_General_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v11 = (void *)MEMORY[0x223C37380](v7);
      *(_DWORD *)long long buf = 138412546;
      id v19 = v6;
      __int16 v20 = 2112;
      id v21 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable shares for pass identifier: %@, completion: %@\nChecking for displayable shares from the corresponding companion pass first...", buf, 0x16u);
    }
  }
  id v12 = objc_alloc_init(MEMORY[0x263F5C0A8]);
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  void v15[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifier_completion___block_invoke;
  v15[3] = &unk_2644D8348;
  id v16 = v6;
  id v17 = v7;
  void v15[4] = self;
  id v13 = v6;
  id v14 = v7;
  [v12 displayableSharesForPassIdentifier:v13 completion:v15];
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifier_completion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = pk_General_log();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      id v6 = pk_General_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = 138412290;
        id v9 = v3;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Returning displayable shares (%@) for companion pass", (uint8_t *)&v8, 0xCu);
      }
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7) {
      (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
    }
  }
  else
  {
    [*(id *)(a1 + 32) _displayableSharesForPassIdentifier:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
}

- (void)_displayableSharesForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v14 = v6;
    uint64_t v15 = self;
    id v16 = v7;
    dispatch_sync(v8, block);
  }
  else
  {
    id v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      BOOL v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v12 = 0;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }
    }
    if (v7) {
      (*((void (**)(id, void))v7 + 2))(v7, 0);
    }
  }
}

void __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      uint64_t v35 = v5;
      __int16 v36 = 2112;
      id v37 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable shares from watch for pass identifier: %@, completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoDisplayableSharesForPassIdentifierRequest);
    [(NPKProtoDisplayableSharesForPassIdentifierRequest *)v7 setPassIdentifier:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    id v9 = [(NPKProtoDisplayableSharesForPassIdentifierRequest *)v7 data];
    BOOL v10 = (void *)[v8 initWithProtobufData:v9 type:114 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v32 = *MEMORY[0x263F49F80];
    uint64_t v33 = &unk_26D0439E0;
    id v12 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
    id v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        id v14 = MEMORY[0x223C37380]();
        v30[0] = MEMORY[0x263EF8330];
        v30[1] = 3221225472;
        void v30[2] = __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke_861;
        void v30[3] = &unk_2644D2B90;
        id v31 = *(id *)(a1 + 48);
        uint64_t v15 = (void *)MEMORY[0x223C37380](v30);
        id v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      id v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v13;
        uint64_t v25 = "Warning: No response expected for message with identifier %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v23 = pk_Payment_log();
      BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v10;
        uint64_t v25 = "Error: No message identifier for protobuf %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  BOOL v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    __int16 v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v21 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v35 = v21;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch displayable shares without pass identifier (%@)", buf, 0xCu);
    }
  }
  uint64_t v22 = *(void *)(a1 + 48);
  if (v22) {
    (*(void (**)(uint64_t, void))(v22 + 16))(v22, 0);
  }
}

void __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke_861(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)displayableSharesForPassIdentifierResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target displayableSharesForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  os_log_type_t v30 = __Block_byref_object_copy__364;
  id v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  os_log_type_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoDisplayableSharesForPassIdentifierResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoDisplayableSharesForPassIdentifierResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithCapacity:", -[NSObject sharesDatasCount](v6, "sharesDatasCount"));
    id v12 = [v6 sharesDatas];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke_2;
    void v20[3] = &unk_2644D7830;
    id v21 = v11;
    id v13 = v11;
    [v12 enumerateObjectsUsingBlock:v20];

    uint64_t v14 = [v13 copy];
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  else
  {
    id v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (!v18) {
      goto LABEL_4;
    }
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
    }
  }

LABEL_4:
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  BOOL v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    BOOL v5 = v6;
  }
}

- (void)displayableEntitlementsForPassIdentifier:(id)a3 completion:(id)a4
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = pk_General_log();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    uint64_t v10 = pk_General_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v11 = (void *)MEMORY[0x223C37380](v7);
      *(_DWORD *)long long buf = 138412546;
      id v19 = v6;
      __int16 v20 = 2112;
      id v21 = v11;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable entitlements for pass identifier: %@, completion: %@\nChecking for displayable entitlements from the corresponding companion pass first...", buf, 0x16u);
    }
  }
  id v12 = objc_alloc_init(MEMORY[0x263F5C0A8]);
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  void v15[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifier_completion___block_invoke;
  v15[3] = &unk_2644D8348;
  id v16 = v6;
  id v17 = v7;
  void v15[4] = self;
  id v13 = v6;
  id v14 = v7;
  [v12 displayableEntitlementsForPassIdentifier:v13 completion:v15];
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifier_completion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = pk_General_log();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      id v6 = pk_General_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = 138412290;
        id v9 = v3;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Returning displayable entitlements (%@) for companion pass", (uint8_t *)&v8, 0xCu);
      }
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7) {
      (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
    }
  }
  else
  {
    [*(id *)(a1 + 32) _displayableEntitlementsForPassIdentifier:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
}

- (void)_displayableEntitlementsForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v14 = v6;
    uint64_t v15 = self;
    id v16 = v7;
    dispatch_sync(v8, block);
  }
  else
  {
    id v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      BOOL v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v12 = 0;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }
    }
    if (v7) {
      (*((void (**)(id, void))v7 + 2))(v7, 0);
    }
  }
}

void __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      uint64_t v35 = v5;
      __int16 v36 = 2112;
      id v37 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable entitlements from watch for pass identifier: %@, completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoDisplayableEntitlementsForPassIdentifierRequest);
    [(NPKProtoDisplayableEntitlementsForPassIdentifierRequest *)v7 setPassIdentifier:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    id v9 = [(NPKProtoDisplayableEntitlementsForPassIdentifierRequest *)v7 data];
    BOOL v10 = (void *)[v8 initWithProtobufData:v9 type:115 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v32 = *MEMORY[0x263F49F80];
    uint64_t v33 = &unk_26D0439E0;
    id v12 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
    id v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        id v14 = MEMORY[0x223C37380]();
        v30[0] = MEMORY[0x263EF8330];
        v30[1] = 3221225472;
        void v30[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke_864;
        void v30[3] = &unk_2644D2B90;
        id v31 = *(id *)(a1 + 48);
        uint64_t v15 = (void *)MEMORY[0x223C37380](v30);
        id v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      id v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v13;
        uint64_t v25 = "Warning: No response expected for message with identifier %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v23 = pk_Payment_log();
      BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v10;
        uint64_t v25 = "Error: No message identifier for protobuf %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  BOOL v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    __int16 v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v21 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v35 = v21;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch displayable entitlements without pass identifier (%@)", buf, 0xCu);
    }
  }
  uint64_t v22 = *(void *)(a1 + 48);
  if (v22) {
    (*(void (**)(uint64_t, void))(v22 + 16))(v22, 0);
  }
}

void __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke_864(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)displayableEntitlementsForPassIdentifierResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target displayableEntitlementsForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  os_log_type_t v30 = __Block_byref_object_copy__364;
  id v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  os_log_type_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoDisplayableEntitlementsForPassIdentifierResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoDisplayableEntitlementsForPassIdentifierResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithCapacity:", -[NSObject entitlementsDatasCount](v6, "entitlementsDatasCount"));
    id v12 = [v6 entitlementsDatas];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke_2;
    void v20[3] = &unk_2644D7830;
    id v21 = v11;
    id v13 = v11;
    [v12 enumerateObjectsUsingBlock:v20];

    uint64_t v14 = [v13 copy];
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  else
  {
    id v17 = pk_Payment_log();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (!v18) {
      goto LABEL_4;
    }
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
    }
  }

LABEL_4:
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  BOOL v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    BOOL v5 = v6;
  }
}

- (void)prewarmCreateShareForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v14 = v6;
    uint64_t v15 = self;
    id v16 = v7;
    dispatch_sync(v8, block);
  }
  else
  {
    uint64_t v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      BOOL v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v12 = 0;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }
    }
    if (v7) {
      (*((void (**)(id, void))v7 + 2))(v7, 0);
    }
  }
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      uint64_t v35 = v5;
      __int16 v36 = 2112;
      id v37 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to prewarm share creation for pass identifier: %@, completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoPrewarmCreateShareForPassIdentifierRequest);
    [(NPKProtoPrewarmCreateShareForPassIdentifierRequest *)v7 setPassIdentifier:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v9 = [(NPKProtoPrewarmCreateShareForPassIdentifierRequest *)v7 data];
    BOOL v10 = (void *)[v8 initWithProtobufData:v9 type:127 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v32 = *MEMORY[0x263F49F80];
    uint64_t v33 = &unk_26D0439E0;
    id v12 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
    id v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        id v14 = MEMORY[0x223C37380]();
        v30[0] = MEMORY[0x263EF8330];
        v30[1] = 3221225472;
        void v30[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke_868;
        void v30[3] = &unk_2644D2B90;
        id v31 = *(id *)(a1 + 48);
        uint64_t v15 = (void *)MEMORY[0x223C37380](v30);
        id v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      id v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v13;
        uint64_t v25 = "Warning: No response expected for message with identifier %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v23 = pk_Payment_log();
      BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v10;
        uint64_t v25 = "Error: No message identifier for protobuf %@";
        os_log_type_t v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  BOOL v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    __int16 v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v21 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v35 = v21;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to prewarm share without a pass identifier (%@)", buf, 0xCu);
    }
  }
  uint64_t v22 = *(void *)(a1 + 48);
  if (v22) {
    (*(void (**)(uint64_t, void))(v22 + 16))(v22, 0);
  }
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke_868(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)prewarmCreateShareForPassIdentifierResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target prewarmCreateShareForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  BOOL v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      id v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __89__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoPrewarmCreateShareForPassIdentifierResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoPrewarmCreateShareForPassIdentifierResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoPrewarmCreateShareForPassIdentifierResponse *)v6 success];
  }
  else
  {
    BOOL v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_Payment_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }
    }
  }
}

- (void)createShareForPartialShareInvitation:(id)a3 authorization:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    __int16 v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    BOOL v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v16, 2u);
    }
  }
  if (v10)
  {
    BOOL v12 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v10 + 2))(v10, 0, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138412802;
      __int16 v36 = v5;
      __int16 v37 = 2112;
      uint64_t v38 = v6;
      __int16 v39 = 2112;
      uint64_t v40 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to create share for partial share invitation: %@, authorization: %@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoCreateShareForPartialShareInvitationRequest);
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoCreateShareForPartialShareInvitationRequest *)v8 setInviteData:v9];

    [(NPKProtoCreateShareForPartialShareInvitationRequest *)v8 setAuthorizationData:*(void *)(a1 + 40)];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v11 = [(NPKProtoCreateShareForPartialShareInvitationRequest *)v8 data];
    BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:116 isResponse:0];

    BOOL v13 = *(void **)(a1 + 48);
    uint64_t v33 = *MEMORY[0x263F49F80];
    uint64_t v34 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    uint64_t v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 56))
      {
        id v16 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke_871;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 56);
        id v17 = (void *)MEMORY[0x223C37380](v31);
        id v18 = *(void **)(a1 + 48);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_22:
        goto LABEL_23;
      }
      BOOL v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        id v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v36 = v15;
        os_log_type_t v26 = "Warning: No response expected for message with identifier %@";
        uint64_t v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        id v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v36 = v12;
        os_log_type_t v26 = "Error: No message identifier for protobuf %@";
        uint64_t v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  __int16 v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    uint64_t v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      __int16 v36 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to create share without a partial share invitation (%@)", buf, 0xCu);
    }
  }
  if (*(void *)(a1 + 56))
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoCreateShareForPartialShareInvitationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
LABEL_24:
  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke_871(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v7 = PKDisplayableErrorForCommonType();
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)createShareForPartialShareInvitationResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target createShareForPartialShareInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  os_log_type_t v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitationResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCreateShareForPartialShareInvitationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCreateShareForPartialShareInvitationResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCreateShareForPartialShareInvitationResponse *)v7 hasShareURLData];
    if (v12)
    {
      v1 = [(NPKProtoCreateShareForPartialShareInvitationResponse *)v7 shareURLData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoCreateShareForPartialShareInvitationResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoCreateShareForPartialShareInvitationResponse *)v7 errorData];
      id v19 = objc_opt_class();
      __int16 v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      __int16 v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)checkInvitationStatusForMailboxAddress:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    BOOL v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke(uint64_t a1)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138478083;
      uint64_t v33 = v5;
      __int16 v34 = 2112;
      uint64_t v35 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to check invitation status for mailbox address: %{private}@, completion: %@", buf, 0x16u);
    }
  }
  if ([*(id *)(a1 + 32) length])
  {
    id v7 = objc_alloc_init(NPKProtoCheckInvitationStatusForMailboxAddressRequest);
    [(NPKProtoCheckInvitationStatusForMailboxAddressRequest *)v7 setMailboxAddress:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v9 = [(NPKProtoCheckInvitationStatusForMailboxAddressRequest *)v7 data];
    uint64_t v10 = (void *)[v8 initWithProtobufData:v9 type:123 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v30 = *MEMORY[0x263F49F80];
    uint64_t v31 = &unk_26D0439E0;
    BOOL v12 = [NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
    BOOL v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        BOOL v14 = MEMORY[0x223C37380]();
        v28[0] = MEMORY[0x263EF8330];
        v28[1] = 3221225472;
        void v28[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke_875;
        v28[3] = &unk_2644D2B90;
        id v29 = *(id *)(a1 + 48);
        id v15 = (void *)MEMORY[0x223C37380](v28);
        BOOL v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      os_log_type_t v26 = pk_Payment_log();
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

      if (v27)
      {
        BOOL v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v33 = v13;
        uint64_t v23 = "Warning: No response expected for message with identifier %@";
        uint64_t v24 = v14;
        os_log_type_t v25 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      BOOL v21 = pk_Payment_log();
      BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

      if (v22)
      {
        BOOL v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v33 = v10;
        uint64_t v23 = "Error: No message identifier for protobuf %@";
        uint64_t v24 = v14;
        os_log_type_t v25 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v24, v25, v23, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  BOOL v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    __int16 v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch invitation status without mailbox address", buf, 2u);
    }
  }
  if (*(void *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    id v7 = (NPKProtoCheckInvitationStatusForMailboxAddressRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_24:
  }
}

void __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke_875(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = PKDisplayableErrorForCommonType();
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)checkInvitationStatusForMailboxAddressResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target checkInvitationStatusForMailboxAddressResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  os_log_type_t v26 = __Block_byref_object_copy__23;
  BOOL v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddressResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddressResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCheckInvitationStatusForMailboxAddressResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoCheckInvitationStatusForMailboxAddressResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoCheckInvitationStatusForMailboxAddressResponse *)v7 valid];
    BOOL v12 = [(NPKProtoCheckInvitationStatusForMailboxAddressResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoCheckInvitationStatusForMailboxAddressResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)statusForShareableCredentials:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    BOOL v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void, void *))v7 + 2))(v7, 0, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke(uint64_t a1)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412546;
      uint64_t v41 = v5;
      __int16 v42 = 2112;
      __int16 v43 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for status for shareable credentials: %@, completion: %@", buf, 0x16u);
    }
  }
  if ([*(id *)(a1 + 32) count])
  {
    id v7 = objc_alloc_init(NPKProtoStatusForShareableCredentialsRequest);
    int v8 = *(void **)(a1 + 32);
    v36[0] = MEMORY[0x263EF8330];
    v36[1] = 3221225472;
    void v36[2] = __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_878;
    void v36[3] = &unk_2644D8370;
    uint64_t v9 = v7;
    id v37 = v9;
    [v8 enumerateObjectsUsingBlock:v36];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v11 = [(NPKProtoStatusForShareableCredentialsRequest *)v9 data];
    BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:117 isResponse:0];

    BOOL v13 = *(void **)(a1 + 40);
    uint64_t v38 = *MEMORY[0x263F49F80];
    id v39 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v39 forKeys:&v38 count:1];
    id v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 48))
      {
        BOOL v16 = MEMORY[0x223C37380]();
        uint64_t v31 = MEMORY[0x263EF8330];
        uint64_t v32 = 3221225472;
        uint64_t v33 = __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_2;
        uint64_t v34 = &unk_2644D2B90;
        id v35 = *(id *)(a1 + 48);
        id v17 = (void *)MEMORY[0x223C37380](&v31);
        id v18 = *(void **)(a1 + 40);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17, v31, v32, v33, v34);

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v41 = v15;
        os_log_type_t v26 = "Warning: No response expected for message with identifier %@";
        BOOL v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v41 = v12;
        os_log_type_t v26 = "Error: No message identifier for protobuf %@";
        BOOL v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  __int16 v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    BOOL v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v41 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to fetch credential status without credentials (%@)", buf, 0xCu);
    }
  }
  if (*(void *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    uint64_t v9 = (NPKProtoStatusForShareableCredentialsRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_24:
  }
}

void __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_878(uint64_t a1, void *a2)
{
  BOOL v3 = NPKSecureArchiveObject(a2);
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addShareableCredentialsData:v3];
    BOOL v3 = v4;
  }
}

void __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = PKDisplayableErrorForCommonType();
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)statusForShareableCredentialsResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target statusForShareableCredentialsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  __int16 v42 = __Block_byref_object_copy__364;
  __int16 v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v36 = 0;
  id v37 = &v36;
  uint64_t v38 = 0x2020000000;
  uint64_t v39 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x3032000000;
  uint64_t v33 = __Block_byref_object_copy__23;
  uint64_t v34 = __Block_byref_object_dispose__23;
  id v35 = 0;
  uint64_t v24 = 0;
  BOOL v25 = &v24;
  uint64_t v26 = 0x3032000000;
  BOOL v27 = __Block_byref_object_copy__23;
  os_log_type_t v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v36;
    BOOL v22 = &v30;
    uint64_t v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v37[3], v31[5], v25[5]);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoStatusForShareableCredentialsResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoStatusForShareableCredentialsResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    unsigned int v12 = [v7 aggregateStatus];
    if (v12 <= 4) {
      *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v12;
    }
    BOOL v13 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithCapacity:", -[NSObject updatedCredentialsDatasCount](v7, "updatedCredentialsDatasCount"));
    BOOL v14 = [v7 updatedCredentialsDatas];
    v25[0] = MEMORY[0x263EF8330];
    v25[1] = 3221225472;
    void v25[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke_2;
    v25[3] = &unk_2644D7830;
    id v15 = v13;
    id v26 = v15;
    [v14 enumerateObjectsUsingBlock:v25];

    uint64_t v16 = [v15 copy];
    uint64_t v17 = *(void *)(*(void *)(a1 + 72) + 8);
    id v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v16;

    int v19 = [v7 hasErrorData];
    if (v19)
    {
      v1 = [v7 errorData];
      __int16 v20 = objc_opt_class();
      BOOL v21 = NPKSecureUnarchiveObject(v1, v20);
    }
    else
    {
      BOOL v21 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v21);
    if (v19)
    {
    }
LABEL_13:

    goto LABEL_14;
  }
  BOOL v22 = pk_Payment_log();
  BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

  if (v23)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v24, 2u);
    }
    goto LABEL_13;
  }
LABEL_14:
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  BOOL v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    BOOL v5 = v6;
  }
}

- (void)prepareProvisioningTarget:(id)a3 checkFamilyCircle:(BOOL)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    uint64_t v10 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke;
    block[3] = &unk_2644D82F8;
    id v17 = v8;
    BOOL v20 = a4;
    id v18 = self;
    id v19 = v9;
    dispatch_sync(v10, block);

    BOOL v11 = v17;
LABEL_9:

    goto LABEL_10;
  }
  unsigned int v12 = pk_Payment_log();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    BOOL v14 = pk_Payment_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v15 = 0;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v15, 2u);
    }
  }
  if (v9)
  {
    BOOL v11 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void, void *))v9 + 2))(v9, 0, 0, v11);
    goto LABEL_9;
  }
LABEL_10:
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      if (*(unsigned char *)(a1 + 56)) {
        id v6 = @"YES";
      }
      else {
        id v6 = @"NO";
      }
      id v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138412802;
      uint64_t v36 = v5;
      __int16 v37 = 2112;
      uint64_t v38 = v6;
      __int16 v39 = 2112;
      uint64_t v40 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to prepare provisioning target: %@, checkingFamilyCircle: %@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoPrepareProvisioningTargetRequest);
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoPrepareProvisioningTargetRequest *)v8 setTargetData:v9];

    [(NPKProtoPrepareProvisioningTargetRequest *)v8 setCheckFamilyCircle:*(unsigned __int8 *)(a1 + 56)];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v11 = [(NPKProtoPrepareProvisioningTargetRequest *)v8 data];
    unsigned int v12 = (void *)[v10 initWithProtobufData:v11 type:118 isResponse:0];

    BOOL v13 = *(void **)(a1 + 40);
    uint64_t v33 = *MEMORY[0x263F49F80];
    uint64_t v34 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    id v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 48))
      {
        uint64_t v16 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke_883;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 48);
        id v17 = (void *)MEMORY[0x223C37380](v31);
        id v18 = *(void **)(a1 + 40);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_25:
        goto LABEL_26;
      }
      id v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        uint64_t v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_25;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v15;
        id v26 = "Warning: No response expected for message with identifier %@";
        BOOL v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        uint64_t v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_25;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v12;
        id v26 = "Error: No message identifier for protobuf %@";
        BOOL v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_24:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_25;
      }
    }
LABEL_26:

    goto LABEL_27;
  }
  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    BOOL v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      BOOL v23 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v36 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to prepare provisioning target without a provisioning target (%@)", buf, 0xCu);
    }
  }
  if (*(void *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoPrepareProvisioningTargetRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_27:
  }
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke_883(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = PKDisplayableErrorForCommonType();
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)prepareProvisioningTargetResponse:(id)a3
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target prepareProvisioningTargetResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v41 = 0x3032000000;
  __int16 v42 = __Block_byref_object_copy__364;
  __int16 v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v34 = 0;
  id v35 = &v34;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__23;
  uint64_t v38 = __Block_byref_object_dispose__23;
  id v39 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x2020000000;
  char v33 = 0;
  uint64_t v24 = 0;
  BOOL v25 = &v24;
  uint64_t v26 = 0x3032000000;
  BOOL v27 = __Block_byref_object_copy__23;
  os_log_type_t v28 = __Block_byref_object_dispose__23;
  id v29 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTargetResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v34;
    BOOL v22 = &v30;
    BOOL v23 = &v24;
    dispatch_sync(v11, block);
  }
  else
  {
    unsigned int v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(v15 + 16))(v15, v35[5], *((unsigned __int8 *)v31 + 24), v25[5]);
  }
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);

  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTargetResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoPrepareProvisioningTargetResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    id v7 = [(NPKProtoPrepareProvisioningTargetResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoPrepareProvisioningTargetResponse *)v7 hasEncryptedTargetData];
    if (v12)
    {
      v1 = [(NPKProtoPrepareProvisioningTargetResponse *)v7 encryptedTargetData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [(NPKProtoPrepareProvisioningTargetResponse *)v7 wasFamilyCircle];
    BOOL v18 = [(NPKProtoPrepareProvisioningTargetResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoPrepareProvisioningTargetResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)cacheSharingMessageFromMailboxAddress:(id)a3 message:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_cacheSharingMessageFromMailboxAddress_message___block_invoke;
    block[3] = &unk_2644D31B0;
    BOOL v14 = v6;
    id v15 = v7;
    BOOL v16 = self;
    dispatch_sync(v8, block);

    uint64_t v9 = v14;
LABEL_6:

    goto LABEL_7;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    uint64_t v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v12 = 0;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
    }
    goto LABEL_6;
  }
LABEL_7:
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_cacheSharingMessageFromMailboxAddress_message___block_invoke(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138478083;
      uint64_t v30 = v5;
      __int16 v31 = 2113;
      uint64_t v32 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to cache sharing message from mailbox address: %{private}@, message: %{private}@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32) && *(void *)(a1 + 40))
  {
    id v7 = objc_alloc_init(NPKProtoCacheSharingMessageFromMailboxAddressRequest);
    [(NPKProtoCacheSharingMessageFromMailboxAddressRequest *)v7 setMailboxAddress:*(void *)(a1 + 32)];
    int v8 = NPKSecureArchiveObject(*(void **)(a1 + 40));
    [(NPKProtoCacheSharingMessageFromMailboxAddressRequest *)v7 setSharingMessageData:v8];

    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v10 = [(NPKProtoCacheSharingMessageFromMailboxAddressRequest *)v7 data];
    BOOL v11 = (void *)[v9 initWithProtobufData:v10 type:125 isResponse:0];

    BOOL v12 = *(void **)(a1 + 48);
    uint64_t v27 = *MEMORY[0x263F49F80];
    os_log_type_t v28 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v28 forKeys:&v27 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:0 extraOptions:v13];

    id v15 = pk_Payment_log();
    BOOL v16 = v15;
    if (v14)
    {
      BOOL v17 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (v17)
      {
        BOOL v18 = pk_Payment_log();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v30 = v14;
          id v19 = "Warning: No response expected for message with identifier %@";
          BOOL v20 = v18;
          os_log_type_t v21 = OS_LOG_TYPE_DEFAULT;
LABEL_17:
          _os_log_impl(&dword_21E92F000, v20, v21, v19, buf, 0xCu);
          goto LABEL_18;
        }
        goto LABEL_18;
      }
    }
    else
    {
      BOOL v26 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        BOOL v18 = pk_Payment_log();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v30 = v11;
          id v19 = "Error: No message identifier for protobuf %@";
          BOOL v20 = v18;
          os_log_type_t v21 = OS_LOG_TYPE_ERROR;
          goto LABEL_17;
        }
LABEL_18:
      }
    }

    goto LABEL_20;
  }
  BOOL v22 = pk_General_log();
  BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (!v23) {
    return;
  }
  pk_General_log();
  id v7 = (NPKProtoCacheSharingMessageFromMailboxAddressRequest *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(&v7->super.super.super, OS_LOG_TYPE_ERROR))
  {
    uint64_t v25 = *(void *)(a1 + 32);
    uint64_t v24 = *(void **)(a1 + 40);
    *(_DWORD *)long long buf = 138478083;
    uint64_t v30 = v24;
    __int16 v31 = 2113;
    uint64_t v32 = v25;
    _os_log_impl(&dword_21E92F000, &v7->super.super.super, OS_LOG_TYPE_ERROR, "Error: Unable to cache sharing message (%{private}@) for mailbox address (%{private}@)", buf, 0x16u);
  }
LABEL_20:
}

- (void)updateShareForPassIdentifier:(id)a3 share:(id)a4 authorization:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    BOOL v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke;
    block[3] = &unk_2644D8280;
    id v21 = v10;
    id v22 = v11;
    id v23 = v12;
    uint64_t v24 = self;
    id v25 = v13;
    dispatch_sync(v14, block);

    id v15 = v21;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    BOOL v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v19, 2u);
    }
  }
  if (v13)
  {
    id v15 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v13 + 2))(v13, 0, v15);
    goto LABEL_9;
  }
LABEL_10:
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke(uint64_t a1)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      int v8 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 64));
      *(_DWORD *)long long buf = 138413058;
      uint64_t v38 = v5;
      __int16 v39 = 2112;
      uint64_t v40 = v6;
      __int16 v41 = 2112;
      uint64_t v42 = v7;
      __int16 v43 = 2112;
      id v44 = v8;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to update share for pass identifier: %@, share: %@, authorization: %@, completion: %@", buf, 0x2Au);
    }
  }
  if (*(void *)(a1 + 32) && *(void *)(a1 + 40))
  {
    id v9 = objc_alloc_init(NPKProtoUpdateShareForPassIdentifierRequest);
    [(NPKProtoUpdateShareForPassIdentifierRequest *)v9 setPassIdentifier:*(void *)(a1 + 32)];
    id v10 = NPKSecureArchiveObject(*(void **)(a1 + 40));
    [(NPKProtoUpdateShareForPassIdentifierRequest *)v9 setShareData:v10];

    [(NPKProtoUpdateShareForPassIdentifierRequest *)v9 setAuthorization:*(void *)(a1 + 48)];
    id v11 = objc_alloc(MEMORY[0x263F4A228]);
    id v12 = [(NPKProtoUpdateShareForPassIdentifierRequest *)v9 data];
    id v13 = (void *)[v11 initWithProtobufData:v12 type:124 isResponse:0];

    BOOL v14 = *(void **)(a1 + 56);
    uint64_t v35 = *MEMORY[0x263F49F80];
    uint64_t v36 = &unk_26D0439E0;
    id v15 = [NSDictionary dictionaryWithObjects:&v36 forKeys:&v35 count:1];
    BOOL v16 = [v14 _sendProtobuf:v13 responseExpected:1 extraOptions:v15];

    if (v16)
    {
      if (*(void *)(a1 + 64))
      {
        BOOL v17 = MEMORY[0x223C37380]();
        v33[0] = MEMORY[0x263EF8330];
        v33[1] = 3221225472;
        void v33[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke_888;
        void v33[3] = &unk_2644D2B90;
        id v34 = *(id *)(a1 + 64);
        BOOL v18 = (void *)MEMORY[0x223C37380](v33);
        id v19 = *(void **)(a1 + 56);
        BOOL v20 = (void *)MEMORY[0x223C37380](v17);
        [v19 _trackOutstandingRequestWithMessageIdentifier:v16 completionHandler:v20 errorHandler:v18];

LABEL_23:
        goto LABEL_24;
      }
      __int16 v31 = pk_Payment_log();
      BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        BOOL v17 = pk_Payment_log();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v38 = v16;
        os_log_type_t v28 = "Warning: No response expected for message with identifier %@";
        id v29 = v17;
        os_log_type_t v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      BOOL v26 = pk_Payment_log();
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        BOOL v17 = pk_Payment_log();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v38 = v13;
        os_log_type_t v28 = "Error: No message identifier for protobuf %@";
        id v29 = v17;
        os_log_type_t v30 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_21E92F000, v29, v30, v28, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    goto LABEL_25;
  }
  id v21 = pk_General_log();
  BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

  if (v22)
  {
    id v23 = pk_General_log();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      uint64_t v24 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v38 = v24;
      __int16 v39 = 2112;
      uint64_t v40 = v25;
      _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_ERROR, "Error: Unable to update share (%@) for pass identifier %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 64))
  {
    PKDisplayableErrorForCommonType();
    id v9 = (NPKProtoUpdateShareForPassIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
LABEL_25:
  }
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke_888(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v7 = PKDisplayableErrorForCommonType();
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)updateShareForPassIdentifierResponse:(id)a3
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target updateShareForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000;
  uint64_t v35 = __Block_byref_object_copy__364;
  uint64_t v36 = __Block_byref_object_dispose__365;
  id v37 = 0;
  uint64_t v29 = 0;
  os_log_type_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  BOOL v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoUpdateShareForPassIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoUpdateShareForPassIdentifierResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoUpdateShareForPassIdentifierResponse *)v7 success];
    BOOL v12 = [(NPKProtoUpdateShareForPassIdentifierResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoUpdateShareForPassIdentifierResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)acceptCarKeyShareForMessage:(id)a3 activationCode:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharedInvitationProvisioningSupported])
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    BOOL v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    BOOL v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v16, 2u);
    }
  }
  if (v10)
  {
    BOOL v12 = PKDisplayableErrorForCommonType();
    (*((void (**)(id, void, void *))v10 + 2))(v10, 0, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      uint64_t v36 = v5;
      __int16 v37 = 2113;
      uint64_t v38 = v6;
      __int16 v39 = 2112;
      uint64_t v40 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to accept car key share for message: %{private}@, activation code: %{private}@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest);
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest *)v8 setSharingMessageData:v9];

    [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest *)v8 setActivationCode:*(void *)(a1 + 40)];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    id v11 = [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest *)v8 data];
    BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:121 isResponse:0];

    BOOL v13 = *(void **)(a1 + 48);
    uint64_t v33 = *MEMORY[0x263F49F80];
    uint64_t v34 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    uint64_t v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 56))
      {
        BOOL v16 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke_891;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 56);
        BOOL v17 = (void *)MEMORY[0x223C37380](v31);
        id v18 = *(void **)(a1 + 48);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v15;
        BOOL v26 = "Warning: No response expected for message with identifier %@";
        BOOL v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v12;
        BOOL v26 = "Error: No message identifier for protobuf %@";
        BOOL v27 = v16;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    BOOL v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v36 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to accept car key share with nil message (%@)", buf, 0xCu);
    }
  }
  if (*(void *)(a1 + 56))
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
LABEL_24:
  }
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke_891(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v7 = PKDisplayableErrorForCommonType();
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

- (void)acceptCarKeyShareForMessageResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target acceptCarKeyShareForMessageResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  BOOL v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessageResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    BOOL v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessageResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *)v7 hasCarShareAcceptanceResponseData];
    if (v12)
    {
      v1 = [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *)v7 carShareAcceptanceResponseData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)carKeyStartShareAcceptanceFlow:(id)a3 transportIdentifier:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    BOOL v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    BOOL v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyStartShareAcceptanceFlow:transportIdentifier:completion: message.", v16, 2u);
    }
  }
  if (v10)
  {
    BOOL v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void *))v10 + 2))(v10, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      __int16 v37 = v5;
      __int16 v38 = 2113;
      uint64_t v39 = v6;
      __int16 v40 = 2112;
      uint64_t v41 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to start car key share acceptance for invitation: %{private}@, transportIdentifier: %{private}@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoCarKeyStartShareAcceptanceFlowRequest);
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoCarKeyStartShareAcceptanceFlowRequest *)v8 setInvitationData:v9];

    [(NPKProtoCarKeyStartShareAcceptanceFlowRequest *)v8 setTransportationIdentifier:*(void *)(a1 + 40)];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    id v11 = [(NPKProtoCarKeyStartShareAcceptanceFlowRequest *)v8 data];
    BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:140 isResponse:0];

    BOOL v13 = *(void **)(a1 + 48);
    uint64_t v34 = *MEMORY[0x263F49F80];
    uint64_t v35 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v35 forKeys:&v34 count:1];
    uint64_t v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 56))
      {
        BOOL v16 = MEMORY[0x223C37380]();
        v32[0] = MEMORY[0x263EF8330];
        v32[1] = 3221225472;
        void v32[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke_895;
        void v32[3] = &unk_2644D2B90;
        id v33 = *(id *)(a1 + 56);
        BOOL v17 = (void *)MEMORY[0x223C37380](v32);
        id v18 = *(void **)(a1 + 48);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_22:
        goto LABEL_23;
      }
      BOOL v30 = pk_Payment_log();
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v15;
        BOOL v27 = "Warning: No response expected for message with identifier %@";
        id v28 = v16;
        os_log_type_t v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v25 = pk_Payment_log();
      BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v12;
        BOOL v27 = "Error: No message identifier for protobuf %@";
        id v28 = v16;
        os_log_type_t v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    BOOL v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      __int16 v37 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to start car key acceptance flow with nil invitation (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v24 = *(void *)(a1 + 56);
  if (v24) {
    (*(void (**)(uint64_t, void))(v24 + 16))(v24, 0);
  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke_895(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)carKeyStartShareAcceptanceFlowResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyStartShareAcceptanceFlowResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  BOOL v30 = __Block_byref_object_copy__364;
  BOOL v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  BOOL v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlowResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlowResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyStartShareAcceptanceFlowResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyStartShareAcceptanceFlowResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeyStartShareAcceptanceFlowResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyStartShareAcceptanceFlowResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)carKeyRoutingInformationForInvitationWithIdentifier:(id)a3 transportIdentifier:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    BOOL v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    BOOL v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyRoutingInformationForInvitationWithIdentifier:transportIdentifier:completion: message.", v16, 2u);
    }
  }
  if (v10)
  {
    BOOL v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v10 + 2))(v10, 0, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      uint64_t v36 = v5;
      __int16 v37 = 2113;
      uint64_t v38 = v6;
      __int16 v39 = 2112;
      __int16 v40 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to fetch car key routing information for invitationIdentifier: (%{private}@), transportIdentifier: (%{private}@), completion: %@", buf, 0x20u);
    }
  }
  if ([*(id *)(a1 + 32) length]) {
    goto LABEL_6;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    id v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v36 = v22;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to fetch car key routing information with nil empty invitationIdentifier (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v23 = *(void *)(a1 + 56);
  if (!v23)
  {
LABEL_6:
    id v8 = objc_alloc_init(NPKProtoCarKeyRoutingInformationRequest);
    [(NPKProtoCarKeyRoutingInformationRequest *)v8 setInvitationIdentifier:*(void *)(a1 + 32)];
    [(NPKProtoCarKeyRoutingInformationRequest *)v8 setTransportIdentifier:*(void *)(a1 + 40)];
    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    id v10 = [(NPKProtoCarKeyRoutingInformationRequest *)v8 data];
    id v11 = (void *)[v9 initWithProtobufData:v10 type:141 isResponse:0];

    BOOL v12 = *(void **)(a1 + 48);
    uint64_t v33 = *MEMORY[0x263F49F80];
    uint64_t v34 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 56))
      {
        uint64_t v15 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_898;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 56);
        BOOL v16 = (void *)MEMORY[0x223C37380](v31);
        BOOL v17 = *(void **)(a1 + 48);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v14;
        BOOL v26 = "Warning: No response expected for message with identifier %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v11;
        BOOL v26 = "Error: No message identifier for protobuf %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  PKDisplayableErrorForCommonType();
  id v8 = (NPKProtoCarKeyRoutingInformationRequest *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, void, NPKProtoCarKeyRoutingInformationRequest *))(v23 + 16))(v23, 0, v8);
LABEL_24:
}

void __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_898(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)carKeyRoutingInformationResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyRoutingInformationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyRoutingInformationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyRoutingInformationResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoCarKeyRoutingInformationResponse *)v7 routingInformation];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    BOOL v15 = [(NPKProtoCarKeyRoutingInformationResponse *)v7 hasErrorData];
    if (v15)
    {
      v1 = [(NPKProtoCarKeyRoutingInformationResponse *)v7 errorData];
      BOOL v16 = objc_opt_class();
      BOOL v17 = NPKSecureUnarchiveObject(v1, v16);
    }
    else
    {
      BOOL v17 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      BOOL v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier:(id)a3 transportIdentifier:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    BOOL v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    uint64_t v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    BOOL v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier:transportIdentifier:completion: message.", v16, 2u);
    }
  }
  if (v10)
  {
    uint64_t v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v10 + 2))(v10, 0, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      uint64_t v36 = v5;
      __int16 v37 = 2113;
      uint64_t v38 = v6;
      __int16 v39 = 2112;
      uint64_t v40 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to get car key product plan identifier for invitationIdentifier: (%{private}@), transportIdentifier: (%{private}@), completion: %@", buf, 0x20u);
    }
  }
  if ([*(id *)(a1 + 32) length])
  {
    id v8 = objc_alloc_init(NPKProtoCarKeyGetProductPlanIdentifierRequest);
    [(NPKProtoCarKeyGetProductPlanIdentifierRequest *)v8 setInvitationIdentifier:*(void *)(a1 + 32)];
    [(NPKProtoCarKeyGetProductPlanIdentifierRequest *)v8 setTransportIdentifier:*(void *)(a1 + 40)];
    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    id v10 = [(NPKProtoCarKeyGetProductPlanIdentifierRequest *)v8 data];
    id v11 = (void *)[v9 initWithProtobufData:v10 type:142 isResponse:0];

    uint64_t v12 = *(void **)(a1 + 48);
    uint64_t v33 = *MEMORY[0x263F49F80];
    id v34 = &unk_26D0439E0;
    uint64_t v13 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 56))
      {
        BOOL v15 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_901;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 56);
        BOOL v16 = (void *)MEMORY[0x223C37380](v31);
        BOOL v17 = *(void **)(a1 + 48);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        BOOL v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v14;
        BOOL v26 = "Warning: No response expected for message with identifier %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        BOOL v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v11;
        BOOL v26 = "Error: No message identifier for protobuf %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    id v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v36 = v22;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to get car key product plan identifier with nil invitationIdentifier (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v23 = *(void *)(a1 + 56);
  if (v23)
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoCarKeyGetProductPlanIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, NPKProtoCarKeyGetProductPlanIdentifierRequest *))(v23 + 16))(v23, 0, v8);
LABEL_24:
  }
}

void __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_901(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)carKeyGetProductPlanIdentifierResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyGetProductPlanIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyGetProductPlanIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyGetProductPlanIdentifierResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeyGetProductPlanIdentifierResponse *)v7 hasContainerData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyGetProductPlanIdentifierResponse *)v7 containerData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoCarKeyGetProductPlanIdentifierResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoCarKeyGetProductPlanIdentifierResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)carKeySetEncryptedProductPlanIdentifierContainer:(id)a3 invitationIdentifier:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    BOOL v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    BOOL v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeySetEncryptedProductPlanIdentifierContainer:invitationIdentifier:completion: message.", v16, 2u);
    }
  }
  if (v10)
  {
    BOOL v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void *))v10 + 2))(v10, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      __int16 v37 = v5;
      __int16 v38 = 2113;
      uint64_t v39 = v6;
      __int16 v40 = 2112;
      uint64_t v41 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to set car key encrypted product plan container: (%{private}@), invitationIdentifier: (%{private}@), completion: %@", buf, 0x20u);
    }
  }
  if ([*(id *)(a1 + 40) length])
  {
    id v8 = objc_alloc_init(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest);
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *)v8 setContainerData:v9];

    [(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *)v8 setInvitationIdentifier:*(void *)(a1 + 40)];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    id v11 = [(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *)v8 data];
    BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:143 isResponse:0];

    BOOL v13 = *(void **)(a1 + 48);
    uint64_t v34 = *MEMORY[0x263F49F80];
    uint64_t v35 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v35 forKeys:&v34 count:1];
    uint64_t v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 56))
      {
        BOOL v16 = MEMORY[0x223C37380]();
        v32[0] = MEMORY[0x263EF8330];
        v32[1] = 3221225472;
        void v32[2] = __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke_905;
        void v32[3] = &unk_2644D2B90;
        id v33 = *(id *)(a1 + 56);
        BOOL v17 = (void *)MEMORY[0x223C37380](v32);
        id v18 = *(void **)(a1 + 48);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_22:
        goto LABEL_23;
      }
      BOOL v30 = pk_Payment_log();
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v15;
        id v27 = "Warning: No response expected for message with identifier %@";
        id v28 = v16;
        os_log_type_t v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v25 = pk_Payment_log();
      BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v12;
        id v27 = "Error: No message identifier for protobuf %@";
        id v28 = v16;
        os_log_type_t v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    uint64_t v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138477827;
      __int16 v37 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to set car key encrypted product plan container with empty invitationIdentifier (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v24 = *(void *)(a1 + 56);
  if (v24)
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *))(v24 + 16))(v24, v8);
LABEL_24:
  }
}

void __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke_905(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
}

- (void)carKeySetEncryptedProductPlanIdentifierContainerResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeySetEncryptedProductPlanIdentifierContainerResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  BOOL v30 = __Block_byref_object_copy__364;
  BOOL v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  BOOL v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainerResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainerResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)carKeyAccountAttestationRequestForCredential:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    BOOL v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyAccountAttestationRequestForCredential:completion: message.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138478083;
      uint64_t v36 = v5;
      __int16 v37 = 2112;
      __int16 v38 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to fetch car key account attestation for credential: (%{private}@), completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoCarKeyAccountAttestationRequest);
    int v8 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoCarKeyAccountAttestationRequest *)v7 setCredentialData:v8];

    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v10 = [(NPKProtoCarKeyAccountAttestationRequest *)v7 data];
    BOOL v11 = (void *)[v9 initWithProtobufData:v10 type:144 isResponse:0];

    BOOL v12 = *(void **)(a1 + 40);
    uint64_t v33 = *MEMORY[0x263F49F80];
    uint64_t v34 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 48))
      {
        id v15 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke_908;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 48);
        BOOL v16 = (void *)MEMORY[0x223C37380](v31);
        id v17 = *(void **)(a1 + 40);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        id v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v14;
        BOOL v26 = "Warning: No response expected for message with identifier %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        id v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v11;
        BOOL v26 = "Error: No message identifier for protobuf %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    BOOL v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v36 = v22;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to fetch car key account attestation with nil credential (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v23 = *(void *)(a1 + 48);
  if (v23)
  {
    PKDisplayableErrorForCommonType();
    id v7 = (NPKProtoCarKeyAccountAttestationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, NPKProtoCarKeyAccountAttestationRequest *))(v23 + 16))(v23, 0, v7);
LABEL_24:
  }
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke_908(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)carKeyAccountAttestationResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyAccountAttestationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  __int16 v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyAccountAttestationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyAccountAttestationResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeyAccountAttestationResponse *)v7 hasAttestationRequestData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyAccountAttestationResponse *)v7 attestationRequestData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoCarKeyAccountAttestationResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoCarKeyAccountAttestationResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)carKeyGetPretrackRequestForKeyWithInvitationIdentifier:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    int v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    BOOL v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    BOOL v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyGetPretrackRequestForKeyWithInvitationIdentifier:completion: message.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138478083;
      uint64_t v35 = v5;
      __int16 v36 = 2112;
      __int16 v37 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to get pretrack request for car key with invitationIdentifier: (%{private}@), completion: %@", buf, 0x16u);
    }
  }
  if ([*(id *)(a1 + 32) length])
  {
    id v7 = objc_alloc_init(NPKProtoCarKeyGetPretrackRequest);
    [(NPKProtoCarKeyGetPretrackRequest *)v7 setInvitationIdentifier:*(void *)(a1 + 32)];
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v9 = [(NPKProtoCarKeyGetPretrackRequest *)v7 data];
    uint64_t v10 = (void *)[v8 initWithProtobufData:v9 type:145 isResponse:0];

    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v32 = *MEMORY[0x263F49F80];
    uint64_t v33 = &unk_26D0439E0;
    BOOL v12 = [NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
    BOOL v13 = [v11 _sendProtobuf:v10 responseExpected:1 extraOptions:v12];

    if (v13)
    {
      if (*(void *)(a1 + 48))
      {
        BOOL v14 = MEMORY[0x223C37380]();
        v30[0] = MEMORY[0x263EF8330];
        v30[1] = 3221225472;
        void v30[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke_912;
        void v30[3] = &unk_2644D2B90;
        id v31 = *(id *)(a1 + 48);
        id v15 = (void *)MEMORY[0x223C37380](v30);
        BOOL v16 = *(void **)(a1 + 40);
        id v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      id v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        BOOL v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v13;
        uint64_t v25 = "Warning: No response expected for message with identifier %@";
        BOOL v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v23 = pk_Payment_log();
      BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        BOOL v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v10;
        uint64_t v25 = "Error: No message identifier for protobuf %@";
        BOOL v26 = v14;
        os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  BOOL v18 = pk_General_log();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    BOOL v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      BOOL v21 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v35 = v21;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to get pretrack request for car key with nil invitationIdentifier (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v22 = *(void *)(a1 + 48);
  if (v22)
  {
    PKDisplayableErrorForCommonType();
    id v7 = (NPKProtoCarKeyGetPretrackRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, NPKProtoCarKeyGetPretrackRequest *))(v22 + 16))(v22, 0, v7);
LABEL_24:
  }
}

void __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke_912(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)carKeyGetPretrackResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyGetPretrackResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  uint64_t v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  uint64_t v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__23;
  os_log_type_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyGetPretrackResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyGetPretrackResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeyGetPretrackResponse *)v7 hasPreTrackRequestData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyGetPretrackResponse *)v7 preTrackRequestData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoCarKeyGetPretrackResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoCarKeyGetPretrackResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)carKeySetAccountAttestation:(id)a3 forCredential:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v18 = v8;
    id v19 = v9;
    BOOL v20 = self;
    id v21 = v10;
    dispatch_sync(v11, block);

    BOOL v12 = v18;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v13 = pk_Payment_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    uint64_t v15 = pk_Payment_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v16 = 0;
      _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeySetAccountAttestation:forCredential:completion: message.", v16, 2u);
    }
  }
  if (v10)
  {
    BOOL v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void *))v10 + 2))(v10, v12);
    goto LABEL_9;
  }
LABEL_10:
}

void __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      __int16 v37 = v5;
      __int16 v38 = 2113;
      uint64_t v39 = v6;
      __int16 v40 = 2112;
      uint64_t v41 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to set car key account attestation: (%{private}@), credential: (%{private}@), completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 40))
  {
    id v8 = objc_alloc_init(NPKProtoCarKeySetAccountAttestationRequest);
    [(NPKProtoCarKeySetAccountAttestationRequest *)v8 setAttestation:*(void *)(a1 + 32)];
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 40));
    [(NPKProtoCarKeySetAccountAttestationRequest *)v8 setCredentialData:v9];

    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v11 = [(NPKProtoCarKeySetAccountAttestationRequest *)v8 data];
    BOOL v12 = (void *)[v10 initWithProtobufData:v11 type:146 isResponse:0];

    BOOL v13 = *(void **)(a1 + 48);
    uint64_t v34 = *MEMORY[0x263F49F80];
    uint64_t v35 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v35 forKeys:&v34 count:1];
    uint64_t v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 56))
      {
        BOOL v16 = MEMORY[0x223C37380]();
        v32[0] = MEMORY[0x263EF8330];
        v32[1] = 3221225472;
        void v32[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke_915;
        void v32[3] = &unk_2644D2B90;
        id v33 = *(id *)(a1 + 56);
        id v17 = (void *)MEMORY[0x223C37380](v32);
        id v18 = *(void **)(a1 + 48);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_22:
        goto LABEL_23;
      }
      BOOL v30 = pk_Payment_log();
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v15;
        os_log_type_t v27 = "Warning: No response expected for message with identifier %@";
        id v28 = v16;
        os_log_type_t v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v25 = pk_Payment_log();
      BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v12;
        os_log_type_t v27 = "Error: No message identifier for protobuf %@";
        id v28 = v16;
        os_log_type_t v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  BOOL v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    uint64_t v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138477827;
      __int16 v37 = v23;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to  set car key account attestation with nil credential (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v24 = *(void *)(a1 + 56);
  if (v24)
  {
    PKDisplayableErrorForCommonType();
    id v8 = (NPKProtoCarKeySetAccountAttestationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, NPKProtoCarKeySetAccountAttestationRequest *))(v24 + 16))(v24, v8);
LABEL_24:
  }
}

void __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke_915(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
}

- (void)carKeySetAccountAttestationResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeySetAccountAttestationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  BOOL v30 = __Block_byref_object_copy__364;
  BOOL v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  BOOL v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeySetAccountAttestationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeySetAccountAttestationResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeySetAccountAttestationResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeySetAccountAttestationResponse *)v7 errorData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)carKeyUpdateTrackingAttestation:(id)a3 forCredential:(id)a4 encryptedContainer:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    BOOL v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke;
    block[3] = &unk_2644D8280;
    id v20 = v10;
    id v21 = v11;
    id v22 = v12;
    uint64_t v23 = self;
    id v24 = v13;
    dispatch_sync(v14, block);
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v18 = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyUpdateTrackingAttestation:forCredential:encryptedContainer:completion: message.", v18, 2u);
      }
    }
    if (v13) {
      (*((void (**)(id, void))v13 + 2))(v13, 0);
    }
  }
}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      int v8 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 64));
      *(_DWORD *)long long buf = 138478595;
      uint64_t v39 = v5;
      __int16 v40 = 2113;
      uint64_t v41 = v6;
      __int16 v42 = 2113;
      uint64_t v43 = v7;
      __int16 v44 = 2112;
      uint64_t v45 = v8;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to update car key tracking attestation: (%{private}@), credential: (%{private}@), container: (%{private}@), completion: %@", buf, 0x2Au);
    }
  }
  if (*(void *)(a1 + 40))
  {
    uint64_t v9 = objc_alloc_init(NPKProtoCarKeyUpdateTrackingAttestationRequest);
    [(NPKProtoCarKeyUpdateTrackingAttestationRequest *)v9 setAttestation:*(void *)(a1 + 32)];
    id v10 = NPKSecureArchiveObject(*(void **)(a1 + 40));
    [(NPKProtoCarKeyUpdateTrackingAttestationRequest *)v9 setCredentialData:v10];

    id v11 = NPKSecureArchiveObject(*(void **)(a1 + 48));
    [(NPKProtoCarKeyUpdateTrackingAttestationRequest *)v9 setContainerData:v11];

    id v12 = objc_alloc(MEMORY[0x263F4A228]);
    id v13 = [(NPKProtoCarKeyUpdateTrackingAttestationRequest *)v9 data];
    BOOL v14 = (void *)[v12 initWithProtobufData:v13 type:147 isResponse:0];

    uint64_t v15 = *(void **)(a1 + 56);
    uint64_t v36 = *MEMORY[0x263F49F80];
    __int16 v37 = &unk_26D0439E0;
    BOOL v16 = [NSDictionary dictionaryWithObjects:&v37 forKeys:&v36 count:1];
    id v17 = [v15 _sendProtobuf:v14 responseExpected:1 extraOptions:v16];

    if (v17)
    {
      if (*(void *)(a1 + 64))
      {
        id v18 = MEMORY[0x223C37380]();
        v34[0] = MEMORY[0x263EF8330];
        v34[1] = 3221225472;
        void v34[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke_918;
        v34[3] = &unk_2644D2B90;
        id v35 = *(id *)(a1 + 64);
        id v19 = (void *)MEMORY[0x223C37380](v34);
        id v20 = *(void **)(a1 + 56);
        id v21 = (void *)MEMORY[0x223C37380](v18);
        [v20 _trackOutstandingRequestWithMessageIdentifier:v17 completionHandler:v21 errorHandler:v19];

LABEL_22:
        goto LABEL_23;
      }
      id v32 = pk_Payment_log();
      BOOL v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);

      if (v33)
      {
        id v18 = pk_Payment_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v39 = v17;
        uint64_t v29 = "Warning: No response expected for message with identifier %@";
        BOOL v30 = v18;
        os_log_type_t v31 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      id v27 = pk_Payment_log();
      BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_ERROR);

      if (v28)
      {
        id v18 = pk_Payment_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v39 = v14;
        uint64_t v29 = "Error: No message identifier for protobuf %@";
        BOOL v30 = v18;
        os_log_type_t v31 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v30, v31, v29, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  id v22 = pk_General_log();
  BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (v23)
  {
    id v24 = pk_General_log();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      uint64_t v25 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v39 = v25;
      _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_ERROR, "Error: Unable to update car key tracking attestation with nil credential (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v26 = *(void *)(a1 + 64);
  if (v26) {
    (*(void (**)(uint64_t, void))(v26 + 16))(v26, 0);
  }
}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke_918(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, BOOL))(v7 + 16))(v7, v3 == 0);
  }
}

- (void)carKeyUpdateTrackingAttestationResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyUpdateTrackingAttestationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  BOOL v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  BOOL v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestationResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoCarKeyUpdateTrackingAttestationResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoCarKeyUpdateTrackingAttestationResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = [(NPKProtoCarKeyUpdateTrackingAttestationResponse *)v6 hasSuccess];
    if (v11) {
      LOBYTE(v11) = [(NPKProtoCarKeyUpdateTrackingAttestationResponse *)v6 success];
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v11;
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v15[0] = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v15, 2u);
      }
    }
  }
}

- (void)carKeyAcceptInvitationWithInvitationIdentifier:(id)a3 activationCode:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v17 = v8;
    id v18 = v9;
    id v19 = self;
    id v20 = v10;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support acceptSharingMessage:activationCode:completion: message.", v15, 2u);
      }
    }
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      uint64_t v36 = v5;
      __int16 v37 = 2113;
      uint64_t v38 = v6;
      __int16 v39 = 2112;
      __int16 v40 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to accept car key invitation with identifier: %{private}@, activation code: %{private}@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoCarKeyAcceptInvitationRequest);
    [(NPKProtoCarKeyAcceptInvitationRequest *)v8 setInvitationIdentifier:*(void *)(a1 + 32)];
    [(NPKProtoCarKeyAcceptInvitationRequest *)v8 setActivationCode:*(void *)(a1 + 40)];
    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    id v10 = [(NPKProtoCarKeyAcceptInvitationRequest *)v8 data];
    BOOL v11 = (void *)[v9 initWithProtobufData:v10 type:148 isResponse:0];

    id v12 = *(void **)(a1 + 48);
    uint64_t v33 = *MEMORY[0x263F49F80];
    uint64_t v34 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 56))
      {
        uint64_t v15 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke_921;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 56);
        BOOL v16 = (void *)MEMORY[0x223C37380](v31);
        id v17 = *(void **)(a1 + 48);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v14;
        uint64_t v26 = "Warning: No response expected for message with identifier %@";
        uint64_t v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v11;
        uint64_t v26 = "Error: No message identifier for protobuf %@";
        uint64_t v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    id v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v36 = v22;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to accept car key invitation with nil invitationIdentifier (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v23 = *(void *)(a1 + 56);
  if (v23) {
    (*(void (**)(uint64_t, void))(v23 + 16))(v23, 0);
  }
}

void __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke_921(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)carKeyAcceptInvitationResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyAcceptInvitationWithInvitationIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  BOOL v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  BOOL v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyAcceptInvitationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyAcceptInvitationResponse *)v5 initWithData:v6];

    if ([(NPKProtoCarKeyAcceptInvitationResponse *)v7 pending])
    {
      [v4 setOrResetCleanupTimer];
    }
    else
    {
      BOOL v11 = [*(id *)(a1 + 32) outstandingRequests];
      [v11 removeObjectForKey:*(void *)(a1 + 40)];

      uint64_t v12 = [v4 completionHandler];
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      BOOL v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;

      BOOL v15 = [(NPKProtoCarKeyAcceptInvitationResponse *)v7 hasResultData];
      if (v15)
      {
        v1 = [(NPKProtoCarKeyAcceptInvitationResponse *)v7 resultData];
        BOOL v16 = objc_opt_class();
        id v17 = NPKSecureUnarchiveObject(v1, v16);
      }
      else
      {
        id v17 = 0;
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v17);
      if (v15)
      {
      }
    }
  }
  else
  {
    int v8 = pk_Payment_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      uint64_t v10 = pk_Payment_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)carKeyHandleRecipientMessage:(id)a3 forInvitationIdentifier:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v17 = v8;
    id v18 = v9;
    id v19 = self;
    id v20 = v10;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v15 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyHandleRecipientMessage:forInvitationIdentifier:completion: message.", v15, 2u);
      }
    }
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      uint64_t v38 = v5;
      __int16 v39 = 2113;
      uint64_t v40 = v6;
      __int16 v41 = 2112;
      __int16 v42 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Handle car key recipient message: %{private}@, for invitationIdentifier: %{private}@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32) && [*(id *)(a1 + 40) length])
  {
    id v8 = objc_alloc_init(NPKProtoCarKeyHandleRecipientMessageRequest);
    id v9 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoCarKeyHandleRecipientMessageRequest *)v8 setMessageData:v9];

    [(NPKProtoCarKeyHandleRecipientMessageRequest *)v8 setInvitationIdentifier:*(void *)(a1 + 40)];
    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v11 = [(NPKProtoCarKeyHandleRecipientMessageRequest *)v8 data];
    uint64_t v12 = (void *)[v10 initWithProtobufData:v11 type:149 isResponse:0];

    BOOL v13 = *(void **)(a1 + 48);
    uint64_t v35 = *MEMORY[0x263F49F80];
    uint64_t v36 = &unk_26D0439E0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:&v36 forKeys:&v35 count:1];
    BOOL v15 = [v13 _sendProtobuf:v12 responseExpected:1 extraOptions:v14];

    if (v15)
    {
      if (*(void *)(a1 + 56))
      {
        BOOL v16 = MEMORY[0x223C37380]();
        v33[0] = MEMORY[0x263EF8330];
        v33[1] = 3221225472;
        void v33[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke_925;
        void v33[3] = &unk_2644D2B90;
        id v34 = *(id *)(a1 + 56);
        id v17 = (void *)MEMORY[0x223C37380](v33);
        id v18 = *(void **)(a1 + 48);
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_23:
        goto LABEL_24;
      }
      uint64_t v31 = pk_Payment_log();
      BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v38 = v15;
        os_log_type_t v28 = "Warning: No response expected for message with identifier %@";
        uint64_t v29 = v16;
        os_log_type_t v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v26 = pk_Payment_log();
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        BOOL v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v38 = v12;
        os_log_type_t v28 = "Error: No message identifier for protobuf %@";
        uint64_t v29 = v16;
        os_log_type_t v30 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_21E92F000, v29, v30, v28, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    return;
  }
  id v20 = pk_General_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    uint64_t v22 = pk_General_log();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void **)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138478083;
      uint64_t v38 = v23;
      __int16 v39 = 2113;
      uint64_t v40 = v24;
      _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to handle nil message (%{private}@) or empty invitation identifier (%{private}@)", buf, 0x16u);
    }
  }
  uint64_t v25 = *(void *)(a1 + 56);
  if (v25) {
    (*(void (**)(uint64_t, void))(v25 + 16))(v25, 0);
  }
}

void __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke_925(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)carKeyHandleRecipientMessageResponse:(id)a3
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyHandleRecipientMessageResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v29 = 0x3032000000;
  os_log_type_t v30 = __Block_byref_object_copy__364;
  uint64_t v31 = __Block_byref_object_dispose__365;
  id v32 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000;
  uint64_t v25 = __Block_byref_object_copy__23;
  uint64_t v26 = __Block_byref_object_dispose__23;
  id v27 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessageResponse___block_invoke;
    block[3] = &unk_2644D7AD8;
    void block[4] = self;
    id v18 = v10;
    p_long long buf = &buf;
    id v19 = v4;
    BOOL v21 = &v22;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  }
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessageResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [*(id *)(a1 + 32) outstandingRequests];
    [v5 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v6 = [v4 completionHandler];
    uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
    int v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    id v9 = [NPKProtoCarKeyHandleRecipientMessageResponse alloc];
    uint64_t v10 = [*(id *)(a1 + 48) data];
    BOOL v11 = [(NPKProtoCarKeyHandleRecipientMessageResponse *)v9 initWithData:v10];

    BOOL v12 = [(NPKProtoCarKeyHandleRecipientMessageResponse *)v11 hasResultData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyHandleRecipientMessageResponse *)v11 resultData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)carKeyRetryActivationCodeWithInvitationIdentifier:(id)a3 activationCode:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v17 = v9;
    id v18 = v8;
    id v19 = self;
    id v20 = v10;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyRetryActivationCodeWithInvitationIdentifier:activationCode:completion: message.", v15, 2u);
      }
    }
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138478339;
      __int16 v37 = v5;
      __int16 v38 = 2113;
      uint64_t v39 = v6;
      __int16 v40 = 2112;
      __int16 v41 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to retry activation code: %{private}@, for invitation identifier: %{private}@, completion: %@", buf, 0x20u);
    }
  }
  if ([*(id *)(a1 + 32) length] && objc_msgSend(*(id *)(a1 + 40), "length"))
  {
    id v8 = objc_alloc_init(NPKProtoCarKeyRetryActivationCodeRequest);
    [(NPKProtoCarKeyRetryActivationCodeRequest *)v8 setInvitationIdentifier:*(void *)(a1 + 40)];
    [(NPKProtoCarKeyRetryActivationCodeRequest *)v8 setActivationCode:*(void *)(a1 + 32)];
    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    id v10 = [(NPKProtoCarKeyRetryActivationCodeRequest *)v8 data];
    BOOL v11 = (void *)[v9 initWithProtobufData:v10 type:150 isResponse:0];

    BOOL v12 = *(void **)(a1 + 48);
    uint64_t v34 = *MEMORY[0x263F49F80];
    uint64_t v35 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v35 forKeys:&v34 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 56))
      {
        uint64_t v15 = MEMORY[0x223C37380]();
        v32[0] = MEMORY[0x263EF8330];
        v32[1] = 3221225472;
        void v32[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke_928;
        void v32[3] = &unk_2644D2B90;
        id v33 = *(id *)(a1 + 56);
        BOOL v16 = (void *)MEMORY[0x223C37380](v32);
        id v17 = *(void **)(a1 + 48);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_23:
        goto LABEL_24;
      }
      os_log_type_t v30 = pk_Payment_log();
      BOOL v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v14;
        id v27 = "Warning: No response expected for message with identifier %@";
        os_log_type_t v28 = v15;
        os_log_type_t v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v25 = pk_Payment_log();
      BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        uint64_t v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_23;
        }
        *(_DWORD *)long long buf = 138412290;
        __int16 v37 = v11;
        id v27 = "Error: No message identifier for protobuf %@";
        os_log_type_t v28 = v15;
        os_log_type_t v29 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_21E92F000, v28, v29, v27, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    return;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    BOOL v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = *(void **)(a1 + 32);
      uint64_t v23 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138478083;
      __int16 v37 = v22;
      __int16 v38 = 2113;
      uint64_t v39 = v23;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to retry activation code with nil code (%{private}@) or invitation identifier (%{private}@)", buf, 0x16u);
    }
  }
  uint64_t v24 = *(void *)(a1 + 56);
  if (v24) {
    (*(void (**)(uint64_t, void))(v24 + 16))(v24, 0);
  }
}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke_928(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)carKeyRetryActivationCodeResponse:(id)a3
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyRetryActivationCodeResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v25 = 0x3032000000;
  BOOL v26 = __Block_byref_object_copy__364;
  id v27 = __Block_byref_object_dispose__365;
  id v28 = 0;
  v22[0] = 0;
  v22[1] = v22;
  _DWORD v22[2] = 0x3032000000;
  v22[3] = __Block_byref_object_copy__23;
  void v22[4] = __Block_byref_object_dispose__23;
  id v23 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeResponse___block_invoke;
    block[3] = &unk_2644D7AD8;
    void block[4] = self;
    id v18 = v10;
    p_long long buf = &buf;
    id v19 = v4;
    BOOL v21 = v22;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, 0);
  }
  _Block_object_dispose(v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [*(id *)(a1 + 32) outstandingRequests];
    [v5 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v6 = [v4 completionHandler];
    uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
    int v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    id v9 = [NPKProtoCarKeyRetryActivationCodeResponse alloc];
    uint64_t v10 = [*(id *)(a1 + 48) data];
    BOOL v11 = [(NPKProtoCarKeyRetryActivationCodeResponse *)v9 initWithData:v10];

    BOOL v12 = [(NPKProtoCarKeyRetryActivationCodeResponse *)v11 hasResultData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyRetryActivationCodeResponse *)v11 resultData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)carKeyDecryptData:(id)a3 credential:(id)a4 ephemeralPublicKey:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    BOOL v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke;
    block[3] = &unk_2644D8280;
    id v21 = v10;
    id v22 = v11;
    id v23 = v12;
    uint64_t v24 = self;
    id v25 = v13;
    dispatch_sync(v14, block);

    uint64_t v15 = v21;
LABEL_9:

    goto LABEL_10;
  }
  BOOL v16 = pk_Payment_log();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    id v18 = pk_Payment_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v19 = 0;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyDecryptData:credential:ephemeralPublicKey:completion: message.", v19, 2u);
    }
  }
  if (v13)
  {
    uint64_t v15 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v13 + 2))(v13, 0, v15);
    goto LABEL_9;
  }
LABEL_10:
}

void __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      int v8 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 64));
      *(_DWORD *)long long buf = 138478595;
      uint64_t v39 = v5;
      __int16 v40 = 2113;
      uint64_t v41 = v6;
      __int16 v42 = 2113;
      uint64_t v43 = v7;
      __int16 v44 = 2112;
      uint64_t v45 = v8;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to decrypt car key data: (%{private}@), credential: (%{private}@), ephemeralPublicKey: (%{private}@), completion: %@", buf, 0x2Au);
    }
  }
  if (*(void *)(a1 + 40))
  {
    id v9 = objc_alloc_init(NPKProtoCarKeyDecryptDataRequest);
    [(NPKProtoCarKeyDecryptDataRequest *)v9 setEncryptedData:*(void *)(a1 + 32)];
    id v10 = NPKSecureArchiveObject(*(void **)(a1 + 40));
    [(NPKProtoCarKeyDecryptDataRequest *)v9 setCredentialData:v10];

    id v11 = NPKSecureArchiveObject(*(void **)(a1 + 48));
    [(NPKProtoCarKeyDecryptDataRequest *)v9 setEphemeralPublicKeyData:v11];

    id v12 = objc_alloc(MEMORY[0x263F4A228]);
    id v13 = [(NPKProtoCarKeyDecryptDataRequest *)v9 data];
    BOOL v14 = (void *)[v12 initWithProtobufData:v13 type:151 isResponse:0];

    uint64_t v15 = *(void **)(a1 + 56);
    uint64_t v36 = *MEMORY[0x263F49F80];
    __int16 v37 = &unk_26D0439E0;
    BOOL v16 = [NSDictionary dictionaryWithObjects:&v37 forKeys:&v36 count:1];
    BOOL v17 = [v15 _sendProtobuf:v14 responseExpected:1 extraOptions:v16];

    if (v17)
    {
      if (*(void *)(a1 + 64))
      {
        id v18 = MEMORY[0x223C37380]();
        v34[0] = MEMORY[0x263EF8330];
        v34[1] = 3221225472;
        void v34[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke_931;
        v34[3] = &unk_2644D2B90;
        id v35 = *(id *)(a1 + 64);
        id v19 = (void *)MEMORY[0x223C37380](v34);
        BOOL v20 = *(void **)(a1 + 56);
        id v21 = (void *)MEMORY[0x223C37380](v18);
        [v20 _trackOutstandingRequestWithMessageIdentifier:v17 completionHandler:v21 errorHandler:v19];

LABEL_22:
        goto LABEL_23;
      }
      id v32 = pk_Payment_log();
      BOOL v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);

      if (v33)
      {
        id v18 = pk_Payment_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v39 = v17;
        uint64_t v29 = "Warning: No response expected for message with identifier %@";
        os_log_type_t v30 = v18;
        os_log_type_t v31 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      id v27 = pk_Payment_log();
      BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_ERROR);

      if (v28)
      {
        id v18 = pk_Payment_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v39 = v14;
        uint64_t v29 = "Error: No message identifier for protobuf %@";
        os_log_type_t v30 = v18;
        os_log_type_t v31 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v30, v31, v29, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  id v22 = pk_General_log();
  BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (v23)
  {
    uint64_t v24 = pk_General_log();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      id v25 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v39 = v25;
      _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_ERROR, "Error: Unable to decrypt car key data with nil credential (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v26 = *(void *)(a1 + 64);
  if (v26)
  {
    PKDisplayableErrorForCommonType();
    id v9 = (NPKProtoCarKeyDecryptDataRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, NPKProtoCarKeyDecryptDataRequest *))(v26 + 16))(v26, 0, v9);
LABEL_24:
  }
}

void __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke_931(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)carKeyDecryptDataResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyDecryptDataResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  __int16 v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  os_log_type_t v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  BOOL v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptDataResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptDataResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoCarKeyDecryptDataResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoCarKeyDecryptDataResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = [(NPKProtoCarKeyDecryptDataResponse *)v6 hasEncryptedData];
    if (v11)
    {
      id v12 = [(NPKProtoCarKeyDecryptDataResponse *)v6 encryptedData];
    }
    else
    {
      id v12 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v12);
    if (v11) {

    }
    BOOL v16 = [(NPKProtoCarKeyDecryptDataResponse *)v6 hasErrorData];
    if (v16)
    {
      id v12 = [(NPKProtoCarKeyDecryptDataResponse *)v6 errorData];
      BOOL v17 = objc_opt_class();
      id v18 = NPKSecureUnarchiveObject(v12, v17);
    }
    else
    {
      id v18 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v18);
    if (v16)
    {
    }
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      uint64_t v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v19[0] = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v19, 2u);
      }
    }
  }
}

- (void)carKeyRejectInvitation:(id)a3 completion:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isSharingInAChainSupported])
  {
    uint64_t v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke;
    block[3] = &unk_2644D7D30;
    id v15 = v6;
    BOOL v16 = self;
    id v17 = v7;
    dispatch_sync(v8, block);

    uint64_t v9 = v15;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v10 = pk_Payment_log();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    id v12 = pk_Payment_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyRejectInvitation:completion: message.", v13, 2u);
    }
  }
  if (v7)
  {
    uint64_t v9 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
    goto LABEL_9;
  }
LABEL_10:
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      id v6 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
      *(_DWORD *)long long buf = 138478083;
      uint64_t v36 = v5;
      __int16 v37 = 2112;
      __int16 v38 = v6;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to reject car key invitation: (%{private}@), completion: %@", buf, 0x16u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v7 = objc_alloc_init(NPKProtoCarKeyRejectInvitationRequest);
    uint64_t v8 = NPKSecureArchiveObject(*(void **)(a1 + 32));
    [(NPKProtoCarKeyRejectInvitationRequest *)v7 setMessageData:v8];

    id v9 = objc_alloc(MEMORY[0x263F4A228]);
    uint64_t v10 = [(NPKProtoCarKeyRejectInvitationRequest *)v7 data];
    BOOL v11 = (void *)[v9 initWithProtobufData:v10 type:153 isResponse:0];

    id v12 = *(void **)(a1 + 40);
    uint64_t v33 = *MEMORY[0x263F49F80];
    id v34 = &unk_26D0439E0;
    BOOL v13 = [NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
    BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13];

    if (v14)
    {
      if (*(void *)(a1 + 48))
      {
        id v15 = MEMORY[0x223C37380]();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        void v31[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke_934;
        void v31[3] = &unk_2644D2B90;
        id v32 = *(id *)(a1 + 48);
        BOOL v16 = (void *)MEMORY[0x223C37380](v31);
        id v17 = *(void **)(a1 + 40);
        id v18 = (void *)MEMORY[0x223C37380](v15);
        [v17 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v18 errorHandler:v16];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v29 = pk_Payment_log();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        id v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v14;
        uint64_t v26 = "Warning: No response expected for message with identifier %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v24 = pk_Payment_log();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        id v15 = pk_Payment_log();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v36 = v11;
        uint64_t v26 = "Error: No message identifier for protobuf %@";
        id v27 = v15;
        os_log_type_t v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  id v19 = pk_General_log();
  BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    id v21 = pk_General_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      id v22 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138477827;
      uint64_t v36 = v22;
      _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to reject car key invitation with nil message (%{private}@)", buf, 0xCu);
    }
  }
  uint64_t v23 = *(void *)(a1 + 48);
  if (v23)
  {
    PKDisplayableErrorForCommonType();
    id v7 = (NPKProtoCarKeyRejectInvitationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, NPKProtoCarKeyRejectInvitationRequest *))(v23 + 16))(v23, 0, v7);
LABEL_24:
  }
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke_934(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)carKeyRejectInvitationResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyRejectInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v36 = 0x3032000000;
  __int16 v37 = __Block_byref_object_copy__364;
  __int16 v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v29 = 0;
  BOOL v30 = &v29;
  uint64_t v31 = 0x3032000000;
  id v32 = __Block_byref_object_copy__23;
  uint64_t v33 = __Block_byref_object_dispose__23;
  id v34 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = &v23;
  uint64_t v25 = 0x3032000000;
  uint64_t v26 = __Block_byref_object_copy__23;
  id v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitationResponse___block_invoke;
    block[3] = &unk_2644D7808;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    p_long long buf = &buf;
    id v21 = &v29;
    id v22 = &v23;
    dispatch_sync(v11, block);
  }
  else
  {
    id v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitationResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCarKeyRejectInvitationResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoCarKeyRejectInvitationResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCarKeyRejectInvitationResponse *)v7 hasCancelationMessageData];
    if (v12)
    {
      v1 = [(NPKProtoCarKeyRejectInvitationResponse *)v7 cancelationMessageData];
      BOOL v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {
    }
    BOOL v18 = [(NPKProtoCarKeyRejectInvitationResponse *)v7 hasErrorData];
    if (v18)
    {
      v1 = [(NPKProtoCarKeyRejectInvitationResponse *)v7 errorData];
      id v19 = objc_opt_class();
      BOOL v20 = NPKSecureUnarchiveObject(v1, v19);
    }
    else
    {
      BOOL v20 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {
    }
  }
  else
  {
    uint64_t v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      id v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)cancelAutoTopUpForPassWithUniqueIdentifier:(id)a3 balanceIdentifiers:(id)a4 completion:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isAutoTopUpSupported])
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke;
    block[3] = &unk_2644D35E0;
    id v17 = v8;
    id v18 = v9;
    id v19 = self;
    id v20 = v10;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support auto top up.", v15, 2u);
      }
    }
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
      *(_DWORD *)long long buf = 138412802;
      uint64_t v43 = v5;
      __int16 v44 = 2112;
      uint64_t v45 = v6;
      __int16 v46 = 2112;
      uint64_t v47 = v7;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to cancel auto top up for pass with id: %@, balanceIdentifiers : %@, completion: %@", buf, 0x20u);
    }
  }
  if (*(void *)(a1 + 32))
  {
    id v8 = objc_alloc_init(NPKProtoCancelAutoTopUpRequest);
    [(NPKProtoCancelAutoTopUpRequest *)v8 setUniqueID:*(void *)(a1 + 32)];
    id v9 = *(void **)(a1 + 40);
    v38[0] = MEMORY[0x263EF8330];
    v38[1] = 3221225472;
    void v38[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_938;
    void v38[3] = &unk_2644D65E8;
    id v10 = v8;
    id v39 = v10;
    [v9 enumerateObjectsUsingBlock:v38];
    id v11 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v12 = [(NPKProtoCancelAutoTopUpRequest *)v10 data];
    BOOL v13 = (void *)[v11 initWithProtobufData:v12 type:138 isResponse:0];

    BOOL v14 = *(void **)(a1 + 48);
    uint64_t v40 = *MEMORY[0x263F49F80];
    uint64_t v41 = &unk_26D0439E0;
    uint64_t v15 = [NSDictionary dictionaryWithObjects:&v41 forKeys:&v40 count:1];
    BOOL v16 = [v14 _sendProtobuf:v13 responseExpected:1 extraOptions:v15];

    if (v16)
    {
      if (*(void *)(a1 + 56))
      {
        id v17 = MEMORY[0x223C37380]();
        uint64_t v33 = MEMORY[0x263EF8330];
        uint64_t v34 = 3221225472;
        id v35 = __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_2;
        uint64_t v36 = &unk_2644D2B90;
        id v37 = *(id *)(a1 + 56);
        id v18 = (void *)MEMORY[0x223C37380](&v33);
        id v19 = *(void **)(a1 + 48);
        id v20 = (void *)MEMORY[0x223C37380](v17);
        objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18, v33, v34, v35, v36);

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v31 = pk_Payment_log();
      BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        id v17 = pk_Payment_log();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v43 = v16;
        id v28 = "Warning: No response expected for message with identifier %@";
        uint64_t v29 = v17;
        os_log_type_t v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v26 = pk_Payment_log();
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        id v17 = pk_Payment_log();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v43 = v13;
        id v28 = "Error: No message identifier for protobuf %@";
        uint64_t v29 = v17;
        os_log_type_t v30 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v29, v30, v28, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  id v21 = pk_General_log();
  BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

  if (v22)
  {
    uint64_t v23 = pk_General_log();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      uint64_t v24 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v43 = v24;
      _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_ERROR, "Error: Unable to fetch pass with unique identifier (%@)", buf, 0xCu);
    }
  }
  uint64_t v25 = *(void *)(a1 + 56);
  if (v25) {
    (*(void (**)(uint64_t, void))(v25 + 16))(v25, 0);
  }
}

uint64_t __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_938(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addBalanceIdentifiers:a2];
}

void __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)cancelAutoTopUpResponse:(id)a3
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Cancel auto top up incoming protobuf %@", (uint8_t *)&buf, 0xCu);
    }
  }
  id v9 = [v4 context];
  uint64_t v10 = [v9 incomingResponseIdentifier];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v27 = 0x3032000000;
  id v28 = __Block_byref_object_copy__364;
  uint64_t v29 = __Block_byref_object_dispose__365;
  id v30 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  if (v10)
  {
    id v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v18 = v10;
    id v19 = v4;
    id v20 = &v22;
    p_long long buf = &buf;
    dispatch_sync(v11, block);
  }
  else
  {
    BOOL v12 = pk_Payment_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      BOOL v14 = pk_Payment_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v16 = 0;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }
    }
  }
  uint64_t v15 = *(void *)(*((void *)&buf + 1) + 40);
  if (v15) {
    (*(void (**)(uint64_t, void))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  }
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);
}

void __69__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoCancelAutoTopUpResponse alloc];
    BOOL v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoCancelAutoTopUpResponse *)v4 initWithData:v5];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(NPKProtoCancelAutoTopUpResponse *)v6 success];
    uint64_t v7 = [v3 completionHandler];
    uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }
  else
  {
    uint64_t v10 = pk_Payment_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      BOOL v12 = pk_Payment_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)BOOL v13 = 0;
        _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v13, 2u);
      }
    }
  }
}

- (void)serviceProviderDataForPassWithUniqueIdentifierResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [v4 npkDescription];
      id v9 = [v4 data];
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = [v9 length];
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target serviceProviderDataForPassWithUniqueIdentifierResponse: incoming protobuf %@. Data size: %lu", buf, 0x16u);
    }
  }
  uint64_t v10 = [v4 context];
  BOOL v11 = [v10 incomingResponseIdentifier];

  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  __int16 v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  v34[0] = 0;
  v34[1] = v34;
  void v34[2] = 0x3032000000;
  v34[3] = __Block_byref_object_copy__23;
  void v34[4] = __Block_byref_object_dispose__23;
  id v35 = 0;
  v32[0] = 0;
  v32[1] = v32;
  void v32[2] = 0x2020000000;
  char v33 = 0;
  v30[0] = 0;
  v30[1] = v30;
  void v30[2] = 0x3032000000;
  void v30[3] = __Block_byref_object_copy__23;
  void v30[4] = __Block_byref_object_dispose__23;
  id v31 = 0;
  if (v11)
  {
    BOOL v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifierResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v24 = v11;
    id v25 = v4;
    uint64_t v26 = buf;
    uint64_t v27 = v34;
    id v28 = v32;
    uint64_t v29 = v30;
    dispatch_sync(v12, block);
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      uint64_t v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v22, 2u);
      }
    }
  }
  if (*(void *)(*(void *)&buf[8] + 40))
  {
    BOOL v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      id v18 = pk_Payment_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target serviceProviderDataForPassWithUniqueIdentifierResponse. Calling completion block", v22, 2u);
      }
    }
    (*(void (**)(void))(*(void *)(*(void *)&buf[8] + 40) + 16))();
  }
  else
  {
    id v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      id v21 = pk_Payment_log();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Warning: Target serviceProviderDataForPassWithUniqueIdentifierResponse. No completion block to call, unexpected.", v22, 2u);
      }
    }
  }
  _Block_object_dispose(v30, 8);

  _Block_object_dispose(v32, 8);
  _Block_object_dispose(v34, 8);

  _Block_object_dispose(buf, 8);
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifierResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *)v5 initWithData:v6];

    uint64_t v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *)v7 serviceProviderData];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *)v7 encrypted];
    BOOL v15 = [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *)v7 hasErrorData];
    if (v15)
    {
      v1 = [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *)v7 errorData];
      BOOL v16 = objc_opt_class();
      BOOL v17 = NPKSecureUnarchiveObject(v1, v16);
    }
    else
    {
      BOOL v17 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v17);
    if (v15)
    {
    }
  }
  else
  {
    id v18 = pk_Payment_log();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      BOOL v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }
    }
  }
}

- (void)serviceProviderDataForPassWithUniqueIdentifier:(id)a3 encrypted:(BOOL)a4 completion:(id)a5
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v8 = (__CFString *)a3;
  id v9 = a5;
  uint64_t v10 = NPKPairedOrPairingDevice();
  BOOL v11 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"674FD660-822D-4A0A-8A10-7ED7299FB8F7"];
  if ([v10 supportsCapability:v11])
  {
    int v12 = 1;
  }
  else
  {
    uint64_t v13 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"FA784EAB-0396-4E07-B68A-66815BB84E3E"];
    if ([v10 supportsCapability:v13])
    {
      int v12 = 1;
    }
    else
    {
      BOOL v14 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"D3581A95-1F64-4EBD-8F71-0CD6B696D766"];
      int v12 = [v10 supportsCapability:v14];
    }
  }

  BOOL v15 = pk_General_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    BOOL v17 = pk_General_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      id v18 = @"NO";
      if (v12) {
        id v18 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      id v30 = v18;
      _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device serviceProviderDataForPassWithUniqueIdentifier, Service Provider Data support %@", buf, 0xCu);
    }
  }
  if (v12)
  {
    BOOL v19 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v24[0] = MEMORY[0x263EF8330];
    v24[1] = 3221225472;
    void v24[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke;
    v24[3] = &unk_2644D7C18;
    BOOL v28 = a4;
    id v25 = v8;
    uint64_t v26 = self;
    id v27 = v9;
    dispatch_sync(v19, v24);

    BOOL v20 = v25;
LABEL_21:

    goto LABEL_22;
  }
  id v21 = pk_General_log();
  BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

  if (v22)
  {
    uint64_t v23 = pk_General_log();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v30 = v8;
      _os_log_impl(&dword_21E92F000, v23, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support the message. Not sending message to get Service Provider data for pass with unique ID %@.", buf, 0xCu);
    }
  }
  if (v9)
  {
    BOOL v20 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
    (*((void (**)(id, void, void *))v9 + 2))(v9, 0, v20);
    goto LABEL_21;
  }
LABEL_22:
}

void __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v2 = pk_General_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    id v4 = pk_General_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v34 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Service Provider data for pass with unique ID %@. Sending message", buf, 0xCu);
    }
  }
  BOOL v6 = objc_alloc_init(NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest);
  [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest *)v6 setPassUniqueID:*(void *)(a1 + 32)];
  [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest *)v6 setEncrypted:*(unsigned __int8 *)(a1 + 56)];
  id v7 = objc_alloc(MEMORY[0x263F4A228]);
  uint64_t v8 = [(NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest *)v6 data];
  id v9 = (void *)[v7 initWithProtobufData:v8 type:104 isResponse:0];

  uint64_t v10 = *MEMORY[0x263F49EC0];
  v31[0] = *MEMORY[0x263F49F08];
  v31[1] = v10;
  v32[0] = MEMORY[0x263EFFA88];
  v32[1] = MEMORY[0x263EFFA88];
  BOOL v11 = [NSDictionary dictionaryWithObjects:v32 forKeys:v31 count:2];
  int v12 = [*(id *)(a1 + 40) _sendProtobuf:v9 responseExpected:1 extraOptions:v11 priority:300];
  if (v12)
  {
    uint64_t v13 = *(void **)(a1 + 48);
    if (v13)
    {
      v28[0] = MEMORY[0x263EF8330];
      v28[1] = 3221225472;
      void v28[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_951;
      v28[3] = &unk_2644D8398;
      char v30 = *(unsigned char *)(a1 + 56);
      uint64_t v29 = v13;
      BOOL v14 = (void *)MEMORY[0x223C37380](v28);
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      void v26[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_953;
      void v26[3] = &unk_2644D2B90;
      id v27 = *(id *)(a1 + 48);
      BOOL v15 = (void *)MEMORY[0x223C37380](v26);
      BOOL v16 = *(void **)(a1 + 40);
      BOOL v17 = (void *)MEMORY[0x223C37380](v14);
      [v16 _trackOutstandingRequestWithMessageIdentifier:v12 completionHandler:v17 errorHandler:v15];

      id v18 = v29;
LABEL_15:

      goto LABEL_16;
    }
    id v24 = pk_Payment_log();
    BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      id v18 = pk_Payment_log();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v34 = v12;
      id v21 = "Warning: No response expected for message with identifier %@";
      BOOL v22 = v18;
      os_log_type_t v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    BOOL v19 = pk_Payment_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      id v18 = pk_Payment_log();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v34 = v9;
      id v21 = "Error: No message identifier for protobuf %@";
      BOOL v22 = v18;
      os_log_type_t v23 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_21E92F000, v22, v23, v21, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:
}

void __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_951(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (*(unsigned __int8 *)(a1 + 40) != a3)
  {
    id v9 = pk_Payment_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);

    if (v10)
    {
      BOOL v11 = pk_Payment_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)BOOL v14 = 0;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_ERROR, "Error: Got result back that didn't match requested encryption status", v14, 2u);
      }
    }
    uint64_t v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];

    id v7 = 0;
    id v8 = (id)v12;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (v13) {
    (*(void (**)(uint64_t, id, id))(v13 + 16))(v13, v7, v8);
  }
}

void __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_953(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v3);
  }
}

- (void)encryptedServiceProviderDataForSecureElementPass:(id)a3 completion:(id)a4
{
}

- (void)serviceProviderDataForSecureElementPass:(id)a3 encrypted:(BOOL)a4 completion:(id)a5
{
  BOOL v5 = a4;
  id v8 = a5;
  id v9 = [a3 uniqueID];
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForSecureElementPass_encrypted_completion___block_invoke;
  v11[3] = &unk_2644D83C0;
  id v12 = v8;
  id v10 = v8;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self serviceProviderDataForPassWithUniqueIdentifier:v9 encrypted:v5 completion:v11];
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForSecureElementPass_encrypted_completion___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7)
  {
    if (!v5 || v6)
    {
      (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v6);
    }
    else
    {
      id v16 = 0;
      id v8 = [MEMORY[0x263F08900] JSONObjectWithData:v5 options:0 error:&v16];
      id v6 = v16;
      id v9 = pk_General_log();
      BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        BOOL v11 = pk_General_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          id v18 = v8;
          _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Received encrypted payload %@", buf, 0xCu);
        }
      }
      if (v6)
      {
        id v12 = pk_General_log();
        BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

        if (v13)
        {
          BOOL v14 = pk_General_log();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 138412290;
            id v18 = v6;
            _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Error converting encrypted payload to JSON string: %@", buf, 0xCu);
          }
        }
        id v15 = v6;
      }
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

- (void)paymentSetupFeaturesForConfigurationResponse:(id)a3
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v4 npkDescription];
      id v9 = [v4 data];
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = [v9 length];
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target paymentSetupFeaturesForConfigurationResponse: incoming protobuf %@. Data size: %lu", buf, 0x16u);
    }
  }
  BOOL v10 = [v4 context];
  BOOL v11 = [v10 incomingResponseIdentifier];

  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  id v37 = __Block_byref_object_copy__364;
  __int16 v38 = __Block_byref_object_dispose__365;
  id v39 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = &v28;
  uint64_t v30 = 0x3032000000;
  uint64_t v31 = __Block_byref_object_copy__23;
  BOOL v32 = __Block_byref_object_dispose__23;
  id v33 = 0;
  if (v11)
  {
    id v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfigurationResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v24 = v11;
    id v25 = v4;
    uint64_t v26 = buf;
    id v27 = &v28;
    dispatch_sync(v12, block);
  }
  else
  {
    BOOL v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v34, 2u);
      }
    }
  }
  if (*(void *)(*(void *)&buf[8] + 40))
  {
    id v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      id v18 = pk_Payment_log();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v19 = v29[5];
        *(_DWORD *)uint64_t v34 = 138412290;
        uint64_t v35 = v19;
        _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target paymentSetupFeaturesForConfigurationResponse. Calling completion block with response %@", v34, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(*(void *)&buf[8] + 40) + 16))();
  }
  else
  {
    BOOL v20 = pk_Payment_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      BOOL v22 = pk_Payment_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Warning: Target paymentSetupFeaturesForConfigurationResponse. No completion block to call, unexpected.", v34, 2u);
      }
    }
  }
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfigurationResponse___block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [NPKProtoPaymentSetupFeaturesForConfigurationResponse alloc];
    id v5 = [*(id *)(a1 + 48) data];
    BOOL v6 = [(NPKProtoPaymentSetupFeaturesForConfigurationResponse *)v4 initWithData:v5];

    uint64_t v7 = [*(id *)(a1 + 32) outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v8 = [v3 completionHandler];
    uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    BOOL v11 = [(NPKProtoPaymentSetupFeaturesForConfigurationResponse *)v6 paymentSetupFeatureDatas];
    uint64_t v12 = objc_msgSend(v11, "pk_arrayBySafelyApplyingBlock:", &__block_literal_global_959);
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
  else
  {
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v18 = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v18, 2u);
      }
    }
  }
}

id __90__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfigurationResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = objc_opt_class();
  id v4 = NPKSecureUnarchiveObject(v2, v3);

  return v4;
}

- (void)paymentSetupFeaturesForConfiguration:(id)a3 completion:(id)a4
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = NPKPairedOrPairingDevice();
  uint64_t v9 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"C990FB84-055B-467E-B7AD-EB88FCE19825"];
  char v10 = [v8 supportsCapability:v9];

  if (v10)
  {
    BOOL v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke;
    block[3] = &unk_2644D3388;
    void block[4] = self;
    id v16 = v6;
    id v17 = v7;
    dispatch_sync(v11, block);
  }
  else
  {
    uint64_t v12 = pk_General_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_General_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v19 = v6;
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support the message. Not sending message to get payment setup features for configuration %@.", buf, 0xCu);
      }
    }
    if (v7) {
      (*((void (**)(id, void))v7 + 2))(v7, 0);
    }
  }
}

void __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke(id *a1)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  id v2 = [a1[4] provisioningService];
  char CanSendMessage = NPKProtoCanSendMessage(v2);

  id v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (CanSendMessage)
  {
    if (v5)
    {
      id v6 = pk_General_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = a1[5];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v7;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Payment setup features for configuration %@. Sending message", buf, 0xCu);
      }
    }
    uint64_t v8 = objc_alloc_init(NPKProtoPaymentSetupFeaturesForConfigurationRequest);
    uint64_t v9 = NPKSecureArchiveObject(a1[5]);
    [(NPKProtoPaymentSetupFeaturesForConfigurationRequest *)v8 setConfigurationData:v9];

    id v10 = objc_alloc(MEMORY[0x263F4A228]);
    BOOL v11 = [(NPKProtoPaymentSetupFeaturesForConfigurationRequest *)v8 data];
    uint64_t v12 = (void *)[v10 initWithProtobufData:v11 type:120 isResponse:0];

    uint64_t v13 = *MEMORY[0x263F49EC0];
    v32[0] = *MEMORY[0x263F49F08];
    v32[1] = v13;
    v33[0] = MEMORY[0x263EFFA88];
    v33[1] = MEMORY[0x263EFFA88];
    void v32[2] = *MEMORY[0x263F49F80];
    void v33[2] = &unk_26D0439F0;
    BOOL v14 = [NSDictionary dictionaryWithObjects:v33 forKeys:v32 count:3];
    id v15 = [a1[4] _sendProtobuf:v12 responseExpected:1 extraOptions:v14 priority:300];
    if (v15)
    {
      if (a1[6])
      {
        id v16 = MEMORY[0x223C37380]();
        v30[0] = MEMORY[0x263EF8330];
        v30[1] = 3221225472;
        void v30[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke_965;
        void v30[3] = &unk_2644D2B90;
        id v31 = a1[6];
        id v17 = (void *)MEMORY[0x223C37380](v30);
        id v18 = a1[4];
        id v19 = (void *)MEMORY[0x223C37380](v16);
        [v18 _trackOutstandingRequestWithMessageIdentifier:v15 completionHandler:v19 errorHandler:v17];

LABEL_22:
        goto LABEL_23;
      }
      uint64_t v28 = pk_Payment_log();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        id v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v15;
        id v25 = "Warning: No response expected for message with identifier %@";
        uint64_t v26 = v16;
        os_log_type_t v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      os_log_type_t v23 = pk_Payment_log();
      BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        id v16 = pk_Payment_log();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v35 = v12;
        id v25 = "Error: No message identifier for protobuf %@";
        uint64_t v26 = v16;
        os_log_type_t v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  if (v5)
  {
    uint64_t v20 = pk_General_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v21 = a1[5];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v35 = v21;
      _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Payment setup features for configuration %@, device is not connected, will not send message", buf, 0xCu);
    }
  }
  BOOL v22 = (void (**)(id, void))a1[6];
  if (v22) {
    v22[2](v22, 0);
  }
}

void __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke_965(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    id v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
}

- (void)hasActiveExternallySharedPassesResponse:(id)a3
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    uint64_t v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v4 npkDescription];
      id v9 = [v4 data];
      *(_DWORD *)long long buf = 138412546;
      *(void *)&uint8_t buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = [v9 length];
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target hasActiveExternallySharedPassesResponse: incoming protobuf %@. Data size: %lu", buf, 0x16u);
    }
  }
  uint64_t v10 = [v4 context];
  BOOL v11 = [v10 incomingResponseIdentifier];

  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  __int16 v44 = __Block_byref_object_copy__364;
  uint64_t v45 = __Block_byref_object_dispose__365;
  id v46 = 0;
  uint64_t v37 = 0;
  __int16 v38 = &v37;
  uint64_t v39 = 0x2020000000;
  char v40 = 0;
  uint64_t v31 = 0;
  BOOL v32 = &v31;
  uint64_t v33 = 0x3032000000;
  uint64_t v34 = __Block_byref_object_copy__23;
  uint64_t v35 = __Block_byref_object_dispose__23;
  id v36 = 0;
  if (v11)
  {
    uint64_t v12 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v25[0] = MEMORY[0x263EF8330];
    v25[1] = 3221225472;
    void v25[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesResponse___block_invoke;
    v25[3] = &unk_2644D7808;
    void v25[4] = self;
    id v26 = v11;
    id v27 = v4;
    uint64_t v28 = buf;
    BOOL v29 = &v37;
    uint64_t v30 = &v31;
    dispatch_sync(v12, v25);
  }
  else
  {
    uint64_t v13 = pk_Payment_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      id v15 = pk_Payment_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }
    }
  }
  if (*(void *)(*(void *)&buf[8] + 40))
  {
    id v16 = pk_Payment_log();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      uint64_t v20 = pk_Payment_log();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        int v21 = *((unsigned __int8 *)v38 + 24);
        *(_DWORD *)uint64_t v41 = 67109120;
        int v42 = v21;
        _os_log_impl(&dword_21E92F000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Target hasActiveExternallySharedPassesResponse. Calling completion block with response %d", v41, 8u);
      }
    }
    (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)&buf[8] + 40) + 16))(*(void *)(*(void *)&buf[8] + 40), *((unsigned __int8 *)v38 + 24), v32[5], v18, v19);
  }
  else
  {
    BOOL v22 = pk_Payment_log();
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

    if (v23)
    {
      BOOL v24 = pk_Payment_log();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl(&dword_21E92F000, v24, OS_LOG_TYPE_DEFAULT, "Warning: Target hasActiveExternallySharedPassesResponse. No completion block to call, unexpected.", v41, 2u);
      }
    }
  }
  _Block_object_dispose(&v31, 8);

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesResponse___block_invoke(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoHasActiveExternallySharedPassesResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    uint64_t v7 = [(NPKProtoHasActiveExternallySharedPassesResponse *)v5 initWithData:v6];

    int v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [(NPKProtoHasActiveExternallySharedPassesResponse *)v7 hasActiveExternallySharedPasses];
    BOOL v12 = [(NPKProtoHasActiveExternallySharedPassesResponse *)v7 hasErrorData];
    if (v12)
    {
      v1 = [(NPKProtoHasActiveExternallySharedPassesResponse *)v7 errorData];
      uint64_t v13 = objc_opt_class();
      BOOL v14 = NPKSecureUnarchiveObject(v1, v13);
    }
    else
    {
      BOOL v14 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {
    }
  }
  else
  {
    id v15 = pk_Payment_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      BOOL v17 = pk_Payment_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_21E92F000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }
    }
  }
}

- (void)hasActiveExternallySharedPasses:(id)a3
{
  id v4 = a3;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPasses___block_invoke;
  v6[3] = &unk_2644D28C0;
  id v7 = v4;
  id v5 = v4;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self hasActiveExternallySharedPassesWithCompletion:v6];
}

uint64_t __77__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPasses___block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

- (void)currentSecureElementSnapshot:(id)a3
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v4 = a3;
  if (v4)
  {
    if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isParallelProvisioningSupported])
    {
      id v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
      v12[0] = MEMORY[0x263EF8330];
      v12[1] = 3221225472;
      v12[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke;
      v12[3] = &unk_2644D2E58;
      void v12[4] = self;
      id v13 = v4;
      dispatch_sync(v5, v12);
    }
    else
    {
      uint64_t v9 = pk_General_log();
      BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        BOOL v11 = pk_General_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136315138;
          id v15 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshot:]";
          _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %s, not supported, will not send message", buf, 0xCu);
        }
      }
      (*((void (**)(id, void, void))v4 + 2))(v4, 0, 0);
    }
  }
  else
  {
    BOOL v6 = pk_General_log();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      int v8 = pk_General_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        id v15 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshot:]";
        _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: %s, nil completion, will not send message", buf, 0xCu);
      }
    }
  }
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoCurrentSecureElementSnapshotRequest);
  id v3 = objc_alloc(MEMORY[0x263F4A228]);
  id v4 = [(NPKProtoCurrentSecureElementSnapshotRequest *)v2 data];
  id v5 = (void *)[v3 initWithProtobufData:v4 type:134 isResponse:0];

  BOOL v6 = *(void **)(a1 + 32);
  BOOL v7 = [v6 _idsShortSendTimeoutProvisioningOptions];
  int v8 = [v6 _sendProtobuf:v5 responseExpected:1 extraOptions:v7 priority:300];

  if (v8)
  {
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    void v15[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke_2;
    v15[3] = &unk_2644D2B90;
    uint64_t v16 = *(id *)(a1 + 40);
    uint64_t v9 = (void *)MEMORY[0x223C37380](v15);
    BOOL v10 = *(void **)(a1 + 32);
    BOOL v11 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 40));
    [v10 _trackOutstandingRequestWithMessageIdentifier:v8 completionHandler:v11 errorHandler:v9];

    BOOL v12 = v16;
  }
  else
  {
    id v13 = pk_General_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (!v14) {
      goto LABEL_4;
    }
    BOOL v12 = pk_General_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315394;
      uint64_t v18 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshot:]_block_invoke";
      __int16 v19 = 2112;
      uint64_t v20 = v5;
      _os_log_impl(&dword_21E92F000, v12, OS_LOG_TYPE_ERROR, "Error: %s, No message identifier for protobuf %@", buf, 0x16u);
    }
  }

LABEL_4:
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for currentSecureElementSnapshot", (uint8_t *)&v7, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)currentSecureElementSnapshotResponse:(id)a3
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = [v4 context];
  BOOL v6 = [v5 incomingResponseIdentifier];

  uint64_t v33 = 0;
  uint64_t v34 = &v33;
  uint64_t v35 = 0x3032000000;
  id v36 = __Block_byref_object_copy__364;
  uint64_t v37 = __Block_byref_object_dispose__365;
  id v38 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = &v27;
  uint64_t v29 = 0x3032000000;
  uint64_t v30 = __Block_byref_object_copy__23;
  uint64_t v31 = __Block_byref_object_dispose__23;
  id v32 = 0;
  uint64_t v21 = 0;
  BOOL v22 = &v21;
  uint64_t v23 = 0x3032000000;
  BOOL v24 = __Block_byref_object_copy__23;
  id v25 = __Block_byref_object_dispose__23;
  id v26 = 0;
  if (v6)
  {
    int v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    void v15[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshotResponse___block_invoke;
    v15[3] = &unk_2644D7808;
    void v15[4] = self;
    id v16 = v6;
    id v17 = v4;
    uint64_t v18 = &v33;
    __int16 v19 = &v27;
    uint64_t v20 = &v21;
    dispatch_sync(v7, v15);
  }
  else
  {
    id v8 = pk_General_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      BOOL v10 = pk_General_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }
    }
  }
  uint64_t v11 = v34[5];
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v11, v28[5], v22[5]);
  }
  else
  {
    BOOL v12 = pk_General_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_General_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        char v40 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshotResponse:]";
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }
    }
  }
  _Block_object_dispose(&v21, 8);

  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v33, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshotResponse___block_invoke(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoCurrentSecureElementSnapshotResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    int v7 = [(NPKProtoCurrentSecureElementSnapshotResponse *)v5 initWithData:v6];

    id v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [(NPKProtoCurrentSecureElementSnapshotResponse *)v7 snapshot];
    BOOL v13 = objc_opt_class();
    uint64_t v14 = NPKSecureUnarchiveObject(v12, v13);
    uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    BOOL v17 = [(NPKProtoCurrentSecureElementSnapshotResponse *)v7 hasErrorData];
    if (v17)
    {
      v1 = [(NPKProtoCurrentSecureElementSnapshotResponse *)v7 errorData];
      uint64_t v18 = objc_opt_class();
      __int16 v19 = NPKSecureUnarchiveObject(v1, v18);
    }
    else
    {
      __int16 v19 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v19);
    if (v17)
    {
    }
  }
  else
  {
    uint64_t v20 = pk_General_log();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      BOOL v22 = pk_General_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        int v23 = 136315138;
        BOOL v24 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshotResponse:]_block_invoke";
        _os_log_impl(&dword_21E92F000, v22, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", (uint8_t *)&v23, 0xCu);
      }
    }
  }
}

- (void)reserveStorageForAppletTypes:(id)a3 metadata:(id)a4 completion:(id)a5
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if (v10)
  {
    if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isParallelProvisioningSupported])
    {
      uint64_t v11 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
      v15[0] = MEMORY[0x263EF8330];
      v15[1] = 3221225472;
      void v15[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke;
      v15[3] = &unk_2644D3540;
      id v16 = v8;
      id v17 = v9;
      uint64_t v18 = self;
      id v19 = v10;
      dispatch_sync(v11, v15);
    }
    else
    {
      (*((void (**)(id, void, void, void))v10 + 2))(v10, 0, 0, 0);
    }
  }
  else
  {
    BOOL v12 = pk_General_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      uint64_t v14 = pk_General_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        BOOL v21 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypes:metadata:completion:]";
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: %s, nil completion, will not send message", buf, 0xCu);
      }
    }
  }
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoReserveStorageForAppletTypesRequest);
  id v3 = (void *)[*(id *)(a1 + 32) mutableCopy];
  [(NPKProtoReserveStorageForAppletTypesRequest *)v2 setAppletTypes:v3];

  id v4 = NPKSecureArchiveObject(*(void **)(a1 + 40));
  [(NPKProtoReserveStorageForAppletTypesRequest *)v2 setMetadata:v4];

  id v5 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v6 = [(NPKProtoReserveStorageForAppletTypesRequest *)v2 data];
  int v7 = (void *)[v5 initWithProtobufData:v6 type:135 isResponse:0];

  id v8 = *(void **)(a1 + 48);
  id v9 = [v8 _idsShortSendTimeoutProvisioningOptions];
  id v10 = [v8 _sendProtobuf:v7 responseExpected:1 extraOptions:v9 priority:300];

  if (v10)
  {
    v17[0] = MEMORY[0x263EF8330];
    v17[1] = 3221225472;
    void v17[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke_2;
    v17[3] = &unk_2644D2B90;
    uint64_t v18 = *(id *)(a1 + 56);
    uint64_t v11 = (void *)MEMORY[0x223C37380](v17);
    BOOL v12 = *(void **)(a1 + 48);
    BOOL v13 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 56));
    [v12 _trackOutstandingRequestWithMessageIdentifier:v10 completionHandler:v13 errorHandler:v11];

    uint64_t v14 = v18;
  }
  else
  {
    uint64_t v15 = pk_General_log();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (!v16) {
      goto LABEL_4;
    }
    uint64_t v14 = pk_General_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315394;
      uint64_t v20 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypes:metadata:completion:]_block_invoke";
      __int16 v21 = 2112;
      uint64_t v22 = v7;
      _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_ERROR, "Error: %s, No message identifier for protobuf %@", buf, 0x16u);
    }
  }

LABEL_4:
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    BOOL v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for reserveStorageForAppletTypes", (uint8_t *)&v7, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)reserveStorageForAppletTypesResponse:(id)a3
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = [v4 context];
  BOOL v6 = [v5 incomingResponseIdentifier];

  uint64_t v39 = 0;
  char v40 = &v39;
  uint64_t v41 = 0x3032000000;
  int v42 = __Block_byref_object_copy__364;
  uint64_t v43 = __Block_byref_object_dispose__365;
  id v44 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = &v33;
  uint64_t v35 = 0x3032000000;
  id v36 = __Block_byref_object_copy__23;
  uint64_t v37 = __Block_byref_object_dispose__23;
  id v38 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x2020000000;
  char v32 = 0;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x3032000000;
  id v26 = __Block_byref_object_copy__23;
  uint64_t v27 = __Block_byref_object_dispose__23;
  id v28 = 0;
  if (v6)
  {
    int v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypesResponse___block_invoke;
    block[3] = &unk_2644D7768;
    void block[4] = self;
    id v17 = v6;
    id v18 = v4;
    id v19 = &v39;
    uint64_t v20 = &v33;
    __int16 v21 = &v29;
    uint64_t v22 = &v23;
    dispatch_sync(v7, block);
  }
  else
  {
    id v8 = pk_General_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      id v10 = pk_General_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }
    }
  }
  uint64_t v11 = v40[5];
  if (v11)
  {
    if ([(id)v34[5] count]) {
      uint64_t v12 = v34[5];
    }
    else {
      uint64_t v12 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(v11 + 16))(v11, v12, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  else
  {
    BOOL v13 = pk_General_log();
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      uint64_t v15 = pk_General_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        id v46 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypesResponse:]";
        _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }
    }
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&v33, 8);

  _Block_object_dispose(&v39, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypesResponse___block_invoke(uint64_t a1)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoReserveStorageForAppletTypesResponse alloc];
    BOOL v6 = [*(id *)(a1 + 48) data];
    int v7 = [(NPKProtoReserveStorageForAppletTypesResponse *)v5 initWithData:v6];

    id v8 = [*(id *)(a1 + 32) outstandingRequests];
    [v8 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v9 = [v4 completionHandler];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    id v12 = objc_alloc_init(MEMORY[0x263EFF980]);
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    BOOL v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    uint64_t v15 = [v7 reservationIDs];
    uint64_t v16 = [v15 countByEnumeratingWithState:&v27 objects:v33 count:16];
    if (v16)
    {
      v1 = (void *)v16;
      uint64_t v17 = *(void *)v28;
      do
      {
        for (uint64_t i = 0; i != v1; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v28 != v17) {
            objc_enumerationMutation(v15);
          }
          id v19 = *(void **)(*((void *)&v27 + 1) + 8 * i);
          uint64_t v20 = objc_opt_class();
          __int16 v21 = NPKSecureUnarchiveObject(v19, v20);
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) npkSafelyAddObject:v21];
        }
        v1 = (void *)[v15 countByEnumeratingWithState:&v27 objects:v33 count:16];
      }
      while (v1);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v7 isFull];
    int v22 = [v7 hasErrorData];
    if (v22)
    {
      v1 = [v7 errorData];
      uint64_t v23 = objc_opt_class();
      BOOL v24 = NPKSecureUnarchiveObject(v1, v23);
    }
    else
    {
      BOOL v24 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v24);
    if (v22)
    {
    }
LABEL_17:

    goto LABEL_18;
  }
  uint64_t v25 = pk_General_log();
  BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

  if (v26)
  {
    int v7 = pk_General_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136315138;
      char v32 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypesResponse:]_block_invoke";
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", buf, 0xCu);
    }
    goto LABEL_17;
  }
LABEL_18:
}

- (void)deleteReservation:(id)a3 completion:(id)a4
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v6 = a3;
  int v7 = (void (**)(void))a4;
  if (v7)
  {
    if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isParallelProvisioningSupported])
    {
      id v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke;
      block[3] = &unk_2644D3388;
      id v16 = v6;
      uint64_t v17 = self;
      id v18 = v7;
      dispatch_sync(v8, block);
    }
    else
    {
      id v12 = pk_General_log();
      BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

      if (v13)
      {
        BOOL v14 = pk_General_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 136315138;
          uint64_t v20 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservation:completion:]";
          _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Notice: %s, not supported, will not send message", buf, 0xCu);
        }
      }
      v7[2](v7);
    }
  }
  else
  {
    uint64_t v9 = pk_General_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      uint64_t v11 = pk_General_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        uint64_t v20 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservation:completion:]";
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %s, nil completion, will not send message", buf, 0xCu);
      }
    }
  }
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc_init(NPKProtoDeleteReservationRequest);
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v24 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = NPKSecureArchiveObject(*(void **)(*((void *)&v23 + 1) + 8 * i));
        [(NPKProtoDeleteReservationRequest *)v2 addReservationID:v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }
    while (v5);
  }

  id v9 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v10 = [(NPKProtoDeleteReservationRequest *)v2 data];
  uint64_t v11 = (void *)[v9 initWithProtobufData:v10 type:136 isResponse:0];

  id v12 = *(void **)(a1 + 40);
  BOOL v13 = [v12 _idsShortSendTimeoutProvisioningOptions];
  BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13 priority:300];

  if (v14)
  {
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    void v21[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke_2;
    void v21[3] = &unk_2644D2B90;
    int v22 = *(id *)(a1 + 48);
    uint64_t v15 = (void *)MEMORY[0x223C37380](v21);
    id v16 = *(void **)(a1 + 40);
    uint64_t v17 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
    [v16 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v17 errorHandler:v15];

    id v18 = v22;
  }
  else
  {
    id v19 = pk_General_log();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (!v20) {
      goto LABEL_11;
    }
    id v18 = pk_General_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315394;
      long long v28 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservation:completion:]_block_invoke";
      __int16 v29 = 2112;
      long long v30 = v11;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_ERROR, "Error: %s, No message identifier for protobuf %@", buf, 0x16u);
    }
  }

LABEL_11:
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for deleteReservation", (uint8_t *)&v7, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)deleteReservationResponse:(id)a3
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = [v4 context];
  uint64_t v6 = [v5 incomingResponseIdentifier];

  uint64_t v18 = 0;
  id v19 = &v18;
  uint64_t v20 = 0x3032000000;
  uint64_t v21 = __Block_byref_object_copy__364;
  int v22 = __Block_byref_object_dispose__365;
  id v23 = 0;
  if (v6)
  {
    int v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_deleteReservationResponse___block_invoke;
    block[3] = &unk_2644D5B30;
    void block[4] = self;
    id v16 = v6;
    uint64_t v17 = &v18;
    dispatch_sync(v7, block);
  }
  else
  {
    id v8 = pk_General_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      BOOL v10 = pk_General_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }
    }
  }
  uint64_t v11 = v19[5];
  if (v11)
  {
    (*(void (**)(void))(v11 + 16))();
  }
  else
  {
    id v12 = pk_General_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_General_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        long long v25 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservationResponse:]";
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }
    }
  }
  _Block_object_dispose(&v18, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_deleteReservationResponse___block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v2 = [*(id *)(a1 + 32) outstandingRequests];
  id v3 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) outstandingRequests];
    [v4 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v5 = [v3 completionHandler];
    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
    int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }
  else
  {
    id v8 = pk_General_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      BOOL v10 = pk_General_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = 136315138;
        id v12 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservationResponse:]_block_invoke";
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", (uint8_t *)&v11, 0xCu);
      }
    }
  }
}

- (id)_idsShortSendTimeoutProvisioningOptions
{
  v6[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = *MEMORY[0x263F49EC0];
  v5[0] = *MEMORY[0x263F49F08];
  v5[1] = v2;
  v6[0] = MEMORY[0x263EFFA88];
  v6[1] = MEMORY[0x263EFFA88];
  v5[2] = *MEMORY[0x263F49F80];
  v6[2] = &unk_26D0439F0;
  id v3 = [NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:3];
  return v3;
}

- (void)addPendingProvisionings:(id)a3 completion:(id)a4
{
  v17[1] = *MEMORY[0x263EF8340];
  id v6 = a3;
  id v7 = a4;
  if ([(NPKPaymentWebServiceCompanionTargetDevice *)self _isParallelProvisioningSupported])
  {
    id v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 3221225472;
    v12[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke;
    v12[3] = &unk_2644D3388;
    id v13 = v6;
    BOOL v14 = self;
    id v15 = v7;
    dispatch_sync(v8, v12);

    BOOL v9 = v13;
  }
  else
  {
    BOOL v10 = (void *)MEMORY[0x263F087E8];
    uint64_t v16 = *MEMORY[0x263F07F80];
    v17[0] = @"Parallel provisioning not supported on this device.";
    int v11 = [NSDictionary dictionaryWithObjects:v17 forKeys:&v16 count:1];
    BOOL v9 = [v10 errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:v11];

    (*((void (**)(id, void *))v7 + 2))(v7, v9);
  }
}

void __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v2 = objc_alloc_init(NPKProtoAddPendingProvisioningRequest);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v21 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = NPKSecureArchiveObject(*(void **)(*((void *)&v20 + 1) + 8 * i));
        [(NPKProtoAddPendingProvisioningRequest *)v2 addPendingProvisioning:v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v5);
  }

  id v9 = objc_alloc(MEMORY[0x263F4A228]);
  BOOL v10 = [(NPKProtoAddPendingProvisioningRequest *)v2 data];
  int v11 = (void *)[v9 initWithProtobufData:v10 type:137 isResponse:0];

  id v12 = *(void **)(a1 + 40);
  id v13 = [v12 _idsShortSendTimeoutProvisioningOptions];
  BOOL v14 = [v12 _sendProtobuf:v11 responseExpected:1 extraOptions:v13 priority:300];

  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  void v18[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke_2;
  void v18[3] = &unk_2644D2B90;
  id v19 = *(id *)(a1 + 48);
  id v15 = (void *)MEMORY[0x223C37380](v18);
  uint64_t v16 = *(void **)(a1 + 40);
  uint64_t v17 = (void *)MEMORY[0x223C37380](*(void *)(a1 + 48));
  [v16 _trackOutstandingRequestWithMessageIdentifier:v14 completionHandler:v17 errorHandler:v15];
}

void __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_General_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for addPendingProvisionings", (uint8_t *)&v7, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)addPendingProvisioningsResponse:(id)a3
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v4 = a3;
  BOOL v5 = [v4 context];
  uint64_t v6 = [v5 incomingResponseIdentifier];

  uint64_t v26 = 0;
  long long v27 = &v26;
  uint64_t v28 = 0x3032000000;
  __int16 v29 = __Block_byref_object_copy__364;
  long long v30 = __Block_byref_object_dispose__365;
  id v31 = 0;
  uint64_t v20 = 0;
  long long v21 = &v20;
  uint64_t v22 = 0x3032000000;
  long long v23 = __Block_byref_object_copy__23;
  long long v24 = __Block_byref_object_dispose__23;
  id v25 = 0;
  if (v6)
  {
    int v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisioningsResponse___block_invoke;
    block[3] = &unk_2644D7880;
    void block[4] = self;
    id v16 = v6;
    id v17 = v4;
    uint64_t v18 = &v20;
    id v19 = &v26;
    dispatch_sync(v7, block);
  }
  else
  {
    id v8 = pk_General_log();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      BOOL v10 = pk_General_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }
    }
  }
  uint64_t v11 = v27[5];
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v11, v21[5]);
  }
  else
  {
    id v12 = pk_General_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      BOOL v14 = pk_General_log();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        uint64_t v33 = "-[NPKPaymentWebServiceCompanionTargetDevice addPendingProvisioningsResponse:]";
        _os_log_impl(&dword_21E92F000, v14, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }
    }
  }
  _Block_object_dispose(&v20, 8);

  _Block_object_dispose(&v26, 8);
}

void __77__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisioningsResponse___block_invoke(uint64_t a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v3 = [*(id *)(a1 + 32) outstandingRequests];
  id v4 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v4)
  {
    BOOL v5 = [NPKProtoAddPendingProvisioningResponse alloc];
    uint64_t v6 = [*(id *)(a1 + 48) data];
    int v7 = [(NPKProtoAddPendingProvisioningResponse *)v5 initWithData:v6];

    BOOL v8 = [(NPKProtoAddPendingProvisioningResponse *)v7 hasErrorData];
    if (v8)
    {
      v1 = [(NPKProtoAddPendingProvisioningResponse *)v7 errorData];
      BOOL v9 = objc_opt_class();
      BOOL v10 = NPKSecureUnarchiveObject(v1, v9);
    }
    else
    {
      BOOL v10 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v10);
    if (v8)
    {
    }
    BOOL v14 = [*(id *)(a1 + 32) outstandingRequests];
    [v14 removeObjectForKey:*(void *)(a1 + 40)];

    uint64_t v15 = [v4 completionHandler];
    uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8);
    id v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;
  }
  else
  {
    uint64_t v11 = pk_General_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      BOOL v13 = pk_General_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = 136315138;
        id v19 = "-[NPKPaymentWebServiceCompanionTargetDevice addPendingProvisioningsResponse:]_block_invoke";
        _os_log_impl(&dword_21E92F000, v13, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", (uint8_t *)&v18, 0xCu);
      }
    }
  }
}

- (void)addPendingProvisioningsRequest:(id)a3
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  id v3 = a3;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = [v3 npkDescription];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v41 = v7;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received add pending provisionings request: %@", buf, 0xCu);
    }
  }
  BOOL v8 = [NPKProtoAddPendingProvisioningRequest alloc];
  uint64_t v28 = v3;
  BOOL v9 = [v3 data];
  BOOL v10 = [(NPKProtoAddPendingProvisioningRequest *)v8 initWithData:v9];

  id v31 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithCapacity:", -[NPKProtoAddPendingProvisioningRequest pendingProvisioningsCount](v10, "pendingProvisioningsCount"));
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v27 = v10;
  id obj = [(NPKProtoAddPendingProvisioningRequest *)v10 pendingProvisionings];
  uint64_t v32 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v32)
  {
    uint64_t v30 = *(void *)v36;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v36 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v33 = (void *)MEMORY[0x263EFFA08];
        uint64_t v34 = *(void **)(*((void *)&v35 + 1) + 8 * v11);
        uint64_t v12 = objc_opt_class();
        uint64_t v13 = objc_opt_class();
        uint64_t v14 = objc_opt_class();
        uint64_t v15 = objc_opt_class();
        uint64_t v16 = objc_opt_class();
        uint64_t v17 = objc_opt_class();
        uint64_t v18 = objc_opt_class();
        uint64_t v19 = objc_opt_class();
        uint64_t v20 = objc_opt_class();
        long long v21 = objc_msgSend(v33, "setWithObjects:", v12, v13, v14, v15, v16, v17, v18, v19, v20, objc_opt_class(), 0);
        uint64_t v22 = NPKSecureUnarchiveObjectOfClasses(v34, v21);
        [v31 npkSafelyAddObject:v22];

        ++v11;
      }
      while (v32 != v11);
      uint64_t v32 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
    }
    while (v32);
  }

  long long v23 = pk_General_log();
  BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

  if (v24)
  {
    id v25 = pk_General_log();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      uint64_t v41 = v31;
      _os_log_impl(&dword_21E92F000, v25, OS_LOG_TYPE_DEFAULT, "Notice: Will add pending provisionings: %@", buf, 0xCu);
    }
  }
  id v26 = objc_alloc_init(MEMORY[0x263F5C0A8]);
  [v26 addPendingProvisionings:v31 completion:&__block_literal_global_988];
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisioningsRequest___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = pk_General_log();
  id v4 = v3;
  if (v2)
  {
    BOOL v5 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

    if (v5)
    {
      uint64_t v6 = pk_General_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138412290;
        id v13 = v2;
        int v7 = "Error: addPendingProvisionings: failed with error: %@";
        BOOL v8 = v6;
        os_log_type_t v9 = OS_LOG_TYPE_ERROR;
        uint32_t v10 = 12;
LABEL_8:
        _os_log_impl(&dword_21E92F000, v8, v9, v7, (uint8_t *)&v12, v10);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
  }
  else
  {
    BOOL v11 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      uint64_t v6 = pk_General_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v12) = 0;
        int v7 = "Notice: addPendingProvisionings: completed with success!";
        BOOL v8 = v6;
        os_log_type_t v9 = OS_LOG_TYPE_DEFAULT;
        uint32_t v10 = 2;
        goto LABEL_8;
      }
LABEL_9:
    }
  }
}

- (void)hasActiveExternallySharedPassesWithCompletion:(id)a3
{
  id v4 = a3;
  BOOL v5 = NPKPairedOrPairingDevice();
  uint64_t v6 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"FD975695-3B94-465A-86E1-26276C5835A8"];
  char v7 = [v5 supportsCapability:v6];

  if (v7)
  {
    BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self internalQueue];
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    _DWORD v13[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke;
    v13[3] = &unk_2644D2E58;
    void v13[4] = self;
    id v14 = v4;
    dispatch_sync(v8, v13);
  }
  else
  {
    os_log_type_t v9 = pk_General_log();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      BOOL v11 = pk_General_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support the message. Not sending message to get has active externally shared passes.", buf, 2u);
      }
    }
    if (v4)
    {
      int v12 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1006 userInfo:0];
      (*((void (**)(id, void, void *))v4 + 2))(v4, 0, v12);
    }
  }
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke(uint64_t a1)
{
  void v32[3] = *MEMORY[0x263EF8340];
  id v2 = [*(id *)(a1 + 32) provisioningService];
  char CanSendMessage = NPKProtoCanSendMessage(v2);

  id v4 = pk_General_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (CanSendMessage)
  {
    if (v5)
    {
      uint64_t v6 = pk_General_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Has active externally shared passes: sending message", buf, 2u);
      }
    }
    char v7 = objc_alloc_init(NPKProtoHasActiveExternallySharedPassesRequest);
    id v8 = objc_alloc(MEMORY[0x263F4A228]);
    os_log_type_t v9 = [(NPKProtoHasActiveExternallySharedPassesRequest *)v7 data];
    BOOL v10 = (void *)[v8 initWithProtobufData:v9 type:132 isResponse:0];

    uint64_t v11 = *MEMORY[0x263F49EC0];
    v31[0] = *MEMORY[0x263F49F08];
    v31[1] = v11;
    v32[0] = MEMORY[0x263EFFA88];
    v32[1] = MEMORY[0x263EFFA88];
    void v31[2] = *MEMORY[0x263F49F80];
    void v32[2] = &unk_26D0439F0;
    int v12 = [NSDictionary dictionaryWithObjects:v32 forKeys:v31 count:3];
    id v13 = [*(id *)(a1 + 32) _sendProtobuf:v10 responseExpected:1 extraOptions:v12 priority:300];
    if (v13)
    {
      if (*(void *)(a1 + 40))
      {
        id v14 = MEMORY[0x223C37380]();
        v27[0] = MEMORY[0x263EF8330];
        v27[1] = 3221225472;
        void v27[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke_993;
        void v27[3] = &unk_2644D2B90;
        id v28 = *(id *)(a1 + 40);
        uint64_t v15 = (void *)MEMORY[0x223C37380](v27);
        uint64_t v16 = *(void **)(a1 + 32);
        uint64_t v17 = (void *)MEMORY[0x223C37380](v14);
        [v16 _trackOutstandingRequestWithMessageIdentifier:v13 completionHandler:v17 errorHandler:v15];

LABEL_22:
        goto LABEL_23;
      }
      id v25 = pk_Payment_log();
      BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

      if (v26)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v30 = v13;
        uint64_t v22 = "Warning: No response expected for message with identifier %@";
        long long v23 = v14;
        os_log_type_t v24 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v20 = pk_Payment_log();
      BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

      if (v21)
      {
        id v14 = pk_Payment_log();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          goto LABEL_22;
        }
        *(_DWORD *)long long buf = 138412290;
        uint64_t v30 = v10;
        uint64_t v22 = "Error: No message identifier for protobuf %@";
        long long v23 = v14;
        os_log_type_t v24 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_21E92F000, v23, v24, v22, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  if (v5)
  {
    uint64_t v18 = pk_General_log();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_21E92F000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Has active externally shared passes, device is not connected, will not send message", buf, 2u);
    }
  }
  char v7 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1001 userInfo:0];
  uint64_t v19 = *(void *)(a1 + 40);
  if (v19) {
    (*(void (**)(uint64_t, void, NPKProtoHasActiveExternallySharedPassesRequest *))(v19 + 16))(v19, 0, v7);
  }
LABEL_24:
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke_993(uint64_t a1, void *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = pk_Payment_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    uint64_t v6 = pk_Payment_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v3;
      _os_log_impl(&dword_21E92F000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7)
  {
    id v8 = [MEMORY[0x263F087E8] errorWithDomain:@"com.apple.NPKErrorDomain" code:-1001 userInfo:0];
    (*(void (**)(uint64_t, void, void *))(v7 + 16))(v7, 0, v8);
  }
}

- (void)expressModeEnabledForPassIdentifier:(id)a3 completion:(id)a4
{
  id v5 = a3;
  uint64_t v6 = (void (**)(id, void))a4;
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  uint64_t v7 = NPKPairedDeviceCurrentExpressPassConfiguration();
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  _DWORD v9[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_expressModeEnabledForPassIdentifier_completion___block_invoke;
  v9[3] = &unk_2644D62B8;
  id v8 = v5;
  id v10 = v8;
  uint64_t v11 = &v12;
  [v7 enumerateObjectsUsingBlock:v9];
  if (v6) {
    v6[2](v6, *((unsigned __int8 *)v13 + 24));
  }

  _Block_object_dispose(&v12, 8);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_expressModeEnabledForPassIdentifier_completion___block_invoke(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = [a2 passUniqueIdentifier];
  int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  if (v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }
}

- (void)passcodeChangeCoordinator:(id)a3 remoteDeviceShouldInitiatePasscodeChangeForType:(unint64_t)a4 completion:(id)a5
{
  id v7 = a5;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  _DWORD v9[2] = __130__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldInitiatePasscodeChangeForType_completion___block_invoke;
  v9[3] = &unk_2644D8408;
  id v10 = v7;
  unint64_t v11 = a4;
  id v8 = v7;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self presentRemoteDevicePasscodeUpgradePromptForChangeType:a4 completion:v9];
}

void __130__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldInitiatePasscodeChangeForType_completion___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v5 = a3;
  int v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = NSStringFromNPKPasscodeUpgradeChangeType(*(void *)(a1 + 40));
      id v10 = @"NO";
      int v12 = 138412802;
      id v13 = v9;
      __int16 v14 = 2112;
      if (a2) {
        id v10 = @"YES";
      }
      char v15 = v10;
      __int16 v16 = 2112;
      id v17 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Remote device prompted for passcode change (%@) with success: %@, error: %@", (uint8_t *)&v12, 0x20u);
    }
  }
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, uint64_t, id))(v11 + 16))(v11, a2, v5);
  }
}

- (void)passcodeChangeCoordinator:(id)a3 remoteDeviceShouldCancelPasscodeChangeWithCompletion:(id)a4
{
  id v5 = a4;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __124__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldCancelPasscodeChangeWithCompletion___block_invoke;
  v7[3] = &unk_2644D28C0;
  id v8 = v5;
  id v6 = v5;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self dismissRemoteDevicePasscodeUpgradePromptWithCompletion:v7];
}

void __124__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldCancelPasscodeChangeWithCompletion___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v5 = a3;
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    id v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = @"NO";
      if (a2) {
        int v9 = @"YES";
      }
      int v11 = 138412546;
      int v12 = v9;
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Remote device dismissed passcode upgrade prompt with success: %@, error: %@", (uint8_t *)&v11, 0x16u);
    }
  }
  uint64_t v10 = *(void *)(a1 + 32);
  if (v10) {
    (*(void (**)(uint64_t, uint64_t, id))(v10 + 16))(v10, a2, v5);
  }
}

- (void)passcodeChangeCoordinator:(id)a3 checkRemoteDeviceLockStateWithCompletion:(id)a4
{
  id v5 = a4;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __112__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_checkRemoteDeviceLockStateWithCompletion___block_invoke;
  v7[3] = &unk_2644D4540;
  id v8 = v5;
  id v6 = v5;
  [(NPKPaymentWebServiceCompanionTargetDevice *)self fetchRemoteDevicePasscodeStateWithCompletion:v7];
}

void __112__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_checkRemoteDeviceLockStateWithCompletion___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v6 = a4;
  BOOL v7 = pk_Payment_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    int v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = @"NO";
      if (a3) {
        uint64_t v10 = @"YES";
      }
      int v12 = 138412546;
      __int16 v13 = v10;
      __int16 v14 = 2112;
      id v15 = v6;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Remote device is passcode locked: %@, error: %@", (uint8_t *)&v12, 0x16u);
    }
  }
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, uint64_t, id))(v11 + 16))(v11, a3, v6);
  }
}

- (void)_addCompanionDevicePhoneNumberDataIfNeededWithFields:(unint64_t)a3 toDeviceMetadata:(id)a4
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v5 = a4;
  id v6 = pk_Payment_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    BOOL v8 = pk_Payment_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 134217984;
      unint64_t v24 = a3;
      _os_log_impl(&dword_21E92F000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Verifying whether phone number data needs to be added for fields: %lu", (uint8_t *)&v23, 0xCu);
    }
  }
  if (v5)
  {
    if (NPKPairedOrPairingDeviceIsTinker())
    {
      int v9 = pk_Payment_log();
      BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        uint64_t v11 = pk_Payment_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v23) = 0;
          _os_log_impl(&dword_21E92F000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Phone number data not applicable for family device", (uint8_t *)&v23, 2u);
        }
LABEL_27:
      }
    }
    else
    {
      if ((a3 & 0x20) != 0)
      {
        int v12 = PKDevicePhoneNumber();
        if ([v12 length]) {
          [v5 setPhoneNumber:v12];
        }
        __int16 v13 = pk_Payment_log();
        BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

        if (v14)
        {
          id v15 = pk_Payment_log();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            int v23 = 138412290;
            unint64_t v24 = (unint64_t)v12;
            _os_log_impl(&dword_21E92F000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Phone number %@ to be added", (uint8_t *)&v23, 0xCu);
          }
        }
      }
      if ((a3 & 0x40) != 0)
      {
        uint64_t v16 = PKDevicePhoneNumberSignature();
        uint64_t v11 = v16;
        if (v16)
        {
          id v17 = [v16 objectForKeyedSubscript:*MEMORY[0x263F034F8]];
          uint64_t v18 = [v11 objectForKeyedSubscript:*MEMORY[0x263F03500]];
          [v5 setSignedPhoneNumber:v17];
          [v5 setSignedPhoneNumberVersion:v18];
        }
        else
        {
          id v17 = 0;
          uint64_t v18 = 0;
        }
        uint64_t v19 = pk_Payment_log();
        BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

        if (v20)
        {
          BOOL v21 = pk_Payment_log();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v22 = [v17 length];
            int v23 = 134218242;
            unint64_t v24 = v22;
            __int16 v25 = 2112;
            BOOL v26 = v18;
            _os_log_impl(&dword_21E92F000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Phone number signature (%lu characters long) and version %@ to be added", (uint8_t *)&v23, 0x16u);
          }
        }
        goto LABEL_27;
      }
    }
  }
}

- (void)_acquireAssertionOfType:(unint64_t)a3
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v5 = pk_Payment_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    BOOL v7 = pk_Payment_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 134217984;
      unint64_t v11 = a3;
      _os_log_impl(&dword_21E92F000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Acquiring assertion of type:%lu", (uint8_t *)&v10, 0xCu);
    }
  }
  BOOL v8 = [(NPKPaymentWebServiceCompanionTargetDevice *)self remoteDeviceAssertionManager];
  id v9 = (id)[v8 acquireAssertionOfType:a3];
}

- (void)_invalidateAssertionOfType:(unint64_t)a3
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v5 = [(NPKPaymentWebServiceCompanionTargetDevice *)self remoteDeviceAssertionManager];
  BOOL v6 = [v5 assertionsUUIDsOfType:a3];
  BOOL v7 = [v6 lastObject];

  BOOL v8 = pk_Payment_log();
  LODWORD(v6) = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    id v9 = pk_Payment_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 134218242;
      unint64_t v14 = a3;
      __int16 v15 = 2112;
      uint64_t v16 = v7;
      _os_log_impl(&dword_21E92F000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Invalidating assertion of type:%lu UUID:%@", (uint8_t *)&v13, 0x16u);
    }
  }
  if (v7)
  {
    int v10 = [(NPKPaymentWebServiceCompanionTargetDevice *)self remoteDeviceAssertionManager];
    [v10 invalidateAssertionWithUUID:v7];
  }
  else
  {
    unint64_t v11 = pk_Payment_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (!v12) {
      goto LABEL_8;
    }
    int v10 = pk_Payment_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Warning: We don't have any assertion to invalidate", (uint8_t *)&v13, 2u);
    }
  }

LABEL_8:
}

- (void)_trackOutstandingRequestWithMessageIdentifier:(id)a3 completionHandler:(id)a4 errorHandler:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  unint64_t v11 = objc_alloc_init(NPKProvisioningServiceOutstandingRequest);
  [(NPKProvisioningServiceOutstandingRequest *)v11 setCompletionHandler:v9];
  [(NPKProvisioningServiceOutstandingRequest *)v11 setErrorHandler:v10];
  [(NPKProvisioningServiceOutstandingRequest *)v11 setMessageIdentifier:v8];
  objc_initWeak(&location, self);
  uint64_t v15 = MEMORY[0x263EF8330];
  uint64_t v16 = 3221225472;
  uint64_t v17 = __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke;
  uint64_t v18 = &unk_2644D33D8;
  objc_copyWeak(&v21, &location);
  id v12 = v8;
  id v19 = v12;
  id v13 = v10;
  id v20 = v13;
  [(NPKProvisioningServiceOutstandingRequest *)v11 setTimeoutHandler:&v15];
  -[NPKProvisioningServiceOutstandingRequest setTimeoutQueue:](v11, "setTimeoutQueue:", self->_internalQueue, v15, v16, v17, v18);
  unint64_t v14 = [(NPKPaymentWebServiceCompanionTargetDevice *)self outstandingRequests];
  [v14 setObject:v11 forKey:v12];

  [(NPKProvisioningServiceOutstandingRequest *)v11 setOrResetCleanupTimer];
  objc_destroyWeak(&v21);
  objc_destroyWeak(&location);
}

void __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id WeakRetained = (dispatch_queue_t *)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    dispatch_assert_queue_V2(WeakRetained[6]);
    id v4 = [(dispatch_queue_t *)v3 outstandingRequests];
    id v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 32)];

    BOOL v6 = [v5 errorHandler];
    BOOL v7 = [(dispatch_queue_t *)v3 outstandingRequests];
    [v7 removeObjectForKey:*(void *)(a1 + 32)];

    if (*(void *)(a1 + 40))
    {
      id v8 = pk_Payment_log();
      BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        id v10 = pk_Payment_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v11 = *(void *)(a1 + 32);
          *(_DWORD *)long long buf = 138412290;
          uint64_t v18 = v11;
          _os_log_impl(&dword_21E92F000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Timed out waiting for response; invoking error handler for message %@",
            buf,
            0xCu);
        }
      }
      id v12 = NPKGetIDSCommunicationError();
      v14[0] = MEMORY[0x263EF8330];
      v14[1] = 3221225472;
      v14[2] = __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke_996;
      v14[3] = &unk_2644D3FF0;
      id v15 = v12;
      id v16 = v6;
      id v13 = v12;
      dispatch_async(MEMORY[0x263EF83A0], v14);
    }
  }
}

uint64_t __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke_996(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

- (id)_sendProtobuf:(id)a3 responseIdentifier:(id)a4
{
  v12[1] = *MEMORY[0x263EF8340];
  id v6 = a3;
  if (a4)
  {
    uint64_t v11 = *MEMORY[0x263F49F40];
    v12[0] = a4;
    BOOL v7 = NSDictionary;
    id v8 = a4;
    a4 = [v7 dictionaryWithObjects:v12 forKeys:&v11 count:1];
  }
  BOOL v9 = [(NPKPaymentWebServiceCompanionTargetDevice *)self _sendProtobuf:v6 responseExpected:0 extraOptions:a4];

  return v9;
}

- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4
{
  return [(NPKPaymentWebServiceCompanionTargetDevice *)self _sendProtobuf:a3 responseExpected:a4 extraOptions:0];
}

- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4 extraOptions:(id)a5
{
  return [(NPKPaymentWebServiceCompanionTargetDevice *)self _sendProtobuf:a3 responseExpected:a4 extraOptions:a5 priority:200];
}

- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4 extraOptions:(id)a5 priority:(int64_t)a6
{
  BOOL v8 = a4;
  id v10 = a3;
  id v11 = a5;
  id v12 = [MEMORY[0x263EFF9A0] dictionary];
  id v13 = v12;
  if (v8) {
    unint64_t v14 = &unk_26D0439E0;
  }
  else {
    unint64_t v14 = &unk_26D043A00;
  }
  [v12 setObject:v14 forKey:*MEMORY[0x263F49F80]];
  if (v11) {
    [v13 addEntriesFromDictionary:v11];
  }
  if (![(NPKPaymentWebServiceCompanionTargetDevice *)self context])
  {
    uint64_t v15 = MEMORY[0x263EFFA88];
    [v13 setObject:MEMORY[0x263EFFA88] forKey:*MEMORY[0x263F49F08]];
    [v13 setObject:v15 forKey:*MEMORY[0x263F49EC0]];
    id v16 = [v10 data];
    unint64_t v17 = [v16 length];

    if (v17 <= 0x100000) {
      a6 = 300;
    }
  }
  uint64_t v18 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  _DWORD v22[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__sendProtobuf_responseExpected_extraOptions_priority___block_invoke;
  v22[3] = &unk_2644D29D0;
  id v23 = v10;
  id v19 = v10;
  id v20 = NPKProtoSendWithOptions(v18, v19, a6, 0, v8, v22, v13);

  return v20;
}

void __98__NPKPaymentWebServiceCompanionTargetDevice__sendProtobuf_responseExpected_extraOptions_priority___block_invoke(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v2 = pk_Payment_log();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);

  if (v3)
  {
    id v4 = pk_Payment_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_impl(&dword_21E92F000, v4, OS_LOG_TYPE_ERROR, "Error: IDS failed to send protobuf %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

- (id)_serialNumbersOfAllPairedDevices
{
  id v2 = [MEMORY[0x263F57730] sharedInstance];
  BOOL v3 = [MEMORY[0x263EFF980] array];
  id v4 = [v2 getAllDevices];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __77__NPKPaymentWebServiceCompanionTargetDevice__serialNumbersOfAllPairedDevices__block_invoke;
  v7[3] = &unk_2644D43E0;
  id v5 = v3;
  id v8 = v5;
  [v4 enumerateObjectsUsingBlock:v7];

  return v5;
}

void __77__NPKPaymentWebServiceCompanionTargetDevice__serialNumbersOfAllPairedDevices__block_invoke(uint64_t a1, void *a2)
{
  BOOL v3 = [a2 valueForProperty:*MEMORY[0x263F57648]];
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    BOOL v3 = v4;
  }
}

- (BOOL)deviceSupportMultipleExpressPasses
{
  id v2 = NPKPairedOrPairingDevice();
  if (v2)
  {
    BOOL v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"AB2653AC-2D55-4D7D-9BFB-7D99AA89708B"];
    char v4 = [v2 supportsCapability:v3];
  }
  else
  {
    char v4 = 0;
  }

  return v4;
}

- (BOOL)deviceSupportTransitReminderSetting
{
  id v2 = NPKPairedOrPairingDevice();
  BOOL v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"66A5B423-7CBE-423C-A13B-6389E27D63B9"];
  char v4 = [v2 supportsCapability:v3];

  return v4;
}

- (BOOL)_deviceIsConnected
{
  id v2 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  char v3 = NPKIsConnectedToPairedOrPairingDeviceFromService(v2);

  return v3;
}

- (NPKCompanionAgentConnection)companionAgentConnection
{
  companionAgentConnection = self->_companionAgentConnection;
  if (!companionAgentConnection)
  {
    char v4 = objc_alloc_init(NPKCompanionAgentConnection);
    id v5 = self->_companionAgentConnection;
    self->_companionAgentConnection = v4;

    companionAgentConnection = self->_companionAgentConnection;
  }
  return companionAgentConnection;
}

- (id)_expressPassesInformationFromDataArray:(id)a3
{
  if (a3)
  {
    char v3 = (void *)MEMORY[0x263EFF9C0];
    id v4 = a3;
    id v5 = [v3 set];
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    _DWORD v8[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__expressPassesInformationFromDataArray___block_invoke;
    v8[3] = &unk_2644D7830;
    id v6 = v5;
    id v9 = v6;
    [v4 enumerateObjectsUsingBlock:v8];
  }
  else
  {
    id v6 = 0;
  }
  return v6;
}

void __84__NPKPaymentWebServiceCompanionTargetDevice__expressPassesInformationFromDataArray___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  id v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) addObject:v6];
    id v5 = v6;
  }
}

- (id)_expressPassesConfigurationFromDataArray:(id)a3
{
  if (a3)
  {
    id v3 = (void *)MEMORY[0x263EFF9C0];
    id v4 = a3;
    id v5 = [v3 set];
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 3221225472;
    _DWORD v8[2] = __86__NPKPaymentWebServiceCompanionTargetDevice__expressPassesConfigurationFromDataArray___block_invoke;
    v8[3] = &unk_2644D7830;
    id v6 = v5;
    id v9 = v6;
    [v4 enumerateObjectsUsingBlock:v8];
  }
  else
  {
    id v6 = 0;
  }
  return v6;
}

void __86__NPKPaymentWebServiceCompanionTargetDevice__expressPassesConfigurationFromDataArray___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v3) {
    [*(id *)(a1 + 32) addObject:v5];
  }
}

- (id)_expressModesFromExpressPassConfigurations:(id)a3
{
  id v3 = (void *)MEMORY[0x263EFF9C0];
  id v4 = a3;
  id v5 = [v3 set];
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  _DWORD v8[2] = __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke;
  v8[3] = &unk_2644D7B78;
  id v6 = v5;
  id v9 = v6;
  [v4 enumerateObjectsUsingBlock:v8];

  return v6;
}

void __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 passInformation];
  id v5 = [v4 expressMode];

  if (v5)
  {
    [*(id *)(a1 + 32) addObject:v5];
  }
  else
  {
    id v6 = [v3 passInformation];
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 3221225472;
    v7[2] = __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke_2;
    v7[3] = &unk_2644D8430;
    id v8 = *(id *)(a1 + 32);
    [v6 enumerateCriteriaWithHandler:v7];
  }
}

void __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v4 = a3;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = [*(id *)(*((void *)&v10 + 1) + 8 * v8) type];
        if (v9) {
          [*(id *)(a1 + 32) addObject:v9];
        }

        ++v8;
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v6);
  }
}

- (id)_categoryIdentifierForPass:(id)a3
{
  return (id)MEMORY[0x270F51CC8](a3, a2);
}

- (NPKCompanionPasscodeChangeCoordinatorProtocol)passcodeChangeCoordinator
{
  passcodeChangeCoordinator = self->_passcodeChangeCoordinator;
  if (!passcodeChangeCoordinator)
  {
    id v4 = [MEMORY[0x263F086E0] bundleWithPath:@"/System/Library/NanoPreferenceBundles/Applications/NanoPassbookBridgeSettings.bundle"];
    uint64_t v5 = (NPKCompanionPasscodeChangeCoordinatorProtocol *)objc_alloc_init((Class)[v4 classNamed:@"NPKCompanionPasscodeChangeCoordinator"]);
    uint64_t v6 = self->_passcodeChangeCoordinator;
    self->_passcodeChangeCoordinator = v5;

    uint64_t v7 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeUpgradeFlowController];
    [(NPKCompanionPasscodeChangeCoordinatorProtocol *)self->_passcodeChangeCoordinator setFlowController:v7];

    [(NPKCompanionPasscodeChangeCoordinatorProtocol *)self->_passcodeChangeCoordinator setDelegate:self];
    passcodeChangeCoordinator = self->_passcodeChangeCoordinator;
  }
  return passcodeChangeCoordinator;
}

- (void)setPasscodeUpgradeFlowController:(id)a3
{
  p_passcodeUpgradeFlowController = &self->_passcodeUpgradeFlowController;
  id v5 = a3;
  objc_storeWeak(p_passcodeUpgradeFlowController, v5);
  id v6 = [(NPKPaymentWebServiceCompanionTargetDevice *)self passcodeChangeCoordinator];
  [v6 setFlowController:v5];
}

- (id)_statusUpdaterWithResponseClass:(Class)a3 type:(unsigned __int16)a4 responseIdentifier:(id)a5
{
  uint64_t v5 = a4;
  id v8 = a5;
  id v9 = objc_alloc_init(a3);
  if (objc_opt_respondsToSelector()) {
    [v9 setPending:1];
  }
  long long v10 = [MEMORY[0x263EFF9A0] dictionary];
  if (![(NPKPaymentWebServiceCompanionTargetDevice *)self context]) {
    [v10 setObject:MEMORY[0x263EFFA88] forKey:*MEMORY[0x263F49F08]];
  }
  id v11 = objc_alloc(MEMORY[0x263F4A228]);
  long long v12 = [v9 data];
  long long v13 = (void *)[v11 initWithProtobufData:v12 type:v5 isResponse:1];

  unint64_t v14 = [NPKIDSHeartbeat alloc];
  uint64_t v15 = [(NPKPaymentWebServiceCompanionTargetDevice *)self provisioningService];
  id v16 = [(NPKIDSHeartbeat *)v14 initWithPendingStatusProtobuf:v13 service:v15 priority:200 maxUpdates:-1 responseIdentifier:v8 sendOptions:v10 queue:self->_internalQueue];

  return v16;
}

- (NPKSubcredentialInvitationCoordinator)subcredentialInvitationCoordinator
{
  subcredentialInvitationCoordinator = self->_subcredentialInvitationCoordinator;
  if (!subcredentialInvitationCoordinator)
  {
    id v4 = objc_alloc_init(NPKSubcredentialInvitationCoordinator);
    uint64_t v5 = self->_subcredentialInvitationCoordinator;
    self->_subcredentialInvitationCoordinator = v4;

    subcredentialInvitationCoordinator = self->_subcredentialInvitationCoordinator;
  }
  return subcredentialInvitationCoordinator;
}

- (PUConnection)passcodeConnection
{
  passcodeConnection = self->_passcodeConnection;
  if (!passcodeConnection)
  {
    uint64_t v10 = 0;
    id v11 = &v10;
    uint64_t v12 = 0x2050000000;
    id v4 = (void *)getPUConnectionClass_softClass_0;
    uint64_t v13 = getPUConnectionClass_softClass_0;
    if (!getPUConnectionClass_softClass_0)
    {
      v9[0] = MEMORY[0x263EF8330];
      v9[1] = 3221225472;
      _DWORD v9[2] = __getPUConnectionClass_block_invoke_0;
      v9[3] = &unk_2644D30F8;
      void v9[4] = &v10;
      __getPUConnectionClass_block_invoke_0((uint64_t)v9);
      id v4 = (void *)v11[3];
    }
    uint64_t v5 = v4;
    _Block_object_dispose(&v10, 8);
    id v6 = (PUConnection *)objc_alloc_init(v5);
    uint64_t v7 = self->_passcodeConnection;
    self->_passcodeConnection = v6;

    passcodeConnection = self->_passcodeConnection;
  }
  return passcodeConnection;
}

- (void)_updateDataAccessorForPass:(id)a3
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v3 = a3;
  if (v3)
  {
    id v4 = objc_alloc(MEMORY[0x263F5BEA0]);
    uint64_t v5 = NPKURLForPass(v3);
    id v18 = 0;
    id v6 = (void *)[v4 initWithFileURL:v5 error:&v18];
    id v7 = v18;
    [v3 setDataAccessor:v6];

    id v8 = pk_General_log();
    id v9 = v8;
    if (v7)
    {
      BOOL v10 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

      if (v10)
      {
        id v11 = pk_General_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          uint64_t v12 = [v3 uniqueID];
          *(_DWORD *)long long buf = 138412546;
          id v20 = v12;
          __int16 v21 = 2112;
          id v22 = v7;
          uint64_t v13 = "Error: Error updating data accessor for pass: %@. Error: %@";
          unint64_t v14 = v11;
          os_log_type_t v15 = OS_LOG_TYPE_ERROR;
          uint32_t v16 = 22;
LABEL_9:
          _os_log_impl(&dword_21E92F000, v14, v15, v13, buf, v16);

          goto LABEL_10;
        }
        goto LABEL_10;
      }
    }
    else
    {
      BOOL v17 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v17)
      {
        id v11 = pk_General_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v12 = [v3 uniqueID];
          *(_DWORD *)long long buf = 138412290;
          id v20 = v12;
          uint64_t v13 = "Notice: Successfully updated data accessor for pass: %@";
          unint64_t v14 = v11;
          os_log_type_t v15 = OS_LOG_TYPE_DEFAULT;
          uint32_t v16 = 12;
          goto LABEL_9;
        }
LABEL_10:
      }
    }
  }
}

- (NPKPaymentWebServiceCompanionTargetDeviceDelegate)delegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  return (NPKPaymentWebServiceCompanionTargetDeviceDelegate *)WeakRetained;
}

- (void)setDelegate:(id)a3
{
}

- (unint64_t)context
{
  return self->_context;
}

- (void)setContext:(unint64_t)a3
{
  self->_context = a3;
}

- (IDSService)provisioningService
{
  return self->_provisioningService;
}

- (void)setProvisioningService:(id)a3
{
}

- (void)setCompanionAgentConnection:(id)a3
{
}

- (NSMutableDictionary)outstandingRequests
{
  return self->_outstandingRequests;
}

- (void)setOutstandingRequests:(id)a3
{
}

- (OS_dispatch_queue)internalQueue
{
  return self->_internalQueue;
}

- (void)setInternalQueue:(id)a3
{
}

- (OS_dispatch_queue)responseQueue
{
  return self->_responseQueue;
}

- (void)setResponseQueue:(id)a3
{
}

- (NRActiveDeviceAssertion)provisioningActiveDeviceAssertion
{
  return self->_provisioningActiveDeviceAssertion;
}

- (void)setProvisioningActiveDeviceAssertion:(id)a3
{
}

- (NPKTargetDeviceAssertionManager)remoteDeviceAssertionManager
{
  return self->_remoteDeviceAssertionManager;
}

- (void)setRemoteDeviceAssertionManager:(id)a3
{
}

- (void)setManager:(id)a3
{
}

- (void)setPasscodeChangeCoordinator:(id)a3
{
}

- (id)passcodeUpgradeFlowController
{
  id WeakRetained = objc_loadWeakRetained(&self->_passcodeUpgradeFlowController);
  return WeakRetained;
}

- (void)setSubcredentialInvitationCoordinator:(id)a3
{
}

- (void)setPasscodeConnection:(id)a3
{
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_passcodeConnection, 0);
  objc_storeStrong((id *)&self->_subcredentialInvitationCoordinator, 0);
  objc_destroyWeak(&self->_passcodeUpgradeFlowController);
  objc_storeStrong((id *)&self->_passcodeChangeCoordinator, 0);
  objc_storeStrong((id *)&self->_manager, 0);
  objc_storeStrong((id *)&self->_remoteDeviceAssertionManager, 0);
  objc_storeStrong((id *)&self->_provisioningActiveDeviceAssertion, 0);
  objc_storeStrong((id *)&self->_responseQueue, 0);
  objc_storeStrong((id *)&self->_internalQueue, 0);
  objc_storeStrong((id *)&self->_outstandingRequests, 0);
  objc_storeStrong((id *)&self->_companionAgentConnection, 0);
  objc_storeStrong((id *)&self->_provisioningService, 0);
  objc_destroyWeak((id *)&self->_delegate);
}

@end